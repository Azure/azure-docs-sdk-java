### YamlMime:JavaType
uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource"
fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource"
name: "ContainerRegistryEventSource"
nameWithType: "ContainerRegistryEventSource"
summary: "The registry node that generated the event."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ContainerRegistryEventSource**"
constructors:
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.ContainerRegistryEventSource()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.ContainerRegistryEventSource()"
  name: "ContainerRegistryEventSource()"
  nameWithType: "ContainerRegistryEventSource.ContainerRegistryEventSource()"
  syntax: "public ContainerRegistryEventSource()"
methods:
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.addr()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.addr()"
  name: "addr()"
  nameWithType: "ContainerRegistryEventSource.addr()"
  summary: "Get the IP or hostname and the port of the registry node that generated the event."
  syntax: "public String addr()"
  desc: "Get the IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port."
  returns:
    description: "the addr value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.instanceID()"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.instanceID()"
  name: "instanceID()"
  nameWithType: "ContainerRegistryEventSource.instanceID()"
  summary: "Get the running instance of an application."
  syntax: "public String instanceID()"
  desc: "Get the running instance of an application. Changes after each restart."
  returns:
    description: "the instanceID value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.withAddr(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.withAddr(String addr)"
  name: "withAddr(String addr)"
  nameWithType: "ContainerRegistryEventSource.withAddr(String addr)"
  summary: "Set the IP or hostname and the port of the registry node that generated the event."
  parameters:
  - description: "the addr value to set"
    name: "addr"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventSource withAddr(String addr)"
  desc: "Set the IP or hostname and the port of the registry node that generated the event. Generally, this will be resolved by os.Hostname() along with the running port."
  returns:
    description: "the ContainerRegistryEventSource object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource&text=ContainerRegistryEventSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.withInstanceID(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource.withInstanceID(String instanceID)"
  name: "withInstanceID(String instanceID)"
  nameWithType: "ContainerRegistryEventSource.withInstanceID(String instanceID)"
  summary: "Set the running instance of an application."
  parameters:
  - description: "the instanceID value to set"
    name: "instanceID"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ContainerRegistryEventSource withInstanceID(String instanceID)"
  desc: "Set the running instance of an application. Changes after each restart."
  returns:
    description: "the ContainerRegistryEventSource object itself."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource?alt=com.microsoft.azure.eventgrid.models.ContainerRegistryEventSource&text=ContainerRegistryEventSource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
metadata: {}
package: "com.microsoft.azure.eventgrid.models"
artifact: com.microsoft.azure:azure-eventgrid:1.3.0
