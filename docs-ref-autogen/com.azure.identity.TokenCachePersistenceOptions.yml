### YamlMime:JavaType
uid: "com.azure.identity.TokenCachePersistenceOptions"
fullName: "com.azure.identity.TokenCachePersistenceOptions"
name: "TokenCachePersistenceOptions"
nameWithType: "TokenCachePersistenceOptions"
summary: "Represents the Persistence Token Cache options used to setup the persistent access token cache."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TokenCachePersistenceOptions"
constructors:
- uid: "com.azure.identity.TokenCachePersistenceOptions.TokenCachePersistenceOptions()"
  fullName: "com.azure.identity.TokenCachePersistenceOptions.TokenCachePersistenceOptions()"
  name: "TokenCachePersistenceOptions()"
  nameWithType: "TokenCachePersistenceOptions.TokenCachePersistenceOptions()"
  syntax: "public TokenCachePersistenceOptions()"
methods:
- uid: "com.azure.identity.TokenCachePersistenceOptions.getName()"
  fullName: "com.azure.identity.TokenCachePersistenceOptions.getName()"
  name: "getName()"
  nameWithType: "TokenCachePersistenceOptions.getName()"
  summary: "Get the name uniquely identifying the cache."
  syntax: "public String getName()"
  desc: "Get the name uniquely identifying the cache."
  returns:
    description: "the name of the cache."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.TokenCachePersistenceOptions.isUnencryptedStorageAllowed()"
  fullName: "com.azure.identity.TokenCachePersistenceOptions.isUnencryptedStorageAllowed()"
  name: "isUnencryptedStorageAllowed()"
  nameWithType: "TokenCachePersistenceOptions.isUnencryptedStorageAllowed()"
  summary: "Gets the status whether unencrypted storage is allowed for the persistent token cache."
  syntax: "public boolean isUnencryptedStorageAllowed()"
  desc: "Gets the status whether unencrypted storage is allowed for the persistent token cache."
  returns:
    description: "The status indicating if unencrypted storage is allowed for the persistent token cache."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.TokenCachePersistenceOptions.setName(java.lang.String)"
  fullName: "com.azure.identity.TokenCachePersistenceOptions.setName(String name)"
  name: "setName(String name)"
  nameWithType: "TokenCachePersistenceOptions.setName(String name)"
  summary: "Set the name uniquely identifying the cache."
  parameters:
  - description: "the name of the cache"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TokenCachePersistenceOptions setName(String name)"
  desc: "Set the name uniquely identifying the cache."
  returns:
    description: "the updated instance of the cache."
    type: "<xref href=\"com.azure.identity.TokenCachePersistenceOptions?alt=com.azure.identity.TokenCachePersistenceOptions&text=TokenCachePersistenceOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.TokenCachePersistenceOptions.setUnencryptedStorageAllowed(boolean)"
  fullName: "com.azure.identity.TokenCachePersistenceOptions.setUnencryptedStorageAllowed(boolean unencryptedStorageAllowed)"
  name: "setUnencryptedStorageAllowed(boolean unencryptedStorageAllowed)"
  nameWithType: "TokenCachePersistenceOptions.setUnencryptedStorageAllowed(boolean unencryptedStorageAllowed)"
  summary: "Allows to use an unprotected file specified by `cacheFileLocation()` instead of Gnome keyring on Linux."
  parameters:
  - description: "The flag indicating if unencrypted storage is allowed for the cache or not."
    name: "unencryptedStorageAllowed"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TokenCachePersistenceOptions setUnencryptedStorageAllowed(boolean unencryptedStorageAllowed)"
  desc: "Allows to use an unprotected file specified by `cacheFileLocation()` instead of Gnome keyring on Linux. This is restricted by default. For other platforms this setting currently doesn't apply."
  returns:
    description: "An updated instance of the options bag."
    type: "<xref href=\"com.azure.identity.TokenCachePersistenceOptions?alt=com.azure.identity.TokenCachePersistenceOptions&text=TokenCachePersistenceOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents the Persistence Token Cache options used to setup the persistent access token cache."
metadata: {}
package: "com.azure.identity"
artifact: com.azure:azure-identity:1.5.4
