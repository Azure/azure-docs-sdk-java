### YamlMime:JavaType
uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions"
fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions"
name: "BlobUploadFromUrlOptions"
nameWithType: "BlobUploadFromUrlOptions"
summary: "Extended options that may be passed when uploading a Block Blob from URL."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class BlobUploadFromUrlOptions"
constructors:
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.BlobUploadFromUrlOptions(java.lang.String)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.BlobUploadFromUrlOptions(String sourceUrl)"
  name: "BlobUploadFromUrlOptions(String sourceUrl)"
  nameWithType: "BlobUploadFromUrlOptions.BlobUploadFromUrlOptions(String sourceUrl)"
  parameters:
  - description: "The source URL to upload from."
    name: "sourceUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions(String sourceUrl)"
methods:
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getContentMd5()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getContentMd5()"
  name: "getContentMd5()"
  nameWithType: "BlobUploadFromUrlOptions.getContentMd5()"
  syntax: "public byte[] getContentMd5()"
  returns:
    description: "An MD5 hash of the content. This hash is used to verify the integrity of the content during transport.\n When this header is specified, the storage service compares the hash of the content that has arrived with this\n header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the operation\n will fail."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getCopySourceTagsMode()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getCopySourceTagsMode()"
  name: "getCopySourceTagsMode()"
  nameWithType: "BlobUploadFromUrlOptions.getCopySourceTagsMode()"
  syntax: "public BlobCopySourceTagsMode getCopySourceTagsMode()"
  returns:
    description: "The copy source tags mode."
    type: "<xref href=\"com.azure.storage.blob.models.BlobCopySourceTagsMode?alt=com.azure.storage.blob.models.BlobCopySourceTagsMode&text=BlobCopySourceTagsMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getDestinationRequestConditions()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getDestinationRequestConditions()"
  name: "getDestinationRequestConditions()"
  nameWithType: "BlobUploadFromUrlOptions.getDestinationRequestConditions()"
  syntax: "public BlobRequestConditions getDestinationRequestConditions()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getHeaders()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getHeaders()"
  name: "getHeaders()"
  nameWithType: "BlobUploadFromUrlOptions.getHeaders()"
  syntax: "public BlobHttpHeaders getHeaders()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getSourceAuthorization()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getSourceAuthorization()"
  name: "getSourceAuthorization()"
  nameWithType: "BlobUploadFromUrlOptions.getSourceAuthorization()"
  syntax: "public HttpAuthorization getSourceAuthorization()"
  returns:
    description: "auth header for access to source."
    type: "<xref href=\"com.azure.core.http.HttpAuthorization?alt=com.azure.core.http.HttpAuthorization&text=HttpAuthorization\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getSourceRequestConditions()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getSourceRequestConditions()"
  name: "getSourceRequestConditions()"
  nameWithType: "BlobUploadFromUrlOptions.getSourceRequestConditions()"
  syntax: "public BlobRequestConditions getSourceRequestConditions()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getSourceUrl()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getSourceUrl()"
  name: "getSourceUrl()"
  nameWithType: "BlobUploadFromUrlOptions.getSourceUrl()"
  syntax: "public String getSourceUrl()"
  returns:
    description: "The source URL to upload from."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getTags()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getTags()"
  name: "getTags()"
  nameWithType: "BlobUploadFromUrlOptions.getTags()"
  syntax: "public Map<String,String> getTags()"
  returns:
    description: "The tags to associate with the blob."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getTier()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.getTier()"
  name: "getTier()"
  nameWithType: "BlobUploadFromUrlOptions.getTier()"
  syntax: "public AccessTier getTier()"
  returns:
    description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.isCopySourceBlobProperties()"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.isCopySourceBlobProperties()"
  name: "isCopySourceBlobProperties()"
  nameWithType: "BlobUploadFromUrlOptions.isCopySourceBlobProperties()"
  summary: "Optional, default is true."
  syntax: "public Boolean isCopySourceBlobProperties()"
  desc: "Optional, default is true. Indicates if properties from the source blob should be copied."
  returns:
    description: "Whether properties from the source blob should be copied."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setContentMd5(byte[])"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setContentMd5(byte[] contentMd5)"
  name: "setContentMd5(byte[] contentMd5)"
  nameWithType: "BlobUploadFromUrlOptions.setContentMd5(byte[] contentMd5)"
  parameters:
  - description: "An MD5 hash of the block content. This hash is used to verify the integrity of the block during\n transport. When this header is specified, the storage service compares the hash of the content that has arrived\n with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the\n operation will fail."
    name: "contentMd5"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public BlobUploadFromUrlOptions setContentMd5(byte[] contentMd5)"
  returns:
    description: "The updated options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setCopySourceBlobProperties(java.lang.Boolean)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setCopySourceBlobProperties(Boolean copySourceBlobProperties)"
  name: "setCopySourceBlobProperties(Boolean copySourceBlobProperties)"
  nameWithType: "BlobUploadFromUrlOptions.setCopySourceBlobProperties(Boolean copySourceBlobProperties)"
  summary: "Optional, default is true."
  parameters:
  - description: "Whether properties from the source blob should be copied."
    name: "copySourceBlobProperties"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions setCopySourceBlobProperties(Boolean copySourceBlobProperties)"
  desc: "Optional, default is true. Indicates if properties from the source blob should be copied."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setCopySourceTagsMode(com.azure.storage.blob.models.BlobCopySourceTagsMode)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setCopySourceTagsMode(BlobCopySourceTagsMode copySourceTags)"
  name: "setCopySourceTagsMode(BlobCopySourceTagsMode copySourceTags)"
  nameWithType: "BlobUploadFromUrlOptions.setCopySourceTagsMode(BlobCopySourceTagsMode copySourceTags)"
  summary: "Sets the copy source tags mode"
  parameters:
  - description: "Indicates if a legal hold should be placed on the blob."
    name: "copySourceTags"
    type: "<xref href=\"com.azure.storage.blob.models.BlobCopySourceTagsMode?alt=com.azure.storage.blob.models.BlobCopySourceTagsMode&text=BlobCopySourceTagsMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions setCopySourceTagsMode(BlobCopySourceTagsMode copySourceTags)"
  desc: "Sets the copy source tags mode"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setDestinationRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setDestinationRequestConditions(BlobRequestConditions destinationRequestConditions)"
  name: "setDestinationRequestConditions(BlobRequestConditions destinationRequestConditions)"
  nameWithType: "BlobUploadFromUrlOptions.setDestinationRequestConditions(BlobRequestConditions destinationRequestConditions)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "destinationRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions setDestinationRequestConditions(BlobRequestConditions destinationRequestConditions)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setHeaders(com.azure.storage.blob.models.BlobHttpHeaders)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setHeaders(BlobHttpHeaders headers)"
  name: "setHeaders(BlobHttpHeaders headers)"
  nameWithType: "BlobUploadFromUrlOptions.setHeaders(BlobHttpHeaders headers)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobHttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobHttpHeaders\"></xref>"
    name: "headers"
    type: "<xref href=\"com.azure.storage.blob.models.BlobHttpHeaders?alt=com.azure.storage.blob.models.BlobHttpHeaders&text=BlobHttpHeaders\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions setHeaders(BlobHttpHeaders headers)"
  returns:
    description: "The updated options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setSourceAuthorization(com.azure.core.http.HttpAuthorization)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  name: "setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  nameWithType: "BlobUploadFromUrlOptions.setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  summary: "Sets \"Authorization\" header for accessing source URL."
  parameters:
  - description: "auth header for access to source."
    name: "sourceAuthorization"
    type: "<xref href=\"com.azure.core.http.HttpAuthorization?alt=com.azure.core.http.HttpAuthorization&text=HttpAuthorization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions setSourceAuthorization(HttpAuthorization sourceAuthorization)"
  desc: "Sets \"Authorization\" header for accessing source URL. Currently only \"Bearer\" authentication is accepted by Storage."
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setSourceRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  name: "setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  nameWithType: "BlobUploadFromUrlOptions.setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.BlobRequestConditions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobRequestConditions\"></xref>"
    name: "sourceRequestConditions"
    type: "<xref href=\"com.azure.storage.blob.models.BlobRequestConditions?alt=com.azure.storage.blob.models.BlobRequestConditions&text=BlobRequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions setSourceRequestConditions(BlobRequestConditions sourceRequestConditions)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setTags(Map<String,String> tags)"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "BlobUploadFromUrlOptions.setTags(Map<String,String> tags)"
  parameters:
  - description: "The tags to associate with the blob."
    name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public BlobUploadFromUrlOptions setTags(Map<String,String> tags)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setTier(com.azure.storage.blob.models.AccessTier)"
  fullName: "com.azure.storage.blob.options.BlobUploadFromUrlOptions.setTier(AccessTier tier)"
  name: "setTier(AccessTier tier)"
  nameWithType: "BlobUploadFromUrlOptions.setTier(AccessTier tier)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.models.AccessTier\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AccessTier\"></xref>"
    name: "tier"
    type: "<xref href=\"com.azure.storage.blob.models.AccessTier?alt=com.azure.storage.blob.models.AccessTier&text=AccessTier\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BlobUploadFromUrlOptions setTier(AccessTier tier)"
  returns:
    description: "The updated options."
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromUrlOptions?alt=com.azure.storage.blob.options.BlobUploadFromUrlOptions&text=BlobUploadFromUrlOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Extended options that may be passed when uploading a Block Blob from URL."
metadata: {}
package: "com.azure.storage.blob.options"
artifact: com.azure:azure-storage-blob:12.19.0
