### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosItemRequestOptions"
fullName: "com.azure.cosmos.models.CosmosItemRequestOptions"
name: "CosmosItemRequestOptions"
nameWithType: "CosmosItemRequestOptions"
summary: "Encapsulates options that can be specified for a request issued to cosmos Item."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CosmosItemRequestOptions"
constructors:
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.CosmosItemRequestOptions()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.CosmosItemRequestOptions()"
  name: "CosmosItemRequestOptions()"
  nameWithType: "CosmosItemRequestOptions.CosmosItemRequestOptions()"
  summary: "Constructor"
  syntax: "public CosmosItemRequestOptions()"
  desc: "Constructor"
methods:
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getConsistencyLevel()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getConsistencyLevel()"
  name: "getConsistencyLevel()"
  nameWithType: "CosmosItemRequestOptions.getConsistencyLevel()"
  summary: "Gets the consistency level required for the request."
  syntax: "public ConsistencyLevel getConsistencyLevel()"
  desc: "Gets the consistency level required for the request."
  returns:
    description: "the consistency level."
    type: "<xref href=\"com.azure.cosmos.ConsistencyLevel?alt=com.azure.cosmos.ConsistencyLevel&text=ConsistencyLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getDedicatedGatewayRequestOptions()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getDedicatedGatewayRequestOptions()"
  name: "getDedicatedGatewayRequestOptions()"
  nameWithType: "CosmosItemRequestOptions.getDedicatedGatewayRequestOptions()"
  summary: "Gets the Dedicated Gateway Request Options"
  syntax: "public DedicatedGatewayRequestOptions getDedicatedGatewayRequestOptions()"
  desc: "Gets the Dedicated Gateway Request Options"
  returns:
    description: "the Dedicated Gateway Request Options"
    type: "<xref href=\"com.azure.cosmos.models.DedicatedGatewayRequestOptions?alt=com.azure.cosmos.models.DedicatedGatewayRequestOptions&text=DedicatedGatewayRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfMatchETag()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfMatchETag()"
  name: "getIfMatchETag()"
  nameWithType: "CosmosItemRequestOptions.getIfMatchETag()"
  summary: "Gets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  syntax: "public String getIfMatchETag()"
  desc: "Gets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the ifMatchETag associated with the request."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfNoneMatchETag()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfNoneMatchETag()"
  name: "getIfNoneMatchETag()"
  nameWithType: "CosmosItemRequestOptions.getIfNoneMatchETag()"
  summary: "Gets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  syntax: "public String getIfNoneMatchETag()"
  desc: "Gets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the ifNoneMatchETag associated with the request."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getIndexingDirective()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getIndexingDirective()"
  name: "getIndexingDirective()"
  nameWithType: "CosmosItemRequestOptions.getIndexingDirective()"
  summary: "Gets the indexing directive (index, do not index etc)."
  syntax: "public IndexingDirective getIndexingDirective()"
  desc: "Gets the indexing directive (index, do not index etc)."
  returns:
    description: "the indexing directive."
    type: "<xref href=\"com.azure.cosmos.models.IndexingDirective?alt=com.azure.cosmos.models.IndexingDirective&text=IndexingDirective\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getPostTriggerInclude()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getPostTriggerInclude()"
  name: "getPostTriggerInclude()"
  nameWithType: "CosmosItemRequestOptions.getPostTriggerInclude()"
  summary: "Gets the triggers to be invoked after the operation."
  syntax: "public List<String> getPostTriggerInclude()"
  desc: "Gets the triggers to be invoked after the operation."
  returns:
    description: "the triggers to be invoked after the operation."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getPreTriggerInclude()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getPreTriggerInclude()"
  name: "getPreTriggerInclude()"
  nameWithType: "CosmosItemRequestOptions.getPreTriggerInclude()"
  summary: "Gets the triggers to be invoked before the operation."
  syntax: "public List<String> getPreTriggerInclude()"
  desc: "Gets the triggers to be invoked before the operation."
  returns:
    description: "the triggers to be invoked before the operation."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getSessionToken()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getSessionToken()"
  name: "getSessionToken()"
  nameWithType: "CosmosItemRequestOptions.getSessionToken()"
  summary: "Gets the token for use with session consistency."
  syntax: "public String getSessionToken()"
  desc: "Gets the token for use with session consistency."
  returns:
    description: "the session token."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getThresholdForDiagnosticsOnTracer()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getThresholdForDiagnosticsOnTracer()"
  name: "getThresholdForDiagnosticsOnTracer()"
  nameWithType: "CosmosItemRequestOptions.getThresholdForDiagnosticsOnTracer()"
  summary: "Gets the threshold<wbr>For<wbr>Diagnostics<wbr>OnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api."
  syntax: "public Duration getThresholdForDiagnosticsOnTracer()"
  desc: "Gets the thresholdForDiagnosticsOnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api. Default is 100 ms."
  returns:
    description: "thresholdForDiagnosticsOnTracerInMS the latency threshold for diagnostics on tracer."
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getThroughputControlGroupName()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getThroughputControlGroupName()"
  name: "getThroughputControlGroupName()"
  nameWithType: "CosmosItemRequestOptions.getThroughputControlGroupName()"
  summary: "Gets the throughput control group name."
  syntax: "public String getThroughputControlGroupName()"
  desc: "Gets the throughput control group name."
  returns:
    description: "the throughput control group name."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.isContentResponseOnWriteEnabled()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.isContentResponseOnWriteEnabled()"
  name: "isContentResponseOnWriteEnabled()"
  nameWithType: "CosmosItemRequestOptions.isContentResponseOnWriteEnabled()"
  summary: "Gets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on Cosmos<wbr>Item."
  syntax: "public Boolean isContentResponseOnWriteEnabled()"
  desc: "Gets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on CosmosItem. If set to false, service doesn't return a payload in the response. It reduces networking and CPU load by not sending the payload back over the network and serializing it on the client. This feature does not impact RU usage for read or write operations. NOTE: This flag is also present on <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref>, however if specified on <xref uid=\"com.azure.cosmos.models.CosmosItemRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosItemRequestOptions\"></xref>, it will override the value specified in <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref> for this request. By-default, this is null."
  returns:
    description: "a boolean indicating whether payload will be included in the response or not for this request."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  name: "setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  nameWithType: "CosmosItemRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  summary: "Sets the consistency level required for the request."
  parameters:
  - description: "the consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"com.azure.cosmos.ConsistencyLevel?alt=com.azure.cosmos.ConsistencyLevel&text=ConsistencyLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  desc: "Sets the consistency level required for the request. The effective consistency level can only be reduced for read/query requests. So when the Account's default consistency level is for example Session you can specify on a request-by-request level for individual requests that Eventual consistency is sufficient - which could reduce the latency and RU charges for this request but will not guarantee session consistency (read-your-own-write) anymore NOTE: If the consistency-level set on a request level here is SESSION and the default consistency level specified when constructing the CosmosClient instance via CosmosClientBuilder.consistencyLevel is not SESSION then session token capturing also needs to be enabled by calling CosmosClientBuilder:sessionCapturingOverrideEnabled(true) explicitly."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setContentResponseOnWriteEnabled(java.lang.Boolean)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  name: "setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  nameWithType: "CosmosItemRequestOptions.setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  summary: "Sets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on Cosmos<wbr>Item."
  parameters:
  - description: "a boolean indicating whether payload will be included\n in the response or not for this request"
    name: "contentResponseOnWriteEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  desc: "Sets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on CosmosItem. If set to false, service doesn't return payload in the response. It reduces networking and CPU load by not sending the payload back over the network and serializing it on the client. This feature does not impact RU usage for read or write operations. By-default, this is null. NOTE: This flag is also present on <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref>, however if specified on <xref uid=\"com.azure.cosmos.models.CosmosItemRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosItemRequestOptions\"></xref>, it will override the value specified in <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref> for this request."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setDedicatedGatewayRequestOptions(com.azure.cosmos.models.DedicatedGatewayRequestOptions)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  name: "setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  nameWithType: "CosmosItemRequestOptions.setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  summary: "Sets the Dedicated Gateway Request Options"
  parameters:
  - description: "Dedicated Gateway Request Options"
    name: "dedicatedGatewayRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.DedicatedGatewayRequestOptions?alt=com.azure.cosmos.models.DedicatedGatewayRequestOptions&text=DedicatedGatewayRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  desc: "Sets the Dedicated Gateway Request Options"
  returns:
    description: "the CosmosItemRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfMatchETag(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfMatchETag(String ifMatchETag)"
  name: "setIfMatchETag(String ifMatchETag)"
  nameWithType: "CosmosItemRequestOptions.setIfMatchETag(String ifMatchETag)"
  summary: "Sets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  parameters:
  - description: "the ifMatchETag associated with the request."
    name: "ifMatchETag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setIfMatchETag(String ifMatchETag)"
  desc: "Sets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the current request options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfNoneMatchETag(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfNoneMatchETag(String ifNoneMatchETag)"
  name: "setIfNoneMatchETag(String ifNoneMatchETag)"
  nameWithType: "CosmosItemRequestOptions.setIfNoneMatchETag(String ifNoneMatchETag)"
  summary: "Sets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  parameters:
  - description: "the ifNoneMatchETag associated with the request."
    name: "ifNoneMatchETag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setIfNoneMatchETag(String ifNoneMatchETag)"
  desc: "Sets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the current request options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setIndexingDirective(com.azure.cosmos.models.IndexingDirective)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setIndexingDirective(IndexingDirective indexingDirective)"
  name: "setIndexingDirective(IndexingDirective indexingDirective)"
  nameWithType: "CosmosItemRequestOptions.setIndexingDirective(IndexingDirective indexingDirective)"
  summary: "Sets the indexing directive (index, do not index etc)."
  parameters:
  - description: "the indexing directive."
    name: "indexingDirective"
    type: "<xref href=\"com.azure.cosmos.models.IndexingDirective?alt=com.azure.cosmos.models.IndexingDirective&text=IndexingDirective\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setIndexingDirective(IndexingDirective indexingDirective)"
  desc: "Sets the indexing directive (index, do not index etc)."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setPostTriggerInclude(java.util.List<java.lang.String>)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setPostTriggerInclude(List<String> postTriggerInclude)"
  name: "setPostTriggerInclude(List<String> postTriggerInclude)"
  nameWithType: "CosmosItemRequestOptions.setPostTriggerInclude(List<String> postTriggerInclude)"
  summary: "Sets the triggers to be invoked after the operation."
  parameters:
  - description: "the triggers to be invoked after the operation."
    name: "postTriggerInclude"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosItemRequestOptions setPostTriggerInclude(List<String> postTriggerInclude)"
  desc: "Sets the triggers to be invoked after the operation."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setPreTriggerInclude(java.util.List<java.lang.String>)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setPreTriggerInclude(List<String> preTriggerInclude)"
  name: "setPreTriggerInclude(List<String> preTriggerInclude)"
  nameWithType: "CosmosItemRequestOptions.setPreTriggerInclude(List<String> preTriggerInclude)"
  summary: "Sets the triggers to be invoked before the operation."
  parameters:
  - description: "the triggers to be invoked before the operation."
    name: "preTriggerInclude"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosItemRequestOptions setPreTriggerInclude(List<String> preTriggerInclude)"
  desc: "Sets the triggers to be invoked before the operation."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setSessionToken(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setSessionToken(String sessionToken)"
  name: "setSessionToken(String sessionToken)"
  nameWithType: "CosmosItemRequestOptions.setSessionToken(String sessionToken)"
  summary: "Sets the token for use with session consistency."
  parameters:
  - description: "the session token."
    name: "sessionToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setSessionToken(String sessionToken)"
  desc: "Sets the token for use with session consistency."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setThresholdForDiagnosticsOnTracer(java.time.Duration)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  name: "setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  nameWithType: "CosmosItemRequestOptions.setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  summary: "Sets the threshold<wbr>For<wbr>Diagnostics<wbr>OnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api."
  parameters:
  - description: "the latency threshold for diagnostics on tracer."
    name: "thresholdForDiagnosticsOnTracer"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  desc: "Sets the thresholdForDiagnosticsOnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api. Default is 100 ms."
  returns:
    description: "the CosmosItemRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setThroughputControlGroupName(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setThroughputControlGroupName(String throughputControlGroupName)"
  name: "setThroughputControlGroupName(String throughputControlGroupName)"
  nameWithType: "CosmosItemRequestOptions.setThroughputControlGroupName(String throughputControlGroupName)"
  summary: "Sets the throughput control group name."
  parameters:
  - description: "the throughput control group name."
    name: "throughputControlGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setThroughputControlGroupName(String throughputControlGroupName)"
  desc: "Sets the throughput control group name."
type: "class"
desc: "Encapsulates options that can be specified for a request issued to cosmos Item."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.34.0
