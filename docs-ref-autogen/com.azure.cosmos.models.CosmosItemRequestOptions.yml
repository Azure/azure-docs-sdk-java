### YamlMime:JavaType
uid: "com.azure.cosmos.models.CosmosItemRequestOptions"
fullName: "com.azure.cosmos.models.CosmosItemRequestOptions"
name: "CosmosItemRequestOptions"
nameWithType: "CosmosItemRequestOptions"
summary: "Encapsulates options that can be specified for a request issued to cosmos Item."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **CosmosItemRequestOptions**"
constructors:
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.CosmosItemRequestOptions()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.CosmosItemRequestOptions()"
  name: "CosmosItemRequestOptions()"
  nameWithType: "CosmosItemRequestOptions.CosmosItemRequestOptions()"
  summary: "Constructor"
  syntax: "public CosmosItemRequestOptions()"
  desc: "Constructor"
methods:
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getConsistencyLevel()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getConsistencyLevel()"
  name: "getConsistencyLevel()"
  nameWithType: "CosmosItemRequestOptions.getConsistencyLevel()"
  summary: "Gets the consistency level required for the request."
  syntax: "public ConsistencyLevel getConsistencyLevel()"
  desc: "Gets the consistency level required for the request."
  returns:
    description: "the consistency level."
    type: "<xref href=\"com.azure.cosmos.ConsistencyLevel?alt=com.azure.cosmos.ConsistencyLevel&text=ConsistencyLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getDedicatedGatewayRequestOptions()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getDedicatedGatewayRequestOptions()"
  name: "getDedicatedGatewayRequestOptions()"
  nameWithType: "CosmosItemRequestOptions.getDedicatedGatewayRequestOptions()"
  summary: "Gets the Dedicated Gateway Request Options"
  syntax: "public DedicatedGatewayRequestOptions getDedicatedGatewayRequestOptions()"
  desc: "Gets the Dedicated Gateway Request Options"
  returns:
    description: "the Dedicated Gateway Request Options"
    type: "<xref href=\"com.azure.cosmos.models.DedicatedGatewayRequestOptions?alt=com.azure.cosmos.models.DedicatedGatewayRequestOptions&text=DedicatedGatewayRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfMatchETag()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfMatchETag()"
  name: "getIfMatchETag()"
  nameWithType: "CosmosItemRequestOptions.getIfMatchETag()"
  summary: "Gets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  syntax: "public String getIfMatchETag()"
  desc: "Gets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the ifMatchETag associated with the request."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfNoneMatchETag()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getIfNoneMatchETag()"
  name: "getIfNoneMatchETag()"
  nameWithType: "CosmosItemRequestOptions.getIfNoneMatchETag()"
  summary: "Gets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  syntax: "public String getIfNoneMatchETag()"
  desc: "Gets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the ifNoneMatchETag associated with the request."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getIndexingDirective()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getIndexingDirective()"
  name: "getIndexingDirective()"
  nameWithType: "CosmosItemRequestOptions.getIndexingDirective()"
  summary: "Gets the indexing directive (index, do not index etc)."
  syntax: "public IndexingDirective getIndexingDirective()"
  desc: "Gets the indexing directive (index, do not index etc)."
  returns:
    description: "the indexing directive."
    type: "<xref href=\"com.azure.cosmos.models.IndexingDirective?alt=com.azure.cosmos.models.IndexingDirective&text=IndexingDirective\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getPostTriggerInclude()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getPostTriggerInclude()"
  name: "getPostTriggerInclude()"
  nameWithType: "CosmosItemRequestOptions.getPostTriggerInclude()"
  summary: "Gets the triggers to be invoked after the operation."
  syntax: "public List<String> getPostTriggerInclude()"
  desc: "Gets the triggers to be invoked after the operation."
  returns:
    description: "the triggers to be invoked after the operation."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getPreTriggerInclude()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getPreTriggerInclude()"
  name: "getPreTriggerInclude()"
  nameWithType: "CosmosItemRequestOptions.getPreTriggerInclude()"
  summary: "Gets the triggers to be invoked before the operation."
  syntax: "public List<String> getPreTriggerInclude()"
  desc: "Gets the triggers to be invoked before the operation."
  returns:
    description: "the triggers to be invoked before the operation."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getSessionToken()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getSessionToken()"
  name: "getSessionToken()"
  nameWithType: "CosmosItemRequestOptions.getSessionToken()"
  summary: "Gets the token for use with session consistency."
  syntax: "public String getSessionToken()"
  desc: "Gets the token for use with session consistency."
  returns:
    description: "the session token."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getThresholdForDiagnosticsOnTracer()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getThresholdForDiagnosticsOnTracer()"
  name: "getThresholdForDiagnosticsOnTracer()"
  nameWithType: "CosmosItemRequestOptions.getThresholdForDiagnosticsOnTracer()"
  summary: "Gets the threshold<wbr>For<wbr>Diagnostics<wbr>OnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api."
  syntax: "public Duration getThresholdForDiagnosticsOnTracer()"
  desc: "Gets the thresholdForDiagnosticsOnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api. Default is 100 ms."
  returns:
    description: "thresholdForDiagnosticsOnTracerInMS the latency threshold for diagnostics on tracer."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.getThroughputControlGroupName()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.getThroughputControlGroupName()"
  name: "getThroughputControlGroupName()"
  nameWithType: "CosmosItemRequestOptions.getThroughputControlGroupName()"
  summary: "Gets the throughput control group name."
  syntax: "public String getThroughputControlGroupName()"
  desc: "Gets the throughput control group name."
  returns:
    description: "the throughput control group name."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.isContentResponseOnWriteEnabled()"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.isContentResponseOnWriteEnabled()"
  name: "isContentResponseOnWriteEnabled()"
  nameWithType: "CosmosItemRequestOptions.isContentResponseOnWriteEnabled()"
  summary: "Gets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on Cosmos<wbr>Item."
  syntax: "public Boolean isContentResponseOnWriteEnabled()"
  desc: "Gets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on CosmosItem. If set to false, service doesn't return a payload in the response. It reduces networking and CPU load by not sending the payload back over the network and serializing it on the client. This feature does not impact RU usage for read or write operations. NOTE: This flag is also present on <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref>, however if specified on <xref uid=\"com.azure.cosmos.models.CosmosItemRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosItemRequestOptions\"></xref>, it will override the value specified in <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref> for this request. By-default, this is null."
  returns:
    description: "a boolean indicating whether payload will be included in the response or not for this request."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  name: "setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  nameWithType: "CosmosItemRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  summary: "Sets the consistency level required for the request."
  parameters:
  - description: "the consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"com.azure.cosmos.ConsistencyLevel?alt=com.azure.cosmos.ConsistencyLevel&text=ConsistencyLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  desc: "Sets the consistency level required for the request. The effective consistency level can only be reduced for read/query requests. So when the Account's default consistency level is for example Session you can specify on a request-by-request level for individual requests that Eventual consistency is sufficient - which could reduce the latency and RU charges for this request but will not guarantee session consistency (read-your-own-write) anymore NOTE: If the consistency-level set on a request level here is SESSION and the default consistency level specified when constructing the CosmosClient instance via CosmosClientBuilder.consistencyLevel is not SESSION then session token capturing also needs to be enabled by calling CosmosClientBuilder:sessionCapturingOverrideEnabled(true) explicitly."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setContentResponseOnWriteEnabled(java.lang.Boolean)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  name: "setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  nameWithType: "CosmosItemRequestOptions.setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  summary: "Sets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on Cosmos<wbr>Item."
  parameters:
  - description: "a boolean indicating whether payload will be included\n in the response or not for this request"
    name: "contentResponseOnWriteEnabled"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public CosmosItemRequestOptions setContentResponseOnWriteEnabled(Boolean contentResponseOnWriteEnabled)"
  desc: "Sets the boolean to only return the headers and status code in Cosmos DB response in case of Create, Update and Delete operations on CosmosItem. If set to false, service doesn't return payload in the response. It reduces networking and CPU load by not sending the payload back over the network and serializing it on the client. This feature does not impact RU usage for read or write operations. By-default, this is null. NOTE: This flag is also present on <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref>, however if specified on <xref uid=\"com.azure.cosmos.models.CosmosItemRequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosItemRequestOptions\"></xref>, it will override the value specified in <xref uid=\"com.azure.cosmos.CosmosClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.CosmosClientBuilder\"></xref> for this request."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setDedicatedGatewayRequestOptions(com.azure.cosmos.models.DedicatedGatewayRequestOptions)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  name: "setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  nameWithType: "CosmosItemRequestOptions.setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  summary: "Sets the Dedicated Gateway Request Options"
  parameters:
  - description: "Dedicated Gateway Request Options"
    name: "dedicatedGatewayRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.DedicatedGatewayRequestOptions?alt=com.azure.cosmos.models.DedicatedGatewayRequestOptions&text=DedicatedGatewayRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setDedicatedGatewayRequestOptions(DedicatedGatewayRequestOptions dedicatedGatewayRequestOptions)"
  desc: "Sets the Dedicated Gateway Request Options"
  returns:
    description: "the CosmosItemRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setDiagnosticsThresholds(com.azure.cosmos.CosmosDiagnosticsThresholds)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setDiagnosticsThresholds(CosmosDiagnosticsThresholds operationSpecificThresholds)"
  name: "setDiagnosticsThresholds(CosmosDiagnosticsThresholds operationSpecificThresholds)"
  nameWithType: "CosmosItemRequestOptions.setDiagnosticsThresholds(CosmosDiagnosticsThresholds operationSpecificThresholds)"
  summary: "Allows overriding the diagnostic thresholds for a specific operation."
  parameters:
  - description: "the diagnostic threshold override for this operation"
    name: "operationSpecificThresholds"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnosticsThresholds?alt=com.azure.cosmos.CosmosDiagnosticsThresholds&text=CosmosDiagnosticsThresholds\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setDiagnosticsThresholds(CosmosDiagnosticsThresholds operationSpecificThresholds)"
  desc: "Allows overriding the diagnostic thresholds for a specific operation."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfMatchETag(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfMatchETag(String ifMatchETag)"
  name: "setIfMatchETag(String ifMatchETag)"
  nameWithType: "CosmosItemRequestOptions.setIfMatchETag(String ifMatchETag)"
  summary: "Sets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  parameters:
  - description: "the ifMatchETag associated with the request."
    name: "ifMatchETag"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CosmosItemRequestOptions setIfMatchETag(String ifMatchETag)"
  desc: "Sets the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the current request options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfNoneMatchETag(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setIfNoneMatchETag(String ifNoneMatchETag)"
  name: "setIfNoneMatchETag(String ifNoneMatchETag)"
  nameWithType: "CosmosItemRequestOptions.setIfNoneMatchETag(String ifNoneMatchETag)"
  summary: "Sets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  parameters:
  - description: "the ifNoneMatchETag associated with the request."
    name: "ifNoneMatchETag"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CosmosItemRequestOptions setIfNoneMatchETag(String ifNoneMatchETag)"
  desc: "Sets the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
  returns:
    description: "the current request options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setIndexingDirective(com.azure.cosmos.models.IndexingDirective)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setIndexingDirective(IndexingDirective indexingDirective)"
  name: "setIndexingDirective(IndexingDirective indexingDirective)"
  nameWithType: "CosmosItemRequestOptions.setIndexingDirective(IndexingDirective indexingDirective)"
  summary: "Sets the indexing directive (index, do not index etc)."
  parameters:
  - description: "the indexing directive."
    name: "indexingDirective"
    type: "<xref href=\"com.azure.cosmos.models.IndexingDirective?alt=com.azure.cosmos.models.IndexingDirective&text=IndexingDirective\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setIndexingDirective(IndexingDirective indexingDirective)"
  desc: "Sets the indexing directive (index, do not index etc)."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setNonIdempotentWriteRetryPolicy(boolean,boolean)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setNonIdempotentWriteRetryPolicy(boolean nonIdempotentWriteRetriesEnabled, boolean useTrackingIdPropertyForCreateAndReplace)"
  name: "setNonIdempotentWriteRetryPolicy(boolean nonIdempotentWriteRetriesEnabled, boolean useTrackingIdPropertyForCreateAndReplace)"
  nameWithType: "CosmosItemRequestOptions.setNonIdempotentWriteRetryPolicy(boolean nonIdempotentWriteRetriesEnabled, boolean useTrackingIdPropertyForCreateAndReplace)"
  summary: "Enables automatic retries for write operations even when the SDK can't guarantee that they are idempotent."
  parameters:
  - description: "a flag indicating whether the SDK should enable automatic retries for\n an operation when idempotency can't be guaranteed because for the previous attempt a request has been sent\n on the network."
    name: "nonIdempotentWriteRetriesEnabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "a flag indicating whether write operations can use the\n trackingId system property '/_trackingId' to allow identification of conflicts and pre-condition failures due\n to retries. If enabled, each document being created or replaced will have an additional '/_trackingId' property\n for which the value will be updated by the SDK. If it is not desired to add this new json property (for example\n due to the RU-increase based on the payload size or because it causes documents to exceed the max payload size\n upper limit), the usage of this system property can be disabled by setting this parameter to false. This means\n there could be a higher level of 409/312 due to retries - and applications would need to handle them gracefully\n on their own."
    name: "useTrackingIdPropertyForCreateAndReplace"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemRequestOptions setNonIdempotentWriteRetryPolicy(boolean nonIdempotentWriteRetriesEnabled, boolean useTrackingIdPropertyForCreateAndReplace)"
  desc: "Enables automatic retries for write operations even when the SDK can't guarantee that they are idempotent. This is an override of the <xref uid=\"com.azure.cosmos.CosmosClientBuilder.setNonIdempotentWriteRetryPolicy*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosClientBuilder#setNonIdempotentWriteRetryPolicy(boolean, boolean)\"></xref> behavior for a specific request/operation.\nNOTE: the setting on the CosmosClientBuilder will determine the default behavior for Create, Replace, Upsert and Delete operations. It can be overridden on per-request base in the request options. For patch operations by default (unless overridden in the request options) retries are always disabled by default.\n\\- Create: retries can result in surfacing (more) 409-Conflict requests to the application when a retry tries to create a document that the initial attempt successfully created. When enabling useTrackingIdPropertyForCreateAndReplace this can be avoided for 409-Conflict caused by retries.\n\\- Replace: retries can result in surfacing (more) 412-Precondition failure requests to the application when a replace operations are using a pre-condition check (etag) and a retry tries to update a document that the initial attempt successfully updated (causing the etag to change). When enabling useTrackingIdPropertyForCreateAndReplace this can be avoided for 412-Precondition failures caused by retries.\n\\- Delete: retries can result in surfacing (more) 404-NotFound requests when a delete operation is retried and the initial attempt succeeded. Ideally, write retries should only be enabled when applications can gracefully handle 404 - Not Found.\n\\- Upsert: retries can result in surfacing a 200 - looking like the document was updated when actually the document has been created by the initial attempt - so logically within the same operation. This will only impact applications who have special casing for 201 vs. 200 for upsert operations.\nPatch: retries for patch can but will not always be idempotent - it completely depends on the patch operations being executed and the precondition filters being used. Before enabling write retries for patch this needs to be carefully reviewed and tests - which is wht retries for patch can only be enabled on request options - any CosmosClient wide configuration will be ignored.\nBulk/Delete by PK/Transactional Batch/Stroed Procedure execution: No automatic retries are supported."
  returns:
    description: "the CosmosItemRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setPostTriggerInclude(java.util.List<java.lang.String>)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setPostTriggerInclude(List<String> postTriggerInclude)"
  name: "setPostTriggerInclude(List<String> postTriggerInclude)"
  nameWithType: "CosmosItemRequestOptions.setPostTriggerInclude(List<String> postTriggerInclude)"
  summary: "Sets the triggers to be invoked after the operation."
  parameters:
  - description: "the triggers to be invoked after the operation."
    name: "postTriggerInclude"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public CosmosItemRequestOptions setPostTriggerInclude(List<String> postTriggerInclude)"
  desc: "Sets the triggers to be invoked after the operation."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setPreTriggerInclude(java.util.List<java.lang.String>)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setPreTriggerInclude(List<String> preTriggerInclude)"
  name: "setPreTriggerInclude(List<String> preTriggerInclude)"
  nameWithType: "CosmosItemRequestOptions.setPreTriggerInclude(List<String> preTriggerInclude)"
  summary: "Sets the triggers to be invoked before the operation."
  parameters:
  - description: "the triggers to be invoked before the operation."
    name: "preTriggerInclude"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public CosmosItemRequestOptions setPreTriggerInclude(List<String> preTriggerInclude)"
  desc: "Sets the triggers to be invoked before the operation."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setSessionToken(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setSessionToken(String sessionToken)"
  name: "setSessionToken(String sessionToken)"
  nameWithType: "CosmosItemRequestOptions.setSessionToken(String sessionToken)"
  summary: "Sets the token for use with session consistency."
  parameters:
  - description: "the session token."
    name: "sessionToken"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public CosmosItemRequestOptions setSessionToken(String sessionToken)"
  desc: "Sets the token for use with session consistency."
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setThresholdForDiagnosticsOnTracer(java.time.Duration)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  name: "setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  nameWithType: "CosmosItemRequestOptions.setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  summary: "Sets the threshold<wbr>For<wbr>Diagnostics<wbr>OnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api."
  parameters:
  - description: "the latency threshold for diagnostics on tracer."
    name: "thresholdForDiagnosticsOnTracer"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public CosmosItemRequestOptions setThresholdForDiagnosticsOnTracer(Duration thresholdForDiagnosticsOnTracer)"
  desc: "Sets the thresholdForDiagnosticsOnTracer, if latency on CRUD operation is greater than this diagnostics will be sent to open telemetry exporter as events in tracer span of end to end CRUD api. Default is 100 ms."
  returns:
    description: "the CosmosItemRequestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.CosmosItemRequestOptions.setThroughputControlGroupName(java.lang.String)"
  fullName: "com.azure.cosmos.models.CosmosItemRequestOptions.setThroughputControlGroupName(String throughputControlGroupName)"
  name: "setThroughputControlGroupName(String throughputControlGroupName)"
  nameWithType: "CosmosItemRequestOptions.setThroughputControlGroupName(String throughputControlGroupName)"
  summary: "Sets the throughput control group name."
  parameters:
  - description: "the throughput control group name."
    name: "throughputControlGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void setThroughputControlGroupName(String throughputControlGroupName)"
  desc: "Sets the throughput control group name."
type: "class"
desc: "Encapsulates options that can be specified for a request issued to cosmos Item."
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.44.0
