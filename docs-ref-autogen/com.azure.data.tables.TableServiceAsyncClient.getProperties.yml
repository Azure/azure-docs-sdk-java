### YamlMime:JavaMember
uid: "com.azure.data.tables.TableServiceAsyncClient.getProperties*"
fullName: "com.azure.data.tables.TableServiceAsyncClient.getProperties"
name: "getProperties"
nameWithType: "TableServiceAsyncClient.getProperties"
members:
- uid: "com.azure.data.tables.TableServiceAsyncClient.getProperties()"
  fullName: "com.azure.data.tables.TableServiceAsyncClient.getProperties()"
  name: "getProperties()"
  nameWithType: "TableServiceAsyncClient.getProperties()"
  summary: "Gets the properties of the account's Table service, including properties for Analytics and CORS (Cross-Origin Resource Sharing) rules.\n\nThis operation is only supported on Azure Storage endpoints.\n\n**Code Samples**\n\nGets the properties of the account's Table service.\n\n```java\ntableServiceAsyncClient.getProperties()\n     .contextWrite(Context.of(\"key1\", \"value1\", \"key2\", \"value2\"))\n     .subscribe(properties -> System.out.print(\"Retrieved service properties successfully.\"));\n```"
  syntax: "public Mono<TableServiceProperties> getProperties()"
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.data.tables.models.TableServiceProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"properties\"></xref> of the account's Table service."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.models.TableServiceProperties?alt=com.azure.data.tables.models.TableServiceProperties&text=TableServiceProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.2.1
