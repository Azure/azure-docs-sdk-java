### YamlMime:JavaType
uid: "com.azure.spring.autoconfigure.b2c.AADB2CProperties"
fullName: "com.azure.spring.autoconfigure.b2c.AADB2CProperties"
name: "AADB2CProperties"
nameWithType: "AADB2CProperties"
summary: "Configuration properties for Azure Active Directory B2C."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AADB2CProperties implements InitializingBean"
constructors:
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.AADB2CProperties()"
fields:
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.DEFAULT_KEY_PASSWORD_RESET"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.DEFAULT_KEY_SIGN_UP_OR_SIGN_IN"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.DEFAULT_LOGOUT_SUCCESS_URL"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.PREFIX"
methods:
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.afterPropertiesSet()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getAppIdUri()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getAuthenticateAdditionalParameters()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getBaseUri()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getClientId()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getClientSecret()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getJwtConnectTimeout()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getJwtReadTimeout()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getJwtSizeLimit()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getLoginFlow()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getLogoutSuccessUrl()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getPasswordReset()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getReplyUrl()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getTenant()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getTenantId()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getUserFlows()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.getUserNameAttributeName()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.isAllowTelemetry()"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setAllowTelemetry(boolean)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setAppIdUri(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setAuthenticateAdditionalParameters(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setBaseUri(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setClientId(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setClientSecret(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setJwtConnectTimeout(int)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setJwtReadTimeout(int)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setJwtSizeLimit(int)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setLoginFlow(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setLogoutSuccessUrl(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setReplyUrl(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setTenant(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setTenantId(java.lang.String)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setUserFlows(java.util.Map<java.lang.String,java.lang.String>)"
- "com.azure.spring.autoconfigure.b2c.AADB2CProperties.setUserNameAttributeName(java.lang.String)"
type: "class"
implements:
- "<xref href=\"org.springframework.beans.factory.InitializingBean?alt=org.springframework.beans.factory.InitializingBean&text=InitializingBean\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.spring.autoconfigure.b2c"
artifact: com.azure.spring:azure-spring-boot:3.4.0
