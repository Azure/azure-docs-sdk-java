### YamlMime:ManagedReference
items:
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder
  id: SecretClientBuilder
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets
  children:
  - com.azure.security.keyvault.secrets.SecretClientBuilder.SecretClientBuilder()
  - com.azure.security.keyvault.secrets.SecretClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient()
  - com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient()
  - com.azure.security.keyvault.secrets.SecretClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.credential(com.azure.core.credential.TokenCredential)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.httpClient(com.azure.core.http.HttpClient)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.serviceVersion(com.azure.security.keyvault.secrets.SecretServiceVersion)
  - com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)
  langs:
  - java
  name: SecretClientBuilder
  nameWithType: SecretClientBuilder
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder
  type: Class
  package: com.azure.security.keyvault.secrets
  summary: >-
    This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">secret async client</xref> and <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">secret client</xref>, by calling <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient()" data-throw-if-not-resolved="false">buildAsyncClient</xref> and <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient()" data-throw-if-not-resolved="false">buildClient</xref> respectively. It constructs an instance of the desired client.


    The minimal configuration options required by <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">secretClientBuilder</xref> to build <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">SecretAsyncClient</xref> are <xref uid="java.lang.String" data-throw-if-not-resolved="false">vaultUrl</xref> and <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">credential</xref>.


    ```java

    SecretAsyncClient secretAsyncClient = new SecretClientBuilder()
         .credential(new DefaultAzureCredentialBuilder().build())
         .vaultUrl("https://myvault.vault.azure.net/")
         .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS))
         .buildAsyncClient();
    ```


    **Samples to construct the sync client**


    ```java

    SecretClient secretClient = new SecretClientBuilder()
         .credential(new DefaultAzureCredentialBuilder().build())
         .vaultUrl("https://myvault.vault.azure.net/")
         .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS))
         .buildClient();
    ```


    The <xref uid="" data-throw-if-not-resolved="false">log detail level</xref>, multiple custom <xref uid="" data-throw-if-not-resolved="false">policies</xref> and custom <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">http client</xref> can be optionally configured in the <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">SecretClientBuilder</xref>.


    ```java

    SecretAsyncClient secretAsyncClient = new SecretClientBuilder()
         .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS))
         .vaultUrl("https://myvault.azure.net/")
         .credential(new DefaultAzureCredentialBuilder().build())
         .httpClient(HttpClient.createDefault())
         .buildAsyncClient();
    ```


    Alternatively, custom <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">http pipeline</xref> with custom <xref uid="com.azure.core.http.policy.HttpPipelinePolicy" data-throw-if-not-resolved="false">HttpPipelinePolicy</xref> policies and <xref uid="java.lang.String" data-throw-if-not-resolved="false">vaultUrl</xref> can be specified. It provides finer control over the construction of <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">client</xref>


    ```java

    HttpPipeline pipeline = new HttpPipelineBuilder()
         .policies(new KeyVaultCredentialPolicy(credential), new RetryPolicy())
         .build();
     SecretAsyncClient secretAsyncClient = new SecretClientBuilder()
         .pipeline(pipeline)
         .vaultUrl("https://myvault.azure.net/")
         .buildAsyncClient();
    ```
  syntax:
    content: public final class SecretClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.SecretClientBuilder()
  id: SecretClientBuilder()
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: SecretClientBuilder()
  nameWithType: SecretClientBuilder.SecretClientBuilder()
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.SecretClientBuilder()
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.SecretClientBuilder*
  type: Constructor
  package: com.azure.security.keyvault.secrets
  summary: The constructor with defaults.
  syntax:
    content: public SecretClientBuilder()
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  id: addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy policy)
  nameWithType: SecretClientBuilder.addPolicy(HttpPipelinePolicy policy)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.addPolicy(HttpPipelinePolicy policy)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.addPolicy*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: Adds a policy to the set of existing policies that are executed after <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">SecretAsyncClient</xref> or <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">SecretClient</xref> required policies.
  syntax:
    content: public SecretClientBuilder addPolicy(HttpPipelinePolicy policy)
    parameters:
    - id: policy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: The <xref uid="com.azure.core.http.policy.HttpPipelinePolicy" data-throw-if-not-resolved="false">policy</xref> to be added.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: the updated <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">SecretClientBuilder</xref> object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient()
  id: buildAsyncClient()
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: buildAsyncClient()
  nameWithType: SecretClientBuilder.buildAsyncClient()
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient()
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: >-
    Creates a <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">SecretAsyncClient</xref> based on options set in the builder. Every time `buildAsyncClient()` is called, a new instance of <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">SecretAsyncClient</xref> is created.


    If <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline(com.azure.core.http.HttpPipeline)" data-throw-if-not-resolved="false">pipeline</xref> is set, then the `pipeline` and <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)" data-throw-if-not-resolved="false">serviceEndpoint</xref> are used to create the <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">client</xref>. All other builder settings are ignored. If `pipeline` is not set, then <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.credential(com.azure.core.credential.TokenCredential)" data-throw-if-not-resolved="false">key vault credential</xref>, and <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)" data-throw-if-not-resolved="false">SecretClientBuilder#vaultUrl(String)</xref> key vault url are required to build the <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">client</xref>.
  syntax:
    content: public SecretAsyncClient buildAsyncClient()
    return:
      type: com.azure.security.keyvault.secrets.SecretAsyncClient
      description: A <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">SecretAsyncClient</xref> with the options set from the builder.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient()
  id: buildClient()
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: buildClient()
  nameWithType: SecretClientBuilder.buildClient()
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient()
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: >-
    Creates a <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">SecretClient</xref> based on options set in the builder. Every time `buildClient()` is called, a new instance of <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">SecretClient</xref> is created.


    If <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline(com.azure.core.http.HttpPipeline)" data-throw-if-not-resolved="false">pipeline</xref> is set, then the `pipeline` and <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)" data-throw-if-not-resolved="false">serviceEndpoint</xref> are used to create the <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">client</xref>. All other builder settings are ignored. If `pipeline` is not set, then <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.credential(com.azure.core.credential.TokenCredential)" data-throw-if-not-resolved="false">key vault credential</xref>, and <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)" data-throw-if-not-resolved="false">SecretClientBuilder#vaultUrl(String)</xref> key vault url are required to build the <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">client</xref>.
  syntax:
    content: public SecretClient buildClient()
    return:
      type: com.azure.security.keyvault.secrets.SecretClient
      description: A <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">SecretClient</xref> with the options set from the builder.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: SecretClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.configuration(Configuration configuration)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.configuration*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: >-
    Sets the configuration store that is used during construction of the service client. The default configuration store is a clone of the <xref uid="Configuration#getGlobalConfiguration()" data-throw-if-not-resolved="false">global
     configuration store</xref>, use <xref uid="com.azure.core.util.Configuration.NONE" data-throw-if-not-resolved="false">Configuration#NONE</xref> to bypass using configuration settings during construction.
  syntax:
    content: public SecretClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: The configuration store used to
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: The updated SecretClientBuilder object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.credential(com.azure.core.credential.TokenCredential)
  id: credential(com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: credential(TokenCredential credential)
  nameWithType: SecretClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.credential(TokenCredential credential)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.credential*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: Sets the credential to use when authenticating HTTP requests.
  syntax:
    content: public SecretClientBuilder credential(TokenCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credential.TokenCredential
      description: The credential to use for authenticating HTTP requests.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: the updated <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">SecretClientBuilder</xref> object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.httpClient(com.azure.core.http.HttpClient)
  id: httpClient(com.azure.core.http.HttpClient)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: httpClient(HttpClient client)
  nameWithType: SecretClientBuilder.httpClient(HttpClient client)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.httpClient(HttpClient client)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.httpClient*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: Sets the HTTP client to use for sending and receiving requests to and from the service.
  syntax:
    content: public SecretClientBuilder httpClient(HttpClient client)
    parameters:
    - id: client
      type: com.azure.core.http.HttpClient
      description: The HTTP client to use for requests.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: the updated <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">SecretClientBuilder</xref> object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  id: httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: httpLogOptions(HttpLogOptions logOptions)
  nameWithType: SecretClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.httpLogOptions*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: >-
    Sets the logging configuration for HTTP requests and responses.


    If logLevel is not provided, default value of <xref uid="" data-throw-if-not-resolved="false">HttpLogDetailLevel#NONE</xref> is set.
  syntax:
    content: public SecretClientBuilder httpLogOptions(HttpLogOptions logOptions)
    parameters:
    - id: logOptions
      type: com.azure.core.http.policy.HttpLogOptions
      description: The logging configuration to use when sending and receiving HTTP requests/responses.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: the updated <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">SecretClientBuilder</xref> object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  id: pipeline(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: pipeline(HttpPipeline pipeline)
  nameWithType: SecretClientBuilder.pipeline(HttpPipeline pipeline)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline(HttpPipeline pipeline)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: Sets the HTTP pipeline to use for the service client. If `pipeline` is set, all other settings are ignored, aside from <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)" data-throw-if-not-resolved="false">vaultUrl</xref> to build <xref uid="com.azure.security.keyvault.secrets.SecretAsyncClient" data-throw-if-not-resolved="false">SecretAsyncClient</xref> or <xref uid="com.azure.security.keyvault.secrets.SecretClient" data-throw-if-not-resolved="false">SecretClient</xref>.
  syntax:
    content: public SecretClientBuilder pipeline(HttpPipeline pipeline)
    parameters:
    - id: pipeline
      type: com.azure.core.http.HttpPipeline
      description: The HTTP pipeline to use for sending service requests and receiving responses.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: the updated <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">SecretClientBuilder</xref> object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)
  id: retryPolicy(com.azure.core.http.policy.RetryPolicy)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: retryPolicy(RetryPolicy retryPolicy)
  nameWithType: SecretClientBuilder.retryPolicy(RetryPolicy retryPolicy)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.retryPolicy(RetryPolicy retryPolicy)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.retryPolicy*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: Sets the <xref uid="com.azure.core.http.policy.RetryPolicy" data-throw-if-not-resolved="false">RetryPolicy</xref> that is used when each request is sent. The default retry policy will be used in the pipeline, if not provided.
  syntax:
    content: public SecretClientBuilder retryPolicy(RetryPolicy retryPolicy)
    parameters:
    - id: retryPolicy
      type: com.azure.core.http.policy.RetryPolicy
      description: user's retry policy applied to each request.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: The updated SecretClientBuilder object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.serviceVersion(com.azure.security.keyvault.secrets.SecretServiceVersion)
  id: serviceVersion(com.azure.security.keyvault.secrets.SecretServiceVersion)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: serviceVersion(SecretServiceVersion version)
  nameWithType: SecretClientBuilder.serviceVersion(SecretServiceVersion version)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.serviceVersion(SecretServiceVersion version)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.serviceVersion*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: >-
    Sets the <xref uid="com.azure.security.keyvault.secrets.SecretServiceVersion" data-throw-if-not-resolved="false">SecretServiceVersion</xref> that is used when making API requests.


    If a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version the client library will have the result of potentially moving to a newer service version.
  syntax:
    content: public SecretClientBuilder serviceVersion(SecretServiceVersion version)
    parameters:
    - id: version
      type: com.azure.security.keyvault.secrets.SecretServiceVersion
      description: <xref uid="com.azure.security.keyvault.secrets.SecretServiceVersion" data-throw-if-not-resolved="false">SecretServiceVersion</xref> of the service API used when making requests.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: The updated SecretClientBuilder object.
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)
  id: vaultUrl(java.lang.String)
  artifact: com.azure:azure-security-keyvault-secrets:4.2.0
  parent: com.azure.security.keyvault.secrets.SecretClientBuilder
  langs:
  - java
  name: vaultUrl(String vaultUrl)
  nameWithType: SecretClientBuilder.vaultUrl(String vaultUrl)
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(String vaultUrl)
  overload: com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl*
  type: Method
  package: com.azure.security.keyvault.secrets
  summary: Sets the vault url to send HTTP requests to.
  syntax:
    content: public SecretClientBuilder vaultUrl(String vaultUrl)
    parameters:
    - id: vaultUrl
      type: java.lang.String
      description: The vault url is used as destination on Azure to send requests to.
    return:
      type: com.azure.security.keyvault.secrets.SecretClientBuilder
      description: the updated <xref uid="com.azure.security.keyvault.secrets.SecretClientBuilder" data-throw-if-not-resolved="false">SecretClientBuilder</xref> object.
references:
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.SecretClientBuilder*
  name: SecretClientBuilder
  nameWithType: SecretClientBuilder.SecretClientBuilder
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.SecretClientBuilder
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretClient
  name: SecretClient
  nameWithType: SecretClient
  fullName: com.azure.security.keyvault.secrets.SecretClient
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient*
  name: buildClient
  nameWithType: SecretClientBuilder.buildClient
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretAsyncClient
  name: SecretAsyncClient
  nameWithType: SecretAsyncClient
  fullName: com.azure.security.keyvault.secrets.SecretAsyncClient
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient*
  name: buildAsyncClient
  nameWithType: SecretClientBuilder.buildAsyncClient
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient
  package: com.azure.security.keyvault.secrets
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl*
  name: vaultUrl
  nameWithType: SecretClientBuilder.vaultUrl
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.credential*
  name: credential
  nameWithType: SecretClientBuilder.credential
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.credential
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.http.policy.HttpLogOptions
  spec.java:
  - uid: com.azure.core.http.policy.HttpLogOptions
    name: HttpLogOptions
    fullName: com.azure.core.http.policy.HttpLogOptions
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.httpLogOptions*
  name: httpLogOptions
  nameWithType: SecretClientBuilder.httpLogOptions
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.httpLogOptions
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: SecretClientBuilder.addPolicy
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.addPolicy
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.httpClient*
  name: httpClient
  nameWithType: SecretClientBuilder.httpClient
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.httpClient
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline*
  name: pipeline
  nameWithType: SecretClientBuilder.pipeline
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.configuration*
  name: configuration
  nameWithType: SecretClientBuilder.configuration
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.configuration
  package: com.azure.security.keyvault.secrets
- uid: com.azure.security.keyvault.secrets.SecretServiceVersion
  name: SecretServiceVersion
  nameWithType: SecretServiceVersion
  fullName: com.azure.security.keyvault.secrets.SecretServiceVersion
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.serviceVersion*
  name: serviceVersion
  nameWithType: SecretClientBuilder.serviceVersion
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.serviceVersion
  package: com.azure.security.keyvault.secrets
- uid: com.azure.core.http.policy.RetryPolicy
  spec.java:
  - uid: com.azure.core.http.policy.RetryPolicy
    name: RetryPolicy
    fullName: com.azure.core.http.policy.RetryPolicy
- uid: com.azure.security.keyvault.secrets.SecretClientBuilder.retryPolicy*
  name: retryPolicy
  nameWithType: SecretClientBuilder.retryPolicy
  fullName: com.azure.security.keyvault.secrets.SecretClientBuilder.retryPolicy
  package: com.azure.security.keyvault.secrets
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
