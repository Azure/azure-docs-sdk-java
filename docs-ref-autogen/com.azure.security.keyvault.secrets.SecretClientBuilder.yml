### YamlMime:JavaType
uid: "com.azure.security.keyvault.secrets.SecretClientBuilder"
fullName: "com.azure.security.keyvault.secrets.SecretClientBuilder"
name: "SecretClientBuilder"
nameWithType: "SecretClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.security.keyvault.secrets.SecretAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"secret async client\"></xref> and <xref uid=\"com.azure.security.keyvault.secrets.SecretClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"secret client\"></xref>, by calling <xref uid=\"com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildAsyncClient\"></xref> and <xref uid=\"com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"buildClient\"></xref> respectively. It constructs an instance of the desired client.\n\nThe minimal configuration options required by <xref uid=\"com.azure.security.keyvault.secrets.SecretClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"secretClientBuilder\"></xref> to build <xref uid=\"com.azure.security.keyvault.secrets.SecretAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecretAsyncClient\"></xref> are <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"vaultUrl\"></xref> and <xref uid=\"com.azure.core.credential.TokenCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"credential\"></xref>.\n\n```java\nSecretAsyncClient secretAsyncClient = new SecretClientBuilder()\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .vaultUrl(\"https://myvault.vault.azure.net/\")\n     .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS))\n     .buildAsyncClient();\n```\n\n**Samples to construct the sync client**\n\n```java\nSecretClient secretClient = new SecretClientBuilder()\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .vaultUrl(\"https://myvault.vault.azure.net/\")\n     .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS))\n     .buildClient();\n```\n\nThe <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"log detail level\"></xref>, multiple custom <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"policies\"></xref> and custom <xref uid=\"com.azure.core.http.HttpClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"http client\"></xref> can be optionally configured in the <xref uid=\"com.azure.security.keyvault.secrets.SecretClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SecretClientBuilder\"></xref>.\n\n```java\nSecretAsyncClient secretAsyncClient = new SecretClientBuilder()\n     .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BODY_AND_HEADERS))\n     .vaultUrl(\"https://myvault.azure.net/\")\n     .credential(new DefaultAzureCredentialBuilder().build())\n     .httpClient(HttpClient.createDefault())\n     .buildAsyncClient();\n```\n\nAlternatively, custom <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"http pipeline\"></xref> with custom <xref uid=\"com.azure.core.http.policy.HttpPipelinePolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipelinePolicy\"></xref> policies and <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"vaultUrl\"></xref> can be specified. It provides finer control over the construction of <xref uid=\"com.azure.security.keyvault.secrets.SecretAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"client\"></xref>\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(new KeyVaultCredentialPolicy(credential), new RetryPolicy())\n     .build();\n SecretAsyncClient secretAsyncClient = new SecretClientBuilder()\n     .pipeline(pipeline)\n     .vaultUrl(\"https://myvault.azure.net/\")\n     .buildAsyncClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SecretClientBuilder"
constructors:
- "com.azure.security.keyvault.secrets.SecretClientBuilder.SecretClientBuilder()"
methods:
- "com.azure.security.keyvault.secrets.SecretClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.buildAsyncClient()"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.buildClient()"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.credential(com.azure.core.credential.TokenCredential)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.retryPolicy(com.azure.core.http.policy.RetryPolicy)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.serviceVersion(com.azure.security.keyvault.secrets.SecretServiceVersion)"
- "com.azure.security.keyvault.secrets.SecretClientBuilder.vaultUrl(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.security.keyvault.secrets"
artifact: com.azure:azure-security-keyvault-secrets:4.2.4
