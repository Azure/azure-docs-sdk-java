items:
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  id: _a_d_l_file_input_stream
  parent: com.microsoft.azure.datalake.store
  children:
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark(int)
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [])
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [],int,int)
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(long,byte [],int,int)
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek(long)
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize(int)
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip(long)
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile()
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer()
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: ADLFileInputStream
  nameWithType: ADLFileInputStream
  fullName: com.microsoft.azure.datalake.store.ADLFileInputStream
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
      branch: master
      repo: https://github.com/azure/azure-data-lake-store-java
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 29
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>

      <xref href="com.microsoft.azure.datalake.store._a_d_l_file_input_stream" data-throw-if-not-resolved="false"></xref> can be used to read data from an open file on ADL. It is a buffering stream, that reads data from the server in bulk, and then satisfies user reads from the buffer. Default buffer size is 4MB.</p>

    <p>

      <bold>Thread-safety</bold>: Note that methods in this class are NOT thread-safe. </p>
  syntax: &o1
    content: public class ADLFileInputStream
  inheritance:
  - java.lang.Object
  - InputStream
  inheritedMembers:
  - com.microsoft.azure.datalake.store._a_d_l_file_input_stream.ADLFileInputStream(String,DirectoryEntry,ADLStoreClient)
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available()
  id: available()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: available()
  nameWithType: ADLFileInputStream.available()
  fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.available()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 368
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>returns the remaining number of bytes available to read from the buffer, without having to call the server</p>

    <p></p>
  syntax:
    content: public int available()
    return:
      type: f75371fa
      description: <p>the number of bytes availabel </p>
  exceptions:
  - type: cbf33bbe
    description: <p>throws <xref href="com.microsoft.azure.datalake.store._a_d_l_exception" data-throw-if-not-resolved="false"></xref> if call fails </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close()
  id: close()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: close()
  nameWithType: ADLFileInputStream.close()
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.close()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 410
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public void close()
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos()
  id: getPos()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: getPos()
  nameWithType: ADLFileInputStream.getPos()
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.getPos()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 391
  package: com.microsoft.azure.datalake.store
  summary: <p>gets the position of the cursor within the file </p>
  syntax:
    content: public long getPos()
    return:
      type: 0364520f
      description: <p>position of the cursor </p>
  exceptions:
  - type: cbf33bbe
    description: <p>throws <ref refid="" kindref="compound">IOException</ref> if there is an error </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length()
  id: length()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: length()
  nameWithType: ADLFileInputStream.length()
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.length()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 381
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Returns the length of the file that this stream refers to. Note that the length returned is the length as of the time the Stream was opened. Specifically, if there have been subsequent appends to the file, they wont be reflected in the returned length.</p>

    <p></p>
  syntax:
    content: public long length()
    return:
      type: 0364520f
      description: <p>length of the file. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if the stream is closed </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark(int)
  id: mark(int)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: mark(int readlimit)
  nameWithType: ADLFileInputStream.mark(int readlimit)
  fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.mark(int readlimit)
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 423
  package: com.microsoft.azure.datalake.store
  summary: <p>Not supported by this stream. Throws <ref refid="" kindref="compound">UnsupportedOperationException</ref></p>
  syntax:
    content: public synchronized void mark(int readlimit)
    parameters:
    - id: readlimit
      type: f75371fa
      description: <p>ignored </p>
    return:
      type: 5c0b90ca
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported()
  id: markSupported()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: markSupported()
  nameWithType: ADLFileInputStream.markSupported()
  fullName: boolean com.microsoft.azure.datalake.store.ADLFileInputStream.markSupported()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 441
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>gets whether mark and reset are supported by<programlisting><codeline><highlight class="normal">ADLFileInputStream<sp></sp></highlight></codeline></programlisting> . Always returns false.</p>

    <p></p>
  syntax:
    content: public boolean markSupported()
    return:
      type: 4fc6e284
      description: <p>always<programlisting><codeline><highlight class="normal">false<sp></sp></highlight></codeline></programlisting></p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read()
  id: read()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: read()
  nameWithType: ADLFileInputStream.read()
  fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.read()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 121
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public int read()
    return:
      type: f75371fa
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [])
  id: read(byte [])
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: read(byte[] b)
  nameWithType: ADLFileInputStream.read(byte[] b)
  fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.read(byte[] b)
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 129
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public int read(byte[] b)
    parameters:
    - id: b
      type: ccd9418d
    return:
      type: f75371fa
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(byte [],int,int)
  id: read(byte [],int,int)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: read(byte[] b, int off, int len)
  nameWithType: ADLFileInputStream.read(byte[] b, int off, int len)
  fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.read(byte[] b, int off, int len)
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 137
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public int read(byte[] b, int off, int len)
    parameters:
    - id: b
      type: ccd9418d
    - id: off
      type: f75371fa
    - id: len
      type: f75371fa
    return:
      type: f75371fa
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read(long,byte [],int,int)
  id: read(long,byte [],int,int)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: read(long position, byte[] b, int offset, int length)
  nameWithType: ADLFileInputStream.read(long position, byte[] b, int offset, int length)
  fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.read(long position, byte[] b, int offset, int length)
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 82
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Read upto the specified number of bytes, from a given position within a file, and return the number of bytes read. This does not change the current offset of a file.</p>

    <p></p>
  syntax:
    content: public int read(long position, byte[] b, int offset, int length)
    parameters:
    - id: position
      type: 0364520f
      description: <p>position in file to read from </p>
    - id: b
      type: ccd9418d
      description: <p>byte[] buffer to read into </p>
    - id: offset
      type: f75371fa
      description: <p>offset into the byte buffer at which to read the data into </p>
    - id: length
      type: f75371fa
      description: <p>number of bytes to read </p>
    return:
      type: f75371fa
      description: <p>the number of bytes actually read, which could be less than the bytes requested. If the<programlisting><codeline><highlight class="normal">position<sp></sp></highlight></codeline></programlisting> is at or after end of file, then -1 is returned. </p>
  exceptions:
  - type: cbf33bbe
    description: <p>thrown if there is an error in reading </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService()
  id: readFromService()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: readFromService()
  nameWithType: ADLFileInputStream.readFromService()
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.readFromService()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 176
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Read from service attempts to read<programlisting><codeline><highlight class="normal">blocksize<sp></sp></highlight></codeline></programlisting> bytes from service. Returns how many bytes are actually read, could be less than blocksize.</p>

    <p></p>
  syntax:
    content: protected long readFromService()
    return:
      type: 0364520f
      description: <p>number of bytes actually read </p>
  exceptions:
  - type: com.microsoft.azure.datalake.store._a_d_l_exception
    description: <p>if error </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset()
  id: reset()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: reset()
  nameWithType: ADLFileInputStream.reset()
  fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.reset()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 431
  package: com.microsoft.azure.datalake.store
  summary: <p>Not supported by this stream. Throws <ref refid="" kindref="compound">UnsupportedOperationException</ref></p>
  syntax:
    content: public synchronized void reset()
    return:
      type: 5c0b90ca
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek(long)
  id: seek(long)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: seek(long n)
  nameWithType: ADLFileInputStream.seek(long n)
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.seek(long n)
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 298
  package: com.microsoft.azure.datalake.store
  summary: <p>Seek to given position in stream. </p>
  syntax:
    content: public void seek(long n)
    parameters:
    - id: n
      type: 0364520f
      description: <p>position to seek to </p>
  exceptions:
  - type: cbf33bbe
    description: <p>if there is an error </p>
  - type: aeb5e715
    description: <p>if attempting to seek past end of file </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize(int)
  id: setBufferSize(int)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: setBufferSize(int newSize)
  nameWithType: ADLFileInputStream.setBufferSize(int newSize)
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.setBufferSize(int newSize)
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 344
  package: com.microsoft.azure.datalake.store
  summary: <p>Sets the size of the internal read buffer (default is 4MB). </p>
  syntax:
    content: public void setBufferSize(int newSize)
    parameters:
    - id: newSize
      type: f75371fa
      description: <p>requested size of buffer </p>
  exceptions:
  - type: com.microsoft.azure.datalake.store._a_d_l_exception
    description: <p>if there is an error </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip(long)
  id: skip(long)
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: skip(long n)
  nameWithType: ADLFileInputStream.skip(long n)
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.skip(long n)
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 320
  package: com.microsoft.azure.datalake.store
  syntax:
    content: public long skip(long n)
    parameters:
    - id: n
      type: 0364520f
    return:
      type: 0364520f
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile()
  id: slurpFullFile()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: slurpFullFile()
  nameWithType: ADLFileInputStream.slurpFullFile()
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.slurpFullFile()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 242
  package: com.microsoft.azure.datalake.store
  summary: >-
    <p>Reads the whole file into buffer. Useful when reading small files.</p>

    <p></p>
  syntax:
    content: protected long slurpFullFile()
    return:
      type: 0364520f
      description: <p>number of bytes actually read </p>
  exceptions:
  - type: cbf33bbe
    description: <p>throws IOException if there is an error </p>
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer()
  id: unbuffer()
  parent: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  langs:
  - java
  name: unbuffer()
  nameWithType: ADLFileInputStream.unbuffer()
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.unbuffer()
  overload: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/datalake/store/ADLFileInputStream.java
    startLine: 400
  package: com.microsoft.azure.datalake.store
  summary: <p>invalidates the buffer. The next read will fetch data from server. </p>
  syntax:
    content: public void unbuffer()
  exceptions:
  - type: cbf33bbe
    description: <p>throws <ref refid="" kindref="compound">IOException</ref> if there is an error </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.read*
  name: read
  nameWithType: ADLFileInputStream.read
  fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.read
  package: com.microsoft.azure.datalake.store
- uid: aeb5e715
  spec.java:
  - name: EOFException
    fullName: EOFException
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.seek*
  name: seek
  nameWithType: ADLFileInputStream.seek
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.seek
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.skip*
  name: skip
  nameWithType: ADLFileInputStream.skip
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.skip
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.setBufferSize*
  name: setBufferSize
  nameWithType: ADLFileInputStream.setBufferSize
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.setBufferSize
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.available*
  name: available
  nameWithType: ADLFileInputStream.available
  fullName: int com.microsoft.azure.datalake.store.ADLFileInputStream.available
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.length*
  name: length
  nameWithType: ADLFileInputStream.length
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.length
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.getPos*
  name: getPos
  nameWithType: ADLFileInputStream.getPos
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.getPos
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.unbuffer*
  name: unbuffer
  nameWithType: ADLFileInputStream.unbuffer
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.unbuffer
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.close*
  name: close
  nameWithType: ADLFileInputStream.close
  fullName: void com.microsoft.azure.datalake.store.ADLFileInputStream.close
  package: com.microsoft.azure.datalake.store
- uid: 5c0b90ca
  spec.java:
  - name: synchronized void
    fullName: synchronized void
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.mark*
  name: mark
  nameWithType: ADLFileInputStream.mark
  fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.mark
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.reset*
  name: reset
  nameWithType: ADLFileInputStream.reset
  fullName: synchronized void com.microsoft.azure.datalake.store.ADLFileInputStream.reset
  package: com.microsoft.azure.datalake.store
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.markSupported*
  name: markSupported
  nameWithType: ADLFileInputStream.markSupported
  fullName: boolean com.microsoft.azure.datalake.store.ADLFileInputStream.markSupported
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.readFromService*
  name: readFromService
  nameWithType: ADLFileInputStream.readFromService
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.readFromService
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.slurpFullFile*
  name: slurpFullFile
  nameWithType: ADLFileInputStream.slurpFullFile
  fullName: long com.microsoft.azure.datalake.store.ADLFileInputStream.slurpFullFile
  package: com.microsoft.azure.datalake.store
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.ADLFileInputStream(String,DirectoryEntry,ADLStoreClient)
- uid: com.microsoft.azure.datalake.store._a_d_l_store_client
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_store_client.yml
  name: ADLStoreClient
  nameWithType: ADLStoreClient
  fullName: com.microsoft.azure.datalake.store.ADLStoreClient
  type: Class
  summary: >-
    <p>

      <programlisting>

        <codeline>

          <highlight class="normal">ADLStoreClient<sp></sp></highlight>

        </codeline>

      </programlisting> class represents a client to Azure Data Lake. It can be used to perform operations on files and directories. </p>
  syntax:
    content: public class ADLStoreClient
- uid: com.microsoft.azure.datalake.store._directory_entry
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._directory_entry.yml
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: com.microsoft.azure.datalake.store.DirectoryEntry
  type: Class
  summary: <p>filesystem metadata of a directory enrty (a file or a directory) in ADL. </p>
  syntax:
    content: public class DirectoryEntry
- uid: com.microsoft.azure.datalake.store._a_d_l_exception
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_exception.yml
  name: ADLException
  nameWithType: ADLException
  fullName: com.microsoft.azure.datalake.store.ADLException
  type: Class
  summary: <p>Exception type returned by Azure Data Lake SDK methods. Derives from <ref refid="" kindref="compound">IOException</ref>. Contains a number of additional fields that contain information about the success or failure of a server call. </p>
  syntax:
    content: public class ADLException
- uid: com.microsoft.azure.datalake.store._a_d_l_file_input_stream
  parent: com.microsoft.azure.datalake.store
  href: com.microsoft.azure.datalake.store._a_d_l_file_input_stream.yml
  name: ADLFileInputStream
  nameWithType: ADLFileInputStream
  fullName: com.microsoft.azure.datalake.store.ADLFileInputStream
  type: Class
  summary: >-
    <p>

      <xref href="com.microsoft.azure.datalake.store._a_d_l_file_input_stream" data-throw-if-not-resolved="false"></xref> can be used to read data from an open file on ADL. It is a buffering stream, that reads data from the server in bulk, and then satisfies user reads from the buffer. Default buffer size is 4MB.</p>

    <p>

      <bold>Thread-safety</bold>: Note that methods in this class are NOT thread-safe. </p>
  syntax: *o1
