### YamlMime:ManagedReference
items:
- uid: com.azure.core.util.serializer.UnixTimeSerializer
  id: UnixTimeSerializer
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.util.serializer
  children:
  - com.azure.core.util.serializer.UnixTimeSerializer.getModule()
  - com.azure.core.util.serializer.UnixTimeSerializer.serialize(com.azure.core.implementation.UnixTime,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  langs:
  - java
  name: UnixTimeSerializer
  nameWithType: UnixTimeSerializer
  fullName: com.azure.core.util.serializer.UnixTimeSerializer
  type: Class
  package: com.azure.core.util.serializer
  summary: Custom serializer for serializing <xref uid="com.azure.core.implementation.UnixTime" data-throw-if-not-resolved="false">UnixTime</xref> object into epoch formats.
  syntax:
    content: final class UnixTimeSerializer extends JsonSerializer<UnixTime>
  inheritance:
  - java.lang.Object
  - com.fasterxml.jackson.databind.JsonSerializer
  inheritedMembers:
  - com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  - com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  - com.fasterxml.jackson.databind.JsonSerializer.handledType()
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  - com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  - com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  - com.fasterxml.jackson.databind.JsonSerializer.properties()
  - com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  - com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  - com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  - com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  - com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  - com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.core.util.serializer.UnixTimeSerializer.UnixTimeSerializer()
  id: UnixTimeSerializer()
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.util.serializer.UnixTimeSerializer
  langs:
  - java
  name: UnixTimeSerializer()
  nameWithType: UnixTimeSerializer.UnixTimeSerializer()
  fullName: com.azure.core.util.serializer.UnixTimeSerializer.UnixTimeSerializer()
  overload: com.azure.core.util.serializer.UnixTimeSerializer.UnixTimeSerializer*
  type: Constructor
  package: com.azure.core.util.serializer
  syntax:
    content: " UnixTimeSerializer()"
- uid: com.azure.core.util.serializer.UnixTimeSerializer.getModule()
  id: getModule()
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.util.serializer.UnixTimeSerializer
  langs:
  - java
  name: getModule()
  nameWithType: UnixTimeSerializer.getModule()
  fullName: com.azure.core.util.serializer.UnixTimeSerializer.getModule()
  overload: com.azure.core.util.serializer.UnixTimeSerializer.getModule*
  type: Method
  package: com.azure.core.util.serializer
  summary: Gets a module wrapping this serializer as an adapter for the Jackson ObjectMapper.
  syntax:
    content: public static SimpleModule getModule()
    return:
      type: com.fasterxml.jackson.databind.module.SimpleModule
      description: a simple module to be plugged onto Jackson ObjectMapper.
- uid: com.azure.core.util.serializer.UnixTimeSerializer.serialize(com.azure.core.implementation.UnixTime,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  id: serialize(com.azure.core.implementation.UnixTime,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  artifact: com.azure:azure-core:1.5.0
  parent: com.azure.core.util.serializer.UnixTimeSerializer
  langs:
  - java
  name: serialize(UnixTime value, JsonGenerator jgen, SerializerProvider provider)
  nameWithType: UnixTimeSerializer.serialize(UnixTime value, JsonGenerator jgen, SerializerProvider provider)
  fullName: com.azure.core.util.serializer.UnixTimeSerializer.serialize(UnixTime value, JsonGenerator jgen, SerializerProvider provider)
  overload: com.azure.core.util.serializer.UnixTimeSerializer.serialize*
  type: Method
  package: com.azure.core.util.serializer
  syntax:
    content: public void serialize(UnixTime value, JsonGenerator jgen, SerializerProvider provider)
    parameters:
    - id: value
      type: com.azure.core.implementation.UnixTime
    - id: jgen
      type: com.fasterxml.jackson.core.JsonGenerator
    - id: provider
      type: com.fasterxml.jackson.databind.SerializerProvider
  exceptions:
  - type: java.io.IOException
references:
- uid: com.azure.core.util.serializer.UnixTimeSerializer.UnixTimeSerializer*
  name: UnixTimeSerializer
  nameWithType: UnixTimeSerializer.UnixTimeSerializer
  fullName: com.azure.core.util.serializer.UnixTimeSerializer.UnixTimeSerializer
  package: com.azure.core.util.serializer
- uid: com.fasterxml.jackson.databind.module.SimpleModule
  spec.java:
  - uid: com.fasterxml.jackson.databind.module.SimpleModule
    name: SimpleModule
    fullName: com.fasterxml.jackson.databind.module.SimpleModule
- uid: com.azure.core.util.serializer.UnixTimeSerializer.getModule*
  name: getModule
  nameWithType: UnixTimeSerializer.getModule
  fullName: com.azure.core.util.serializer.UnixTimeSerializer.getModule
  package: com.azure.core.util.serializer
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.azure.core.implementation.UnixTime
  name: UnixTime
  nameWithType: UnixTime
  fullName: com.azure.core.implementation.UnixTime
- uid: com.fasterxml.jackson.core.JsonGenerator
  spec.java:
  - uid: com.fasterxml.jackson.core.JsonGenerator
    name: JsonGenerator
    fullName: com.fasterxml.jackson.core.JsonGenerator
- uid: com.fasterxml.jackson.databind.SerializerProvider
  spec.java:
  - uid: com.fasterxml.jackson.databind.SerializerProvider
    name: SerializerProvider
    fullName: com.fasterxml.jackson.databind.SerializerProvider
- uid: com.azure.core.util.serializer.UnixTimeSerializer.serialize*
  name: serialize
  nameWithType: UnixTimeSerializer.serialize
  fullName: com.azure.core.util.serializer.UnixTimeSerializer.serialize
  package: com.azure.core.util.serializer
- uid: com.fasterxml.jackson.databind.JsonSerializer<com.azure.core.implementation.UnixTime>
  name: JsonSerializer<UnixTime>
  nameWithType: JsonSerializer<UnixTime>
  fullName: com.fasterxml.jackson.databind.JsonSerializer<com.azure.core.implementation.UnixTime>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
  name: JsonSerializer.isEmpty(SerializerProvider,T)
  nameWithType: JsonSerializer.isEmpty(SerializerProvider,T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(com.fasterxml.jackson.databind.SerializerProvider,T)
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: com.fasterxml.jackson.databind.JsonSerializer.properties()
  name: JsonSerializer.properties()
  nameWithType: JsonSerializer.properties()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.properties()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
  name: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  nameWithType: JsonSerializer.serializeWithType(T,JsonGenerator,SerializerProvider,TypeSerializer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
  name: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  nameWithType: JsonSerializer.acceptJsonFormatVisitor(jsonFormatVisitors.JsonFormatVisitorWrapper,JavaType)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
  name: JsonSerializer.getDelegatee()
  nameWithType: JsonSerializer.getDelegatee()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.getDelegatee()
- uid: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
  name: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  nameWithType: JsonSerializer.serialize(T,JsonGenerator,SerializerProvider)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.serialize(T,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)
- uid: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
  name: JsonSerializer.withFilterId(Object)
  nameWithType: JsonSerializer.withFilterId(Object)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.withFilterId(java.lang.Object)
- uid: com.fasterxml.jackson.databind.JsonSerializer.handledType()
  name: JsonSerializer.handledType()
  nameWithType: JsonSerializer.handledType()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.handledType()
- uid: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
  name: JsonSerializer.isEmpty(T)
  nameWithType: JsonSerializer.isEmpty(T)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isEmpty(T)
- uid: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
  name: JsonSerializer.usesObjectId()
  nameWithType: JsonSerializer.usesObjectId()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.usesObjectId()
- uid: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
  name: JsonSerializer.unwrappingSerializer(NameTransformer)
  nameWithType: JsonSerializer.unwrappingSerializer(NameTransformer)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
  name: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer<?>)
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer<?>)
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
  name: JsonSerializer.isUnwrappingSerializer()
  nameWithType: JsonSerializer.isUnwrappingSerializer()
  fullName: com.fasterxml.jackson.databind.JsonSerializer.isUnwrappingSerializer()
- uid: com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer
- uid: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
  name: JsonSerializer.replaceDelegatee(JsonSerializer
  nameWithType: JsonSerializer.replaceDelegatee(JsonSerializer
  fullName: com.fasterxml.jackson.databind.JsonSerializer.replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
