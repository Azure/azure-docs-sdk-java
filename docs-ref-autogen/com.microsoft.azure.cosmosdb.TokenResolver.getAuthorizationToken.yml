### YamlMime:JavaMember
nameWithType: TokenResolver.getAuthorizationToken
type: method
members:
- fullName: com.microsoft.azure.cosmosdb.TokenResolver.getAuthorizationToken(String requestVerb, String resourceIdOrFullName, CosmosResourceType resourceType, Map<String, Object> properties)
  name: getAuthorizationToken(String requestVerb, String resourceIdOrFullName, CosmosResourceType resourceType, Map<String, Object> properties)
  nameWithType: TokenResolver.getAuthorizationToken(String requestVerb, String resourceIdOrFullName, CosmosResourceType resourceType, Map<String, Object> properties)
  parameters:
  - description: <p>Request verb i.e. GET, POST, PUT etc. </p>
    name: requestVerb
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>ResourceID or resource full name. </p>
    name: resourceIdOrFullName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Resource type i.e. Database, DocumentCollection, Document etc. </p>
    name: resourceType
    type: <xref href="com.microsoft.azure.cosmosdb.CosmosResourceType?alt=com.microsoft.azure.cosmosdb.CosmosResourceType&text=CosmosResourceType" data-throw-if-not-resolved="False"/>
  - description: <p>the user properties. </p>
    name: properties
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map<String, Object>&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The authorization token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>This method will consume the request information and based on that it will generate the authorization token. </p>
  syntax: public String getAuthorizationToken(String requestVerb, String resourceIdOrFullName, CosmosResourceType resourceType, Map<String, Object> properties)
  uid: com.microsoft.azure.cosmosdb.TokenResolver.getAuthorizationToken(String,String,CosmosResourceType,Map<String, Object>)
uid: com.microsoft.azure.cosmosdb.TokenResolver.getAuthorizationToken*
fullName: com.microsoft.azure.cosmosdb.TokenResolver.getAuthorizationToken(String requestVerb, String resourceIdOrFullName, CosmosResourceType resourceType, Map<String, Object> properties)
name: getAuthorizationToken(String requestVerb, String resourceIdOrFullName, CosmosResourceType resourceType, Map<String, Object> properties)
package: com.microsoft.azure.cosmosdb
metadata: {}
