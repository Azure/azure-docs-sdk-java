### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  id: _amqp_receive
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  children:
  - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.AmqpReceive(String,String,String,IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.close()
  - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onFeedbackReceived(String)
  - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onReactorInit(Event)
  - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.open()
  - com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.receive(long)
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  langs:
  - java
  name: AmqpReceive
  nameWithType: AmqpReceive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 22
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: <p>Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close methods and feedback received event. </p>
  syntax: &o1
    content: public class AmqpReceive implements AmqpFeedbackReceivedEvent
  inheritance:
  - java.lang.Object
  - BaseHandler
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.AmqpReceive(String,String,String,IotHubServiceClientProtocol)
  id: AmqpReceive(String,String,String,IotHubServiceClientProtocol)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  langs:
  - java
  name: AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.AmqpReceive*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 40
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: <p>Constructor to set up connection parameters </p>
  syntax:
    content: public AmqpReceive(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: hostName
      type: "26831127"
      description: '<p>The address string of the service (example: AAA.BBB.CCC) </p>'
    - id: userName
      type: "26831127"
      description: '<p>The username string to use SASL authentication (example: <a href="mailto:user@sas.service">user@sas.service</a>) </p>'
    - id: sasToken
      type: "26831127"
      description: <p>The SAS token string </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
      description: <p>protocol to use </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  langs:
  - java
  name: close()
  nameWithType: AmqpReceive.close()
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close()
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 78
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: <p>Invalidate AmqpsReceiveHandler member variable </p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onFeedbackReceived(String)
  id: onFeedbackReceived(String)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  langs:
  - java
  name: onFeedbackReceived(String feedbackJson)
  nameWithType: AmqpReceive.onFeedbackReceived(String feedbackJson)
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived(String feedbackJson)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onFeedbackReceived*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 132
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: <p>Handle on feedback received Proton event Parse received json and save result to a member variable Release semaphore for wait function </p>
  syntax:
    content: public void onFeedbackReceived(String feedbackJson)
    parameters:
    - id: feedbackJson
      type: "26831127"
      description: <p>Received Json string to process </p>
  overridden: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_event.onFeedbackReceived(String)
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onReactorInit(Event)
  id: onReactorInit(Event)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  langs:
  - java
  name: onReactorInit(Event event)
  nameWithType: AmqpReceive.onReactorInit(Event event)
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onReactorInit(Event event)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onReactorInit*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 54
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: <p>Event handler for the reactor init event </p>
  syntax:
    content: public void onReactorInit(Event event)
    parameters:
    - id: event
      type: 70fceca4
      description: <p>The proton event object </p>
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  langs:
  - java
  name: open()
  nameWithType: AmqpReceive.open()
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open()
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 69
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: <p>Create AmqpsReceiveHandler and store it in a member variable </p>
  syntax:
    content: public void open()
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.receive(long)
  id: receive(long)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  langs:
  - java
  name: receive(long timeoutMs)
  nameWithType: AmqpReceive.receive(long timeoutMs)
  fullName: synchronized FeedbackBatch com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive(long timeoutMs)
  overload: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.receive*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/transport/amqps/AmqpReceive.java
    startLine: 92
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
  summary: <p>Synchronized call to receive feedback batch Hide the event based receiving mechanism from the user API </p>
  syntax:
    content: public synchronized FeedbackBatch receive(long timeoutMs)
    parameters:
    - id: timeoutMs
      type: 0364520f
      description: <p>The timeout in milliseconds to wait for the feedback </p>
    return:
      type: cffad4f2com.microsoft.azure.sdk.iot.service._feedback_batch
      description: <p>The received feedback batch </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the input <xref uid="com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive" data-throw-if-not-resolved="false">AmqpReceive</xref> object is null </p>
  - type: 8256ba40
    description: <p>This exception is thrown if the receive process has been interrupted </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.AmqpReceive*
  name: AmqpReceive
  nameWithType: AmqpReceive.AmqpReceive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.AmqpReceive
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: 70fceca4
  spec.java:
  - name: Event
    fullName: Event
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onReactorInit*
  name: onReactorInit
  nameWithType: AmqpReceive.onReactorInit
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onReactorInit
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.open*
  name: open
  nameWithType: AmqpReceive.open
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.open
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.close*
  name: close
  nameWithType: AmqpReceive.close
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.close
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: cffad4f2com.microsoft.azure.sdk.iot.service._feedback_batch
  spec.java:
  - name: 'synchronized '
    fullName: 'synchronized '
  - uid: com.microsoft.azure.sdk.iot.service._feedback_batch
    name: FeedbackBatch
    fullName: com.microsoft.azure.sdk.iot.service.FeedbackBatch
    href: com.microsoft.azure.sdk.iot.service._feedback_batch.yml
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.receive*
  name: receive
  nameWithType: AmqpReceive.receive
  fullName: synchronized FeedbackBatch com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.receive
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.onFeedbackReceived*
  name: onFeedbackReceived
  nameWithType: AmqpReceive.onFeedbackReceived
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive.onFeedbackReceived
  package: com.microsoft.azure.sdk.iot.service.transport.amqps
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_event
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_event.yml
  name: AmqpFeedbackReceivedEvent
  nameWithType: AmqpFeedbackReceivedEvent
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent
  type: Interface
  syntax:
    content: public interface AmqpFeedbackReceivedEvent
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_handler
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_handler.yml
  name: AmqpFeedbackReceivedHandler
  nameWithType: AmqpFeedbackReceivedHandler
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedHandler
  type: Class
  summary: <p>Instance of the QPID-Proton-J BaseHandler class to override the events what are needed to handle the receive operation Contains and sets connection parameters (path, port, endpoint) Maintains the layers of AMQP protocol (Link, Session, Connection, Transport) Creates and sets SASL authentication for transport </p>
  syntax:
    content: public class AmqpFeedbackReceivedHandler
- uid: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol.yml
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  type: Enum
  summary: <p>The application-layer protocol used by the service client to communicate with an IoT Hub. </p>
  syntax:
    content: public enum IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service._feedback_batch
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._feedback_batch.yml
  name: FeedbackBatch
  nameWithType: FeedbackBatch
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackBatch
  type: Class
  summary: <p>Data structure for feedback messages received in Json array Provide getters and setters for batch properties and messages </p>
  syntax:
    content: public class FeedbackBatch
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_receive.yml
  name: AmqpReceive
  nameWithType: AmqpReceive
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpReceive
  type: Class
  summary: <p>Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close methods and feedback received event. </p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_event.onFeedbackReceived(String)
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_event
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_feedback_received_event.yml
  name: onFeedbackReceived(String feedbackJson)
  nameWithType: AmqpFeedbackReceivedEvent.onFeedbackReceived(String feedbackJson)
  fullName: void com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpFeedbackReceivedEvent.onFeedbackReceived(String feedbackJson)
  type: Method
  syntax:
    content: public void onFeedbackReceived(String feedbackJson)
    parameters:
    - id: feedbackJson
      type: "26831127"
