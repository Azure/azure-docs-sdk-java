items:
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  id: _compute_nodes_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  children:
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUser(String,String,ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.ComputeNodesImpl(Retrofit,BatchServiceClientImpl)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUser(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserWithServiceResponseAsync(String,String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableScheduling(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableScheduling(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.get(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.get(String,String,ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String,ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String,final ServiceCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,final OutputStream)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktop(String,String,final OutputStream)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettings(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.list(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.list(final String,final ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String,final ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNext(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNext(final String,final ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String,final ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextSinglePageAsync(final String,final ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listSinglePageAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listSinglePageAsync(final String,final ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reboot(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimage(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUser(String,String,String,NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  - com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: ComputeNodesImpl
  nameWithType: ComputeNodesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 84
  package: com.microsoft.azure.batch.protocol.implementation
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._compute_nodes" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: &o1
    content: public class ComputeNodesImpl implements ComputeNodes
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.batch.protocol._compute_nodes
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUser(String,String,ComputeNodeUser)
  id: addUser(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUser(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodesImpl.addUser(String poolId, String nodeId, ComputeNodeUser user)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUser(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 168
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void addUser(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUser(String,String,ComputeNodeUser)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  id: addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodesImpl.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 265
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser)
  id: addUserAsync(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 197
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  id: addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 296
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  id: addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 281
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  id: addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 183
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  id: addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodesImpl.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 216
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_add_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  id: addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodesImpl.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 316
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_add_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.ComputeNodesImpl(Retrofit,BatchServiceClientImpl)
  id: ComputeNodesImpl(Retrofit,BatchServiceClientImpl)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: ComputeNodesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  nameWithType: ComputeNodesImpl.ComputeNodesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  fullName: com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.ComputeNodesImpl(Retrofit retrofit, BatchServiceClientImpl client)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.ComputeNodesImpl*
  type: Constructor
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 96
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Initializes an instance of <xref href="com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl" data-throw-if-not-resolved="false"></xref>.</p>

    <p></p>
  syntax:
    content: public ComputeNodesImpl(Retrofit retrofit, BatchServiceClientImpl client)
    parameters:
    - id: retrofit
      type: 964879b9
      description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    - id: client
      type: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
      description: <p>the instance of the service client containing this operation class. </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUser(String,String,String)
  id: deleteUser(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUser(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodesImpl.deleteUser(String poolId, String nodeId, String userName)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUser(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 383
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void deleteUser(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUser(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  id: deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodesImpl.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 479
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String)
  id: deleteUserAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 412
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  id: deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 510
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  id: deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 495
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  id: deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 398
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserWithServiceResponseAsync(String,String,String)
  id: deleteUserWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodesImpl.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 431
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserWithServiceResponseAsync(String,String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  id: deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodesImpl.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 530
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableScheduling(String,String)
  id: disableScheduling(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.disableScheduling(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableScheduling(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1443
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void disableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableScheduling(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  id: disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodesImpl.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1532
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String)
  id: disableSchedulingAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1468
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  id: disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1561
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  id: disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1547
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  id: disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1456
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingWithServiceResponseAsync(String,String)
  id: disableSchedulingWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1485
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  id: disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodesImpl.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1580
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableScheduling(String,String)
  id: enableScheduling(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.enableScheduling(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableScheduling(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1646
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void enableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableScheduling(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  id: enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodesImpl.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableScheduling*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1731
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String)
  id: enableSchedulingAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1671
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  id: enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1758
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  id: enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1745
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  id: enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1659
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingWithServiceResponseAsync(String,String)
  id: enableSchedulingWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1688
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  id: enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodesImpl.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1776
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.get(String,String)
  id: get(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: get(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.get(String poolId, String nodeId)
  fullName: ComputeNode com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.get(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 824
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ComputeNode get(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node
      description: <p>the ComputeNode object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.get(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.get(String,String,ComputeNodeGetOptions)
  id: get(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodesImpl.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: ComputeNode com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 911
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ComputeNode get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node
      description: <p>the ComputeNode object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.get(String,String,ComputeNodeGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String)
  id: getAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.getAsync(String poolId, String nodeId)
  fullName: Observable<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 849
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNode> getAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the observable to the ComputeNode object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String,ComputeNodeGetOptions)
  id: getAsync(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodesImpl.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: Observable<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 938
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the observable to the ComputeNode object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String,ComputeNodeGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  id: getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodesImpl.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 925
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync(String,String,final ServiceCallback<ComputeNode>)
  id: getAsync(String,String,final ServiceCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodesImpl.getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 837
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String,final ServiceCallback<ComputeNode>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,final OutputStream)
  id: getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,final OutputStream)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final OutputStream outputStream)
  nameWithType: ComputeNodesImpl.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final OutputStream outputStream)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final OutputStream outputStream)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktop*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2145
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final OutputStream outputStream)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    - id: outputStream
      type: 688beaca
      description: <p>The OutputStream object which data will be written to if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,OutputStream)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktop(String,String,final OutputStream)
  id: getRemoteDesktop(String,String,final OutputStream)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktop(String poolId, String nodeId, final OutputStream outputStream)
  nameWithType: ComputeNodesImpl.getRemoteDesktop(String poolId, String nodeId, final OutputStream outputStream)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktop(String poolId, String nodeId, final OutputStream outputStream)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktop*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2040
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void getRemoteDesktop(String poolId, String nodeId, final OutputStream outputStream)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: outputStream
      type: 688beaca
      description: <p>The OutputStream object which data will be written to if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktop(String,String,OutputStream)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String)
  id: getRemoteDesktopAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2082
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  id: getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2189
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  id: getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2175
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  id: getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2069
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopWithServiceResponseAsync(String,String)
  id: getRemoteDesktopWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2100
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headerse7daa122
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  id: getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodesImpl.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2208
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headerse7daa122
      description: <p>the observable to the InputStream object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettings(String,String)
  id: getRemoteLoginSettings(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettings(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettings(String poolId, String nodeId)
  fullName: ComputeNodeGetRemoteLoginSettingsResult com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettings(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1839
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
      description: <p>the ComputeNodeGetRemoteLoginSettingsResult object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettings(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: ComputeNodeGetRemoteLoginSettingsResult com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettings*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1929
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
      description: <p>the ComputeNodeGetRemoteLoginSettingsResult object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String)
  id: getRemoteLoginSettingsAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  fullName: Observable<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1866
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: Observable<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1958
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  id: getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1944
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  id: getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1853
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  id: getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1884
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resultb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headerse7daa122
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  id: getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1977
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resultb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headerse7daa122
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getWithServiceResponseAsync(String,String)
  id: getWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.getWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 866
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_nodeb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_headerse7daa122
      description: <p>the observable to the ComputeNode object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  id: getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodesImpl.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 956
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_nodeb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_headerse7daa122
      description: <p>the observable to the ComputeNode object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.list(final String)
  id: list(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: list(final String poolId)
  nameWithType: ComputeNodesImpl.list(final String poolId)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.list(final String poolId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2269
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> list(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.list(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.list(final String,final ComputeNodeListOptions)
  id: list(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodesImpl.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2387
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.list(final String,final ComputeNodeListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String)
  id: listAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listAsync(final String poolId)
  nameWithType: ComputeNodesImpl.listAsync(final String poolId)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listAsync(final String poolId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2306
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listAsync(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String,final ComputeNodeListOptions)
  id: listAsync(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodesImpl.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2440
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String,final ComputeNodeListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  id: listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodesImpl.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2413
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync(final String,final ListOperationCallback<ComputeNode>)
  id: listAsync(final String,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodesImpl.listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2287
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String,final ListOperationCallback<ComputeNode>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNext(final String)
  id: listNext(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNext(final String nextPageLink)
  nameWithType: ComputeNodesImpl.listNext(final String nextPageLink)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2557
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNext(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNext(final String,final ComputeNodeListNextOptions)
  id: listNext(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodesImpl.listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2670
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNext(final String,final ComputeNodeListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String)
  id: listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink)
  nameWithType: ComputeNodesImpl.listNextAsync(final String nextPageLink)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2595
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String,final ComputeNodeListNextOptions)
  id: listNextAsync(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodesImpl.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2710
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String,final ComputeNodeListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  id: listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodesImpl.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2690
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  id: listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodesImpl.listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2576
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextSinglePageAsync(final String)
  id: listNextSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextSinglePageAsync(final String nextPageLink)
  nameWithType: ComputeNodesImpl.listNextSinglePageAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextSinglePageAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2633
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextSinglePageAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the PagedList&lt;ComputeNode&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextSinglePageAsync(final String,final ComputeNodeListNextOptions)
  id: listNextSinglePageAsync(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextSinglePageAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodesImpl.listNextSinglePageAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextSinglePageAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2750
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;ComputeNode&gt;, ComputeNodeListHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextSinglePageAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. ServiceResponseWithHeaders&lt;PageImpl&lt;ComputeNode&gt;, ComputeNodeListHeaders&gt; * </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the PagedList&lt;ComputeNode&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextWithServiceResponseAsync(final String)
  id: listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ComputeNodesImpl.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2612
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNextWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  id: listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodesImpl.listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2728
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listSinglePageAsync(final String)
  id: listSinglePageAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listSinglePageAsync(final String poolId)
  nameWithType: ComputeNodesImpl.listSinglePageAsync(final String poolId)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listSinglePageAsync(final String poolId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2344
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listSinglePageAsync(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the PagedList&lt;ComputeNode&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listSinglePageAsync(final String,final ComputeNodeListOptions)
  id: listSinglePageAsync(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listSinglePageAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodesImpl.listSinglePageAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listSinglePageAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listSinglePageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2487
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p>ServiceResponseWithHeaders&lt;PageImpl&lt;ComputeNode&gt;, ComputeNodeListHeaders&gt; * </p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listSinglePageAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. ServiceResponseWithHeaders&lt;PageImpl&lt;ComputeNode&gt;, ComputeNodeListHeaders&gt; * </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the PagedList&lt;ComputeNode&gt; object wrapped in <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listWithServiceResponseAsync(final String)
  id: listWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final String poolId)
  nameWithType: ComputeNodesImpl.listWithServiceResponseAsync(final String poolId)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listWithServiceResponseAsync(final String poolId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2323
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listWithServiceResponseAsync(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listWithServiceResponseAsync(final String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  id: listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodesImpl.listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 2458
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reboot(String,String)
  id: reboot(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reboot(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.reboot(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reboot(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reboot*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1022
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public void reboot(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reboot(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  id: reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodesImpl.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reboot*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1115
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public void reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String)
  id: rebootAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.rebootAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1049
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> rebootAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  id: rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodesImpl.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1146
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  id: rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1131
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync(String,String,final ServiceCallback<Void>)
  id: rebootAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1036
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootWithServiceResponseAsync(String,String)
  id: rebootWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: rebootWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.rebootWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1067
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reboot_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.rebootWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  id: rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodesImpl.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1166
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reboot_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimage(String,String)
  id: reimage(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimage(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.reimage(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimage(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimage*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1233
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void reimage(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimage(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  id: reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodesImpl.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimage*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1326
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String)
  id: reimageAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.reimageAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1260
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<Void> reimageAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  id: reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodesImpl.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1357
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  id: reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1342
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync(String,String,final ServiceCallback<Void>)
  id: reimageAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1247
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageWithServiceResponseAsync(String,String)
  id: reimageWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimageWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodesImpl.reimageWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageWithServiceResponseAsync(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1278
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reimage_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimageWithServiceResponseAsync(String,String)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  id: reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodesImpl.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 1377
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reimage_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUser(String,String,String,NodeUpdateUserParameter)
  id: updateUser(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodesImpl.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 597
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUser(String,String,String,NodeUpdateUserParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  id: updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodesImpl.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUser*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 701
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 628
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 734
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 718
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  id: updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 613
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  id: updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodesImpl.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 648
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_update_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  id: updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  langs:
  - java
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodesImpl.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  overload: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/implementation/ComputeNodesImpl.java
    startLine: 755
  package: com.microsoft.azure.batch.protocol.implementation
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_update_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
  overridden: com.microsoft.azure.batch.protocol._compute_nodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 964879b9
  spec.java:
  - name: Retrofit
    fullName: Retrofit
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.ComputeNodesImpl*
  name: ComputeNodesImpl
  nameWithType: ComputeNodesImpl.ComputeNodesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.ComputeNodesImpl
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUser*
  name: addUser
  nameWithType: ComputeNodesImpl.addUser
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUser
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserAsync*
  name: addUserAsync
  nameWithType: ComputeNodesImpl.addUserAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_add_user_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_add_user_headers
    name: ComputeNodeAddUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_add_user_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.addUserWithServiceResponseAsync*
  name: addUserWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.addUserWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.addUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUser*
  name: deleteUser
  nameWithType: ComputeNodesImpl.deleteUser
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUser
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserAsync*
  name: deleteUserAsync
  nameWithType: ComputeNodesImpl.deleteUserAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headers
    name: ComputeNodeDeleteUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.deleteUserWithServiceResponseAsync*
  name: deleteUserWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.deleteUserWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.deleteUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUser*
  name: updateUser
  nameWithType: ComputeNodesImpl.updateUser
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUser
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserAsync*
  name: updateUserAsync
  nameWithType: ComputeNodesImpl.updateUserAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_update_user_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_update_user_headers
    name: ComputeNodeUpdateUserHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_update_user_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.updateUserWithServiceResponseAsync*
  name: updateUserWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.updateUserWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.updateUserWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.get*
  name: get
  nameWithType: ComputeNodesImpl.get
  fullName: ComputeNode com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.get
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getAsync*
  name: getAsync
  nameWithType: ComputeNodesImpl.getAsync
  fullName: ServiceFuture<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._compute_nodeb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_get_headers
    name: ComputeNodeGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_get_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.getWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reboot*
  name: reboot
  nameWithType: ComputeNodesImpl.reboot
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reboot
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootAsync*
  name: rebootAsync
  nameWithType: ComputeNodesImpl.rebootAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reboot_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_reboot_headers
    name: ComputeNodeRebootHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_reboot_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.rebootWithServiceResponseAsync*
  name: rebootWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.rebootWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.rebootWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimage*
  name: reimage
  nameWithType: ComputeNodesImpl.reimage
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimage
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageAsync*
  name: reimageAsync
  nameWithType: ComputeNodesImpl.reimageAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reimage_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_reimage_headers
    name: ComputeNodeReimageHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_reimage_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.reimageWithServiceResponseAsync*
  name: reimageWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.reimageWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.reimageWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableScheduling*
  name: disableScheduling
  nameWithType: ComputeNodesImpl.disableScheduling
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableScheduling
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingAsync*
  name: disableSchedulingAsync
  nameWithType: ComputeNodesImpl.disableSchedulingAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headers
    name: ComputeNodeDisableSchedulingHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.disableSchedulingWithServiceResponseAsync*
  name: disableSchedulingWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.disableSchedulingWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.disableSchedulingWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableScheduling*
  name: enableScheduling
  nameWithType: ComputeNodesImpl.enableScheduling
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableScheduling
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingAsync*
  name: enableSchedulingAsync
  nameWithType: ComputeNodesImpl.enableSchedulingAsync
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headers
    name: ComputeNodeEnableSchedulingHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.enableSchedulingWithServiceResponseAsync*
  name: enableSchedulingWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.enableSchedulingWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.enableSchedulingWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettings*
  name: getRemoteLoginSettings
  nameWithType: ComputeNodesImpl.getRemoteLoginSettings
  fullName: ComputeNodeGetRemoteLoginSettingsResult com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettings
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 897eb10acom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsAsync*
  name: getRemoteLoginSettingsAsync
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsAsync
  fullName: ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resultb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
    name: ComputeNodeGetRemoteLoginSettingsResult
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
    href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headers
    name: ComputeNodeGetRemoteLoginSettingsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteLoginSettingsWithServiceResponseAsync*
  name: getRemoteLoginSettingsWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.getRemoteLoginSettingsWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteLoginSettingsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 688beaca
  spec.java:
  - name: final OutputStream
    fullName: final OutputStream
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktop*
  name: getRemoteDesktop
  nameWithType: ComputeNodesImpl.getRemoteDesktop
  fullName: void com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktop
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 0377aee2
  spec.java:
  - name: final ServiceCallback<InputStream>
    fullName: final ServiceCallback<InputStream>
- uid: 8601070c
  spec.java:
  - name: ServiceFuture<InputStream>
    fullName: ServiceFuture<InputStream>
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopAsync*
  name: getRemoteDesktopAsync
  nameWithType: ComputeNodesImpl.getRemoteDesktopAsync
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3ab19265
  spec.java:
  - name: Observable<InputStream>
    fullName: Observable<InputStream>
- uid: 2af956f9com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headerse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<InputStream, '
    fullName: 'Observable<ServiceResponseWithHeaders<InputStream, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headers
    name: ComputeNodeGetRemoteDesktopHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.getRemoteDesktopWithServiceResponseAsync*
  name: getRemoteDesktopWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.getRemoteDesktopWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.getRemoteDesktopWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.list*
  name: list
  nameWithType: ComputeNodesImpl.list
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.list
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listAsync*
  name: listAsync
  nameWithType: ComputeNodesImpl.listAsync
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_list_headers
    name: ComputeNodeListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
    href: com.microsoft.azure.batch.protocol.models._compute_node_list_headers.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.listWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listSinglePageAsync*
  name: listSinglePageAsync
  nameWithType: ComputeNodesImpl.listSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_list_options
    name: ComputeNodeListOptions
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
    href: com.microsoft.azure.batch.protocol.models._compute_node_list_options.yml
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNext*
  name: listNext
  nameWithType: ComputeNodesImpl.listNext
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNext
  package: com.microsoft.azure.batch.protocol.implementation
- uid: bd82102acom.microsoft.azure.batch.protocol.models._compute_nodee7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models._compute_node
    name: ComputeNode
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
    href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextAsync*
  name: listNextAsync
  nameWithType: ComputeNodesImpl.listNextAsync
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: ComputeNodesImpl.listNextWithServiceResponseAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.listNextSinglePageAsync*
  name: listNextSinglePageAsync
  nameWithType: ComputeNodesImpl.listNextSinglePageAsync
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl.listNextSinglePageAsync
  package: com.microsoft.azure.batch.protocol.implementation
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
    name: ComputeNodeListNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
    href: com.microsoft.azure.batch.protocol.models._compute_node_list_next_options.yml
- uid: com.microsoft.azure.batch.protocol._compute_nodes
  parent: com.microsoft.azure.batch.protocol
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: ComputeNodes
  nameWithType: ComputeNodes
  fullName: com.microsoft.azure.batch.protocol.ComputeNodes
  type: Interface
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._compute_nodes" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public interface ComputeNodes
- uid: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl.yml
  name: BatchServiceClientImpl
  nameWithType: BatchServiceClientImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.BatchServiceClientImpl
  type: Class
  summary: <p>Initializes a new instance of the <xref href="com.microsoft.azure.batch.protocol.implementation._batch_service_client_impl" data-throw-if-not-resolved="false"></xref> class. </p>
  syntax:
    content: public class BatchServiceClientImpl implements BatchServiceClient
- uid: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl
  parent: com.microsoft.azure.batch.protocol.implementation
  href: com.microsoft.azure.batch.protocol.implementation._compute_nodes_impl.yml
  name: ComputeNodesImpl
  nameWithType: ComputeNodesImpl
  fullName: com.microsoft.azure.batch.protocol.implementation.ComputeNodesImpl
  type: Class
  summary: <p>An instance of this class provides access to all the operations defined in <xref href="com.microsoft.azure.batch.protocol._compute_nodes" data-throw-if-not-resolved="false"></xref>. </p>
  syntax: *o1
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUser(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUser(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void addUser(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_user
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_user.yml
  name: ComputeNodeUser
  nameWithType: ComputeNodeUser
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUser
  type: Class
  summary: <p>A user account on a compute node. </p>
  syntax:
    content: public class ComputeNodeUser
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_add_user_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_add_user_headers.yml
  name: ComputeNodeAddUserHeaders
  nameWithType: ComputeNodeAddUserHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserHeaders
  type: Class
  summary: <p>Defines headers for AddUser operation. </p>
  syntax:
    content: public class ComputeNodeAddUserHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_add_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUser(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void addUser(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options.yml
  name: ComputeNodeAddUserOptions
  nameWithType: ComputeNodeAddUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeAddUserOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_addUser operation. </p>
  syntax:
    content: public class ComputeNodeAddUserOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUserAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> addUserAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.addUserWithServiceResponseAsync(String,String,ComputeNodeUser,ComputeNodeAddUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  nameWithType: ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
  type: Method
  summary: >-
    <p>Adds a user account to the specified compute node. You can add a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeAddUserHeaders>> addUserWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeUser user, ComputeNodeAddUserOptions computeNodeAddUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to create a user account. </p>
    - id: user
      type: com.microsoft.azure.batch.protocol.models._compute_node_user
      description: <p>The user account to be created. </p>
    - id: computeNodeAddUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_add_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_add_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUser(String,String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUser(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUser(String poolId, String nodeId, String userName)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String poolId, String nodeId, String userName)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void deleteUser(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUserAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headers.yml
  name: ComputeNodeDeleteUserHeaders
  nameWithType: ComputeNodeDeleteUserHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserHeaders
  type: Class
  summary: <p>Defines headers for DeleteUser operation. </p>
  syntax:
    content: public class ComputeNodeDeleteUserHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserWithServiceResponseAsync(String,String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUser(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void deleteUser(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options.yml
  name: ComputeNodeDeleteUserOptions
  nameWithType: ComputeNodeDeleteUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDeleteUserOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_deleteUser operation. </p>
  syntax:
    content: public class ComputeNodeDeleteUserOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserAsync(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> deleteUserAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.deleteUserWithServiceResponseAsync(String,String,String,ComputeNodeDeleteUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  nameWithType: ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
  type: Method
  summary: >-
    <p>Deletes a user account from the specified compute node. You can delete a user account to a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDeleteUserHeaders>> deleteUserWithServiceResponseAsync(String poolId, String nodeId, String userName, ComputeNodeDeleteUserOptions computeNodeDeleteUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to delete a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to delete. </p>
    - id: computeNodeDeleteUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_delete_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_delete_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUser(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
- uid: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._node_update_user_parameter.yml
  name: NodeUpdateUserParameter
  nameWithType: NodeUpdateUserParameter
  fullName: com.microsoft.azure.batch.protocol.models.NodeUpdateUserParameter
  type: Class
  summary: <p>The set of changes to be made to a user account on a node. </p>
  syntax:
    content: public class NodeUpdateUserParameter
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_update_user_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_update_user_headers.yml
  name: ComputeNodeUpdateUserHeaders
  nameWithType: ComputeNodeUpdateUserHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserHeaders
  type: Class
  summary: <p>Defines headers for UpdateUser operation. </p>
  syntax:
    content: public class ComputeNodeUpdateUserHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_update_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUser(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public void updateUser(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options.yml
  name: ComputeNodeUpdateUserOptions
  nameWithType: ComputeNodeUpdateUserOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeUpdateUserOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_updateUser operation. </p>
  syntax:
    content: public class ComputeNodeUpdateUserOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUserAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> updateUserAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.updateUserWithServiceResponseAsync(String,String,String,NodeUpdateUserParameter,ComputeNodeUpdateUserOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  nameWithType: ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
  type: Method
  summary: >-
    <p>Updates the password or expiration time of a user account on the specified compute node. This operation replaces of all the updateable properties of the account. For example, if the expiryTime element is not specified, the current value is replaced with the default value, not left unmodified. You can update a user account on a node only when it is in the idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeUpdateUserHeaders>> updateUserWithServiceResponseAsync(String poolId, String nodeId, String userName, NodeUpdateUserParameter nodeUpdateUserParameter, ComputeNodeUpdateUserOptions computeNodeUpdateUserOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the machine on which you want to update a user account. </p>
    - id: userName
      type: "26831127"
      description: <p>The name of the user account to update. </p>
    - id: nodeUpdateUserParameter
      type: com.microsoft.azure.batch.protocol.models._node_update_user_parameter
      description: <p>The parameters for the request. </p>
    - id: computeNodeUpdateUserOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_update_user_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_update_user_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node.yml
  name: ComputeNode
  nameWithType: ComputeNode
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNode
  type: Class
  summary: <p>A compute node in the Batch service. </p>
  syntax:
    content: public class ComputeNode
- uid: com.microsoft.azure.batch.protocol._compute_nodes.get(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: get(String poolId, String nodeId)
  nameWithType: ComputeNodes.get(String poolId, String nodeId)
  fullName: ComputeNode com.microsoft.azure.batch.protocol.ComputeNodes.get(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ComputeNode get(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node
      description: <p>the ComputeNode object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String,final ServiceCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, final ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId)
  fullName: Observable<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNode> getAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the observable to the ComputeNode object </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_get_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_get_headers.yml
  name: ComputeNodeGetHeaders
  nameWithType: ComputeNodeGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetHeaders
  type: Class
  summary: <p>Defines headers for Get operation. </p>
  syntax:
    content: public class ComputeNodeGetHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_nodeb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_headerse7daa122
      description: <p>the observable to the ComputeNode object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.get(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: ComputeNode com.microsoft.azure.batch.protocol.ComputeNodes.get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ComputeNode get(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node
      description: <p>the ComputeNode object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_get_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_get_options.yml
  name: ComputeNodeGetOptions
  nameWithType: ComputeNodeGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_get operation. </p>
  syntax:
    content: public class ComputeNodeGetOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String,ComputeNodeGetOptions,final ServiceCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions, final ServiceCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getAsync(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: Observable<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNode> getAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the observable to the ComputeNode object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getWithServiceResponseAsync(String,String,ComputeNodeGetOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  nameWithType: ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
  type: Method
  summary: >-
    <p>Gets information about the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNode, ComputeNodeGetHeaders>> getWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetOptions computeNodeGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to get information about. </p>
    - id: computeNodeGetOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_nodeb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_headerse7daa122
      description: <p>the observable to the ComputeNode object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reboot(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reboot(String poolId, String nodeId)
  nameWithType: ComputeNodes.reboot(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public void reboot(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> rebootAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: rebootAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> rebootAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_reboot_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_reboot_headers.yml
  name: ComputeNodeRebootHeaders
  nameWithType: ComputeNodeRebootHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootHeaders
  type: Class
  summary: <p>Defines headers for Reboot operation. </p>
  syntax:
    content: public class ComputeNodeRebootHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.rebootWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: rebootWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reboot_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reboot(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public void reboot(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option.yml
  name: ComputeNodeRebootOption
  nameWithType: ComputeNodeRebootOption
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOption
  type: Enum
  summary: <p>Defines values for <xref href="com.microsoft.azure.batch.protocol.models._compute_node_reboot_option" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum ComputeNodeRebootOption
- uid: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options.yml
  name: ComputeNodeRebootOptions
  nameWithType: ComputeNodeRebootOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeRebootOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_reboot operation. </p>
  syntax:
    content: public class ComputeNodeRebootOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.rebootAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<Void> rebootAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.rebootWithServiceResponseAsync(String,String,ComputeNodeRebootOption,ComputeNodeRebootOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  nameWithType: ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
  type: Method
  summary: >-
    <p>Restarts the specified compute node. You can restart a node only if it is in an idle or running state.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeRebootHeaders>> rebootWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeRebootOption nodeRebootOption, ComputeNodeRebootOptions computeNodeRebootOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeRebootOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_option
      description: "<p>When to reboot the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeRebootOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reboot_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reboot_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimage(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimage(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimage(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void reimage(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> reimageAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimageAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<Void> reimageAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_reimage_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_reimage_headers.yml
  name: ComputeNodeReimageHeaders
  nameWithType: ComputeNodeReimageHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageHeaders
  type: Class
  summary: <p>Defines headers for Reimage operation. </p>
  syntax:
    content: public class ComputeNodeReimageHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimageWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimageWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reimage_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimage(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void reimage(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option.yml
  name: ComputeNodeReimageOption
  nameWithType: ComputeNodeReimageOption
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOption
  type: Enum
  summary: <p>Defines values for <xref href="com.microsoft.azure.batch.protocol.models._compute_node_reimage_option" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum ComputeNodeReimageOption
- uid: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options.yml
  name: ComputeNodeReimageOptions
  nameWithType: ComputeNodeReimageOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeReimageOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_reimage operation. </p>
  syntax:
    content: public class ComputeNodeReimageOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimageAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<Void> reimageAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.reimageWithServiceResponseAsync(String,String,ComputeNodeReimageOption,ComputeNodeReimageOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  nameWithType: ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
  type: Method
  summary: >-
    <p>Reinstalls the operating system on the specified compute node. You can reinstall the operating system on a node only if it is in an idle or running state. This API can be invoked only on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeReimageHeaders>> reimageWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeReimageOption nodeReimageOption, ComputeNodeReimageOptions computeNodeReimageOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node that you want to restart. </p>
    - id: nodeReimageOption
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_option
      description: "<p>When to reimage the compute node and what to do with currently running tasks. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion', 'retainedData' </p>"
    - id: computeNodeReimageOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_reimage_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_reimage_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableScheduling(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableScheduling(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void disableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headers.yml
  name: ComputeNodeDisableSchedulingHeaders
  nameWithType: ComputeNodeDisableSchedulingHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingHeaders
  type: Class
  summary: <p>Defines headers for DisableScheduling operation. </p>
  syntax:
    content: public class ComputeNodeDisableSchedulingHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableScheduling(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void disableScheduling(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option.yml
  name: DisableComputeNodeSchedulingOption
  nameWithType: DisableComputeNodeSchedulingOption
  fullName: com.microsoft.azure.batch.protocol.models.DisableComputeNodeSchedulingOption
  type: Enum
  summary: <p>Defines values for <xref href="com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public enum DisableComputeNodeSchedulingOption
- uid: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options.yml
  name: ComputeNodeDisableSchedulingOptions
  nameWithType: ComputeNodeDisableSchedulingOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeDisableSchedulingOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_disableScheduling operation. </p>
  syntax:
    content: public class ComputeNodeDisableSchedulingOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> disableSchedulingAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.disableSchedulingWithServiceResponseAsync(String,String,DisableComputeNodeSchedulingOption,ComputeNodeDisableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  nameWithType: ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
  type: Method
  summary: >-
    <p>Disables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeDisableSchedulingHeaders>> disableSchedulingWithServiceResponseAsync(String poolId, String nodeId, DisableComputeNodeSchedulingOption nodeDisableSchedulingOption, ComputeNodeDisableSchedulingOptions computeNodeDisableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to disable task scheduling. </p>
    - id: nodeDisableSchedulingOption
      type: com.microsoft.azure.batch.protocol.models._disable_compute_node_scheduling_option
      description: "<p>What to do with currently running tasks when disabling task scheduling on the compute node. The default value is requeue. Possible values include: 'requeue', 'terminate', 'taskCompletion' </p>"
    - id: computeNodeDisableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_disable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableScheduling(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableScheduling(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableScheduling(String poolId, String nodeId)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void enableScheduling(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableSchedulingAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableSchedulingAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headers.yml
  name: ComputeNodeEnableSchedulingHeaders
  nameWithType: ComputeNodeEnableSchedulingHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingHeaders
  type: Class
  summary: <p>Defines headers for EnableScheduling operation. </p>
  syntax:
    content: public class ComputeNodeEnableSchedulingHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableScheduling(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public void enableScheduling(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options.yml
  name: ComputeNodeEnableSchedulingOptions
  nameWithType: ComputeNodeEnableSchedulingOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeEnableSchedulingOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_enableScheduling operation. </p>
  syntax:
    content: public class ComputeNodeEnableSchedulingOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  fullName: ServiceFuture<Void> com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingAsync(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: Observable<Void> com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<Void> enableSchedulingAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.enableSchedulingWithServiceResponseAsync(String,String,ComputeNodeEnableSchedulingOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  nameWithType: ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  fullName: Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
  type: Method
  summary: >-
    <p>Enables task scheduling on the specified compute node.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, ComputeNodeEnableSchedulingHeaders>> enableSchedulingWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeEnableSchedulingOptions computeNodeEnableSchedulingOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node on which you want to enable task scheduling. </p>
    - id: computeNodeEnableSchedulingOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models._compute_node_enable_scheduling_headerse7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceResponseWithHeaders</ref> object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result.yml
  name: ComputeNodeGetRemoteLoginSettingsResult
  nameWithType: ComputeNodeGetRemoteLoginSettingsResult
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsResult
  type: Class
  summary: <p>The remote login settings for a compute node. </p>
  syntax:
    content: public class ComputeNodeGetRemoteLoginSettingsResult
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettings(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettings(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId)
  fullName: ComputeNodeGetRemoteLoginSettingsResult com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
      description: <p>the ComputeNodeGetRemoteLoginSettingsResult object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  fullName: Observable<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headers.yml
  name: ComputeNodeGetRemoteLoginSettingsHeaders
  nameWithType: ComputeNodeGetRemoteLoginSettingsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsHeaders
  type: Class
  summary: <p>Defines headers for GetRemoteLoginSettings operation. </p>
  syntax:
    content: public class ComputeNodeGetRemoteLoginSettingsHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resultb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headerse7daa122
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettings(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: ComputeNodeGetRemoteLoginSettingsResult com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ComputeNodeGetRemoteLoginSettingsResult getRemoteLoginSettings(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_result
      description: <p>the ComputeNodeGetRemoteLoginSettingsResult object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options.yml
  name: ComputeNodeGetRemoteLoginSettingsOptions
  nameWithType: ComputeNodeGetRemoteLoginSettingsOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteLoginSettingsOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_getRemoteLoginSettings operation. </p>
  syntax:
    content: public class ComputeNodeGetRemoteLoginSettingsOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions,final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  fullName: ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions, final ServiceCallback<ComputeNodeGetRemoteLoginSettingsResult> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: Observable<ComputeNodeGetRemoteLoginSettingsResult> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ComputeNodeGetRemoteLoginSettingsResult> getRemoteLoginSettingsAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resulta08ddfce
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteLoginSettingsWithServiceResponseAsync(String,String,ComputeNodeGetRemoteLoginSettingsOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  nameWithType: ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  fullName: Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
  type: Method
  summary: >-
    <p>Gets the settings required for remote login to a compute node. Before you can remotely login to a node using the remote login settings, you must create a user account on the node. This API can be invoked only on pools created with the virtual machine configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<ComputeNodeGetRemoteLoginSettingsResult, ComputeNodeGetRemoteLoginSettingsHeaders>> getRemoteLoginSettingsWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteLoginSettingsOptions computeNodeGetRemoteLoginSettingsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which to obtain the remote login settings. </p>
    - id: computeNodeGetRemoteLoginSettingsOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_resultb33c76fccom.microsoft.azure.batch.protocol.models._compute_node_get_remote_login_settings_headerse7daa122
      description: <p>the observable to the ComputeNodeGetRemoteLoginSettingsResult object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktop(String,String,OutputStream)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void getRemoteDesktop(String poolId, String nodeId, OutputStream outputStream)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: outputStream
      type: 3a09e348
      description: <p>The OutputStream object which data will be written to if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktopAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headers.yml
  name: ComputeNodeGetRemoteDesktopHeaders
  nameWithType: ComputeNodeGetRemoteDesktopHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopHeaders
  type: Class
  summary: <p>Defines headers for GetRemoteDesktop operation. </p>
  syntax:
    content: public class ComputeNodeGetRemoteDesktopHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headerse7daa122
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktop(String,String,ComputeNodeGetRemoteDesktopOptions,OutputStream)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  nameWithType: ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  fullName: void com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public void getRemoteDesktop(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, OutputStream outputStream)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    - id: outputStream
      type: 3a09e348
      description: <p>The OutputStream object which data will be written to if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options.yml
  name: ComputeNodeGetRemoteDesktopOptions
  nameWithType: ComputeNodeGetRemoteDesktopOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeGetRemoteDesktopOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_getRemoteDesktop operation. </p>
  syntax:
    content: public class ComputeNodeGetRemoteDesktopOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions,final ServiceCallback<InputStream>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  fullName: ServiceFuture<InputStream> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions, final ServiceCallback<InputStream> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 0377aee2
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 8601070c
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: Observable<InputStream> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<InputStream> getRemoteDesktopAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3ab19265
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.getRemoteDesktopWithServiceResponseAsync(String,String,ComputeNodeGetRemoteDesktopOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  nameWithType: ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  fullName: Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
  type: Method
  summary: >-
    <p>Gets the Remote Desktop Protocol file for the specified compute node. Before you can access a node by using the RDP file, you must create a user account on the node. This API can only be invoked on pools created with the cloud service configuration property.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<InputStream, ComputeNodeGetRemoteDesktopHeaders>> getRemoteDesktopWithServiceResponseAsync(String poolId, String nodeId, ComputeNodeGetRemoteDesktopOptions computeNodeGetRemoteDesktopOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool that contains the compute node. </p>
    - id: nodeId
      type: "26831127"
      description: <p>The ID of the compute node for which you want to get the Remote Desktop Protocol file. </p>
    - id: computeNodeGetRemoteDesktopOptions
      type: com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 2af956f9com.microsoft.azure.batch.protocol.models._compute_node_get_remote_desktop_headerse7daa122
      description: <p>the observable to the InputStream object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.list(final String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: list(final String poolId)
  nameWithType: ComputeNodes.list(final String poolId)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.list(final String poolId)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> list(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listAsync(final String poolId, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listAsync(final String poolId)
  nameWithType: ComputeNodes.listAsync(final String poolId)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listAsync(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_list_headers
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_list_headers.yml
  name: ComputeNodeListHeaders
  nameWithType: ComputeNodeListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListHeaders
  type: Class
  summary: <p>Defines headers for List operation. </p>
  syntax:
    content: public class ComputeNodeListHeaders
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listWithServiceResponseAsync(final String poolId)
  nameWithType: ComputeNodes.listWithServiceResponseAsync(final String poolId)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String poolId)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listWithServiceResponseAsync(final String poolId)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.list(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> list(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_list_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_list_options.yml
  name: ComputeNodeListOptions
  nameWithType: ComputeNodeListOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListOptions
  type: Class
  summary: <p>Additional parameters for the ComputeNode_list operation. </p>
  syntax:
    content: public class ComputeNodeListOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String,final ComputeNodeListOptions,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listAsync(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listWithServiceResponseAsync(final String,final ComputeNodeListOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  nameWithType: ComputeNodes.listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listWithServiceResponseAsync(final String poolId, final ComputeNodeListOptions computeNodeListOptions)
    parameters:
    - id: poolId
      type: 3d93591e
      description: <p>The ID of the pool from which you want to list nodes. </p>
    - id: computeNodeListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNext(final String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNext(final String nextPageLink)
  nameWithType: ComputeNodes.listNext(final String nextPageLink)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listNextAsync(final String nextPageLink, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNextAsync(final String nextPageLink)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNext(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: PagedList<ComputeNode> com.microsoft.azure.batch.protocol.ComputeNodes.listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public PagedList<ComputeNode> listNext(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the PagedList&lt;ComputeNode&gt; object if successful. </p>
- uid: com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._compute_node_list_next_options.yml
  name: ComputeNodeListNextOptions
  nameWithType: ComputeNodeListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeListNextOptions
  type: Class
  summary: <p>Additional parameters for the listNext operation. </p>
  syntax:
    content: public class ComputeNodeListNextOptions
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String,final ComputeNodeListNextOptions,final ServiceFuture<List<ComputeNode>>,final ListOperationCallback<ComputeNode>)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  fullName: ServiceFuture<List<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<List<ComputeNode>> listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions, final ServiceFuture<List<ComputeNode>> serviceFuture, final ListOperationCallback<ComputeNode> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models._compute_nodea08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the <ref refid="" kindref="compound">ServiceFuture</ref> object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNextAsync(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: Observable<Page<ComputeNode>> com.microsoft.azure.batch.protocol.ComputeNodes.listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<Page<ComputeNode>> listNextAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models._compute_nodee7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol._compute_nodes.listNextWithServiceResponseAsync(final String,final ComputeNodeListNextOptions)
  parent: com.microsoft.azure.batch.protocol._compute_nodes
  href: com.microsoft.azure.batch.protocol._compute_nodes.yml
  name: listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  nameWithType: ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  fullName: Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> com.microsoft.azure.batch.protocol.ComputeNodes.listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
  type: Method
  summary: >-
    <p>Lists the compute nodes in the specified pool.</p>

    <p></p>
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<ComputeNode>, ComputeNodeListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final ComputeNodeListNextOptions computeNodeListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: computeNodeListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models._compute_node_list_next_options
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models._compute_node8135b5ebcom.microsoft.azure.batch.protocol.models._compute_node_list_headerse7daa122
      description: <p>the observable to the PagedList&lt;ComputeNode&gt; object </p>
- uid: com.microsoft.azure.batch.protocol.models._batch_error_exception
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._batch_error_exception.yml
  name: BatchErrorException
  nameWithType: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
  type: Class
  summary: <p>Exception thrown for an invalid response with <xref href="com.microsoft.azure.batch.protocol.models._batch_error" data-throw-if-not-resolved="false"></xref> information. </p>
  syntax:
    content: public class BatchErrorException
- uid: com.microsoft.azure.batch.protocol.models._page_impl
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models._page_impl.yml
  name: PageImpl<T>
  nameWithType: PageImpl<T>
  fullName: com.microsoft.azure.batch.protocol.models.PageImpl<T>
  type: Class
  summary: >-
    <p>An instance of this class defines a page of Azure resources and a link to get the next page of resources, if any.</p>

    <p></p>
  syntax:
    content: public class PageImpl<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>type of Azure resource </p>
