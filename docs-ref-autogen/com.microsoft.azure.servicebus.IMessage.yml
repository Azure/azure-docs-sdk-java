### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.IMessage"
fullName: "com.microsoft.azure.servicebus.IMessage"
name: "IMessage"
nameWithType: "IMessage"
summary: "Represents the message that is exchanged between Azure Service Bus and its clients."
syntax: "public interface IMessage"
methods:
- uid: "com.microsoft.azure.servicebus.IMessage.createCopy()"
  fullName: "com.microsoft.azure.servicebus.IMessage.createCopy()"
  name: "createCopy()"
  nameWithType: "IMessage.createCopy()"
  summary: "Creates a shallow copy of this message."
  modifiers:
  - "abstract"
  syntax: "public abstract IMessage createCopy()"
  desc: "Creates a shallow copy of this message."
  returns:
    description: "copy of this message"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getBody()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getBody()"
  name: "getBody()"
  nameWithType: "IMessage.getBody()"
  summary: "Gets the body of this message as a byte array."
  deprecatedTag: "Message body need not just a byte array. Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.getMessageBody()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getMessageBody()\"></xref>"
  modifiers:
  - "abstract"
  syntax: "@Deprecated\npublic abstract byte[] getBody()"
  desc: "Gets the body of this message as a byte array. It is up to client applications to decode the bytes."
  hasDeprecatedTag: true
  returns:
    description: "body of this message"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.servicebus.IMessage.getContentType()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getContentType()"
  name: "getContentType()"
  nameWithType: "IMessage.getContentType()"
  summary: "Gets the content type of this message."
  modifiers:
  - "abstract"
  syntax: "public abstract String getContentType()"
  desc: "Gets the content type of this message. Optionally describes the payload of the message, with a descriptor following the format of RFC2045, Section 5, for example \"application/json\". Note that content type is not same as message body type."
  returns:
    description: "content type of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getCorrelationId()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getCorrelationId()"
  name: "getCorrelationId()"
  nameWithType: "IMessage.getCorrelationId()"
  summary: "Gets a correlation identifier."
  modifiers:
  - "abstract"
  syntax: "public abstract String getCorrelationId()"
  desc: "Gets a correlation identifier. Allows an application to specify a context for the message for the purposes of correlation, for example reflecting the MessageId of a message that is being replied to."
  returns:
    description: "correlation Id of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getDeadLetterSource()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getDeadLetterSource()"
  name: "getDeadLetterSource()"
  nameWithType: "IMessage.getDeadLetterSource()"
  summary: "Gets the name of the queue or subscription that this message was enqueued on, before it was deadlettered."
  modifiers:
  - "abstract"
  syntax: "public abstract String getDeadLetterSource()"
  desc: "Gets the name of the queue or subscription that this message was enqueued on, before it was deadlettered. This value is only set in messages that have been dead-lettered and subsequently auto-forwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered. This property is read-only."
  returns:
    description: "dead letter source of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getDeliveryCount()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getDeliveryCount()"
  name: "getDeliveryCount()"
  nameWithType: "IMessage.getDeliveryCount()"
  summary: "Gets the number of the times this message was delivered to clients."
  modifiers:
  - "abstract"
  syntax: "public abstract long getDeliveryCount()"
  desc: "Gets the number of the times this message was delivered to clients. The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only."
  returns:
    description: "delivery count of this message."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()"
  name: "getEnqueuedTimeUtc()"
  nameWithType: "IMessage.getEnqueuedTimeUtc()"
  summary: "Gets the instant at which this message was enqueued in Azure Service Bus."
  modifiers:
  - "abstract"
  syntax: "public abstract Instant getEnqueuedTimeUtc()"
  desc: "Gets the instant at which this message was enqueued in Azure Service Bus. The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only."
  returns:
    description: "the instant at which the message was enqueued in Azure Service Bus"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc()"
  name: "getExpiresAtUtc()"
  nameWithType: "IMessage.getExpiresAtUtc()"
  summary: "Gets the instant at which this message will expire."
  modifiers:
  - "abstract"
  syntax: "public abstract Instant getExpiresAtUtc()"
  desc: "Gets the instant at which this message will expire. The value is the UTC instant for when the message is scheduled for removal and will no longer available for retrieval from the entity due to expiration. Expiry is controlled by the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeToLive\"></xref> property. This property is computed from <xref uid=\"com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnqueuedTimeUtc\"></xref>\\+<xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeToLive\"></xref>."
  returns:
    description: "instant at which this message expires"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getLabel()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getLabel()"
  name: "getLabel()"
  nameWithType: "IMessage.getLabel()"
  summary: "Gets the application specific message label."
  modifiers:
  - "abstract"
  syntax: "public abstract String getLabel()"
  desc: "Gets the application specific message label. This property enables the application to indicate the purpose of the message to the receiver in a standardized fashion, similar to an email subject line. The mapped AMQP property is \"subject\"."
  returns:
    description: "Label property value of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getLockToken()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getLockToken()"
  name: "getLockToken()"
  nameWithType: "IMessage.getLockToken()"
  summary: "Gets the lock token for the current message."
  modifiers:
  - "abstract"
  syntax: "public abstract UUID getLockToken()"
  desc: "Gets the lock token for the current message. The lock token is a reference to the lock that is being held by the broker in PEEKLOCK mode. Locks are used to explicitly settle messages as explained in the [product documentation in more detail][]. The token can also be used to pin the lock permanently through the [Deferral API][] and, with that, take the message out of the regular delivery state flow. This property is read-only.\n\n\n[product documentation in more detail]: https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement\n[Deferral API]: https://docs.microsoft.com/azure/service-bus-messaging/message-deferral"
  returns:
    description: "lock token of this message."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc()"
  name: "getLockedUntilUtc()"
  nameWithType: "IMessage.getLockedUntilUtc()"
  summary: "Gets the instant at which the lock of this message expires."
  modifiers:
  - "abstract"
  syntax: "public abstract Instant getLockedUntilUtc()"
  desc: "Gets the instant at which the lock of this message expires. For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription. When the lock expires, the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getDeliveryCount()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeliveryCount\"></xref> is incremented and the message is again available for retrieval. This property is read-only."
  returns:
    description: "the instant at which the lock of this message expires if the message is received using PEEKLOCK mode. Otherwise it returns null."
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getMessageBody()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getMessageBody()"
  name: "getMessageBody()"
  nameWithType: "IMessage.getMessageBody()"
  summary: "Gets the body of this message."
  modifiers:
  - "abstract"
  syntax: "public abstract MessageBody getMessageBody()"
  desc: "Gets the body of this message. Client applications should extract message content based on body type."
  returns:
    description: "body of this message"
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageBody?alt=com.microsoft.azure.servicebus.MessageBody&text=MessageBody\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getMessageId()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getMessageId()"
  name: "getMessageId()"
  nameWithType: "IMessage.getMessageId()"
  summary: "Gets the Id of this message."
  modifiers:
  - "abstract"
  syntax: "public abstract String getMessageId()"
  desc: "Gets the Id of this message. The message identifier is an application-defined value that uniquely identifies the message and its payload. The identifier is a free-form string and can reflect a GUID or an identifier derived from the application context. If enabled, the [duplicate detection][] feature identifies and removes second and further submissions of messages with the same MessageId.\n\n\n[duplicate detection]: https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection"
  returns:
    description: "Id of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getPartitionKey()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getPartitionKey()"
  name: "getPartitionKey()"
  nameWithType: "IMessage.getPartitionKey()"
  summary: "Gets the partition key for sending a message to a partitioned entity."
  modifiers:
  - "abstract"
  syntax: "public abstract String getPartitionKey()"
  desc: "Gets the partition key for sending a message to a partitioned entity. For [partitioned entities][], setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SessionId \"></xref> property overrides this value.\n\n\n[partitioned entities]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning"
  returns:
    description: "partition key of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getProperties()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getProperties()"
  name: "getProperties()"
  nameWithType: "IMessage.getProperties()"
  summary: "Gets the map of user application properties of this message."
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,Object> getProperties()"
  desc: "Gets the map of user application properties of this message. Client applications can set user properties (headers) on the message using this map."
  returns:
    description: "the map of user application properties of this message"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessage.getReplyTo()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getReplyTo()"
  name: "getReplyTo()"
  nameWithType: "IMessage.getReplyTo()"
  summary: "Gets the address of an entity to send replies to."
  modifiers:
  - "abstract"
  syntax: "public abstract String getReplyTo()"
  desc: "Gets the address of an entity to send replies to. This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to."
  returns:
    description: "ReplyTo property value of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getReplyToSessionId()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getReplyToSessionId()"
  name: "getReplyToSessionId()"
  nameWithType: "IMessage.getReplyToSessionId()"
  summary: "Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address."
  modifiers:
  - "abstract"
  syntax: "public abstract String getReplyToSessionId()"
  desc: "Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address. This value augments the ReplyTo information and specifies which SessionId should be set for the reply when sent to the reply entity."
  returns:
    description: "ReplyToSessionId property value of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()"
  name: "getScheduledEnqueueTimeUtc()"
  nameWithType: "IMessage.getScheduledEnqueueTimeUtc()"
  summary: "Gets the scheduled enqueue time of this message."
  modifiers:
  - "abstract"
  syntax: "public abstract Instant getScheduledEnqueueTimeUtc()"
  desc: "Gets the scheduled enqueue time of this message. This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state."
  returns:
    description: "the instant at which the message will be enqueued in Azure Service Bus"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc()"
  name: "getScheduledEnqueuedTimeUtc()"
  nameWithType: "IMessage.getScheduledEnqueuedTimeUtc()"
  summary: "Gets the scheduled enqueue time of this message."
  deprecatedTag: "Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getScheduledEnqueueTimeUtc()\"></xref>"
  modifiers:
  - "abstract"
  syntax: "@Deprecated\npublic abstract Instant getScheduledEnqueuedTimeUtc()"
  desc: "Gets the scheduled enqueue time of this message. This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state."
  hasDeprecatedTag: true
  returns:
    description: "the instant at which the message will be enqueued in Azure Service Bus"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getSequenceNumber()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getSequenceNumber()"
  name: "getSequenceNumber()"
  nameWithType: "IMessage.getSequenceNumber()"
  summary: "Gets the unique number assigned to a message by Service Bus."
  modifiers:
  - "abstract"
  syntax: "public abstract long getSequenceNumber()"
  desc: "Gets the unique number assigned to a message by Service Bus. The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier. For partitioned entities, the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase and are gapless. They roll over to 0 when the 48-64 bit range is exhausted. This property is read-only."
  returns:
    description: "sequence number of this message"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getSessionId()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getSessionId()"
  name: "getSessionId()"
  nameWithType: "IMessage.getSessionId()"
  summary: "Gets the session identifier for a session-aware entity."
  modifiers:
  - "abstract"
  syntax: "public abstract String getSessionId()"
  desc: "Gets the session identifier for a session-aware entity. For session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored."
  returns:
    description: "session id of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getTimeToLive()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getTimeToLive()"
  name: "getTimeToLive()"
  nameWithType: "IMessage.getTimeToLive()"
  summary: "Gets the duration before this message expires."
  modifiers:
  - "abstract"
  syntax: "public abstract Duration getTimeToLive()"
  desc: "Gets the duration before this message expires. This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid=\"com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getEnqueuedTimeUtc\"></xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does."
  returns:
    description: "Time to Live duration of this message"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getTo()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getTo()"
  name: "getTo()"
  nameWithType: "IMessage.getTo()"
  summary: "Gets the \"to\" address."
  modifiers:
  - "abstract"
  syntax: "public abstract String getTo()"
  desc: "Gets the \"to\" address."
  returns:
    description: "To property value of this message"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.getViaPartitionKey()"
  fullName: "com.microsoft.azure.servicebus.IMessage.getViaPartitionKey()"
  name: "getViaPartitionKey()"
  nameWithType: "IMessage.getViaPartitionKey()"
  summary: "Gets the partition key for sending a message to a entity via another partitioned transfer entity."
  modifiers:
  - "abstract"
  syntax: "public abstract String getViaPartitionKey()"
  desc: "Gets the partition key for sending a message to a entity via another partitioned transfer entity. If a message is sent via a transfer queue in the scope of a transaction, this value selects the transfer queue partition: This is functionally equivalent to <xref uid=\"com.microsoft.azure.servicebus.IMessage.getPartitionKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getPartitionKey()\"></xref> and ensures that messages are kept together and in order as they are transferred."
  returns:
    description: "partition key on the via queue."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessage.setBody(byte[])"
  fullName: "com.microsoft.azure.servicebus.IMessage.setBody(byte[] body)"
  name: "setBody(byte[] body)"
  nameWithType: "IMessage.setBody(byte[] body)"
  summary: "Sets the body of this message as a byte array."
  deprecatedTag: "Message body need not just a byte array. Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.setMessageBody(com.microsoft.azure.servicebus.MessageBody)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setMessageBody(MessageBody)\"></xref>"
  modifiers:
  - "abstract"
  parameters:
  - description: "body of this message"
    name: "body"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "@Deprecated\npublic abstract void setBody(byte[] body)"
  desc: "Sets the body of this message as a byte array."
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.servicebus.IMessage.setContentType(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setContentType(String contentType)"
  name: "setContentType(String contentType)"
  nameWithType: "IMessage.setContentType(String contentType)"
  summary: "Sets the content type of this message."
  modifiers:
  - "abstract"
  parameters:
  - description: "content type of this message"
    name: "contentType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setContentType(String contentType)"
  desc: "Sets the content type of this message."
- uid: "com.microsoft.azure.servicebus.IMessage.setCorrelationId(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setCorrelationId(String correlationId)"
  name: "setCorrelationId(String correlationId)"
  nameWithType: "IMessage.setCorrelationId(String correlationId)"
  summary: "Sets a correlation identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "correlation Id of this message"
    name: "correlationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setCorrelationId(String correlationId)"
  desc: "Sets a correlation identifier."
- uid: "com.microsoft.azure.servicebus.IMessage.setLabel(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setLabel(String label)"
  name: "setLabel(String label)"
  nameWithType: "IMessage.setLabel(String label)"
  summary: "Sets an application specific message label."
  modifiers:
  - "abstract"
  parameters:
  - description: "Label property value of this message"
    name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setLabel(String label)"
  desc: "Sets an application specific message label."
- uid: "com.microsoft.azure.servicebus.IMessage.setMessageBody(com.microsoft.azure.servicebus.MessageBody)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setMessageBody(MessageBody body)"
  name: "setMessageBody(MessageBody body)"
  nameWithType: "IMessage.setMessageBody(MessageBody body)"
  summary: "Sets the body of this message."
  modifiers:
  - "abstract"
  parameters:
  - description: "body of this message"
    name: "body"
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageBody?alt=com.microsoft.azure.servicebus.MessageBody&text=MessageBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setMessageBody(MessageBody body)"
  desc: "Sets the body of this message."
- uid: "com.microsoft.azure.servicebus.IMessage.setMessageId(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setMessageId(String messageId)"
  name: "setMessageId(String messageId)"
  nameWithType: "IMessage.setMessageId(String messageId)"
  summary: "Sets the Id of this message."
  modifiers:
  - "abstract"
  parameters:
  - description: "Id of this message"
    name: "messageId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setMessageId(String messageId)"
  desc: "Sets the Id of this message."
- uid: "com.microsoft.azure.servicebus.IMessage.setPartitionKey(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setPartitionKey(String partitionKey)"
  name: "setPartitionKey(String partitionKey)"
  nameWithType: "IMessage.setPartitionKey(String partitionKey)"
  summary: "Sets a partition key for sending a message to a partitioned entity"
  modifiers:
  - "abstract"
  parameters:
  - description: "partition key of this message"
    name: "partitionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setPartitionKey(String partitionKey)"
  desc: "Sets a partition key for sending a message to a partitioned entity"
- uid: "com.microsoft.azure.servicebus.IMessage.setProperties(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setProperties(Map<String,Object> properties)"
  name: "setProperties(Map<String,Object> properties)"
  nameWithType: "IMessage.setProperties(Map<String,Object> properties)"
  summary: "Sets the map of user application properties of this message."
  modifiers:
  - "abstract"
  parameters:
  - description: "the map of user application properties of this message"
    name: "properties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract void setProperties(Map<String,Object> properties)"
  desc: "Sets the map of user application properties of this message. Client applications can set user properties on the message using this map."
- uid: "com.microsoft.azure.servicebus.IMessage.setReplyTo(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setReplyTo(String replyTo)"
  name: "setReplyTo(String replyTo)"
  nameWithType: "IMessage.setReplyTo(String replyTo)"
  summary: "Sets the address of an entity to send replies to."
  modifiers:
  - "abstract"
  parameters:
  - description: "ReplyTo property value of this message"
    name: "replyTo"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setReplyTo(String replyTo)"
  desc: "Sets the address of an entity to send replies to."
- uid: "com.microsoft.azure.servicebus.IMessage.setReplyToSessionId(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setReplyToSessionId(String replyToSessionId)"
  name: "setReplyToSessionId(String replyToSessionId)"
  nameWithType: "IMessage.setReplyToSessionId(String replyToSessionId)"
  summary: "Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address."
  modifiers:
  - "abstract"
  parameters:
  - description: "ReplyToSessionId property value of this message"
    name: "replyToSessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setReplyToSessionId(String replyToSessionId)"
  desc: "Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address."
- uid: "com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(java.time.Instant)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)"
  name: "setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)"
  nameWithType: "IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)"
  summary: "Sets the scheduled enqueue time of this message."
  modifiers:
  - "abstract"
  parameters:
  - description: "the instant at which this message should be enqueued in Azure Service Bus"
    name: "scheduledEnqueueTimeUtc"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)"
  desc: "Sets the scheduled enqueue time of this message."
- uid: "com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc(java.time.Instant)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)"
  name: "setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)"
  nameWithType: "IMessage.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)"
  summary: "Sets the scheduled enqueue time of this message."
  deprecatedTag: "Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(java.time.Instant)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setScheduledEnqueueTimeUtc(Instant)\"></xref>"
  modifiers:
  - "abstract"
  parameters:
  - description: "the instant at which this message should be enqueued in Azure Service Bus"
    name: "scheduledEnqueueTimeUtc"
    type: "<xref href=\"java.time.Instant?alt=java.time.Instant&text=Instant\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic abstract void setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)"
  desc: "Sets the scheduled enqueue time of this message."
  hasDeprecatedTag: true
- uid: "com.microsoft.azure.servicebus.IMessage.setSessionId(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setSessionId(String sessionId)"
  name: "setSessionId(String sessionId)"
  nameWithType: "IMessage.setSessionId(String sessionId)"
  summary: "Sets the session identifier for a session-aware entity."
  modifiers:
  - "abstract"
  parameters:
  - description: "session id of this message"
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setSessionId(String sessionId)"
  desc: "Sets the session identifier for a session-aware entity."
- uid: "com.microsoft.azure.servicebus.IMessage.setTimeToLive(java.time.Duration)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setTimeToLive(Duration timeToLive)"
  name: "setTimeToLive(Duration timeToLive)"
  nameWithType: "IMessage.setTimeToLive(Duration timeToLive)"
  summary: "Sets the duration of time before this message expires."
  modifiers:
  - "abstract"
  parameters:
  - description: "Time to Live duration of this message"
    name: "timeToLive"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setTimeToLive(Duration timeToLive)"
  desc: "Sets the duration of time before this message expires."
- uid: "com.microsoft.azure.servicebus.IMessage.setTo(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setTo(String to)"
  name: "setTo(String to)"
  nameWithType: "IMessage.setTo(String to)"
  summary: "Sets the \"to\" address."
  modifiers:
  - "abstract"
  parameters:
  - description: "To property value of this message"
    name: "to"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setTo(String to)"
  desc: "Sets the \"to\" address. This property is reserved for future use in routing scenarios and presently ignored by the broker itself. Applications can use this value in rule-driven [auto-forward chaining][] scenarios to indicate the intended logical destination of the message.\n\n\n[auto-forward chaining]: https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding"
- uid: "com.microsoft.azure.servicebus.IMessage.setViaPartitionKey(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.IMessage.setViaPartitionKey(String viaPartitionKey)"
  name: "setViaPartitionKey(String viaPartitionKey)"
  nameWithType: "IMessage.setViaPartitionKey(String viaPartitionKey)"
  summary: "Sets a via-partition key for sending a message to a destination entity via another partitioned entity"
  modifiers:
  - "abstract"
  parameters:
  - description: "via-partition key of this message"
    name: "viaPartitionKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void setViaPartitionKey(String viaPartitionKey)"
  desc: "Sets a via-partition key for sending a message to a destination entity via another partitioned entity"
type: "interface"
desc: "Represents the message that is exchanged between Azure Service Bus and its clients."
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
