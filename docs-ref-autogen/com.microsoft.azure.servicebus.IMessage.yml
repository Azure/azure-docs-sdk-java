### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.IMessage
  id: IMessage
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.IMessage.createCopy()
  - com.microsoft.azure.servicebus.IMessage.getBody()
  - com.microsoft.azure.servicebus.IMessage.getContentType()
  - com.microsoft.azure.servicebus.IMessage.getCorrelationId()
  - com.microsoft.azure.servicebus.IMessage.getDeadLetterSource()
  - com.microsoft.azure.servicebus.IMessage.getDeliveryCount()
  - com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()
  - com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc()
  - com.microsoft.azure.servicebus.IMessage.getLabel()
  - com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc()
  - com.microsoft.azure.servicebus.IMessage.getLockToken()
  - com.microsoft.azure.servicebus.IMessage.getMessageBody()
  - com.microsoft.azure.servicebus.IMessage.getMessageId()
  - com.microsoft.azure.servicebus.IMessage.getPartitionKey()
  - com.microsoft.azure.servicebus.IMessage.getProperties()
  - com.microsoft.azure.servicebus.IMessage.getReplyTo()
  - com.microsoft.azure.servicebus.IMessage.getReplyToSessionId()
  - com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc()
  - com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()
  - com.microsoft.azure.servicebus.IMessage.getSequenceNumber()
  - com.microsoft.azure.servicebus.IMessage.getSessionId()
  - com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  - com.microsoft.azure.servicebus.IMessage.getTo()
  - com.microsoft.azure.servicebus.IMessage.getViaPartitionKey()
  - com.microsoft.azure.servicebus.IMessage.setBody(byte [])
  - com.microsoft.azure.servicebus.IMessage.setContentType(String)
  - com.microsoft.azure.servicebus.IMessage.setCorrelationId(String)
  - com.microsoft.azure.servicebus.IMessage.setLabel(String)
  - com.microsoft.azure.servicebus.IMessage.setMessageBody(MessageBody)
  - com.microsoft.azure.servicebus.IMessage.setMessageId(String)
  - com.microsoft.azure.servicebus.IMessage.setPartitionKey(String)
  - com.microsoft.azure.servicebus.IMessage.setProperties(Map<String, Object>)
  - com.microsoft.azure.servicebus.IMessage.setReplyTo(String)
  - com.microsoft.azure.servicebus.IMessage.setReplyToSessionId(String)
  - com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc(Instant)
  - com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant)
  - com.microsoft.azure.servicebus.IMessage.setSessionId(String)
  - com.microsoft.azure.servicebus.IMessage.setTimeToLive(Duration)
  - com.microsoft.azure.servicebus.IMessage.setTo(String)
  - com.microsoft.azure.servicebus.IMessage.setViaPartitionKey(String)
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: IMessage
  nameWithType: IMessage
  fullName: com.microsoft.azure.servicebus.IMessage
  type: Interface
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 16
  package: com.microsoft.azure.servicebus
  summary: "<p>Represents the message that is exchanged between Azure Service Bus and its clients.</p>\r\n<p></p>"
  syntax: &o11
    content: public interface IMessage
- uid: com.microsoft.azure.servicebus.IMessage.createCopy()
  id: createCopy()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: createCopy()
  nameWithType: IMessage.createCopy()
  fullName: com.microsoft.azure.servicebus.IMessage.createCopy()
  overload: com.microsoft.azure.servicebus.IMessage.createCopy*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 428
  package: com.microsoft.azure.servicebus
  summary: "<p>Creates a shallow copy of this message. </p>"
  syntax:
    content: public IMessage createCopy()
    return:
      type: com.microsoft.azure.servicebus.IMessage
      description: <p>copy of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getBody()
  id: getBody()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getBody()
  nameWithType: IMessage.getBody()
  fullName: com.microsoft.azure.servicebus.IMessage.getBody()
  overload: com.microsoft.azure.servicebus.IMessage.getBody*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 218
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the body of this message as a byte array. It is up to client applications to decode the bytes.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000110\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Message body need not just a byte array. Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.getMessageBody()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getMessageBody()\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public byte [] getBody()
    return:
      type: ccd9418d
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getContentType()
  id: getContentType()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getContentType()
  nameWithType: IMessage.getContentType()
  fullName: com.microsoft.azure.servicebus.IMessage.getContentType()
  overload: com.microsoft.azure.servicebus.IMessage.getContentType*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 81
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the content type of this message.</p>\r\n<p>Optionally describes the payload of the message, with a descriptor following the format of RFC2045, Section 5, for example \"application/json\". Note that content type is not same as message body type.</p>\r\n<p></p>"
  syntax:
    content: public String getContentType()
    return:
      type: "26831127"
      description: <p>content type of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getCorrelationId()
  id: getCorrelationId()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getCorrelationId()
  nameWithType: IMessage.getCorrelationId()
  fullName: com.microsoft.azure.servicebus.IMessage.getCorrelationId()
  overload: com.microsoft.azure.servicebus.IMessage.getCorrelationId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 274
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets a correlation identifier.</p>\r\n<p>Allows an application to specify a context for the message for the purposes of correlation, for example reflecting the MessageId of a message that is being replied to.</p>\r\n<p></p>"
  syntax:
    content: public String getCorrelationId()
    return:
      type: "26831127"
      description: <p>correlation Id of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getDeadLetterSource()
  id: getDeadLetterSource()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getDeadLetterSource()
  nameWithType: IMessage.getDeadLetterSource()
  fullName: com.microsoft.azure.servicebus.IMessage.getDeadLetterSource()
  overload: com.microsoft.azure.servicebus.IMessage.getDeadLetterSource*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 409
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the name of the queue or subscription that this message was enqueued on, before it was deadlettered.</p>\r\n<p>This value is only set in messages that have been dead-lettered and subsequently auto-forwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public String getDeadLetterSource()
    return:
      type: "26831127"
      description: <p>dead letter source of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getDeliveryCount()
  id: getDeliveryCount()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getDeliveryCount()
  nameWithType: IMessage.getDeliveryCount()
  fullName: com.microsoft.azure.servicebus.IMessage.getDeliveryCount()
  overload: com.microsoft.azure.servicebus.IMessage.getDeliveryCount*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 27
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the number of the times this message was delivered to clients.</p>\r\n<p>The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only.</p>\r\n<p></p>"
  syntax: &o3
    content: public long getDeliveryCount()
    return:
      type: 0364520f
      description: <p>delivery count of this message. </p>
- uid: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()
  id: getEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getEnqueuedTimeUtc()
  nameWithType: IMessage.getEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()
  overload: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 127
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the instant at which this message was enqueued in Azure Service Bus.</p>\r\n<p>The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only.</p>\r\n<p></p>"
  syntax: &o1
    content: public Instant getEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message was enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc()
  id: getExpiresAtUtc()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getExpiresAtUtc()
  nameWithType: IMessage.getExpiresAtUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc()
  overload: com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 102
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the instant at which this message will expire.</p>\r\n<p>The value is the UTC instant for when the message is scheduled for removal and will no longer available for retrieval from the entity due to expiration. Expiry is controlled by the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeToLive\"></xref> property. This property is computed from <xref uid=\"com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnqueuedTimeUtc\"></xref>+<xref uid=\"com.microsoft.azure.servicebus.IMessage.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeToLive\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Instant getExpiresAtUtc()
    return:
      type: 328f8254
      description: <p>instant at which this message expires </p>
- uid: com.microsoft.azure.servicebus.IMessage.getLabel()
  id: getLabel()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getLabel()
  nameWithType: IMessage.getLabel()
  fullName: com.microsoft.azure.servicebus.IMessage.getLabel()
  overload: com.microsoft.azure.servicebus.IMessage.getLabel*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 331
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the application specific message label.</p>\r\n<p>This property enables the application to indicate the purpose of the message to the receiver in a standardized fashion, similar to an email subject line. The mapped AMQP property is \"subject\".</p>\r\n<p></p>"
  syntax:
    content: public String getLabel()
    return:
      type: "26831127"
      description: <p>Label property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc()
  id: getLockedUntilUtc()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getLockedUntilUtc()
  nameWithType: IMessage.getLockedUntilUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc()
  overload: com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 114
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the instant at which the lock of this message expires.</p>\r\n<p>For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription. When the lock expires, the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getDeliveryCount()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeliveryCount\"></xref> is incremented and the message is again available for retrieval. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public Instant getLockedUntilUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the lock of this message expires if the message is received using PEEKLOCK mode. Otherwise it returns null. </p>
- uid: com.microsoft.azure.servicebus.IMessage.getLockToken()
  id: getLockToken()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getLockToken()
  nameWithType: IMessage.getLockToken()
  fullName: com.microsoft.azure.servicebus.IMessage.getLockToken()
  overload: com.microsoft.azure.servicebus.IMessage.getLockToken*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 422
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the lock token for the current message.</p>\r\n<p>The lock token is a reference to the lock that is being held by the broker in PEEKLOCK mode. Locks are used to explicitly settle messages as explained in the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement\">product documentation in more detail</a>. The token can also be used to pin the lock permanently through the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/message-deferral\">Deferral API</a> and, with that, take the message out of the regular delivery state flow. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public UUID getLockToken()
    return:
      type: add9545a
      description: <p>lock token of this message. </p>
- uid: com.microsoft.azure.servicebus.IMessage.getMessageBody()
  id: getMessageBody()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getMessageBody()
  nameWithType: IMessage.getMessageBody()
  fullName: com.microsoft.azure.servicebus.IMessage.getMessageBody()
  overload: com.microsoft.azure.servicebus.IMessage.getMessageBody*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 236
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the body of this message. Client applications should extract message content based on body type.</p>\r\n<p></p>"
  syntax: &o6
    content: public MessageBody getMessageBody()
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getMessageId()
  id: getMessageId()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getMessageId()
  nameWithType: IMessage.getMessageId()
  fullName: com.microsoft.azure.servicebus.IMessage.getMessageId()
  overload: com.microsoft.azure.servicebus.IMessage.getMessageId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 41
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the Id of this message.</p>\r\n<p>The message identifier is an application-defined value that uniquely identifies the message and its payload. The identifier is a free-form string and can reflect a GUID or an identifier derived from the application context. If enabled, the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection\">duplicate detection</a> feature identifies and removes second and further submissions of messages with the same MessageId.</p>\r\n<p></p>"
  syntax:
    content: public String getMessageId()
    return:
      type: "26831127"
      description: <p>Id of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getPartitionKey()
  id: getPartitionKey()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getPartitionKey()
  nameWithType: IMessage.getPartitionKey()
  fullName: com.microsoft.azure.servicebus.IMessage.getPartitionKey()
  overload: com.microsoft.azure.servicebus.IMessage.getPartitionKey*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 370
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the partition key for sending a message to a partitioned entity.</p>\r\n<p>For <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning\">partitioned entities</a>, setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SessionId \"></xref> property overrides this value.</p>\r\n<p></p>"
  syntax: &o10
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>partition key of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getProperties()
  nameWithType: IMessage.getProperties()
  fullName: com.microsoft.azure.servicebus.IMessage.getProperties()
  overload: com.microsoft.azure.servicebus.IMessage.getProperties*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 254
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the map of user application properties of this message. Client applications can set user properties (headers) on the message using this map.</p>\r\n<p></p>"
  syntax:
    content: public Map<String, Object> getProperties()
    return:
      type: e7b06046
      description: <p>the map of user application properties of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getReplyTo()
  id: getReplyTo()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getReplyTo()
  nameWithType: IMessage.getReplyTo()
  fullName: com.microsoft.azure.servicebus.IMessage.getReplyTo()
  overload: com.microsoft.azure.servicebus.IMessage.getReplyTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 313
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the address of an entity to send replies to.</p>\r\n<p>This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to.</p>\r\n<p></p>"
  syntax: &o8
    content: public String getReplyTo()
    return:
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getReplyToSessionId()
  id: getReplyToSessionId()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getReplyToSessionId()
  nameWithType: IMessage.getReplyToSessionId()
  fullName: com.microsoft.azure.servicebus.IMessage.getReplyToSessionId()
  overload: com.microsoft.azure.servicebus.IMessage.getReplyToSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 350
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address.</p>\r\n<p>This value augments the ReplyTo information and specifies which SessionId should be set for the reply when sent to the reply entity.</p>\r\n<p></p>"
  syntax:
    content: public String getReplyToSessionId()
    return:
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc()
  id: getScheduledEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getScheduledEnqueuedTimeUtc()
  nameWithType: IMessage.getScheduledEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc()
  overload: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 142
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the scheduled enqueue time of this message.</p>\r\n<p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000108\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getScheduledEnqueueTimeUtc()\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public Instant getScheduledEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()
  id: getScheduledEnqueueTimeUtc()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getScheduledEnqueueTimeUtc()
  nameWithType: IMessage.getScheduledEnqueueTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()
  overload: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 165
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the scheduled enqueue time of this message.</p>\r\n<p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>\r\n<p></p>"
  syntax: &o4
    content: public Instant getScheduledEnqueueTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.IMessage.getSequenceNumber()
  id: getSequenceNumber()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getSequenceNumber()
  nameWithType: IMessage.getSequenceNumber()
  fullName: com.microsoft.azure.servicebus.IMessage.getSequenceNumber()
  overload: com.microsoft.azure.servicebus.IMessage.getSequenceNumber*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 186
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the unique number assigned to a message by Service Bus.</p>\r\n<p>The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier. For partitioned entities, the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase and are gapless. They roll over to 0 when the 48-64 bit range is exhausted. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public long getSequenceNumber()
    return:
      type: 0364520f
      description: <p>sequence number of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getSessionId()
  id: getSessionId()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getSessionId()
  nameWithType: IMessage.getSessionId()
  fullName: com.microsoft.azure.servicebus.IMessage.getSessionId()
  overload: com.microsoft.azure.servicebus.IMessage.getSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 199
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the session identifier for a session-aware entity.</p>\r\n<p>For session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored.</p>\r\n<p></p>"
  syntax: &o9
    content: public String getSessionId()
    return:
      type: "26831127"
      description: <p>session id of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  id: getTimeToLive()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getTimeToLive()
  nameWithType: IMessage.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  overload: com.microsoft.azure.servicebus.IMessage.getTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 63
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the duration before this message expires.</p>\r\n<p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid=\"com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getEnqueuedTimeUtc\"></xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>\r\n<p></p>"
  syntax: &o2
    content: public Duration getTimeToLive()
    return:
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getTo()
  id: getTo()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getTo()
  nameWithType: IMessage.getTo()
  fullName: com.microsoft.azure.servicebus.IMessage.getTo()
  overload: com.microsoft.azure.servicebus.IMessage.getTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 289
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the \"to\" address.</p>\r\n<p></p>"
  syntax:
    content: public String getTo()
    return:
      type: "26831127"
      description: <p>To property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getViaPartitionKey()
  id: getViaPartitionKey()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: getViaPartitionKey()
  nameWithType: IMessage.getViaPartitionKey()
  fullName: com.microsoft.azure.servicebus.IMessage.getViaPartitionKey()
  overload: com.microsoft.azure.servicebus.IMessage.getViaPartitionKey*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 390
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets the partition key for sending a message to a entity via another partitioned transfer entity.</p>\r\n<p>If a message is sent via a transfer queue in the scope of a transaction, this value selects the transfer queue partition: This is functionally equivalent to <xref uid=\"com.microsoft.azure.servicebus.IMessage.getPartitionKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getPartitionKey()\"></xref> and ensures that messages are kept together and in order as they are transferred.</p>\r\n<p></p>"
  syntax:
    content: public String getViaPartitionKey()
    return:
      type: "26831127"
      description: <p>partition key on the via queue. </p>
- uid: com.microsoft.azure.servicebus.IMessage.setBody(byte [])
  id: setBody(byte [])
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setBody(byte[] body)
  nameWithType: IMessage.setBody(byte[] body)
  fullName: com.microsoft.azure.servicebus.IMessage.setBody(byte[] body)
  overload: com.microsoft.azure.servicebus.IMessage.setBody*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 228
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the body of this message as a byte array.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000111\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Message body need not just a byte array. Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.setMessageBody(MessageBody)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setMessageBody(MessageBody)\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void setBody(byte[] body)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setContentType(String)
  id: setContentType(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setContentType(String contentType)
  nameWithType: IMessage.setContentType(String contentType)
  fullName: com.microsoft.azure.servicebus.IMessage.setContentType(String contentType)
  overload: com.microsoft.azure.servicebus.IMessage.setContentType*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 89
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the content type of this message.</p>\r\n<p></p>"
  syntax:
    content: public void setContentType(String contentType)
    parameters:
    - id: contentType
      type: "26831127"
      description: <p>content type of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setCorrelationId(String)
  id: setCorrelationId(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setCorrelationId(String correlationId)
  nameWithType: IMessage.setCorrelationId(String correlationId)
  fullName: com.microsoft.azure.servicebus.IMessage.setCorrelationId(String correlationId)
  overload: com.microsoft.azure.servicebus.IMessage.setCorrelationId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 282
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets a correlation identifier.</p>\r\n<p></p>"
  syntax:
    content: public void setCorrelationId(String correlationId)
    parameters:
    - id: correlationId
      type: "26831127"
      description: <p>correlation Id of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setLabel(String)
  id: setLabel(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setLabel(String label)
  nameWithType: IMessage.setLabel(String label)
  fullName: com.microsoft.azure.servicebus.IMessage.setLabel(String label)
  overload: com.microsoft.azure.servicebus.IMessage.setLabel*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 339
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets an application specific message label.</p>\r\n<p></p>"
  syntax:
    content: public void setLabel(String label)
    parameters:
    - id: label
      type: "26831127"
      description: <p>Label property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setMessageBody(MessageBody)
  id: setMessageBody(MessageBody)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setMessageBody(MessageBody body)
  nameWithType: IMessage.setMessageBody(MessageBody body)
  fullName: com.microsoft.azure.servicebus.IMessage.setMessageBody(MessageBody body)
  overload: com.microsoft.azure.servicebus.IMessage.setMessageBody*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 244
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the body of this message.</p>\r\n<p></p>"
  syntax: &o7
    content: public void setMessageBody(MessageBody body)
    parameters:
    - id: body
      type: com.microsoft.azure.servicebus.MessageBody
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setMessageId(String)
  id: setMessageId(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setMessageId(String messageId)
  nameWithType: IMessage.setMessageId(String messageId)
  fullName: com.microsoft.azure.servicebus.IMessage.setMessageId(String messageId)
  overload: com.microsoft.azure.servicebus.IMessage.setMessageId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 48
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the Id of this message. </p>"
  syntax:
    content: public void setMessageId(String messageId)
    parameters:
    - id: messageId
      type: "26831127"
      description: <p>Id of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setPartitionKey(String)
  id: setPartitionKey(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setPartitionKey(String partitionKey)
  nameWithType: IMessage.setPartitionKey(String partitionKey)
  fullName: com.microsoft.azure.servicebus.IMessage.setPartitionKey(String partitionKey)
  overload: com.microsoft.azure.servicebus.IMessage.setPartitionKey*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 378
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets a partition key for sending a message to a partitioned entity</p>\r\n<p></p>"
  syntax:
    content: public void setPartitionKey(String partitionKey)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>partition key of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setProperties(Map<String, Object>)
  id: setProperties(Map<String, Object>)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setProperties(Map<String, Object> properties)
  nameWithType: IMessage.setProperties(Map<String, Object> properties)
  fullName: com.microsoft.azure.servicebus.IMessage.setProperties(Map<String, Object> properties)
  overload: com.microsoft.azure.servicebus.IMessage.setProperties*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 263
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the map of user application properties of this message. Client applications can set user properties on the message using this map.</p>\r\n<p></p>"
  syntax:
    content: public void setProperties(Map<String, Object> properties)
    parameters:
    - id: properties
      type: e7b06046
      description: <p>the map of user application properties of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setReplyTo(String)
  id: setReplyTo(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setReplyTo(String replyTo)
  nameWithType: IMessage.setReplyTo(String replyTo)
  fullName: com.microsoft.azure.servicebus.IMessage.setReplyTo(String replyTo)
  overload: com.microsoft.azure.servicebus.IMessage.setReplyTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 321
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the address of an entity to send replies to.</p>\r\n<p></p>"
  syntax:
    content: public void setReplyTo(String replyTo)
    parameters:
    - id: replyTo
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setReplyToSessionId(String)
  id: setReplyToSessionId(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setReplyToSessionId(String replyToSessionId)
  nameWithType: IMessage.setReplyToSessionId(String replyToSessionId)
  fullName: com.microsoft.azure.servicebus.IMessage.setReplyToSessionId(String replyToSessionId)
  overload: com.microsoft.azure.servicebus.IMessage.setReplyToSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 357
  package: com.microsoft.azure.servicebus
  summary: "<p>Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address.</p>\r\n<p></p>"
  syntax:
    content: public void setReplyToSessionId(String replyToSessionId)
    parameters:
    - id: replyToSessionId
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc(Instant)
  id: setScheduledEnqueuedTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: IMessage.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  overload: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 152
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the scheduled enqueue time of this message.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000109\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Replaced by <xref uid=\"com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setScheduledEnqueueTimeUtc(Instant)\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant)
  id: setScheduledEnqueueTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  overload: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 173
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the scheduled enqueue time of this message.</p>\r\n<p></p>"
  syntax: &o5
    content: public void setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.IMessage.setSessionId(String)
  id: setSessionId(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setSessionId(String sessionId)
  nameWithType: IMessage.setSessionId(String sessionId)
  fullName: com.microsoft.azure.servicebus.IMessage.setSessionId(String sessionId)
  overload: com.microsoft.azure.servicebus.IMessage.setSessionId*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 207
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the session identifier for a session-aware entity.</p>\r\n<p></p>"
  syntax:
    content: public void setSessionId(String sessionId)
    parameters:
    - id: sessionId
      type: "26831127"
      description: <p>session id of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setTimeToLive(Duration)
  id: setTimeToLive(Duration)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setTimeToLive(Duration timeToLive)
  nameWithType: IMessage.setTimeToLive(Duration timeToLive)
  fullName: com.microsoft.azure.servicebus.IMessage.setTimeToLive(Duration timeToLive)
  overload: com.microsoft.azure.servicebus.IMessage.setTimeToLive*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 71
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the duration of time before this message expires.</p>\r\n<p></p>"
  syntax:
    content: public void setTimeToLive(Duration timeToLive)
    parameters:
    - id: timeToLive
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setTo(String)
  id: setTo(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setTo(String to)
  nameWithType: IMessage.setTo(String to)
  fullName: com.microsoft.azure.servicebus.IMessage.setTo(String to)
  overload: com.microsoft.azure.servicebus.IMessage.setTo*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 301
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets the \"to\" address.</p>\r\n<p>This property is reserved for future use in routing scenarios and presently ignored by the broker itself. Applications can use this value in rule-driven <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding\">auto-forward chaining</a> scenarios to indicate the intended logical destination of the message.</p>\r\n<p></p>"
  syntax:
    content: public void setTo(String to)
    parameters:
    - id: to
      type: "26831127"
      description: <p>To property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setViaPartitionKey(String)
  id: setViaPartitionKey(String)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  langs:
  - java
  name: setViaPartitionKey(String viaPartitionKey)
  nameWithType: IMessage.setViaPartitionKey(String viaPartitionKey)
  fullName: com.microsoft.azure.servicebus.IMessage.setViaPartitionKey(String viaPartitionKey)
  overload: com.microsoft.azure.servicebus.IMessage.setViaPartitionKey*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessage.java
    startLine: 398
  package: com.microsoft.azure.servicebus
  summary: "<p>Sets a via-partition key for sending a message to a destination entity via another partitioned entity</p>\r\n<p></p>"
  syntax:
    content: public void setViaPartitionKey(String viaPartitionKey)
    parameters:
    - id: viaPartitionKey
      type: "26831127"
      description: <p>via-partition key of this message </p>
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.servicebus.IMessage.getDeliveryCount*
  name: getDeliveryCount
  nameWithType: IMessage.getDeliveryCount
  fullName: com.microsoft.azure.servicebus.IMessage.getDeliveryCount
  package: com.microsoft.azure.servicebus
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.servicebus.IMessage.getMessageId*
  name: getMessageId
  nameWithType: IMessage.getMessageId
  fullName: com.microsoft.azure.servicebus.IMessage.getMessageId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setMessageId*
  name: setMessageId
  nameWithType: IMessage.setMessageId
  fullName: com.microsoft.azure.servicebus.IMessage.setMessageId
  package: com.microsoft.azure.servicebus
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.servicebus.IMessage.getTimeToLive*
  name: getTimeToLive
  nameWithType: IMessage.getTimeToLive
  fullName: com.microsoft.azure.servicebus.IMessage.getTimeToLive
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setTimeToLive*
  name: setTimeToLive
  nameWithType: IMessage.setTimeToLive
  fullName: com.microsoft.azure.servicebus.IMessage.setTimeToLive
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getContentType*
  name: getContentType
  nameWithType: IMessage.getContentType
  fullName: com.microsoft.azure.servicebus.IMessage.getContentType
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setContentType*
  name: setContentType
  nameWithType: IMessage.setContentType
  fullName: com.microsoft.azure.servicebus.IMessage.setContentType
  package: com.microsoft.azure.servicebus
- uid: 328f8254
  spec.java:
  - name: Instant
    fullName: Instant
- uid: com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc*
  name: getExpiresAtUtc
  nameWithType: IMessage.getExpiresAtUtc
  fullName: com.microsoft.azure.servicebus.IMessage.getExpiresAtUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc*
  name: getLockedUntilUtc
  nameWithType: IMessage.getLockedUntilUtc
  fullName: com.microsoft.azure.servicebus.IMessage.getLockedUntilUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc*
  name: getEnqueuedTimeUtc
  nameWithType: IMessage.getEnqueuedTimeUtc
  fullName: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc*
  name: getScheduledEnqueuedTimeUtc
  nameWithType: IMessage.getScheduledEnqueuedTimeUtc
  fullName: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueuedTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc*
  name: setScheduledEnqueuedTimeUtc
  nameWithType: IMessage.setScheduledEnqueuedTimeUtc
  fullName: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueuedTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc*
  name: getScheduledEnqueueTimeUtc
  nameWithType: IMessage.getScheduledEnqueueTimeUtc
  fullName: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc*
  name: setScheduledEnqueueTimeUtc
  nameWithType: IMessage.setScheduledEnqueueTimeUtc
  fullName: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getSequenceNumber*
  name: getSequenceNumber
  nameWithType: IMessage.getSequenceNumber
  fullName: com.microsoft.azure.servicebus.IMessage.getSequenceNumber
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getSessionId*
  name: getSessionId
  nameWithType: IMessage.getSessionId
  fullName: com.microsoft.azure.servicebus.IMessage.getSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setSessionId*
  name: setSessionId
  nameWithType: IMessage.setSessionId
  fullName: com.microsoft.azure.servicebus.IMessage.setSessionId
  package: com.microsoft.azure.servicebus
- uid: ccd9418d
  spec.java:
  - name: byte []
    fullName: byte []
- uid: com.microsoft.azure.servicebus.IMessage.getBody*
  name: getBody
  nameWithType: IMessage.getBody
  fullName: com.microsoft.azure.servicebus.IMessage.getBody
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setBody*
  name: setBody
  nameWithType: IMessage.setBody
  fullName: com.microsoft.azure.servicebus.IMessage.setBody
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getMessageBody*
  name: getMessageBody
  nameWithType: IMessage.getMessageBody
  fullName: com.microsoft.azure.servicebus.IMessage.getMessageBody
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setMessageBody*
  name: setMessageBody
  nameWithType: IMessage.setMessageBody
  fullName: com.microsoft.azure.servicebus.IMessage.setMessageBody
  package: com.microsoft.azure.servicebus
- uid: e7b06046
  spec.java:
  - name: Map<String, Object>
    fullName: Map<String, Object>
- uid: com.microsoft.azure.servicebus.IMessage.getProperties*
  name: getProperties
  nameWithType: IMessage.getProperties
  fullName: com.microsoft.azure.servicebus.IMessage.getProperties
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setProperties*
  name: setProperties
  nameWithType: IMessage.setProperties
  fullName: com.microsoft.azure.servicebus.IMessage.setProperties
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getCorrelationId*
  name: getCorrelationId
  nameWithType: IMessage.getCorrelationId
  fullName: com.microsoft.azure.servicebus.IMessage.getCorrelationId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setCorrelationId*
  name: setCorrelationId
  nameWithType: IMessage.setCorrelationId
  fullName: com.microsoft.azure.servicebus.IMessage.setCorrelationId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getTo*
  name: getTo
  nameWithType: IMessage.getTo
  fullName: com.microsoft.azure.servicebus.IMessage.getTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setTo*
  name: setTo
  nameWithType: IMessage.setTo
  fullName: com.microsoft.azure.servicebus.IMessage.setTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getReplyTo*
  name: getReplyTo
  nameWithType: IMessage.getReplyTo
  fullName: com.microsoft.azure.servicebus.IMessage.getReplyTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setReplyTo*
  name: setReplyTo
  nameWithType: IMessage.setReplyTo
  fullName: com.microsoft.azure.servicebus.IMessage.setReplyTo
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getLabel*
  name: getLabel
  nameWithType: IMessage.getLabel
  fullName: com.microsoft.azure.servicebus.IMessage.getLabel
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setLabel*
  name: setLabel
  nameWithType: IMessage.setLabel
  fullName: com.microsoft.azure.servicebus.IMessage.setLabel
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getReplyToSessionId*
  name: getReplyToSessionId
  nameWithType: IMessage.getReplyToSessionId
  fullName: com.microsoft.azure.servicebus.IMessage.getReplyToSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setReplyToSessionId*
  name: setReplyToSessionId
  nameWithType: IMessage.setReplyToSessionId
  fullName: com.microsoft.azure.servicebus.IMessage.setReplyToSessionId
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getPartitionKey*
  name: getPartitionKey
  nameWithType: IMessage.getPartitionKey
  fullName: com.microsoft.azure.servicebus.IMessage.getPartitionKey
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setPartitionKey*
  name: setPartitionKey
  nameWithType: IMessage.setPartitionKey
  fullName: com.microsoft.azure.servicebus.IMessage.setPartitionKey
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getViaPartitionKey*
  name: getViaPartitionKey
  nameWithType: IMessage.getViaPartitionKey
  fullName: com.microsoft.azure.servicebus.IMessage.getViaPartitionKey
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.setViaPartitionKey*
  name: setViaPartitionKey
  nameWithType: IMessage.setViaPartitionKey
  fullName: com.microsoft.azure.servicebus.IMessage.setViaPartitionKey
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.getDeadLetterSource*
  name: getDeadLetterSource
  nameWithType: IMessage.getDeadLetterSource
  fullName: com.microsoft.azure.servicebus.IMessage.getDeadLetterSource
  package: com.microsoft.azure.servicebus
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: com.microsoft.azure.servicebus.IMessage.getLockToken*
  name: getLockToken
  nameWithType: IMessage.getLockToken
  fullName: com.microsoft.azure.servicebus.IMessage.getLockToken
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.IMessage.createCopy*
  name: createCopy
  nameWithType: IMessage.createCopy
  fullName: com.microsoft.azure.servicebus.IMessage.createCopy
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.Message
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.Message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.servicebus.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.servicebus.Message.getDeliveryCount()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getDeliveryCount()
  nameWithType: Message.getDeliveryCount()
  fullName: com.microsoft.azure.servicebus.Message.getDeliveryCount()
  type: Method
  summary: "<p>Gets the number of the times this message was delivered to clients.</p>\r\n<p>The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public long getDeliveryCount()
    return:
      type: 0364520f
      description: <p>delivery count of this message. </p>
- uid: com.microsoft.azure.servicebus.Message.getMessageId()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getMessageId()
  nameWithType: Message.getMessageId()
  fullName: com.microsoft.azure.servicebus.Message.getMessageId()
  type: Method
  summary: "<p>Gets the Id of this message.</p>\r\n<p>The message identifier is an application-defined value that uniquely identifies the message and its payload. The identifier is a free-form string and can reflect a GUID or an identifier derived from the application context. If enabled, the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection\">duplicate detection</a> feature identifies and removes second and further submissions of messages with the same MessageId.</p>\r\n<p></p>"
  syntax:
    content: public String getMessageId()
    return:
      type: "26831127"
      description: <p>Id of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setMessageId(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setMessageId(String messageId)
  nameWithType: Message.setMessageId(String messageId)
  fullName: com.microsoft.azure.servicebus.Message.setMessageId(String messageId)
  type: Method
  summary: "<p>Sets the Id of this message. </p>"
  syntax:
    content: public void setMessageId(String messageId)
    parameters:
    - id: messageId
      type: "26831127"
      description: <p>Id of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getTimeToLive()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getTimeToLive()
  nameWithType: Message.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.Message.getTimeToLive()
  type: Method
  summary: "<p>Gets the duration before this message expires.</p>\r\n<p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid=\"com.microsoft.azure.servicebus.Message.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getEnqueuedTimeUtc\"></xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>\r\n<p></p>"
  syntax:
    content: public Duration getTimeToLive()
    return:
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getEnqueuedTimeUtc()
  nameWithType: IMessage.getEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()
  type: Method
  summary: "<p>Gets the instant at which this message was enqueued in Azure Service Bus.</p>\r\n<p>The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only.</p>\r\n<p></p>"
  syntax: *o1
- uid: com.microsoft.azure.servicebus.Message.setTimeToLive(Duration)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setTimeToLive(Duration timeToLive)
  nameWithType: Message.setTimeToLive(Duration timeToLive)
  fullName: com.microsoft.azure.servicebus.Message.setTimeToLive(Duration timeToLive)
  type: Method
  summary: "<p>Sets the duration of time before this message expires.</p>\r\n<p></p>"
  syntax:
    content: public void setTimeToLive(Duration timeToLive)
    parameters:
    - id: timeToLive
      type: e02a2de0
      description: <p>Time to Live duration of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getContentType()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getContentType()
  nameWithType: Message.getContentType()
  fullName: com.microsoft.azure.servicebus.Message.getContentType()
  type: Method
  summary: "<p>Gets the content type of this message.</p>\r\n<p>Optionally describes the payload of the message, with a descriptor following the format of RFC2045, Section 5, for example \"application/json\". Note that content type is not same as message body type.</p>\r\n<p></p>"
  syntax:
    content: public String getContentType()
    return:
      type: "26831127"
      description: <p>content type of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setContentType(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setContentType(String contentType)
  nameWithType: Message.setContentType(String contentType)
  fullName: com.microsoft.azure.servicebus.Message.setContentType(String contentType)
  type: Method
  summary: "<p>Sets the content type of this message.</p>\r\n<p></p>"
  syntax:
    content: public void setContentType(String contentType)
    parameters:
    - id: contentType
      type: "26831127"
      description: <p>content type of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getExpiresAtUtc()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getExpiresAtUtc()
  nameWithType: Message.getExpiresAtUtc()
  fullName: com.microsoft.azure.servicebus.Message.getExpiresAtUtc()
  type: Method
  summary: "<p>Gets the instant at which this message will expire.</p>\r\n<p>The value is the UTC instant for when the message is scheduled for removal and will no longer available for retrieval from the entity due to expiration. Expiry is controlled by the <xref uid=\"com.microsoft.azure.servicebus.Message.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeToLive\"></xref> property. This property is computed from <xref uid=\"com.microsoft.azure.servicebus.Message.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"EnqueuedTimeUtc\"></xref>+<xref uid=\"com.microsoft.azure.servicebus.Message.getTimeToLive()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TimeToLive\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Instant getExpiresAtUtc()
    return:
      type: 328f8254
      description: <p>instant at which this message expires </p>
- uid: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getTimeToLive()
  nameWithType: IMessage.getTimeToLive()
  fullName: com.microsoft.azure.servicebus.IMessage.getTimeToLive()
  type: Method
  summary: "<p>Gets the duration before this message expires.</p>\r\n<p>This value is the relative duration after which the message expires, starting from the instant the message has been accepted and stored by the broker, as captured in <xref uid=\"com.microsoft.azure.servicebus.IMessage.getEnqueuedTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getEnqueuedTimeUtc\"></xref>. When not set explicitly, the assumed value is the DefaultTimeToLive set for the respective queue or topic. A message-level TimeToLive value cannot be longer than the entity's DefaultTimeToLive setting and it is silently adjusted if it does.</p>\r\n<p></p>"
  syntax: *o2
- uid: com.microsoft.azure.servicebus.Message.getLockedUntilUtc()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getLockedUntilUtc()
  nameWithType: Message.getLockedUntilUtc()
  fullName: com.microsoft.azure.servicebus.Message.getLockedUntilUtc()
  type: Method
  summary: "<p>Gets the instant at which the lock of this message expires.</p>\r\n<p>For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription. When the lock expires, the <xref uid=\"com.microsoft.azure.servicebus.Message.getDeliveryCount()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DeliveryCount\"></xref> is incremented and the message is again available for retrieval. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public Instant getLockedUntilUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the lock of this message expires if the message is received using PEEKLOCK mode. Otherwise it returns null. </p>
- uid: com.microsoft.azure.servicebus.IMessage.getDeliveryCount()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getDeliveryCount()
  nameWithType: IMessage.getDeliveryCount()
  fullName: com.microsoft.azure.servicebus.IMessage.getDeliveryCount()
  type: Method
  summary: "<p>Gets the number of the times this message was delivered to clients.</p>\r\n<p>The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver. This property is read-only.</p>\r\n<p></p>"
  syntax: *o3
- uid: com.microsoft.azure.servicebus.Message.getEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getEnqueuedTimeUtc()
  nameWithType: Message.getEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getEnqueuedTimeUtc()
  type: Method
  summary: "<p>Gets the instant at which this message was enqueued in Azure Service Bus.</p>\r\n<p>The UTC instant at which the message has been accepted and stored in the entity. For scheduled messages, this reflects the time when the message was activated. This value can be used as an authoritative and neutral arrival time indicator when the receiver does not want to trust the sender's clock. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public Instant getEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message was enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.Message.getScheduledEnqueuedTimeUtc()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getScheduledEnqueuedTimeUtc()
  nameWithType: Message.getScheduledEnqueuedTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getScheduledEnqueuedTimeUtc()
  type: Method
  summary: "<p>Gets the scheduled enqueue time of this message.</p>\r\n<p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000108\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Replaced by <xref uid=\"com.microsoft.azure.servicebus.Message.getScheduledEnqueueTimeUtc()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getScheduledEnqueueTimeUtc()\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public Instant getScheduledEnqueuedTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getScheduledEnqueueTimeUtc()
  nameWithType: IMessage.getScheduledEnqueueTimeUtc()
  fullName: com.microsoft.azure.servicebus.IMessage.getScheduledEnqueueTimeUtc()
  type: Method
  summary: "<p>Gets the scheduled enqueue time of this message.</p>\r\n<p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>\r\n<p></p>"
  syntax: *o4
- uid: com.microsoft.azure.servicebus.Message.setScheduledEnqueuedTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: Message.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.Message.setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: "<p>Sets the scheduled enqueue time of this message.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000109\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Replaced by <xref uid=\"com.microsoft.azure.servicebus.Message.setScheduledEnqueueTimeUtc(Instant)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setScheduledEnqueueTimeUtc(Instant)\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void setScheduledEnqueuedTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.IMessage.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: "<p>Sets the scheduled enqueue time of this message.</p>\r\n<p></p>"
  syntax: *o5
- uid: com.microsoft.azure.servicebus.Message.getScheduledEnqueueTimeUtc()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getScheduledEnqueueTimeUtc()
  nameWithType: Message.getScheduledEnqueueTimeUtc()
  fullName: com.microsoft.azure.servicebus.Message.getScheduledEnqueueTimeUtc()
  type: Method
  summary: "<p>Gets the scheduled enqueue time of this message.</p>\r\n<p>This value is used for delayed message availability. The message is safely added to the queue, but is not considered active and therefore not retrievable until the scheduled enqueue time. Mind that the message may not be activated (enqueued) at the exact given instant; the actual activation time depends on the queue's workload and its state.</p>\r\n<p></p>"
  syntax:
    content: public Instant getScheduledEnqueueTimeUtc()
    return:
      type: 328f8254
      description: <p>the instant at which the message will be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.Message.setScheduledEnqueueTimeUtc(Instant)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  nameWithType: Message.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.Message.setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: "<p>Sets the scheduled enqueue time of this message.</p>\r\n<p></p>"
  syntax:
    content: public void setScheduledEnqueueTimeUtc(Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>the instant at which this message should be enqueued in Azure Service Bus </p>
- uid: com.microsoft.azure.servicebus.Message.getSequenceNumber()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getSequenceNumber()
  nameWithType: Message.getSequenceNumber()
  fullName: com.microsoft.azure.servicebus.Message.getSequenceNumber()
  type: Method
  summary: "<p>Gets the unique number assigned to a message by Service Bus.</p>\r\n<p>The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier. For partitioned entities, the topmost 16 bits reflect the partition identifier. Sequence numbers monotonically increase and are gapless. They roll over to 0 when the 48-64 bit range is exhausted. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public long getSequenceNumber()
    return:
      type: 0364520f
      description: <p>sequence number of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getSessionId()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getSessionId()
  nameWithType: Message.getSessionId()
  fullName: com.microsoft.azure.servicebus.Message.getSessionId()
  type: Method
  summary: "<p>Gets the session identifier for a session-aware entity.</p>\r\n<p>For session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored.</p>\r\n<p></p>"
  syntax:
    content: public String getSessionId()
    return:
      type: "26831127"
      description: <p>session id of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setSessionId(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setSessionId(String sessionId)
  nameWithType: Message.setSessionId(String sessionId)
  fullName: com.microsoft.azure.servicebus.Message.setSessionId(String sessionId)
  type: Method
  summary: "<p>Sets the session identifier for a session-aware entity.</p>\r\n<p></p>"
  syntax:
    content: public void setSessionId(String sessionId)
    parameters:
    - id: sessionId
      type: "26831127"
      description: <p>session id of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getBody()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getBody()
  nameWithType: Message.getBody()
  fullName: com.microsoft.azure.servicebus.Message.getBody()
  type: Method
  summary: "<p>Gets the body of this message as a byte array. It is up to client applications to decode the bytes.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000110\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Message body need not just a byte array. Replaced by <xref uid=\"com.microsoft.azure.servicebus.Message.getMessageBody()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getMessageBody()\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public byte [] getBody()
    return:
      type: ccd9418d
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getMessageBody()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getMessageBody()
  nameWithType: IMessage.getMessageBody()
  fullName: com.microsoft.azure.servicebus.IMessage.getMessageBody()
  type: Method
  summary: "<p>Gets the body of this message. Client applications should extract message content based on body type.</p>\r\n<p></p>"
  syntax: *o6
- uid: com.microsoft.azure.servicebus.Message.setBody(byte [])
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setBody(byte[] body)
  nameWithType: Message.setBody(byte[] body)
  fullName: com.microsoft.azure.servicebus.Message.setBody(byte[] body)
  type: Method
  summary: "<p>Sets the body of this message as a byte array.</p>\r\n<p>\r\n  <xrefsect id=\"deprecated_1_deprecated000111\">\r\n    <xreftitle>Deprecated</xreftitle>\r\n    <xrefdescription>\r\n      <p>Message body need not just a byte array. Replaced by <xref uid=\"com.microsoft.azure.servicebus.Message.setMessageBody(MessageBody)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setMessageBody(MessageBody)\"></xref></p>\r\n    </xrefdescription>\r\n  </xrefsect>\r\n</p>"
  syntax:
    content: public void setBody(byte[] body)
    parameters:
    - id: body
      type: ccd9418d
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.setMessageBody(MessageBody)
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: setMessageBody(MessageBody body)
  nameWithType: IMessage.setMessageBody(MessageBody body)
  fullName: com.microsoft.azure.servicebus.IMessage.setMessageBody(MessageBody body)
  type: Method
  summary: "<p>Sets the body of this message.</p>\r\n<p></p>"
  syntax: *o7
- uid: com.microsoft.azure.servicebus.MessageBody
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.MessageBody.yml
  name: MessageBody
  nameWithType: MessageBody
  fullName: com.microsoft.azure.servicebus.MessageBody
  type: Class
  summary: "<p>This class encapsulates the body of a message. Body types map to AMQP message body types. It has getters and setters for multiple body types. Client should test for body type before calling corresponding get method. Get methods not corresponding to the type of the body return null. </p>"
  syntax:
    content: public class MessageBody
- uid: com.microsoft.azure.servicebus.Message.getMessageBody()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getMessageBody()
  nameWithType: Message.getMessageBody()
  fullName: com.microsoft.azure.servicebus.Message.getMessageBody()
  type: Method
  summary: "<p>Gets the body of this message. Client applications should extract message content based on body type.</p>\r\n<p></p>"
  syntax:
    content: public MessageBody getMessageBody()
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setMessageBody(MessageBody)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setMessageBody(MessageBody body)
  nameWithType: Message.setMessageBody(MessageBody body)
  fullName: com.microsoft.azure.servicebus.Message.setMessageBody(MessageBody body)
  type: Method
  summary: "<p>Sets the body of this message.</p>\r\n<p></p>"
  syntax:
    content: public void setMessageBody(MessageBody body)
    parameters:
    - id: body
      type: com.microsoft.azure.servicebus.MessageBody
      description: <p>body of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getProperties()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getProperties()
  nameWithType: Message.getProperties()
  fullName: com.microsoft.azure.servicebus.Message.getProperties()
  type: Method
  summary: "<p>Gets the map of user application properties of this message. Client applications can set user properties (headers) on the message using this map.</p>\r\n<p></p>"
  syntax:
    content: public Map<String, Object> getProperties()
    return:
      type: e7b06046
      description: <p>the map of user application properties of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setProperties(Map<String, Object>)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setProperties(Map<String, Object> properties)
  nameWithType: Message.setProperties(Map<String, Object> properties)
  fullName: com.microsoft.azure.servicebus.Message.setProperties(Map<String, Object> properties)
  type: Method
  summary: "<p>Sets the map of user application properties of this message. Client applications can set user properties on the message using this map.</p>\r\n<p></p>"
  syntax:
    content: public void setProperties(Map<String, Object> properties)
    parameters:
    - id: properties
      type: e7b06046
      description: <p>the map of user application properties of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getCorrelationId()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getCorrelationId()
  nameWithType: Message.getCorrelationId()
  fullName: com.microsoft.azure.servicebus.Message.getCorrelationId()
  type: Method
  summary: "<p>Gets a correlation identifier.</p>\r\n<p>Allows an application to specify a context for the message for the purposes of correlation, for example reflecting the MessageId of a message that is being replied to.</p>\r\n<p></p>"
  syntax:
    content: public String getCorrelationId()
    return:
      type: "26831127"
      description: <p>correlation Id of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setCorrelationId(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setCorrelationId(String correlationId)
  nameWithType: Message.setCorrelationId(String correlationId)
  fullName: com.microsoft.azure.servicebus.Message.setCorrelationId(String correlationId)
  type: Method
  summary: "<p>Sets a correlation identifier.</p>\r\n<p></p>"
  syntax:
    content: public void setCorrelationId(String correlationId)
    parameters:
    - id: correlationId
      type: "26831127"
      description: <p>correlation Id of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getTo()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getTo()
  nameWithType: Message.getTo()
  fullName: com.microsoft.azure.servicebus.Message.getTo()
  type: Method
  summary: "<p>Gets the \"to\" address.</p>\r\n<p></p>"
  syntax:
    content: public String getTo()
    return:
      type: "26831127"
      description: <p>To property value of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setTo(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setTo(String to)
  nameWithType: Message.setTo(String to)
  fullName: com.microsoft.azure.servicebus.Message.setTo(String to)
  type: Method
  summary: "<p>Sets the \"to\" address.</p>\r\n<p>This property is reserved for future use in routing scenarios and presently ignored by the broker itself. Applications can use this value in rule-driven <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding\">auto-forward chaining</a> scenarios to indicate the intended logical destination of the message.</p>\r\n<p></p>"
  syntax:
    content: public void setTo(String to)
    parameters:
    - id: to
      type: "26831127"
      description: <p>To property value of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getReplyTo()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getReplyTo()
  nameWithType: Message.getReplyTo()
  fullName: com.microsoft.azure.servicebus.Message.getReplyTo()
  type: Method
  summary: "<p>Gets the address of an entity to send replies to.</p>\r\n<p>This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to.</p>\r\n<p></p>"
  syntax:
    content: public String getReplyTo()
    return:
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setReplyTo(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setReplyTo(String replyTo)
  nameWithType: Message.setReplyTo(String replyTo)
  fullName: com.microsoft.azure.servicebus.Message.setReplyTo(String replyTo)
  type: Method
  summary: "<p>Sets the address of an entity to send replies to.</p>\r\n<p></p>"
  syntax:
    content: public void setReplyTo(String replyTo)
    parameters:
    - id: replyTo
      type: "26831127"
      description: <p>ReplyTo property value of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getLabel()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getLabel()
  nameWithType: Message.getLabel()
  fullName: com.microsoft.azure.servicebus.Message.getLabel()
  type: Method
  summary: "<p>Gets the application specific message label.</p>\r\n<p>This property enables the application to indicate the purpose of the message to the receiver in a standardized fashion, similar to an email subject line. The mapped AMQP property is \"subject\".</p>\r\n<p></p>"
  syntax:
    content: public String getLabel()
    return:
      type: "26831127"
      description: <p>Label property value of this message </p>
- uid: com.microsoft.azure.servicebus.Message.setLabel(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setLabel(String label)
  nameWithType: Message.setLabel(String label)
  fullName: com.microsoft.azure.servicebus.Message.setLabel(String label)
  type: Method
  summary: "<p>Sets an application specific message label.</p>\r\n<p></p>"
  syntax:
    content: public void setLabel(String label)
    parameters:
    - id: label
      type: "26831127"
      description: <p>Label property value of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getReplyToSessionId()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getReplyToSessionId()
  nameWithType: Message.getReplyToSessionId()
  fullName: com.microsoft.azure.servicebus.Message.getReplyToSessionId()
  type: Method
  summary: "<p>Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.Message.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address.</p>\r\n<p>This value augments the ReplyTo information and specifies which SessionId should be set for the reply when sent to the reply entity.</p>\r\n<p></p>"
  syntax:
    content: public String getReplyToSessionId()
    return:
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getReplyTo()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getReplyTo()
  nameWithType: IMessage.getReplyTo()
  fullName: com.microsoft.azure.servicebus.IMessage.getReplyTo()
  type: Method
  summary: "<p>Gets the address of an entity to send replies to.</p>\r\n<p>This optional and application-defined value is a standard way to express a reply path to the receiver of the message. When a sender expects a reply, it sets the value to the absolute or relative path of the queue or topic it expects the reply to be sent to.</p>\r\n<p></p>"
  syntax: *o8
- uid: com.microsoft.azure.servicebus.Message.setReplyToSessionId(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setReplyToSessionId(String replyToSessionId)
  nameWithType: Message.setReplyToSessionId(String replyToSessionId)
  fullName: com.microsoft.azure.servicebus.Message.setReplyToSessionId(String replyToSessionId)
  type: Method
  summary: "<p>Gets or sets a session identifier augmenting the <xref uid=\"com.microsoft.azure.servicebus.Message.getReplyTo()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ReplyTo\"></xref> address.</p>\r\n<p></p>"
  syntax:
    content: public void setReplyToSessionId(String replyToSessionId)
    parameters:
    - id: replyToSessionId
      type: "26831127"
      description: <p>ReplyToSessionId property value of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getPartitionKey()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getPartitionKey()
  nameWithType: Message.getPartitionKey()
  fullName: com.microsoft.azure.servicebus.Message.getPartitionKey()
  type: Method
  summary: "<p>Gets the partition key for sending a message to a partitioned entity.</p>\r\n<p>For <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning\">partitioned entities</a>, setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid=\"com.microsoft.azure.servicebus.Message.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SessionId \"></xref> property overrides this value.</p>\r\n<p></p>"
  syntax:
    content: public String getPartitionKey()
    return:
      type: "26831127"
      description: <p>partition key of this message </p>
- uid: com.microsoft.azure.servicebus.IMessage.getSessionId()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getSessionId()
  nameWithType: IMessage.getSessionId()
  fullName: com.microsoft.azure.servicebus.IMessage.getSessionId()
  type: Method
  summary: "<p>Gets the session identifier for a session-aware entity.</p>\r\n<p>For session-aware entities, this application-defined value specifies the session affiliation of the message. Messages with the same session identifier are subject to summary locking and enable exact in-order processing and demultiplexing. For session-unaware entities, this value is ignored.</p>\r\n<p></p>"
  syntax: *o9
- uid: com.microsoft.azure.servicebus.Message.setPartitionKey(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setPartitionKey(String partitionKey)
  nameWithType: Message.setPartitionKey(String partitionKey)
  fullName: com.microsoft.azure.servicebus.Message.setPartitionKey(String partitionKey)
  type: Method
  summary: "<p>Sets a partition key for sending a message to a partitioned entity</p>\r\n<p></p>"
  syntax:
    content: public void setPartitionKey(String partitionKey)
    parameters:
    - id: partitionKey
      type: "26831127"
      description: <p>partition key of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getViaPartitionKey()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getViaPartitionKey()
  nameWithType: Message.getViaPartitionKey()
  fullName: com.microsoft.azure.servicebus.Message.getViaPartitionKey()
  type: Method
  summary: "<p>Gets the partition key for sending a message to a entity via another partitioned transfer entity.</p>\r\n<p>If a message is sent via a transfer queue in the scope of a transaction, this value selects the transfer queue partition: This is functionally equivalent to <xref uid=\"com.microsoft.azure.servicebus.Message.getPartitionKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getPartitionKey()\"></xref> and ensures that messages are kept together and in order as they are transferred.</p>\r\n<p></p>"
  syntax:
    content: public String getViaPartitionKey()
    return:
      type: "26831127"
      description: <p>partition key on the via queue. </p>
- uid: com.microsoft.azure.servicebus.IMessage.getPartitionKey()
  parent: com.microsoft.azure.servicebus.IMessage
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: getPartitionKey()
  nameWithType: IMessage.getPartitionKey()
  fullName: com.microsoft.azure.servicebus.IMessage.getPartitionKey()
  type: Method
  summary: "<p>Gets the partition key for sending a message to a partitioned entity.</p>\r\n<p>For <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning\">partitioned entities</a>, setting this value enables assigning related messages to the same internal partition, so that submission sequence order is correctly recorded. The partition is chosen by a hash function over this value and cannot be chosen directly. For session-aware entities, the <xref uid=\"com.microsoft.azure.servicebus.IMessage.getSessionId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SessionId \"></xref> property overrides this value.</p>\r\n<p></p>"
  syntax: *o10
- uid: com.microsoft.azure.servicebus.Message.setViaPartitionKey(String)
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: setViaPartitionKey(String partitionKey)
  nameWithType: Message.setViaPartitionKey(String partitionKey)
  fullName: com.microsoft.azure.servicebus.Message.setViaPartitionKey(String partitionKey)
  type: Method
  summary: "<p>Sets a via-partition key for sending a message to a destination entity via another partitioned entity</p>\r\n<p></p>"
  syntax:
    content: public void setViaPartitionKey(String partitionKey)
    parameters:
    - id: viaPartitionKey
      type: "26831127"
      description: <p>via-partition key of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getDeadLetterSource()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getDeadLetterSource()
  nameWithType: Message.getDeadLetterSource()
  fullName: com.microsoft.azure.servicebus.Message.getDeadLetterSource()
  type: Method
  summary: "<p>Gets the name of the queue or subscription that this message was enqueued on, before it was deadlettered.</p>\r\n<p>This value is only set in messages that have been dead-lettered and subsequently auto-forwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public String getDeadLetterSource()
    return:
      type: "26831127"
      description: <p>dead letter source of this message </p>
- uid: com.microsoft.azure.servicebus.Message.getLockToken()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: getLockToken()
  nameWithType: Message.getLockToken()
  fullName: com.microsoft.azure.servicebus.Message.getLockToken()
  type: Method
  summary: "<p>Gets the lock token for the current message.</p>\r\n<p>The lock token is a reference to the lock that is being held by the broker in PEEKLOCK mode. Locks are used to explicitly settle messages as explained in the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement\">product documentation in more detail</a>. The token can also be used to pin the lock permanently through the <a href=\"https://docs.microsoft.com/azure/service-bus-messaging/message-deferral\">Deferral API</a> and, with that, take the message out of the regular delivery state flow. This property is read-only.</p>\r\n<p></p>"
  syntax:
    content: public UUID getLockToken()
    return:
      type: add9545a
      description: <p>lock token of this message. </p>
- uid: com.microsoft.azure.servicebus.IMessage
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.IMessage.yml
  name: IMessage
  nameWithType: IMessage
  fullName: com.microsoft.azure.servicebus.IMessage
  type: Interface
  summary: "<p>Represents the message that is exchanged between Azure Service Bus and its clients.</p>\r\n<p></p>"
  syntax: *o11
- uid: com.microsoft.azure.servicebus.Message.createCopy()
  parent: com.microsoft.azure.servicebus.Message
  href: com.microsoft.azure.servicebus.Message.yml
  name: createCopy()
  nameWithType: Message.createCopy()
  fullName: com.microsoft.azure.servicebus.Message.createCopy()
  type: Method
  summary: "<p>Creates a shallow copy of this message. </p>"
  syntax:
    content: public IMessage createCopy()
    return:
      type: com.microsoft.azure.servicebus.IMessage
      description: <p>copy of this message </p>
