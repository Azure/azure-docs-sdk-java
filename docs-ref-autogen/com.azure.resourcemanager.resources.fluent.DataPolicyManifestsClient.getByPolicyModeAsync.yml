### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.DataPolicyManifestsClient.getByPolicyModeAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.DataPolicyManifestsClient.getByPolicyModeAsync"
name: "getByPolicyModeAsync"
nameWithType: "DataPolicyManifestsClient.getByPolicyModeAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.DataPolicyManifestsClient.getByPolicyModeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DataPolicyManifestsClient.getByPolicyModeAsync(String policyMode)"
  name: "getByPolicyModeAsync(String policyMode)"
  nameWithType: "DataPolicyManifestsClient.getByPolicyModeAsync(String policyMode)"
  summary: "This operation retrieves the data policy manifest with the given policy mode."
  parameters:
  - description: "The policy mode of the data policy manifest to get."
    name: "policyMode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DataPolicyManifestInner> getByPolicyModeAsync(String policyMode)"
  returns:
    description: "the data policy manifest on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestInner?alt=com.azure.resourcemanager.resources.fluent.models.DataPolicyManifestInner&text=DataPolicyManifestInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
