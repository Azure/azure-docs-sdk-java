### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  id: FormatOption
  parent: com.microsoft.azure.maps.mapcontrol.options
  children:
  - com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale(@NonNull Expression)
  - com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale(double)
  - com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor(@ColorInt int)
  - com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor(@NonNull Expression)
  - com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont(@NonNull Expression)
  - com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont(@NonNull String [])
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.yml
  langs:
  - java
  name: Expression.FormatOption
  nameWithType: Expression.FormatOption
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  type: Class
  source:
    remote: &o0
      path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
      branch: master
      repo: https://dev.azure.com/msazure/One/_git/Azure-IoT-Maps-AndroidSDK
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
    startLine: 4474
  package: com.microsoft.azure.maps.mapcontrol.options
  summary: "<p>Holds format options used in a <xref uid=\"\" data-throw-if-not-resolved=\"false\">formatEntry(Expression, FormatOption...)</xref> that builds a <xref uid=\"\" data-throw-if-not-resolved=\"false\">format(FormatEntry...)</xref> expression. </p>\r\n<p>If an option is not set, it defaults to the base value defined for the symbol. </p>"
  syntax:
    content: public class FormatOption
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.maps.mapcontrol.options.Expression.Option
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale(@NonNull Expression)
  id: formatFontScale(@NonNull Expression)
  parent: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.yml
  langs:
  - java
  name: formatFontScale(@NonNull Expression expression)
  nameWithType: Expression.FormatOption.formatFontScale(@NonNull Expression expression)
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale(@NonNull Expression expression)
  overload: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
    startLine: 4490
  package: com.microsoft.azure.maps.mapcontrol.options
  summary: "<p>If set, the font-scale argument specifies a scaling factor relative to the text-size specified in the root layout properties. </p>\r\n<p>\"font-scale\" is required to be of a resulting type number.</p>\r\n<p></p>"
  syntax:
    content: public static FormatOption formatFontScale(@NonNull Expression expression)
    parameters:
    - id: expression
      type: 3872da22com.microsoft.azure.maps.mapcontrol.options.Expression
      description: <p>expression </p>
    return:
      type: 4afee7a8
      description: <p>format option </p>
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale(double)
  id: formatFontScale(double)
  parent: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.yml
  langs:
  - java
  name: formatFontScale(double scale)
  nameWithType: Expression.FormatOption.formatFontScale(double scale)
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale(double scale)
  overload: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
    startLine: 4504
  package: com.microsoft.azure.maps.mapcontrol.options
  summary: "<p>If set, the font-scale argument specifies a scaling factor relative to the text-size specified in the root layout properties. </p>\r\n<p>\"font-scale\" is required to be of a resulting type number.</p>\r\n<p></p>"
  syntax:
    content: public static FormatOption formatFontScale(double scale)
    parameters:
    - id: scale
      type: a07dcde8
      description: <p>value </p>
    return:
      type: 4afee7a8
      description: <p>format option </p>
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor(@ColorInt int)
  id: formatTextColor(@ColorInt int)
  parent: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.yml
  langs:
  - java
  name: formatTextColor(@ColorInt int color)
  nameWithType: Expression.FormatOption.formatTextColor(@ColorInt int color)
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor(@ColorInt int color)
  overload: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
    startLine: 4556
  package: com.microsoft.azure.maps.mapcontrol.options
  summary: "<p>If set, the text-color argument overrides the color specified by the root paint properties.</p>\r\n<p></p>"
  syntax:
    content: public static FormatOption formatTextColor(@ColorInt int color)
    parameters:
    - id: color
      type: 3d494a14
      description: <p>value </p>
    return:
      type: 4afee7a8
      description: <p>format option </p>
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor(@NonNull Expression)
  id: formatTextColor(@NonNull Expression)
  parent: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.yml
  langs:
  - java
  name: formatTextColor(@NonNull Expression expression)
  nameWithType: Expression.FormatOption.formatTextColor(@NonNull Expression expression)
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor(@NonNull Expression expression)
  overload: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
    startLine: 4545
  package: com.microsoft.azure.maps.mapcontrol.options
  summary: "<p>If set, the text-color argument overrides the color specified by the root paint properties.</p>\r\n<p></p>"
  syntax:
    content: public static FormatOption formatTextColor(@NonNull Expression expression)
    parameters:
    - id: expression
      type: 3872da22com.microsoft.azure.maps.mapcontrol.options.Expression
      description: <p>expression </p>
    return:
      type: 4afee7a8
      description: <p>format option </p>
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont(@NonNull Expression)
  id: formatTextFont(@NonNull Expression)
  parent: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.yml
  langs:
  - java
  name: formatTextFont(@NonNull Expression expression)
  nameWithType: Expression.FormatOption.formatTextFont(@NonNull Expression expression)
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont(@NonNull Expression expression)
  overload: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
    startLine: 4519
  package: com.microsoft.azure.maps.mapcontrol.options
  summary: "<p>If set, the text-font argument overrides the font specified by the root layout properties. </p>\r\n<p>\"text-font\" is required to be a literal array. </p>\r\n<p>The requested font stack has to be a part of the used style.</p>\r\n<p></p>"
  syntax:
    content: public static FormatOption formatTextFont(@NonNull Expression expression)
    parameters:
    - id: expression
      type: 3872da22com.microsoft.azure.maps.mapcontrol.options.Expression
      description: <p>expression </p>
    return:
      type: 4afee7a8
      description: <p>format option </p>
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont(@NonNull String [])
  id: formatTextFont(@NonNull String [])
  parent: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.yml
  langs:
  - java
  name: formatTextFont(@NonNull String[] fontStack)
  nameWithType: Expression.FormatOption.formatTextFont(@NonNull String[] fontStack)
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont(@NonNull String[] fontStack)
  overload: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont*
  type: Method
  source:
    remote: *o0
    path: src/MapControl/mapcontrol/src/main/java/com/microsoft/azure/maps/mapcontrol/options/Expression.java
    startLine: 4534
  package: com.microsoft.azure.maps.mapcontrol.options
  summary: "<p>If set, the text-font argument overrides the font specified by the root layout properties. </p>\r\n<p>\"text-font\" is required to be a literal array. </p>\r\n<p>The requested font stack has to be a part of the used style.</p>\r\n<p></p>"
  syntax:
    content: public static FormatOption formatTextFont(@NonNull String[] fontStack)
    parameters:
    - id: fontStack
      type: 045b2b2f
      description: <p>value </p>
    return:
      type: 4afee7a8
      description: <p>format option </p>
references:
- uid: 3872da22com.microsoft.azure.maps.mapcontrol.options.Expression
  spec.java:
  - name: '@NonNull '
    fullName: '@NonNull '
  - uid: com.microsoft.azure.maps.mapcontrol.options.Expression
    name: Expression
    fullName: com.microsoft.azure.maps.mapcontrol.options.Expression
    href: com.microsoft.azure.maps.mapcontrol.options.Expression.yml
- uid: 4afee7a8
  spec.java:
  - name: FormatOption
    fullName: FormatOption
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale*
  name: formatFontScale
  nameWithType: Expression.FormatOption.formatFontScale
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatFontScale
  package: com.microsoft.azure.maps.mapcontrol.options
- uid: a07dcde8
  spec.java:
  - name: double
    fullName: double
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont*
  name: formatTextFont
  nameWithType: Expression.FormatOption.formatTextFont
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextFont
  package: com.microsoft.azure.maps.mapcontrol.options
- uid: 045b2b2f
  spec.java:
  - name: '@NonNull String []'
    fullName: '@NonNull String []'
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor*
  name: formatTextColor
  nameWithType: Expression.FormatOption.formatTextColor
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression.FormatOption.formatTextColor
  package: com.microsoft.azure.maps.mapcontrol.options
- uid: 3d494a14
  spec.java:
  - name: '@ColorInt int'
    fullName: '@ColorInt int'
- uid: com.microsoft.azure.maps.mapcontrol.options.Expression
  parent: com.microsoft.azure.maps.mapcontrol.options
  href: com.microsoft.azure.maps.mapcontrol.options.Expression.yml
  name: Expression
  nameWithType: Expression
  fullName: com.microsoft.azure.maps.mapcontrol.options.Expression
  type: Class
  summary: "<p>The value for any layout property, paint property, or filter may be specified as an expression. An expression defines a formula for computing the value of the property using the operators described below. <ul><li><p>Element </p></li><li><p>Mathematical operators for performing arithmetic and other operations on numeric values </p></li><li><p>Logical operators for manipulating boolean values and making conditional decisions </p></li><li><p>String operators for manipulating strings </p></li><li><p>Data operators, providing access to the properties of source features </p></li><li><p>Camera operators, providing access to the parameters defining the current map view </p></li></ul></p>\r\n<p>Expressions are represented as JSON arrays. The first element of an expression array is a string naming the expression operator, e.g. \"*\"or \"case\". Subsequent elements (if any) are the arguments to the expression. Each argument is either a literal value (a string, number, boolean, or null), or another expression array. </p>\r\n<p>Data expression: a data expression is any expression that access feature data <ndash></ndash> that is, any expression that uses one of the data operators:get,has,id,geometry-type, or properties. Data expressions allow a feature's properties to determine its appearance. They can be used to differentiate features within the same layer and to create data visualizations. </p>\r\n<p>Camera expression: a camera expression is any expression that uses the zoom operator. Such expressions allow the the appearance of a layer to change with the map's zoom level. Camera expressions can be used to create the appearance of depth and to control data density. </p>\r\n<p>Composition: a single expression may use a mix of data operators, camera operators, and other operators. Such composite expressions allows a layer's appearance to be determined by a combination of the zoom level and individual feature properties. </p>\r\n<p>Example expression: </p>\r\n<p>\r\n  <pre>\r\n    <code>PolygonLayer polygonLayer = new PolygonLayer(\r\n      \"source-id\",\r\n      fillColor(\r\n        interpolate( linear(), zoom(),\r\n          stop(12, step(get(\"stroke-width\"),\r\n            color(Color.BLACK),\r\n            stop(1f, color(Color.RED)),\r\n            stop(2f, color(Color.WHITE)),\r\n            stop(3f, color(Color.BLUE))\r\n          )),\r\n          stop(15, step(get(\"stroke-width\"),\r\n            color(Color.BLACK),\r\n            stop(1f, color(Color.YELLOW)),\r\n            stop(2f, color(Color.LTGRAY)),\r\n            stop(3f, color(Color.CYAN))\r\n          )),\r\n          stop(18, step(get(\"stroke-width\"),\r\n            color(Color.BLACK),\r\n            stop(1f, color(Color.WHITE)),\r\n            stop(2f, color(Color.GRAY)),\r\n            stop(3f, color(Color.GREEN))\r\n          ))\r\n        )\r\n      )\r\n    );\r\n    </code>\r\n  </pre>\r\n</p>"
  syntax:
    content: public class Expression
