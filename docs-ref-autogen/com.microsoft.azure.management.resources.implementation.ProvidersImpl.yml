### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  id: "ProvidersImpl"
  parent: "com.microsoft.azure.management.resources.implementation"
  children:
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.ProvidersImpl(com.microsoft.azure.management.resources.implementation.ProvidersInner)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByName(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByNameAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.list()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.listAsync()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.register(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregister(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersImpl.wrapModel(com.microsoft.azure.management.resources.implementation.ProviderInner)"
  langs:
  - "java"
  name: "ProvidersImpl"
  nameWithType: "ProvidersImpl"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  type: "Class"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "The implementation for <xref uid=\"com.microsoft.azure.management.resources.Providers\" data-throw-if-not-resolved=\"false\">Providers</xref>."
  syntax:
    content: "final class ProvidersImpl extends ReadableWrappersImpl<Provider,ProviderImpl,ProviderInner> implements Providers"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  implements:
  - "com.microsoft.azure.management.resources.Providers"
  inheritedMembers:
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertListToInnerAsync(rx.Observable<java.util.List<InnerT>>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertPageToInnerAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertToPagedList(java.util.List<InnerT>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.microsoft.azure.PagedList<InnerT>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(java.util.List<InnerT>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync(rx.Observable<java.util.List<InnerT>>)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)"
  - "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.ProvidersImpl(com.microsoft.azure.management.resources.implementation.ProvidersInner)"
  id: "ProvidersImpl(com.microsoft.azure.management.resources.implementation.ProvidersInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "ProvidersImpl(ProvidersInner client)"
  nameWithType: "ProvidersImpl.ProvidersImpl(ProvidersInner client)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.ProvidersImpl(ProvidersInner client)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.ProvidersImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: " ProvidersImpl(ProvidersInner client)"
    parameters:
    - id: "client"
      type: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByName(java.lang.String)"
  id: "getByName(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "getByName(String resourceProviderNamespace)"
  nameWithType: "ProvidersImpl.getByName(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByName(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByName*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public Provider getByName(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.resources.Provider"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByNameAsync(java.lang.String)"
  id: "getByNameAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "getByNameAsync(String name)"
  nameWithType: "ProvidersImpl.getByNameAsync(String name)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByNameAsync(String name)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByNameAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public Observable<Provider> getByNameAsync(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.Provider>"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.list()"
  id: "list()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "list()"
  nameWithType: "ProvidersImpl.list()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.list()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.list*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public PagedList<Provider> list()"
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.Provider>"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.listAsync()"
  id: "listAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "listAsync()"
  nameWithType: "ProvidersImpl.listAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.listAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public Observable<Provider> listAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.Provider>"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.register(java.lang.String)"
  id: "register(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "register(String resourceProviderNamespace)"
  nameWithType: "ProvidersImpl.register(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.register(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.register*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public Provider register(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.resources.Provider"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync(java.lang.String)"
  id: "registerAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "registerAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersImpl.registerAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public Observable<Provider> registerAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.Provider>"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  id: "registerAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  nameWithType: "ProvidersImpl.registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public ServiceFuture<Provider> registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
    - id: "callback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>"
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.Provider>"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregister(java.lang.String)"
  id: "unregister(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "unregister(String resourceProviderNamespace)"
  nameWithType: "ProvidersImpl.unregister(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregister(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregister*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public Provider unregister(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.resources.Provider"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync(java.lang.String)"
  id: "unregisterAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "unregisterAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersImpl.unregisterAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public Observable<Provider> unregisterAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.Provider>"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  id: "unregisterAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  nameWithType: "ProvidersImpl.unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "public ServiceFuture<Provider> unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
    - id: "callback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>"
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.Provider>"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.wrapModel(com.microsoft.azure.management.resources.implementation.ProviderInner)"
  id: "wrapModel(com.microsoft.azure.management.resources.implementation.ProviderInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersImpl"
  langs:
  - "java"
  name: "wrapModel(ProviderInner inner)"
  nameWithType: "ProvidersImpl.wrapModel(ProviderInner inner)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.wrapModel(ProviderInner inner)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.wrapModel*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  syntax:
    content: "protected ProviderImpl wrapModel(ProviderInner inner)"
    parameters:
    - id: "inner"
      type: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    return:
      type: "com.microsoft.azure.management.resources.implementation.ProviderImpl"
references:
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  name: "ProvidersInner"
  nameWithType: "ProvidersInner"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.ProvidersImpl*"
  name: "ProvidersImpl"
  nameWithType: "ProvidersImpl.ProvidersImpl"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.ProvidersImpl"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.Provider>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.Provider"
    name: "Provider"
    fullName: "com.microsoft.azure.management.resources.Provider"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.list*"
  name: "list"
  nameWithType: "ProvidersImpl.list"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.list"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.resources.Provider"
  name: "Provider"
  nameWithType: "Provider"
  fullName: "com.microsoft.azure.management.resources.Provider"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregister*"
  name: "unregister"
  nameWithType: "ProvidersImpl.unregister"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregister"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.Provider>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.Provider"
    name: "Provider"
    fullName: "com.microsoft.azure.management.resources.Provider"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync*"
  name: "unregisterAsync"
  nameWithType: "ProvidersImpl.unregisterAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.unregisterAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.Provider"
    name: "Provider"
    fullName: "com.microsoft.azure.management.resources.Provider"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.Provider>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.Provider"
    name: "Provider"
    fullName: "com.microsoft.azure.management.resources.Provider"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.register*"
  name: "register"
  nameWithType: "ProvidersImpl.register"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.register"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync*"
  name: "registerAsync"
  nameWithType: "ProvidersImpl.registerAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.registerAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByNameAsync*"
  name: "getByNameAsync"
  nameWithType: "ProvidersImpl.getByNameAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByNameAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByName*"
  name: "getByName"
  nameWithType: "ProvidersImpl.getByName"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.getByName"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  name: "ProviderInner"
  nameWithType: "ProviderInner"
  fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
- uid: "com.microsoft.azure.management.resources.implementation.ProviderImpl"
  name: "ProviderImpl"
  nameWithType: "ProviderImpl"
  fullName: "com.microsoft.azure.management.resources.implementation.ProviderImpl"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.wrapModel*"
  name: "wrapModel"
  nameWithType: "ProvidersImpl.wrapModel"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.wrapModel"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.listAsync*"
  name: "listAsync"
  nameWithType: "ProvidersImpl.listAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersImpl.listAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<com.microsoft.azure.management.resources.Provider,com.microsoft.azure.management.resources.implementation.ProviderImpl,com.microsoft.azure.management.resources.implementation.ProviderInner>"
  name: "ReadableWrappersImpl<Provider,ProviderImpl,ProviderInner>"
  nameWithType: "ReadableWrappersImpl<Provider,ProviderImpl,ProviderInner>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl<com.microsoft.azure.management.resources.Provider,com.microsoft.azure.management.resources.implementation.ProviderImpl,com.microsoft.azure.management.resources.implementation.ProviderInner>"
- uid: "com.microsoft.azure.management.resources.Providers"
  name: "Providers"
  nameWithType: "Providers"
  fullName: "com.microsoft.azure.management.resources.Providers"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)"
  name: "ReadableWrappersImpl.wrapModel(InnerT)"
  nameWithType: "ReadableWrappersImpl.wrapModel(InnerT)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapModel(InnerT)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(java.util.List<InnerT>)"
  name: "ReadableWrappersImpl.wrapList(List<InnerT>)"
  nameWithType: "ReadableWrappersImpl.wrapList(List<InnerT>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(java.util.List<InnerT>)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertToPagedList(java.util.List<InnerT>)"
  name: "ReadableWrappersImpl.<InnerT>convertToPagedList(List<InnerT>)"
  nameWithType: "ReadableWrappersImpl.<InnerT>convertToPagedList(List<InnerT>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertToPagedList(java.util.List<InnerT>)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.microsoft.azure.PagedList<InnerT>)"
  name: "ReadableWrappersImpl.wrapList(PagedList<InnerT>)"
  nameWithType: "ReadableWrappersImpl.wrapList(PagedList<InnerT>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.microsoft.azure.PagedList<InnerT>)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertPageToInnerAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  name: "ReadableWrappersImpl.<InnerT>convertPageToInnerAsync(Observable<Page<InnerT>>)"
  nameWithType: "ReadableWrappersImpl.<InnerT>convertPageToInnerAsync(Observable<Page<InnerT>>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertPageToInnerAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
  name: "ReadableWrappersImpl.wrapPageAsync(Observable<Page<InnerT>>)"
  nameWithType: "ReadableWrappersImpl.wrapPageAsync(Observable<Page<InnerT>>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(rx.Observable<com.microsoft.azure.Page<InnerT>>)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertListToInnerAsync(rx.Observable<java.util.List<InnerT>>)"
  name: "ReadableWrappersImpl.<InnerT>convertListToInnerAsync(Observable<List<InnerT>>)"
  nameWithType: "ReadableWrappersImpl.<InnerT>convertListToInnerAsync(Observable<List<InnerT>>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.<InnerT>convertListToInnerAsync(rx.Observable<java.util.List<InnerT>>)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync(rx.Observable<java.util.List<InnerT>>)"
  name: "ReadableWrappersImpl.wrapListAsync(Observable<List<InnerT>>)"
  nameWithType: "ReadableWrappersImpl.wrapListAsync(Observable<List<InnerT>>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync(rx.Observable<java.util.List<InnerT>>)"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "com.microsoft.azure.management.resources.Provider,com.microsoft.azure.management.resources.implementation.ProviderImpl,com.microsoft.azure.management.resources.implementation.ProviderInner"
  name: "Provider,ProviderImpl,ProviderInner"
  nameWithType: "Provider,ProviderImpl,ProviderInner"
  fullName: "com.microsoft.azure.management.resources.Provider,com.microsoft.azure.management.resources.implementation.ProviderImpl,com.microsoft.azure.management.resources.implementation.ProviderInner"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
  name: "ReadableWrappersImpl"
  nameWithType: "ReadableWrappersImpl"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl"
- uid: "InnerT>)"
  name: "InnerT>)"
  nameWithType: "InnerT>)"
  fullName: "InnerT>)"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(java.util.List"
  name: "ReadableWrappersImpl.wrapList(List"
  nameWithType: "ReadableWrappersImpl.wrapList(List"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(java.util.List"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl."
  name: "ReadableWrappersImpl."
  nameWithType: "ReadableWrappersImpl."
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl."
- uid: "InnerT>convertToPagedList(java.util.List"
  name: "InnerT>convertToPagedList(List"
  nameWithType: "InnerT>convertToPagedList(List"
  fullName: "InnerT>convertToPagedList(java.util.List"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.microsoft.azure.PagedList"
  name: "ReadableWrappersImpl.wrapList(PagedList"
  nameWithType: "ReadableWrappersImpl.wrapList(PagedList"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapList(com.microsoft.azure.PagedList"
- uid: "InnerT>>)"
  name: "InnerT>>)"
  nameWithType: "InnerT>>)"
  fullName: "InnerT>>)"
- uid: "InnerT>convertPageToInnerAsync(rx.Observable"
  name: "InnerT>convertPageToInnerAsync(Observable"
  nameWithType: "InnerT>convertPageToInnerAsync(Observable"
  fullName: "InnerT>convertPageToInnerAsync(rx.Observable"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(rx.Observable"
  name: "ReadableWrappersImpl.wrapPageAsync(Observable"
  nameWithType: "ReadableWrappersImpl.wrapPageAsync(Observable"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapPageAsync(rx.Observable"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "InnerT>convertListToInnerAsync(rx.Observable"
  name: "InnerT>convertListToInnerAsync(Observable"
  nameWithType: "InnerT>convertListToInnerAsync(Observable"
  fullName: "InnerT>convertListToInnerAsync(rx.Observable"
- uid: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync(rx.Observable"
  name: "ReadableWrappersImpl.wrapListAsync(Observable"
  nameWithType: "ReadableWrappersImpl.wrapListAsync(Observable"
  fullName: "com.microsoft.azure.management.resources.fluentcore.arm.collection.implementation.ReadableWrappersImpl.wrapListAsync(rx.Observable"
