### YamlMime:JavaType
uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner"
fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner"
name: "VnetRouteInner"
nameWithType: "VnetRouteInner"
summary: "Virtual Network route contract used to pass routing information for a Virtual Network."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.appservice.models.ProxyOnlyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.kind()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
- "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VnetRouteInner extends ProxyOnlyResource"
constructors:
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.VnetRouteInner()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.VnetRouteInner()"
  name: "VnetRouteInner()"
  nameWithType: "VnetRouteInner.VnetRouteInner()"
  syntax: "public VnetRouteInner()"
methods:
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.endAddress()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.endAddress()"
  name: "endAddress()"
  nameWithType: "VnetRouteInner.endAddress()"
  summary: "Get the end<wbr>Address property: The ending address for this route."
  syntax: "public String endAddress()"
  desc: "Get the endAddress property: The ending address for this route. If the start address is specified in CIDR notation, this must be omitted."
  returns:
    description: "the endAddress value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.routeType()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.routeType()"
  name: "routeType()"
  nameWithType: "VnetRouteInner.routeType()"
  summary: "Get the route<wbr>Type property: The type of route this is: DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918 INHERITED - Routes inherited from the real Virtual Network routes STATIC - Static route set on the app only"
  syntax: "public RouteType routeType()"
  desc: "Get the routeType property: The type of route this is: DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918 INHERITED - Routes inherited from the real Virtual Network routes STATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network."
  returns:
    description: "the routeType value."
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.RouteType?alt=com.azure.resourcemanager.appservice.models.RouteType&text=RouteType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.startAddress()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.startAddress()"
  name: "startAddress()"
  nameWithType: "VnetRouteInner.startAddress()"
  summary: "Get the start<wbr>Address property: The starting address for this route."
  syntax: "public String startAddress()"
  desc: "Get the startAddress property: The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified."
  returns:
    description: "the startAddress value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.validate()"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.validate()"
  name: "validate()"
  nameWithType: "VnetRouteInner.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withEndAddress(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withEndAddress(String endAddress)"
  name: "withEndAddress(String endAddress)"
  nameWithType: "VnetRouteInner.withEndAddress(String endAddress)"
  summary: "Set the end<wbr>Address property: The ending address for this route."
  parameters:
  - description: "the endAddress value to set."
    name: "endAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetRouteInner withEndAddress(String endAddress)"
  desc: "Set the endAddress property: The ending address for this route. If the start address is specified in CIDR notation, this must be omitted."
  returns:
    description: "the VnetRouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner&text=VnetRouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withKind(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withKind(String kind)"
  name: "withKind(String kind)"
  nameWithType: "VnetRouteInner.withKind(String kind)"
  summary: "Set the kind property: Kind of resource."
  overridden: "com.azure.resourcemanager.appservice.models.ProxyOnlyResource.withKind(java.lang.String)"
  parameters:
  - name: "kind"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetRouteInner withKind(String kind)"
  desc: "Set the kind property: Kind of resource."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner&text=VnetRouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withRouteType(com.azure.resourcemanager.appservice.models.RouteType)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withRouteType(RouteType routeType)"
  name: "withRouteType(RouteType routeType)"
  nameWithType: "VnetRouteInner.withRouteType(RouteType routeType)"
  summary: "Set the route<wbr>Type property: The type of route this is: DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918 INHERITED - Routes inherited from the real Virtual Network routes STATIC - Static route set on the app only"
  parameters:
  - description: "the routeType value to set."
    name: "routeType"
    type: "<xref href=\"com.azure.resourcemanager.appservice.models.RouteType?alt=com.azure.resourcemanager.appservice.models.RouteType&text=RouteType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetRouteInner withRouteType(RouteType routeType)"
  desc: "Set the routeType property: The type of route this is: DEFAULT - By default, every app has routes to the local address ranges specified by RFC1918 INHERITED - Routes inherited from the real Virtual Network routes STATIC - Static route set on the app only\n\nThese values will be used for syncing an app's routes with those from a Virtual Network."
  returns:
    description: "the VnetRouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner&text=VnetRouteInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withStartAddress(java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner.withStartAddress(String startAddress)"
  name: "withStartAddress(String startAddress)"
  nameWithType: "VnetRouteInner.withStartAddress(String startAddress)"
  summary: "Set the start<wbr>Address property: The starting address for this route."
  parameters:
  - description: "the startAddress value to set."
    name: "startAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VnetRouteInner withStartAddress(String startAddress)"
  desc: "Set the startAddress property: The starting address for this route. This may also include a CIDR notation, in which case the end address must not be specified."
  returns:
    description: "the VnetRouteInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner?alt=com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner&text=VnetRouteInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Virtual Network route contract used to pass routing information for a Virtual Network."
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.16.0
