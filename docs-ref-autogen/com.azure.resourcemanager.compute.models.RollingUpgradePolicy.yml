### YamlMime:JavaType
uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy"
fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy"
name: "RollingUpgradePolicy"
nameWithType: "RollingUpgradePolicy"
summary: "The configuration parameters used while performing a rolling upgrade."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class RollingUpgradePolicy"
constructors:
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.RollingUpgradePolicy()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.RollingUpgradePolicy()"
  name: "RollingUpgradePolicy()"
  nameWithType: "RollingUpgradePolicy.RollingUpgradePolicy()"
  syntax: "public RollingUpgradePolicy()"
methods:
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.enableCrossZoneUpgrade()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.enableCrossZoneUpgrade()"
  name: "enableCrossZoneUpgrade()"
  nameWithType: "RollingUpgradePolicy.enableCrossZoneUpgrade()"
  summary: "Get the enable<wbr>Cross<wbr>Zone<wbr>Upgrade property: Allow VMSS to ignore AZ boundaries when constructing upgrade batches."
  syntax: "public Boolean enableCrossZoneUpgrade()"
  desc: "Get the enableCrossZoneUpgrade property: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size."
  returns:
    description: "the enableCrossZoneUpgrade value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.maxBatchInstancePercent()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.maxBatchInstancePercent()"
  name: "maxBatchInstancePercent()"
  nameWithType: "RollingUpgradePolicy.maxBatchInstancePercent()"
  summary: "Get the max<wbr>Batch<wbr>Instance<wbr>Percent property: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch."
  syntax: "public Integer maxBatchInstancePercent()"
  desc: "Get the maxBatchInstancePercent property: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%."
  returns:
    description: "the maxBatchInstancePercent value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.maxUnhealthyInstancePercent()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.maxUnhealthyInstancePercent()"
  name: "maxUnhealthyInstancePercent()"
  nameWithType: "RollingUpgradePolicy.maxUnhealthyInstancePercent()"
  summary: "Get the max<wbr>Unhealthy<wbr>Instance<wbr>Percent property: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts."
  syntax: "public Integer maxUnhealthyInstancePercent()"
  desc: "Get the maxUnhealthyInstancePercent property: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%."
  returns:
    description: "the maxUnhealthyInstancePercent value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent()"
  name: "maxUnhealthyUpgradedInstancePercent()"
  nameWithType: "RollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent()"
  summary: "Get the max<wbr>Unhealthy<wbr>Upgraded<wbr>Instance<wbr>Percent property: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state."
  syntax: "public Integer maxUnhealthyUpgradedInstancePercent()"
  desc: "Get the maxUnhealthyUpgradedInstancePercent property: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%."
  returns:
    description: "the maxUnhealthyUpgradedInstancePercent value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.pauseTimeBetweenBatches()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.pauseTimeBetweenBatches()"
  name: "pauseTimeBetweenBatches()"
  nameWithType: "RollingUpgradePolicy.pauseTimeBetweenBatches()"
  summary: "Get the pause<wbr>Time<wbr>Between<wbr>Batches property: The wait time between completing the update for all virtual machines in one batch and starting the next batch."
  syntax: "public String pauseTimeBetweenBatches()"
  desc: "Get the pauseTimeBetweenBatches property: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S)."
  returns:
    description: "the pauseTimeBetweenBatches value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.prioritizeUnhealthyInstances()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.prioritizeUnhealthyInstances()"
  name: "prioritizeUnhealthyInstances()"
  nameWithType: "RollingUpgradePolicy.prioritizeUnhealthyInstances()"
  summary: "Get the prioritize<wbr>Unhealthy<wbr>Instances property: Upgrade all unhealthy instances in a scale set before any healthy instances."
  syntax: "public Boolean prioritizeUnhealthyInstances()"
  desc: "Get the prioritizeUnhealthyInstances property: Upgrade all unhealthy instances in a scale set before any healthy instances."
  returns:
    description: "the prioritizeUnhealthyInstances value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.validate()"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.validate()"
  name: "validate()"
  nameWithType: "RollingUpgradePolicy.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withEnableCrossZoneUpgrade(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  name: "withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  nameWithType: "RollingUpgradePolicy.withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  summary: "Set the enable<wbr>Cross<wbr>Zone<wbr>Upgrade property: Allow VMSS to ignore AZ boundaries when constructing upgrade batches."
  parameters:
  - description: "the enableCrossZoneUpgrade value to set."
    name: "enableCrossZoneUpgrade"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public RollingUpgradePolicy withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  desc: "Set the enableCrossZoneUpgrade property: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size."
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withMaxBatchInstancePercent(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withMaxBatchInstancePercent(Integer maxBatchInstancePercent)"
  name: "withMaxBatchInstancePercent(Integer maxBatchInstancePercent)"
  nameWithType: "RollingUpgradePolicy.withMaxBatchInstancePercent(Integer maxBatchInstancePercent)"
  summary: "Set the max<wbr>Batch<wbr>Instance<wbr>Percent property: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch."
  parameters:
  - description: "the maxBatchInstancePercent value to set."
    name: "maxBatchInstancePercent"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public RollingUpgradePolicy withMaxBatchInstancePercent(Integer maxBatchInstancePercent)"
  desc: "Set the maxBatchInstancePercent property: The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%."
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withMaxUnhealthyInstancePercent(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withMaxUnhealthyInstancePercent(Integer maxUnhealthyInstancePercent)"
  name: "withMaxUnhealthyInstancePercent(Integer maxUnhealthyInstancePercent)"
  nameWithType: "RollingUpgradePolicy.withMaxUnhealthyInstancePercent(Integer maxUnhealthyInstancePercent)"
  summary: "Set the max<wbr>Unhealthy<wbr>Instance<wbr>Percent property: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts."
  parameters:
  - description: "the maxUnhealthyInstancePercent value to set."
    name: "maxUnhealthyInstancePercent"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public RollingUpgradePolicy withMaxUnhealthyInstancePercent(Integer maxUnhealthyInstancePercent)"
  desc: "Set the maxUnhealthyInstancePercent property: The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. The default value for this parameter is 20%."
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withMaxUnhealthyUpgradedInstancePercent(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withMaxUnhealthyUpgradedInstancePercent(Integer maxUnhealthyUpgradedInstancePercent)"
  name: "withMaxUnhealthyUpgradedInstancePercent(Integer maxUnhealthyUpgradedInstancePercent)"
  nameWithType: "RollingUpgradePolicy.withMaxUnhealthyUpgradedInstancePercent(Integer maxUnhealthyUpgradedInstancePercent)"
  summary: "Set the max<wbr>Unhealthy<wbr>Upgraded<wbr>Instance<wbr>Percent property: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state."
  parameters:
  - description: "the maxUnhealthyUpgradedInstancePercent value to set."
    name: "maxUnhealthyUpgradedInstancePercent"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public RollingUpgradePolicy withMaxUnhealthyUpgradedInstancePercent(Integer maxUnhealthyUpgradedInstancePercent)"
  desc: "Set the maxUnhealthyUpgradedInstancePercent property: The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. The default value for this parameter is 20%."
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPauseTimeBetweenBatches(java.lang.String)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPauseTimeBetweenBatches(String pauseTimeBetweenBatches)"
  name: "withPauseTimeBetweenBatches(String pauseTimeBetweenBatches)"
  nameWithType: "RollingUpgradePolicy.withPauseTimeBetweenBatches(String pauseTimeBetweenBatches)"
  summary: "Set the pause<wbr>Time<wbr>Between<wbr>Batches property: The wait time between completing the update for all virtual machines in one batch and starting the next batch."
  parameters:
  - description: "the pauseTimeBetweenBatches value to set."
    name: "pauseTimeBetweenBatches"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RollingUpgradePolicy withPauseTimeBetweenBatches(String pauseTimeBetweenBatches)"
  desc: "Set the pauseTimeBetweenBatches property: The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S)."
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPrioritizeUnhealthyInstances(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  name: "withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  nameWithType: "RollingUpgradePolicy.withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  summary: "Set the prioritize<wbr>Unhealthy<wbr>Instances property: Upgrade all unhealthy instances in a scale set before any healthy instances."
  parameters:
  - description: "the prioritizeUnhealthyInstances value to set."
    name: "prioritizeUnhealthyInstances"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public RollingUpgradePolicy withPrioritizeUnhealthyInstances(Boolean prioritizeUnhealthyInstances)"
  desc: "Set the prioritizeUnhealthyInstances property: Upgrade all unhealthy instances in a scale set before any healthy instances."
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The configuration parameters used while performing a rolling upgrade."
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.19.0
