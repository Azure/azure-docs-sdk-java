### YamlMime:JavaMember
uid: "com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent*"
fullName: "com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent"
name: "EventGridEvent"
nameWithType: "EventGridEvent.EventGridEvent"
members:
- uid: "com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,java.lang.String)"
  fullName: "com.azure.messaging.eventgrid.EventGridEvent.EventGridEvent(String subject, String eventType, BinaryData data, String dataVersion)"
  name: "EventGridEvent(String subject, String eventType, BinaryData data, String dataVersion)"
  nameWithType: "EventGridEvent.EventGridEvent(String subject, String eventType, BinaryData data, String dataVersion)"
  summary: "Create a new instance of the EventGridEvent, with the given required fields.\n\n**Create EventGridEvent Samples**\n\n```java\n// Use BinaryData.fromObject() to create EventGridEvent data\n // From a model class\n User user = new User(\"Stephen\", \"James\");\n EventGridEvent eventGridEventDataObject = new EventGridEvent(\"/EventGridEvents/example/source\",\n     \"Example.EventType\", BinaryData.fromObject(user), \"0.1\");\n \n // From a String\n EventGridEvent eventGridEventDataStr = new EventGridEvent(\"/EventGridEvents/example/source\",\n     \"Example.EventType\", BinaryData.fromObject(\"Hello World\"), \"0.1\");\n \n // From an Integer\n EventGridEvent eventGridEventDataInt = new EventGridEvent(\"/EventGridEvents/example/source\",\n     \"Example.EventType\", BinaryData.fromObject(1), \"0.1\");\n \n // From a Boolean\n EventGridEvent eventGridEventDataBool = new EventGridEvent(\"/EventGridEvents/example/source\",\n     \"Example.EventType\", BinaryData.fromObject(true), \"0.1\");\n \n // From null\n EventGridEvent eventGridEventDataNull = new EventGridEvent(\"/EventGridEvents/example/source\",\n     \"Example.EventType\", BinaryData.fromObject(null), \"0.1\");\n \n // Use BinaryData.fromString() if you have a Json String for the EventGridEvent data.\n String jsonStringForData = \"\\\"Hello World\\\"\";  // A json String.\n EventGridEvent eventGridEventDataDataJsonStr = new EventGridEvent(\"/EventGridEvents/example/source\",\n     \"Example.EventType\", BinaryData.fromString(jsonStringForData), \"0.1\");\n```"
  parameters:
  - description: "the subject of the event."
    name: "subject"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the type of the event, e.g. \"Contoso.Items.ItemReceived\"."
    name: "eventType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the data associated with this event. The content of this <xref uid=\"com.azure.core.util.BinaryData\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData\"></xref> must be a Json value."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "the version of the data sent along with the event."
    name: "dataVersion"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventGridEvent(String subject, String eventType, BinaryData data, String dataVersion)"
type: "constructor"
metadata: {}
package: "com.azure.messaging.eventgrid"
artifact: com.azure:azure-messaging-eventgrid:4.2.0
