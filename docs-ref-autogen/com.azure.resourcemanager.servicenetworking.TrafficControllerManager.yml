### YamlMime:JavaType
uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager"
fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager"
name: "TrafficControllerManager"
nameWithType: "TrafficControllerManager"
summary: "Entry point to Traffic<wbr>Controller<wbr>Manager."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **TrafficControllerManager**"
methods:
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.associationsInterfaces()"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.associationsInterfaces()"
  name: "associationsInterfaces()"
  nameWithType: "TrafficControllerManager.associationsInterfaces()"
  summary: "Gets the resource collection API of Associations<wbr>Interfaces."
  syntax: "public AssociationsInterfaces associationsInterfaces()"
  desc: "Gets the resource collection API of AssociationsInterfaces. It manages Association."
  returns:
    description: "Resource collection API of AssociationsInterfaces."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.models.AssociationsInterfaces?alt=com.azure.resourcemanager.servicenetworking.models.AssociationsInterfaces&text=AssociationsInterfaces\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.authenticate(com.azure.core.http.HttpPipeline,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  name: "authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  nameWithType: "TrafficControllerManager.authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  summary: "Creates an instance of Traffic Controller service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the <xref uid=\"com.azure.core.http.HttpPipeline\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> configured with Azure authentication credential."
    name: "httpPipeline"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TrafficControllerManager authenticate(HttpPipeline httpPipeline, AzureProfile profile)"
  desc: "Creates an instance of Traffic Controller service API entry point."
  returns:
    description: "the Traffic Controller service API instance."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.TrafficControllerManager?alt=com.azure.resourcemanager.servicenetworking.TrafficControllerManager&text=TrafficControllerManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.authenticate(com.azure.core.credential.TokenCredential,com.azure.core.management.profile.AzureProfile)"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.authenticate(TokenCredential credential, AzureProfile profile)"
  name: "authenticate(TokenCredential credential, AzureProfile profile)"
  nameWithType: "TrafficControllerManager.authenticate(TokenCredential credential, AzureProfile profile)"
  summary: "Creates an instance of Traffic Controller service API entry point."
  modifiers:
  - "static"
  parameters:
  - description: "the credential to use."
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the Azure profile for client."
    name: "profile"
    type: "<xref href=\"com.azure.core.management.profile.AzureProfile?alt=com.azure.core.management.profile.AzureProfile&text=AzureProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TrafficControllerManager authenticate(TokenCredential credential, AzureProfile profile)"
  desc: "Creates an instance of Traffic Controller service API entry point."
  returns:
    description: "the Traffic Controller service API instance."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.TrafficControllerManager?alt=com.azure.resourcemanager.servicenetworking.TrafficControllerManager&text=TrafficControllerManager\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.configure()"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.configure()"
  name: "configure()"
  nameWithType: "TrafficControllerManager.configure()"
  summary: "Gets a Configurable instance that can be used to create Traffic<wbr>Controller<wbr>Manager with optional configuration."
  modifiers:
  - "static"
  syntax: "public static TrafficControllerManager.Configurable configure()"
  desc: "Gets a Configurable instance that can be used to create TrafficControllerManager with optional configuration."
  returns:
    description: "the Configurable instance allowing configurations."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.TrafficControllerManager.Configurable?alt=com.azure.resourcemanager.servicenetworking.TrafficControllerManager.Configurable&text=Configurable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.frontendsInterfaces()"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.frontendsInterfaces()"
  name: "frontendsInterfaces()"
  nameWithType: "TrafficControllerManager.frontendsInterfaces()"
  summary: "Gets the resource collection API of Frontends<wbr>Interfaces."
  syntax: "public FrontendsInterfaces frontendsInterfaces()"
  desc: "Gets the resource collection API of FrontendsInterfaces. It manages Frontend."
  returns:
    description: "Resource collection API of FrontendsInterfaces."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.models.FrontendsInterfaces?alt=com.azure.resourcemanager.servicenetworking.models.FrontendsInterfaces&text=FrontendsInterfaces\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.operations()"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.operations()"
  name: "operations()"
  nameWithType: "TrafficControllerManager.operations()"
  summary: "Gets the resource collection API of Operations."
  syntax: "public Operations operations()"
  desc: "Gets the resource collection API of Operations."
  returns:
    description: "Resource collection API of Operations."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.models.Operations?alt=com.azure.resourcemanager.servicenetworking.models.Operations&text=Operations\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.securityPoliciesInterfaces()"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.securityPoliciesInterfaces()"
  name: "securityPoliciesInterfaces()"
  nameWithType: "TrafficControllerManager.securityPoliciesInterfaces()"
  summary: "Gets the resource collection API of Security<wbr>Policies<wbr>Interfaces."
  syntax: "public SecurityPoliciesInterfaces securityPoliciesInterfaces()"
  desc: "Gets the resource collection API of SecurityPoliciesInterfaces. It manages SecurityPolicy."
  returns:
    description: "Resource collection API of SecurityPoliciesInterfaces."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.models.SecurityPoliciesInterfaces?alt=com.azure.resourcemanager.servicenetworking.models.SecurityPoliciesInterfaces&text=SecurityPoliciesInterfaces\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.serviceClient()"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.serviceClient()"
  name: "serviceClient()"
  nameWithType: "TrafficControllerManager.serviceClient()"
  summary: "Gets wrapped service client Traffic<wbr>Controller<wbr>Management<wbr>Client providing direct access to the underlying auto-generated API implementation, based on Azure REST API."
  syntax: "public TrafficControllerManagementClient serviceClient()"
  desc: "Gets wrapped service client TrafficControllerManagementClient providing direct access to the underlying auto-generated API implementation, based on Azure REST API."
  returns:
    description: "Wrapped service client TrafficControllerManagementClient."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.fluent.TrafficControllerManagementClient?alt=com.azure.resourcemanager.servicenetworking.fluent.TrafficControllerManagementClient&text=TrafficControllerManagementClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.trafficControllerInterfaces()"
  fullName: "com.azure.resourcemanager.servicenetworking.TrafficControllerManager.trafficControllerInterfaces()"
  name: "trafficControllerInterfaces()"
  nameWithType: "TrafficControllerManager.trafficControllerInterfaces()"
  summary: "Gets the resource collection API of Traffic<wbr>Controller<wbr>Interfaces."
  syntax: "public TrafficControllerInterfaces trafficControllerInterfaces()"
  desc: "Gets the resource collection API of TrafficControllerInterfaces. It manages TrafficController."
  returns:
    description: "Resource collection API of TrafficControllerInterfaces."
    type: "<xref href=\"com.azure.resourcemanager.servicenetworking.models.TrafficControllerInterfaces?alt=com.azure.resourcemanager.servicenetworking.models.TrafficControllerInterfaces&text=TrafficControllerInterfaces\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Entry point to TrafficControllerManager. Traffic Controller Provider management API."
metadata: {}
package: "com.azure.resourcemanager.servicenetworking"
artifact: com.azure.resourcemanager:azure-resourcemanager-servicenetworking:1.1.0
