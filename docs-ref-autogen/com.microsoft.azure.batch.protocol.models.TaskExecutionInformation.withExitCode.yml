### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withExitCode*"
fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withExitCode"
name: "withExitCode"
nameWithType: "TaskExecutionInformation.withExitCode"
members:
- uid: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withExitCode(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskExecutionInformation.withExitCode(Integer exitCode)"
  name: "withExitCode(Integer exitCode)"
  nameWithType: "TaskExecutionInformation.withExitCode(Integer exitCode)"
  summary: "Set this property is set only if the Task is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the Task (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
  parameters:
  - description: "the exitCode value to set"
    name: "exitCode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskExecutionInformation withExitCode(Integer exitCode)"
  returns:
    description: "the TaskExecutionInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionInformation&text=TaskExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:8.0.0
