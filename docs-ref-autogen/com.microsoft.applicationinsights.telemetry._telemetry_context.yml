### YamlMime:ManagedReference
items:
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context
  id: _telemetry_context
  parent: com.microsoft.applicationinsights.telemetry
  children:
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getComponent()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getDevice()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getInstrumentationKey()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getInternal()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getLocation()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getOperation()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getProperties()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getSession()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getTags()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.getUser()
  - com.microsoft.applicationinsights.telemetry._telemetry_context.initialize(TelemetryContext)
  - com.microsoft.applicationinsights.telemetry._telemetry_context.setInstrumentationKey(String)
  - com.microsoft.applicationinsights.telemetry._telemetry_context.TelemetryContext()
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext
  type: Class
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 47
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Represents a context for sending telemetry to the Application Insights service. The context holds data that is sent with every telemetry item. It includes the instrumentation key; the current operation id, for correlating related telemetry items; and user, session and device data. You can also set properties that are added to every telemetry item, and can be used in the portal to filter the telemetry that used this context. </p>
  syntax: &o1
    content: public class TelemetryContext
  inheritance:
  - java.lang.Object
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getComponent()
  id: getComponent()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getComponent()
  nameWithType: TelemetryContext.getComponent()
  fullName: ComponentContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getComponent*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 71
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets the object describing the component (application) tracked by this instance. </p>
  syntax:
    content: public ComponentContext getComponent()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._component_context
      description: <p>The component. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getDevice()
  id: getDevice()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getDevice()
  nameWithType: TelemetryContext.getDevice()
  fullName: DeviceContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getDevice*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 83
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets the object describing the device tracked by this instance. </p>
  syntax:
    content: public DeviceContext getDevice()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._device_context
      description: <p>The device. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getInstrumentationKey()
  id: getInstrumentationKey()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getInstrumentationKey()
  nameWithType: TelemetryContext.getInstrumentationKey()
  fullName: String com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getInstrumentationKey*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 152
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Gets the default instrumentation key for all <xref uid="com.microsoft.applicationinsights.telemetry._telemetry" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.Telemetry</xref> objects logged in this <xref uid="" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.TelemetryContext</xref>.</p>

    <p>By default, this property is initialized with the InstrumentationKey value which is in <xref uid="com.microsoft.applicationinsights._telemetry_configuration" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.TelemetryConfiguration</xref> of the 'Active' instance.</p>

    <p>You can specify it for all telemetry tracked via a particular <xref uid="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.TelemetryClient</xref> or for a specific <xref uid="com.microsoft.applicationinsights.telemetry._telemetry" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.Telemetry</xref></p>

    <p></p>
  syntax:
    content: public String getInstrumentationKey()
    return:
      type: "26831127"
      description: <p>The instrumentation key </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getInternal()
  id: getInternal()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getInternal()
  nameWithType: TelemetryContext.getInternal()
  fullName: InternalContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getInternal*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 204
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: public InternalContext getInternal()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._internal_context
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getLocation()
  id: getLocation()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getLocation()
  nameWithType: TelemetryContext.getLocation()
  fullName: LocationContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getLocation*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 132
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets the object describing a location tracked by this instance. </p>
  syntax:
    content: public LocationContext getLocation()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._location_context
      description: <p>The location. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getOperation()
  id: getOperation()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getOperation()
  nameWithType: TelemetryContext.getOperation()
  fullName: OperationContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getOperation*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 120
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets the current operation (typically an HTTP request). Used to correlate events - for example, exceptions generated while processing a request. </p>
  syntax:
    content: public OperationContext getOperation()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._operation_context
      description: <p>The operation. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getProperties()
  id: getProperties()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getProperties()
  nameWithType: TelemetryContext.getProperties()
  fullName: ConcurrentMap<String, String> com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getProperties*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 180
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets a dictionary of application-defined property values. </p>
  syntax:
    content: public ConcurrentMap<String, String> getProperties()
    return:
      type: bc7a2f3a
      description: <p>The application-defined property values. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getSession()
  id: getSession()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getSession()
  nameWithType: TelemetryContext.getSession()
  fullName: SessionContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getSession*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 95
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets the object describing a user session tracked by this instance. </p>
  syntax:
    content: public SessionContext getSession()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._session_context
      description: <p>The user's session. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getTags()
  id: getTags()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getTags()
  nameWithType: TelemetryContext.getTags()
  fullName: ConcurrentMap<String, String> com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getTags*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 188
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets a dictionary of context tags. </p>
  syntax:
    content: public ConcurrentMap<String, String> getTags()
    return:
      type: bc7a2f3a
      description: <p>The tags. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getUser()
  id: getUser()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: getUser()
  nameWithType: TelemetryContext.getUser()
  fullName: UserContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.getUser*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 107
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Gets the object describing a user tracked by this instance. </p>
  syntax:
    content: public UserContext getUser()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._user_context
      description: <p>The user. </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.initialize(TelemetryContext)
  id: initialize(TelemetryContext)
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: initialize(TelemetryContext source)
  nameWithType: TelemetryContext.initialize(TelemetryContext source)
  fullName: void com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize(TelemetryContext source)
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.initialize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 192
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: public void initialize(TelemetryContext source)
    parameters:
    - id: source
      type: com.microsoft.applicationinsights.telemetry._telemetry_context
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.setInstrumentationKey(String)
  id: setInstrumentationKey(String)
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: setInstrumentationKey(String instrumentationKey)
  nameWithType: TelemetryContext.setInstrumentationKey(String instrumentationKey)
  fullName: void com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey(String instrumentationKey)
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.setInstrumentationKey*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 168
  package: com.microsoft.applicationinsights.telemetry
  summary: >-
    <p>Sets the default instrumentation key for all <xref uid="com.microsoft.applicationinsights.telemetry._telemetry" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.Telemetry</xref> objects logged in this <xref uid="" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.TelemetryContext</xref>.</p>

    <p>By default, this property is initialized with the InstrumentationKey value which is in <xref uid="com.microsoft.applicationinsights._telemetry_configuration" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.TelemetryConfiguration</xref> of the 'Active' instance.</p>

    <p>You can specify it for all telemetry tracked via a particular <xref uid="com.microsoft.applicationinsights._telemetry_client" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.TelemetryClient</xref> or for a specific <xref uid="com.microsoft.applicationinsights.telemetry._telemetry" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.Telemetry</xref></p>

    <p></p>
  syntax:
    content: public void setInstrumentationKey(String instrumentationKey)
    parameters:
    - id: instrumentationKey
      type: "26831127"
      description: <p>The instrumentation key </p>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.TelemetryContext()
  id: TelemetryContext()
  parent: com.microsoft.applicationinsights.telemetry._telemetry_context
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  langs:
  - java
  name: TelemetryContext()
  nameWithType: TelemetryContext.TelemetryContext()
  fullName: InternalContext com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext()
  overload: com.microsoft.applicationinsights.telemetry._telemetry_context.TelemetryContext*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 63
  package: com.microsoft.applicationinsights.telemetry
  summary: <p>Default Ctor </p>
  syntax:
    content: public InternalContext TelemetryContext()
    return:
      type: com.microsoft.applicationinsights.extensibility.context._internal_context
references:
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.TelemetryContext*
  name: TelemetryContext
  nameWithType: TelemetryContext.TelemetryContext
  fullName: InternalContext com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getComponent*
  name: getComponent
  nameWithType: TelemetryContext.getComponent
  fullName: ComponentContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getDevice*
  name: getDevice
  nameWithType: TelemetryContext.getDevice
  fullName: DeviceContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getSession*
  name: getSession
  nameWithType: TelemetryContext.getSession
  fullName: SessionContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getUser*
  name: getUser
  nameWithType: TelemetryContext.getUser
  fullName: UserContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getOperation*
  name: getOperation
  nameWithType: TelemetryContext.getOperation
  fullName: OperationContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getLocation*
  name: getLocation
  nameWithType: TelemetryContext.getLocation
  fullName: LocationContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation
  package: com.microsoft.applicationinsights.telemetry
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getInstrumentationKey*
  name: getInstrumentationKey
  nameWithType: TelemetryContext.getInstrumentationKey
  fullName: String com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.setInstrumentationKey*
  name: setInstrumentationKey
  nameWithType: TelemetryContext.setInstrumentationKey
  fullName: void com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey
  package: com.microsoft.applicationinsights.telemetry
- uid: bc7a2f3a
  spec.java:
  - name: ConcurrentMap<String, String>
    fullName: ConcurrentMap<String, String>
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getProperties*
  name: getProperties
  nameWithType: TelemetryContext.getProperties
  fullName: ConcurrentMap<String, String> com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getTags*
  name: getTags
  nameWithType: TelemetryContext.getTags
  fullName: ConcurrentMap<String, String> com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.initialize*
  name: initialize
  nameWithType: TelemetryContext.initialize
  fullName: void com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context.getInternal*
  name: getInternal
  nameWithType: TelemetryContext.getInternal
  fullName: InternalContext com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.extensibility.context._component_context
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context._component_context.yml
  name: ComponentContext
  nameWithType: ComponentContext
  fullName: com.microsoft.applicationinsights.extensibility.context.ComponentContext
  type: Class
  syntax:
    content: public class ComponentContext
- uid: com.microsoft.applicationinsights.extensibility.context._device_context
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context._device_context.yml
  name: DeviceContext
  nameWithType: DeviceContext
  fullName: com.microsoft.applicationinsights.extensibility.context.DeviceContext
  type: Class
  syntax:
    content: public class DeviceContext
- uid: com.microsoft.applicationinsights.extensibility.context._session_context
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context._session_context.yml
  name: SessionContext
  nameWithType: SessionContext
  fullName: com.microsoft.applicationinsights.extensibility.context.SessionContext
  type: Class
  syntax:
    content: public class SessionContext
- uid: com.microsoft.applicationinsights.extensibility.context._user_context
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context._user_context.yml
  name: UserContext
  nameWithType: UserContext
  fullName: com.microsoft.applicationinsights.extensibility.context.UserContext
  type: Class
  syntax:
    content: public class UserContext
- uid: com.microsoft.applicationinsights.extensibility.context._operation_context
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context._operation_context.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.applicationinsights.extensibility.context.OperationContext
  type: Class
  syntax:
    content: public class OperationContext
- uid: com.microsoft.applicationinsights.extensibility.context._location_context
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context._location_context.yml
  name: LocationContext
  nameWithType: LocationContext
  fullName: com.microsoft.applicationinsights.extensibility.context.LocationContext
  type: Class
  syntax:
    content: public class LocationContext
- uid: com.microsoft.applicationinsights.extensibility.context._internal_context
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context._internal_context.yml
  name: InternalContext
  nameWithType: InternalContext
  fullName: com.microsoft.applicationinsights.extensibility.context.InternalContext
  type: Class
  syntax:
    content: public class InternalContext
- uid: com.microsoft.applicationinsights.telemetry._telemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry.yml
  name: Telemetry
  nameWithType: Telemetry
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry
  type: Interface
  summary: <p>The base telemetry type interface for application insights. </p>
  syntax:
    content: public interface Telemetry extends JsonSerializable
- uid: com.microsoft.applicationinsights._telemetry_configuration
  parent: com.microsoft.applicationinsights
  href: com.microsoft.applicationinsights._telemetry_configuration.yml
  name: TelemetryConfiguration
  nameWithType: TelemetryConfiguration
  fullName: com.microsoft.applicationinsights.TelemetryConfiguration
  type: Class
  summary: >-
    <p>Encapsulates the global telemetry configuration typically loaded from the ApplicationInsights.xml file.</p>

    <p>All <xref uid="com.microsoft.applicationinsights.telemetry._telemetry_context" data-throw-if-not-resolved="false">com.microsoft.applicationinsights.telemetry.TelemetryContext</xref> objects are initialized using the 'Active' (returned by the 'getActive' static method) telemetry configuration provided by this class. </p>
  syntax:
    content: public class TelemetryConfiguration
- uid: com.microsoft.applicationinsights._telemetry_client
  parent: com.microsoft.applicationinsights
  href: com.microsoft.applicationinsights._telemetry_client.yml
  name: TelemetryClient
  nameWithType: TelemetryClient
  fullName: com.microsoft.applicationinsights.TelemetryClient
  type: Class
  summary: <p>Create an instance of this class to send telemetry to Azure Application Insights. General overview <ulink url="https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics">https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics</ulink></p>
  syntax:
    content: public class TelemetryClient
- uid: com.microsoft.applicationinsights.telemetry._telemetry_context
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry._telemetry_context.yml
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext
  type: Class
  summary: <p>Represents a context for sending telemetry to the Application Insights service. The context holds data that is sent with every telemetry item. It includes the instrumentation key; the current operation id, for correlating related telemetry items; and user, session and device data. You can also set properties that are added to every telemetry item, and can be used in the portal to filter the telemetry that used this context. </p>
  syntax: *o1
