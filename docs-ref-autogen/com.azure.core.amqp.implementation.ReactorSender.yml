### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ReactorSender"
  id: "ReactorSender"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ReactorSender.ReactorSender(java.lang.String,org.apache.qpid.proton.engine.Sender,com.azure.core.amqp.implementation.handler.SendLinkHandler,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,int)"
  - "com.azure.core.amqp.implementation.ReactorSender.dispose()"
  - "com.azure.core.amqp.implementation.ReactorSender.getEndpointStates()"
  - "com.azure.core.amqp.implementation.ReactorSender.getEntityPath()"
  - "com.azure.core.amqp.implementation.ReactorSender.getErrorContext()"
  - "com.azure.core.amqp.implementation.ReactorSender.getHostname()"
  - "com.azure.core.amqp.implementation.ReactorSender.getLinkName()"
  - "com.azure.core.amqp.implementation.ReactorSender.getLinkSize()"
  - "com.azure.core.amqp.implementation.ReactorSender.isDisposed()"
  - "com.azure.core.amqp.implementation.ReactorSender.send(java.util.List<org.apache.qpid.proton.message.Message>)"
  - "com.azure.core.amqp.implementation.ReactorSender.send(org.apache.qpid.proton.message.Message)"
  langs:
  - "java"
  name: "ReactorSender"
  nameWithType: "ReactorSender"
  fullName: "com.azure.core.amqp.implementation.ReactorSender"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  summary: "Handles scheduling and transmitting events through proton-j to Event Hubs service."
  syntax:
    content: " class ReactorSender implements AmqpSendLink"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.amqp.implementation.AmqpSendLink"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ReactorSender.ReactorSender(java.lang.String,org.apache.qpid.proton.engine.Sender,com.azure.core.amqp.implementation.handler.SendLinkHandler,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,int)"
  id: "ReactorSender(java.lang.String,org.apache.qpid.proton.engine.Sender,com.azure.core.amqp.implementation.handler.SendLinkHandler,com.azure.core.amqp.implementation.ReactorProvider,com.azure.core.amqp.implementation.TokenManager,com.azure.core.amqp.implementation.MessageSerializer,java.time.Duration,com.azure.core.amqp.AmqpRetryPolicy,int)"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "ReactorSender(String entityPath, Sender sender, SendLinkHandler handler, ReactorProvider reactorProvider, TokenManager tokenManager, MessageSerializer messageSerializer, Duration timeout, AmqpRetryPolicy retry, int maxMessageSize)"
  nameWithType: "ReactorSender.ReactorSender(String entityPath, Sender sender, SendLinkHandler handler, ReactorProvider reactorProvider, TokenManager tokenManager, MessageSerializer messageSerializer, Duration timeout, AmqpRetryPolicy retry, int maxMessageSize)"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.ReactorSender(String entityPath, Sender sender, SendLinkHandler handler, ReactorProvider reactorProvider, TokenManager tokenManager, MessageSerializer messageSerializer, Duration timeout, AmqpRetryPolicy retry, int maxMessageSize)"
  overload: "com.azure.core.amqp.implementation.ReactorSender.ReactorSender*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: " ReactorSender(String entityPath, Sender sender, SendLinkHandler handler, ReactorProvider reactorProvider, TokenManager tokenManager, MessageSerializer messageSerializer, Duration timeout, AmqpRetryPolicy retry, int maxMessageSize)"
    parameters:
    - id: "entityPath"
      type: "java.lang.String"
    - id: "sender"
      type: "org.apache.qpid.proton.engine.Sender"
    - id: "handler"
      type: "com.azure.core.amqp.implementation.handler.SendLinkHandler"
    - id: "reactorProvider"
      type: "com.azure.core.amqp.implementation.ReactorProvider"
    - id: "tokenManager"
      type: "com.azure.core.amqp.implementation.TokenManager"
    - id: "messageSerializer"
      type: "com.azure.core.amqp.implementation.MessageSerializer"
    - id: "timeout"
      type: "java.time.Duration"
    - id: "retry"
      type: "com.azure.core.amqp.AmqpRetryPolicy"
    - id: "maxMessageSize"
      type: "int"
- uid: "com.azure.core.amqp.implementation.ReactorSender.dispose()"
  id: "dispose()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "dispose()"
  nameWithType: "ReactorSender.dispose()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.dispose()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.dispose*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void dispose()"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getEndpointStates()"
  id: "getEndpointStates()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "getEndpointStates()"
  nameWithType: "ReactorSender.getEndpointStates()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getEndpointStates()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.getEndpointStates*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Flux<AmqpEndpointState> getEndpointStates()"
    return:
      type: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getEntityPath()"
  id: "getEntityPath()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "getEntityPath()"
  nameWithType: "ReactorSender.getEntityPath()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getEntityPath()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.getEntityPath*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public String getEntityPath()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getErrorContext()"
  id: "getErrorContext()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "getErrorContext()"
  nameWithType: "ReactorSender.getErrorContext()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getErrorContext()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.getErrorContext*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public AmqpErrorContext getErrorContext()"
    return:
      type: "com.azure.core.amqp.exception.AmqpErrorContext"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getHostname()"
  id: "getHostname()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "getHostname()"
  nameWithType: "ReactorSender.getHostname()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getHostname()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.getHostname*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public String getHostname()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getLinkName()"
  id: "getLinkName()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "getLinkName()"
  nameWithType: "ReactorSender.getLinkName()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getLinkName()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.getLinkName*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public String getLinkName()"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getLinkSize()"
  id: "getLinkSize()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "getLinkSize()"
  nameWithType: "ReactorSender.getLinkSize()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getLinkSize()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.getLinkSize*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Mono<Integer> getLinkSize()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Integer>"
- uid: "com.azure.core.amqp.implementation.ReactorSender.isDisposed()"
  id: "isDisposed()"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "isDisposed()"
  nameWithType: "ReactorSender.isDisposed()"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.isDisposed()"
  overload: "com.azure.core.amqp.implementation.ReactorSender.isDisposed*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public boolean isDisposed()"
    return:
      type: "boolean"
- uid: "com.azure.core.amqp.implementation.ReactorSender.send(java.util.List<org.apache.qpid.proton.message.Message>)"
  id: "send(java.util.List<org.apache.qpid.proton.message.Message>)"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "send(List<Message> messageBatch)"
  nameWithType: "ReactorSender.send(List<Message> messageBatch)"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.send(List<Message> messageBatch)"
  overload: "com.azure.core.amqp.implementation.ReactorSender.send*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Mono<Void> send(List<Message> messageBatch)"
    parameters:
    - id: "messageBatch"
      type: "java.util.List<org.apache.qpid.proton.message.Message>"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
- uid: "com.azure.core.amqp.implementation.ReactorSender.send(org.apache.qpid.proton.message.Message)"
  id: "send(org.apache.qpid.proton.message.Message)"
  parent: "com.azure.core.amqp.implementation.ReactorSender"
  langs:
  - "java"
  name: "send(Message message)"
  nameWithType: "ReactorSender.send(Message message)"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.send(Message message)"
  overload: "com.azure.core.amqp.implementation.ReactorSender.send*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Mono<Void> send(Message message)"
    parameters:
    - id: "message"
      type: "org.apache.qpid.proton.message.Message"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "org.apache.qpid.proton.engine.Sender"
  spec.java:
  - uid: "org.apache.qpid.proton.engine.Sender"
    name: "Sender"
    fullName: "org.apache.qpid.proton.engine.Sender"
- uid: "com.azure.core.amqp.implementation.handler.SendLinkHandler"
  name: "SendLinkHandler"
  nameWithType: "SendLinkHandler"
  fullName: "com.azure.core.amqp.implementation.handler.SendLinkHandler"
- uid: "com.azure.core.amqp.implementation.ReactorProvider"
  name: "ReactorProvider"
  nameWithType: "ReactorProvider"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider"
- uid: "com.azure.core.amqp.implementation.TokenManager"
  name: "TokenManager"
  nameWithType: "TokenManager"
  fullName: "com.azure.core.amqp.implementation.TokenManager"
- uid: "com.azure.core.amqp.implementation.MessageSerializer"
  name: "MessageSerializer"
  nameWithType: "MessageSerializer"
  fullName: "com.azure.core.amqp.implementation.MessageSerializer"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.amqp.AmqpRetryPolicy"
  name: "AmqpRetryPolicy"
  nameWithType: "AmqpRetryPolicy"
  fullName: "com.azure.core.amqp.AmqpRetryPolicy"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.amqp.implementation.ReactorSender.ReactorSender*"
  name: "ReactorSender"
  nameWithType: "ReactorSender.ReactorSender"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.ReactorSender"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Flux<com.azure.core.amqp.AmqpEndpointState>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.amqp.AmqpEndpointState"
    name: "AmqpEndpointState"
    fullName: "com.azure.core.amqp.AmqpEndpointState"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getEndpointStates*"
  name: "getEndpointStates"
  nameWithType: "ReactorSender.getEndpointStates"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getEndpointStates"
  package: "com.azure.core.amqp.implementation"
- uid: "org.apache.qpid.proton.message.Message"
  spec.java:
  - uid: "org.apache.qpid.proton.message.Message"
    name: "Message"
    fullName: "org.apache.qpid.proton.message.Message"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorSender.send*"
  name: "send"
  nameWithType: "ReactorSender.send"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.send"
  package: "com.azure.core.amqp.implementation"
- uid: "java.util.List<org.apache.qpid.proton.message.Message>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "org.apache.qpid.proton.message.Message"
    name: "Message"
    fullName: "org.apache.qpid.proton.message.Message"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.exception.AmqpErrorContext"
  name: "AmqpErrorContext"
  nameWithType: "AmqpErrorContext"
  fullName: "com.azure.core.amqp.exception.AmqpErrorContext"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getErrorContext*"
  name: "getErrorContext"
  nameWithType: "ReactorSender.getErrorContext"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getErrorContext"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getLinkName*"
  name: "getLinkName"
  nameWithType: "ReactorSender.getLinkName"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getLinkName"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getEntityPath*"
  name: "getEntityPath"
  nameWithType: "ReactorSender.getEntityPath"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getEntityPath"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getHostname*"
  name: "getHostname"
  nameWithType: "ReactorSender.getHostname"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getHostname"
  package: "com.azure.core.amqp.implementation"
- uid: "reactor.core.publisher.Mono<java.lang.Integer>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.amqp.implementation.ReactorSender.getLinkSize*"
  name: "getLinkSize"
  nameWithType: "ReactorSender.getLinkSize"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.getLinkSize"
  package: "com.azure.core.amqp.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.amqp.implementation.ReactorSender.isDisposed*"
  name: "isDisposed"
  nameWithType: "ReactorSender.isDisposed"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.isDisposed"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorSender.dispose*"
  name: "dispose"
  nameWithType: "ReactorSender.dispose"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.dispose"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.AmqpSendLink"
  name: "AmqpSendLink"
  nameWithType: "AmqpSendLink"
  fullName: "com.azure.core.amqp.implementation.AmqpSendLink"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.amqp.implementation.ReactorSender.WeightedDeliveryTag"
  name: "ReactorSender.WeightedDeliveryTag"
  nameWithType: "ReactorSender.WeightedDeliveryTag"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.WeightedDeliveryTag"
- uid: "com.azure.core.amqp.implementation.ReactorSender.DeliveryTagComparator"
  name: "ReactorSender.DeliveryTagComparator"
  nameWithType: "ReactorSender.DeliveryTagComparator"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.DeliveryTagComparator"
- uid: "com.azure.core.amqp.implementation.ReactorSender.SendTimeout"
  name: "ReactorSender.SendTimeout"
  nameWithType: "ReactorSender.SendTimeout"
  fullName: "com.azure.core.amqp.implementation.ReactorSender.SendTimeout"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.core.amqp.AmqpEndpointState"
  name: "AmqpEndpointState"
  nameWithType: "AmqpEndpointState"
  fullName: "com.azure.core.amqp.AmqpEndpointState"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.Integer"
  name: "Integer"
  nameWithType: "Integer"
  fullName: "java.lang.Integer"
