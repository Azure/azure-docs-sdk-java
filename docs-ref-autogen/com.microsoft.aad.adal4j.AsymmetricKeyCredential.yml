### YamlMime:ManagedReference
items:
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  id: AsymmetricKeyCredential
  parent: com.microsoft.aad.adal4j
  children:
  - com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String,final InputStream,final String)
  - com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String,final PrivateKey,final X509Certificate)
  - com.microsoft.aad.adal4j.AsymmetricKeyCredential.getClientId()
  - com.microsoft.aad.adal4j.AsymmetricKeyCredential.getKey()
  - com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificate()
  - com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificateHash()
  - com.microsoft.aad.adal4j.AsymmetricKeyCredential.MIN_KEYSIZE_IN_BITS
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: AsymmetricKeyCredential
  nameWithType: AsymmetricKeyCredential
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-java
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 47
  package: com.microsoft.aad.adal4j
  summary: "<p>Credential type containing X509 public certificate and RSA private key. </p>"
  syntax: &o1
    content: public class AsymmetricKeyCredential
  inheritance:
  - java.lang.Object
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String,final InputStream,final String)
  id: create(final String,final InputStream,final String)
  parent: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: create(final String clientId, final InputStream pkcs12Certificate, final String password)
  nameWithType: AsymmetricKeyCredential.create(final String clientId, final InputStream pkcs12Certificate, final String password)
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String clientId, final InputStream pkcs12Certificate, final String password)
  overload: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 164
  package: com.microsoft.aad.adal4j
  summary: "<p>Static method to create KeyCredential instance.</p>\r\n<p></p>"
  syntax:
    content: public static AsymmetricKeyCredential create(final String clientId, final InputStream pkcs12Certificate, final String password)
    parameters:
    - id: clientId
      type: 3d93591e
      description: <p>Identifier of the client requesting the token. </p>
    - id: pkcs12Certificate
      type: ac354e53
      description: <p>PKCS12 certificate stream containing public and private key. Caller is responsible for handling the input stream. </p>
    - id: password
      type: 3d93591e
      description: <p>certificate password </p>
    return:
      type: com.microsoft.aad.adal4j.AsymmetricKeyCredential
      description: <p>KeyCredential instance </p>
  exceptions:
  - type: 5f3a346c
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="KeyStoreException"></xref>

      </p>
  - type: b37d91b9
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NoSuchProviderException"></xref>

      </p>
  - type: 456eb9d1
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="NoSuchAlgorithmException"></xref>

      </p>
  - type: "20029899"
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CertificateException"></xref>

      </p>
  - type: cbf33bbe
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IOException"></xref>

      </p>
  - type: 1fdbaa59
    description: >-
      <p>

        <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnrecoverableKeyException"></xref>

      </p>
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String,final PrivateKey,final X509Certificate)
  id: create(final String,final PrivateKey,final X509Certificate)
  parent: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
  nameWithType: AsymmetricKeyCredential.create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
  overload: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 190
  package: com.microsoft.aad.adal4j
  summary: "<p>Static method to create KeyCredential instance.</p>\r\n<p></p>"
  syntax:
    content: public static AsymmetricKeyCredential create(final String clientId, final PrivateKey key, final X509Certificate publicCertificate)
    parameters:
    - id: clientId
      type: 3d93591e
      description: <p>Identifier of the client requesting the token. </p>
    - id: key
      type: 13c055f1
      description: <p>RSA private key to sign the assertion. </p>
    - id: publicCertificate
      type: c5993880
      description: <p>Public certificate used for thumb print. </p>
    return:
      type: com.microsoft.aad.adal4j.AsymmetricKeyCredential
      description: <p>KeyCredential instance </p>
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getClientId()
  id: getClientId()
  parent: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: getClientId()
  nameWithType: AsymmetricKeyCredential.getClientId()
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getClientId()
  overload: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getClientId*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 110
  package: com.microsoft.aad.adal4j
  summary: "<p>Gets the identifier of the client requesting the token.</p>\r\n<p></p>"
  syntax:
    content: public String getClientId()
    return:
      type: "26831127"
      description: <p>string value </p>
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getKey()
  id: getKey()
  parent: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: getKey()
  nameWithType: AsymmetricKeyCredential.getKey()
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getKey()
  overload: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getKey*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 142
  package: com.microsoft.aad.adal4j
  summary: "<p>Returns private key of the credential.</p>\r\n<p></p>"
  syntax:
    content: public PrivateKey getKey()
    return:
      type: e2e697e7
      description: <p>private key. </p>
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificate()
  id: getPublicCertificate()
  parent: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: getPublicCertificate()
  nameWithType: AsymmetricKeyCredential.getPublicCertificate()
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificate()
  overload: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificate*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 133
  package: com.microsoft.aad.adal4j
  summary: "<p>Base64 encoded public certificate.</p>\r\n<p></p>"
  syntax:
    content: public String getPublicCertificate()
    return:
      type: "26831127"
      description: <p>base64 encoded string </p>
  exceptions:
  - type: 8eec674b
    description: <p>if an encoding error occurs </p>
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificateHash()
  id: getPublicCertificateHash()
  parent: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: getPublicCertificateHash()
  nameWithType: AsymmetricKeyCredential.getPublicCertificateHash()
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificateHash()
  overload: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificateHash*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 121
  package: com.microsoft.aad.adal4j
  summary: "<p>Base64 encoded hash of the the public certificate.</p>\r\n<p></p>"
  syntax:
    content: public String getPublicCertificateHash()
    return:
      type: "26831127"
      description: <p>base64 encoded string </p>
  exceptions:
  - type: 8eec674b
    description: <p>if an encoding error occurs </p>
  - type: 456eb9d1
    description: <p>if requested algorithm is not available in the environment </p>
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.MIN_KEYSIZE_IN_BITS
  id: MIN_KEYSIZE_IN_BITS
  parent: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  langs:
  - java
  name: MIN_KEYSIZE_IN_BITS
  nameWithType: AsymmetricKeyCredential.MIN_KEYSIZE_IN_BITS
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.MIN_KEYSIZE_IN_BITS
  type: Field
  source:
    remote: *o0
    path: src/main/java/com/microsoft/aad/adal4j/AsymmetricKeyCredential.java
    startLine: 48
  package: com.microsoft.aad.adal4j
  syntax:
    content: public static final int MIN_KEYSIZE_IN_BITS= 2048
    return:
      type: cd225469
references:
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getClientId*
  name: getClientId
  nameWithType: AsymmetricKeyCredential.getClientId
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getClientId
  package: com.microsoft.aad.adal4j
- uid: 8eec674b
  spec.java:
  - name: CertificateEncodingException
    fullName: CertificateEncodingException
- uid: 456eb9d1
  spec.java:
  - name: NoSuchAlgorithmException
    fullName: NoSuchAlgorithmException
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificateHash*
  name: getPublicCertificateHash
  nameWithType: AsymmetricKeyCredential.getPublicCertificateHash
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificateHash
  package: com.microsoft.aad.adal4j
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificate*
  name: getPublicCertificate
  nameWithType: AsymmetricKeyCredential.getPublicCertificate
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getPublicCertificate
  package: com.microsoft.aad.adal4j
- uid: e2e697e7
  spec.java:
  - name: PrivateKey
    fullName: PrivateKey
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getKey*
  name: getKey
  nameWithType: AsymmetricKeyCredential.getKey
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.getKey
  package: com.microsoft.aad.adal4j
- uid: 5f3a346c
  spec.java:
  - name: KeyStoreException
    fullName: KeyStoreException
- uid: b37d91b9
  spec.java:
  - name: NoSuchProviderException
    fullName: NoSuchProviderException
- uid: "20029899"
  spec.java:
  - name: CertificateException
    fullName: CertificateException
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: 1fdbaa59
  spec.java:
  - name: UnrecoverableKeyException
    fullName: UnrecoverableKeyException
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: ac354e53
  spec.java:
  - name: final InputStream
    fullName: final InputStream
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create*
  name: create
  nameWithType: AsymmetricKeyCredential.create
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential.create
  package: com.microsoft.aad.adal4j
- uid: 13c055f1
  spec.java:
  - name: final PrivateKey
    fullName: final PrivateKey
- uid: c5993880
  spec.java:
  - name: final X509Certificate
    fullName: final X509Certificate
- uid: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  parent: com.microsoft.aad.adal4j
  href: com.microsoft.aad.adal4j.AsymmetricKeyCredential.yml
  name: AsymmetricKeyCredential
  nameWithType: AsymmetricKeyCredential
  fullName: com.microsoft.aad.adal4j.AsymmetricKeyCredential
  type: Class
  summary: "<p>Credential type containing X509 public certificate and RSA private key. </p>"
  syntax: *o1
