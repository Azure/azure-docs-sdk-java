### YamlMime:JavaType
uid: "com.azure.resourcemanager.appplatform.models.SpringServices"
fullName: "com.azure.resourcemanager.appplatform.models.SpringServices"
name: "SpringServices"
nameWithType: "SpringServices"
summary: "Entry point for Spring Service management API."
syntax: "public interface SpringServices extends HasManager<AppPlatformManager>, SupportsCreating<SpringService.DefinitionStages.Blank>, SupportsGettingById<SpringService>, SupportsGettingByResourceGroup<SpringService>, SupportsListing<SpringService>, SupportsListingByResourceGroup<SpringService>, SupportsDeletingById, SupportsDeletingByResourceGroup"
methods:
- uid: "com.azure.resourcemanager.appplatform.models.SpringServices.checkNameAvailability(java.lang.String,com.azure.core.management.Region)"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringServices.checkNameAvailability(String name, Region region)"
  name: "checkNameAvailability(String name, Region region)"
  nameWithType: "SpringServices.checkNameAvailability(String name, Region region)"
  summary: "Checks the name of the service is available in specific region or not."
  modifiers:
  - "abstract"
  parameters:
  - description: "the service name"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the region of the service"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NameAvailability checkNameAvailability(String name, Region region)"
  desc: "Checks the name of the service is available in specific region or not."
  returns:
    description: "the service name is available or not."
    type: "<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailability?alt=com.azure.resourcemanager.appplatform.models.NameAvailability&text=NameAvailability\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.appplatform.models.SpringServices.checkNameAvailabilityAsync(java.lang.String,com.azure.core.management.Region)"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringServices.checkNameAvailabilityAsync(String name, Region region)"
  name: "checkNameAvailabilityAsync(String name, Region region)"
  nameWithType: "SpringServices.checkNameAvailabilityAsync(String name, Region region)"
  summary: "Checks the name of the service is available in specific region or not."
  modifiers:
  - "abstract"
  parameters:
  - description: "the service name"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the region of the service"
    name: "region"
    type: "<xref href=\"com.azure.core.management.Region?alt=com.azure.core.management.Region&text=Region\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<NameAvailability> checkNameAvailabilityAsync(String name, Region region)"
  desc: "Checks the name of the service is available in specific region or not."
  returns:
    description: "the service name is available or not."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.NameAvailability?alt=com.azure.resourcemanager.appplatform.models.NameAvailability&text=NameAvailability\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringServices.listSkus()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringServices.listSkus()"
  name: "listSkus()"
  nameWithType: "SpringServices.listSkus()"
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<ResourceSku> listSkus()"
  returns:
    description: "all available sku."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.ResourceSku?alt=com.azure.resourcemanager.appplatform.models.ResourceSku&text=ResourceSku\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.appplatform.models.SpringServices.listSkusAsync()"
  fullName: "com.azure.resourcemanager.appplatform.models.SpringServices.listSkusAsync()"
  name: "listSkusAsync()"
  nameWithType: "SpringServices.listSkusAsync()"
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<ResourceSku> listSkusAsync()"
  returns:
    description: "all available sku."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.ResourceSku?alt=com.azure.resourcemanager.appplatform.models.ResourceSku&text=ResourceSku\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point for Spring Service management API."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup&text=SupportsDeletingByResourceGroup\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService?alt=com.azure.resourcemanager.appplatform.models.SpringService&text=SpringService\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup&text=SupportsGettingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService?alt=com.azure.resourcemanager.appplatform.models.SpringService&text=SpringService\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsListingByResourceGroup&text=SupportsListingByResourceGroup\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService?alt=com.azure.resourcemanager.appplatform.models.SpringService&text=SpringService\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.AppPlatformManager?alt=com.azure.resourcemanager.appplatform.AppPlatformManager&text=AppPlatformManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService.DefinitionStages.Blank?alt=com.azure.resourcemanager.appplatform.models.SpringService.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById&text=SupportsDeletingById\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appplatform.models.SpringService?alt=com.azure.resourcemanager.appplatform.models.SpringService&text=SpringService\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.appplatform.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appplatform:2.19.0
