### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync*"
fullName: "com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync"
name: "terminateWithServiceResponseAsync"
nameWithType: "Tasks.terminateWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String jobId, String taskId)"
  name: "terminateWithServiceResponseAsync(String jobId, String taskId)"
  nameWithType: "Tasks.terminateWithServiceResponseAsync(String jobId, String taskId)"
  summary: "Terminates the specified Task. When the Task has been terminated, it moves to the completed state. For multi-instance Tasks, the terminate Task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background."
  parameters:
  - description: "The ID of the Job containing the Task."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task to terminate."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,TaskTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String taskId)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders&text=TaskTerminateHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.TaskTerminateOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Tasks.terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)"
  name: "terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)"
  nameWithType: "Tasks.terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)"
  summary: "Terminates the specified Task. When the Task has been terminated, it moves to the completed state. For multi-instance Tasks, the terminate Task operation applies synchronously to the primary task; subtasks are then terminated asynchronously in the background."
  parameters:
  - description: "The ID of the Job containing the Task."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task to terminate."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "taskTerminateOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.TaskTerminateOptions&text=TaskTerminateOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,TaskTerminateHeaders>> terminateWithServiceResponseAsync(String jobId, String taskId, TaskTerminateOptions taskTerminateOptions)"
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.TaskTerminateHeaders&text=TaskTerminateHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
