### YamlMime:JavaType
uid: "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork"
fullName: "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork"
name: "SynchronousReceiveWork"
nameWithType: "SynchronousReceiveWork"
summary: "Represents a synchronous receive request."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SynchronousReceiveWork"
constructors:
- "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork.SynchronousReceiveWork(long,int,java.time.Duration,reactor.core.publisher.FluxSink<com.azure.messaging.eventhubs.models.PartitionEvent>)"
methods:
- "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork.complete()"
- "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork.error(java.lang.Throwable)"
- "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork.getId()"
- "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork.getTimeout()"
- "com.azure.messaging.eventhubs.implementation.SynchronousReceiveWork.next(com.azure.messaging.eventhubs.models.PartitionEvent)"
type: "class"
metadata: {}
package: "com.azure.messaging.eventhubs.implementation"
artifact: com.azure:azure-messaging-eventhubs:5.7.0
