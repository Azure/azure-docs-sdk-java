### YamlMime:JavaMember
nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom
type: method
members:
- fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  name: importFrom(StorageAccount storageAccount, String containerName, String fileName)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  parameters:
  - description: <p>an existing storage account to be used </p>
    name: storageAccount
    type: <xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>
  - description: <p>the container name within the storage account to use </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the exported database file name </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The next stage of the definition. </p>
    type: <xref href="SqlDatabase.DefinitionStages.WithAuthentication%3CParentT%3E?alt=SqlDatabase.DefinitionStages.WithAuthentication<ParentT>&text=SqlDatabase.DefinitionStages.WithAuthentication%3CParentT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new database from a BACPAC file.</p>

    <p></p>
  syntax: public SqlDatabase.DefinitionStages.WithAuthentication<ParentT> importFrom(StorageAccount storageAccount, String containerName, String fileName)
  uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.importFrom(StorageAccount,String,String)
- fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  name: importFrom(String storageUri)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  parameters:
  - description: <p>the source URI for the database to be imported </p>
    name: storageUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The next stage of the definition. </p>
    type: <xref href="SqlDatabase.DefinitionStages.WithStorageKey%3CParentT%3E?alt=SqlDatabase.DefinitionStages.WithStorageKey<ParentT>&text=SqlDatabase.DefinitionStages.WithStorageKey%3CParentT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates a new database from a BACPAC file.</p>

    <p></p>
  syntax: public SqlDatabase.DefinitionStages.WithStorageKey<ParentT> importFrom(String storageUri)
  uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.importFrom(String)
uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.importFrom*
fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
name: importFrom(StorageAccount storageAccount, String containerName, String fileName)
package: com.microsoft.azure.management.sql
metadata: {}
