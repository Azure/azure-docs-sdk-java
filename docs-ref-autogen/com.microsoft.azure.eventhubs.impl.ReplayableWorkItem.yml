### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  id: ReplayableWorkItem
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl
  children:
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.ReplayableWorkItem(byte[],int,int,java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.eventhubs.impl.TimeoutTracker)
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.ReplayableWorkItem(byte[],int,int,java.util.concurrent.CompletableFuture<T>,java.time.Duration)
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.clearMessage()
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getEncodedMessageSize()
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getLastKnownException()
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessage()
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessageFormat()
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getTimeoutTask()
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.isWaitingForAck()
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setLastKnownException(java.lang.Exception)
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setTimeoutTask(java.util.concurrent.CompletableFuture<?>)
  - com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setWaitingForAck()
  langs:
  - java
  name: ReplayableWorkItem<T>
  nameWithType: ReplayableWorkItem<T>
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>
  type: Class
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public class ReplayableWorkItem<T> extends WorkItem<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.eventhubs.impl.WorkItem
  inheritedMembers:
  - com.microsoft.azure.eventhubs.impl.WorkItem.getTimeoutTracker()
  - com.microsoft.azure.eventhubs.impl.WorkItem.getWork()
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.ReplayableWorkItem(byte[],int,int,java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.eventhubs.impl.TimeoutTracker)
  id: ReplayableWorkItem(byte[],int,int,java.util.concurrent.CompletableFuture<T>,com.microsoft.azure.eventhubs.impl.TimeoutTracker)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, TimeoutTracker timeout)
  nameWithType: ReplayableWorkItem<T>.ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, TimeoutTracker timeout)
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, TimeoutTracker timeout)
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.ReplayableWorkItem*
  type: Constructor
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, TimeoutTracker timeout)
    parameters:
    - id: amqpMessage
      type: byte[]
    - id: encodedMessageSize
      type: int
    - id: messageFormat
      type: int
    - id: completableFuture
      type: java.util.concurrent.CompletableFuture<T>
    - id: timeout
      type: com.microsoft.azure.eventhubs.impl.TimeoutTracker
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.ReplayableWorkItem(byte[],int,int,java.util.concurrent.CompletableFuture<T>,java.time.Duration)
  id: ReplayableWorkItem(byte[],int,int,java.util.concurrent.CompletableFuture<T>,java.time.Duration)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, Duration timeout)
  nameWithType: ReplayableWorkItem<T>.ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, Duration timeout)
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, Duration timeout)
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.ReplayableWorkItem*
  type: Constructor
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public ReplayableWorkItem(byte[] amqpMessage, int encodedMessageSize, int messageFormat, CompletableFuture<T> completableFuture, Duration timeout)
    parameters:
    - id: amqpMessage
      type: byte[]
    - id: encodedMessageSize
      type: int
    - id: messageFormat
      type: int
    - id: completableFuture
      type: java.util.concurrent.CompletableFuture<T>
    - id: timeout
      type: java.time.Duration
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.clearMessage()
  id: clearMessage()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: clearMessage()
  nameWithType: ReplayableWorkItem<T>.clearMessage()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.clearMessage()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.clearMessage*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void clearMessage()
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getEncodedMessageSize()
  id: getEncodedMessageSize()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: getEncodedMessageSize()
  nameWithType: ReplayableWorkItem<T>.getEncodedMessageSize()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getEncodedMessageSize()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getEncodedMessageSize*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public int getEncodedMessageSize()
    return:
      type: int
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getLastKnownException()
  id: getLastKnownException()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: getLastKnownException()
  nameWithType: ReplayableWorkItem<T>.getLastKnownException()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getLastKnownException()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getLastKnownException*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public Exception getLastKnownException()
    return:
      type: java.lang.Exception
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessage()
  id: getMessage()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: getMessage()
  nameWithType: ReplayableWorkItem<T>.getMessage()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getMessage()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessage*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public byte[] getMessage()
    return:
      type: byte[]
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessageFormat()
  id: getMessageFormat()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: getMessageFormat()
  nameWithType: ReplayableWorkItem<T>.getMessageFormat()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getMessageFormat()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessageFormat*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public int getMessageFormat()
    return:
      type: int
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getTimeoutTask()
  id: getTimeoutTask()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: getTimeoutTask()
  nameWithType: ReplayableWorkItem<T>.getTimeoutTask()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getTimeoutTask()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getTimeoutTask*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public CompletableFuture<?> getTimeoutTask()
    return:
      type: java.util.concurrent.CompletableFuture<?>
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.isWaitingForAck()
  id: isWaitingForAck()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: isWaitingForAck()
  nameWithType: ReplayableWorkItem<T>.isWaitingForAck()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.isWaitingForAck()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.isWaitingForAck*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public boolean isWaitingForAck()
    return:
      type: boolean
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setLastKnownException(java.lang.Exception)
  id: setLastKnownException(java.lang.Exception)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: setLastKnownException(Exception exception)
  nameWithType: ReplayableWorkItem<T>.setLastKnownException(Exception exception)
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.setLastKnownException(Exception exception)
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setLastKnownException*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void setLastKnownException(Exception exception)
    parameters:
    - id: exception
      type: java.lang.Exception
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setTimeoutTask(java.util.concurrent.CompletableFuture<?>)
  id: setTimeoutTask(java.util.concurrent.CompletableFuture<?>)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: setTimeoutTask(CompletableFuture<?> timeoutTask)
  nameWithType: ReplayableWorkItem<T>.setTimeoutTask(CompletableFuture<?> timeoutTask)
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.setTimeoutTask(CompletableFuture<?> timeoutTask)
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setTimeoutTask*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void setTimeoutTask(CompletableFuture<?> timeoutTask)
    parameters:
    - id: timeoutTask
      type: java.util.concurrent.CompletableFuture<?>
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setWaitingForAck()
  id: setWaitingForAck()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem
  langs:
  - java
  name: setWaitingForAck()
  nameWithType: ReplayableWorkItem<T>.setWaitingForAck()
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.setWaitingForAck()
  overload: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setWaitingForAck*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public void setWaitingForAck()
references:
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.util.concurrent.CompletableFuture<T>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.ReplayableWorkItem*
  name: ReplayableWorkItem
  nameWithType: ReplayableWorkItem<T>.ReplayableWorkItem
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.ReplayableWorkItem
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  name: TimeoutTracker
  nameWithType: TimeoutTracker
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessage*
  name: getMessage
  nameWithType: ReplayableWorkItem<T>.getMessage
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getMessage
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.clearMessage*
  name: clearMessage
  nameWithType: ReplayableWorkItem<T>.clearMessage
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.clearMessage
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getEncodedMessageSize*
  name: getEncodedMessageSize
  nameWithType: ReplayableWorkItem<T>.getEncodedMessageSize
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getEncodedMessageSize
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getMessageFormat*
  name: getMessageFormat
  nameWithType: ReplayableWorkItem<T>.getMessageFormat
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getMessageFormat
  package: com.microsoft.azure.eventhubs.impl
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getLastKnownException*
  name: getLastKnownException
  nameWithType: ReplayableWorkItem<T>.getLastKnownException
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getLastKnownException
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setLastKnownException*
  name: setLastKnownException
  nameWithType: ReplayableWorkItem<T>.setLastKnownException
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.setLastKnownException
  package: com.microsoft.azure.eventhubs.impl
- uid: java.util.concurrent.CompletableFuture<?>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: '?'
    name: '?'
    fullName: '?'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.getTimeoutTask*
  name: getTimeoutTask
  nameWithType: ReplayableWorkItem<T>.getTimeoutTask
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.getTimeoutTask
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setTimeoutTask*
  name: setTimeoutTask
  nameWithType: ReplayableWorkItem<T>.setTimeoutTask
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.setTimeoutTask
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.setWaitingForAck*
  name: setWaitingForAck
  nameWithType: ReplayableWorkItem<T>.setWaitingForAck
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.setWaitingForAck
  package: com.microsoft.azure.eventhubs.impl
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem.isWaitingForAck*
  name: isWaitingForAck
  nameWithType: ReplayableWorkItem<T>.isWaitingForAck
  fullName: com.microsoft.azure.eventhubs.impl.ReplayableWorkItem<T>.isWaitingForAck
  package: com.microsoft.azure.eventhubs.impl
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: com.microsoft.azure.eventhubs.impl.WorkItem<T>
  name: WorkItem<T>
  nameWithType: WorkItem<T>
  fullName: com.microsoft.azure.eventhubs.impl.WorkItem<T>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.eventhubs.impl.WorkItem.getTimeoutTracker()
  name: WorkItem.getTimeoutTracker()
  nameWithType: WorkItem.getTimeoutTracker()
  fullName: com.microsoft.azure.eventhubs.impl.WorkItem.getTimeoutTracker()
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.eventhubs.impl.WorkItem.getWork()
  name: WorkItem.getWork()
  nameWithType: WorkItem.getWork()
  fullName: com.microsoft.azure.eventhubs.impl.WorkItem.getWork()
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
- uid: '?'
  name: '?'
  nameWithType: '?'
  fullName: '?'
- uid: com.microsoft.azure.eventhubs.impl.WorkItem
  name: WorkItem
  nameWithType: WorkItem
  fullName: com.microsoft.azure.eventhubs.impl.WorkItem
