### YamlMime:JavaMember
uid: "com.azure.resourcemanager.sql.fluent.GeoBackupPoliciesClient.getWithResponseAsync*"
fullName: "com.azure.resourcemanager.sql.fluent.GeoBackupPoliciesClient.getWithResponseAsync"
name: "getWithResponseAsync"
nameWithType: "GeoBackupPoliciesClient.getWithResponseAsync"
members:
- uid: "com.azure.resourcemanager.sql.fluent.GeoBackupPoliciesClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.sql.models.GeoBackupPolicyName)"
  fullName: "com.azure.resourcemanager.sql.fluent.GeoBackupPoliciesClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, GeoBackupPolicyName geoBackupPolicyName)"
  name: "getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, GeoBackupPolicyName geoBackupPolicyName)"
  nameWithType: "GeoBackupPoliciesClient.getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, GeoBackupPolicyName geoBackupPolicyName)"
  summary: "Gets a geo backup policy."
  parameters:
  - description: "The name of the resource group that contains the resource. You can obtain this value\n     from the Azure Resource Manager API or the portal."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server."
    name: "serverName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the database."
    name: "databaseName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the geo backup policy."
    name: "geoBackupPolicyName"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.GeoBackupPolicyName?alt=com.azure.resourcemanager.sql.models.GeoBackupPolicyName&text=GeoBackupPolicyName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<GeoBackupPolicyInner>> getWithResponseAsync(String resourceGroupName, String serverName, String databaseName, GeoBackupPolicyName geoBackupPolicyName)"
  desc: "Gets a geo backup policy."
  returns:
    description: "a geo backup policy along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.sql.fluent.models.GeoBackupPolicyInner?alt=com.azure.resourcemanager.sql.fluent.models.GeoBackupPolicyInner&text=GeoBackupPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.sql.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.17.0
