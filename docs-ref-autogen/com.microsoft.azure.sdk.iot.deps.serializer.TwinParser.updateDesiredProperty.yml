### YamlMime:JavaMember
nameWithType: TwinParser.updateDesiredProperty
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(Map<String, Object> propertyMap)
  name: updateDesiredProperty(Map<String, Object> propertyMap)
  nameWithType: TwinParser.updateDesiredProperty(Map<String, Object> propertyMap)
  parameters:
  - description: <p>- Map of `desired` property to change the collection. </p>
    name: propertyMap
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the properties in the map do not fits the requirements. </p>
  returns:
    description: <p>Json with added or changed properties </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Update the `desired` properties information in the collection, and return a string with a json that contains a sub-collection of added properties, or properties with new value.</p>

    <p></p>
  syntax: public String updateDesiredProperty(Map<String, Object> propertyMap)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(Map<String, Object>)
- fullName: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(String json)
  name: updateDesiredProperty(String json)
  nameWithType: TwinParser.updateDesiredProperty(String json)
  parameters:
  - description: <p>- Json with `desired` property to change the collection. </p>
    name: json
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the Json is not well formed. </p>
  summary: >-
    <p>Update the `desired` properties information in the collection, using the information parsed from the provided json. It will fire a callback if any property was added, excluded, or had its value updated.</p>

    <p></p>
  syntax: public void updateDesiredProperty(String json)
  uid: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty(String)
uid: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty*
fullName: com.microsoft.azure.sdk.iot.deps.serializer.TwinParser.updateDesiredProperty
name: updateDesiredProperty(Map<String, Object> propertyMap)
package: com.microsoft.azure.sdk.iot.deps.serializer
metadata: {}
