### YamlMime:JavaMember
uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo*"
fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo"
name: "getSecondaryX509CertificateInfo"
nameWithType: "X509Attestation.getSecondaryX509CertificateInfo"
members:
- uid: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()"
  fullName: "com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()"
  name: "getSecondaryX509CertificateInfo()"
  nameWithType: "X509Attestation.getSecondaryX509CertificateInfo()"
  summary: "Getter for the secondary X509 certificate info.\n\nThis method is a getter for the information returned from the provisioning service for the provided secondary certificate."
  syntax: "public X509CertificateInfo getSecondaryX509CertificateInfo()"
  returns:
    description: "the <xref uid=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"X509CertificateInfo\"></xref> with the returned certificate information. it can be <code>null</code>."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.X509CertificateInfo&text=X509CertificateInfo\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.sdk.iot.provisioning.service.configs"
artifact: com.microsoft.azure.sdk.iot.provisioning:provisioning-service-client:1.7.0
