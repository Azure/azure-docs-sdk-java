### YamlMime:ManagedReference
items:
- uid: com.azure.storage.common.Utility
  id: Utility
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common
  children:
  - com.azure.storage.common.Utility.STORAGE_TRACING_NAMESPACE_VALUE
  - com.azure.storage.common.Utility.Utility()
  - com.azure.storage.common.Utility.convertStreamToByteBuffer(java.io.InputStream,long,int)
  - com.azure.storage.common.Utility.encodeUrlPath(java.lang.String)
  - com.azure.storage.common.Utility.parseDate(java.lang.String)
  - com.azure.storage.common.Utility.urlDecode(java.lang.String)
  - com.azure.storage.common.Utility.urlEncode(java.lang.String)
  langs:
  - java
  name: Utility
  nameWithType: Utility
  fullName: com.azure.storage.common.Utility
  type: Class
  package: com.azure.storage.common
  summary: Utility methods for storage client libraries.
  syntax:
    content: public final class Utility
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.common.Utility.STORAGE_TRACING_NAMESPACE_VALUE
  id: STORAGE_TRACING_NAMESPACE_VALUE
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.Utility
  langs:
  - java
  name: STORAGE_TRACING_NAMESPACE_VALUE
  nameWithType: Utility.STORAGE_TRACING_NAMESPACE_VALUE
  fullName: com.azure.storage.common.Utility.STORAGE_TRACING_NAMESPACE_VALUE
  type: Field
  package: com.azure.storage.common
  syntax:
    content: public static final String STORAGE_TRACING_NAMESPACE_VALUE
    return:
      type: java.lang.String
- uid: com.azure.storage.common.Utility.Utility()
  id: Utility()
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.Utility
  langs:
  - java
  name: Utility()
  nameWithType: Utility.Utility()
  fullName: com.azure.storage.common.Utility.Utility()
  overload: com.azure.storage.common.Utility.Utility*
  type: Constructor
  package: com.azure.storage.common
  syntax:
    content: public Utility()
- uid: com.azure.storage.common.Utility.convertStreamToByteBuffer(java.io.InputStream,long,int)
  id: convertStreamToByteBuffer(java.io.InputStream,long,int)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.Utility
  langs:
  - java
  name: convertStreamToByteBuffer(InputStream data, long length, int blockSize)
  nameWithType: Utility.convertStreamToByteBuffer(InputStream data, long length, int blockSize)
  fullName: com.azure.storage.common.Utility.convertStreamToByteBuffer(InputStream data, long length, int blockSize)
  overload: com.azure.storage.common.Utility.convertStreamToByteBuffer*
  type: Method
  package: com.azure.storage.common
  summary: A utility method for converting the input stream to Flux of ByteBuffer. Will check the equality of entity length and the input length.
  syntax:
    content: public static Flux<ByteBuffer> convertStreamToByteBuffer(InputStream data, long length, int blockSize)
    parameters:
    - id: data
      type: java.io.InputStream
      description: The input data which needs to convert to ByteBuffer.
    - id: length
      type: long
      description: The expected input data length.
    - id: blockSize
      type: int
      description: The size of each ByteBuffer.
    return:
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: <xref uid="java.nio.ByteBuffer" data-throw-if-not-resolved="false">ByteBuffer</xref> which contains the input data.
- uid: com.azure.storage.common.Utility.encodeUrlPath(java.lang.String)
  id: encodeUrlPath(java.lang.String)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.Utility
  langs:
  - java
  name: encodeUrlPath(String url)
  nameWithType: Utility.encodeUrlPath(String url)
  fullName: com.azure.storage.common.Utility.encodeUrlPath(String url)
  overload: com.azure.storage.common.Utility.encodeUrlPath*
  type: Method
  package: com.azure.storage.common
  summary: Performs a safe encoding of a url string, only encoding the path.
  syntax:
    content: public static String encodeUrlPath(String url)
    parameters:
    - id: url
      type: java.lang.String
      description: The url to encode.
    return:
      type: java.lang.String
      description: The encoded url.
- uid: com.azure.storage.common.Utility.parseDate(java.lang.String)
  id: parseDate(java.lang.String)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.Utility
  langs:
  - java
  name: parseDate(String dateString)
  nameWithType: Utility.parseDate(String dateString)
  fullName: com.azure.storage.common.Utility.parseDate(String dateString)
  overload: com.azure.storage.common.Utility.parseDate*
  type: Method
  package: com.azure.storage.common
  summary: Given a String representing a date in a form of the ISO8601 pattern, generates a Date representing it with up to millisecond precision.
  syntax:
    content: public static OffsetDateTime parseDate(String dateString)
    parameters:
    - id: dateString
      type: java.lang.String
      description: the <code>String</code> to be interpreted as a <code>Date</code>
    return:
      type: java.time.OffsetDateTime
      description: the corresponding <code>Date</code> object
- uid: com.azure.storage.common.Utility.urlDecode(java.lang.String)
  id: urlDecode(java.lang.String)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.Utility
  langs:
  - java
  name: urlDecode(String stringToDecode)
  nameWithType: Utility.urlDecode(String stringToDecode)
  fullName: com.azure.storage.common.Utility.urlDecode(String stringToDecode)
  overload: com.azure.storage.common.Utility.urlDecode*
  type: Method
  package: com.azure.storage.common
  summary: Performs a safe decoding of the passed string, taking care to preserve each `+` character rather than replacing it with a space character.
  syntax:
    content: public static String urlDecode(String stringToDecode)
    parameters:
    - id: stringToDecode
      type: java.lang.String
      description: String value to decode
    return:
      type: java.lang.String
      description: the decoded string value
- uid: com.azure.storage.common.Utility.urlEncode(java.lang.String)
  id: urlEncode(java.lang.String)
  artifact: com.azure:azure-storage-common:12.7.0-beta.1
  parent: com.azure.storage.common.Utility
  langs:
  - java
  name: urlEncode(String stringToEncode)
  nameWithType: Utility.urlEncode(String stringToEncode)
  fullName: com.azure.storage.common.Utility.urlEncode(String stringToEncode)
  overload: com.azure.storage.common.Utility.urlEncode*
  type: Method
  package: com.azure.storage.common
  summary: Performs a safe encoding of the specified string, taking care to insert %20 for each space character instead of inserting the `+` character.
  syntax:
    content: public static String urlEncode(String stringToEncode)
    parameters:
    - id: stringToEncode
      type: java.lang.String
      description: String value to encode
    return:
      type: java.lang.String
      description: the encoded string value
references:
- uid: com.azure.storage.common.Utility.Utility*
  name: Utility
  nameWithType: Utility.Utility
  fullName: com.azure.storage.common.Utility.Utility
  package: com.azure.storage.common
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.common.Utility.urlDecode*
  name: urlDecode
  nameWithType: Utility.urlDecode
  fullName: com.azure.storage.common.Utility.urlDecode
  package: com.azure.storage.common
- uid: com.azure.storage.common.Utility.urlEncode*
  name: urlEncode
  nameWithType: Utility.urlEncode
  fullName: com.azure.storage.common.Utility.urlEncode
  package: com.azure.storage.common
- uid: com.azure.storage.common.Utility.encodeUrlPath*
  name: encodeUrlPath
  nameWithType: Utility.encodeUrlPath
  fullName: com.azure.storage.common.Utility.encodeUrlPath
  package: com.azure.storage.common
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: com.azure.storage.common.Utility.parseDate*
  name: parseDate
  nameWithType: Utility.parseDate
  fullName: com.azure.storage.common.Utility.parseDate
  package: com.azure.storage.common
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Flux<java.nio.ByteBuffer>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.common.Utility.convertStreamToByteBuffer*
  name: convertStreamToByteBuffer
  nameWithType: Utility.convertStreamToByteBuffer
  fullName: com.azure.storage.common.Utility.convertStreamToByteBuffer
  package: com.azure.storage.common
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
