### YamlMime:JavaType
uid: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient"
fullName: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient"
name: "HeatMapsClient"
nameWithType: "HeatMapsClient"
summary: "An instance of this class provides access to all the operations defined in Heat<wbr>Maps<wbr>Client."
syntax: "public interface HeatMapsClient"
methods:
- uid: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.get(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.get(String resourceGroupName, String profileName)"
  name: "get(String resourceGroupName, String profileName)"
  nameWithType: "HeatMapsClient.get(String resourceGroupName, String profileName)"
  summary: "Gets latest heatmap for Traffic Manager profile."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group containing the Traffic Manager endpoint."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Traffic Manager profile."
    name: "profileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract HeatMapModelInner get(String resourceGroupName, String profileName)"
  desc: "Gets latest heatmap for Traffic Manager profile."
  returns:
    description: "latest heatmap for Traffic Manager profile."
    type: "<xref href=\"com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner?alt=com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner&text=HeatMapModelInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getAsync(String resourceGroupName, String profileName)"
  name: "getAsync(String resourceGroupName, String profileName)"
  nameWithType: "HeatMapsClient.getAsync(String resourceGroupName, String profileName)"
  summary: "Gets latest heatmap for Traffic Manager profile."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group containing the Traffic Manager endpoint."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Traffic Manager profile."
    name: "profileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<HeatMapModelInner> getAsync(String resourceGroupName, String profileName)"
  desc: "Gets latest heatmap for Traffic Manager profile."
  returns:
    description: "latest heatmap for Traffic Manager profile."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner?alt=com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner&text=HeatMapModelInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getAsync(java.lang.String,java.lang.String,java.util.List<java.lang.Double>,java.util.List<java.lang.Double>)"
  fullName: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  name: "getAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  nameWithType: "HeatMapsClient.getAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  summary: "Gets latest heatmap for Traffic Manager profile."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group containing the Traffic Manager endpoint."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Traffic Manager profile."
    name: "profileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The top left latitude,longitude pair of the rectangular viewport to query for."
    name: "topLeft"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The bottom right latitude,longitude pair of the rectangular viewport to query for."
    name: "botRight"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<HeatMapModelInner> getAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  desc: "Gets latest heatmap for Traffic Manager profile."
  returns:
    description: "latest heatmap for Traffic Manager profile."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner?alt=com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner&text=HeatMapModelInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getWithResponse(java.lang.String,java.lang.String,java.util.List<java.lang.Double>,java.util.List<java.lang.Double>,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getWithResponse(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight, Context context)"
  name: "getWithResponse(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight, Context context)"
  nameWithType: "HeatMapsClient.getWithResponse(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight, Context context)"
  summary: "Gets latest heatmap for Traffic Manager profile."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group containing the Traffic Manager endpoint."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Traffic Manager profile."
    name: "profileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The top left latitude,longitude pair of the rectangular viewport to query for."
    name: "topLeft"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The bottom right latitude,longitude pair of the rectangular viewport to query for."
    name: "botRight"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<HeatMapModelInner> getWithResponse(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight, Context context)"
  desc: "Gets latest heatmap for Traffic Manager profile."
  returns:
    description: "latest heatmap for Traffic Manager profile."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner?alt=com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner&text=HeatMapModelInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.util.List<java.lang.Double>,java.util.List<java.lang.Double>)"
  fullName: "com.azure.resourcemanager.trafficmanager.fluent.HeatMapsClient.getWithResponseAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  name: "getWithResponseAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  nameWithType: "HeatMapsClient.getWithResponseAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  summary: "Gets latest heatmap for Traffic Manager profile."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group containing the Traffic Manager endpoint."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the Traffic Manager profile."
    name: "profileName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The top left latitude,longitude pair of the rectangular viewport to query for."
    name: "topLeft"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The bottom right latitude,longitude pair of the rectangular viewport to query for."
    name: "botRight"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract Mono<Response<HeatMapModelInner>> getWithResponseAsync(String resourceGroupName, String profileName, List<Double> topLeft, List<Double> botRight)"
  desc: "Gets latest heatmap for Traffic Manager profile."
  returns:
    description: "latest heatmap for Traffic Manager profile."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner?alt=com.azure.resourcemanager.trafficmanager.fluent.models.HeatMapModelInner&text=HeatMapModelInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in HeatMapsClient."
metadata: {}
package: "com.azure.resourcemanager.trafficmanager.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-trafficmanager:2.17.0
