### YamlMime:JavaType
uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient"
fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient"
name: "LoadTestAdministrationClient"
nameWithType: "LoadTestAdministrationClient"
summary: "Initializes a new instance of the synchronous Load<wbr>Testing<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **LoadTestAdministrationClient**"
methods:
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.beginUploadTestFile(java.lang.String,java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.beginUploadTestFile(String testId, String fileName, BinaryData body, RequestOptions fileUploadRequestOptions)"
  name: "beginUploadTestFile(String testId, String fileName, BinaryData body, RequestOptions fileUploadRequestOptions)"
  nameWithType: "LoadTestAdministrationClient.beginUploadTestFile(String testId, String fileName, BinaryData body, RequestOptions fileUploadRequestOptions)"
  summary: "Uploads file and polls the validation status of the uploaded file."
  parameters:
  - description: "Unique name for load test, must be a valid URL character ^[a-z0-9_-]*$."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Unique name for test file with file extension like : App.jmx."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The file content as application/octet-stream."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the file upload HTTP request before HTTP client sends\n     it."
    name: "fileUploadRequestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginUploadTestFile(String testId, String fileName, BinaryData body, RequestOptions fileUploadRequestOptions)"
  desc: "Uploads file and polls the validation status of the uploaded file."
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve the file info with validation status."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.createOrUpdateAppComponentsWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.createOrUpdateAppComponentsWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  name: "createOrUpdateAppComponentsWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.createOrUpdateAppComponentsWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  summary: "Associate an app component (collection of azure resources) to a test."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "App Component model."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createOrUpdateAppComponentsWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  desc: "Associate an app component (collection of azure resources) to a test.\n\n**Request Body Schema**\n\n```java\n{\n     components (Required): {\n         String (Required): {\n             resourceId: String (Optional)\n             resourceName: String (Optional)\n             resourceType: String (Optional)\n             displayName: String (Optional)\n             resourceGroup: String (Optional)\n             subscriptionId: String (Optional)\n             kind: String (Optional)\n         }\n     }\n     testId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     components (Required): {\n         String (Required): {\n             resourceId: String (Optional)\n             resourceName: String (Optional)\n             resourceType: String (Optional)\n             displayName: String (Optional)\n             resourceGroup: String (Optional)\n             subscriptionId: String (Optional)\n             kind: String (Optional)\n         }\n     }\n     testId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test app component along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.createOrUpdateServerMetricsConfigWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.createOrUpdateServerMetricsConfigWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  name: "createOrUpdateServerMetricsConfigWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.createOrUpdateServerMetricsConfigWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  summary: "Configure server metrics for a test."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Server metric configuration model."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createOrUpdateServerMetricsConfigWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  desc: "Configure server metrics for a test.\n\n**Request Body Schema**\n\n```java\n{\n     testId: String (Optional)\n     metrics (Optional): {\n         String (Optional): {\n             id: String (Optional)\n             resourceId: String (Required)\n             metricNamespace: String (Required)\n             displayDescription: String (Optional)\n             name: String (Required)\n             aggregation: String (Required)\n             unit: String (Optional)\n             resourceType: String (Required)\n         }\n     }\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     testId: String (Optional)\n     metrics (Optional): {\n         String (Optional): {\n             id: String (Optional)\n             resourceId: String (Required)\n             metricNamespace: String (Required)\n             displayDescription: String (Optional)\n             name: String (Required)\n             aggregation: String (Required)\n             unit: String (Optional)\n             resourceType: String (Required)\n         }\n     }\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test server metrics configuration along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.createOrUpdateTestWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.createOrUpdateTestWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  name: "createOrUpdateTestWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.createOrUpdateTestWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  summary: "Create a new test or update an existing test."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Load test model."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createOrUpdateTestWithResponse(String testId, BinaryData body, RequestOptions requestOptions)"
  desc: "Create a new test or update an existing test.\n\n**Request Body Schema**\n\n```java\n{\n     passFailCriteria (Optional): {\n         passFailMetrics (Optional): {\n             String (Optional): {\n                 clientMetric: String(response_time_ms/latency/error/requests/requests_per_sec) (Optional)\n                 aggregate: String(count/percentage/avg/p50/p90/p95/p99/min/max) (Optional)\n                 condition: String (Optional)\n                 requestName: String (Optional)\n                 value: Double (Optional)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n     }\n     secrets (Optional): {\n         String (Optional): {\n             value: String (Optional)\n             type: String(AKV_SECRET_URI/SECRET_VALUE) (Optional)\n         }\n     }\n     certificate (Optional): {\n         value: String (Optional)\n         type: String(AKV_CERT_URI) (Optional)\n         name: String (Optional)\n     }\n     environmentVariables (Optional): {\n         String: String (Optional)\n     }\n     loadTestConfiguration (Optional): {\n         engineInstances: Integer (Optional)\n         splitAllCSVs: Boolean (Optional)\n         quickStartTest: Boolean (Optional)\n         optionalLoadTestConfig (Optional): {\n             endpointUrl: String (Optional)\n             virtualUsers: Integer (Optional)\n             rampUpTime: Integer (Optional)\n             duration: Integer (Optional)\n         }\n     }\n     inputArtifacts (Optional): {\n         configFileInfo (Optional): {\n             url: String (Optional)\n             fileName: String (Optional)\n             fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS) (Optional)\n             expireDateTime: OffsetDateTime (Optional)\n             validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n             validationFailureDetails: String (Optional)\n         }\n         testScriptFileInfo (Optional): (recursive schema, see testScriptFileInfo above)\n         userPropFileInfo (Optional): (recursive schema, see userPropFileInfo above)\n         inputArtifactsZipFileInfo (Optional): (recursive schema, see inputArtifactsZipFileInfo above)\n         additionalFileInfo (Optional): [\n             (recursive schema, see above)\n         ]\n     }\n     testId: String (Optional)\n     description: String (Optional)\n     displayName: String (Optional)\n     subnetId: String (Optional)\n     keyvaultReferenceIdentityType: String (Optional)\n     keyvaultReferenceIdentityId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     passFailCriteria (Optional): {\n         passFailMetrics (Optional): {\n             String (Optional): {\n                 clientMetric: String(response_time_ms/latency/error/requests/requests_per_sec) (Optional)\n                 aggregate: String(count/percentage/avg/p50/p90/p95/p99/min/max) (Optional)\n                 condition: String (Optional)\n                 requestName: String (Optional)\n                 value: Double (Optional)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n     }\n     secrets (Optional): {\n         String (Optional): {\n             value: String (Optional)\n             type: String(AKV_SECRET_URI/SECRET_VALUE) (Optional)\n         }\n     }\n     certificate (Optional): {\n         value: String (Optional)\n         type: String(AKV_CERT_URI) (Optional)\n         name: String (Optional)\n     }\n     environmentVariables (Optional): {\n         String: String (Optional)\n     }\n     loadTestConfiguration (Optional): {\n         engineInstances: Integer (Optional)\n         splitAllCSVs: Boolean (Optional)\n         quickStartTest: Boolean (Optional)\n         optionalLoadTestConfig (Optional): {\n             endpointUrl: String (Optional)\n             virtualUsers: Integer (Optional)\n             rampUpTime: Integer (Optional)\n             duration: Integer (Optional)\n         }\n     }\n     inputArtifacts (Optional): {\n         configFileInfo (Optional): {\n             url: String (Optional)\n             fileName: String (Optional)\n             fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS) (Optional)\n             expireDateTime: OffsetDateTime (Optional)\n             validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n             validationFailureDetails: String (Optional)\n         }\n         testScriptFileInfo (Optional): (recursive schema, see testScriptFileInfo above)\n         userPropFileInfo (Optional): (recursive schema, see userPropFileInfo above)\n         inputArtifactsZipFileInfo (Optional): (recursive schema, see inputArtifactsZipFileInfo above)\n         additionalFileInfo (Optional): [\n             (recursive schema, see above)\n         ]\n     }\n     testId: String (Optional)\n     description: String (Optional)\n     displayName: String (Optional)\n     subnetId: String (Optional)\n     keyvaultReferenceIdentityType: String (Optional)\n     keyvaultReferenceIdentityId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "load test model along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.deleteTestFileWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.deleteTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  name: "deleteTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.deleteTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  summary: "Delete file by the file name for a test."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "File name with file extension like app.jmx."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  desc: "Delete file by the file name for a test."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.deleteTestWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.deleteTestWithResponse(String testId, RequestOptions requestOptions)"
  name: "deleteTestWithResponse(String testId, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.deleteTestWithResponse(String testId, RequestOptions requestOptions)"
  summary: "Delete a test by its name."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTestWithResponse(String testId, RequestOptions requestOptions)"
  desc: "Delete a test by its name."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getAppComponentsWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getAppComponentsWithResponse(String testId, RequestOptions requestOptions)"
  name: "getAppComponentsWithResponse(String testId, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.getAppComponentsWithResponse(String testId, RequestOptions requestOptions)"
  summary: "Get associated app component (collection of azure resources) for the given test."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getAppComponentsWithResponse(String testId, RequestOptions requestOptions)"
  desc: "Get associated app component (collection of azure resources) for the given test.\n\n**Response Body Schema**\n\n```java\n{\n     components (Required): {\n         String (Required): {\n             resourceId: String (Optional)\n             resourceName: String (Optional)\n             resourceType: String (Optional)\n             displayName: String (Optional)\n             resourceGroup: String (Optional)\n             subscriptionId: String (Optional)\n             kind: String (Optional)\n         }\n     }\n     testId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "associated app component (collection of azure resources) for the given test along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getServerMetricsConfigWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getServerMetricsConfigWithResponse(String testId, RequestOptions requestOptions)"
  name: "getServerMetricsConfigWithResponse(String testId, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.getServerMetricsConfigWithResponse(String testId, RequestOptions requestOptions)"
  summary: "List server metrics configuration for the given test."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getServerMetricsConfigWithResponse(String testId, RequestOptions requestOptions)"
  desc: "List server metrics configuration for the given test.\n\n**Response Body Schema**\n\n```java\n{\n     testId: String (Optional)\n     metrics (Optional): {\n         String (Optional): {\n             id: String (Optional)\n             resourceId: String (Required)\n             metricNamespace: String (Required)\n             displayDescription: String (Optional)\n             name: String (Required)\n             aggregation: String (Required)\n             unit: String (Optional)\n             resourceType: String (Required)\n         }\n     }\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test server metrics configuration along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getTestFileWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  name: "getTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.getTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  summary: "Get test file by the file name."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "File name with file extension like app.jmx."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTestFileWithResponse(String testId, String fileName, RequestOptions requestOptions)"
  desc: "Get test file by the file name.\n\n**Response Body Schema**\n\n```java\n{\n     url: String (Optional)\n     fileName: String (Optional)\n     fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS) (Optional)\n     expireDateTime: OffsetDateTime (Optional)\n     validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n     validationFailureDetails: String (Optional)\n }\n```"
  returns:
    description: "test file by the file name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getTestWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.getTestWithResponse(String testId, RequestOptions requestOptions)"
  name: "getTestWithResponse(String testId, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.getTestWithResponse(String testId, RequestOptions requestOptions)"
  summary: "Get load test details by test name."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTestWithResponse(String testId, RequestOptions requestOptions)"
  desc: "Get load test details by test name.\n\n**Response Body Schema**\n\n```java\n{\n     passFailCriteria (Optional): {\n         passFailMetrics (Optional): {\n             String (Optional): {\n                 clientMetric: String(response_time_ms/latency/error/requests/requests_per_sec) (Optional)\n                 aggregate: String(count/percentage/avg/p50/p90/p95/p99/min/max) (Optional)\n                 condition: String (Optional)\n                 requestName: String (Optional)\n                 value: Double (Optional)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n     }\n     secrets (Optional): {\n         String (Optional): {\n             value: String (Optional)\n             type: String(AKV_SECRET_URI/SECRET_VALUE) (Optional)\n         }\n     }\n     certificate (Optional): {\n         value: String (Optional)\n         type: String(AKV_CERT_URI) (Optional)\n         name: String (Optional)\n     }\n     environmentVariables (Optional): {\n         String: String (Optional)\n     }\n     loadTestConfiguration (Optional): {\n         engineInstances: Integer (Optional)\n         splitAllCSVs: Boolean (Optional)\n         quickStartTest: Boolean (Optional)\n         optionalLoadTestConfig (Optional): {\n             endpointUrl: String (Optional)\n             virtualUsers: Integer (Optional)\n             rampUpTime: Integer (Optional)\n             duration: Integer (Optional)\n         }\n     }\n     inputArtifacts (Optional): {\n         configFileInfo (Optional): {\n             url: String (Optional)\n             fileName: String (Optional)\n             fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS) (Optional)\n             expireDateTime: OffsetDateTime (Optional)\n             validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n             validationFailureDetails: String (Optional)\n         }\n         testScriptFileInfo (Optional): (recursive schema, see testScriptFileInfo above)\n         userPropFileInfo (Optional): (recursive schema, see userPropFileInfo above)\n         inputArtifactsZipFileInfo (Optional): (recursive schema, see inputArtifactsZipFileInfo above)\n         additionalFileInfo (Optional): [\n             (recursive schema, see above)\n         ]\n     }\n     testId: String (Optional)\n     description: String (Optional)\n     displayName: String (Optional)\n     subnetId: String (Optional)\n     keyvaultReferenceIdentityType: String (Optional)\n     keyvaultReferenceIdentityId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "load test details by test name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.listTestFiles(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.listTestFiles(String testId, RequestOptions requestOptions)"
  name: "listTestFiles(String testId, RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.listTestFiles(String testId, RequestOptions requestOptions)"
  summary: "Get all test files."
  parameters:
  - description: "Unique name for the load test, must contain only lower-case alphabetic, numeric, underscore or\n     hyphen characters."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listTestFiles(String testId, RequestOptions requestOptions)"
  desc: "Get all test files.\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             url: String (Optional)\n             fileName: String (Optional)\n             fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS) (Optional)\n             expireDateTime: OffsetDateTime (Optional)\n             validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n             validationFailureDetails: String (Optional)\n         }\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "all test files as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestAdministrationClient.listTests(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestAdministrationClient.listTests(RequestOptions requestOptions)"
  name: "listTests(RequestOptions requestOptions)"
  nameWithType: "LoadTestAdministrationClient.listTests(RequestOptions requestOptions)"
  summary: "Get all load tests by the fully qualified resource Id e.<wbr>g subscriptions/\\{sub<wbr>Id\\}/resource<wbr>Groups/\\{rg\\}/providers/Microsoft.<wbr>Load<wbr>Test<wbr>Service/loadtests/\\{res<wbr>Name\\}."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listTests(RequestOptions requestOptions)"
  desc: "Get all load tests by the fully qualified resource Id e.g subscriptions/\\{subId\\}/resourceGroups/\\{rg\\}/providers/Microsoft.LoadTestService/loadtests/\\{resName\\}.\n\n**Query Parameters**\n\n    | --------------------- | -------------- | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                  | Type           | Required | Description                                                                                                                                                                               |\n    | orderby               | String         | No       | Sort on the supported fields in (field asc/desc) format. eg: lastModifiedDateTime asc. Supported fields - lastModifiedDateTime                                                            |\n    | search                | String         | No       | Prefix based, case sensitive search on searchable fields - displayName, createdBy. For example, to search for a test, with display name is Login Test, the search parameter can be Login. |\n    | lastModifiedStartTime | OffsetDateTime | No       | Start DateTime(ISO 8601 literal format) of the last updated time range to filter tests.                                                                                                   |\n    | lastModifiedEndTime   | OffsetDateTime | No       | End DateTime(ISO 8601 literal format) of the last updated time range to filter tests.                                                                                                     |\n    | maxpagesize           | Integer        | No       | Number of results in response.                                                                                                                                                            |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             passFailCriteria (Optional): {\n                 passFailMetrics (Optional): {\n                     String (Optional): {\n                         clientMetric: String(response_time_ms/latency/error/requests/requests_per_sec) (Optional)\n                         aggregate: String(count/percentage/avg/p50/p90/p95/p99/min/max) (Optional)\n                         condition: String (Optional)\n                         requestName: String (Optional)\n                         value: Double (Optional)\n                         action: String(continue/stop) (Optional)\n                         actualValue: Double (Optional)\n                         result: String(passed/undetermined/failed) (Optional)\n                     }\n                 }\n             }\n             secrets (Optional): {\n                 String (Optional): {\n                     value: String (Optional)\n                     type: String(AKV_SECRET_URI/SECRET_VALUE) (Optional)\n                 }\n             }\n             certificate (Optional): {\n                 value: String (Optional)\n                 type: String(AKV_CERT_URI) (Optional)\n                 name: String (Optional)\n             }\n             environmentVariables (Optional): {\n                 String: String (Optional)\n             }\n             loadTestConfiguration (Optional): {\n                 engineInstances: Integer (Optional)\n                 splitAllCSVs: Boolean (Optional)\n                 quickStartTest: Boolean (Optional)\n                 optionalLoadTestConfig (Optional): {\n                     endpointUrl: String (Optional)\n                     virtualUsers: Integer (Optional)\n                     rampUpTime: Integer (Optional)\n                     duration: Integer (Optional)\n                 }\n             }\n             inputArtifacts (Optional): {\n                 configFileInfo (Optional): {\n                     url: String (Optional)\n                     fileName: String (Optional)\n                     fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS) (Optional)\n                     expireDateTime: OffsetDateTime (Optional)\n                     validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n                     validationFailureDetails: String (Optional)\n                 }\n                 testScriptFileInfo (Optional): (recursive schema, see testScriptFileInfo above)\n                 userPropFileInfo (Optional): (recursive schema, see userPropFileInfo above)\n                 inputArtifactsZipFileInfo (Optional): (recursive schema, see inputArtifactsZipFileInfo above)\n                 additionalFileInfo (Optional): [\n                     (recursive schema, see above)\n                 ]\n             }\n             testId: String (Optional)\n             description: String (Optional)\n             displayName: String (Optional)\n             subnetId: String (Optional)\n             keyvaultReferenceIdentityType: String (Optional)\n             keyvaultReferenceIdentityId: String (Optional)\n             createdDateTime: OffsetDateTime (Optional)\n             createdBy: String (Optional)\n             lastModifiedDateTime: OffsetDateTime (Optional)\n             lastModifiedBy: String (Optional)\n         }\n     ]\n     nextLink: String (Optional)\n }\n```"
  returns:
    description: "all load tests by the fully qualified resource Id e.g\n     subscriptions/{subId}/resourceGroups/{rg}/providers/Microsoft.LoadTestService/loadtests/{resName} as\n     paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous LoadTestingClient type."
metadata: {}
package: "com.azure.developer.loadtesting"
artifact: com.azure:azure-developer-loadtesting:1.0.1
