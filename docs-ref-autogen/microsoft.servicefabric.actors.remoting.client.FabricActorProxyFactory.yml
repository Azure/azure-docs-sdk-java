### YamlMime:JavaType
constructors:
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.FabricActorProxyFactory()
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.FabricActorProxyFactory(Function<ServiceRemotingCallbackClient, ServiceRemotingClientFactory>,OperationRetrySettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.actors.client.ActorProxyFactory?alt=microsoft.servicefabric.actors.client.ActorProxyFactory&text=ActorProxyFactory" data-throw-if-not-resolved="False"/>
methods:
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorProxy(Class<T>,ActorId)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorProxy(Class<T>,ActorId,String,String,String)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorProxy(Class<T>,URI,ActorId)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorProxy(Class<T>,URI,ActorId,String)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorServiceProxy(Class<T>,URI,ActorId)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorServiceProxy(Class<T>,URI,ActorId,String)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorServiceProxy(Class<T>,URI,long)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createActorServiceProxy(Class<T>,URI,long,String)
- microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory.createServiceRemotingClientFactory(ServiceRemotingCallbackClient)
nameWithType: FabricActorProxyFactory
syntax: public class FabricActorProxyFactory implements ActorProxyFactory
type: class
uid: microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory
fullName: microsoft.servicefabric.actors.remoting.client.FabricActorProxyFactory
name: FabricActorProxyFactory
package: microsoft.servicefabric.actors.remoting.client
summary: <p>Factory class to create a proxy to the remote actor objects. </p>
metadata: {}
