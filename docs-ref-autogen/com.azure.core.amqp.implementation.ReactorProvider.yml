### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ReactorProvider"
  id: "ReactorProvider"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ReactorProvider.ReactorProvider()"
  - "com.azure.core.amqp.implementation.ReactorProvider.createReactor(java.lang.String,int)"
  - "com.azure.core.amqp.implementation.ReactorProvider.getReactor()"
  - "com.azure.core.amqp.implementation.ReactorProvider.getReactorDispatcher()"
  langs:
  - "java"
  name: "ReactorProvider"
  nameWithType: "ReactorProvider"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public class ReactorProvider"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ReactorProvider.ReactorProvider()"
  id: "ReactorProvider()"
  parent: "com.azure.core.amqp.implementation.ReactorProvider"
  langs:
  - "java"
  name: "ReactorProvider()"
  nameWithType: "ReactorProvider.ReactorProvider()"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.ReactorProvider()"
  overload: "com.azure.core.amqp.implementation.ReactorProvider.ReactorProvider*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public ReactorProvider()"
- uid: "com.azure.core.amqp.implementation.ReactorProvider.createReactor(java.lang.String,int)"
  id: "createReactor(java.lang.String,int)"
  parent: "com.azure.core.amqp.implementation.ReactorProvider"
  langs:
  - "java"
  name: "createReactor(String connectionId, int maxFrameSize)"
  nameWithType: "ReactorProvider.createReactor(String connectionId, int maxFrameSize)"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.createReactor(String connectionId, int maxFrameSize)"
  overload: "com.azure.core.amqp.implementation.ReactorProvider.createReactor*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  summary: "Creates a reactor and replaces the existing instance of it."
  syntax:
    content: "public Reactor createReactor(String connectionId, int maxFrameSize)"
    parameters:
    - id: "connectionId"
      type: "java.lang.String"
      description: "Identifier for Reactor."
    - id: "maxFrameSize"
      type: "int"
    return:
      type: "org.apache.qpid.proton.reactor.Reactor"
      description: "The newly created reactor instance."
  exceptions:
  - type: "java.io.IOException"
    description: "If the service could not create a Reactor instance."
- uid: "com.azure.core.amqp.implementation.ReactorProvider.getReactor()"
  id: "getReactor()"
  parent: "com.azure.core.amqp.implementation.ReactorProvider"
  langs:
  - "java"
  name: "getReactor()"
  nameWithType: "ReactorProvider.getReactor()"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.getReactor()"
  overload: "com.azure.core.amqp.implementation.ReactorProvider.getReactor*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Reactor getReactor()"
    return:
      type: "org.apache.qpid.proton.reactor.Reactor"
- uid: "com.azure.core.amqp.implementation.ReactorProvider.getReactorDispatcher()"
  id: "getReactorDispatcher()"
  parent: "com.azure.core.amqp.implementation.ReactorProvider"
  langs:
  - "java"
  name: "getReactorDispatcher()"
  nameWithType: "ReactorProvider.getReactorDispatcher()"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.getReactorDispatcher()"
  overload: "com.azure.core.amqp.implementation.ReactorProvider.getReactorDispatcher*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public ReactorDispatcher getReactorDispatcher()"
    return:
      type: "com.azure.core.amqp.implementation.ReactorDispatcher"
references:
- uid: "com.azure.core.amqp.implementation.ReactorProvider.ReactorProvider*"
  name: "ReactorProvider"
  nameWithType: "ReactorProvider.ReactorProvider"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.ReactorProvider"
  package: "com.azure.core.amqp.implementation"
- uid: "org.apache.qpid.proton.reactor.Reactor"
  spec.java:
  - uid: "org.apache.qpid.proton.reactor.Reactor"
    name: "Reactor"
    fullName: "org.apache.qpid.proton.reactor.Reactor"
- uid: "com.azure.core.amqp.implementation.ReactorProvider.getReactor*"
  name: "getReactor"
  nameWithType: "ReactorProvider.getReactor"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.getReactor"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorDispatcher"
  name: "ReactorDispatcher"
  nameWithType: "ReactorDispatcher"
  fullName: "com.azure.core.amqp.implementation.ReactorDispatcher"
- uid: "com.azure.core.amqp.implementation.ReactorProvider.getReactorDispatcher*"
  name: "getReactorDispatcher"
  nameWithType: "ReactorProvider.getReactorDispatcher"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.getReactorDispatcher"
  package: "com.azure.core.amqp.implementation"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.core.amqp.implementation.ReactorProvider.createReactor*"
  name: "createReactor"
  nameWithType: "ReactorProvider.createReactor"
  fullName: "com.azure.core.amqp.implementation.ReactorProvider.createReactor"
  package: "com.azure.core.amqp.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
