### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.primitives._retry_exponential
  id: _retry_exponential
  parent: com.microsoft.azure.servicebus.primitives
  children:
  - com.microsoft.azure.servicebus.primitives._retry_exponential.onGetNextRetryInterval(final String,final Exception,final Duration,final int)
  - com.microsoft.azure.servicebus.primitives._retry_exponential.RetryExponential(final Duration,final Duration,final int,final String)
  href: com.microsoft.azure.servicebus.primitives._retry_exponential.yml
  langs:
  - java
  name: RetryExponential
  nameWithType: RetryExponential
  fullName: com.microsoft.azure.servicebus.primitives.RetryExponential
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/RetryExponential.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/RetryExponential.java
    startLine: 14
  package: com.microsoft.azure.servicebus.primitives
  summary: "<p>RetryPolicy implementation where the delay between retries will grow in an exponential manner. RetryPolicy can be set on the client operations using <xref uid=\"com.microsoft.azure.servicebus.primitives._connection_string_builder\" data-throw-if-not-resolved=\"false\">ConnectionStringBuilder</xref>. RetryIntervals will be computed using a retryFactor which is a function of deltaBackOff (MaximumBackoff - MinimumBackoff) and MaximumRetryCount </p>"
  syntax:
    content: public class RetryExponential extends RetryPolicy
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.servicebus.primitives._retry_policy
  inheritedMembers:
  - com.microsoft.azure.servicebus.primitives._retry_policy.getDefault()
  - com.microsoft.azure.servicebus.primitives._retry_policy.getNextRetryInterval(String,Exception,Duration)
  - com.microsoft.azure.servicebus.primitives._retry_policy.getNoRetry()
  - com.microsoft.azure.servicebus.primitives._retry_policy.getRetryCount(String)
  - com.microsoft.azure.servicebus.primitives._retry_policy.incrementRetryCount(String)
  - com.microsoft.azure.servicebus.primitives._retry_policy.isRetryableException(Exception)
  - com.microsoft.azure.servicebus.primitives._retry_policy.resetRetryCount(String)
  - com.microsoft.azure.servicebus.primitives._retry_policy.RetryPolicy(final String)
  - com.microsoft.azure.servicebus.primitives._retry_policy.toString()
- uid: com.microsoft.azure.servicebus.primitives._retry_exponential.onGetNextRetryInterval(final String,final Exception,final Duration,final int)
  id: onGetNextRetryInterval(final String,final Exception,final Duration,final int)
  parent: com.microsoft.azure.servicebus.primitives._retry_exponential
  href: com.microsoft.azure.servicebus.primitives._retry_exponential.yml
  langs:
  - java
  name: onGetNextRetryInterval(final String clientId, final Exception lastException, final Duration remainingTime, final int baseWaitTimeSecs)
  nameWithType: RetryExponential.onGetNextRetryInterval(final String clientId, final Exception lastException, final Duration remainingTime, final int baseWaitTimeSecs)
  fullName: com.microsoft.azure.servicebus.primitives.RetryExponential.onGetNextRetryInterval(final String clientId, final Exception lastException, final Duration remainingTime, final int baseWaitTimeSecs)
  overload: com.microsoft.azure.servicebus.primitives._retry_exponential.onGetNextRetryInterval*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/RetryExponential.java
    startLine: 32
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: protected Duration onGetNextRetryInterval(final String clientId, final Exception lastException, final Duration remainingTime, final int baseWaitTimeSecs)
    parameters:
    - id: clientId
      type: 3d93591e
    - id: lastException
      type: 0e0204bc
    - id: remainingTime
      type: 89ac7c4d
    - id: baseWaitTimeSecs
      type: cd225469
    return:
      type: e02a2de0
- uid: com.microsoft.azure.servicebus.primitives._retry_exponential.RetryExponential(final Duration,final Duration,final int,final String)
  id: RetryExponential(final Duration,final Duration,final int,final String)
  parent: com.microsoft.azure.servicebus.primitives._retry_exponential
  href: com.microsoft.azure.servicebus.primitives._retry_exponential.yml
  langs:
  - java
  name: RetryExponential(final Duration minimumBackoff, final Duration maximumBackoff, final int maximumRetryCount, final String name)
  nameWithType: RetryExponential.RetryExponential(final Duration minimumBackoff, final Duration maximumBackoff, final int maximumRetryCount, final String name)
  fullName: com.microsoft.azure.servicebus.primitives.RetryExponential.RetryExponential(final Duration minimumBackoff, final Duration maximumBackoff, final int maximumRetryCount, final String name)
  overload: com.microsoft.azure.servicebus.primitives._retry_exponential.RetryExponential*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/primitives/RetryExponential.java
    startLine: 21
  package: com.microsoft.azure.servicebus.primitives
  syntax:
    content: public RetryExponential(final Duration minimumBackoff, final Duration maximumBackoff, final int maximumRetryCount, final String name)
    parameters:
    - id: minimumBackoff
      type: 89ac7c4d
    - id: maximumBackoff
      type: 89ac7c4d
    - id: maximumRetryCount
      type: cd225469
    - id: name
      type: 3d93591e
references:
- uid: 89ac7c4d
  spec.java:
  - name: final Duration
    fullName: final Duration
- uid: cd225469
  spec.java:
  - name: final int
    fullName: final int
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.servicebus.primitives._retry_exponential.RetryExponential*
  name: RetryExponential
  nameWithType: RetryExponential.RetryExponential
  fullName: com.microsoft.azure.servicebus.primitives.RetryExponential.RetryExponential
  package: com.microsoft.azure.servicebus.primitives
- uid: 0e0204bc
  spec.java:
  - name: final Exception
    fullName: final Exception
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: com.microsoft.azure.servicebus.primitives._retry_exponential.onGetNextRetryInterval*
  name: onGetNextRetryInterval
  nameWithType: RetryExponential.onGetNextRetryInterval
  fullName: com.microsoft.azure.servicebus.primitives.RetryExponential.onGetNextRetryInterval
  package: com.microsoft.azure.servicebus.primitives
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.getDefault()
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: getDefault()
  nameWithType: RetryPolicy.getDefault()
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getDefault()
  type: Method
  summary: <p>Retry policy that provides exponentially increasing retry intervals with each successive failure. This policy is suitable for use by use most client applications and is also the default policy if no retry policy is specified. </p>
  syntax:
    content: public static RetryPolicy getDefault()
    return:
      type: com.microsoft.azure.servicebus.primitives._retry_policy
      description: <p>a retry policy that provides exponentially increasing retry intervals </p>
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.getNextRetryInterval(String,Exception,Duration)
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  nameWithType: RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
  type: Method
  summary: >-
    <p>Gets the interval after which nextRetry should be attempted, based on the last exception encountered and the remaining time before the operation times out.</p>

    <p></p>
  syntax:
    content: public Duration getNextRetryInterval(String clientId, Exception lastException, Duration remainingTime)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>id of the sender or receiver or client object that encountered the exception. </p>
    - id: lastException
      type: 8a99d4b0
      description: <p>last exception encountered </p>
    - id: remainingTime
      type: e02a2de0
      description: <p>remainingTime to retry before the operation times out </p>
    return:
      type: e02a2de0
      description: <p>duration after which the operation will be retried. Returns null when the operation should not retried. </p>
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.getNoRetry()
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: getNoRetry()
  nameWithType: RetryPolicy.getNoRetry()
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getNoRetry()
  type: Method
  summary: <p>Gets a retry policy that doesn't retry any operations, effectively disabling retries. Clients can use this retry policy in case they do not want any operation automatically retried. </p>
  syntax:
    content: public static RetryPolicy getNoRetry()
    return:
      type: com.microsoft.azure.servicebus.primitives._retry_policy
      description: <p>a retry policy that doesn't retry any operations </p>
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.getRetryCount(String)
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: getRetryCount(String clientId)
  nameWithType: RetryPolicy.getRetryCount(String clientId)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.getRetryCount(String clientId)
  type: Method
  syntax:
    content: protected int getRetryCount(String clientId)
    parameters:
    - id: clientId
      type: "26831127"
    return:
      type: f75371fa
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.incrementRetryCount(String)
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: incrementRetryCount(String clientId)
  nameWithType: RetryPolicy.incrementRetryCount(String clientId)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.incrementRetryCount(String clientId)
  type: Method
  summary: <p>Increments the number of successive retry attempts made by a client. </p>
  syntax:
    content: public void incrementRetryCount(String clientId)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>id of the client retrying a failed operation </p>
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.isRetryableException(Exception)
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: isRetryableException(Exception exception)
  nameWithType: RetryPolicy.isRetryableException(Exception exception)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.isRetryableException(Exception exception)
  type: Method
  summary: <p>Determines if an exception is retry-able or not. Only transient exceptions should be retried. </p>
  syntax:
    content: public static boolean isRetryableException(Exception exception)
    parameters:
    - id: exception
      type: 8a99d4b0
      description: <p>exception encountered by an operation, to be determined if it is retry-able. </p>
    return:
      type: 4fc6e284
      description: <p>true if the exception is retry-able (like ServerBusy or other transient exception), else returns false </p>
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.resetRetryCount(String)
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: resetRetryCount(String clientId)
  nameWithType: RetryPolicy.resetRetryCount(String clientId)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.resetRetryCount(String clientId)
  type: Method
  summary: <p>Resets the number of retry attempts made by a client. This method is called by the client when retried operation succeeds. </p>
  syntax:
    content: public void resetRetryCount(String clientId)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>id of the client that just retried a failed operation and succeeded. </p>
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.RetryPolicy(final String)
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: RetryPolicy(final String name)
  nameWithType: RetryPolicy.RetryPolicy(final String name)
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.RetryPolicy(final String name)
  type: Constructor
  summary: <p>Creates an instance of RetryPolicy with the given name. </p>
  syntax:
    content: protected RetryPolicy(final String name)
    parameters:
    - id: name
      type: 3d93591e
      description: <p>name of the policy </p>
- uid: com.microsoft.azure.servicebus.primitives._retry_policy.toString()
  parent: com.microsoft.azure.servicebus.primitives._retry_policy
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: toString()
  nameWithType: RetryPolicy.toString()
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy.toString()
  type: Method
  syntax:
    content: public String toString()
    return:
      type: "26831127"
- uid: com.microsoft.azure.servicebus.primitives._retry_policy
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._retry_policy.yml
  name: RetryPolicy
  nameWithType: RetryPolicy
  fullName: com.microsoft.azure.servicebus.primitives.RetryPolicy
  type: Class
  summary: <p>Represents an abstraction of a policy for retrying messaging operations when an exception is encountered. Some exceptions encountered by a sender or receiver can be transient like ServerBusy and the operation will succeed if retried. Clients can specify a retry policy using <xref uid="com.microsoft.azure.servicebus.primitives._connection_string_builder" data-throw-if-not-resolved="false">ConnectionStringBuilder</xref> which guides senders and receivers to automatically retry the failed operation before throwing the exception to the client application. Users should not implement this class, instead should use one of the provided implementations through <xref uid="com.microsoft.azure.servicebus.primitives._retry_policy.getDefault()" data-throw-if-not-resolved="false">getDefault</xref> or <xref uid="com.microsoft.azure.servicebus.primitives._retry_policy.getNoRetry()" data-throw-if-not-resolved="false">getNoRetry</xref>. </p>
  syntax:
    content: public class RetryPolicy
- uid: com.microsoft.azure.servicebus.primitives._connection_string_builder
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._connection_string_builder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  type: Class
  summary: >-
    <p>This class can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>

    <p>Sample Code: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(

                                                 "ServiceBusNamespaceName", 

                                                 "ServiceBusEntityName", // QueueName or TopicName or SubscriptionPath

                                                 "SharedAccessSignatureKeyName", 

                                                 "SharedAccessSignatureKey");

         

        String connectionString = connectionStringBuilder.toString();

        </code></pre></p>

    <p>A connection string is basically a string consisted of key-value pair separated by ";". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - URL that points to the servicebus namespace </p></li><li><p>EntityPath - Path to the service bus entity (queue/topic/subscription/). For queues and topics, it is just the entity name. For subscriptions, path is &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></li><li><p>SharedAccessKeyName - Key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - Key value for the corresponding shared access policy rule of the namespace or entity. </p></li><li><p>SharedAccessSignatureToken - Instead of a key name and key value, clients can provide an already generated SAS Token. </p></li><li><p>OperationTimeout - Default timeout to be used for all senders, receiver and clients created from this connection string. </p></li><li><p>RetryPolicy - Name of the retry policy. </p></li></ul></p>
  syntax:
    content: public class ConnectionStringBuilder
