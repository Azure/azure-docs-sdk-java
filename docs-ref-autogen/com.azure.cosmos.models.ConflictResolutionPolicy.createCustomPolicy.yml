### YamlMime:JavaMember
uid: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy*"
fullName: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy"
name: "createCustomPolicy"
nameWithType: "ConflictResolutionPolicy.createCustomPolicy"
members:
- uid: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy()"
  fullName: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy()"
  name: "createCustomPolicy()"
  nameWithType: "ConflictResolutionPolicy.createCustomPolicy()"
  summary: "Creates a CUSTOM <xref uid=\"com.azure.cosmos.models.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> without any <xref uid=\"com.azure.cosmos.implementation.StoredProcedure\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StoredProcedure\"></xref>. User manually should resolve conflicts.\n\nThe conflicts will be registered in the conflicts feed and the user should manually resolve them."
  syntax: "public static ConflictResolutionPolicy createCustomPolicy()"
  returns:
    description: "ConflictResolutionPolicy."
    type: "<xref href=\"com.azure.cosmos.models.ConflictResolutionPolicy?alt=com.azure.cosmos.models.ConflictResolutionPolicy&text=ConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy(java.lang.String)"
  fullName: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy(String conflictResolutionStoredProcFullPath)"
  name: "createCustomPolicy(String conflictResolutionStoredProcFullPath)"
  nameWithType: "ConflictResolutionPolicy.createCustomPolicy(String conflictResolutionStoredProcFullPath)"
  summary: "Creates a CUSTOM <xref uid=\"com.azure.cosmos.models.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> which uses the specified stored procedure to perform conflict resolution\n\nThis stored procedure may be created after the <xref uid=\"com.azure.cosmos.models.CosmosContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosContainerProperties\"></xref> is created and can be changed as required.\n\n *  This method requires conflictResolutionStoredProcFullPath in format dbs/%s/colls/%s/sprocs/%s. User can also use equivalent method <xref uid=\"com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy(java.lang.String,java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#createCustomPolicy(String, String, String)\"></xref>\n *  In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed\n *  The user can provide the stored procedure @see <xref uid=\"com.azure.cosmos.implementation.Resource.getId*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getId()\"></xref>"
  parameters:
  - description: "stored procedure full path to perform conflict resolution."
    name: "conflictResolutionStoredProcFullPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConflictResolutionPolicy createCustomPolicy(String conflictResolutionStoredProcFullPath)"
  returns:
    description: "ConflictResolutionPolicy."
    type: "<xref href=\"com.azure.cosmos.models.ConflictResolutionPolicy?alt=com.azure.cosmos.models.ConflictResolutionPolicy&text=ConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.models.ConflictResolutionPolicy.createCustomPolicy(String dbName, String containerName, String sprocName)"
  name: "createCustomPolicy(String dbName, String containerName, String sprocName)"
  nameWithType: "ConflictResolutionPolicy.createCustomPolicy(String dbName, String containerName, String sprocName)"
  summary: "Creates a CUSTOM <xref uid=\"com.azure.cosmos.models.ConflictResolutionPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConflictResolutionPolicy\"></xref> which uses the specified stored procedure to perform conflict resolution\n\nThis stored procedure may be created after the <xref uid=\"com.azure.cosmos.models.CosmosContainerProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosContainerProperties\"></xref> is created and can be changed as required.\n\n *  In case the stored procedure fails or throws an exception, the conflict resolution will default to registering conflicts in the conflicts feed\n *  The user can provide the stored procedure @see <xref uid=\"com.azure.cosmos.implementation.Resource.getId*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Resource#getId()\"></xref>"
  parameters:
  - description: "database name."
    name: "dbName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "container name."
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "stored procedure name to perform conflict resolution."
    name: "sprocName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConflictResolutionPolicy createCustomPolicy(String dbName, String containerName, String sprocName)"
  returns:
    description: "ConflictResolutionPolicy."
    type: "<xref href=\"com.azure.cosmos.models.ConflictResolutionPolicy?alt=com.azure.cosmos.models.ConflictResolutionPolicy&text=ConflictResolutionPolicy\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.11.0
