### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy"
fullName: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy"
name: "AuthenticationPolicy"
nameWithType: "AuthenticationPolicy"
summary: "Rewrite the Bearer<wbr>Token<wbr>Authentication<wbr>Policy, it will use default scope when scopes parameter is empty."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.http.policy.BearerTokenAuthenticationPolicy?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.core.http.policy.BearerTokenAuthenticationPolicy?alt=com.azure.core.http.policy.BearerTokenAuthenticationPolicy&text=BearerTokenAuthenticationPolicy\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.http.policy.BearerTokenAuthenticationPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)?alt=com.azure.core.http.policy.BearerTokenAuthenticationPolicy.process&text=process\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.policy.BearerTokenAuthenticationPolicy.processSync(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextSyncPolicy)?alt=com.azure.core.http.policy.BearerTokenAuthenticationPolicy.processSync&text=processSync\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.policy.BearerTokenAuthenticationPolicy.setAuthorizationHeader(com.azure.core.http.HttpPipelineCallContext,com.azure.core.credential.TokenRequestContext)?alt=com.azure.core.http.policy.BearerTokenAuthenticationPolicy.setAuthorizationHeader&text=setAuthorizationHeader\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.http.policy.BearerTokenAuthenticationPolicy.setAuthorizationHeaderSync(com.azure.core.http.HttpPipelineCallContext,com.azure.core.credential.TokenRequestContext)?alt=com.azure.core.http.policy.BearerTokenAuthenticationPolicy.setAuthorizationHeaderSync&text=setAuthorizationHeaderSync\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy?alt=com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy&text=ArmChallengeAuthenticationPolicy\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequest(com.azure.core.http.HttpPipelineCallContext)?alt=com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequest&text=authorizeRequest\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequestOnChallenge(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpResponse)?alt=com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequestOnChallenge&text=authorizeRequestOnChallenge\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequestOnChallengeSync(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpResponse)?alt=com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequestOnChallengeSync&text=authorizeRequestOnChallengeSync\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequestSync(com.azure.core.http.HttpPipelineCallContext)?alt=com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequestSync&text=authorizeRequestSync\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.getScopes(com.azure.core.http.HttpPipelineCallContext,java.lang.String[])?alt=com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.getScopes&text=getScopes\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class AuthenticationPolicy extends ArmChallengeAuthenticationPolicy"
constructors:
- uid: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.AuthenticationPolicy(com.azure.core.credential.TokenCredential,com.azure.core.management.AzureEnvironment,java.lang.String...)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  name: "AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  nameWithType: "AuthenticationPolicy.AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  summary: "Creates Authentication<wbr>Policy."
  parameters:
  - description: "the token credential to authenticate the request"
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the environment with endpoints for authentication"
    name: "environment"
    type: "<xref href=\"com.azure.core.management.AzureEnvironment?alt=com.azure.core.management.AzureEnvironment&text=AzureEnvironment\" data-throw-if-not-resolved=\"False\" />"
  - description: "the scopes used in credential, using default scopes when empty"
    name: "scopes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
  syntax: "public AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  desc: "Creates AuthenticationPolicy."
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.getScopes(com.azure.core.http.HttpPipelineCallContext,java.lang.String[])"
  fullName: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.getScopes(HttpPipelineCallContext context, String[] scopes)"
  name: "getScopes(HttpPipelineCallContext context, String[] scopes)"
  nameWithType: "AuthenticationPolicy.getScopes(HttpPipelineCallContext context, String[] scopes)"
  overridden: "com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.getScopes(com.azure.core.http.HttpPipelineCallContext,java.lang.String[])"
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "scopes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
  syntax: "public String[] getScopes(HttpPipelineCallContext context, String[] scopes)"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
type: "class"
desc: "Rewrite the BearerTokenAuthenticationPolicy, it will use default scope when scopes parameter is empty."
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.policy"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
