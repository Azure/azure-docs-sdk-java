### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy"
fullName: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy"
name: "AuthenticationPolicy"
nameWithType: "AuthenticationPolicy"
summary: "Rewrite the Bearer<wbr>Token<wbr>Authentication<wbr>Policy, it will use default scope when scopes parameter is empty."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.http.policy.BearerTokenAuthenticationPolicy?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.http.policy.BearerTokenAuthenticationPolicy.process(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpPipelineNextPolicy)"
- "com.azure.core.http.policy.BearerTokenAuthenticationPolicy.setAuthorizationHeader(com.azure.core.http.HttpPipelineCallContext,com.azure.core.credential.TokenRequestContext)"
- "com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequest(com.azure.core.http.HttpPipelineCallContext)"
- "com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.authorizeRequestOnChallenge(com.azure.core.http.HttpPipelineCallContext,com.azure.core.http.HttpResponse)"
- "com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.getScopes(com.azure.core.http.HttpPipelineCallContext,java.lang.String[])"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AuthenticationPolicy extends ArmChallengeAuthenticationPolicy"
constructors:
- uid: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.AuthenticationPolicy(com.azure.core.credential.TokenCredential,com.azure.core.management.AzureEnvironment,java.lang.String...)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  name: "AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  nameWithType: "AuthenticationPolicy.AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  summary: "Creates Authentication<wbr>Policy."
  parameters:
  - description: "the token credential to authenticate the request"
    name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - description: "the environment with endpoints for authentication"
    name: "environment"
    type: "<xref href=\"com.azure.core.management.AzureEnvironment?alt=com.azure.core.management.AzureEnvironment&text=AzureEnvironment\" data-throw-if-not-resolved=\"False\" />"
  - description: "the scopes used in credential, using default scopes when empty"
    name: "scopes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public AuthenticationPolicy(TokenCredential credential, AzureEnvironment environment, String[] scopes)"
  desc: "Creates AuthenticationPolicy."
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.getScopes(com.azure.core.http.HttpPipelineCallContext,java.lang.String[])"
  fullName: "com.azure.resourcemanager.resources.fluentcore.policy.AuthenticationPolicy.getScopes(HttpPipelineCallContext context, String[] scopes)"
  name: "getScopes(HttpPipelineCallContext context, String[] scopes)"
  nameWithType: "AuthenticationPolicy.getScopes(HttpPipelineCallContext context, String[] scopes)"
  overridden: "com.azure.core.management.http.policy.ArmChallengeAuthenticationPolicy.getScopes(com.azure.core.http.HttpPipelineCallContext,java.lang.String[])"
  parameters:
  - name: "context"
    type: "<xref href=\"com.azure.core.http.HttpPipelineCallContext?alt=com.azure.core.http.HttpPipelineCallContext&text=HttpPipelineCallContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "scopes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public String[] getScopes(HttpPipelineCallContext context, String[] scopes)"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
type: "class"
desc: "Rewrite the BearerTokenAuthenticationPolicy, it will use default scope when scopes parameter is empty."
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.policy"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.16.0
