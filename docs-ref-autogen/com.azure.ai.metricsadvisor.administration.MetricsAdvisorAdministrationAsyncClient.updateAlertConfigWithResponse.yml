### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateAlertConfigWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateAlertConfigWithResponse"
name: "updateAlertConfigWithResponse"
nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateAlertConfigWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateAlertConfigWithResponse(com.azure.ai.metricsadvisor.administration.models.AnomalyAlertConfiguration)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationAsyncClient.updateAlertConfigWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  name: "updateAlertConfigWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  nameWithType: "MetricsAdvisorAdministrationAsyncClient.updateAlertConfigWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  summary: "Update anomaly alert configuration.\n\n**Code sample**\n\n```java\nString alertConfigId = \"1p0f8er30-6e6e-4391-b78f-bpfdfee1e6f5\";\n String additionalHookId = \"2gh8er30-6e6e-4391-b78f-bpfdfee1e6f5\";\n\n metricsAdvisorAdminAsyncClient.getAlertConfig(alertConfigId)\n     .flatMap(existingAnomalyConfig -> {\n         List<String> hookIds = new ArrayList<>(existingAnomalyConfig.getHookIdsToAlert());\n         hookIds.add(additionalHookId);\n         return metricsAdvisorAdminAsyncClient.updateAlertConfigWithResponse(\n             existingAnomalyConfig\n                 .setHookIdsToAlert(hookIds)\n                 .setDescription(\"updated to add more hook ids\"));\n     }).subscribe(alertConfigurationResponse -> {\n         System.out.printf(\"Update anomaly alert operation status: %s%n\",\n             alertConfigurationResponse.getStatusCode());\n         final AnomalyAlertConfiguration updatAnomalyAlertConfiguration = alertConfigurationResponse.getValue();\n         System.out.printf(\"Updated anomaly alert configuration Id: %s%n\",\n             updatAnomalyAlertConfiguration.getId());\n         System.out.printf(\"Updated anomaly alert configuration description: %s%n\",\n             updatAnomalyAlertConfiguration.getDescription());\n         System.out.printf(\"Updated anomaly alert configuration hook ids: %s%n\",\n             updatAnomalyAlertConfiguration.getHookIdsToAlert());\n     });\n```"
  parameters:
  - description: "The anomaly alert configuration to update."
    name: "alertConfiguration"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.AnomalyAlertConfiguration?alt=com.azure.ai.metricsadvisor.administration.models.AnomalyAlertConfiguration&text=AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<AnomalyAlertConfiguration>> updateAlertConfigWithResponse(AnomalyAlertConfiguration alertConfiguration)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> of a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the <xref uid=\"com.azure.ai.metricsadvisor.administration.models.AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AnomalyAlertConfiguration\"></xref> that was updated."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.AnomalyAlertConfiguration?alt=com.azure.ai.metricsadvisor.administration.models.AnomalyAlertConfiguration&text=AnomalyAlertConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.1.1
