### YamlMime:JavaMember
nameWithType: CloudBlob.uploadFromByteArray
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  nameWithType: CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  parameters:
  - description: <p>A <code>byte</code> array which represents the data to write to the blob. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    name: offset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer.</p>
    name: length
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>byte</code> array which represents the data to write to the blob. </p>
    name: buffer
    type: <xref href="final+byte+%5B%5D?alt=final+byte+%5B%5D&text=final+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>int</code> which represents the offset of the byte array from which to start the data upload. </p>
    name: offset
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <code>int</code> which represents the number of bytes to upload from the input buffer. </p>
    name: length
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uploads a blob from data in a byte array. If the blob already exists on the service, it will be overwritten.</p>

    <p></p>
  syntax: public void uploadFromByteArray(final byte[] buffer, final int offset, final int length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray(final byte [],final int,final int,final AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray*
fullName: com.microsoft.azure.storage.blob.CloudBlob.uploadFromByteArray
name: uploadFromByteArray(final byte[] buffer, final int offset, final int length)
package: com.microsoft.azure.storage.blob
metadata: {}
