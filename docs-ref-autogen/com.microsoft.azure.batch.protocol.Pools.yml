### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.Pools
  id: Pools
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter)
  - com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter,PoolAddOptions)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter,PoolAddOptions)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter,PoolAddOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter)
  - com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter,PoolAddOptions)
  - com.microsoft.azure.batch.protocol.Pools.delete(String)
  - com.microsoft.azure.batch.protocol.Pools.delete(String,PoolDeleteOptions)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(String,PoolDeleteOptions)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(String,PoolDeleteOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String,PoolDeleteOptions)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String,PoolDisableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String,PoolDisableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String,PoolDisableAutoScaleOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String,PoolDisableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String,PoolEnableAutoScaleParameter)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String,PoolEnableAutoScaleParameter)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String,String)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String,String,PoolEvaluateAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String,final ServiceCallback<AutoScaleRun>)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String,PoolEvaluateAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String,PoolEvaluateAutoScaleOptions,final ServiceCallback<AutoScaleRun>)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String,String)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String,String,PoolEvaluateAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.exists(String)
  - com.microsoft.azure.batch.protocol.Pools.exists(String,PoolExistsOptions)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(String,final ServiceCallback<Boolean>)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(String,PoolExistsOptions)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(String,PoolExistsOptions,final ServiceCallback<Boolean>)
  - com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String,PoolExistsOptions)
  - com.microsoft.azure.batch.protocol.Pools.get(String)
  - com.microsoft.azure.batch.protocol.Pools.get(String,PoolGetOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(final ServiceCallback<PoolStatistics>)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions,final ServiceCallback<PoolStatistics>)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(String,final ServiceCallback<CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(String,PoolGetOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(String,PoolGetOptions,final ServiceCallback<CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String,PoolGetOptions)
  - com.microsoft.azure.batch.protocol.Pools.list()
  - com.microsoft.azure.batch.protocol.Pools.list(final PoolListOptions)
  - com.microsoft.azure.batch.protocol.Pools.listAsync()
  - com.microsoft.azure.batch.protocol.Pools.listAsync(final ListOperationCallback<CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listAsync(final PoolListOptions)
  - com.microsoft.azure.batch.protocol.Pools.listAsync(final PoolListOptions,final ListOperationCallback<CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listNext(final String)
  - com.microsoft.azure.batch.protocol.Pools.listNext(final String,final PoolListNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String,final PoolListNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String,final PoolListNextOptions,final ServiceFuture<List<CloudPool>>,final ListOperationCallback<CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String,final ServiceFuture<List<CloudPool>>,final ListOperationCallback<CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(final String,final PoolListNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(final PoolListUsageMetricsOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final ListOperationCallback<PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions,final ListOperationCallback<PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(final String)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(final String,final PoolListUsageMetricsNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(final String)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(final String,final PoolListUsageMetricsNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(final PoolListUsageMetricsOptions)
  - com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(final PoolListOptions)
  - com.microsoft.azure.batch.protocol.Pools.patch(String,PoolPatchParameter)
  - com.microsoft.azure.batch.protocol.Pools.patch(String,PoolPatchParameter,PoolPatchOptions)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,PoolPatchOptions)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,PoolPatchOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String,PoolPatchParameter)
  - com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String,PoolPatchParameter,PoolPatchOptions)
  - com.microsoft.azure.batch.protocol.Pools.removeNodes(String,NodeRemoveParameter)
  - com.microsoft.azure.batch.protocol.Pools.removeNodes(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String,NodeRemoveParameter)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  - com.microsoft.azure.batch.protocol.Pools.resize(String,PoolResizeParameter)
  - com.microsoft.azure.batch.protocol.Pools.resize(String,PoolResizeParameter,PoolResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter,PoolResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter,PoolResizeOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String,PoolResizeParameter)
  - com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String,PoolResizeParameter,PoolResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.stopResize(String)
  - com.microsoft.azure.batch.protocol.Pools.stopResize(String,PoolStopResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String,PoolStopResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String,PoolStopResizeOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String,PoolStopResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.updateProperties(String,PoolUpdatePropertiesParameter)
  - com.microsoft.azure.batch.protocol.Pools.updateProperties(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions,final ServiceCallback<Void>)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String,PoolUpdatePropertiesParameter)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: Pools
  nameWithType: Pools
  fullName: com.microsoft.azure.batch.protocol.Pools
  type: Interface
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
      branch: master
      repo: https://github.com/Azure/azure-batch-sdk-for-java
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 67
  package: com.microsoft.azure.batch.protocol
  summary: "<p>An instance of this class provides access to all the operations defined in Pools. </p>"
  syntax:
    content: public interface Pools
- uid: com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter)
  id: add(PoolAddParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: add(PoolAddParameter pool)
  nameWithType: Pools.add(PoolAddParameter pool)
  fullName: com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter pool)
  overload: com.microsoft.azure.batch.protocol.Pools.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 239
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public void add(PoolAddParameter pool)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter,PoolAddOptions)
  id: add(PoolAddParameter,PoolAddOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  nameWithType: Pools.add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.add*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 281
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public void add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter)
  id: addAsync(PoolAddParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: addAsync(PoolAddParameter pool)
  nameWithType: Pools.addAsync(PoolAddParameter pool)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 260
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> addAsync(PoolAddParameter pool)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter,final ServiceCallback<Void>)
  id: addAsync(PoolAddParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: addAsync(PoolAddParameter pool, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.addAsync(PoolAddParameter pool, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 250
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> addAsync(PoolAddParameter pool, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter,PoolAddOptions)
  id: addAsync(PoolAddParameter,PoolAddOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  nameWithType: Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 304
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter,PoolAddOptions,final ServiceCallback<Void>)
  id: addAsync(PoolAddParameter,PoolAddOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 293
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter)
  id: addWithServiceResponseAsync(PoolAddParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: addWithServiceResponseAsync(PoolAddParameter pool)
  nameWithType: Pools.addWithServiceResponseAsync(PoolAddParameter pool)
  fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool)
  overload: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 270
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolAddHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter,PoolAddOptions)
  id: addWithServiceResponseAsync(PoolAddParameter,PoolAddOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  nameWithType: Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 315
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Adds a pool to the specified account. When naming pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: <p>The pool to be added. </p>
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolAddHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.delete(String)
  id: delete(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: delete(String poolId)
  nameWithType: Pools.delete(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.delete(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 399
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public void delete(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.delete(String,PoolDeleteOptions)
  id: delete(String,PoolDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: delete(String poolId, PoolDeleteOptions poolDeleteOptions)
  nameWithType: Pools.delete(String poolId, PoolDeleteOptions poolDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.delete(String poolId, PoolDeleteOptions poolDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.delete*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 441
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public void delete(String poolId, PoolDeleteOptions poolDeleteOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String)
  id: deleteAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: deleteAsync(String poolId)
  nameWithType: Pools.deleteAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 420
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String,final ServiceCallback<Void>)
  id: deleteAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: deleteAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.deleteAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 410
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String poolId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String,PoolDeleteOptions)
  id: deleteAsync(String,PoolDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  nameWithType: Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 464
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String,PoolDeleteOptions,final ServiceCallback<Void>)
  id: deleteAsync(String,PoolDeleteOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 453
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String)
  id: deleteWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String poolId)
  nameWithType: Pools.deleteWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 430
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolDeleteHeaders>> deleteWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolDeleteHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String,PoolDeleteOptions)
  id: deleteWithServiceResponseAsync(String,PoolDeleteOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  nameWithType: Pools.deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 475
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Deletes a pool from the specified account. When you request that a pool be deleted, the following actions occur: the pool state is set to deleting; any ongoing resize operation on the pool are stopped; the Batch service starts resizing the pool to zero nodes; any tasks running on existing nodes are terminated and requeued (as if a resize pool operation had been requested with the default requeue option); finally, the pool is removed from the system. Because running tasks are requeued, the user can rerun these tasks by updating their job to target a different pool. The tasks can then run on the new pool. If you want to override the requeue behavior, then you should call resize pool explicitly to shrink the pool to zero size before deleting the pool. If you call an Update, Patch or Delete API on a pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolDeleteHeaders>> deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to delete. </p>
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolDeleteHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String)
  id: disableAutoScale(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScale(String poolId)
  nameWithType: Pools.disableAutoScale(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScale*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 742
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public void disableAutoScale(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String,PoolDisableAutoScaleOptions)
  id: disableAutoScale(String,PoolDisableAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  nameWithType: Pools.disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScale*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 780
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public void disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String)
  id: disableAutoScaleAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScaleAsync(String poolId)
  nameWithType: Pools.disableAutoScaleAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 761
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> disableAutoScaleAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String,final ServiceCallback<Void>)
  id: disableAutoScaleAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScaleAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.disableAutoScaleAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 752
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> disableAutoScaleAsync(String poolId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String,PoolDisableAutoScaleOptions)
  id: disableAutoScaleAsync(String,PoolDisableAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  nameWithType: Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 801
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String,PoolDisableAutoScaleOptions,final ServiceCallback<Void>)
  id: disableAutoScaleAsync(String,PoolDisableAutoScaleOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 791
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String)
  id: disableAutoScaleWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScaleWithServiceResponseAsync(String poolId)
  nameWithType: Pools.disableAutoScaleWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 770
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolDisableAutoScaleHeaders>> disableAutoScaleWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String,PoolDisableAutoScaleOptions)
  id: disableAutoScaleWithServiceResponseAsync(String,PoolDisableAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  nameWithType: Pools.disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 811
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Disables automatic scaling for a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolDisableAutoScaleHeaders>> disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to disable automatic scaling. </p>
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String,PoolEnableAutoScaleParameter)
  id: enableAutoScale(String,PoolEnableAutoScaleParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  nameWithType: Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScale*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 823
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public void enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  id: enableAutoScale(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  nameWithType: Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScale*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 869
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public void enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter)
  id: enableAutoScaleAsync(String,PoolEnableAutoScaleParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 846
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,final ServiceCallback<Void>)
  id: enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 835
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  id: enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 894
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions,final ServiceCallback<Void>)
  id: enableAutoScaleAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 882
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String,PoolEnableAutoScaleParameter)
  id: enableAutoScaleWithServiceResponseAsync(String,PoolEnableAutoScaleParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  nameWithType: Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 857
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolEnableAutoScaleHeaders>> enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  id: enableAutoScaleWithServiceResponseAsync(String,PoolEnableAutoScaleParameter,PoolEnableAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  nameWithType: Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 906
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Enables automatic scaling for a pool. You cannot enable automatic scaling on a pool if a resize operation is in progress on the pool. If automatic scaling of the pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same pool more than once every 30 seconds.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolEnableAutoScaleHeaders>> enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to enable automatic scaling. </p>
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: <p>The parameters for the request. </p>
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String,String)
  id: evaluateAutoScale(String,String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScale(String poolId, String autoScaleFormula)
  nameWithType: Pools.evaluateAutoScale(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 919
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: <p>the AutoScaleRun object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String,String,PoolEvaluateAutoScaleOptions)
  id: evaluateAutoScale(String,String,PoolEvaluateAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  nameWithType: Pools.evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 966
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: <p>the AutoScaleRun object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String)
  id: evaluateAutoScaleAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 942
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public Observable<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
      description: <p>the observable to the AutoScaleRun object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String,final ServiceCallback<AutoScaleRun>)
  id: evaluateAutoScaleAsync(String,String,final ServiceCallback<AutoScaleRun>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula, final ServiceCallback<AutoScaleRun> serviceCallback)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, final ServiceCallback<AutoScaleRun> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, final ServiceCallback<AutoScaleRun> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 931
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, final ServiceCallback<AutoScaleRun> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String,PoolEvaluateAutoScaleOptions)
  id: evaluateAutoScaleAsync(String,String,PoolEvaluateAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 991
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public Observable<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
      description: <p>the observable to the AutoScaleRun object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String,String,PoolEvaluateAutoScaleOptions,final ServiceCallback<AutoScaleRun>)
  id: evaluateAutoScaleAsync(String,String,PoolEvaluateAutoScaleOptions,final ServiceCallback<AutoScaleRun>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, final ServiceCallback<AutoScaleRun> serviceCallback)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, final ServiceCallback<AutoScaleRun> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, final ServiceCallback<AutoScaleRun> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 979
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, final ServiceCallback<AutoScaleRun> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String,String)
  id: evaluateAutoScaleWithServiceResponseAsync(String,String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
  nameWithType: Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 953
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<AutoScaleRun, PoolEvaluateAutoScaleHeaders>> evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.AutoScaleRunb33c76fccom.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaderse7daa122
      description: <p>the observable to the AutoScaleRun object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String,String,PoolEvaluateAutoScaleOptions)
  id: evaluateAutoScaleWithServiceResponseAsync(String,String,PoolEvaluateAutoScaleOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  nameWithType: Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1003
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets the result of evaluating an automatic scaling formula on the pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the pool. The pool must have auto scaling enabled in order to evaluate a formula.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<AutoScaleRun, PoolEvaluateAutoScaleHeaders>> evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool on which to evaluate the automatic scaling formula. </p>
    - id: autoScaleFormula
      type: "26831127"
      description: <p>The formula for the desired number of compute nodes in the pool. The formula is validated and its results calculated, but it is not applied to the pool. To apply the formula to the pool, 'Enable automatic scaling on a pool'. For more information about specifying this formula, see Automatically scale compute nodes in an Azure Batch pool (<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>). </p>
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.AutoScaleRunb33c76fccom.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaderse7daa122
      description: <p>the observable to the AutoScaleRun object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.exists(String)
  id: exists(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: exists(String poolId)
  nameWithType: Pools.exists(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.exists(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.exists*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 486
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public boolean exists(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    return:
      type: 4fc6e284
      description: <p>the boolean object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.exists(String,PoolExistsOptions)
  id: exists(String,PoolExistsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: exists(String poolId, PoolExistsOptions poolExistsOptions)
  nameWithType: Pools.exists(String poolId, PoolExistsOptions poolExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.exists(String poolId, PoolExistsOptions poolExistsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.exists*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 525
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public boolean exists(String poolId, PoolExistsOptions poolExistsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 4fc6e284
      description: <p>the boolean object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(String)
  id: existsAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: existsAsync(String poolId)
  nameWithType: Pools.existsAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 505
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Boolean> existsAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    return:
      type: fc46b980
      description: <p>the observable to the boolean object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(String,final ServiceCallback<Boolean>)
  id: existsAsync(String,final ServiceCallback<Boolean>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: existsAsync(String poolId, final ServiceCallback<Boolean> serviceCallback)
  nameWithType: Pools.existsAsync(String poolId, final ServiceCallback<Boolean> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, final ServiceCallback<Boolean> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 496
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Boolean> existsAsync(String poolId, final ServiceCallback<Boolean> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: serviceCallback
      type: 6f2975c3
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 224be454
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(String,PoolExistsOptions)
  id: existsAsync(String,PoolExistsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
  nameWithType: Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 546
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Boolean> existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: fc46b980
      description: <p>the observable to the boolean object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(String,PoolExistsOptions,final ServiceCallback<Boolean>)
  id: existsAsync(String,PoolExistsOptions,final ServiceCallback<Boolean>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: existsAsync(String poolId, PoolExistsOptions poolExistsOptions, final ServiceCallback<Boolean> serviceCallback)
  nameWithType: Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions, final ServiceCallback<Boolean> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions, final ServiceCallback<Boolean> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 536
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Boolean> existsAsync(String poolId, PoolExistsOptions poolExistsOptions, final ServiceCallback<Boolean> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 6f2975c3
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: 224be454
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String)
  id: existsWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: existsWithServiceResponseAsync(String poolId)
  nameWithType: Pools.existsWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 514
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Boolean, PoolExistsHeaders>> existsWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    return:
      type: 3fcc2274com.microsoft.azure.batch.protocol.models.PoolExistsHeaderse7daa122
      description: <p>the observable to the boolean object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String,PoolExistsOptions)
  id: existsWithServiceResponseAsync(String,PoolExistsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
  nameWithType: Pools.existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 556
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets basic properties of a pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Boolean, PoolExistsHeaders>> existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 3fcc2274com.microsoft.azure.batch.protocol.models.PoolExistsHeaderse7daa122
      description: <p>the observable to the boolean object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.get(String)
  id: get(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: get(String poolId)
  nameWithType: Pools.get(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.get(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 567
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public CloudPool get(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: <p>the CloudPool object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.get(String,PoolGetOptions)
  id: get(String,PoolGetOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: get(String poolId, PoolGetOptions poolGetOptions)
  nameWithType: Pools.get(String poolId, PoolGetOptions poolGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.get(String poolId, PoolGetOptions poolGetOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 606
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public CloudPool get(String poolId, PoolGetOptions poolGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: <p>the CloudPool object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()
  id: getAllLifetimeStatistics()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatistics()
  nameWithType: Pools.getAllLifetimeStatistics()
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 158
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public PoolStatistics getAllLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: <p>the PoolStatistics object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  nameWithType: Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 197
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public PoolStatistics getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: <p>the PoolStatistics object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()
  id: getAllLifetimeStatisticsAsync()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync()
  nameWithType: Pools.getAllLifetimeStatisticsAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 177
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<PoolStatistics> getAllLifetimeStatisticsAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
      description: <p>the observable to the PoolStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(final ServiceCallback<PoolStatistics>)
  id: getAllLifetimeStatisticsAsync(final ServiceCallback<PoolStatistics>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(final ServiceCallback<PoolStatistics> serviceCallback)
  nameWithType: Pools.getAllLifetimeStatisticsAsync(final ServiceCallback<PoolStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(final ServiceCallback<PoolStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 168
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<PoolStatistics> getAllLifetimeStatisticsAsync(final ServiceCallback<PoolStatistics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  nameWithType: Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 218
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<PoolStatistics> getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
      description: <p>the observable to the PoolStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions,final ServiceCallback<PoolStatistics>)
  id: getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions,final ServiceCallback<PoolStatistics>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, final ServiceCallback<PoolStatistics> serviceCallback)
  nameWithType: Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, final ServiceCallback<PoolStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, final ServiceCallback<PoolStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 208
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<PoolStatistics> getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, final ServiceCallback<PoolStatistics> serviceCallback)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  id: getAllLifetimeStatisticsWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync()
  nameWithType: Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 186
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<PoolStatistics, PoolGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.PoolStatisticsb33c76fccom.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaderse7daa122
      description: <p>the observable to the PoolStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  nameWithType: Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 228
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets lifetime summary statistics for all of the pools in the specified account. Statistics are aggregated across all pools that have ever existed in the account, from account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<PoolStatistics, PoolGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.PoolStatisticsb33c76fccom.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaderse7daa122
      description: <p>the observable to the PoolStatistics object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(String)
  id: getAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAsync(String poolId)
  nameWithType: Pools.getAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 586
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CloudPool> getAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the observable to the CloudPool object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(String,final ServiceCallback<CloudPool>)
  id: getAsync(String,final ServiceCallback<CloudPool>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAsync(String poolId, final ServiceCallback<CloudPool> serviceCallback)
  nameWithType: Pools.getAsync(String poolId, final ServiceCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, final ServiceCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 577
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CloudPool> getAsync(String poolId, final ServiceCallback<CloudPool> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(String,PoolGetOptions)
  id: getAsync(String,PoolGetOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAsync(String poolId, PoolGetOptions poolGetOptions)
  nameWithType: Pools.getAsync(String poolId, PoolGetOptions poolGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, PoolGetOptions poolGetOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 627
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<CloudPool> getAsync(String poolId, PoolGetOptions poolGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: c2d0e8c6com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the observable to the CloudPool object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(String,PoolGetOptions,final ServiceCallback<CloudPool>)
  id: getAsync(String,PoolGetOptions,final ServiceCallback<CloudPool>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getAsync(String poolId, PoolGetOptions poolGetOptions, final ServiceCallback<CloudPool> serviceCallback)
  nameWithType: Pools.getAsync(String poolId, PoolGetOptions poolGetOptions, final ServiceCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, PoolGetOptions poolGetOptions, final ServiceCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 617
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<CloudPool> getAsync(String poolId, PoolGetOptions poolGetOptions, final ServiceCallback<CloudPool> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 897eb10acom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: c522ce07com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String)
  id: getWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId)
  nameWithType: Pools.getWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 595
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudPool, PoolGetHeaders>> getWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.CloudPoolb33c76fccom.microsoft.azure.batch.protocol.models.PoolGetHeaderse7daa122
      description: <p>the observable to the CloudPool object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String,PoolGetOptions)
  id: getWithServiceResponseAsync(String,PoolGetOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
  nameWithType: Pools.getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 637
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Gets information about the specified pool.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<CloudPool, PoolGetHeaders>> getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to get. </p>
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: cc516622com.microsoft.azure.batch.protocol.models.CloudPoolb33c76fccom.microsoft.azure.batch.protocol.models.PoolGetHeaderse7daa122
      description: <p>the observable to the CloudPool object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.list()
  id: list()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: list()
  nameWithType: Pools.list()
  fullName: com.microsoft.azure.batch.protocol.Pools.list()
  overload: com.microsoft.azure.batch.protocol.Pools.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 325
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudPool> list()
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the PagedList&lt;CloudPool&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.list(final PoolListOptions)
  id: list(final PoolListOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: list(final PoolListOptions poolListOptions)
  nameWithType: Pools.list(final PoolListOptions poolListOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.list(final PoolListOptions poolListOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.list*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 360
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudPool> list(final PoolListOptions poolListOptions)
    parameters:
    - id: poolListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the PagedList&lt;CloudPool&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync()
  id: listAsync()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listAsync()
  nameWithType: Pools.listAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 342
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudPool>> listAsync()
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync(final ListOperationCallback<CloudPool>)
  id: listAsync(final ListOperationCallback<CloudPool>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listAsync(final ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listAsync(final ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync(final ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 334
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudPool>> listAsync(final ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync(final PoolListOptions)
  id: listAsync(final PoolListOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listAsync(final PoolListOptions poolListOptions)
  nameWithType: Pools.listAsync(final PoolListOptions poolListOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync(final PoolListOptions poolListOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 379
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudPool>> listAsync(final PoolListOptions poolListOptions)
    parameters:
    - id: poolListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync(final PoolListOptions,final ListOperationCallback<CloudPool>)
  id: listAsync(final PoolListOptions,final ListOperationCallback<CloudPool>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listAsync(final PoolListOptions poolListOptions, final ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listAsync(final PoolListOptions poolListOptions, final ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync(final PoolListOptions poolListOptions, final ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 370
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudPool>> listAsync(final PoolListOptions poolListOptions, final ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: poolListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNext(final String)
  id: listNext(final String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNext(final String nextPageLink)
  nameWithType: Pools.listNext(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1477
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudPool> listNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the PagedList&lt;CloudPool&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNext(final String,final PoolListNextOptions)
  id: listNext(final String,final PoolListNextOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNext(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  nameWithType: Pools.listNext(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNext(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1517
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<CloudPool> listNext(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the PagedList&lt;CloudPool&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String)
  id: listNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink)
  nameWithType: Pools.listNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1497
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudPool>> listNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String,final PoolListNextOptions)
  id: listNextAsync(final String,final PoolListNextOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  nameWithType: Pools.listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1539
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<CloudPool>> listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String,final PoolListNextOptions,final ServiceFuture<List<CloudPool>>,final ListOperationCallback<CloudPool>)
  id: listNextAsync(final String,final PoolListNextOptions,final ServiceFuture<List<CloudPool>>,final ListOperationCallback<CloudPool>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1529
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudPool>> listNextAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String,final ServiceFuture<List<CloudPool>>,final ListOperationCallback<CloudPool>)
  id: listNextAsync(final String,final ServiceFuture<List<CloudPool>>,final ListOperationCallback<CloudPool>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1488
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<CloudPool>> listNextAsync(final String nextPageLink, final ServiceFuture<List<CloudPool>> serviceFuture, final ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(final String)
  id: listNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Pools.listNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1506
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudPool>, PoolListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudPool8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(final String,final PoolListNextOptions)
  id: listNextWithServiceResponseAsync(final String,final PoolListNextOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listNextWithServiceResponseAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  nameWithType: Pools.listNextWithServiceResponseAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1549
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudPool>, PoolListHeaders>> listNextWithServiceResponseAsync(final String nextPageLink, final PoolListNextOptions poolListNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudPool8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()
  id: listUsageMetrics()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetrics()
  nameWithType: Pools.listUsageMetrics()
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 77
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<PoolUsageMetrics> listUsageMetrics()
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the PagedList&lt;PoolUsageMetrics&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(final PoolListUsageMetricsOptions)
  id: listUsageMetrics(final PoolListUsageMetricsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetrics(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  nameWithType: Pools.listUsageMetrics(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 116
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<PoolUsageMetrics> listUsageMetrics(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
    parameters:
    - id: poolListUsageMetricsOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the PagedList&lt;PoolUsageMetrics&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()
  id: listUsageMetricsAsync()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsAsync()
  nameWithType: Pools.listUsageMetricsAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 96
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<PoolUsageMetrics>> listUsageMetricsAsync()
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final ListOperationCallback<PoolUsageMetrics>)
  id: listUsageMetricsAsync(final ListOperationCallback<PoolUsageMetrics>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsAsync(final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsAsync(final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 87
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsAsync(final ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions)
  id: listUsageMetricsAsync(final PoolListUsageMetricsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  nameWithType: Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 137
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<PoolUsageMetrics>> listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
    parameters:
    - id: poolListUsageMetricsOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions,final ListOperationCallback<PoolUsageMetrics>)
  id: listUsageMetricsAsync(final PoolListUsageMetricsOptions,final ListOperationCallback<PoolUsageMetrics>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 127
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: poolListUsageMetricsOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(final String)
  id: listUsageMetricsNext(final String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNext(final String nextPageLink)
  nameWithType: Pools.listUsageMetricsNext(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1387
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<PoolUsageMetrics> listUsageMetricsNext(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the PagedList&lt;PoolUsageMetrics&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(final String,final PoolListUsageMetricsNextOptions)
  id: listUsageMetricsNext(final String,final PoolListUsageMetricsNextOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNext(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  nameWithType: Pools.listUsageMetricsNext(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1431
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public PagedList<PoolUsageMetrics> listUsageMetricsNext(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListUsageMetricsNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 36b27be0com.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the PagedList&lt;PoolUsageMetrics&gt; object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String)
  id: listUsageMetricsNextAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNextAsync(final String nextPageLink)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1409
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions)
  id: listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1455
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListUsageMetricsNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 32da0907com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
  id: listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1444
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListUsageMetricsNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
  id: listUsageMetricsNextAsync(final String,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1399
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: serviceFuture
      type: bd82102acom.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    - id: serviceCallback
      type: 3c4303efcom.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: b7698b59com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(final String)
  id: listUsageMetricsNextWithServiceResponseAsync(final String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink)
  nameWithType: Pools.listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1419
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>, PoolListUsageMetricsHeaders>> listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.PoolUsageMetrics8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaderse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(final String,final PoolListUsageMetricsNextOptions)
  id: listUsageMetricsNextWithServiceResponseAsync(final String,final PoolListUsageMetricsNextOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  nameWithType: Pools.listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1466
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>, PoolListUsageMetricsHeaders>> listUsageMetricsNextWithServiceResponseAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
    parameters:
    - id: nextPageLink
      type: 3d93591e
      description: <p>The NextLink from the previous successful call to List operation. </p>
    - id: poolListUsageMetricsNextOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.PoolUsageMetrics8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaderse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()
  id: listUsageMetricsWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsWithServiceResponseAsync()
  nameWithType: Pools.listUsageMetricsWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 105
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>, PoolListUsageMetricsHeaders>> listUsageMetricsWithServiceResponseAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.PoolUsageMetrics8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaderse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(final PoolListUsageMetricsOptions)
  id: listUsageMetricsWithServiceResponseAsync(final PoolListUsageMetricsOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listUsageMetricsWithServiceResponseAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  nameWithType: Pools.listUsageMetricsWithServiceResponseAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 147
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>, PoolListUsageMetricsHeaders>> listUsageMetricsWithServiceResponseAsync(final PoolListUsageMetricsOptions poolListUsageMetricsOptions)
    parameters:
    - id: poolListUsageMetricsOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.PoolUsageMetrics8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaderse7daa122
      description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: Pools.listWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 350
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudPool>, PoolListHeaders>> listWithServiceResponseAsync()
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudPool8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(final PoolListOptions)
  id: listWithServiceResponseAsync(final PoolListOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: listWithServiceResponseAsync(final PoolListOptions poolListOptions)
  nameWithType: Pools.listWithServiceResponseAsync(final PoolListOptions poolListOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(final PoolListOptions poolListOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 388
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Lists all of the pools in the specified account.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Page<CloudPool>, PoolListHeaders>> listWithServiceResponseAsync(final PoolListOptions poolListOptions)
    parameters:
    - id: poolListOptions
      type: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudPool8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListHeaderse7daa122
      description: <p>the observable to the PagedList&lt;CloudPool&gt; object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patch(String,PoolPatchParameter)
  id: patch(String,PoolPatchParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patch(String poolId, PoolPatchParameter poolPatchParameter)
  nameWithType: Pools.patch(String poolId, PoolPatchParameter poolPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.patch(String poolId, PoolPatchParameter poolPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.patch*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 649
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public void patch(String poolId, PoolPatchParameter poolPatchParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patch(String,PoolPatchParameter,PoolPatchOptions)
  id: patch(String,PoolPatchParameter,PoolPatchOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  nameWithType: Pools.patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.patch*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 695
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public void patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter)
  id: patchAsync(String,PoolPatchParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 672
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,final ServiceCallback<Void>)
  id: patchAsync(String,PoolPatchParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 661
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,PoolPatchOptions)
  id: patchAsync(String,PoolPatchParameter,PoolPatchOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 720
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(String,PoolPatchParameter,PoolPatchOptions,final ServiceCallback<Void>)
  id: patchAsync(String,PoolPatchParameter,PoolPatchOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 708
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String,PoolPatchParameter)
  id: patchWithServiceResponseAsync(String,PoolPatchParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
  nameWithType: Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 683
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolPatchHeaders>> patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolPatchHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String,PoolPatchParameter,PoolPatchOptions)
  id: patchWithServiceResponseAsync(String,PoolPatchParameter,PoolPatchOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  nameWithType: Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 732
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This only replaces the pool properties specified in the request. For example, if the pool has a start task associated with it, and a request does not specify a start task element, then the pool keeps the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolPatchHeaders>> patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: <p>The parameters for the request. </p>
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolPatchHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodes(String,NodeRemoveParameter)
  id: removeNodes(String,NodeRemoveParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
  nameWithType: Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodes*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1292
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public void removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodes(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  id: removeNodes(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  nameWithType: Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodes*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1338
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public void removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter)
  id: removeNodesAsync(String,NodeRemoveParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1315
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter,final ServiceCallback<Void>)
  id: removeNodesAsync(String,NodeRemoveParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1304
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  id: removeNodesAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1363
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions,final ServiceCallback<Void>)
  id: removeNodesAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1351
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String,NodeRemoveParameter)
  id: removeNodesWithServiceResponseAsync(String,NodeRemoveParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  nameWithType: Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1326
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolRemoveNodesHeaders>> removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  id: removeNodesWithServiceResponseAsync(String,NodeRemoveParameter,PoolRemoveNodesOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  nameWithType: Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1375
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Removes compute nodes from the specified pool. This operation can only run when the allocation state of the pool is steady. When this operation runs, the allocation state changes from steady to resizing.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolRemoveNodesHeaders>> removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool from which you want to remove nodes. </p>
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: <p>The parameters for the request. </p>
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resize(String,PoolResizeParameter)
  id: resize(String,PoolResizeParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resize(String poolId, PoolResizeParameter poolResizeParameter)
  nameWithType: Pools.resize(String poolId, PoolResizeParameter poolResizeParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.resize(String poolId, PoolResizeParameter poolResizeParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.resize*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1015
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public void resize(String poolId, PoolResizeParameter poolResizeParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resize(String,PoolResizeParameter,PoolResizeOptions)
  id: resize(String,PoolResizeParameter,PoolResizeOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  nameWithType: Pools.resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.resize*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1061
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public void resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter)
  id: resizeAsync(String,PoolResizeParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1038
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter,final ServiceCallback<Void>)
  id: resizeAsync(String,PoolResizeParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1027
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter,PoolResizeOptions)
  id: resizeAsync(String,PoolResizeParameter,PoolResizeOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1086
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String,PoolResizeParameter,PoolResizeOptions,final ServiceCallback<Void>)
  id: resizeAsync(String,PoolResizeParameter,PoolResizeOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1074
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String,PoolResizeParameter)
  id: resizeWithServiceResponseAsync(String,PoolResizeParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
  nameWithType: Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1049
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolResizeHeaders>> resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolResizeHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String,PoolResizeParameter,PoolResizeOptions)
  id: resizeWithServiceResponseAsync(String,PoolResizeParameter,PoolResizeOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  nameWithType: Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1098
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Changes the number of compute nodes that are assigned to a pool. You can only resize a pool when its allocation state is steady. If the pool is already resizing, the request fails with status code 409. When you resize a pool, the pool's allocation state changes from steady to resizing. You cannot resize pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a pool downwards, the Batch service chooses which nodes to remove. To remove specific nodes, use the pool remove nodes API instead.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolResizeHeaders>> resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to resize. </p>
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: <p>The parameters for the request. </p>
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolResizeHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResize(String)
  id: stopResize(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResize(String poolId)
  nameWithType: Pools.stopResize(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResize(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResize*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1109
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public void stopResize(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResize(String,PoolStopResizeOptions)
  id: stopResize(String,PoolStopResizeOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  nameWithType: Pools.stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResize*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1151
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public void stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String)
  id: stopResizeAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResizeAsync(String poolId)
  nameWithType: Pools.stopResizeAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1130
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> stopResizeAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String,final ServiceCallback<Void>)
  id: stopResizeAsync(String,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResizeAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.stopResizeAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1120
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> stopResizeAsync(String poolId, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String,PoolStopResizeOptions)
  id: stopResizeAsync(String,PoolStopResizeOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  nameWithType: Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1174
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String,PoolStopResizeOptions,final ServiceCallback<Void>)
  id: stopResizeAsync(String,PoolStopResizeOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1163
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String)
  id: stopResizeWithServiceResponseAsync(String)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResizeWithServiceResponseAsync(String poolId)
  nameWithType: Pools.stopResizeWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1140
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolStopResizeHeaders>> stopResizeWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String,PoolStopResizeOptions)
  id: stopResizeWithServiceResponseAsync(String,PoolStopResizeOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  nameWithType: Pools.stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1185
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Stops an ongoing resize operation on the pool. This does not restore the pool to its previous state before the resize operation: it only stops any further changes being made, and the pool maintains its current state. After stopping, the pool stabilizes at the number of nodes it was at when the stop operation was done. During the stop operation, the pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize pool request; this API can also be used to halt the initial sizing of the pool when it is created.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolStopResizeHeaders>> stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool whose resizing you want to stop. </p>
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updateProperties(String,PoolUpdatePropertiesParameter)
  id: updateProperties(String,PoolUpdatePropertiesParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  nameWithType: Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.updateProperties*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1197
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public void updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updateProperties(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  id: updateProperties(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  nameWithType: Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.updateProperties*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1243
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public void updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: <p>Additional parameters for the operation </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
  - type: c8683d81
    description: <p>thrown if the request is rejected by server </p>
  - type: 9b2a4515
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter)
  id: updatePropertiesAsync(String,PoolUpdatePropertiesParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1220
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter,final ServiceCallback<Void>)
  id: updatePropertiesAsync(String,PoolUpdatePropertiesParameter,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1209
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  id: updatePropertiesAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1268
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: dcd884b2
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions,final ServiceCallback<Void>)
  id: updatePropertiesAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions,final ServiceCallback<Void>)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, final ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, final ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1256
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, final ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: <p>Additional parameters for the operation </p>
    - id: serviceCallback
      type: 1c186eb5
      description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    return:
      type: aa81d378
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String,PoolUpdatePropertiesParameter)
  id: updatePropertiesWithServiceResponseAsync(String,PoolUpdatePropertiesParameter)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  nameWithType: Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1231
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolUpdatePropertiesHeaders>> updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  id: updatePropertiesWithServiceResponseAsync(String,PoolUpdatePropertiesParameter,PoolUpdatePropertiesOptions)
  parent: com.microsoft.azure.batch.protocol.Pools
  href: com.microsoft.azure.batch.protocol.Pools.yml
  langs:
  - java
  name: updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  nameWithType: Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/batch/protocol/Pools.java
    startLine: 1280
  package: com.microsoft.azure.batch.protocol
  summary: "<p>Updates the properties of the specified pool. This fully replaces all the updatable properties of the pool. For example, if the pool has a start task associated with it and if start task is not specified with this request, then the Batch service will remove the existing start task.</p>\r\n<p></p>"
  syntax:
    content: public Observable<ServiceResponseWithHeaders<Void, PoolUpdatePropertiesHeaders>> updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
    parameters:
    - id: poolId
      type: "26831127"
      description: <p>The ID of the pool to update. </p>
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: <p>The parameters for the request. </p>
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: <p>Additional parameters for the operation </p>
    return:
      type: 6738ce59com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaderse7daa122
      description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>thrown if parameters fail the validation </p>
references:
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: c8683d81
  spec.java:
  - name: BatchErrorException
    fullName: BatchErrorException
- uid: 9b2a4515
  spec.java:
  - name: RuntimeException
    fullName: RuntimeException
- uid: 36b27be0com.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    href: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics*
  name: listUsageMetrics
  nameWithType: Pools.listUsageMetrics
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics
  package: com.microsoft.azure.batch.protocol
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models.PoolUsageMetricsa08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    href: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    href: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  name: listUsageMetricsAsync
  nameWithType: Pools.listUsageMetricsAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync
  package: com.microsoft.azure.batch.protocol
- uid: 32da0907com.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    href: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models.PoolUsageMetrics8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    href: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
    name: PoolListUsageMetricsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync*
  name: listUsageMetricsWithServiceResponseAsync
  nameWithType: Pools.listUsageMetricsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
    name: PoolListUsageMetricsOptions
    fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
    href: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions.yml
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics*
  name: getAllLifetimeStatistics
  nameWithType: Pools.getAllLifetimeStatistics
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
    href: com.microsoft.azure.batch.protocol.models.PoolStatistics.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
    href: com.microsoft.azure.batch.protocol.models.PoolStatistics.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  name: getAllLifetimeStatisticsAsync
  nameWithType: Pools.getAllLifetimeStatisticsAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.PoolStatisticsa08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
    href: com.microsoft.azure.batch.protocol.models.PoolStatistics.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.PoolStatisticsb33c76fccom.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
    href: com.microsoft.azure.batch.protocol.models.PoolStatistics.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
    name: PoolGetAllLifetimeStatisticsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync*
  name: getAllLifetimeStatisticsWithServiceResponseAsync
  nameWithType: Pools.getAllLifetimeStatisticsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.add*
  name: add
  nameWithType: Pools.add
  fullName: com.microsoft.azure.batch.protocol.Pools.add
  package: com.microsoft.azure.batch.protocol
- uid: 1c186eb5
  spec.java:
  - name: final ServiceCallback<Void>
    fullName: final ServiceCallback<Void>
- uid: aa81d378
  spec.java:
  - name: ServiceFuture<Void>
    fullName: ServiceFuture<Void>
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync*
  name: addAsync
  nameWithType: Pools.addAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync
  package: com.microsoft.azure.batch.protocol
- uid: dcd884b2
  spec.java:
  - name: Observable<Void>
    fullName: Observable<Void>
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolAddHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolAddHeaders
    name: PoolAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolAddHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolAddHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: Pools.addWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 36b27be0com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
  spec.java:
  - name: PagedList<
    fullName: PagedList<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.list*
  name: list
  nameWithType: Pools.list
  fullName: com.microsoft.azure.batch.protocol.Pools.list
  package: com.microsoft.azure.batch.protocol
- uid: 3c4303efcom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
  spec.java:
  - name: final ListOperationCallback<
    fullName: final ListOperationCallback<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>'
    fullName: '>'
- uid: b7698b59com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
  spec.java:
  - name: ServiceFuture<List<
    fullName: ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync*
  name: listAsync
  nameWithType: Pools.listAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: 32da0907com.microsoft.azure.batch.protocol.models.CloudPoole7daa122
  spec.java:
  - name: Observable<Page<
    fullName: Observable<Page<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>>'
    fullName: '>>'
- uid: 442ed5e5com.microsoft.azure.batch.protocol.models.CloudPool8135b5ebcom.microsoft.azure.batch.protocol.models.PoolListHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<Page<
    fullName: Observable<ServiceResponseWithHeaders<Page<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>, '
    fullName: '>, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolListHeaders
    name: PoolListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolListHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolListHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: Pools.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.PoolListOptions
    name: PoolListOptions
    fullName: com.microsoft.azure.batch.protocol.models.PoolListOptions
    href: com.microsoft.azure.batch.protocol.models.PoolListOptions.yml
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.batch.protocol.Pools.delete*
  name: delete
  nameWithType: Pools.delete
  fullName: com.microsoft.azure.batch.protocol.Pools.delete
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  name: deleteAsync
  nameWithType: Pools.deleteAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolDeleteHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
    name: PoolDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: Pools.deleteWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.batch.protocol.Pools.exists*
  name: exists
  nameWithType: Pools.exists
  fullName: com.microsoft.azure.batch.protocol.Pools.exists
  package: com.microsoft.azure.batch.protocol
- uid: 6f2975c3
  spec.java:
  - name: final ServiceCallback<Boolean>
    fullName: final ServiceCallback<Boolean>
- uid: 224be454
  spec.java:
  - name: ServiceFuture<Boolean>
    fullName: ServiceFuture<Boolean>
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  name: existsAsync
  nameWithType: Pools.existsAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync
  package: com.microsoft.azure.batch.protocol
- uid: fc46b980
  spec.java:
  - name: Observable<Boolean>
    fullName: Observable<Boolean>
- uid: 3fcc2274com.microsoft.azure.batch.protocol.models.PoolExistsHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Boolean, '
    fullName: 'Observable<ServiceResponseWithHeaders<Boolean, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
    name: PoolExistsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync*
  name: existsWithServiceResponseAsync
  nameWithType: Pools.existsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.get*
  name: get
  nameWithType: Pools.get
  fullName: com.microsoft.azure.batch.protocol.Pools.get
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync*
  name: getAsync
  nameWithType: Pools.getAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.CloudPoola08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.CloudPoolb33c76fccom.microsoft.azure.batch.protocol.models.PoolGetHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.PoolGetHeaders
    name: PoolGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolGetHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolGetHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Pools.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.patch*
  name: patch
  nameWithType: Pools.patch
  fullName: com.microsoft.azure.batch.protocol.Pools.patch
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  name: patchAsync
  nameWithType: Pools.patchAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolPatchHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
    name: PoolPatchHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync*
  name: patchWithServiceResponseAsync
  nameWithType: Pools.patchWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScale*
  name: disableAutoScale
  nameWithType: Pools.disableAutoScale
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScale
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  name: disableAutoScaleAsync
  nameWithType: Pools.disableAutoScaleAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
    name: PoolDisableAutoScaleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync*
  name: disableAutoScaleWithServiceResponseAsync
  nameWithType: Pools.disableAutoScaleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScale*
  name: enableAutoScale
  nameWithType: Pools.enableAutoScale
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScale
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  name: enableAutoScaleAsync
  nameWithType: Pools.enableAutoScaleAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
    name: PoolEnableAutoScaleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync*
  name: enableAutoScaleWithServiceResponseAsync
  nameWithType: Pools.enableAutoScaleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale*
  name: evaluateAutoScale
  nameWithType: Pools.evaluateAutoScale
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale
  package: com.microsoft.azure.batch.protocol
- uid: 897eb10acom.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
  spec.java:
  - name: final ServiceCallback<
    fullName: final ServiceCallback<
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    href: com.microsoft.azure.batch.protocol.models.AutoScaleRun.yml
  - name: '>'
    fullName: '>'
- uid: c522ce07com.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
  spec.java:
  - name: ServiceFuture<
    fullName: ServiceFuture<
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    href: com.microsoft.azure.batch.protocol.models.AutoScaleRun.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  name: evaluateAutoScaleAsync
  nameWithType: Pools.evaluateAutoScaleAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync
  package: com.microsoft.azure.batch.protocol
- uid: c2d0e8c6com.microsoft.azure.batch.protocol.models.AutoScaleRuna08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    href: com.microsoft.azure.batch.protocol.models.AutoScaleRun.yml
  - name: '>'
    fullName: '>'
- uid: cc516622com.microsoft.azure.batch.protocol.models.AutoScaleRunb33c76fccom.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaderse7daa122
  spec.java:
  - name: Observable<ServiceResponseWithHeaders<
    fullName: Observable<ServiceResponseWithHeaders<
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    href: com.microsoft.azure.batch.protocol.models.AutoScaleRun.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
    name: PoolEvaluateAutoScaleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync*
  name: evaluateAutoScaleWithServiceResponseAsync
  nameWithType: Pools.evaluateAutoScaleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.resize*
  name: resize
  nameWithType: Pools.resize
  fullName: com.microsoft.azure.batch.protocol.Pools.resize
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  name: resizeAsync
  nameWithType: Pools.resizeAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolResizeHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
    name: PoolResizeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync*
  name: resizeWithServiceResponseAsync
  nameWithType: Pools.resizeWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.stopResize*
  name: stopResize
  nameWithType: Pools.stopResize
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResize
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  name: stopResizeAsync
  nameWithType: Pools.stopResizeAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
    name: PoolStopResizeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync*
  name: stopResizeWithServiceResponseAsync
  nameWithType: Pools.stopResizeWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.updateProperties*
  name: updateProperties
  nameWithType: Pools.updateProperties
  fullName: com.microsoft.azure.batch.protocol.Pools.updateProperties
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  name: updatePropertiesAsync
  nameWithType: Pools.updatePropertiesAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
    name: PoolUpdatePropertiesHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync*
  name: updatePropertiesWithServiceResponseAsync
  nameWithType: Pools.updatePropertiesWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodes*
  name: removeNodes
  nameWithType: Pools.removeNodes
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodes
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  name: removeNodesAsync
  nameWithType: Pools.removeNodesAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync
  package: com.microsoft.azure.batch.protocol
- uid: 6738ce59com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaderse7daa122
  spec.java:
  - name: 'Observable<ServiceResponseWithHeaders<Void, '
    fullName: 'Observable<ServiceResponseWithHeaders<Void, '
  - uid: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
    name: PoolRemoveNodesHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
    href: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync*
  name: removeNodesWithServiceResponseAsync
  nameWithType: Pools.removeNodesWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext*
  name: listUsageMetricsNext
  nameWithType: Pools.listUsageMetricsNext
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext
  package: com.microsoft.azure.batch.protocol
- uid: bd82102acom.microsoft.azure.batch.protocol.models.PoolUsageMetricse7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    href: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  name: listUsageMetricsNextAsync
  nameWithType: Pools.listUsageMetricsNextAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync*
  name: listUsageMetricsNextWithServiceResponseAsync
  nameWithType: Pools.listUsageMetricsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
    name: PoolListUsageMetricsNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
    href: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions.yml
- uid: com.microsoft.azure.batch.protocol.Pools.listNext*
  name: listNext
  nameWithType: Pools.listNext
  fullName: com.microsoft.azure.batch.protocol.Pools.listNext
  package: com.microsoft.azure.batch.protocol
- uid: bd82102acom.microsoft.azure.batch.protocol.models.CloudPoole7daa122
  spec.java:
  - name: final ServiceFuture<List<
    fullName: final ServiceFuture<List<
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
    href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  name: listNextAsync
  nameWithType: Pools.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: Pools.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: 93de0ef9com.microsoft.azure.batch.protocol.models.PoolListNextOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
    name: PoolListNextOptions
    fullName: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
    href: com.microsoft.azure.batch.protocol.models.PoolListNextOptions.yml
- uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics.yml
  name: PoolUsageMetrics
  nameWithType: PoolUsageMetrics
  fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  type: Class
  summary: "<p>Usage metrics for a pool across an aggregation interval. </p>"
  syntax:
    content: public class PoolUsageMetrics
- uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders.yml
  name: PoolListUsageMetricsHeaders
  nameWithType: PoolListUsageMetricsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
  type: Class
  summary: "<p>Defines headers for ListUsageMetrics operation. </p>"
  syntax:
    content: public class PoolListUsageMetricsHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions.yml
  name: PoolListUsageMetricsOptions
  nameWithType: PoolListUsageMetricsOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
  type: Class
  summary: "<p>Additional parameters for listUsageMetrics operation. </p>"
  syntax:
    content: public class PoolListUsageMetricsOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolStatistics.yml
  name: PoolStatistics
  nameWithType: PoolStatistics
  fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
  type: Class
  summary: "<p>Contains utilization and resource usage statistics for the lifetime of a pool. </p>"
  syntax:
    content: public class PoolStatistics
- uid: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders.yml
  name: PoolGetAllLifetimeStatisticsHeaders
  nameWithType: PoolGetAllLifetimeStatisticsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
  type: Class
  summary: "<p>Defines headers for GetAllLifetimeStatistics operation. </p>"
  syntax:
    content: public class PoolGetAllLifetimeStatisticsHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions.yml
  name: PoolGetAllLifetimeStatisticsOptions
  nameWithType: PoolGetAllLifetimeStatisticsOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
  type: Class
  summary: "<p>Additional parameters for getAllLifetimeStatistics operation. </p>"
  syntax:
    content: public class PoolGetAllLifetimeStatisticsOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolAddParameter.yml
  name: PoolAddParameter
  nameWithType: PoolAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter
  type: Class
  summary: "<p>A pool in the Azure Batch service to add. </p>"
  syntax:
    content: public class PoolAddParameter
- uid: com.microsoft.azure.batch.protocol.models.PoolAddHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolAddHeaders.yml
  name: PoolAddHeaders
  nameWithType: PoolAddHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolAddHeaders
  type: Class
  summary: "<p>Defines headers for Add operation. </p>"
  syntax:
    content: public class PoolAddHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolAddOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolAddOptions.yml
  name: PoolAddOptions
  nameWithType: PoolAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolAddOptions
  type: Class
  summary: "<p>Additional parameters for add operation. </p>"
  syntax:
    content: public class PoolAddOptions
- uid: com.microsoft.azure.batch.protocol.models.CloudPool
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.CloudPool.yml
  name: CloudPool
  nameWithType: CloudPool
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  type: Class
  summary: "<p>A pool in the Azure Batch service. </p>"
  syntax:
    content: public class CloudPool
- uid: com.microsoft.azure.batch.protocol.models.PoolListHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolListHeaders.yml
  name: PoolListHeaders
  nameWithType: PoolListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolListHeaders
  type: Class
  summary: "<p>Defines headers for List operation. </p>"
  syntax:
    content: public class PoolListHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolListOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolListOptions.yml
  name: PoolListOptions
  nameWithType: PoolListOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListOptions
  type: Class
  summary: "<p>Additional parameters for list operation. </p>"
  syntax:
    content: public class PoolListOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders.yml
  name: PoolDeleteHeaders
  nameWithType: PoolDeleteHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
  type: Class
  summary: "<p>Defines headers for Delete operation. </p>"
  syntax:
    content: public class PoolDeleteHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions.yml
  name: PoolDeleteOptions
  nameWithType: PoolDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
  type: Class
  summary: "<p>Additional parameters for delete operation. </p>"
  syntax:
    content: public class PoolDeleteOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders.yml
  name: PoolExistsHeaders
  nameWithType: PoolExistsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
  type: Class
  summary: "<p>Defines headers for Exists operation. </p>"
  syntax:
    content: public class PoolExistsHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolExistsOptions.yml
  name: PoolExistsOptions
  nameWithType: PoolExistsOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
  type: Class
  summary: "<p>Additional parameters for exists operation. </p>"
  syntax:
    content: public class PoolExistsOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolGetHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolGetHeaders.yml
  name: PoolGetHeaders
  nameWithType: PoolGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolGetHeaders
  type: Class
  summary: "<p>Defines headers for Get operation. </p>"
  syntax:
    content: public class PoolGetHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolGetOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolGetOptions.yml
  name: PoolGetOptions
  nameWithType: PoolGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolGetOptions
  type: Class
  summary: "<p>Additional parameters for get operation. </p>"
  syntax:
    content: public class PoolGetOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolPatchParameter.yml
  name: PoolPatchParameter
  nameWithType: PoolPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  type: Class
  summary: "<p>The set of changes to be made to a pool. </p>"
  syntax:
    content: public class PoolPatchParameter
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders.yml
  name: PoolPatchHeaders
  nameWithType: PoolPatchHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
  type: Class
  summary: "<p>Defines headers for Patch operation. </p>"
  syntax:
    content: public class PoolPatchHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolPatchOptions.yml
  name: PoolPatchOptions
  nameWithType: PoolPatchOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
  type: Class
  summary: "<p>Additional parameters for patch operation. </p>"
  syntax:
    content: public class PoolPatchOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders.yml
  name: PoolDisableAutoScaleHeaders
  nameWithType: PoolDisableAutoScaleHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
  type: Class
  summary: "<p>Defines headers for DisableAutoScale operation. </p>"
  syntax:
    content: public class PoolDisableAutoScaleHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions.yml
  name: PoolDisableAutoScaleOptions
  nameWithType: PoolDisableAutoScaleOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
  type: Class
  summary: "<p>Additional parameters for disableAutoScale operation. </p>"
  syntax:
    content: public class PoolDisableAutoScaleOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter.yml
  name: PoolEnableAutoScaleParameter
  nameWithType: PoolEnableAutoScaleParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
  type: Class
  summary: "<p>Options for enabling automatic scaling on a pool. </p>"
  syntax:
    content: public class PoolEnableAutoScaleParameter
- uid: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders.yml
  name: PoolEnableAutoScaleHeaders
  nameWithType: PoolEnableAutoScaleHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
  type: Class
  summary: "<p>Defines headers for EnableAutoScale operation. </p>"
  syntax:
    content: public class PoolEnableAutoScaleHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions.yml
  name: PoolEnableAutoScaleOptions
  nameWithType: PoolEnableAutoScaleOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
  type: Class
  summary: "<p>Additional parameters for enableAutoScale operation. </p>"
  syntax:
    content: public class PoolEnableAutoScaleOptions
- uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.AutoScaleRun.yml
  name: AutoScaleRun
  nameWithType: AutoScaleRun
  fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  type: Class
  summary: "<p>The results and errors from an execution of a pool autoscale formula. </p>"
  syntax:
    content: public class AutoScaleRun
- uid: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders.yml
  name: PoolEvaluateAutoScaleHeaders
  nameWithType: PoolEvaluateAutoScaleHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
  type: Class
  summary: "<p>Defines headers for EvaluateAutoScale operation. </p>"
  syntax:
    content: public class PoolEvaluateAutoScaleHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions.yml
  name: PoolEvaluateAutoScaleOptions
  nameWithType: PoolEvaluateAutoScaleOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
  type: Class
  summary: "<p>Additional parameters for evaluateAutoScale operation. </p>"
  syntax:
    content: public class PoolEvaluateAutoScaleOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolResizeParameter.yml
  name: PoolResizeParameter
  nameWithType: PoolResizeParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
  type: Class
  summary: "<p>Options for changing the size of a pool. </p>"
  syntax:
    content: public class PoolResizeParameter
- uid: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders.yml
  name: PoolResizeHeaders
  nameWithType: PoolResizeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
  type: Class
  summary: "<p>Defines headers for Resize operation. </p>"
  syntax:
    content: public class PoolResizeHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolResizeOptions.yml
  name: PoolResizeOptions
  nameWithType: PoolResizeOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
  type: Class
  summary: "<p>Additional parameters for resize operation. </p>"
  syntax:
    content: public class PoolResizeOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders.yml
  name: PoolStopResizeHeaders
  nameWithType: PoolStopResizeHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
  type: Class
  summary: "<p>Defines headers for StopResize operation. </p>"
  syntax:
    content: public class PoolStopResizeHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions.yml
  name: PoolStopResizeOptions
  nameWithType: PoolStopResizeOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
  type: Class
  summary: "<p>Additional parameters for stopResize operation. </p>"
  syntax:
    content: public class PoolStopResizeOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter.yml
  name: PoolUpdatePropertiesParameter
  nameWithType: PoolUpdatePropertiesParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  type: Class
  summary: "<p>The set of changes to be made to a pool. </p>"
  syntax:
    content: public class PoolUpdatePropertiesParameter
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders.yml
  name: PoolUpdatePropertiesHeaders
  nameWithType: PoolUpdatePropertiesHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
  type: Class
  summary: "<p>Defines headers for UpdateProperties operation. </p>"
  syntax:
    content: public class PoolUpdatePropertiesHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions.yml
  name: PoolUpdatePropertiesOptions
  nameWithType: PoolUpdatePropertiesOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
  type: Class
  summary: "<p>Additional parameters for updateProperties operation. </p>"
  syntax:
    content: public class PoolUpdatePropertiesOptions
- uid: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter.yml
  name: NodeRemoveParameter
  nameWithType: NodeRemoveParameter
  fullName: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
  type: Class
  summary: "<p>Options for removing compute nodes from a pool. </p>"
  syntax:
    content: public class NodeRemoveParameter
- uid: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders.yml
  name: PoolRemoveNodesHeaders
  nameWithType: PoolRemoveNodesHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
  type: Class
  summary: "<p>Defines headers for RemoveNodes operation. </p>"
  syntax:
    content: public class PoolRemoveNodesHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions.yml
  name: PoolRemoveNodesOptions
  nameWithType: PoolRemoveNodesOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
  type: Class
  summary: "<p>Additional parameters for removeNodes operation. </p>"
  syntax:
    content: public class PoolRemoveNodesOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions.yml
  name: PoolListUsageMetricsNextOptions
  nameWithType: PoolListUsageMetricsNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
  type: Class
  summary: "<p>Additional parameters for listUsageMetricsNext operation. </p>"
  syntax:
    content: public class PoolListUsageMetricsNextOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
  parent: com.microsoft.azure.batch.protocol.models
  href: com.microsoft.azure.batch.protocol.models.PoolListNextOptions.yml
  name: PoolListNextOptions
  nameWithType: PoolListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
  type: Class
  summary: "<p>Additional parameters for listNext operation. </p>"
  syntax:
    content: public class PoolListNextOptions
