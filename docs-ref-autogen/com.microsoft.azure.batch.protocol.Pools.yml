### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.Pools
  id: Pools
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol
  children:
  - com.microsoft.azure.batch.protocol.Pools.add(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  - com.microsoft.azure.batch.protocol.Pools.add(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  - com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  - com.microsoft.azure.batch.protocol.Pools.delete(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScale(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  - com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  - com.microsoft.azure.batch.protocol.Pools.exists(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.exists(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  - com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  - com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  - com.microsoft.azure.batch.protocol.Pools.get(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.get(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  - com.microsoft.azure.batch.protocol.Pools.list()
  - com.microsoft.azure.batch.protocol.Pools.list(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  - com.microsoft.azure.batch.protocol.Pools.listAsync()
  - com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  - com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  - com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  - com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
  - com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  - com.microsoft.azure.batch.protocol.Pools.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  - com.microsoft.azure.batch.protocol.Pools.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  - com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  - com.microsoft.azure.batch.protocol.Pools.removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  - com.microsoft.azure.batch.protocol.Pools.removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  - com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  - com.microsoft.azure.batch.protocol.Pools.resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  - com.microsoft.azure.batch.protocol.Pools.resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  - com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.stopResize(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.stopResize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(java.lang.String)
  - com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  - com.microsoft.azure.batch.protocol.Pools.updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  - com.microsoft.azure.batch.protocol.Pools.updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  - com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  langs:
  - java
  name: Pools
  nameWithType: Pools
  fullName: com.microsoft.azure.batch.protocol.Pools
  type: Interface
  package: com.microsoft.azure.batch.protocol
  summary: An instance of this class provides access to all the operations defined in Pools.
  syntax:
    content: public interface Pools
- uid: com.microsoft.azure.batch.protocol.Pools.add(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  id: add(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: add(PoolAddParameter pool)
  nameWithType: Pools.add(PoolAddParameter pool)
  fullName: com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter pool)
  overload: com.microsoft.azure.batch.protocol.Pools.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract void add(PoolAddParameter pool)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
- uid: com.microsoft.azure.batch.protocol.Pools.add(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  id: add(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  nameWithType: Pools.add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.add*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract void add(PoolAddParameter pool, PoolAddOptions poolAddOptions)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  id: addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: addAsync(PoolAddParameter pool)
  nameWithType: Pools.addAsync(PoolAddParameter pool)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract Observable<Void> addAsync(PoolAddParameter pool)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  id: addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  nameWithType: Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract Observable<Void> addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.addAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract ServiceFuture<Void> addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: addWithServiceResponseAsync(PoolAddParameter pool)
  nameWithType: Pools.addWithServiceResponseAsync(PoolAddParameter pool)
  fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool)
  overload: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  id: addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  nameWithType: Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)
    parameters:
    - id: pool
      type: com.microsoft.azure.batch.protocol.models.PoolAddParameter
      description: The Pool to be added.
    - id: poolAddOptions
      type: com.microsoft.azure.batch.protocol.models.PoolAddOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolAddHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.delete(java.lang.String)
  id: delete(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: delete(String poolId)
  nameWithType: Pools.delete(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.delete(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract void delete(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
- uid: com.microsoft.azure.batch.protocol.Pools.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  id: delete(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: delete(String poolId, PoolDeleteOptions poolDeleteOptions)
  nameWithType: Pools.delete(String poolId, PoolDeleteOptions poolDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.delete(String poolId, PoolDeleteOptions poolDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.delete*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract void delete(String poolId, PoolDeleteOptions poolDeleteOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String)
  id: deleteAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: deleteAsync(String poolId)
  nameWithType: Pools.deleteAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract Observable<Void> deleteAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  id: deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  nameWithType: Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract Observable<Void> deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract ServiceFuture<Void> deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(java.lang.String)
  id: deleteWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: deleteWithServiceResponseAsync(String poolId)
  nameWithType: Pools.deleteWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolDeleteHeaders>> deleteWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  id: deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  nameWithType: Pools.deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted.'
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolDeleteHeaders>> deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to delete.
    - id: poolDeleteOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(java.lang.String)
  id: disableAutoScale(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScale(String poolId)
  nameWithType: Pools.disableAutoScale(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract void disableAutoScale(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  id: disableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  nameWithType: Pools.disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract void disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String)
  id: disableAutoScaleAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScaleAsync(String poolId)
  nameWithType: Pools.disableAutoScaleAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract Observable<Void> disableAutoScaleAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  id: disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  nameWithType: Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract Observable<Void> disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract ServiceFuture<Void> disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: disableAutoScaleAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract ServiceFuture<Void> disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(java.lang.String)
  id: disableAutoScaleWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScaleWithServiceResponseAsync(String poolId)
  nameWithType: Pools.disableAutoScaleWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolDisableAutoScaleHeaders>> disableAutoScaleWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  id: disableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  nameWithType: Pools.disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Disables automatic scaling for a Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolDisableAutoScaleHeaders>> disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to disable automatic scaling.
    - id: poolDisableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  id: enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  nameWithType: Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract void enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  id: enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  nameWithType: Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract void enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  id: enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract Observable<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  id: enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract Observable<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract ServiceFuture<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract ServiceFuture<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  id: enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  nameWithType: Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolEnableAutoScaleHeaders>> enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  id: enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  nameWithType: Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolEnableAutoScaleHeaders>> enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to enable automatic scaling.
    - id: poolEnableAutoScaleParameter
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
      description: The parameters for the request.
    - id: poolEnableAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(java.lang.String,java.lang.String)
  id: evaluateAutoScale(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScale(String poolId, String autoScaleFormula)
  nameWithType: Pools.evaluateAutoScale(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: the AutoScaleRun object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  id: evaluateAutoScale(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  nameWithType: Pools.evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.AutoScaleRun
      description: the AutoScaleRun object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String)
  id: evaluateAutoScaleAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract Observable<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
      description: the observable to the AutoScaleRun object
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  id: evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract Observable<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
      description: the observable to the AutoScaleRun object
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)
  id: evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract ServiceFuture<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)
  id: evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)
  nameWithType: Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract ServiceFuture<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String)
  id: evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
  nameWithType: Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<AutoScaleRun,PoolEvaluateAutoScaleHeaders>> evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.AutoScaleRun,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders>>
      description: the observable to the AutoScaleRun object
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  id: evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  nameWithType: Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<AutoScaleRun,PoolEvaluateAutoScaleHeaders>> evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool on which to evaluate the automatic scaling formula.
    - id: autoScaleFormula
      type: java.lang.String
      description: The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
    - id: poolEvaluateAutoScaleOptions
      type: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.AutoScaleRun,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders>>
      description: the observable to the AutoScaleRun object
- uid: com.microsoft.azure.batch.protocol.Pools.exists(java.lang.String)
  id: exists(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: exists(String poolId)
  nameWithType: Pools.exists(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.exists(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.exists*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract boolean exists(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    return:
      type: boolean
      description: the boolean object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.exists(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  id: exists(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: exists(String poolId, PoolExistsOptions poolExistsOptions)
  nameWithType: Pools.exists(String poolId, PoolExistsOptions poolExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.exists(String poolId, PoolExistsOptions poolExistsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.exists*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract boolean exists(String poolId, PoolExistsOptions poolExistsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: Additional parameters for the operation
    return:
      type: boolean
      description: the boolean object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String)
  id: existsAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: existsAsync(String poolId)
  nameWithType: Pools.existsAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract Observable<Boolean> existsAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    return:
      type: rx.Observable<java.lang.Boolean>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  id: existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
  nameWithType: Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract Observable<Boolean> existsAsync(String poolId, PoolExistsOptions poolExistsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Boolean>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  id: existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)
  nameWithType: Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract ServiceFuture<Boolean> existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Boolean>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Boolean>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  id: existsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)
  nameWithType: Pools.existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract ServiceFuture<Boolean> existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Boolean>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Boolean>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(java.lang.String)
  id: existsWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: existsWithServiceResponseAsync(String poolId)
  nameWithType: Pools.existsWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Boolean,PoolExistsHeaders>> existsWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Boolean,com.microsoft.azure.batch.protocol.models.PoolExistsHeaders>>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  id: existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
  nameWithType: Pools.existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets basic properties of a Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Boolean,PoolExistsHeaders>> existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolExistsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Boolean,com.microsoft.azure.batch.protocol.models.PoolExistsHeaders>>
      description: the observable to the boolean object
- uid: com.microsoft.azure.batch.protocol.Pools.get(java.lang.String)
  id: get(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: get(String poolId)
  nameWithType: Pools.get(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.get(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract CloudPool get(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.get(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  id: get(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: get(String poolId, PoolGetOptions poolGetOptions)
  nameWithType: Pools.get(String poolId, PoolGetOptions poolGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.get(String poolId, PoolGetOptions poolGetOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.get*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract CloudPool get(String poolId, PoolGetOptions poolGetOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudPool
      description: the CloudPool object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()
  id: getAllLifetimeStatistics()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatistics()
  nameWithType: Pools.getAllLifetimeStatistics()
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract PoolStatistics getAllLifetimeStatistics()
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: the PoolStatistics object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  nameWithType: Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract PoolStatistics getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolStatistics
      description: the PoolStatistics object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()
  id: getAllLifetimeStatisticsAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatisticsAsync()
  nameWithType: Pools.getAllLifetimeStatisticsAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<PoolStatistics> getAllLifetimeStatisticsAsync()
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.PoolStatistics>
      description: the observable to the PoolStatistics object
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  nameWithType: Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<PoolStatistics> getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.PoolStatistics>
      description: the observable to the PoolStatistics object
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)
  id: getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)
  nameWithType: Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract ServiceFuture<PoolStatistics> getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.PoolStatistics>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)
  id: getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)
  nameWithType: Pools.getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract ServiceFuture<PoolStatistics> getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.PoolStatistics>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  id: getAllLifetimeStatisticsWithServiceResponseAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync()
  nameWithType: Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<PoolStatistics,PoolGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.PoolStatistics,com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders>>
      description: the observable to the PoolStatistics object
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  id: getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  nameWithType: Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<PoolStatistics,PoolGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)
    parameters:
    - id: poolGetAllLifetimeStatisticsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.PoolStatistics,com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders>>
      description: the observable to the PoolStatistics object
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String)
  id: getAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAsync(String poolId)
  nameWithType: Pools.getAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract Observable<CloudPool> getAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the observable to the CloudPool object
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  id: getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAsync(String poolId, PoolGetOptions poolGetOptions)
  nameWithType: Pools.getAsync(String poolId, PoolGetOptions poolGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, PoolGetOptions poolGetOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract Observable<CloudPool> getAsync(String poolId, PoolGetOptions poolGetOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the observable to the CloudPool object
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  id: getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)
  nameWithType: Pools.getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract ServiceFuture<CloudPool> getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  id: getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)
  nameWithType: Pools.getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.getAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract ServiceFuture<CloudPool> getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(java.lang.String)
  id: getWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId)
  nameWithType: Pools.getWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<CloudPool,PoolGetHeaders>> getWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudPool,com.microsoft.azure.batch.protocol.models.PoolGetHeaders>>
      description: the observable to the CloudPool object
- uid: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  id: getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
  nameWithType: Pools.getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Gets information about the specified Pool.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<CloudPool,PoolGetHeaders>> getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to get.
    - id: poolGetOptions
      type: com.microsoft.azure.batch.protocol.models.PoolGetOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudPool,com.microsoft.azure.batch.protocol.models.PoolGetHeaders>>
      description: the observable to the CloudPool object
- uid: com.microsoft.azure.batch.protocol.Pools.list()
  id: list()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: list()
  nameWithType: Pools.list()
  fullName: com.microsoft.azure.batch.protocol.Pools.list()
  overload: com.microsoft.azure.batch.protocol.Pools.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract PagedList<CloudPool> list()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the PagedList&lt;CloudPool&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.list(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  id: list(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: list(PoolListOptions poolListOptions)
  nameWithType: Pools.list(PoolListOptions poolListOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.list(PoolListOptions poolListOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.list*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract PagedList<CloudPool> list(PoolListOptions poolListOptions)
    parameters:
    - id: poolListOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the PagedList&lt;CloudPool&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync()
  id: listAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listAsync()
  nameWithType: Pools.listAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudPool>> listAsync()
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  id: listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listAsync(ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listAsync(ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync(ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudPool>> listAsync(ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  id: listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listAsync(PoolListOptions poolListOptions)
  nameWithType: Pools.listAsync(PoolListOptions poolListOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync(PoolListOptions poolListOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudPool>> listAsync(PoolListOptions poolListOptions)
    parameters:
    - id: poolListOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  id: listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudPool>> listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: poolListOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listNext(java.lang.String)
  id: listNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNext(String nextPageLink)
  nameWithType: Pools.listNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract PagedList<CloudPool> listNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the PagedList&lt;CloudPool&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  id: listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)
  nameWithType: Pools.listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract PagedList<CloudPool> listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the PagedList&lt;CloudPool&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String)
  id: listNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNextAsync(String nextPageLink)
  nameWithType: Pools.listNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudPool>> listNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
  nameWithType: Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<Page<CloudPool>> listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  id: listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudPool>> listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  id: listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
  nameWithType: Pools.listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract ServiceFuture<List<CloudPool>> listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(java.lang.String)
  id: listNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: Pools.listNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>,com.microsoft.azure.batch.protocol.models.PoolListHeaders>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  id: listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
  nameWithType: Pools.listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>,com.microsoft.azure.batch.protocol.models.PoolListHeaders>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()
  id: listUsageMetrics()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetrics()
  nameWithType: Pools.listUsageMetrics()
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract PagedList<PoolUsageMetrics> listUsageMetrics()
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the PagedList&lt;PoolUsageMetrics&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  id: listUsageMetrics(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  nameWithType: Pools.listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract PagedList<PoolUsageMetrics> listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
    parameters:
    - id: poolListUsageMetricsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the PagedList&lt;PoolUsageMetrics&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()
  id: listUsageMetricsAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsAsync()
  nameWithType: Pools.listUsageMetricsAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsAsync()
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  id: listUsageMetricsAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  id: listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  nameWithType: Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
    parameters:
    - id: poolListUsageMetricsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  id: listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: poolListUsageMetricsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(java.lang.String)
  id: listUsageMetricsNext(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNext(String nextPageLink)
  nameWithType: Pools.listUsageMetricsNext(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract PagedList<PoolUsageMetrics> listUsageMetricsNext(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the PagedList&lt;PoolUsageMetrics&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  id: listUsageMetricsNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  nameWithType: Pools.listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract PagedList<PoolUsageMetrics> listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListUsageMetricsNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: Additional parameters for the operation
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the PagedList&lt;PoolUsageMetrics&gt; object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String)
  id: listUsageMetricsNextAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNextAsync(String nextPageLink)
  nameWithType: Pools.listUsageMetricsNextAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  id: listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  nameWithType: Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListUsageMetricsNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  id: listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListUsageMetricsNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: Additional parameters for the operation
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  id: listUsageMetricsNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: serviceFuture
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the ServiceFuture object tracking the Retrofit calls
    - id: serviceCallback
      type: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(java.lang.String)
  id: listUsageMetricsNextWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)
  nameWithType: Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  id: listUsageMetricsNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  nameWithType: Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
    parameters:
    - id: nextPageLink
      type: java.lang.String
      description: The NextLink from the previous successful call to List operation.
    - id: poolListUsageMetricsNextOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()
  id: listUsageMetricsWithServiceResponseAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsWithServiceResponseAsync()
  nameWithType: Pools.listUsageMetricsWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  id: listUsageMetricsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  nameWithType: Pools.listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)
    parameters:
    - id: poolListUsageMetricsOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders>>
      description: the observable to the PagedList&lt;PoolUsageMetrics&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
  id: listWithServiceResponseAsync()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listWithServiceResponseAsync()
  nameWithType: Pools.listWithServiceResponseAsync()
  fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()
  overload: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listWithServiceResponseAsync()
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>,com.microsoft.azure.batch.protocol.models.PoolListHeaders>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  id: listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: listWithServiceResponseAsync(PoolListOptions poolListOptions)
  nameWithType: Pools.listWithServiceResponseAsync(PoolListOptions poolListOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(PoolListOptions poolListOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Lists all of the Pools in the specified Account.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listWithServiceResponseAsync(PoolListOptions poolListOptions)
    parameters:
    - id: poolListOptions
      type: com.microsoft.azure.batch.protocol.models.PoolListOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>,com.microsoft.azure.batch.protocol.models.PoolListHeaders>>
      description: the observable to the PagedList&lt;CloudPool&gt; object
- uid: com.microsoft.azure.batch.protocol.Pools.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  id: patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patch(String poolId, PoolPatchParameter poolPatchParameter)
  nameWithType: Pools.patch(String poolId, PoolPatchParameter poolPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.patch(String poolId, PoolPatchParameter poolPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.patch*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract void patch(String poolId, PoolPatchParameter poolPatchParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.Pools.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  id: patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  nameWithType: Pools.patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.patch*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract void patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  id: patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
  nameWithType: Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolPatchHeaders>> patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolPatchHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  id: patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  nameWithType: Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolPatchHeaders>> patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolPatchParameter
      type: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
      description: The parameters for the request.
    - id: poolPatchOptions
      type: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolPatchHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  id: removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
  nameWithType: Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract void removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  id: removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  nameWithType: Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract void removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  id: removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract Observable<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  id: removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract Observable<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract ServiceFuture<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract ServiceFuture<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  id: removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  nameWithType: Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolRemoveNodesHeaders>> removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  id: removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  nameWithType: Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolRemoveNodesHeaders>> removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool from which you want to remove Compute Nodes.
    - id: nodeRemoveParameter
      type: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
      description: The parameters for the request.
    - id: poolRemoveNodesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  id: resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resize(String poolId, PoolResizeParameter poolResizeParameter)
  nameWithType: Pools.resize(String poolId, PoolResizeParameter poolResizeParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.resize(String poolId, PoolResizeParameter poolResizeParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.resize*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract void resize(String poolId, PoolResizeParameter poolResizeParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.Pools.resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  id: resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  nameWithType: Pools.resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.resize*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract void resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  id: resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract Observable<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  id: resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract Observable<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract ServiceFuture<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract ServiceFuture<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  id: resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
  nameWithType: Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolResizeHeaders>> resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolResizeHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  id: resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  nameWithType: Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolResizeHeaders>> resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to resize.
    - id: poolResizeParameter
      type: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
      description: The parameters for the request.
    - id: poolResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolResizeHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.stopResize(java.lang.String)
  id: stopResize(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResize(String poolId)
  nameWithType: Pools.stopResize(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResize(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResize*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract void stopResize(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
- uid: com.microsoft.azure.batch.protocol.Pools.stopResize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  id: stopResize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  nameWithType: Pools.stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResize*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract void stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String)
  id: stopResizeAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResizeAsync(String poolId)
  nameWithType: Pools.stopResizeAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract Observable<Void> stopResizeAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  id: stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  nameWithType: Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract Observable<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract ServiceFuture<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: stopResizeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract ServiceFuture<Void> stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(java.lang.String)
  id: stopResizeWithServiceResponseAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResizeWithServiceResponseAsync(String poolId)
  nameWithType: Pools.stopResizeWithServiceResponseAsync(String poolId)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String poolId)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolStopResizeHeaders>> stopResizeWithServiceResponseAsync(String poolId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  id: stopResizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  nameWithType: Pools.stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: 'Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created.'
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolStopResizeHeaders>> stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool whose resizing you want to stop.
    - id: poolStopResizeOptions
      type: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  id: updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  nameWithType: Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.updateProperties*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract void updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
- uid: com.microsoft.azure.batch.protocol.Pools.updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  id: updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  nameWithType: Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.updateProperties*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract void updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: Additional parameters for the operation
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  id: updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract Observable<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  id: updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract Observable<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract ServiceFuture<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: Additional parameters for the operation
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  id: updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)
  nameWithType: Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract ServiceFuture<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
    - id: serviceCallback
      type: com.microsoft.rest.ServiceCallback<java.lang.Void>
      description: the async ServiceCallback to handle successful and failed responses.
    return:
      type: com.microsoft.rest.ServiceFuture<java.lang.Void>
      description: the <xref uid="com.microsoft.rest.ServiceFuture" data-throw-if-not-resolved="false">ServiceFuture</xref> object
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  id: updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  nameWithType: Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolUpdatePropertiesHeaders>> updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  id: updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.Pools
  langs:
  - java
  name: updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  nameWithType: Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
  overload: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync*
  type: Method
  package: com.microsoft.azure.batch.protocol
  summary: Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask.
  syntax:
    content: public abstract Observable<ServiceResponseWithHeaders<Void,PoolUpdatePropertiesHeaders>> updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the Pool to update.
    - id: poolUpdatePropertiesParameter
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
      description: The parameters for the request.
    - id: poolUpdatePropertiesOptions
      type: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
      description: Additional parameters for the operation
    return:
      type: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders>>
      description: the <xref uid="com.microsoft.rest.ServiceResponseWithHeaders" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful.
references:
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics*
  name: listUsageMetrics
  nameWithType: Pools.listUsageMetrics
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetrics
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>
  spec.java:
  - uid: com.microsoft.azure.ListOperationCallback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync*
  name: listUsageMetricsAsync
  nameWithType: Pools.listUsageMetricsAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
    name: PoolUsageMetrics
    fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
    name: PoolListUsageMetricsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync*
  name: listUsageMetricsWithServiceResponseAsync
  nameWithType: Pools.listUsageMetricsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
  name: PoolListUsageMetricsOptions
  nameWithType: PoolListUsageMetricsOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
  name: PoolStatistics
  nameWithType: PoolStatistics
  fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics*
  name: getAllLifetimeStatistics
  nameWithType: Pools.getAllLifetimeStatistics
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.PoolStatistics>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync*
  name: getAllLifetimeStatisticsAsync
  nameWithType: Pools.getAllLifetimeStatisticsAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.PoolStatistics>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.PoolStatistics,com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.PoolStatistics
    name: PoolStatistics
    fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
    name: PoolGetAllLifetimeStatisticsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync*
  name: getAllLifetimeStatisticsWithServiceResponseAsync
  nameWithType: Pools.getAllLifetimeStatisticsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
  name: PoolGetAllLifetimeStatisticsOptions
  nameWithType: PoolGetAllLifetimeStatisticsOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolAddParameter
  name: PoolAddParameter
  nameWithType: PoolAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolAddParameter
- uid: com.microsoft.azure.batch.protocol.Pools.add*
  name: add
  nameWithType: Pools.add
  fullName: com.microsoft.azure.batch.protocol.Pools.add
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Void>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.addAsync*
  name: addAsync
  nameWithType: Pools.addAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.addAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.lang.Void>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolAddHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolAddHeaders
    name: PoolAddHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolAddHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync*
  name: addWithServiceResponseAsync
  nameWithType: Pools.addWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolAddOptions
  name: PoolAddOptions
  nameWithType: PoolAddOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolAddOptions
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.CloudPool>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.list*
  name: list
  nameWithType: Pools.list
  fullName: com.microsoft.azure.batch.protocol.Pools.list
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
  spec.java:
  - uid: com.microsoft.azure.ListOperationCallback
    name: ListOperationCallback
    fullName: com.microsoft.azure.ListOperationCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.listAsync*
  name: listAsync
  nameWithType: Pools.listAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.Page<com.microsoft.azure.batch.protocol.models.CloudPool>,com.microsoft.azure.batch.protocol.models.PoolListHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.Page
    name: Page
    fullName: com.microsoft.azure.Page
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolListHeaders
    name: PoolListHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolListHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync*
  name: listWithServiceResponseAsync
  nameWithType: Pools.listWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolListOptions
  name: PoolListOptions
  nameWithType: PoolListOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListOptions
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.Pools.delete*
  name: delete
  nameWithType: Pools.delete
  fullName: com.microsoft.azure.batch.protocol.Pools.delete
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.deleteAsync*
  name: deleteAsync
  nameWithType: Pools.deleteAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
    name: PoolDeleteHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync*
  name: deleteWithServiceResponseAsync
  nameWithType: Pools.deleteWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
  name: PoolDeleteOptions
  nameWithType: PoolDeleteOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolDeleteOptions
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.batch.protocol.Pools.exists*
  name: exists
  nameWithType: Pools.exists
  fullName: com.microsoft.azure.batch.protocol.Pools.exists
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<java.lang.Boolean>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<java.lang.Boolean>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.existsAsync*
  name: existsAsync
  nameWithType: Pools.existsAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.existsAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<java.lang.Boolean>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Boolean,com.microsoft.azure.batch.protocol.models.PoolExistsHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
    name: PoolExistsHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync*
  name: existsWithServiceResponseAsync
  nameWithType: Pools.existsWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
  name: PoolExistsOptions
  nameWithType: PoolExistsOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolExistsOptions
- uid: com.microsoft.azure.batch.protocol.models.CloudPool
  name: CloudPool
  nameWithType: CloudPool
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool
- uid: com.microsoft.azure.batch.protocol.Pools.get*
  name: get
  nameWithType: Pools.get
  fullName: com.microsoft.azure.batch.protocol.Pools.get
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.CloudPool>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.getAsync*
  name: getAsync
  nameWithType: Pools.getAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.CloudPool>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.CloudPool,com.microsoft.azure.batch.protocol.models.PoolGetHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CloudPool
    name: CloudPool
    fullName: com.microsoft.azure.batch.protocol.models.CloudPool
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolGetHeaders
    name: PoolGetHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolGetHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync*
  name: getWithServiceResponseAsync
  nameWithType: Pools.getWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolGetOptions
  name: PoolGetOptions
  nameWithType: PoolGetOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolGetOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
  name: PoolPatchParameter
  nameWithType: PoolPatchParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchParameter
- uid: com.microsoft.azure.batch.protocol.Pools.patch*
  name: patch
  nameWithType: Pools.patch
  fullName: com.microsoft.azure.batch.protocol.Pools.patch
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.patchAsync*
  name: patchAsync
  nameWithType: Pools.patchAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.patchAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolPatchHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
    name: PoolPatchHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync*
  name: patchWithServiceResponseAsync
  nameWithType: Pools.patchWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
  name: PoolPatchOptions
  nameWithType: PoolPatchOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolPatchOptions
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScale*
  name: disableAutoScale
  nameWithType: Pools.disableAutoScale
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScale
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync*
  name: disableAutoScaleAsync
  nameWithType: Pools.disableAutoScaleAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
    name: PoolDisableAutoScaleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync*
  name: disableAutoScaleWithServiceResponseAsync
  nameWithType: Pools.disableAutoScaleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
  name: PoolDisableAutoScaleOptions
  nameWithType: PoolDisableAutoScaleOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
  name: PoolEnableAutoScaleParameter
  nameWithType: PoolEnableAutoScaleParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScale*
  name: enableAutoScale
  nameWithType: Pools.enableAutoScale
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScale
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync*
  name: enableAutoScaleAsync
  nameWithType: Pools.enableAutoScaleAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
    name: PoolEnableAutoScaleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync*
  name: enableAutoScaleWithServiceResponseAsync
  nameWithType: Pools.enableAutoScaleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
  name: PoolEnableAutoScaleOptions
  nameWithType: PoolEnableAutoScaleOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions
- uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  name: AutoScaleRun
  nameWithType: AutoScaleRun
  fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale*
  name: evaluateAutoScale
  nameWithType: Pools.evaluateAutoScale
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
  spec.java:
  - uid: com.microsoft.rest.ServiceCallback
    name: ServiceCallback
    fullName: com.microsoft.rest.ServiceCallback
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  - name: '>'
    fullName: '>'
- uid: com.microsoft.rest.ServiceFuture<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
  spec.java:
  - uid: com.microsoft.rest.ServiceFuture
    name: ServiceFuture
    fullName: com.microsoft.rest.ServiceFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync*
  name: evaluateAutoScaleAsync
  nameWithType: Pools.evaluateAutoScaleAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.azure.batch.protocol.models.AutoScaleRun>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  - name: '>'
    fullName: '>'
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<com.microsoft.azure.batch.protocol.models.AutoScaleRun,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun
    name: AutoScaleRun
    fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
    name: PoolEvaluateAutoScaleHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync*
  name: evaluateAutoScaleWithServiceResponseAsync
  nameWithType: Pools.evaluateAutoScaleWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
  name: PoolEvaluateAutoScaleOptions
  nameWithType: PoolEvaluateAutoScaleOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
  name: PoolResizeParameter
  nameWithType: PoolResizeParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolResizeParameter
- uid: com.microsoft.azure.batch.protocol.Pools.resize*
  name: resize
  nameWithType: Pools.resize
  fullName: com.microsoft.azure.batch.protocol.Pools.resize
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.resizeAsync*
  name: resizeAsync
  nameWithType: Pools.resizeAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolResizeHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
    name: PoolResizeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync*
  name: resizeWithServiceResponseAsync
  nameWithType: Pools.resizeWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
  name: PoolResizeOptions
  nameWithType: PoolResizeOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolResizeOptions
- uid: com.microsoft.azure.batch.protocol.Pools.stopResize*
  name: stopResize
  nameWithType: Pools.stopResize
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResize
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync*
  name: stopResizeAsync
  nameWithType: Pools.stopResizeAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
    name: PoolStopResizeHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync*
  name: stopResizeWithServiceResponseAsync
  nameWithType: Pools.stopResizeWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
  name: PoolStopResizeOptions
  nameWithType: PoolStopResizeOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
  name: PoolUpdatePropertiesParameter
  nameWithType: PoolUpdatePropertiesParameter
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter
- uid: com.microsoft.azure.batch.protocol.Pools.updateProperties*
  name: updateProperties
  nameWithType: Pools.updateProperties
  fullName: com.microsoft.azure.batch.protocol.Pools.updateProperties
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync*
  name: updatePropertiesAsync
  nameWithType: Pools.updatePropertiesAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
    name: PoolUpdatePropertiesHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync*
  name: updatePropertiesWithServiceResponseAsync
  nameWithType: Pools.updatePropertiesWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
  name: PoolUpdatePropertiesOptions
  nameWithType: PoolUpdatePropertiesOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions
- uid: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
  name: NodeRemoveParameter
  nameWithType: NodeRemoveParameter
  fullName: com.microsoft.azure.batch.protocol.models.NodeRemoveParameter
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodes*
  name: removeNodes
  nameWithType: Pools.removeNodes
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodes
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync*
  name: removeNodesAsync
  nameWithType: Pools.removeNodesAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesAsync
  package: com.microsoft.azure.batch.protocol
- uid: rx.Observable<com.microsoft.rest.ServiceResponseWithHeaders<java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders>>
  spec.java:
  - uid: rx.Observable
    name: Observable
    fullName: rx.Observable
  - name: <
    fullName: <
  - uid: com.microsoft.rest.ServiceResponseWithHeaders
    name: ServiceResponseWithHeaders
    fullName: com.microsoft.rest.ServiceResponseWithHeaders
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: ','
    fullName: ','
  - uid: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
    name: PoolRemoveNodesHeaders
    fullName: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync*
  name: removeNodesWithServiceResponseAsync
  nameWithType: Pools.removeNodesWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
  name: PoolRemoveNodesOptions
  nameWithType: PoolRemoveNodesOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext*
  name: listUsageMetricsNext
  nameWithType: Pools.listUsageMetricsNext
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
  name: listUsageMetricsNextAsync
  nameWithType: Pools.listUsageMetricsNextAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync*
  name: listUsageMetricsNextWithServiceResponseAsync
  nameWithType: Pools.listUsageMetricsNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
  name: PoolListUsageMetricsNextOptions
  nameWithType: PoolListUsageMetricsNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions
- uid: com.microsoft.azure.batch.protocol.Pools.listNext*
  name: listNext
  nameWithType: Pools.listNext
  fullName: com.microsoft.azure.batch.protocol.Pools.listNext
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.listNextAsync*
  name: listNextAsync
  nameWithType: Pools.listNextAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync*
  name: listNextWithServiceResponseAsync
  nameWithType: Pools.listNextWithServiceResponseAsync
  fullName: com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync
  package: com.microsoft.azure.batch.protocol
- uid: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
  name: PoolListNextOptions
  nameWithType: PoolListNextOptions
  fullName: com.microsoft.azure.batch.protocol.models.PoolListNextOptions
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
  name: PoolUsageMetrics
  nameWithType: PoolUsageMetrics
  fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics
- uid: com.microsoft.azure.ListOperationCallback
  name: ListOperationCallback
  nameWithType: ListOperationCallback
  fullName: com.microsoft.azure.ListOperationCallback
- uid: com.microsoft.rest.ServiceFuture
  name: ServiceFuture
  nameWithType: ServiceFuture
  fullName: com.microsoft.rest.ServiceFuture
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.Page
  name: Page
  nameWithType: Page
  fullName: com.microsoft.azure.Page
- uid: rx.Observable
  name: Observable
  nameWithType: Observable
  fullName: rx.Observable
- uid: com.microsoft.rest.ServiceResponseWithHeaders
  name: ServiceResponseWithHeaders
  nameWithType: ServiceResponseWithHeaders
  fullName: com.microsoft.rest.ServiceResponseWithHeaders
- uid: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
  name: PoolUsageMetrics>,PoolListUsageMetricsHeaders
  nameWithType: PoolUsageMetrics>,PoolListUsageMetricsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders
- uid: com.microsoft.rest.ServiceCallback
  name: ServiceCallback
  nameWithType: ServiceCallback
  fullName: com.microsoft.rest.ServiceCallback
- uid: com.microsoft.azure.batch.protocol.models.PoolStatistics,com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
  name: PoolStatistics,PoolGetAllLifetimeStatisticsHeaders
  nameWithType: PoolStatistics,PoolGetAllLifetimeStatisticsHeaders
  fullName: com.microsoft.azure.batch.protocol.models.PoolStatistics,com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolAddHeaders
  name: Void,PoolAddHeaders
  nameWithType: Void,PoolAddHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolAddHeaders
- uid: com.microsoft.azure.batch.protocol.models.CloudPool>,com.microsoft.azure.batch.protocol.models.PoolListHeaders
  name: CloudPool>,PoolListHeaders
  nameWithType: CloudPool>,PoolListHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool>,com.microsoft.azure.batch.protocol.models.PoolListHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
  name: Void,PoolDeleteHeaders
  nameWithType: Void,PoolDeleteHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: java.lang.Boolean,com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
  name: Boolean,PoolExistsHeaders
  nameWithType: Boolean,PoolExistsHeaders
  fullName: java.lang.Boolean,com.microsoft.azure.batch.protocol.models.PoolExistsHeaders
- uid: com.microsoft.azure.batch.protocol.models.CloudPool,com.microsoft.azure.batch.protocol.models.PoolGetHeaders
  name: CloudPool,PoolGetHeaders
  nameWithType: CloudPool,PoolGetHeaders
  fullName: com.microsoft.azure.batch.protocol.models.CloudPool,com.microsoft.azure.batch.protocol.models.PoolGetHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
  name: Void,PoolPatchHeaders
  nameWithType: Void,PoolPatchHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolPatchHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
  name: Void,PoolDisableAutoScaleHeaders
  nameWithType: Void,PoolDisableAutoScaleHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
  name: Void,PoolEnableAutoScaleHeaders
  nameWithType: Void,PoolEnableAutoScaleHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders
- uid: com.microsoft.azure.batch.protocol.models.AutoScaleRun,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
  name: AutoScaleRun,PoolEvaluateAutoScaleHeaders
  nameWithType: AutoScaleRun,PoolEvaluateAutoScaleHeaders
  fullName: com.microsoft.azure.batch.protocol.models.AutoScaleRun,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
  name: Void,PoolResizeHeaders
  nameWithType: Void,PoolResizeHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolResizeHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
  name: Void,PoolStopResizeHeaders
  nameWithType: Void,PoolStopResizeHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
  name: Void,PoolUpdatePropertiesHeaders
  nameWithType: Void,PoolUpdatePropertiesHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders
- uid: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
  name: Void,PoolRemoveNodesHeaders
  nameWithType: Void,PoolRemoveNodesHeaders
  fullName: java.lang.Void,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders
