### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.Pools"
fullName: "com.microsoft.azure.batch.protocol.Pools"
name: "Pools"
nameWithType: "Pools"
summary: "An instance of this class provides access to all the operations defined in Pools."
syntax: "public interface Pools"
methods:
- uid: "com.microsoft.azure.batch.protocol.Pools.add(com.microsoft.azure.batch.protocol.models.PoolAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter pool)"
  name: "add(PoolAddParameter pool)"
  nameWithType: "Pools.add(PoolAddParameter pool)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void add(PoolAddParameter pool)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
- uid: "com.microsoft.azure.batch.protocol.Pools.add(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.add(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  name: "add(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  nameWithType: "Pools.add(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddOptions?alt=com.microsoft.azure.batch.protocol.models.PoolAddOptions&text=PoolAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void add(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
- uid: "com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool)"
  name: "addAsync(PoolAddParameter pool)"
  nameWithType: "Pools.addAsync(PoolAddParameter pool)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> addAsync(PoolAddParameter pool)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  name: "addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  nameWithType: "Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddOptions?alt=com.microsoft.azure.batch.protocol.models.PoolAddOptions&text=PoolAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)"
  name: "addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddOptions?alt=com.microsoft.azure.batch.protocol.models.PoolAddOptions&text=PoolAddOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> addAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.addAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)"
  name: "addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> addAsync(PoolAddParameter pool, ServiceCallback<Void> serviceCallback)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool)"
  name: "addWithServiceResponseAsync(PoolAddParameter pool)"
  nameWithType: "Pools.addWithServiceResponseAsync(PoolAddParameter pool)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolAddHeaders&text=PoolAddHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolAddParameter,com.microsoft.azure.batch.protocol.models.PoolAddOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  name: "addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  nameWithType: "Pools.addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  summary: "Adds a Pool to the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The Pool to be added."
    name: "pool"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddParameter?alt=com.microsoft.azure.batch.protocol.models.PoolAddParameter&text=PoolAddParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolAddOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddOptions?alt=com.microsoft.azure.batch.protocol.models.PoolAddOptions&text=PoolAddOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolAddHeaders>> addWithServiceResponseAsync(PoolAddParameter pool, PoolAddOptions poolAddOptions)"
  desc: "Adds a Pool to the specified Account. When naming Pools, avoid including sensitive information such as user names or secret project names. This information may appear in telemetry logs accessible to Microsoft Support engineers."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolAddHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolAddHeaders&text=PoolAddHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.delete(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.delete(String poolId)"
  name: "delete(String poolId)"
  nameWithType: "Pools.delete(String poolId)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String poolId)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
- uid: "com.microsoft.azure.batch.protocol.Pools.delete(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.delete(String poolId, PoolDeleteOptions poolDeleteOptions)"
  name: "delete(String poolId, PoolDeleteOptions poolDeleteOptions)"
  nameWithType: "Pools.delete(String poolId, PoolDeleteOptions poolDeleteOptions)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDeleteOptions&text=PoolDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String poolId, PoolDeleteOptions poolDeleteOptions)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
- uid: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId)"
  name: "deleteAsync(String poolId)"
  nameWithType: "Pools.deleteAsync(String poolId)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteAsync(String poolId)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  name: "deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  nameWithType: "Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDeleteOptions&text=PoolDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)"
  name: "deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDeleteOptions&text=PoolDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> deleteAsync(String poolId, PoolDeleteOptions poolDeleteOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  name: "deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> deleteAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String poolId)"
  name: "deleteWithServiceResponseAsync(String poolId)"
  nameWithType: "Pools.deleteWithServiceResponseAsync(String poolId)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolDeleteHeaders>> deleteWithServiceResponseAsync(String poolId)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders&text=PoolDeleteHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDeleteOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  name: "deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  nameWithType: "Pools.deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  summary: "Deletes a Pool from the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to delete."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDeleteOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDeleteOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDeleteOptions&text=PoolDeleteOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolDeleteHeaders>> deleteWithServiceResponseAsync(String poolId, PoolDeleteOptions poolDeleteOptions)"
  desc: "Deletes a Pool from the specified Account. When you request that a Pool be deleted, the following actions occur: the Pool state is set to deleting; any ongoing resize operation on the Pool are stopped; the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks running on existing Compute Nodes are terminated and requeued (as if a resize Pool operation had been requested with the default requeue option); finally, the Pool is removed from the system. Because running Tasks are requeued, the user can rerun these Tasks by updating their Job to target a different Pool. The Tasks can then run on the new Pool. If you want to override the requeue behavior, then you should call resize Pool explicitly to shrink the Pool to zero size before deleting the Pool. If you call an Update, Patch or Delete API on a Pool in the deleting state, it will fail with HTTP status code 409 with error code PoolBeingDeleted."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolDeleteHeaders&text=PoolDeleteHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScale(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String poolId)"
  name: "disableAutoScale(String poolId)"
  nameWithType: "Pools.disableAutoScale(String poolId)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void disableAutoScale(String poolId)"
  desc: "Disables automatic scaling for a Pool."
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  name: "disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  nameWithType: "Pools.disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDisableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions&text=PoolDisableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void disableAutoScale(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  desc: "Disables automatic scaling for a Pool."
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId)"
  name: "disableAutoScaleAsync(String poolId)"
  nameWithType: "Pools.disableAutoScaleAsync(String poolId)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> disableAutoScaleAsync(String poolId)"
  desc: "Disables automatic scaling for a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  name: "disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  nameWithType: "Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDisableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions&text=PoolDisableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  desc: "Disables automatic scaling for a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  name: "disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDisableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions&text=PoolDisableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> disableAutoScaleAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Disables automatic scaling for a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  name: "disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> disableAutoScaleAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  desc: "Disables automatic scaling for a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String poolId)"
  name: "disableAutoScaleWithServiceResponseAsync(String poolId)"
  nameWithType: "Pools.disableAutoScaleWithServiceResponseAsync(String poolId)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolDisableAutoScaleHeaders>> disableAutoScaleWithServiceResponseAsync(String poolId)"
  desc: "Disables automatic scaling for a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders&text=PoolDisableAutoScaleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  name: "disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  nameWithType: "Pools.disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  summary: "Disables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to disable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolDisableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleOptions&text=PoolDisableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolDisableAutoScaleHeaders>> disableAutoScaleWithServiceResponseAsync(String poolId, PoolDisableAutoScaleOptions poolDisableAutoScaleOptions)"
  desc: "Disables automatic scaling for a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolDisableAutoScaleHeaders&text=PoolDisableAutoScaleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  name: "enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  nameWithType: "Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScale(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  name: "enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  nameWithType: "Pools.enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEnableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions&text=PoolEnableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void enableAutoScale(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  name: "enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  nameWithType: "Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  name: "enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  nameWithType: "Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEnableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions&text=PoolEnableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  name: "enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEnableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions&text=PoolEnableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)"
  name: "enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> enableAutoScaleAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, ServiceCallback<Void> serviceCallback)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  name: "enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  nameWithType: "Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolEnableAutoScaleHeaders>> enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders&text=PoolEnableAutoScaleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter,com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  name: "enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  nameWithType: "Pools.enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  summary: "Enables automatic scaling for a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to enable automatic scaling."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolEnableAutoScaleParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleParameter&text=PoolEnableAutoScaleParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEnableAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleOptions&text=PoolEnableAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolEnableAutoScaleHeaders>> enableAutoScaleWithServiceResponseAsync(String poolId, PoolEnableAutoScaleParameter poolEnableAutoScaleParameter, PoolEnableAutoScaleOptions poolEnableAutoScaleOptions)"
  desc: "Enables automatic scaling for a Pool. You cannot enable automatic scaling on a Pool if a resize operation is in progress on the Pool. If automatic scaling of the Pool is currently disabled, you must specify a valid autoscale formula as part of the request. If automatic scaling of the Pool is already enabled, you may specify a new autoscale formula and/or a new evaluation interval. You cannot call this API for the same Pool more than once every 30 seconds."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolEnableAutoScaleHeaders&text=PoolEnableAutoScaleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String poolId, String autoScaleFormula)"
  name: "evaluateAutoScale(String poolId, String autoScaleFormula)"
  nameWithType: "Pools.evaluateAutoScale(String poolId, String autoScaleFormula)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the AutoScaleRun object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  name: "evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  nameWithType: "Pools.evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEvaluateAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions&text=PoolEvaluateAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract AutoScaleRun evaluateAutoScale(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the AutoScaleRun object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula)"
  name: "evaluateAutoScaleAsync(String poolId, String autoScaleFormula)"
  nameWithType: "Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the observable to the AutoScaleRun object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  name: "evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  nameWithType: "Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEvaluateAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions&text=PoolEvaluateAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the observable to the AutoScaleRun object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)"
  name: "evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)"
  nameWithType: "Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEvaluateAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions&text=PoolEvaluateAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions, ServiceCallback<AutoScaleRun> serviceCallback)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.AutoScaleRun>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)"
  name: "evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)"
  nameWithType: "Pools.evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<AutoScaleRun> evaluateAutoScaleAsync(String poolId, String autoScaleFormula, ServiceCallback<AutoScaleRun> serviceCallback)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)"
  name: "evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)"
  nameWithType: "Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<AutoScaleRun,PoolEvaluateAutoScaleHeaders>> evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the observable to the AutoScaleRun object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders&text=PoolEvaluateAutoScaleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  name: "evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  nameWithType: "Pools.evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  summary: "Gets the result of evaluating an automatic scaling formula on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool on which to evaluate the automatic scaling formula."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The formula for the desired number of Compute Nodes in the Pool. The formula is validated and its results calculated, but it is not applied to the Pool. To apply the formula to the Pool, 'Enable automatic scaling on a Pool'. For more information about specifying this formula, see Automatically scale Compute Nodes in an Azure Batch Pool (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling)."
    name: "autoScaleFormula"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolEvaluateAutoScaleOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions?alt=com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleOptions&text=PoolEvaluateAutoScaleOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<AutoScaleRun,PoolEvaluateAutoScaleHeaders>> evaluateAutoScaleWithServiceResponseAsync(String poolId, String autoScaleFormula, PoolEvaluateAutoScaleOptions poolEvaluateAutoScaleOptions)"
  desc: "Gets the result of evaluating an automatic scaling formula on the Pool. This API is primarily for validating an autoscale formula, as it simply returns the result without applying the formula to the Pool. The Pool must have auto scaling enabled in order to evaluate a formula."
  returns:
    description: "the observable to the AutoScaleRun object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolEvaluateAutoScaleHeaders&text=PoolEvaluateAutoScaleHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.exists(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.exists(String poolId)"
  name: "exists(String poolId)"
  nameWithType: "Pools.exists(String poolId)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean exists(String poolId)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the boolean object if successful."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.exists(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.exists(String poolId, PoolExistsOptions poolExistsOptions)"
  name: "exists(String poolId, PoolExistsOptions poolExistsOptions)"
  nameWithType: "Pools.exists(String poolId, PoolExistsOptions poolExistsOptions)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolExistsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolExistsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolExistsOptions&text=PoolExistsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean exists(String poolId, PoolExistsOptions poolExistsOptions)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the boolean object if successful."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId)"
  name: "existsAsync(String poolId)"
  nameWithType: "Pools.existsAsync(String poolId)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Boolean> existsAsync(String poolId)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the observable to the boolean object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  name: "existsAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  nameWithType: "Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolExistsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolExistsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolExistsOptions&text=PoolExistsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Boolean> existsAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the observable to the boolean object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)"
  name: "existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "Pools.existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolExistsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolExistsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolExistsOptions&text=PoolExistsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Boolean> existsAsync(String poolId, PoolExistsOptions poolExistsOptions, ServiceCallback<Boolean> serviceCallback)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.existsAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)"
  name: "existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "Pools.existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Boolean> existsAsync(String poolId, ServiceCallback<Boolean> serviceCallback)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String poolId)"
  name: "existsWithServiceResponseAsync(String poolId)"
  nameWithType: "Pools.existsWithServiceResponseAsync(String poolId)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Boolean,PoolExistsHeaders>> existsWithServiceResponseAsync(String poolId)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the observable to the boolean object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolExistsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolExistsHeaders&text=PoolExistsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolExistsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  name: "existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  nameWithType: "Pools.existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  summary: "Gets basic properties of a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolExistsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolExistsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolExistsOptions&text=PoolExistsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Boolean,PoolExistsHeaders>> existsWithServiceResponseAsync(String poolId, PoolExistsOptions poolExistsOptions)"
  desc: "Gets basic properties of a Pool."
  returns:
    description: "the observable to the boolean object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolExistsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolExistsHeaders&text=PoolExistsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.get(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.get(String poolId)"
  name: "get(String poolId)"
  nameWithType: "Pools.get(String poolId)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CloudPool get(String poolId)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the CloudPool object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.get(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.get(String poolId, PoolGetOptions poolGetOptions)"
  name: "get(String poolId, PoolGetOptions poolGetOptions)"
  nameWithType: "Pools.get(String poolId, PoolGetOptions poolGetOptions)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetOptions&text=PoolGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CloudPool get(String poolId, PoolGetOptions poolGetOptions)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the CloudPool object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics()"
  name: "getAllLifetimeStatistics()"
  nameWithType: "Pools.getAllLifetimeStatistics()"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract PoolStatistics getAllLifetimeStatistics()"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the PoolStatistics object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  name: "getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  nameWithType: "Pools.getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions&text=PoolGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PoolStatistics getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the PoolStatistics object if successful."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync()"
  name: "getAllLifetimeStatisticsAsync()"
  nameWithType: "Pools.getAllLifetimeStatisticsAsync()"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<PoolStatistics> getAllLifetimeStatisticsAsync()"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the PoolStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  name: "getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  nameWithType: "Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions&text=PoolGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<PoolStatistics> getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the PoolStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)"
  name: "getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)"
  nameWithType: "Pools.getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions&text=PoolGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<PoolStatistics> getAllLifetimeStatisticsAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions, ServiceCallback<PoolStatistics> serviceCallback)"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.PoolStatistics>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)"
  name: "getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)"
  nameWithType: "Pools.getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<PoolStatistics> getAllLifetimeStatisticsAsync(ServiceCallback<PoolStatistics> serviceCallback)"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync()"
  name: "getAllLifetimeStatisticsWithServiceResponseAsync()"
  nameWithType: "Pools.getAllLifetimeStatisticsWithServiceResponseAsync()"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<PoolStatistics,PoolGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync()"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the PoolStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders&text=PoolGetAllLifetimeStatisticsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  name: "getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  nameWithType: "Pools.getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  summary: "Gets lifetime summary statistics for all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolGetAllLifetimeStatisticsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsOptions&text=PoolGetAllLifetimeStatisticsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<PoolStatistics,PoolGetAllLifetimeStatisticsHeaders>> getAllLifetimeStatisticsWithServiceResponseAsync(PoolGetAllLifetimeStatisticsOptions poolGetAllLifetimeStatisticsOptions)"
  desc: "Gets lifetime summary statistics for all of the Pools in the specified Account. Statistics are aggregated across all Pools that have ever existed in the Account, from Account creation to the last update time of the statistics. The statistics may not be immediately available. The Batch service performs periodic roll-up of statistics. The typical delay is about 30 minutes."
  returns:
    description: "the observable to the PoolStatistics object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolGetAllLifetimeStatisticsHeaders&text=PoolGetAllLifetimeStatisticsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId)"
  name: "getAsync(String poolId)"
  nameWithType: "Pools.getAsync(String poolId)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CloudPool> getAsync(String poolId)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the observable to the CloudPool object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, PoolGetOptions poolGetOptions)"
  name: "getAsync(String poolId, PoolGetOptions poolGetOptions)"
  nameWithType: "Pools.getAsync(String poolId, PoolGetOptions poolGetOptions)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetOptions&text=PoolGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<CloudPool> getAsync(String poolId, PoolGetOptions poolGetOptions)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the observable to the CloudPool object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)"
  name: "getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)"
  nameWithType: "Pools.getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetOptions&text=PoolGetOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<CloudPool> getAsync(String poolId, PoolGetOptions poolGetOptions, ServiceCallback<CloudPool> serviceCallback)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)"
  name: "getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)"
  nameWithType: "Pools.getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<CloudPool> getAsync(String poolId, ServiceCallback<CloudPool> serviceCallback)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String poolId)"
  name: "getWithServiceResponseAsync(String poolId)"
  nameWithType: "Pools.getWithServiceResponseAsync(String poolId)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<CloudPool,PoolGetHeaders>> getWithServiceResponseAsync(String poolId)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the observable to the CloudPool object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolGetHeaders&text=PoolGetHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolGetOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)"
  name: "getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)"
  nameWithType: "Pools.getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)"
  summary: "Gets information about the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to get."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolGetOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetOptions?alt=com.microsoft.azure.batch.protocol.models.PoolGetOptions&text=PoolGetOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<CloudPool,PoolGetHeaders>> getWithServiceResponseAsync(String poolId, PoolGetOptions poolGetOptions)"
  desc: "Gets information about the specified Pool."
  returns:
    description: "the observable to the CloudPool object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolGetHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolGetHeaders&text=PoolGetHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.list()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.list()"
  name: "list()"
  nameWithType: "Pools.list()"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedList<CloudPool> list()"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the PagedList&lt;CloudPool&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.list(com.microsoft.azure.batch.protocol.models.PoolListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.list(PoolListOptions poolListOptions)"
  name: "list(PoolListOptions poolListOptions)"
  nameWithType: "Pools.list(PoolListOptions poolListOptions)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListOptions&text=PoolListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudPool> list(PoolListOptions poolListOptions)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the PagedList&lt;CloudPool&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listAsync()"
  name: "listAsync()"
  nameWithType: "Pools.listAsync()"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<Page<CloudPool>> listAsync()"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listAsync(ListOperationCallback<CloudPool> serviceCallback)"
  name: "listAsync(ListOperationCallback<CloudPool> serviceCallback)"
  nameWithType: "Pools.listAsync(ListOperationCallback<CloudPool> serviceCallback)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudPool>> listAsync(ListOperationCallback<CloudPool> serviceCallback)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listAsync(PoolListOptions poolListOptions)"
  name: "listAsync(PoolListOptions poolListOptions)"
  nameWithType: "Pools.listAsync(PoolListOptions poolListOptions)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListOptions&text=PoolListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudPool>> listAsync(PoolListOptions poolListOptions)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)"
  name: "listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)"
  nameWithType: "Pools.listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListOptions&text=PoolListOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudPool>> listAsync(PoolListOptions poolListOptions, ListOperationCallback<CloudPool> serviceCallback)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNext(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNext(String nextPageLink)"
  name: "listNext(String nextPageLink)"
  nameWithType: "Pools.listNext(String nextPageLink)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudPool> listNext(String nextPageLink)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the PagedList&lt;CloudPool&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  name: "listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  nameWithType: "Pools.listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListNextOptions&text=PoolListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<CloudPool> listNext(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the PagedList&lt;CloudPool&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink)"
  name: "listNextAsync(String nextPageLink)"
  nameWithType: "Pools.listNextAsync(String nextPageLink)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudPool>> listNextAsync(String nextPageLink)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  name: "listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  nameWithType: "Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListNextOptions&text=PoolListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<CloudPool>> listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  name: "listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  nameWithType: "Pools.listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListNextOptions&text=PoolListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudPool>> listNextAsync(String nextPageLink, PoolListNextOptions poolListNextOptions, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.CloudPool>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.CloudPool>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  name: "listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  nameWithType: "Pools.listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<CloudPool>> listNextAsync(String nextPageLink, ServiceFuture<List<CloudPool>> serviceFuture, ListOperationCallback<CloudPool> serviceCallback)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(String nextPageLink)"
  name: "listNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "Pools.listNextWithServiceResponseAsync(String nextPageLink)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listNextWithServiceResponseAsync(String nextPageLink)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListHeaders&text=PoolListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  name: "listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  nameWithType: "Pools.listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListNextOptions&text=PoolListNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listNextWithServiceResponseAsync(String nextPageLink, PoolListNextOptions poolListNextOptions)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListHeaders&text=PoolListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetrics()"
  name: "listUsageMetrics()"
  nameWithType: "Pools.listUsageMetrics()"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedList<PoolUsageMetrics> listUsageMetrics()"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the PagedList&lt;PoolUsageMetrics&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  name: "listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  nameWithType: "Pools.listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions&text=PoolListUsageMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<PoolUsageMetrics> listUsageMetrics(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the PagedList&lt;PoolUsageMetrics&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync()"
  name: "listUsageMetricsAsync()"
  nameWithType: "Pools.listUsageMetricsAsync()"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsAsync()"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  name: "listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  nameWithType: "Pools.listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsAsync(ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  name: "listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  nameWithType: "Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions&text=PoolListUsageMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  name: "listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  nameWithType: "Pools.listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions&text=PoolListUsageMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(String nextPageLink)"
  name: "listUsageMetricsNext(String nextPageLink)"
  nameWithType: "Pools.listUsageMetricsNext(String nextPageLink)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<PoolUsageMetrics> listUsageMetricsNext(String nextPageLink)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the PagedList&lt;PoolUsageMetrics&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  name: "listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  nameWithType: "Pools.listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions&text=PoolListUsageMetricsNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedList<PoolUsageMetrics> listUsageMetricsNext(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the PagedList&lt;PoolUsageMetrics&gt; object if successful."
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink)"
  name: "listUsageMetricsNextAsync(String nextPageLink)"
  nameWithType: "Pools.listUsageMetricsNextAsync(String nextPageLink)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  name: "listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  nameWithType: "Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions&text=PoolListUsageMetricsNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  name: "listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  nameWithType: "Pools.listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions&text=PoolListUsageMetricsNextOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.batch.protocol.models.PoolUsageMetrics>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  name: "listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  nameWithType: "Pools.listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the ServiceFuture object tracking the Retrofit calls"
    name: "serviceFuture"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.azure.ListOperationCallback?alt=com.microsoft.azure.ListOperationCallback&text=ListOperationCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(String nextPageLink, ServiceFuture<List<PoolUsageMetrics>> serviceFuture, ListOperationCallback<PoolUsageMetrics> serviceCallback)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)"
  name: "listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsNextWithServiceResponseAsync(String nextPageLink)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders&text=PoolListUsageMetricsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  name: "listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  nameWithType: "Pools.listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "The NextLink from the previous successful call to List operation."
    name: "nextPageLink"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsNextOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions&text=PoolListUsageMetricsNextOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsNextWithServiceResponseAsync(String nextPageLink, PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders&text=PoolListUsageMetricsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync()"
  name: "listUsageMetricsWithServiceResponseAsync()"
  nameWithType: "Pools.listUsageMetricsWithServiceResponseAsync()"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsWithServiceResponseAsync()"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders&text=PoolListUsageMetricsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  name: "listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  nameWithType: "Pools.listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListUsageMetricsOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsOptions&text=PoolListUsageMetricsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<PoolUsageMetrics>,PoolListUsageMetricsHeaders>> listUsageMetricsWithServiceResponseAsync(PoolListUsageMetricsOptions poolListUsageMetricsOptions)"
  desc: "Lists the usage metrics, aggregated by Pool across individual time intervals, for the specified Account. If you do not specify a $filter clause including a poolId, the response includes all Pools that existed in the Account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned."
  returns:
    description: "the observable to the PagedList&lt;PoolUsageMetrics&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsHeaders&text=PoolListUsageMetricsHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync()"
  name: "listWithServiceResponseAsync()"
  nameWithType: "Pools.listWithServiceResponseAsync()"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listWithServiceResponseAsync()"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListHeaders&text=PoolListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(com.microsoft.azure.batch.protocol.models.PoolListOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.listWithServiceResponseAsync(PoolListOptions poolListOptions)"
  name: "listWithServiceResponseAsync(PoolListOptions poolListOptions)"
  nameWithType: "Pools.listWithServiceResponseAsync(PoolListOptions poolListOptions)"
  summary: "Lists all of the Pools in the specified Account."
  modifiers:
  - "abstract"
  parameters:
  - description: "Additional parameters for the operation"
    name: "poolListOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListOptions&text=PoolListOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Page<CloudPool>,PoolListHeaders>> listWithServiceResponseAsync(PoolListOptions poolListOptions)"
  desc: "Lists all of the Pools in the specified Account."
  returns:
    description: "the observable to the PagedList&lt;CloudPool&gt; object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.Page?alt=com.microsoft.azure.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolListHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolListHeaders&text=PoolListHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patch(String poolId, PoolPatchParameter poolPatchParameter)"
  name: "patch(String poolId, PoolPatchParameter poolPatchParameter)"
  nameWithType: "Pools.patch(String poolId, PoolPatchParameter poolPatchParameter)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void patch(String poolId, PoolPatchParameter poolPatchParameter)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
- uid: "com.microsoft.azure.batch.protocol.Pools.patch(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  name: "patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  nameWithType: "Pools.patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchOptions?alt=com.microsoft.azure.batch.protocol.models.PoolPatchOptions&text=PoolPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void patch(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
- uid: "com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  name: "patchAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  nameWithType: "Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  name: "patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  nameWithType: "Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchOptions?alt=com.microsoft.azure.batch.protocol.models.PoolPatchOptions&text=PoolPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)"
  name: "patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchOptions?alt=com.microsoft.azure.batch.protocol.models.PoolPatchOptions&text=PoolPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.patchAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)"
  name: "patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> patchAsync(String poolId, PoolPatchParameter poolPatchParameter, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  name: "patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  nameWithType: "Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolPatchHeaders>> patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolPatchHeaders&text=PoolPatchHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolPatchParameter,com.microsoft.azure.batch.protocol.models.PoolPatchOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  name: "patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  nameWithType: "Pools.patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolPatchParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchParameter?alt=com.microsoft.azure.batch.protocol.models.PoolPatchParameter&text=PoolPatchParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolPatchOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchOptions?alt=com.microsoft.azure.batch.protocol.models.PoolPatchOptions&text=PoolPatchOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolPatchHeaders>> patchWithServiceResponseAsync(String poolId, PoolPatchParameter poolPatchParameter, PoolPatchOptions poolPatchOptions)"
  desc: "Updates the properties of the specified Pool. This only replaces the Pool properties specified in the request. For example, if the Pool has a StartTask associated with it, and a request does not specify a StartTask element, then the Pool keeps the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolPatchHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolPatchHeaders&text=PoolPatchHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  name: "removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  nameWithType: "Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodes(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  name: "removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  nameWithType: "Pools.removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolRemoveNodesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions&text=PoolRemoveNodesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void removeNodes(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  name: "removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  nameWithType: "Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  name: "removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  nameWithType: "Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolRemoveNodesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions&text=PoolRemoveNodesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)"
  name: "removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolRemoveNodesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions&text=PoolRemoveNodesOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)"
  name: "removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> removeNodesAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, ServiceCallback<Void> serviceCallback)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  name: "removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  nameWithType: "Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolRemoveNodesHeaders>> removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders&text=PoolRemoveNodesHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.NodeRemoveParameter,com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  name: "removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  nameWithType: "Pools.removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  summary: "Removes Compute Nodes from the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool from which you want to remove Compute Nodes."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "nodeRemoveParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.NodeRemoveParameter?alt=com.microsoft.azure.batch.protocol.models.NodeRemoveParameter&text=NodeRemoveParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolRemoveNodesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolRemoveNodesOptions&text=PoolRemoveNodesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolRemoveNodesHeaders>> removeNodesWithServiceResponseAsync(String poolId, NodeRemoveParameter nodeRemoveParameter, PoolRemoveNodesOptions poolRemoveNodesOptions)"
  desc: "Removes Compute Nodes from the specified Pool. This operation can only run when the allocation state of the Pool is steady. When this operation runs, the allocation state changes from steady to resizing."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolRemoveNodesHeaders&text=PoolRemoveNodesHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resize(String poolId, PoolResizeParameter poolResizeParameter)"
  name: "resize(String poolId, PoolResizeParameter poolResizeParameter)"
  nameWithType: "Pools.resize(String poolId, PoolResizeParameter poolResizeParameter)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void resize(String poolId, PoolResizeParameter poolResizeParameter)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
- uid: "com.microsoft.azure.batch.protocol.Pools.resize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  name: "resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  nameWithType: "Pools.resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolResizeOptions&text=PoolResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void resize(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
- uid: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  name: "resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  nameWithType: "Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  name: "resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  nameWithType: "Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolResizeOptions&text=PoolResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)"
  name: "resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolResizeOptions&text=PoolResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)"
  name: "resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> resizeAsync(String poolId, PoolResizeParameter poolResizeParameter, ServiceCallback<Void> serviceCallback)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  name: "resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  nameWithType: "Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolResizeHeaders>> resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolResizeHeaders&text=PoolResizeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolResizeParameter,com.microsoft.azure.batch.protocol.models.PoolResizeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  name: "resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  nameWithType: "Pools.resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  summary: "Changes the number of Compute Nodes that are assigned to a Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to resize."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolResizeParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeParameter?alt=com.microsoft.azure.batch.protocol.models.PoolResizeParameter&text=PoolResizeParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolResizeOptions&text=PoolResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolResizeHeaders>> resizeWithServiceResponseAsync(String poolId, PoolResizeParameter poolResizeParameter, PoolResizeOptions poolResizeOptions)"
  desc: "Changes the number of Compute Nodes that are assigned to a Pool. You can only resize a Pool when its allocation state is steady. If the Pool is already resizing, the request fails with status code 409. When you resize a Pool, the Pool's allocation state changes from steady to resizing. You cannot resize Pools which are configured for automatic scaling. If you try to do this, the Batch service returns an error 409. If you resize a Pool downwards, the Batch service chooses which Compute Nodes to remove. To remove specific Compute Nodes, use the Pool remove Compute Nodes API instead."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolResizeHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolResizeHeaders&text=PoolResizeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResize(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResize(String poolId)"
  name: "stopResize(String poolId)"
  nameWithType: "Pools.stopResize(String poolId)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stopResize(String poolId)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResize(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  name: "stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  nameWithType: "Pools.stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolStopResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions&text=PoolStopResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void stopResize(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId)"
  name: "stopResizeAsync(String poolId)"
  nameWithType: "Pools.stopResizeAsync(String poolId)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> stopResizeAsync(String poolId)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  name: "stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  nameWithType: "Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolStopResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions&text=PoolStopResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  name: "stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolStopResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions&text=PoolStopResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> stopResizeAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  name: "stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> stopResizeAsync(String poolId, ServiceCallback<Void> serviceCallback)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String poolId)"
  name: "stopResizeWithServiceResponseAsync(String poolId)"
  nameWithType: "Pools.stopResizeWithServiceResponseAsync(String poolId)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolStopResizeHeaders>> stopResizeWithServiceResponseAsync(String poolId)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders&text=PoolStopResizeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  name: "stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  nameWithType: "Pools.stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  summary: "Stops an ongoing resize operation on the Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool whose resizing you want to stop."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolStopResizeOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeOptions&text=PoolStopResizeOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolStopResizeHeaders>> stopResizeWithServiceResponseAsync(String poolId, PoolStopResizeOptions poolStopResizeOptions)"
  desc: "Stops an ongoing resize operation on the Pool. This does not restore the Pool to its previous state before the resize operation: it only stops any further changes being made, and the Pool maintains its current state. After stopping, the Pool stabilizes at the number of Compute Nodes it was at when the stop operation was done. During the stop operation, the Pool allocation state changes first to stopping and then to steady. A resize operation need not be an explicit resize Pool request; this API can also be used to halt the initial sizing of the Pool when it is created."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolStopResizeHeaders&text=PoolStopResizeHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  name: "updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  nameWithType: "Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
- uid: "com.microsoft.azure.batch.protocol.Pools.updateProperties(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  name: "updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  nameWithType: "Pools.updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolUpdatePropertiesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions&text=PoolUpdatePropertiesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void updateProperties(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
- uid: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  name: "updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  nameWithType: "Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  name: "updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  nameWithType: "Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolUpdatePropertiesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions&text=PoolUpdatePropertiesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)"
  name: "updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolUpdatePropertiesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions&text=PoolUpdatePropertiesOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)"
  name: "updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)"
  nameWithType: "Pools.updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "the async ServiceCallback to handle successful and failed responses."
    name: "serviceCallback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Void> updatePropertiesAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, ServiceCallback<Void> serviceCallback)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceFuture\"></xref> object"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  name: "updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  nameWithType: "Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolUpdatePropertiesHeaders>> updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders&text=PoolUpdatePropertiesHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter,com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  name: "updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  nameWithType: "Pools.updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  summary: "Updates the properties of the specified Pool."
  modifiers:
  - "abstract"
  parameters:
  - description: "The ID of the Pool to update."
    name: "poolId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The parameters for the request."
    name: "poolUpdatePropertiesParameter"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesParameter&text=PoolUpdatePropertiesParameter\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "poolUpdatePropertiesOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesOptions&text=PoolUpdatePropertiesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<Void,PoolUpdatePropertiesHeaders>> updatePropertiesWithServiceResponseAsync(String poolId, PoolUpdatePropertiesParameter poolUpdatePropertiesParameter, PoolUpdatePropertiesOptions poolUpdatePropertiesOptions)"
  desc: "Updates the properties of the specified Pool. This fully replaces all the updatable properties of the Pool. For example, if the Pool has a StartTask associated with it and if StartTask is not specified with this request, then the Batch service will remove the existing StartTask."
  returns:
    description: "the <xref uid=\"com.microsoft.rest.ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponseWithHeaders\"></xref> object if successful."
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders?alt=com.microsoft.azure.batch.protocol.models.PoolUpdatePropertiesHeaders&text=PoolUpdatePropertiesHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in Pools."
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:9.0.0
