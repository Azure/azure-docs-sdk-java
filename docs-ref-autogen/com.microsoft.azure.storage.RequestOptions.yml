### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.RequestOptions
  id: RequestOptions
  parent: com.microsoft.azure.storage
  children:
  - com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions)
  - com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
  - com.microsoft.azure.storage.RequestOptions.getLocationMode()
  - com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  - com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  - com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  - com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  - com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  - com.microsoft.azure.storage.RequestOptions.RequestOptions()
  - com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions)
  - com.microsoft.azure.storage.RequestOptions.requireEncryption()
  - com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean)
  - com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)
  - com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)
  - com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)
  - com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)
  - com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.storage.RequestOptions
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
      branch: legacy-master
      repo: https://github.com/azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 26
  package: com.microsoft.azure.storage
  summary: "<p>Represents the options to use while processing a given request. </p>"
  syntax: &o1
    content: public class RequestOptions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions)
  id: applyBaseDefaultsInternal(final RequestOptions)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  nameWithType: RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  fullName: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  overload: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 95
  package: com.microsoft.azure.storage
  summary: "<p>Populates the default timeout, retry policy, and location mode from client if they are null.</p>\r\n<p></p>"
  syntax:
    content: protected static void applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
    parameters:
    - id: modifiedOptions
      type: 93de0ef9com.microsoft.azure.storage.RequestOptions
      description: <p>The input options to copy from when applying defaults </p>
- uid: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
  id: disableHttpsSocketKeepAlive()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: disableHttpsSocketKeepAlive()
  nameWithType: RequestOptions.disableHttpsSocketKeepAlive()
  fullName: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
  overload: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 213
  package: com.microsoft.azure.storage
  summary: "<p>Gets a value to indicate whether https socket keep-alive should be disabled. Use  to disable keep-alive; otherwise, . For more information about disableHttpsSocketKeepAlive defaults, see <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref></p>\r\n<p></p>"
  syntax:
    content: public Boolean disableHttpsSocketKeepAlive()
    return:
      type: 866c2227
      description: <p>A value to indicate whether https socket keep-alive should be disabled. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getLocationMode()
  id: getLocationMode()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: getLocationMode()
  nameWithType: RequestOptions.getLocationMode()
  fullName: com.microsoft.azure.storage.RequestOptions.getLocationMode()
  overload: com.microsoft.azure.storage.RequestOptions.getLocationMode*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 181
  package: com.microsoft.azure.storage
  summary: "<p>Gets the default location mode for this request. For more information about location mode, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setLocationMode(LocationMode)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final LocationMode getLocationMode()
    return:
      type: 93de0ef9com.microsoft.azure.storage.LocationMode
      description: <p>A <xref uid="com.microsoft.azure.storage.LocationMode" data-throw-if-not-resolved="false" data-raw-source="LocationMode"></xref> object that represents the location mode for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  id: getMaximumExecutionTimeInMs()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: getMaximumExecutionTimeInMs()
  nameWithType: RequestOptions.getMaximumExecutionTimeInMs()
  fullName: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  overload: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 191
  package: com.microsoft.azure.storage
  summary: "<p>Gets the maximum execution time for this request. For more information about maximum execution time defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setMaximumExecutionTimeInMs(Integer)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Integer getMaximumExecutionTimeInMs()
    return:
      type: 08effaa0
      description: <p>The current maximum execution time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  id: getOperationExpiryTimeInMs()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: getOperationExpiryTimeInMs()
  nameWithType: RequestOptions.getOperationExpiryTimeInMs()
  fullName: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  overload: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 226
  package: com.microsoft.azure.storage
  summary: "<p>RESERVED FOR INTERNAL USE.</p>\r\n<p>Returns the time at which this operation expires. This is computed by adding the time the operation begins and the maximum execution time and will be null if maximum execution time is null. For more information about maximum execution time, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setMaximumExecutionTimeInMs(Integer)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Long getOperationExpiryTimeInMs()
    return:
      type: 34f09483
      description: <p>The current operation expiry time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  id: getRetryPolicyFactory()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: getRetryPolicyFactory()
  nameWithType: RequestOptions.getRetryPolicyFactory()
  fullName: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  overload: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 161
  package: com.microsoft.azure.storage
  summary: "<p>Gets the retry policy to use for this request. For more information about the retry policy defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setRetryPolicyFactory(RetryPolicyFactory)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final RetryPolicyFactory getRetryPolicyFactory()
    return:
      type: 93de0ef9com.microsoft.azure.storage.RetryPolicyFactory
      description: <p>An <xref uid="com.microsoft.azure.storage.RetryPolicyFactory" data-throw-if-not-resolved="false" data-raw-source="RetryPolicyFactory"></xref> object that represents the current retry policy.</p>
- uid: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  id: getTimeoutIntervalInMs()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: getTimeoutIntervalInMs()
  nameWithType: RequestOptions.getTimeoutIntervalInMs()
  fullName: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  overload: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 171
  package: com.microsoft.azure.storage
  summary: "<p>Returns the timeout value for this request. For more information about the timeout defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setTimeoutIntervalInMs(Integer)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public final Integer getTimeoutIntervalInMs()
    return:
      type: 3437983f
      description: <p>The current timeout value, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  id: populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  nameWithType: RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  fullName: com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  overload: com.microsoft.azure.storage.RequestOptions.populateRequestOptions*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 117
  package: com.microsoft.azure.storage
  summary: "<p>Populates any null fields in the first requestOptions object with values from the second requestOptions object. </p>"
  syntax:
    content: protected static void populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
    parameters:
    - id: modifiedOptions
      type: com.microsoft.azure.storage.RequestOptions
    - id: clientOptions
      type: 93de0ef9com.microsoft.azure.storage.RequestOptions
    - id: setStartTime
      type: 4dda0764
- uid: com.microsoft.azure.storage.RequestOptions.RequestOptions()
  id: RequestOptions()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: RequestOptions()
  nameWithType: RequestOptions.RequestOptions()
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions()
  overload: com.microsoft.azure.storage.RequestOptions.RequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 66
  package: com.microsoft.azure.storage
  summary: "<p>Creates an instance of the  class. </p>"
  syntax:
    content: public RequestOptions()
- uid: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions)
  id: RequestOptions(final RequestOptions)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: RequestOptions(final RequestOptions other)
  nameWithType: RequestOptions.RequestOptions(final RequestOptions other)
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions other)
  overload: com.microsoft.azure.storage.RequestOptions.RequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 77
  package: com.microsoft.azure.storage
  summary: "<p>Creates an instance of the  class by copying values from another  instance.</p>\r\n<p></p>"
  syntax:
    content: public RequestOptions(final RequestOptions other)
    parameters:
    - id: other
      type: 93de0ef9com.microsoft.azure.storage.RequestOptions
      description: <p>A <code>RequestOptions</code> object that represents the request options to copy. </p>
- uid: com.microsoft.azure.storage.RequestOptions.requireEncryption()
  id: requireEncryption()
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: requireEncryption()
  nameWithType: RequestOptions.requireEncryption()
  fullName: com.microsoft.azure.storage.RequestOptions.requireEncryption()
  overload: com.microsoft.azure.storage.RequestOptions.requireEncryption*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 202
  package: com.microsoft.azure.storage
  summary: "<p>Gets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . For more information about require encryption defaults, see <xref uid=\"com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"setRequireEncryption(Boolean)\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public Boolean requireEncryption()
    return:
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean)
  id: setDisableHttpsSocketKeepAlive(Boolean)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  nameWithType: RequestOptions.setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  fullName: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  overload: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 338
  package: com.microsoft.azure.storage
  summary: "<p>Sets a value to indicate whether https socket keep-alive should be disabled. Use  to disable keep-alive; otherwise, </p>\r\n<p>The default is set in the client and is by default true, indicating that https socket keep-alive will be disabled. You can change the value on this request by setting this property. You can also change the value on on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the appropriate value. </p>\r\n<p>Setting keep-alive on https sockets is to work around a bug in the JVM where connection timeouts are not honored on retried requests. In those cases, you may choose to use socket keep-alive as a fallback. Unfortunately, the timeout value must be taken from a JVM property rather than configured locally. Therefore, in rare cases the JVM has configured aggressively short keep-alive times, it may not be beneficial to enable the use of keep-alives lest they interfere with long running data transfer operations.</p>\r\n<p></p>"
  syntax:
    content: public void setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
    parameters:
    - id: disableHttpsSocketKeepAlive
      type: 866c2227
      description: <p>A value to indicate whether https socket keep-alive should be disabled. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)
  id: setLocationMode(final LocationMode)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: setLocationMode(final LocationMode locationMode)
  nameWithType: RequestOptions.setLocationMode(final LocationMode locationMode)
  fullName: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode locationMode)
  overload: com.microsoft.azure.storage.RequestOptions.setLocationMode*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 280
  package: com.microsoft.azure.storage
  summary: "<p>Sets the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> for this request. </p>\r\n<p>The default <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.LocationMode.PRIMARY_ONLY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode#PRIMARY_ONLY\"></xref>. You can change the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref>.</p>\r\n<p></p>"
  syntax: &o4
    content: public void setLocationMode(final LocationMode locationMode)
    parameters:
    - id: locationMode
      type: 93de0ef9com.microsoft.azure.storage.LocationMode
      description: <p>the locationMode to set </p>
- uid: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)
  id: setMaximumExecutionTimeInMs(Integer)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  nameWithType: RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  fullName: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  overload: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 300
  package: com.microsoft.azure.storage
  summary: "<p>Sets the maximum execution time to use when making this request. </p>\r\n<p>The maximum execution time interval begins at the time that the client begins building the request. The maximum execution time is checked intermittently while uploading data, downloading data, and before executing retries. The service will continue to upload, download, and retry until the maximum execution time is reached. At that time, any partial uploads or downloads will be cancelled and an exception will be thrown. </p>\r\n<p>The default maximum execution is set in the client and is by default null, indicating no maximum time. You can change the maximum execution time on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the maximum execution time.</p>\r\n<p></p>"
  syntax: &o5
    content: public void setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
    parameters:
    - id: maximumExecutionTimeInMs
      type: 08effaa0
      description: <p>The maximum execution time, in milliseconds, to use for this request. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)
  id: setRequireEncryption(Boolean)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: setRequireEncryption(Boolean requireEncryption)
  nameWithType: RequestOptions.setRequireEncryption(Boolean requireEncryption)
  fullName: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean requireEncryption)
  overload: com.microsoft.azure.storage.RequestOptions.setRequireEncryption*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 316
  package: com.microsoft.azure.storage
  summary: "<p>Sets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . </p>\r\n<p>The default is set in the client and is by default false, indicating encryption is not required. You can change the value on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the appropriate value.</p>\r\n<p></p>"
  syntax: &o6
    content: public void setRequireEncryption(Boolean requireEncryption)
    parameters:
    - id: requireEncryption
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)
  id: setRetryPolicyFactory(final RetryPolicyFactory)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  nameWithType: RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  fullName: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  overload: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 246
  package: com.microsoft.azure.storage
  summary: "<p>Sets the RetryPolicyFactory object to use for this request. </p>\r\n<p>The default RetryPolicyFactory is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.RetryExponentialRetry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryExponentialRetry\"></xref>. You can change the RetryPolicyFactory on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that RetryPolicyFactory.</p>\r\n<p></p>"
  syntax: &o2
    content: public final void setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
    parameters:
    - id: retryPolicyFactory
      type: 93de0ef9com.microsoft.azure.storage.RetryPolicyFactory
      description: <p>the RetryPolicyFactory object to use when making service requests.</p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)
  id: setTimeoutIntervalInMs(final Integer)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  langs:
  - java
  name: setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  nameWithType: RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  fullName: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  overload: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/RequestOptions.java
    startLine: 265
  package: com.microsoft.azure.storage
  summary: "<p>Sets the timeout to use when making this request. </p>\r\n<p>The server timeout interval begins at the time that the complete request has been received by the service, and the server begins processing the response. If the timeout interval elapses before the response is returned to the client, the operation times out. The timeout interval resets with each retry, if the request is retried. </p>\r\n<p>The default server timeout is set in the client and is by default null, indicating no server timeout. You can change the server timeout on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that server timeout.</p>\r\n<p></p>"
  syntax: &o3
    content: public final void setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
    parameters:
    - id: timeoutIntervalInMs
      type: 3437983f
      description: <p>The timeout, in milliseconds, to use for this request. </p>
    return:
      type: 3f6357ce
references:
- uid: com.microsoft.azure.storage.RequestOptions.RequestOptions*
  name: RequestOptions
  nameWithType: RequestOptions.RequestOptions
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions
  package: com.microsoft.azure.storage
- uid: 93de0ef9com.microsoft.azure.storage.RequestOptions
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.RequestOptions
    name: RequestOptions
    fullName: com.microsoft.azure.storage.RequestOptions
    href: com.microsoft.azure.storage.RequestOptions.yml
- uid: 93de0ef9com.microsoft.azure.storage.RetryPolicyFactory
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.RetryPolicyFactory
    name: RetryPolicyFactory
    fullName: com.microsoft.azure.storage.RetryPolicyFactory
    href: com.microsoft.azure.storage.RetryPolicyFactory.yml
- uid: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory*
  name: getRetryPolicyFactory
  nameWithType: RequestOptions.getRetryPolicyFactory
  fullName: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory
  package: com.microsoft.azure.storage
- uid: 3437983f
  spec.java:
  - name: final Integer
    fullName: final Integer
- uid: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs*
  name: getTimeoutIntervalInMs
  nameWithType: RequestOptions.getTimeoutIntervalInMs
  fullName: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs
  package: com.microsoft.azure.storage
- uid: 93de0ef9com.microsoft.azure.storage.LocationMode
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.LocationMode
    name: LocationMode
    fullName: com.microsoft.azure.storage.LocationMode
    href: com.microsoft.azure.storage.LocationMode.yml
- uid: com.microsoft.azure.storage.RequestOptions.getLocationMode*
  name: getLocationMode
  nameWithType: RequestOptions.getLocationMode
  fullName: com.microsoft.azure.storage.RequestOptions.getLocationMode
  package: com.microsoft.azure.storage
- uid: 08effaa0
  spec.java:
  - name: Integer
    fullName: Integer
- uid: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs*
  name: getMaximumExecutionTimeInMs
  nameWithType: RequestOptions.getMaximumExecutionTimeInMs
  fullName: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs
  package: com.microsoft.azure.storage
- uid: 866c2227
  spec.java:
  - name: Boolean
    fullName: Boolean
- uid: com.microsoft.azure.storage.RequestOptions.requireEncryption*
  name: requireEncryption
  nameWithType: RequestOptions.requireEncryption
  fullName: com.microsoft.azure.storage.RequestOptions.requireEncryption
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive*
  name: disableHttpsSocketKeepAlive
  nameWithType: RequestOptions.disableHttpsSocketKeepAlive
  fullName: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive
  package: com.microsoft.azure.storage
- uid: 34f09483
  spec.java:
  - name: Long
    fullName: Long
- uid: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs*
  name: getOperationExpiryTimeInMs
  nameWithType: RequestOptions.getOperationExpiryTimeInMs
  fullName: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs
  package: com.microsoft.azure.storage
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory*
  name: setRetryPolicyFactory
  nameWithType: RequestOptions.setRetryPolicyFactory
  fullName: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs*
  name: setTimeoutIntervalInMs
  nameWithType: RequestOptions.setTimeoutIntervalInMs
  fullName: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.RequestOptions.setLocationMode*
  name: setLocationMode
  nameWithType: RequestOptions.setLocationMode
  fullName: com.microsoft.azure.storage.RequestOptions.setLocationMode
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs*
  name: setMaximumExecutionTimeInMs
  nameWithType: RequestOptions.setMaximumExecutionTimeInMs
  fullName: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.RequestOptions.setRequireEncryption*
  name: setRequireEncryption
  nameWithType: RequestOptions.setRequireEncryption
  fullName: com.microsoft.azure.storage.RequestOptions.setRequireEncryption
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive*
  name: setDisableHttpsSocketKeepAlive
  nameWithType: RequestOptions.setDisableHttpsSocketKeepAlive
  fullName: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal*
  name: applyBaseDefaultsInternal
  nameWithType: RequestOptions.applyBaseDefaultsInternal
  fullName: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal
  package: com.microsoft.azure.storage
- uid: 4dda0764
  spec.java:
  - name: final boolean
    fullName: final boolean
- uid: com.microsoft.azure.storage.RequestOptions.populateRequestOptions*
  name: populateRequestOptions
  nameWithType: RequestOptions.populateRequestOptions
  fullName: com.microsoft.azure.storage.RequestOptions.populateRequestOptions
  package: com.microsoft.azure.storage
- uid: com.microsoft.azure.storage.blob.BlobRequestOptions
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob.BlobRequestOptions.yml
  name: BlobRequestOptions
  nameWithType: BlobRequestOptions
  fullName: com.microsoft.azure.storage.blob.BlobRequestOptions
  type: Class
  summary: "<p>Represents a set of options that may be specified on a request. </p>"
  syntax:
    content: public class BlobRequestOptions extends RequestOptions
- uid: com.microsoft.azure.storage.file.FileRequestOptions
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file.FileRequestOptions.yml
  name: FileRequestOptions
  nameWithType: FileRequestOptions
  fullName: com.microsoft.azure.storage.file.FileRequestOptions
  type: Class
  summary: "<p>Represents a set of options that may be specified on a request. </p>"
  syntax:
    content: public class FileRequestOptions extends RequestOptions
- uid: com.microsoft.azure.storage.queue.QueueRequestOptions
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue.QueueRequestOptions.yml
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions
  type: Class
  summary: "<p>Represents a set of options that may be specified on a queue request. </p>"
  syntax:
    content: public class QueueRequestOptions extends RequestOptions
- uid: com.microsoft.azure.storage.table.TableRequestOptions
  parent: com.microsoft.azure.storage.table
  href: com.microsoft.azure.storage.table.TableRequestOptions.yml
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: com.microsoft.azure.storage.table.TableRequestOptions
  type: Class
  summary: "<p>Represents a set of timeout, payload format, and retry policy options that may be specified for a table operation request. </p>"
  syntax:
    content: public class TableRequestOptions
- uid: com.microsoft.azure.storage.RetryPolicyFactory
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.RetryPolicyFactory.yml
  name: RetryPolicyFactory
  nameWithType: RetryPolicyFactory
  fullName: com.microsoft.azure.storage.RetryPolicyFactory
  type: Interface
  summary: "<p>Represents a retry policy factory that creates a new <xref uid=\"com.microsoft.azure.storage.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryPolicy\"></xref> object per transaction. </p>"
  syntax:
    content: public interface RetryPolicyFactory
- uid: com.microsoft.azure.storage.LocationMode
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.LocationMode.yml
  name: LocationMode
  nameWithType: LocationMode
  fullName: com.microsoft.azure.storage.LocationMode
  type: Enum
  summary: "<p>Specifies the location mode used to decide which location the request should be sent to. </p>"
  syntax:
    content: public enum LocationMode
- uid: com.microsoft.azure.storage.RequestOptions
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.storage.RequestOptions
  type: Class
  summary: "<p>Represents the options to use while processing a given request. </p>"
  syntax: *o1
- uid: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  nameWithType: RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  fullName: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  type: Method
  summary: "<p>Sets the RetryPolicyFactory object to use for this request. </p>\r\n<p>The default RetryPolicyFactory is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.RetryExponentialRetry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RetryExponentialRetry\"></xref>. You can change the RetryPolicyFactory on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that RetryPolicyFactory.</p>\r\n<p></p>"
  syntax: *o2
- uid: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  nameWithType: RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  fullName: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  type: Method
  summary: "<p>Sets the timeout to use when making this request. </p>\r\n<p>The server timeout interval begins at the time that the complete request has been received by the service, and the server begins processing the response. If the timeout interval elapses before the response is returned to the client, the operation times out. The timeout interval resets with each retry, if the request is retried. </p>\r\n<p>The default server timeout is set in the client and is by default null, indicating no server timeout. You can change the server timeout on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that server timeout.</p>\r\n<p></p>"
  syntax: *o3
- uid: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setLocationMode(final LocationMode locationMode)
  nameWithType: RequestOptions.setLocationMode(final LocationMode locationMode)
  fullName: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode locationMode)
  type: Method
  summary: "<p>Sets the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> for this request. </p>\r\n<p>The default <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> is set in the client and is by default <xref uid=\"com.microsoft.azure.storage.LocationMode.PRIMARY_ONLY\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode#PRIMARY_ONLY\"></xref>. You can change the <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref> on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use that <xref uid=\"com.microsoft.azure.storage.LocationMode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocationMode\"></xref>.</p>\r\n<p></p>"
  syntax: *o4
- uid: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  nameWithType: RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  fullName: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  type: Method
  summary: "<p>Sets the maximum execution time to use when making this request. </p>\r\n<p>The maximum execution time interval begins at the time that the client begins building the request. The maximum execution time is checked intermittently while uploading data, downloading data, and before executing retries. The service will continue to upload, download, and retry until the maximum execution time is reached. At that time, any partial uploads or downloads will be cancelled and an exception will be thrown. </p>\r\n<p>The default maximum execution is set in the client and is by default null, indicating no maximum time. You can change the maximum execution time on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the maximum execution time.</p>\r\n<p></p>"
  syntax: *o5
- uid: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)
  parent: com.microsoft.azure.storage.RequestOptions
  href: com.microsoft.azure.storage.RequestOptions.yml
  name: setRequireEncryption(Boolean requireEncryption)
  nameWithType: RequestOptions.setRequireEncryption(Boolean requireEncryption)
  fullName: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean requireEncryption)
  type: Method
  summary: "<p>Sets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . </p>\r\n<p>The default is set in the client and is by default false, indicating encryption is not required. You can change the value on this request by setting this property. You can also change the value on the <xref uid=\"com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceClient#getDefaultRequestOptions()\"></xref> object so that all subsequent requests made via the service client will use the appropriate value.</p>\r\n<p></p>"
  syntax: *o6
- uid: com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()
  parent: com.microsoft.azure.storage.ServiceClient
  href: com.microsoft.azure.storage.ServiceClient.yml
  name: getDefaultRequestOptions()
  nameWithType: ServiceClient.getDefaultRequestOptions()
  fullName: com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()
  type: Method
  summary: "<p>Gets the <xref uid=\"com.microsoft.azure.storage.RequestOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions\"></xref> that is used for requests associated with this </p>\r\n<p></p>"
  syntax:
    content: public abstract RequestOptions getDefaultRequestOptions()
    return:
      type: 13c86962com.microsoft.azure.storage.RequestOptions
      description: <p>The <xref uid="com.microsoft.azure.storage.RequestOptions" data-throw-if-not-resolved="false" data-raw-source="RequestOptions"></xref> object containing the values used by this <code>ServiceClient</code></p>
- uid: com.microsoft.azure.storage.RetryExponentialRetry
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage.RetryExponentialRetry.yml
  name: RetryExponentialRetry
  nameWithType: RetryExponentialRetry
  fullName: com.microsoft.azure.storage.RetryExponentialRetry
  type: Class
  summary: "<p>Represents a retry policy that performs a specified number of retries, using a randomized exponential backoff scheme to determine the interval between retries.</p>\r\n<p>This class extends the <xref uid=\"com.microsoft.azure.storage.RetryPolicy\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.storage.RetryPolicy\"></xref> class and implements the <xref uid=\"com.microsoft.azure.storage.RetryPolicyFactory\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.microsoft.azure.storage.RetryPolicyFactory\"></xref> interface. </p>"
  syntax:
    content: public class RetryExponentialRetry
- uid: com.microsoft.azure.storage.LocationMode.PRIMARY_ONLY
  parent: com.microsoft.azure.storage.LocationMode
  href: com.microsoft.azure.storage.LocationMode.yml
  name: PRIMARY_ONLY
  nameWithType: LocationMode.PRIMARY_ONLY
  fullName: com.microsoft.azure.storage.LocationMode.PRIMARY_ONLY
  type: Field
  summary: "<p>Requests should always be sent to the primary location. </p>"
  syntax:
    content: public PRIMARY_ONLY
