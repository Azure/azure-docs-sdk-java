### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions()
  name: RequestOptions()
  nameWithType: RequestOptions.RequestOptions()
  summary: <p>Creates an instance of the  class. </p>
  syntax: public RequestOptions()
  uid: com.microsoft.azure.storage.RequestOptions.RequestOptions()
- fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions other)
  name: RequestOptions(final RequestOptions other)
  nameWithType: RequestOptions.RequestOptions(final RequestOptions other)
  parameters:
  - description: <p>A <code>RequestOptions</code> object that represents the request options to copy. </p>
    name: other
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class by copying values from another  instance.</p>

    <p></p>
  syntax: public RequestOptions(final RequestOptions other)
  uid: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  name: applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  nameWithType: RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  parameters:
  - description: <p>The input options to copy from when applying defaults </p>
    name: modifiedOptions
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Populates the default timeout, retry policy, and location mode from client if they are null.</p>

    <p></p>
  syntax: protected static void applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  uid: com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions)
- fullName: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
  name: disableHttpsSocketKeepAlive()
  nameWithType: RequestOptions.disableHttpsSocketKeepAlive()
  returns:
    description: <p>A value to indicate whether https socket keep-alive should be disabled. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a value to indicate whether https socket keep-alive should be disabled. Use  to disable keep-alive; otherwise, . For more information about disableHttpsSocketKeepAlive defaults, see <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref></p>

    <p></p>
  syntax: public Boolean disableHttpsSocketKeepAlive()
  uid: com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
- fullName: com.microsoft.azure.storage.RequestOptions.getLocationMode()
  name: getLocationMode()
  nameWithType: RequestOptions.getLocationMode()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.LocationMode" data-throw-if-not-resolved="false" data-raw-source="LocationMode"></xref> object that represents the location mode for this request. </p>
    type: final <xref href="com.microsoft.azure.storage.LocationMode?alt=com.microsoft.azure.storage.LocationMode&text=LocationMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the default location mode for this request. For more information about location mode, see <xref uid="com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)" data-throw-if-not-resolved="false" data-raw-source="setLocationMode(LocationMode)"></xref>.</p>

    <p></p>
  syntax: public final LocationMode getLocationMode()
  uid: com.microsoft.azure.storage.RequestOptions.getLocationMode()
- fullName: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  name: getMaximumExecutionTimeInMs()
  nameWithType: RequestOptions.getMaximumExecutionTimeInMs()
  returns:
    description: <p>The current maximum execution time, in milliseconds, for this request. </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the maximum execution time for this request. For more information about maximum execution time defaults, see <xref uid="com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)" data-throw-if-not-resolved="false" data-raw-source="setMaximumExecutionTimeInMs(Integer)"></xref>.</p>

    <p></p>
  syntax: public Integer getMaximumExecutionTimeInMs()
  uid: com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
- fullName: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  name: getOperationExpiryTimeInMs()
  nameWithType: RequestOptions.getOperationExpiryTimeInMs()
  returns:
    description: <p>The current operation expiry time, in milliseconds, for this request. </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>RESERVED FOR INTERNAL USE.</p>

    <p>Returns the time at which this operation expires. This is computed by adding the time the operation begins and the maximum execution time and will be null if maximum execution time is null. For more information about maximum execution time, see <xref uid="com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)" data-throw-if-not-resolved="false" data-raw-source="setMaximumExecutionTimeInMs(Integer)"></xref>.</p>

    <p></p>
  syntax: public Long getOperationExpiryTimeInMs()
  uid: com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
- fullName: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  name: getRetryPolicyFactory()
  nameWithType: RequestOptions.getRetryPolicyFactory()
  returns:
    description: <p>An <xref uid="com.microsoft.azure.storage.RetryPolicyFactory" data-throw-if-not-resolved="false" data-raw-source="RetryPolicyFactory"></xref> object that represents the current retry policy.</p>
    type: final <xref href="com.microsoft.azure.storage.RetryPolicyFactory?alt=com.microsoft.azure.storage.RetryPolicyFactory&text=RetryPolicyFactory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the retry policy to use for this request. For more information about the retry policy defaults, see <xref uid="com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)" data-throw-if-not-resolved="false" data-raw-source="setRetryPolicyFactory(RetryPolicyFactory)"></xref>.</p>

    <p></p>
  syntax: public final RetryPolicyFactory getRetryPolicyFactory()
  uid: com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
- fullName: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  name: getTimeoutIntervalInMs()
  nameWithType: RequestOptions.getTimeoutIntervalInMs()
  returns:
    description: <p>The current timeout value, in milliseconds, for this request. </p>
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the timeout value for this request. For more information about the timeout defaults, see <xref uid="com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)" data-throw-if-not-resolved="false" data-raw-source="setTimeoutIntervalInMs(Integer)"></xref>.</p>

    <p></p>
  syntax: public final Integer getTimeoutIntervalInMs()
  uid: com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
- fullName: com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  name: populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  nameWithType: RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  parameters:
  - name: modifiedOptions
    type: <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - name: clientOptions
    type: final <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
  - name: setStartTime
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Populates any null fields in the first requestOptions object with values from the second requestOptions object. </p>
  syntax: protected static void populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  uid: com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
- fullName: com.microsoft.azure.storage.RequestOptions.requireEncryption()
  name: requireEncryption()
  nameWithType: RequestOptions.requireEncryption()
  returns:
    description: <p>A value to indicate whether all data written and read must be encrypted. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . For more information about require encryption defaults, see <xref uid="com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)" data-throw-if-not-resolved="false" data-raw-source="setRequireEncryption(Boolean)"></xref>.</p>

    <p></p>
  syntax: public Boolean requireEncryption()
  uid: com.microsoft.azure.storage.RequestOptions.requireEncryption()
- fullName: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  name: setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  nameWithType: RequestOptions.setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  parameters:
  - description: <p>A value to indicate whether https socket keep-alive should be disabled. </p>
    name: disableHttpsSocketKeepAlive
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets a value to indicate whether https socket keep-alive should be disabled. Use  to disable keep-alive; otherwise, </p>

    <p>The default is set in the client and is by default true, indicating that https socket keep-alive will be disabled. You can change the value on this request by setting this property. You can also change the value on on the <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use the appropriate value. </p>

    <p>Setting keep-alive on https sockets is to work around a bug in the JVM where connection timeouts are not honored on retried requests. In those cases, you may choose to use socket keep-alive as a fallback. Unfortunately, the timeout value must be taken from a JVM property rather than configured locally. Therefore, in rare cases the JVM has configured aggressively short keep-alive times, it may not be beneficial to enable the use of keep-alives lest they interfere with long running data transfer operations.</p>

    <p></p>
  syntax: public void setDisableHttpsSocketKeepAlive(Boolean disableHttpsSocketKeepAlive)
  uid: com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean)
- fullName: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode locationMode)
  name: setLocationMode(final LocationMode locationMode)
  nameWithType: RequestOptions.setLocationMode(final LocationMode locationMode)
  parameters:
  - description: <p>the locationMode to set </p>
    name: locationMode
    type: final <xref href="com.microsoft.azure.storage.LocationMode?alt=com.microsoft.azure.storage.LocationMode&text=LocationMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the <xref uid="com.microsoft.azure.storage.LocationMode" data-throw-if-not-resolved="false" data-raw-source="LocationMode"></xref> for this request. </p>

    <p>The default <xref uid="com.microsoft.azure.storage.LocationMode" data-throw-if-not-resolved="false" data-raw-source="LocationMode"></xref> is set in the client and is by default <xref uid="com.microsoft.azure.storage.LocationMode.PRIMARY_ONLY" data-throw-if-not-resolved="false" data-raw-source="LocationMode#PRIMARY_ONLY"></xref>. You can change the <xref uid="com.microsoft.azure.storage.LocationMode" data-throw-if-not-resolved="false" data-raw-source="LocationMode"></xref> on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that <xref uid="com.microsoft.azure.storage.LocationMode" data-throw-if-not-resolved="false" data-raw-source="LocationMode"></xref>.</p>

    <p></p>
  syntax: public void setLocationMode(final LocationMode locationMode)
  uid: com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)
- fullName: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  name: setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  nameWithType: RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  parameters:
  - description: <p>The maximum execution time, in milliseconds, to use for this request. </p>
    name: maximumExecutionTimeInMs
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the maximum execution time to use when making this request. </p>

    <p>The maximum execution time interval begins at the time that the client begins building the request. The maximum execution time is checked intermittently while uploading data, downloading data, and before executing retries. The service will continue to upload, download, and retry until the maximum execution time is reached. At that time, any partial uploads or downloads will be cancelled and an exception will be thrown. </p>

    <p>The default maximum execution is set in the client and is by default null, indicating no maximum time. You can change the maximum execution time on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use the maximum execution time.</p>

    <p></p>
  syntax: public void setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  uid: com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)
- fullName: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean requireEncryption)
  name: setRequireEncryption(Boolean requireEncryption)
  nameWithType: RequestOptions.setRequireEncryption(Boolean requireEncryption)
  parameters:
  - description: <p>A value to indicate whether all data written and read must be encrypted. </p>
    name: requireEncryption
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . </p>

    <p>The default is set in the client and is by default false, indicating encryption is not required. You can change the value on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use the appropriate value.</p>

    <p></p>
  syntax: public void setRequireEncryption(Boolean requireEncryption)
  uid: com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)
- fullName: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  name: setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  nameWithType: RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  parameters:
  - description: <p>the RetryPolicyFactory object to use when making service requests.</p>
    name: retryPolicyFactory
    type: final <xref href="com.microsoft.azure.storage.RetryPolicyFactory?alt=com.microsoft.azure.storage.RetryPolicyFactory&text=RetryPolicyFactory" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the RetryPolicyFactory object to use for this request. </p>

    <p>The default RetryPolicyFactory is set in the client and is by default <xref uid="com.microsoft.azure.storage.RetryExponentialRetry" data-throw-if-not-resolved="false" data-raw-source="RetryExponentialRetry"></xref>. You can change the RetryPolicyFactory on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that RetryPolicyFactory.</p>

    <p></p>
  syntax: public final void setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  uid: com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)
- fullName: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  name: setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  nameWithType: RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  parameters:
  - description: <p>The timeout, in milliseconds, to use for this request. </p>
    name: timeoutIntervalInMs
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the timeout to use when making this request. </p>

    <p>The server timeout interval begins at the time that the complete request has been received by the service, and the server begins processing the response. If the timeout interval elapses before the response is returned to the client, the operation times out. The timeout interval resets with each retry, if the request is retried. </p>

    <p>The default server timeout is set in the client and is by default null, indicating no server timeout. You can change the server timeout on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that server timeout.</p>

    <p></p>
  syntax: public final void setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  uid: com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)
nameWithType: RequestOptions
syntax: public class RequestOptions
type: class
uid: com.microsoft.azure.storage.RequestOptions
fullName: com.microsoft.azure.storage.RequestOptions
name: RequestOptions
package: com.microsoft.azure.storage
summary: <p>Represents the options to use while processing a given request. </p>
metadata: {}
