### YamlMime:JavaType
methods:
- fullName: microsoft.servicefabric.services.communication.runtime.CommunicationListener.abort()
  name: abort()
  nameWithType: CommunicationListener.abort()
  syntax: public void abort()
  uid: microsoft.servicefabric.services.communication.runtime.CommunicationListener.abort()
- fullName: microsoft.servicefabric.services.communication.runtime.CommunicationListener.closeAsync(CancellationToken cancellationToken)
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: CommunicationListener.closeAsync(CancellationToken cancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A CompletableFuture that represents outstanding operation. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture%3C%3F%3E&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method causes the communication listener to close. Close is a terminal state and this method allows the communication listener to transition to this state in a graceful manner.</p>

    <p></p>
  syntax: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.communication.runtime.CommunicationListener.closeAsync(CancellationToken)
- fullName: microsoft.servicefabric.services.communication.runtime.CommunicationListener.openAsync(CancellationToken cancellationToken)
  name: openAsync(CancellationToken cancellationToken)
  nameWithType: CommunicationListener.openAsync(CancellationToken cancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A CompletableFuture that represents outstanding operation. The result of the Task is the endpoint string. </p>
    type: <xref href="CompletableFuture%3CString%3E?alt=CompletableFuture%3CString%3E&text=CompletableFuture%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This method causes the communication listener to be opened. Once the Open completes, the communication listener becomes usable - accepts and sends messages.</p>

    <p></p>
  syntax: public CompletableFuture<String> openAsync(CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.communication.runtime.CommunicationListener.openAsync(CancellationToken)
nameWithType: CommunicationListener
syntax: public interface CommunicationListener
type: interface
uid: microsoft.servicefabric.services.communication.runtime.CommunicationListener
fullName: microsoft.servicefabric.services.communication.runtime.CommunicationListener
name: CommunicationListener
package: microsoft.servicefabric.services.communication.runtime
summary: <p>Defines the base interface and the state machine contract for the communication listener for a Service Fabric Service. </p>
metadata: {}
