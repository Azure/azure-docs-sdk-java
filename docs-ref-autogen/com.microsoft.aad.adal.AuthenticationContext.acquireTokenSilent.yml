### YamlMime:JavaMember
nameWithType: AuthenticationContext.acquireTokenSilent
type: method
members:
- fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
  name: acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
  nameWithType: AuthenticationContext.acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
  parameters:
  - description: <p>required resource identifier. </p>
    name: resource
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>required client identifier. </p>
    name: clientId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>UserId obtained from <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref> inside <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false">AuthenticationResult</xref></p>
    name: userId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>required <xref uid="com.microsoft.aad.adal.AuthenticationCallback" data-throw-if-not-resolved="false">AuthenticationCallback</xref> object for async call. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal.AuthenticationCallback?alt=com.microsoft.aad.adal.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>&lt;<xref href="com.microsoft.aad.adal.AuthenticationResult?alt=com.microsoft.aad.adal.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false">Future</xref> object representing the <xref uid="com.microsoft.aad.adal.AuthenticationResult" data-throw-if-not-resolved="false">AuthenticationResult</xref> of the call. It contains Access Token,the Access Token's expiration time, Refresh token, and <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref>. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal.AuthenticationResult?alt=com.microsoft.aad.adal.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The function will first look at the cache and automatically checks for the token expiration. Additionally, if no suitable access token is found in the cache, but refresh token is available, the function will use the refresh token automatically. This method will not show UI for the user. If prompt is needed, the method will return an exception</p>

    <p>

      <xrefsect id="deprecated_1_deprecated000001">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>Use the <xref uid="com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilentAsync(String,String,String,AuthenticationCallback&lt;AuthenticationResult&gt;)" data-throw-if-not-resolved="false">acquireTokenSilentAsync</xref> method. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax: public Future<AuthenticationResult> acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
  uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent(String,String,String,final AuthenticationCallback<AuthenticationResult>)
uid: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent*
fullName: com.microsoft.aad.adal.AuthenticationContext.acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
name: acquireTokenSilent(String resource, String clientId, String userId, final AuthenticationCallback<AuthenticationResult> callback)
package: com.microsoft.aad.adal
metadata: {}
