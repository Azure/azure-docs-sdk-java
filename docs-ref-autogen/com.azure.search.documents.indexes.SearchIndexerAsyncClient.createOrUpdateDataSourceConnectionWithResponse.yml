### YamlMime:JavaMember
uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse*"
fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse"
name: "createOrUpdateDataSourceConnectionWithResponse"
nameWithType: "SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse"
members:
- uid: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse(com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection,boolean)"
  fullName: "com.azure.search.documents.indexes.SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)"
  name: "createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)"
  nameWithType: "SearchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)"
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists.\n\n**Code Sample**\n\nCreate or update search indexer data source connection named \"dataSource\".\n\n```java\nsearchIndexerAsyncClient.getDataSourceConnection(\"dataSource\")\n     .flatMap(dataSource -> {\n         dataSource.setContainer(new SearchIndexerDataContainer(\"updatecontainer\"));\n         return searchIndexerAsyncClient.createOrUpdateDataSourceConnectionWithResponse(dataSource, true);\n     })\n     .subscribe(updateDataSource ->\n         System.out.printf(\"The status code of the response is %s.%nThe dataSource name is %s. \"\n             + \"The container name of dataSource is %s.%n\", updateDataSource.getStatusCode(),\n         updateDataSource.getValue().getName(), updateDataSource.getValue().getContainer().getName()));\n```"
  parameters:
  - description: "The definition of the <xref uid=\"com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndexerDataSourceConnection\"></xref> to create or update."
    name: "dataSource"
    type: "<xref href=\"com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection?alt=com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection&text=SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"False\" />"
  - description: "<code>true</code> to update if the <code>dataSource</code> is the same as the current service value.\n <code>false</code> to always update existing value."
    name: "onlyIfUnchanged"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<SearchIndexerDataSourceConnection>> createOrUpdateDataSourceConnectionWithResponse(SearchIndexerDataSourceConnection dataSource, boolean onlyIfUnchanged)"
  returns:
    description: "a data source response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection?alt=com.azure.search.documents.indexes.models.SearchIndexerDataSourceConnection&text=SearchIndexerDataSourceConnection\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.search.documents.indexes"
artifact: com.azure:azure-search-documents:11.1.3
