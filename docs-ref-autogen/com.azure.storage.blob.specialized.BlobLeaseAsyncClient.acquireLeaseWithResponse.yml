### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlobLeaseAsyncClient.acquireLeaseWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlobLeaseAsyncClient.acquireLeaseWithResponse"
name: "acquireLeaseWithResponse"
nameWithType: "BlobLeaseAsyncClient.acquireLeaseWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlobLeaseAsyncClient.acquireLeaseWithResponse(com.azure.storage.blob.options.BlobAcquireLeaseOptions)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseAsyncClient.acquireLeaseWithResponse(BlobAcquireLeaseOptions options)"
  name: "acquireLeaseWithResponse(BlobAcquireLeaseOptions options)"
  nameWithType: "BlobLeaseAsyncClient.acquireLeaseWithResponse(BlobAcquireLeaseOptions options)"
  summary: "Acquires a lease for write and delete operations. The lease duration must be between 15 to 60 seconds, or -1 for an infinite duration.\n\n**Code Samples**\n\n```java\nBlobLeaseRequestConditions requestConditions = new BlobLeaseRequestConditions()\n     .setIfModifiedSince(OffsetDateTime.now().minusDays(3));\n \n BlobAcquireLeaseOptions options = new BlobAcquireLeaseOptions(60)\n     .setRequestConditions(requestConditions);\n \n client.acquireLeaseWithResponse(options).subscribe(response ->\n     System.out.printf(\"Lease ID is %s%n\", response.getValue()));\n```"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobAcquireLeaseOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobAcquireLeaseOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobAcquireLeaseOptions?alt=com.azure.storage.blob.options.BlobAcquireLeaseOptions&text=BlobAcquireLeaseOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<String>> acquireLeaseWithResponse(BlobAcquireLeaseOptions options)"
  returns:
    description: "A reactive response containing the lease ID."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.storage.blob.specialized.BlobLeaseAsyncClient.acquireLeaseWithResponse(int,com.azure.core.http.RequestConditions)"
  fullName: "com.azure.storage.blob.specialized.BlobLeaseAsyncClient.acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions)"
  name: "acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions)"
  nameWithType: "BlobLeaseAsyncClient.acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions)"
  summary: "Acquires a lease for write and delete operations. The lease duration must be between 15 to 60 seconds, or -1 for an infinite duration.\n\n**Code Samples**\n\n```java\nRequestConditions modifiedRequestConditions = new RequestConditions()\n     .setIfModifiedSince(OffsetDateTime.now().minusDays(3));\n \n client.acquireLeaseWithResponse(60, modifiedRequestConditions).subscribe(response ->\n     System.out.printf(\"Lease ID is %s%n\", response.getValue()));\n```"
  parameters:
  - description: "The duration of the lease between 15 to 60 seconds or -1 for an infinite duration."
    name: "duration"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "Standard HTTP Access conditions related to the modification of data. ETag and\n LastModifiedTime are used to construct conditions related to when the resource was changed relative to the given\n request. The request will fail if the specified condition is not satisfied."
    name: "modifiedRequestConditions"
    type: "<xref href=\"com.azure.core.http.RequestConditions?alt=com.azure.core.http.RequestConditions&text=RequestConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<String>> acquireLeaseWithResponse(int duration, RequestConditions modifiedRequestConditions)"
  returns:
    description: "A reactive response containing the lease ID."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
