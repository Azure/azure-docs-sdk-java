### YamlMime:JavaType
uid: "com.azure.xml.XmlWriter"
fullName: "com.azure.xml.XmlWriter"
name: "XmlWriter"
nameWithType: "XmlWriter"
summary: "Writes an XML encoded value to a stream."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **XmlWriter**</br> implements <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html\">AutoCloseable</a>"
methods:
- uid: "com.azure.xml.XmlWriter.close()"
  fullName: "com.azure.xml.XmlWriter.close()"
  name: "close()"
  nameWithType: "XmlWriter.close()"
  summary: "Closes the XML stream."
  syntax: "public void close()"
  exceptions:
  - description: "If the underlying content store fails to close."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Closes the XML stream.\n\nDuring closing the implementation of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> must flush any un-flushed content."
- uid: "com.azure.xml.XmlWriter.flush()"
  fullName: "com.azure.xml.XmlWriter.flush()"
  name: "flush()"
  nameWithType: "XmlWriter.flush()"
  summary: "Flushes any un-flushed content that has been written to the <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
  syntax: "public XmlWriter flush()"
  exceptions:
  - description: "If the un-flushed XML content could not be flushed."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Flushes any un-flushed content that has been written to the <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.fromXmlStreamWriter(javax.xml.stream.XMLStreamWriter)"
  fullName: "com.azure.xml.XmlWriter.fromXmlStreamWriter(XMLStreamWriter writer)"
  name: "fromXmlStreamWriter(XMLStreamWriter writer)"
  nameWithType: "XmlWriter.fromXmlStreamWriter(XMLStreamWriter writer)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to the provided <xref uid=\"javax.xml.stream.XMLStreamWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLStreamWriter\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"javax.xml.stream.XMLStreamWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLStreamWriter\"></xref> where content will be written."
    name: "writer"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamWriter.html\">XMLStreamWriter</a>"
  syntax: "public static XmlWriter fromXmlStreamWriter(XMLStreamWriter writer)"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to the provided <xref uid=\"javax.xml.stream.XMLStreamWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLStreamWriter\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.toStream(java.io.OutputStream)"
  fullName: "com.azure.xml.XmlWriter.toStream(OutputStream xml)"
  name: "toStream(OutputStream xml)"
  nameWithType: "XmlWriter.toStream(OutputStream xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to the provided <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref> where content will be written."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html\">OutputStream</a>"
  syntax: "public static XmlWriter toStream(OutputStream xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to the provided <xref uid=\"java.io.OutputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OutputStream\"></xref>.\n\nThis uses the <xref uid=\"javax.xml.stream.XMLStreamWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLStreamWriter\"></xref> implementation provided by the default <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLOutputFactory#newInstance()\"></xref>. If you need to provide a custom implementation of <xref uid=\"javax.xml.stream.XMLStreamWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLStreamWriter\"></xref> use <xref uid=\"com.azure.xml.XmlWriter.fromXmlStreamWriter(javax.xml.stream.XMLStreamWriter)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#fromXmlStreamWriter(XMLStreamWriter)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.toWriter(java.io.Writer)"
  fullName: "com.azure.xml.XmlWriter.toWriter(Writer xml)"
  name: "toWriter(Writer xml)"
  nameWithType: "XmlWriter.toWriter(Writer xml)"
  summary: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to the provided <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref> where content will be written."
    name: "xml"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/Writer.html\">Writer</a>"
  syntax: "public static XmlWriter toWriter(Writer xml)"
  exceptions:
  - description: "If <code>xml</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Creates an instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref> that writes to the provided <xref uid=\"java.io.Writer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Writer\"></xref>.\n\nThis uses the <xref uid=\"javax.xml.stream.XMLStreamWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLStreamWriter\"></xref> implementation provided by the default <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLOutputFactory#newInstance()\"></xref>. If you need to provide a custom implementation of <xref uid=\"javax.xml.stream.XMLStreamWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XMLStreamWriter\"></xref> use <xref uid=\"com.azure.xml.XmlWriter.fromXmlStreamWriter(javax.xml.stream.XMLStreamWriter)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#fromXmlStreamWriter(XMLStreamWriter)\"></xref>."
  returns:
    description: "A new instance of <xref uid=\"com.azure.xml.XmlWriter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlWriter\"></xref>."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBinary(byte[])"
  fullName: "com.azure.xml.XmlWriter.writeBinary(byte[] value)"
  name: "writeBinary(byte[] value)"
  nameWithType: "XmlWriter.writeBinary(byte[] value)"
  summary: "Writes a binary value as a base64 string."
  parameters:
  - description: "Binary value to write."
    name: "value"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public XmlWriter writeBinary(byte[] value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a binary value as a base64 string.\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBinaryAttribute(java.lang.String,byte[])"
  fullName: "com.azure.xml.XmlWriter.writeBinaryAttribute(String localName, byte[] value)"
  name: "writeBinaryAttribute(String localName, byte[] value)"
  nameWithType: "XmlWriter.writeBinaryAttribute(String localName, byte[] value)"
  summary: "Writes a binary attribute as a base64 string (`attribute=\"value\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary value to write."
    name: "value"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public XmlWriter writeBinaryAttribute(String localName, byte[] value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a binary attribute as a base64 string (`attribute=\"value\"`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBinaryAttribute(java.lang.String,java.lang.String,byte[])"
  fullName: "com.azure.xml.XmlWriter.writeBinaryAttribute(String namespaceUri, String localName, byte[] value)"
  name: "writeBinaryAttribute(String namespaceUri, String localName, byte[] value)"
  nameWithType: "XmlWriter.writeBinaryAttribute(String namespaceUri, String localName, byte[] value)"
  summary: "Writes a binary attribute as a base64 string that has a prefix (`prefix:attribute=\"value\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary value to write."
    name: "value"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public XmlWriter writeBinaryAttribute(String namespaceUri, String localName, byte[] value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a binary attribute as a base64 string that has a prefix (`prefix:attribute=\"value\"`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBinaryElement(java.lang.String,byte[])"
  fullName: "com.azure.xml.XmlWriter.writeBinaryElement(String localName, byte[] value)"
  name: "writeBinaryElement(String localName, byte[] value)"
  nameWithType: "XmlWriter.writeBinaryElement(String localName, byte[] value)"
  summary: "Writes a binary element as a base64 string (`value`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary value to write."
    name: "value"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public XmlWriter writeBinaryElement(String localName, byte[] value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a binary element as a base64 string (`value`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBinaryElement(java.lang.String,java.lang.String,byte[])"
  fullName: "com.azure.xml.XmlWriter.writeBinaryElement(String namespaceUri, String localName, byte[] value)"
  name: "writeBinaryElement(String namespaceUri, String localName, byte[] value)"
  nameWithType: "XmlWriter.writeBinaryElement(String namespaceUri, String localName, byte[] value)"
  summary: "Writes a binary element as a base64 string that has a prefix (`value`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Binary value to write."
    name: "value"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public XmlWriter writeBinaryElement(String namespaceUri, String localName, byte[] value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a binary element as a base64 string that has a prefix (`value`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBoolean(boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBoolean(boolean value)"
  name: "writeBoolean(boolean value)"
  nameWithType: "XmlWriter.writeBoolean(boolean value)"
  summary: "Writes a boolean value."
  parameters:
  - description: "boolean value to write."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeBoolean(boolean value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a boolean value."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBoolean(java.lang.Boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBoolean(Boolean value)"
  name: "writeBoolean(Boolean value)"
  nameWithType: "XmlWriter.writeBoolean(Boolean value)"
  summary: "Writes a nullable boolean value."
  parameters:
  - description: "Boolean value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public XmlWriter writeBoolean(Boolean value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable boolean value.\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanAttribute(java.lang.String,boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanAttribute(String localName, boolean value)"
  name: "writeBooleanAttribute(String localName, boolean value)"
  nameWithType: "XmlWriter.writeBooleanAttribute(String localName, boolean value)"
  summary: "Writes a boolean attribute (`attribute=\"true\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "boolean value to write."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeBooleanAttribute(String localName, boolean value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a boolean attribute (`attribute=\"true\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanAttribute(java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanAttribute(String localName, Boolean value)"
  name: "writeBooleanAttribute(String localName, Boolean value)"
  nameWithType: "XmlWriter.writeBooleanAttribute(String localName, Boolean value)"
  summary: "Writes a nullable boolean attribute (`attribute=\"false\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Boolean value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public XmlWriter writeBooleanAttribute(String localName, Boolean value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable boolean attribute (`attribute=\"false\"`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanAttribute(java.lang.String,java.lang.String,boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanAttribute(String namespaceUri, String localName, boolean value)"
  name: "writeBooleanAttribute(String namespaceUri, String localName, boolean value)"
  nameWithType: "XmlWriter.writeBooleanAttribute(String namespaceUri, String localName, boolean value)"
  summary: "Writes a boolean attribute that has a prefix (`prefix:attribute=\"true\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "boolean value to write."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeBooleanAttribute(String namespaceUri, String localName, boolean value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a boolean attribute that has a prefix (`prefix:attribute=\"true\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanAttribute(java.lang.String,java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanAttribute(String namespaceUri, String localName, Boolean value)"
  name: "writeBooleanAttribute(String namespaceUri, String localName, Boolean value)"
  nameWithType: "XmlWriter.writeBooleanAttribute(String namespaceUri, String localName, Boolean value)"
  summary: "Writes a nullable boolean attribute that has a prefix (`prefix:attribute=\"false\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Boolean value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public XmlWriter writeBooleanAttribute(String namespaceUri, String localName, Boolean value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable boolean attribute that has a prefix (`prefix:attribute=\"false\"`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanElement(java.lang.String,boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanElement(String localName, boolean value)"
  name: "writeBooleanElement(String localName, boolean value)"
  nameWithType: "XmlWriter.writeBooleanElement(String localName, boolean value)"
  summary: "Writes a boolean element (`true`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "boolean value to write."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeBooleanElement(String localName, boolean value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a boolean element (`true`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanElement(java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanElement(String localName, Boolean value)"
  name: "writeBooleanElement(String localName, Boolean value)"
  nameWithType: "XmlWriter.writeBooleanElement(String localName, Boolean value)"
  summary: "Writes a nullable boolean element (`true`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Boolean value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public XmlWriter writeBooleanElement(String localName, Boolean value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable boolean element (`true`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanElement(java.lang.String,java.lang.String,boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanElement(String namespaceUri, String localName, boolean value)"
  name: "writeBooleanElement(String namespaceUri, String localName, boolean value)"
  nameWithType: "XmlWriter.writeBooleanElement(String namespaceUri, String localName, boolean value)"
  summary: "Writes a boolean element that has a prefix (`true`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "boolean value to write."
    name: "value"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeBooleanElement(String namespaceUri, String localName, boolean value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a boolean element that has a prefix (`true`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeBooleanElement(java.lang.String,java.lang.String,java.lang.Boolean)"
  fullName: "com.azure.xml.XmlWriter.writeBooleanElement(String namespaceUri, String localName, Boolean value)"
  name: "writeBooleanElement(String namespaceUri, String localName, Boolean value)"
  nameWithType: "XmlWriter.writeBooleanElement(String namespaceUri, String localName, Boolean value)"
  summary: "Writes a nullable boolean element that has a prefix (`true`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Boolean value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>"
  syntax: "public XmlWriter writeBooleanElement(String namespaceUri, String localName, Boolean value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable boolean element that has a prefix (`true`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeCDataString(java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeCDataString(String value)"
  name: "writeCDataString(String value)"
  nameWithType: "XmlWriter.writeCDataString(String value)"
  summary: "Writes a CData value directly into an XML element (`value`)."
  parameters:
  - description: "CData value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeCDataString(String value)"
  exceptions:
  - description: "If the XML CData value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a CData value directly into an XML element (`value`).\n\nThis doesn't write the XML element start tag or end tag.\n\nThis API is a convenience over <xref uid=\"com.azure.xml.XmlWriter.writeString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeString(String)\"></xref> for CData values, it is possible to use <xref uid=\"com.azure.xml.XmlWriter.writeString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeString(String)\"></xref> instead of this API."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeDouble(double)"
  fullName: "com.azure.xml.XmlWriter.writeDouble(double value)"
  name: "writeDouble(double value)"
  nameWithType: "XmlWriter.writeDouble(double value)"
  summary: "Writes a double value."
  parameters:
  - description: "double value to write."
    name: "value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeDouble(double value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a double value."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeDoubleAttribute(java.lang.String,double)"
  fullName: "com.azure.xml.XmlWriter.writeDoubleAttribute(String localName, double value)"
  name: "writeDoubleAttribute(String localName, double value)"
  nameWithType: "XmlWriter.writeDoubleAttribute(String localName, double value)"
  summary: "Writes a double attribute (`attribute=\"3.14\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "double value to write."
    name: "value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeDoubleAttribute(String localName, double value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a double attribute (`attribute=\"3.14\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeDoubleAttribute(java.lang.String,java.lang.String,double)"
  fullName: "com.azure.xml.XmlWriter.writeDoubleAttribute(String namespaceUri, String localName, double value)"
  name: "writeDoubleAttribute(String namespaceUri, String localName, double value)"
  nameWithType: "XmlWriter.writeDoubleAttribute(String namespaceUri, String localName, double value)"
  summary: "Writes a double attribute that has a prefix (`prefix:attribute=\"3.14\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "double value to write."
    name: "value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeDoubleAttribute(String namespaceUri, String localName, double value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a double attribute that has a prefix (`prefix:attribute=\"3.14\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeDoubleElement(java.lang.String,double)"
  fullName: "com.azure.xml.XmlWriter.writeDoubleElement(String localName, double value)"
  name: "writeDoubleElement(String localName, double value)"
  nameWithType: "XmlWriter.writeDoubleElement(String localName, double value)"
  summary: "Writes a double element (`3.14`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "double value to write."
    name: "value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeDoubleElement(String localName, double value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a double element (`3.14`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeDoubleElement(java.lang.String,java.lang.String,double)"
  fullName: "com.azure.xml.XmlWriter.writeDoubleElement(String namespaceUri, String localName, double value)"
  name: "writeDoubleElement(String namespaceUri, String localName, double value)"
  nameWithType: "XmlWriter.writeDoubleElement(String namespaceUri, String localName, double value)"
  summary: "Writes a double element that has a prefix (`3.14`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "double value to write."
    name: "value"
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeDoubleElement(String namespaceUri, String localName, double value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a double element that has a prefix (`3.14`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeEndElement()"
  fullName: "com.azure.xml.XmlWriter.writeEndElement()"
  name: "writeEndElement()"
  nameWithType: "XmlWriter.writeEndElement()"
  summary: "Ends the current XML element by writing the closing tag (``)."
  syntax: "public XmlWriter writeEndElement()"
  exceptions:
  - description: "If the XML element end cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Ends the current XML element by writing the closing tag (``).\n\nThis call will determine the XML element tag name and prefix, if there is one, to close the current XML element scope."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeFloat(float)"
  fullName: "com.azure.xml.XmlWriter.writeFloat(float value)"
  name: "writeFloat(float value)"
  nameWithType: "XmlWriter.writeFloat(float value)"
  summary: "Writes a float value."
  parameters:
  - description: "float value to write."
    name: "value"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeFloat(float value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a float value."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeFloatAttribute(java.lang.String,float)"
  fullName: "com.azure.xml.XmlWriter.writeFloatAttribute(String localName, float value)"
  name: "writeFloatAttribute(String localName, float value)"
  nameWithType: "XmlWriter.writeFloatAttribute(String localName, float value)"
  summary: "Writes a float attribute (`attribute=\"2.7\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "float value to write."
    name: "value"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeFloatAttribute(String localName, float value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a float attribute (`attribute=\"2.7\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeFloatAttribute(java.lang.String,java.lang.String,float)"
  fullName: "com.azure.xml.XmlWriter.writeFloatAttribute(String namespaceUri, String localName, float value)"
  name: "writeFloatAttribute(String namespaceUri, String localName, float value)"
  nameWithType: "XmlWriter.writeFloatAttribute(String namespaceUri, String localName, float value)"
  summary: "Writes a float attribute that has a prefix (`prefix:attribute=\"2.7\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "float value to write."
    name: "value"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeFloatAttribute(String namespaceUri, String localName, float value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a float attribute that has a prefix (`prefix:attribute=\"2.7\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeFloatElement(java.lang.String,float)"
  fullName: "com.azure.xml.XmlWriter.writeFloatElement(String localName, float value)"
  name: "writeFloatElement(String localName, float value)"
  nameWithType: "XmlWriter.writeFloatElement(String localName, float value)"
  summary: "Writes a float element (`2.7`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "float value to write."
    name: "value"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeFloatElement(String localName, float value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a float element (`2.7`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeFloatElement(java.lang.String,java.lang.String,float)"
  fullName: "com.azure.xml.XmlWriter.writeFloatElement(String namespaceUri, String localName, float value)"
  name: "writeFloatElement(String namespaceUri, String localName, float value)"
  nameWithType: "XmlWriter.writeFloatElement(String namespaceUri, String localName, float value)"
  summary: "Writes a float element that has a prefix (`2.7`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "float value to write."
    name: "value"
    type: "<xref href=\"float?alt=float&text=float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeFloatElement(String namespaceUri, String localName, float value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a float element that has a prefix (`2.7`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeInt(int)"
  fullName: "com.azure.xml.XmlWriter.writeInt(int value)"
  name: "writeInt(int value)"
  nameWithType: "XmlWriter.writeInt(int value)"
  summary: "Writes an int value."
  parameters:
  - description: "int value to write."
    name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeInt(int value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an int value."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeIntAttribute(java.lang.String,int)"
  fullName: "com.azure.xml.XmlWriter.writeIntAttribute(String localName, int value)"
  name: "writeIntAttribute(String localName, int value)"
  nameWithType: "XmlWriter.writeIntAttribute(String localName, int value)"
  summary: "Writes an int attribute (`attribute=\"10\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "int value to write."
    name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeIntAttribute(String localName, int value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an int attribute (`attribute=\"10\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeIntAttribute(java.lang.String,java.lang.String,int)"
  fullName: "com.azure.xml.XmlWriter.writeIntAttribute(String namespaceUri, String localName, int value)"
  name: "writeIntAttribute(String namespaceUri, String localName, int value)"
  nameWithType: "XmlWriter.writeIntAttribute(String namespaceUri, String localName, int value)"
  summary: "Writes an int attribute that has a prefix (`prefix:attribute=\"10\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "int value to write."
    name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeIntAttribute(String namespaceUri, String localName, int value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an int attribute that has a prefix (`prefix:attribute=\"10\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeIntElement(java.lang.String,int)"
  fullName: "com.azure.xml.XmlWriter.writeIntElement(String localName, int value)"
  name: "writeIntElement(String localName, int value)"
  nameWithType: "XmlWriter.writeIntElement(String localName, int value)"
  summary: "Writes an int element (`10`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "int value to write."
    name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeIntElement(String localName, int value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an int element (`10`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeIntElement(java.lang.String,java.lang.String,int)"
  fullName: "com.azure.xml.XmlWriter.writeIntElement(String namespaceUri, String localName, int value)"
  name: "writeIntElement(String namespaceUri, String localName, int value)"
  nameWithType: "XmlWriter.writeIntElement(String namespaceUri, String localName, int value)"
  summary: "Writes an int element that has a prefix (`10`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "int value to write."
    name: "value"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeIntElement(String namespaceUri, String localName, int value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an int element that has a prefix (`10`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeLong(long)"
  fullName: "com.azure.xml.XmlWriter.writeLong(long value)"
  name: "writeLong(long value)"
  nameWithType: "XmlWriter.writeLong(long value)"
  summary: "Writes a long value."
  parameters:
  - description: "long value to write."
    name: "value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeLong(long value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a long value."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeLongAttribute(java.lang.String,long)"
  fullName: "com.azure.xml.XmlWriter.writeLongAttribute(String localName, long value)"
  name: "writeLongAttribute(String localName, long value)"
  nameWithType: "XmlWriter.writeLongAttribute(String localName, long value)"
  summary: "Writes a long attribute (`attribute=\"100000000000\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "long value to write."
    name: "value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeLongAttribute(String localName, long value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a long attribute (`attribute=\"100000000000\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeLongAttribute(java.lang.String,java.lang.String,long)"
  fullName: "com.azure.xml.XmlWriter.writeLongAttribute(String namespaceUri, String localName, long value)"
  name: "writeLongAttribute(String namespaceUri, String localName, long value)"
  nameWithType: "XmlWriter.writeLongAttribute(String namespaceUri, String localName, long value)"
  summary: "Writes a long attribute that has a prefix (`prefix:attribute=\"100000000000\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "long value to write."
    name: "value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeLongAttribute(String namespaceUri, String localName, long value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a long attribute that has a prefix (`prefix:attribute=\"100000000000\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeLongElement(java.lang.String,long)"
  fullName: "com.azure.xml.XmlWriter.writeLongElement(String localName, long value)"
  name: "writeLongElement(String localName, long value)"
  nameWithType: "XmlWriter.writeLongElement(String localName, long value)"
  summary: "Writes a long element (`100000000000`)."
  parameters:
  - description: "Name of the element"
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "long value to write."
    name: "value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeLongElement(String localName, long value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a long element (`100000000000`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeLongElement(java.lang.String,java.lang.String,long)"
  fullName: "com.azure.xml.XmlWriter.writeLongElement(String namespaceUri, String localName, long value)"
  name: "writeLongElement(String namespaceUri, String localName, long value)"
  nameWithType: "XmlWriter.writeLongElement(String namespaceUri, String localName, long value)"
  summary: "Writes a long element that has a prefix (`100000000000`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "long value to write."
    name: "value"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public XmlWriter writeLongElement(String namespaceUri, String localName, long value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a long element that has a prefix (`100000000000`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeNamespace(java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeNamespace(String namespacePrefix, String namespaceUri)"
  name: "writeNamespace(String namespacePrefix, String namespaceUri)"
  nameWithType: "XmlWriter.writeNamespace(String namespacePrefix, String namespaceUri)"
  summary: "Writes an XML namespace with a specified prefix."
  parameters:
  - description: "Prefix that the namespace binds."
    name: "namespacePrefix"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Namespace URI to bind to the prefix."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeNamespace(String namespacePrefix, String namespaceUri)"
  exceptions:
  - description: "If the XML namespace cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an XML namespace with a specified prefix.\n\nIf the `namespacePrefix` is null or `xmlns` calling this method is equivalent to <xref uid=\"com.azure.xml.XmlWriter.writeNamespace(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeNamespace(String)\"></xref>."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeNamespace(java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeNamespace(String namespaceUri)"
  name: "writeNamespace(String namespaceUri)"
  nameWithType: "XmlWriter.writeNamespace(String namespaceUri)"
  summary: "Writes a default XML namespace."
  parameters:
  - description: "Namespace URI to bind as the default namespace."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeNamespace(String namespaceUri)"
  exceptions:
  - description: "If the XML namespace cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a default XML namespace."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeNumber(java.lang.Number)"
  fullName: "com.azure.xml.XmlWriter.writeNumber(Number value)"
  name: "writeNumber(Number value)"
  nameWithType: "XmlWriter.writeNumber(Number value)"
  summary: "Writes a nullable number."
  parameters:
  - description: "Number value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Number.html\">Number</a>"
  syntax: "public XmlWriter writeNumber(Number value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable number.\n\nIf `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeNumberAttribute(java.lang.String,java.lang.Number)"
  fullName: "com.azure.xml.XmlWriter.writeNumberAttribute(String localName, Number value)"
  name: "writeNumberAttribute(String localName, Number value)"
  nameWithType: "XmlWriter.writeNumberAttribute(String localName, Number value)"
  summary: "Writes a nullable number attribute (`attribute=\"number\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Number value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Number.html\">Number</a>"
  syntax: "public XmlWriter writeNumberAttribute(String localName, Number value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable number attribute (`attribute=\"number\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeNumberAttribute(java.lang.String,java.lang.String,java.lang.Number)"
  fullName: "com.azure.xml.XmlWriter.writeNumberAttribute(String namespaceUri, String localName, Number value)"
  name: "writeNumberAttribute(String namespaceUri, String localName, Number value)"
  nameWithType: "XmlWriter.writeNumberAttribute(String namespaceUri, String localName, Number value)"
  summary: "Writes a nullable number attribute that has a prefix (`prefix:attribute=\"number\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Number value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Number.html\">Number</a>"
  syntax: "public XmlWriter writeNumberAttribute(String namespaceUri, String localName, Number value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable number attribute that has a prefix (`prefix:attribute=\"number\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeNumberElement(java.lang.String,java.lang.Number)"
  fullName: "com.azure.xml.XmlWriter.writeNumberElement(String localName, Number value)"
  name: "writeNumberElement(String localName, Number value)"
  nameWithType: "XmlWriter.writeNumberElement(String localName, Number value)"
  summary: "Writes a nullable number element (`number`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Number value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Number.html\">Number</a>"
  syntax: "public XmlWriter writeNumberElement(String localName, Number value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable number element (`number`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeNumberElement(java.lang.String,java.lang.String,java.lang.Number)"
  fullName: "com.azure.xml.XmlWriter.writeNumberElement(String namespaceUri, String localName, Number value)"
  name: "writeNumberElement(String namespaceUri, String localName, Number value)"
  nameWithType: "XmlWriter.writeNumberElement(String namespaceUri, String localName, Number value)"
  summary: "Writes a nullable number element that has a prefix (`number`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Number value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Number.html\">Number</a>"
  syntax: "public XmlWriter writeNumberElement(String namespaceUri, String localName, Number value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a nullable number element that has a prefix (`number`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStartDocument()"
  fullName: "com.azure.xml.XmlWriter.writeStartDocument()"
  name: "writeStartDocument()"
  nameWithType: "XmlWriter.writeStartDocument()"
  summary: "Writes the XML document start (``)."
  syntax: "public XmlWriter writeStartDocument()"
  exceptions:
  - description: "If the XML start document cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes the XML document start (``).\n\nThis uses the default version and encoding which are `1.0` and `UTF-8` respectively. If a different version or encoding is required use <xref uid=\"com.azure.xml.XmlWriter.writeStartDocument(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeStartDocument(String, String)\"></xref> which allows for specifying those values."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStartDocument(java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStartDocument(String version, String encoding)"
  name: "writeStartDocument(String version, String encoding)"
  nameWithType: "XmlWriter.writeStartDocument(String version, String encoding)"
  summary: "Writes the XML document start (``)."
  parameters:
  - description: "XML document version."
    name: "version"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "XML document encoding."
    name: "encoding"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStartDocument(String version, String encoding)"
  exceptions:
  - description: "If the XML start document cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes the XML document start (``).\n\nBoth `version` and `encoding` are optional and if they aren't passed their default values will be used. For `version` the default is `1.0` and for `encoding` the default is `UTF-8`."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStartElement(java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStartElement(String localName)"
  name: "writeStartElement(String localName)"
  nameWithType: "XmlWriter.writeStartElement(String localName)"
  summary: "Begins an XML element start (``)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStartElement(String localName)"
  exceptions:
  - description: "If the XML element start cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Begins an XML element start (``).\n\nThis call doesn't close (`>`) the XML element start but instead defers it until a call to begin another element or to write the body of the element. This also requires an explicit call to <xref uid=\"com.azure.xml.XmlWriter.writeEndElement()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeEndElement()\"></xref> to end the XML element's body.\n\nCalls to write attributes won't close the XML element."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStartElement(java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStartElement(String namespaceUri, String localName)"
  name: "writeStartElement(String namespaceUri, String localName)"
  nameWithType: "XmlWriter.writeStartElement(String namespaceUri, String localName)"
  summary: "Begins an XML element start that has a prefix (``)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStartElement(String namespaceUri, String localName)"
  exceptions:
  - description: "If the XML element start cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Begins an XML element start that has a prefix (``).\n\nThis call doesn't close (`>`) the XML element start but instead defers it until a call to begin another element or to write the body of the element. This also requires an explicit call to <xref uid=\"com.azure.xml.XmlWriter.writeEndElement()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeEndElement()\"></xref> to end the XML element's body.\n\nCalls to write attributes won't close the XML element.\n\nIf `prefix` is null this will behave the same as <xref uid=\"com.azure.xml.XmlWriter.writeStartElement(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeStartElement(String)\"></xref>."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStartSelfClosingElement(java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStartSelfClosingElement(String localName)"
  name: "writeStartSelfClosingElement(String localName)"
  nameWithType: "XmlWriter.writeStartSelfClosingElement(String localName)"
  summary: "Begins an XML element start that will be self-closing (``)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStartSelfClosingElement(String localName)"
  exceptions:
  - description: "If the XML element start cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Begins an XML element start that will be self-closing (``).\n\nThis call doesn't close (`/>`) the XML element start but instead defers it until a call to begin another element. If there is an attempt to write the body of the element after beginning a self-closing element an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalStateException\"></xref> will be thrown as self-closing elements do not have a body.\n\nCalls to write attributes won't close the XML element."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStartSelfClosingElement(java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStartSelfClosingElement(String namespaceUri, String localName)"
  name: "writeStartSelfClosingElement(String namespaceUri, String localName)"
  nameWithType: "XmlWriter.writeStartSelfClosingElement(String namespaceUri, String localName)"
  summary: "Begins an XML element start that has a prefix that will be self-closing (``)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStartSelfClosingElement(String namespaceUri, String localName)"
  exceptions:
  - description: "If the XML element start cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Begins an XML element start that has a prefix that will be self-closing (``).\n\nThis call doesn't close (`/>`) the XML element start but instead defers it until a call to begin another element. If there is an attempt to write the body of the element after beginning a self-closing element an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalStateException\"></xref> will be thrown as self-closing elements do not have a body.\n\nCalls to write attributes won't close the XML element.\n\nIf `prefix` is null this will behave the same as <xref uid=\"com.azure.xml.XmlWriter.writeStartSelfClosingElement(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeStartSelfClosingElement(String)\"></xref>."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeString(java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeString(String value)"
  name: "writeString(String value)"
  nameWithType: "XmlWriter.writeString(String value)"
  summary: "Writes a value directly into an XML element (`value`)."
  parameters:
  - description: "Value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeString(String value)"
  exceptions:
  - description: "If the XML value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a value directly into an XML element (`value`).\n\nThis doesn't write the XML element start tag or end tag.\n\n<xref uid=\"com.azure.xml.XmlWriter.writeCDataString(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeCDataString(String)\"></xref> is a convenience API if an XML CData value needs to be written."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStringAttribute(java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStringAttribute(String localName, String value)"
  name: "writeStringAttribute(String localName, String value)"
  nameWithType: "XmlWriter.writeStringAttribute(String localName, String value)"
  summary: "Writes a String attribute (`attribute=\"value\"`)."
  parameters:
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Value of the attribute."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStringAttribute(String localName, String value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a String attribute (`attribute=\"value\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStringAttribute(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStringAttribute(String namespaceUri, String localName, String value)"
  name: "writeStringAttribute(String namespaceUri, String localName, String value)"
  nameWithType: "XmlWriter.writeStringAttribute(String namespaceUri, String localName, String value)"
  summary: "Writes a String attribute that has a prefix (`prefix:attribute=\"value\"`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the attribute."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Value of the attribute."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStringAttribute(String namespaceUri, String localName, String value)"
  exceptions:
  - description: "If the XML attribute cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a String attribute that has a prefix (`prefix:attribute=\"value\"`)."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStringElement(java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStringElement(String localName, String value)"
  name: "writeStringElement(String localName, String value)"
  nameWithType: "XmlWriter.writeStringElement(String localName, String value)"
  summary: "Writes a string element (`string`)."
  parameters:
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "String value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStringElement(String localName, String value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a string element (`string`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeStringElement(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeStringElement(String namespaceUri, String localName, String value)"
  name: "writeStringElement(String namespaceUri, String localName, String value)"
  nameWithType: "XmlWriter.writeStringElement(String namespaceUri, String localName, String value)"
  summary: "Writes a string element that has a prefix (`string`)."
  parameters:
  - description: "Namespace URI to bind the prefix to, if null the default namespace is used."
    name: "namespaceUri"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the element."
    name: "localName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "String value to write."
    name: "value"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeStringElement(String namespaceUri, String localName, String value)"
  exceptions:
  - description: "If the XML element and value cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes a string element that has a prefix (`string`).\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeXml(com.azure.xml.XmlSerializable<?>)"
  fullName: "com.azure.xml.XmlWriter.writeXml(XmlSerializable<?> value)"
  name: "writeXml(XmlSerializable<?> value)"
  nameWithType: "XmlWriter.writeXml(XmlSerializable<?> value)"
  summary: "Writes an <xref uid=\"com.azure.xml.XmlSerializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlSerializable\"></xref> object."
  parameters:
  - description: "<xref uid=\"com.azure.xml.XmlSerializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlSerializable\"></xref> object to write."
    name: "value"
    type: "<xref href=\"com.azure.xml.XmlSerializable?alt=com.azure.xml.XmlSerializable&text=XmlSerializable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  syntax: "public XmlWriter writeXml(XmlSerializable<?> value)"
  exceptions:
  - description: "If the XML object cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an <xref uid=\"com.azure.xml.XmlSerializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlSerializable\"></xref> object.\n\nIf the `value` is null this is a no-op."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.xml.XmlWriter.writeXml(com.azure.xml.XmlSerializable<?>,java.lang.String)"
  fullName: "com.azure.xml.XmlWriter.writeXml(XmlSerializable<?> value, String rootElementName)"
  name: "writeXml(XmlSerializable<?> value, String rootElementName)"
  nameWithType: "XmlWriter.writeXml(XmlSerializable<?> value, String rootElementName)"
  summary: "Writes an <xref uid=\"com.azure.xml.XmlSerializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlSerializable\"></xref> object."
  parameters:
  - description: "<xref uid=\"com.azure.xml.XmlSerializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlSerializable\"></xref> object to write."
    name: "value"
    type: "<xref href=\"com.azure.xml.XmlSerializable?alt=com.azure.xml.XmlSerializable&text=XmlSerializable\" data-throw-if-not-resolved=\"False\" />&lt;?&gt;"
  - description: "Override of the XML element name defined by the object."
    name: "rootElementName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public XmlWriter writeXml(XmlSerializable<?> value, String rootElementName)"
  exceptions:
  - description: "If the XML object cannot be written."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/javax/xml/stream/XMLStreamException.html\">XMLStreamException</a>"
  desc: "Writes an <xref uid=\"com.azure.xml.XmlSerializable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"XmlSerializable\"></xref> object.\n\nIf the `value` is null this is a no-op.\n\nIf `rootElementName` is null this is the same as calling <xref uid=\"com.azure.xml.XmlWriter.writeXml(com.azure.xml.XmlSerializable<?>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#writeXml(XmlSerializable)\"></xref>."
  returns:
    description: "The updated XmlWriter object."
    type: "<xref href=\"com.azure.xml.XmlWriter?alt=com.azure.xml.XmlWriter&text=XmlWriter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Writes an XML encoded value to a stream."
implements:
- "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html\">AutoCloseable</a>"
metadata: {}
package: "com.azure.xml"
artifact: com.azure:azure-xml:1.2.0
