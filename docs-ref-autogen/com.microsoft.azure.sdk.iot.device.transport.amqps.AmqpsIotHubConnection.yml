### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection"
fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection"
name: "AmqpsIotHubConnection"
nameWithType: "AmqpsIotHubConnection"
summary: "An AMQPS Iot<wbr>Hub connection between a device and an Io<wbr>THub or Edgehub."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)"
- "org.apache.qpid.proton.engine.BaseHandler.children()"
- "org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)"
- "org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)"
- "org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkLocalClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionLocalClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportError(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)"
- "org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)"
syntax: "public final class AmqpsIotHubConnection extends BaseHandler implements IotHubTransportConnection, AmqpsSessionStateCallback"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(com.microsoft.azure.sdk.iot.device.DeviceClientConfig,boolean)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig config, boolean isMultiplexing)"
  name: "AmqpsIotHubConnection(DeviceClientConfig config, boolean isMultiplexing)"
  nameWithType: "AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig config, boolean isMultiplexing)"
  parameters:
  - name: "config"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "isMultiplexing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpsIotHubConnection(DeviceClientConfig config, boolean isMultiplexing)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(java.lang.String,boolean,javax.net.ssl.SSLContext,com.microsoft.azure.sdk.iot.device.ProxySettings)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(String hostName, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings)"
  name: "AmqpsIotHubConnection(String hostName, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings)"
  nameWithType: "AmqpsIotHubConnection.AmqpsIotHubConnection(String hostName, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings)"
  parameters:
  - name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "isWebsocketConnection"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxySettings"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ProxySettings?alt=com.microsoft.azure.sdk.iot.device.ProxySettings&text=ProxySettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public AmqpsIotHubConnection(String hostName, boolean isWebsocketConnection, SSLContext sslContext, ProxySettings proxySettings)"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close()"
  name: "close()"
  nameWithType: "AmqpsIotHubConnection.close()"
  summary: "Closes the transport connection."
  syntax: "public void close()"
  exceptions:
  - type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Closes the transport connection."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getConnectionId()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getConnectionId()"
  name: "getConnectionId()"
  nameWithType: "AmqpsIotHubConnection.getConnectionId()"
  summary: "Gives the UUID associated with this connection instance."
  syntax: "public String getConnectionId()"
  desc: "Gives the UUID associated with this connection instance. This string is used in conjunction with the callbacks with connection status updates to ensure that all connection status updates are relevant to this connection object"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationFailed(java.lang.String,com.microsoft.azure.sdk.iot.device.exceptions.TransportException)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationFailed(String deviceId, TransportException transportException)"
  name: "onAuthenticationFailed(String deviceId, TransportException transportException)"
  nameWithType: "AmqpsIotHubConnection.onAuthenticationFailed(String deviceId, TransportException transportException)"
  summary: "Executed when SAS based authentication fails for a device in this connection"
  parameters:
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "transportException"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onAuthenticationFailed(String deviceId, TransportException transportException)"
  desc: "Executed when SAS based authentication fails for a device in this connection"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationSessionOpened()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationSessionOpened()"
  name: "onAuthenticationSessionOpened()"
  nameWithType: "AmqpsIotHubConnection.onAuthenticationSessionOpened()"
  summary: "Executed when the authentication session has successfully been opened."
  syntax: "public void onAuthenticationSessionOpened()"
  desc: "Executed when the authentication session has successfully been opened. Never called for x509 auth."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onCBSSessionClosedUnexpectedly(org.apache.qpid.proton.amqp.transport.ErrorCondition)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)"
  name: "onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)"
  nameWithType: "AmqpsIotHubConnection.onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)"
  summary: "Executed if the CBS session closes unexpectedly."
  parameters:
  - name: "errorCondition"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.ErrorCondition?alt=org.apache.qpid.proton.amqp.transport.ErrorCondition&text=ErrorCondition\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onCBSSessionClosedUnexpectedly(ErrorCondition errorCondition)"
  desc: "Executed if the CBS session closes unexpectedly. May be because one of its links closed unexpectedly, or if the session closed unexpectedly."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound(Event event)"
  name: "onConnectionBound(Event event)"
  nameWithType: "AmqpsIotHubConnection.onConnectionBound(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionBound(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit(Event event)"
  name: "onConnectionInit(Event event)"
  nameWithType: "AmqpsIotHubConnection.onConnectionInit(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionInit(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalClose(Event event)"
  name: "onConnectionLocalClose(Event event)"
  nameWithType: "AmqpsIotHubConnection.onConnectionLocalClose(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionLocalClose(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalOpen(Event event)"
  name: "onConnectionLocalOpen(Event event)"
  nameWithType: "AmqpsIotHubConnection.onConnectionLocalOpen(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionLocalOpen(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteClose(Event event)"
  name: "onConnectionRemoteClose(Event event)"
  nameWithType: "AmqpsIotHubConnection.onConnectionRemoteClose(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionRemoteClose(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteOpen(Event event)"
  name: "onConnectionRemoteOpen(Event event)"
  nameWithType: "AmqpsIotHubConnection.onConnectionRemoteOpen(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionRemoteOpen(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDeviceSessionOpened(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDeviceSessionOpened(String deviceId)"
  name: "onDeviceSessionOpened(String deviceId)"
  nameWithType: "AmqpsIotHubConnection.onDeviceSessionOpened(String deviceId)"
  summary: "Executed when a device's amqp session has successfully been opened."
  parameters:
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onDeviceSessionOpened(String deviceId)"
  desc: "Executed when a device's amqp session has successfully been opened. For multiplexing scenarios, this callback will be fired once per device."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageAcknowledged(com.microsoft.azure.sdk.iot.device.Message,org.apache.qpid.proton.amqp.transport.DeliveryState,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)"
  name: "onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)"
  nameWithType: "AmqpsIotHubConnection.onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)"
  summary: "Executed when a message sent in this connection was acknowledged by the service."
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  - name: "deliveryState"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.DeliveryState?alt=org.apache.qpid.proton.amqp.transport.DeliveryState&text=DeliveryState\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onMessageAcknowledged(Message message, DeliveryState deliveryState, String deviceId)"
  desc: "Executed when a message sent in this connection was acknowledged by the service."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageReceived(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageReceived(IotHubTransportMessage message)"
  name: "onMessageReceived(IotHubTransportMessage message)"
  nameWithType: "AmqpsIotHubConnection.onMessageReceived(IotHubTransportMessage message)"
  summary: "Executed when a message was received by a session that this connection owns."
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onMessageReceived(IotHubTransportMessage message)"
  desc: "Executed when a message was received by a session that this connection owns. This message should be acknowledged later."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal(Event event)"
  name: "onReactorFinal(Event event)"
  nameWithType: "AmqpsIotHubConnection.onReactorFinal(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onReactorFinal(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit(Event event)"
  name: "onReactorInit(Event event)"
  nameWithType: "AmqpsIotHubConnection.onReactorInit(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onReactorInit(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedAsExpected(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedAsExpected(String deviceId)"
  name: "onSessionClosedAsExpected(String deviceId)"
  nameWithType: "AmqpsIotHubConnection.onSessionClosedAsExpected(String deviceId)"
  summary: "Executed if a session closes, but it was expected."
  parameters:
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onSessionClosedAsExpected(String deviceId)"
  desc: "Executed if a session closes, but it was expected. Likely due to user calling close on the connection, or unregistering a device from an active multiplexed connection"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedUnexpectedly(org.apache.qpid.proton.amqp.transport.ErrorCondition,java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)"
  name: "onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)"
  nameWithType: "AmqpsIotHubConnection.onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)"
  summary: "Executed if a session closes unexpectedly."
  parameters:
  - name: "errorCondition"
    type: "<xref href=\"org.apache.qpid.proton.amqp.transport.ErrorCondition?alt=org.apache.qpid.proton.amqp.transport.ErrorCondition&text=ErrorCondition\" data-throw-if-not-resolved=\"False\" />"
  - name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onSessionClosedUnexpectedly(ErrorCondition errorCondition, String deviceId)"
  desc: "Executed if a session closes unexpectedly. May be because one of its links closed unexpectedly, or if the session closed unexpectedly."
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTimerTask(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTimerTask(Event event)"
  name: "onTimerTask(Event event)"
  nameWithType: "AmqpsIotHubConnection.onTimerTask(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onTimerTask(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(Event event)"
  name: "onTransportError(Event event)"
  nameWithType: "AmqpsIotHubConnection.onTransportError(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onTransportError(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onTransportError(Event event)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open()"
  name: "open()"
  nameWithType: "AmqpsIotHubConnection.open()"
  summary: "Opens the transport connection object"
  syntax: "public void open()"
  exceptions:
  - type: "<xref href=\"com.microsoft.azure.sdk.iot.device.exceptions.TransportException?alt=com.microsoft.azure.sdk.iot.device.exceptions.TransportException&text=TransportException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Opens the transport connection object"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.registerMultiplexedDevice(com.microsoft.azure.sdk.iot.device.DeviceClientConfig)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.registerMultiplexedDevice(DeviceClientConfig config)"
  name: "registerMultiplexedDevice(DeviceClientConfig config)"
  nameWithType: "AmqpsIotHubConnection.registerMultiplexedDevice(DeviceClientConfig config)"
  parameters:
  - name: "config"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void registerMultiplexedDevice(DeviceClientConfig config)"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.Message)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage(Message message)"
  name: "sendMessage(Message message)"
  nameWithType: "AmqpsIotHubConnection.sendMessage(Message message)"
  summary: "Send a single message to the Iot<wbr>Hub over the Transport Connection"
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubStatusCode sendMessage(Message message)"
  desc: "Send a single message to the IotHub over the Transport Connection"
  returns:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubStatusCode?alt=com.microsoft.azure.sdk.iot.device.IotHubStatusCode&text=IotHubStatusCode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,com.microsoft.azure.sdk.iot.device.IotHubMessageResult)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)"
  name: "sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)"
  nameWithType: "AmqpsIotHubConnection.sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)"
  summary: "Send an acknowledgement to the Iot<wbr>Hub for a message that the Transport layer received"
  parameters:
  - name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  - name: "result"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.IotHubMessageResult?alt=com.microsoft.azure.sdk.iot.device.IotHubMessageResult&text=IotHubMessageResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean sendMessageResult(IotHubTransportMessage message, IotHubMessageResult result)"
  desc: "Send an acknowledgement to the IotHub for a message that the Transport layer received"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.setListener(com.microsoft.azure.sdk.iot.device.transport.IotHubListener)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.setListener(IotHubListener listener)"
  name: "setListener(IotHubListener listener)"
  nameWithType: "AmqpsIotHubConnection.setListener(IotHubListener listener)"
  summary: "Sets a listener into the Transport Connection object."
  parameters:
  - name: "listener"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubListener?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubListener&text=IotHubListener\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setListener(IotHubListener listener)"
  desc: "Sets a listener into the Transport Connection object. This listener updates the Transport layer of connection status updates, message arrivals, and message acknowledgements"
- uid: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.unregisterMultiplexedDevice(com.microsoft.azure.sdk.iot.device.DeviceClientConfig)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.unregisterMultiplexedDevice(DeviceClientConfig config)"
  name: "unregisterMultiplexedDevice(DeviceClientConfig config)"
  nameWithType: "AmqpsIotHubConnection.unregisterMultiplexedDevice(DeviceClientConfig config)"
  parameters:
  - name: "config"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.DeviceClientConfig?alt=com.microsoft.azure.sdk.iot.device.DeviceClientConfig&text=DeviceClientConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void unregisterMultiplexedDevice(DeviceClientConfig config)"
type: "class"
desc: "An AMQPS IotHub connection between a device and an IoTHub or Edgehub. This class is responsible for reacting to connection level and reactor level events. It is also responsible for creating sessions and handlers for those sessions. An instance of this object may be reused after it has been closed."
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection&text=IotHubTransportConnection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionStateCallback?alt=com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionStateCallback&text=AmqpsSessionStateCallback\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.30.1
