### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(DeviceClientConfig,boolean)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.AmqpsIotHubConnection(String,boolean,SSLContext,ProxySettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="BaseHandler" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.transport.IotHubTransportConnection.sendMessage(Message)
methods:
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.close()
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.getConnectionId()
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationFailed(String,TransportException)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onAuthenticationSessionOpened()
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onCBSSessionClosedUnexpectedly(ErrorCondition)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionBound(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionInit(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalClose(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionLocalOpen(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteClose(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onConnectionRemoteOpen(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onDeviceSessionOpened(String)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageAcknowledged(Message,DeliveryState,String)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onMessageReceived(IotHubTransportMessage)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorFinal(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onReactorInit(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedAsExpected(String)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onSessionClosedUnexpectedly(ErrorCondition,String)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTimerTask(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.onTransportError(Event)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.open()
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.registerMultiplexedDevice(DeviceClientConfig)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessage(com.microsoft.azure.sdk.iot.device.Message)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.sendMessageResult(IotHubTransportMessage,IotHubMessageResult)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.setListener(IotHubListener)
- com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.unregisterMultiplexedDevice(DeviceClientConfig,boolean)
nameWithType: AmqpsIotHubConnection
syntax: public class AmqpsIotHubConnection implements IotHubTransportConnection
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection
name: AmqpsIotHubConnection
package: com.microsoft.azure.sdk.iot.device.transport.amqps
summary: <p>An AMQPS IotHub connection between a device and an IoTHub or Edgehub. This class is responsible for reacting to connection level and reactor level events. It is also responsible for creating sessions and handlers for those sessions. An instance of this object may be reused after it has been closed. </p>
metadata: {}
