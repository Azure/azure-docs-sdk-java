### YamlMime:JavaMember
nameWithType: PageRangeDiff.PageRangeDiff
type: constructor
members:
- fullName: com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff(final long start, final long end, final boolean isCleared)
  name: PageRangeDiff(final long start, final long end, final boolean isCleared)
  nameWithType: PageRangeDiff.PageRangeDiff(final long start, final long end, final boolean isCleared)
  parameters:
  - description: <p>A <code>long</code> which represents the starting offset. </p>
    name: start
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>long</code> which represents the ending offset. </p>
    name: end
    type: <xref href="final+long?alt=final long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <code>True</code> if the page range is a cleared range, <code>false</code> otherwise. </p>
    name: isCleared
    type: <xref href="final+boolean?alt=final boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class.</p>

    <p></p>
  syntax: protected PageRangeDiff(final long start, final long end, final boolean isCleared)
  uid: com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff(final long,final long,final boolean)
uid: com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff*
fullName: com.microsoft.azure.storage.blob.PageRangeDiff.PageRangeDiff
name: PageRangeDiff
package: com.microsoft.azure.storage.blob
metadata: {}
