### YamlMime:JavaMember
uid: "com.microsoft.azure.management.eventhub.EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData*"
fullName: "com.microsoft.azure.management.eventhub.EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData"
name: "withExistingStorageAccountForCapturedData"
nameWithType: "EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData"
members:
- uid: "com.microsoft.azure.management.eventhub.EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData(com.microsoft.azure.management.storage.StorageAccount,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData(StorageAccount storageAccount, String containerName)"
  name: "withExistingStorageAccountForCapturedData(StorageAccount storageAccount, String containerName)"
  nameWithType: "EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData(StorageAccount storageAccount, String containerName)"
  summary: "Specifies an existing storage account to store the captured data when data capturing is enabled."
  parameters:
  - description: "storage account"
    name: "storageAccount"
    type: "<xref href=\"com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />"
  - description: "an existing or new container to store the files containing captured data"
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EventHub.Update withExistingStorageAccountForCapturedData(StorageAccount storageAccount, String containerName)"
  returns:
    description: "next stage of the event hub update"
    type: "<xref href=\"com.microsoft.azure.management.eventhub.EventHub.Update?alt=com.microsoft.azure.management.eventhub.EventHub.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventhub.EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventhub.EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData(String storageAccountId, String containerName)"
  name: "withExistingStorageAccountForCapturedData(String storageAccountId, String containerName)"
  nameWithType: "EventHub.UpdateStages.WithCapture.withExistingStorageAccountForCapturedData(String storageAccountId, String containerName)"
  summary: "Specifies an existing storage account to store the captured data when data capturing is enabled."
  parameters:
  - description: "storage account arm id"
    name: "storageAccountId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "an existing or new container to store the files containing captured data"
    name: "containerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract EventHub.Update withExistingStorageAccountForCapturedData(String storageAccountId, String containerName)"
  returns:
    description: "next stage of the event hub update"
    type: "<xref href=\"com.microsoft.azure.management.eventhub.EventHub.Update?alt=com.microsoft.azure.management.eventhub.EventHub.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.eventhub"
artifact: com.microsoft.azure:azure-mgmt-eventhub:1.38.1
