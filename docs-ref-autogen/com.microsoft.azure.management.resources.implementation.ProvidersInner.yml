### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  id: "ProvidersInner"
  parent: "com.microsoft.azure.management.resources.implementation"
  children:
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersService"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.get(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.get(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.list()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.list(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(java.lang.Integer,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(java.lang.Integer,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync()"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync(java.lang.Integer,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.register(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregister(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  - "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterWithServiceResponseAsync(java.lang.String)"
  langs:
  - "java"
  name: "ProvidersInner"
  nameWithType: "ProvidersInner"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  type: "Class"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "An instance of this class provides access to all the operations defined in Providers."
  syntax:
    content: "public class ProvidersInner"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  id: "ProvidersInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "ProvidersInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  nameWithType: "ProvidersInner.ProvidersInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Initializes an instance of ProvidersInner."
  syntax:
    content: "public ProvidersInner(Retrofit retrofit, ResourceManagementClientImpl client)"
    parameters:
    - id: "retrofit"
      type: "retrofit2.Retrofit"
      description: "the Retrofit instance built from a Retrofit Builder."
    - id: "client"
      type: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get(java.lang.String)"
  id: "get(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "get(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.get(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public ProviderInner get(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    return:
      type: "com.microsoft.azure.management.resources.implementation.ProviderInner"
      description: "the ProviderInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get(java.lang.String,java.lang.String)"
  id: "get(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "get(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersInner.get(String resourceProviderNamespace, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get(String resourceProviderNamespace, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public ProviderInner get(String resourceProviderNamespace, String expand)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "com.microsoft.azure.management.resources.implementation.ProviderInner"
      description: "the ProviderInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String)"
  id: "getAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.getAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public Observable<ProviderInner> getAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "getAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.getAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public ServiceFuture<ProviderInner> getAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String,java.lang.String)"
  id: "getAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersInner.getAsync(String resourceProviderNamespace, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(String resourceProviderNamespace, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public Observable<ProviderInner> getAsync(String resourceProviderNamespace, String expand)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "getAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.getAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public ServiceFuture<ProviderInner> getAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope(java.lang.String)"
  id: "getAtTenantScope(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScope(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.getAtTenantScope(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public ProviderInner getAtTenantScope(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    return:
      type: "com.microsoft.azure.management.resources.implementation.ProviderInner"
      description: "the ProviderInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope(java.lang.String,java.lang.String)"
  id: "getAtTenantScope(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScope(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersInner.getAtTenantScope(String resourceProviderNamespace, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope(String resourceProviderNamespace, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public ProviderInner getAtTenantScope(String resourceProviderNamespace, String expand)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "com.microsoft.azure.management.resources.implementation.ProviderInner"
      description: "the ProviderInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String)"
  id: "getAtTenantScopeAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScopeAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public Observable<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "getAtTenantScopeAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScopeAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public ServiceFuture<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String,java.lang.String)"
  id: "getAtTenantScopeAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public Observable<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace, String expand)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "getAtTenantScopeAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScopeAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public ServiceFuture<ProviderInner> getAtTenantScopeAsync(String resourceProviderNamespace, String expand, ServiceCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  id: "getAtTenantScopeWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public Observable<ServiceResponse<ProviderInner>> getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "getAtTenantScopeWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersInner.getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider at the tenant level."
  syntax:
    content: "public Observable<ServiceResponse<ProviderInner>> getAtTenantScopeWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync(java.lang.String)"
  id: "getWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getWithServiceResponseAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.getWithServiceResponseAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public Observable<ServiceResponse<ProviderInner>> getWithServiceResponseAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "getWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "getWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
  nameWithType: "ProvidersInner.getWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets the specified resource provider."
  syntax:
    content: "public Observable<ServiceResponse<ProviderInner>> getWithServiceResponseAsync(String resourceProviderNamespace, String expand)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list()"
  id: "list()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "list()"
  nameWithType: "ProvidersInner.list()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public PagedList<ProviderInner> list()"
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the PagedList&lt;ProviderInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list(java.lang.Integer,java.lang.String)"
  id: "list(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "list(Integer top, String expand)"
  nameWithType: "ProvidersInner.list(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public PagedList<ProviderInner> list(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all deployments."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the PagedList&lt;ProviderInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync()"
  id: "listAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAsync()"
  nameWithType: "ProvidersInner.listAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public Observable<Page<ProviderInner>> listAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAsync(ListOperationCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.listAsync(ListOperationCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(ListOperationCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public ServiceFuture<List<ProviderInner>> listAsync(ListOperationCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(java.lang.Integer,java.lang.String)"
  id: "listAsync(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAsync(Integer top, String expand)"
  nameWithType: "ProvidersInner.listAsync(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public Observable<Page<ProviderInner>> listAsync(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all deployments."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(java.lang.Integer,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "listAsync(java.lang.Integer,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.listAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public ServiceFuture<List<ProviderInner>> listAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all deployments."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope()"
  id: "listAtTenantScope()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScope()"
  nameWithType: "ProvidersInner.listAtTenantScope()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public PagedList<ProviderInner> listAtTenantScope()"
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the PagedList&lt;ProviderInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope(java.lang.Integer,java.lang.String)"
  id: "listAtTenantScope(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScope(Integer top, String expand)"
  nameWithType: "ProvidersInner.listAtTenantScope(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public PagedList<ProviderInner> listAtTenantScope(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all providers."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the PagedList&lt;ProviderInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync()"
  id: "listAtTenantScopeAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync()"
  nameWithType: "ProvidersInner.listAtTenantScopeAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public Observable<Page<ProviderInner>> listAtTenantScopeAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "listAtTenantScopeAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync(ListOperationCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.listAtTenantScopeAsync(ListOperationCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(ListOperationCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public ServiceFuture<List<ProviderInner>> listAtTenantScopeAsync(ListOperationCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(java.lang.Integer,java.lang.String)"
  id: "listAtTenantScopeAsync(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync(Integer top, String expand)"
  nameWithType: "ProvidersInner.listAtTenantScopeAsync(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public Observable<Page<ProviderInner>> listAtTenantScopeAsync(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all providers."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(java.lang.Integer,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "listAtTenantScopeAsync(java.lang.Integer,java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.listAtTenantScopeAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public ServiceFuture<List<ProviderInner>> listAtTenantScopeAsync(Integer top, String expand, ListOperationCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all providers."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNext(java.lang.String)"
  id: "listAtTenantScopeNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeNext(String nextPageLink)"
  nameWithType: "ProvidersInner.listAtTenantScopeNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public PagedList<ProviderInner> listAtTenantScopeNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the PagedList&lt;ProviderInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync(java.lang.String)"
  id: "listAtTenantScopeNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextAsync(String nextPageLink)"
  nameWithType: "ProvidersInner.listAtTenantScopeNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public Observable<Page<ProviderInner>> listAtTenantScopeNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "listAtTenantScopeNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public ServiceFuture<List<ProviderInner>> listAtTenantScopeNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextSinglePageAsync(java.lang.String)"
  id: "listAtTenantScopeNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
  nameWithType: "ProvidersInner.listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listAtTenantScopeNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the PagedList&lt;ProviderInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync(java.lang.String)"
  id: "listAtTenantScopeNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listAtTenantScopeNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync()"
  id: "listAtTenantScopeSinglePageAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeSinglePageAsync()"
  nameWithType: "ProvidersInner.listAtTenantScopeSinglePageAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listAtTenantScopeSinglePageAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the PagedList&lt;ProviderInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String)"
  id: "listAtTenantScopeSinglePageAsync(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeSinglePageAsync(Integer top, String expand)"
  nameWithType: "ProvidersInner.listAtTenantScopeSinglePageAsync(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant. ServiceResponse> \\* @param top The number of results to return. If null is passed returns all providers. ServiceResponse> \\* @param expand The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listAtTenantScopeSinglePageAsync(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
    - id: "expand"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the PagedList&lt;ProviderInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync()"
  id: "listAtTenantScopeWithServiceResponseAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeWithServiceResponseAsync()"
  nameWithType: "ProvidersInner.listAtTenantScopeWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listAtTenantScopeWithServiceResponseAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync(java.lang.Integer,java.lang.String)"
  id: "listAtTenantScopeWithServiceResponseAsync(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listAtTenantScopeWithServiceResponseAsync(Integer top, String expand)"
  nameWithType: "ProvidersInner.listAtTenantScopeWithServiceResponseAsync(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for the tenant."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listAtTenantScopeWithServiceResponseAsync(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all providers."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNext(java.lang.String)"
  id: "listNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listNext(String nextPageLink)"
  nameWithType: "ProvidersInner.listNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public PagedList<ProviderInner> listNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the PagedList&lt;ProviderInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync(java.lang.String)"
  id: "listNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink)"
  nameWithType: "ProvidersInner.listNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public Observable<Page<ProviderInner>> listNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.listNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public ServiceFuture<List<ProviderInner>> listNextAsync(String nextPageLink, ServiceFuture<List<ProviderInner>> serviceFuture, ListOperationCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextSinglePageAsync(java.lang.String)"
  id: "listNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listNextSinglePageAsync(String nextPageLink)"
  nameWithType: "ProvidersInner.listNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the PagedList&lt;ProviderInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextWithServiceResponseAsync(java.lang.String)"
  id: "listNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "ProvidersInner.listNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync()"
  id: "listSinglePageAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listSinglePageAsync()"
  nameWithType: "ProvidersInner.listSinglePageAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listSinglePageAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the PagedList&lt;ProviderInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync(java.lang.Integer,java.lang.String)"
  id: "listSinglePageAsync(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listSinglePageAsync(Integer top, String expand)"
  nameWithType: "ProvidersInner.listSinglePageAsync(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription. ServiceResponse> \\* @param top The number of results to return. If null is passed returns all deployments. ServiceResponse> \\* @param expand The properties to include in the results. For example, use &$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listSinglePageAsync(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
    - id: "expand"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the PagedList&lt;ProviderInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync()"
  id: "listWithServiceResponseAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listWithServiceResponseAsync()"
  nameWithType: "ProvidersInner.listWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listWithServiceResponseAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync(java.lang.Integer,java.lang.String)"
  id: "listWithServiceResponseAsync(java.lang.Integer,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "listWithServiceResponseAsync(Integer top, String expand)"
  nameWithType: "ProvidersInner.listWithServiceResponseAsync(Integer top, String expand)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync(Integer top, String expand)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets all resource providers for a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<ProviderInner>>> listWithServiceResponseAsync(Integer top, String expand)"
    parameters:
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed returns all deployments."
    - id: "expand"
      type: "java.lang.String"
      description: "The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
      description: "the observable to the PagedList&lt;ProviderInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.register(java.lang.String)"
  id: "register(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "register(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.register(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.register(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.register*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Registers a subscription with a resource provider."
  syntax:
    content: "public ProviderInner register(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to register."
    return:
      type: "com.microsoft.azure.management.resources.implementation.ProviderInner"
      description: "the ProviderInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync(java.lang.String)"
  id: "registerAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "registerAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.registerAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Registers a subscription with a resource provider."
  syntax:
    content: "public Observable<ProviderInner> registerAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to register."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "registerAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "registerAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.registerAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Registers a subscription with a resource provider."
  syntax:
    content: "public ServiceFuture<ProviderInner> registerAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to register."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerWithServiceResponseAsync(java.lang.String)"
  id: "registerWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "registerWithServiceResponseAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.registerWithServiceResponseAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerWithServiceResponseAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Registers a subscription with a resource provider."
  syntax:
    content: "public Observable<ServiceResponse<ProviderInner>> registerWithServiceResponseAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to register."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregister(java.lang.String)"
  id: "unregister(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "unregister(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.unregister(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregister(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregister*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Unregisters a subscription from a resource provider."
  syntax:
    content: "public ProviderInner unregister(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to unregister."
    return:
      type: "com.microsoft.azure.management.resources.implementation.ProviderInner"
      description: "the ProviderInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync(java.lang.String)"
  id: "unregisterAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "unregisterAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.unregisterAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Unregisters a subscription from a resource provider."
  syntax:
    content: "public Observable<ProviderInner> unregisterAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to unregister."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the observable to the ProviderInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  id: "unregisterAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "unregisterAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  nameWithType: "ProvidersInner.unregisterAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Unregisters a subscription from a resource provider."
  syntax:
    content: "public ServiceFuture<ProviderInner> unregisterAsync(String resourceProviderNamespace, ServiceCallback<ProviderInner> serviceCallback)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to unregister."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.ProviderInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterWithServiceResponseAsync(java.lang.String)"
  id: "unregisterWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ProvidersInner"
  langs:
  - "java"
  name: "unregisterWithServiceResponseAsync(String resourceProviderNamespace)"
  nameWithType: "ProvidersInner.unregisterWithServiceResponseAsync(String resourceProviderNamespace)"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterWithServiceResponseAsync(String resourceProviderNamespace)"
  overload: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Unregisters a subscription from a resource provider."
  syntax:
    content: "public Observable<ServiceResponse<ProviderInner>> unregisterWithServiceResponseAsync(String resourceProviderNamespace)"
    parameters:
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider to unregister."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
      description: "the observable to the ProviderInner object"
references:
- uid: "retrofit2.Retrofit"
  spec.java:
  - uid: "retrofit2.Retrofit"
    name: "Retrofit"
    fullName: "retrofit2.Retrofit"
- uid: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
  name: "ResourceManagementClientImpl"
  nameWithType: "ResourceManagementClientImpl"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersInner*"
  name: "ProvidersInner"
  nameWithType: "ProvidersInner.ProvidersInner"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersInner"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  name: "ProviderInner"
  nameWithType: "ProviderInner"
  fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregister*"
  name: "unregister"
  nameWithType: "ProvidersInner.unregister"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregister"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.ProviderInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync*"
  name: "unregisterAsync"
  nameWithType: "ProvidersInner.unregisterAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.implementation.ProviderInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterWithServiceResponseAsync*"
  name: "unregisterWithServiceResponseAsync"
  nameWithType: "ProvidersInner.unregisterWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.unregisterWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.register*"
  name: "register"
  nameWithType: "ProvidersInner.register"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.register"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync*"
  name: "registerAsync"
  nameWithType: "ProvidersInner.registerAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerWithServiceResponseAsync*"
  name: "registerWithServiceResponseAsync"
  nameWithType: "ProvidersInner.registerWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.registerWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.ProviderInner>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list*"
  name: "list"
  nameWithType: "ProvidersInner.list"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.list"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.ProviderInner>"
  spec.java:
  - uid: "com.microsoft.azure.ListOperationCallback"
    name: "ListOperationCallback"
    fullName: "com.microsoft.azure.ListOperationCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync*"
  name: "listAsync"
  nameWithType: "ProvidersInner.listAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.ProviderInner>>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.ProviderInner"
    name: "ProviderInner"
    fullName: "com.microsoft.azure.management.resources.implementation.ProviderInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync*"
  name: "listWithServiceResponseAsync"
  nameWithType: "ProvidersInner.listWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync*"
  name: "listSinglePageAsync"
  nameWithType: "ProvidersInner.listSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope*"
  name: "listAtTenantScope"
  nameWithType: "ProvidersInner.listAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync*"
  name: "listAtTenantScopeAsync"
  nameWithType: "ProvidersInner.listAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync*"
  name: "listAtTenantScopeWithServiceResponseAsync"
  nameWithType: "ProvidersInner.listAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync*"
  name: "listAtTenantScopeSinglePageAsync"
  nameWithType: "ProvidersInner.listAtTenantScopeSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get*"
  name: "get"
  nameWithType: "ProvidersInner.get"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.get"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync*"
  name: "getAsync"
  nameWithType: "ProvidersInner.getAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync*"
  name: "getWithServiceResponseAsync"
  nameWithType: "ProvidersInner.getWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope*"
  name: "getAtTenantScope"
  nameWithType: "ProvidersInner.getAtTenantScope"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScope"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync*"
  name: "getAtTenantScopeAsync"
  nameWithType: "ProvidersInner.getAtTenantScopeAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync*"
  name: "getAtTenantScopeWithServiceResponseAsync"
  nameWithType: "ProvidersInner.getAtTenantScopeWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.getAtTenantScopeWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNext*"
  name: "listNext"
  nameWithType: "ProvidersInner.listNext"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync*"
  name: "listNextAsync"
  nameWithType: "ProvidersInner.listNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextWithServiceResponseAsync*"
  name: "listNextWithServiceResponseAsync"
  nameWithType: "ProvidersInner.listNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextSinglePageAsync*"
  name: "listNextSinglePageAsync"
  nameWithType: "ProvidersInner.listNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNext*"
  name: "listAtTenantScopeNext"
  nameWithType: "ProvidersInner.listAtTenantScopeNext"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync*"
  name: "listAtTenantScopeNextAsync"
  nameWithType: "ProvidersInner.listAtTenantScopeNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync*"
  name: "listAtTenantScopeNextWithServiceResponseAsync"
  nameWithType: "ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextSinglePageAsync*"
  name: "listAtTenantScopeNextSinglePageAsync"
  nameWithType: "ProvidersInner.listAtTenantScopeNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.listAtTenantScopeNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersService"
  name: "ProvidersInner.ProvidersService"
  nameWithType: "ProvidersInner.ProvidersService"
  fullName: "com.microsoft.azure.management.resources.implementation.ProvidersInner.ProvidersService"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "com.microsoft.azure.ListOperationCallback"
  name: "ListOperationCallback"
  nameWithType: "ListOperationCallback"
  fullName: "com.microsoft.azure.ListOperationCallback"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
