### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.FileOperations
  id: FileOperations
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch
  children:
  - com.microsoft.azure.batch.FileOperations.customBehaviors()
  - com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.FileOperations.deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.FileOperations.deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  - com.microsoft.azure.batch.FileOperations.deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream)
  - com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>,java.io.OutputStream)
  - com.microsoft.azure.batch.FileOperations.getFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream)
  - com.microsoft.azure.batch.FileOperations.getFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>,java.io.OutputStream)
  - com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.FileOperations.listFilesFromTask(java.lang.String,java.lang.String)
  - com.microsoft.azure.batch.FileOperations.listFilesFromTask(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel)
  - com.microsoft.azure.batch.FileOperations.listFilesFromTask(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  - com.microsoft.azure.batch.FileOperations.withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  langs:
  - java
  name: FileOperations
  nameWithType: FileOperations
  fullName: com.microsoft.azure.batch.FileOperations
  type: Class
  package: com.microsoft.azure.batch
  summary: Performs file-related operations on an Azure Batch account.
  syntax:
    content: public class FileOperations implements IInheritedBehaviors
  inheritance:
  - java.lang.Object
  implements:
  - com.microsoft.azure.batch.IInheritedBehaviors
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.FileOperations.FileOperations(com.microsoft.azure.batch.BatchClient,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: FileOperations(com.microsoft.azure.batch.BatchClient,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: FileOperations(BatchClient batchClient, Iterable<BatchClientBehavior> inheritedBehaviors)
  nameWithType: FileOperations.FileOperations(BatchClient batchClient, Iterable<BatchClientBehavior> inheritedBehaviors)
  fullName: com.microsoft.azure.batch.FileOperations.FileOperations(BatchClient batchClient, Iterable<BatchClientBehavior> inheritedBehaviors)
  overload: com.microsoft.azure.batch.FileOperations.FileOperations*
  type: Constructor
  package: com.microsoft.azure.batch
  syntax:
    content: " FileOperations(BatchClient batchClient, Iterable<BatchClientBehavior> inheritedBehaviors)"
    parameters:
    - id: batchClient
      type: com.microsoft.azure.batch.BatchClient
    - id: inheritedBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
- uid: com.microsoft.azure.batch.FileOperations.customBehaviors()
  id: customBehaviors()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: customBehaviors()
  nameWithType: FileOperations.customBehaviors()
  fullName: com.microsoft.azure.batch.FileOperations.customBehaviors()
  overload: com.microsoft.azure.batch.FileOperations.customBehaviors*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets a collection of behaviors that modify or customize requests to the Batch service.
  syntax:
    content: public Collection<BatchClientBehavior> customBehaviors()
    return:
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances.
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String)
  id: deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
  overload: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified file from the specified compute node.
  syntax:
    content: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    - id: fileName
      type: java.lang.String
      description: The name of the file to delete.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
  overload: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified file from the specified compute node.
  syntax:
    content: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    - id: fileName
      type: java.lang.String
      description: The name of the file to delete.
    - id: recursive
      type: java.lang.Boolean
      description: If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: deleteFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified file from the specified compute node.
  syntax:
    content: public void deleteFileFromComputeNode(String poolId, String nodeId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    - id: fileName
      type: java.lang.String
      description: The name of the file to delete.
    - id: recursive
      type: java.lang.Boolean
      description: If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String)
  id: deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: deleteFileFromTask(String jobId, String taskId, String fileName)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName)
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName)
  overload: com.microsoft.azure.batch.FileOperations.deleteFileFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified file from the specified task's directory on its compute node.
  syntax:
    content: public void deleteFileFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job containing the task.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: fileName
      type: java.lang.String
      description: The name of the file to delete.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  id: deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
  overload: com.microsoft.azure.batch.FileOperations.deleteFileFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified file from the specified task's directory on its compute node.
  syntax:
    content: public void deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job containing the task.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: fileName
      type: java.lang.String
      description: The name of the file to delete.
    - id: recursive
      type: java.lang.Boolean
      description: If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: deleteFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.FileOperations.deleteFileFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Deletes the specified file from the specified task's directory on its compute node.
  syntax:
    content: public void deleteFileFromTask(String jobId, String taskId, String fileName, Boolean recursive, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job containing the task.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: fileName
      type: java.lang.String
      description: The name of the file to delete.
    - id: recursive
      type: java.lang.Boolean
      description: If the file-path parameter represents a directory instead of a file, you can set the recursive parameter to true to delete the directory and all of the files and subdirectories in it. If recursive is false or null, then the directory must be empty or deletion will fail.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream)
  id: getFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
  overload: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Downloads the specified file from the specified compute node.
  syntax:
    content: public void getFileFromComputeNode(String poolId, String nodeId, String fileName, OutputStream outputStream)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    - id: fileName
      type: java.lang.String
      description: The name of the file to download.
    - id: outputStream
      type: java.io.OutputStream
      description: A stream into which the file contents will be written.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>,java.io.OutputStream)
  id: getFileFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>,java.io.OutputStream)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  overload: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Downloads the specified file from the specified compute node.
  syntax:
    content: public void getFileFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    - id: fileName
      type: java.lang.String
      description: The name of the file to download.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    - id: outputStream
      type: java.io.OutputStream
      description: A stream into which the file contents will be written.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream)
  id: getFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.io.OutputStream)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.FileOperations.getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
  overload: com.microsoft.azure.batch.FileOperations.getFileFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Downloads the specified file from the specified task's directory on its compute node.
  syntax:
    content: public void getFileFromTask(String jobId, String taskId, String fileName, OutputStream outputStream)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job containing the task.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: fileName
      type: java.lang.String
      description: The name of the file to download.
    - id: outputStream
      type: java.io.OutputStream
      description: A stream into which the file contents will be written.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>,java.io.OutputStream)
  id: getFileFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>,java.io.OutputStream)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  nameWithType: FileOperations.getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  fullName: com.microsoft.azure.batch.FileOperations.getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
  overload: com.microsoft.azure.batch.FileOperations.getFileFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Downloads the specified file from the specified task's directory on its compute node.
  syntax:
    content: public void getFileFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors, OutputStream outputStream)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job containing the task.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: fileName
      type: java.lang.String
      description: The name of the file to download.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    - id: outputStream
      type: java.io.OutputStream
      description: A stream into which the file contents will be written.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(java.lang.String,java.lang.String,java.lang.String)
  id: getFilePropertiesFromComputeNode(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  nameWithType: FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
  overload: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets information about a file on a compute node.
  syntax:
    content: public FileProperties getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: the ID of the compute node.
    - id: fileName
      type: java.lang.String
      description: The name of the file to retrieve.
    return:
      type: com.microsoft.azure.batch.protocol.models.FileProperties
      description: A <xref uid="com.microsoft.azure.batch.protocol.models.FileProperties" data-throw-if-not-resolved="false">FileProperties</xref> instance containing information about the file.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: getFilePropertiesFromComputeNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets information about a file on a compute node.
  syntax:
    content: public FileProperties getFilePropertiesFromComputeNode(String poolId, String nodeId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: the ID of the compute node.
    - id: fileName
      type: java.lang.String
      description: The name of the file to retrieve.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.FileProperties
      description: A <xref uid="com.microsoft.azure.batch.protocol.models.FileProperties" data-throw-if-not-resolved="false">FileProperties</xref> instance containing information about the file.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(java.lang.String,java.lang.String,java.lang.String)
  id: getFilePropertiesFromTask(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFilePropertiesFromTask(String jobId, String taskId, String fileName)
  nameWithType: FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName)
  fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName)
  overload: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets information about a file from the specified task's directory on its compute node.
  syntax:
    content: public FileProperties getFilePropertiesFromTask(String jobId, String taskId, String fileName)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job containing the task.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: fileName
      type: java.lang.String
      description: The name of the file to retrieve.
    return:
      type: com.microsoft.azure.batch.protocol.models.FileProperties
      description: A <xref uid="com.microsoft.azure.batch.protocol.models.FileProperties" data-throw-if-not-resolved="false">FileProperties</xref> instance containing information about the file.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: getFilePropertiesFromTask(java.lang.String,java.lang.String,java.lang.String,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Gets information about a file from the specified task's directory on its compute node.
  syntax:
    content: public FileProperties getFilePropertiesFromTask(String jobId, String taskId, String fileName, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job containing the task.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: fileName
      type: java.lang.String
      description: The name of the file to retrieve.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.batch.protocol.models.FileProperties
      description: A <xref uid="com.microsoft.azure.batch.protocol.models.FileProperties" data-throw-if-not-resolved="false">FileProperties</xref> instance containing information about the file.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(java.lang.String,java.lang.String)
  id: listFilesFromComputeNode(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: listFilesFromComputeNode(String poolId, String nodeId)
  nameWithType: FileOperations.listFilesFromComputeNode(String poolId, String nodeId)
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String poolId, String nodeId)
  overload: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists files on the specified compute node.
  syntax:
    content: public PagedList<NodeFile> listFilesFromComputeNode(String poolId, String nodeId)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.NodeFile>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.NodeFile" data-throw-if-not-resolved="false">NodeFile</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel)
  id: listFilesFromComputeNode(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
  nameWithType: FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists files on the specified compute node.
  syntax:
    content: public PagedList<NodeFile> listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    - id: recursive
      type: java.lang.Boolean
      description: If true, recursively lists all files on the compute node. If false or null, lists only the files in the compute node root directory.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.NodeFile>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.NodeFile" data-throw-if-not-resolved="false">NodeFile</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: listFilesFromComputeNode(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists files on the specified compute node.
  syntax:
    content: public PagedList<NodeFile> listFilesFromComputeNode(String poolId, String nodeId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: poolId
      type: java.lang.String
      description: The ID of the pool that contains the compute node.
    - id: nodeId
      type: java.lang.String
      description: The ID of the compute node.
    - id: recursive
      type: java.lang.Boolean
      description: If true, recursively lists all files on the compute node. If false or null, lists only the files in the compute node root directory.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.NodeFile>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.NodeFile" data-throw-if-not-resolved="false">NodeFile</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(java.lang.String,java.lang.String)
  id: listFilesFromTask(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: listFilesFromTask(String jobId, String taskId)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId)
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId)
  overload: com.microsoft.azure.batch.FileOperations.listFilesFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the files in the specified task's directory on its compute node.
  syntax:
    content: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.NodeFile>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.NodeFile" data-throw-if-not-resolved="false">NodeFile</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel)
  id: listFilesFromTask(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
  overload: com.microsoft.azure.batch.FileOperations.listFilesFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the files in the specified task's directory on its compute node.
  syntax:
    content: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: recursive
      type: java.lang.Boolean
      description: If true, performs a recursive list of all files of the task. If false or null, returns only the files in the root task directory.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.NodeFile>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.NodeFile" data-throw-if-not-resolved="false">NodeFile</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  id: listFilesFromTask(java.lang.String,java.lang.String,java.lang.Boolean,com.microsoft.azure.batch.DetailLevel,java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  overload: com.microsoft.azure.batch.FileOperations.listFilesFromTask*
  type: Method
  package: com.microsoft.azure.batch
  summary: Lists the files in the specified task's directory on its compute node.
  syntax:
    content: public PagedList<NodeFile> listFilesFromTask(String jobId, String taskId, Boolean recursive, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
    parameters:
    - id: jobId
      type: java.lang.String
      description: The ID of the job.
    - id: taskId
      type: java.lang.String
      description: The ID of the task.
    - id: recursive
      type: java.lang.Boolean
      description: If true, performs a recursive list of all files of the task. If false or null, returns only the files in the root task directory.
    - id: detailLevel
      type: com.microsoft.azure.batch.DetailLevel
      description: A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false">DetailLevel</xref> used for filtering the list and for controlling which properties are retrieved from the service.
    - id: additionalBehaviors
      type: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
      description: A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request.
    return:
      type: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.NodeFile>
      description: A list of <xref uid="com.microsoft.azure.batch.protocol.models.NodeFile" data-throw-if-not-resolved="false">NodeFile</xref> objects.
  exceptions:
  - type: com.microsoft.azure.batch.protocol.models.BatchErrorException
    description: Exception thrown when an error response is received from the Batch service.
  - type: java.io.IOException
    description: Exception thrown when an error response is received from the Batch service.
- uid: com.microsoft.azure.batch.FileOperations.withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  id: withCustomBehaviors(java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.FileOperations
  langs:
  - java
  name: withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  nameWithType: FileOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  fullName: com.microsoft.azure.batch.FileOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  overload: com.microsoft.azure.batch.FileOperations.withCustomBehaviors*
  type: Method
  package: com.microsoft.azure.batch
  summary: Sets a collection of behaviors that modify or customize requests to the Batch service.
  syntax:
    content: public IInheritedBehaviors withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
    parameters:
    - id: behaviors
      type: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
      description: The collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances.
    return:
      type: com.microsoft.azure.batch.IInheritedBehaviors
      description: The current instance.
references:
- uid: com.microsoft.azure.batch.BatchClient
  name: BatchClient
  nameWithType: BatchClient
  fullName: com.microsoft.azure.batch.BatchClient
- uid: java.lang.Iterable<com.microsoft.azure.batch.BatchClientBehavior>
  spec.java:
  - uid: java.lang.Iterable
    name: Iterable
    fullName: java.lang.Iterable
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.BatchClientBehavior
    name: BatchClientBehavior
    fullName: com.microsoft.azure.batch.BatchClientBehavior
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.FileOperations.FileOperations*
  name: FileOperations
  nameWithType: FileOperations.FileOperations
  fullName: com.microsoft.azure.batch.FileOperations.FileOperations
  package: com.microsoft.azure.batch
- uid: java.util.Collection<com.microsoft.azure.batch.BatchClientBehavior>
  spec.java:
  - uid: java.util.Collection
    name: Collection
    fullName: java.util.Collection
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.BatchClientBehavior
    name: BatchClientBehavior
    fullName: com.microsoft.azure.batch.BatchClientBehavior
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.FileOperations.customBehaviors*
  name: customBehaviors
  nameWithType: FileOperations.customBehaviors
  fullName: com.microsoft.azure.batch.FileOperations.customBehaviors
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.IInheritedBehaviors
  name: IInheritedBehaviors
  nameWithType: IInheritedBehaviors
  fullName: com.microsoft.azure.batch.IInheritedBehaviors
- uid: com.microsoft.azure.batch.FileOperations.withCustomBehaviors*
  name: withCustomBehaviors
  nameWithType: FileOperations.withCustomBehaviors
  fullName: com.microsoft.azure.batch.FileOperations.withCustomBehaviors
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.BatchErrorException
  name: BatchErrorException
  nameWithType: BatchErrorException
  fullName: com.microsoft.azure.batch.protocol.models.BatchErrorException
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.PagedList<com.microsoft.azure.batch.protocol.models.NodeFile>
  spec.java:
  - uid: com.microsoft.azure.PagedList
    name: PagedList
    fullName: com.microsoft.azure.PagedList
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.NodeFile
    name: NodeFile
    fullName: com.microsoft.azure.batch.protocol.models.NodeFile
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromTask*
  name: listFilesFromTask
  nameWithType: FileOperations.listFilesFromTask
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromTask
  package: com.microsoft.azure.batch
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.batch.DetailLevel
  name: DetailLevel
  nameWithType: DetailLevel
  fullName: com.microsoft.azure.batch.DetailLevel
- uid: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode*
  name: listFilesFromComputeNode
  nameWithType: FileOperations.listFilesFromComputeNode
  fullName: com.microsoft.azure.batch.FileOperations.listFilesFromComputeNode
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromTask*
  name: deleteFileFromTask
  nameWithType: FileOperations.deleteFileFromTask
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromTask
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode*
  name: deleteFileFromComputeNode
  nameWithType: FileOperations.deleteFileFromComputeNode
  fullName: com.microsoft.azure.batch.FileOperations.deleteFileFromComputeNode
  package: com.microsoft.azure.batch
- uid: java.io.OutputStream
  spec.java:
  - uid: java.io.OutputStream
    name: OutputStream
    fullName: java.io.OutputStream
- uid: com.microsoft.azure.batch.FileOperations.getFileFromTask*
  name: getFileFromTask
  nameWithType: FileOperations.getFileFromTask
  fullName: com.microsoft.azure.batch.FileOperations.getFileFromTask
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode*
  name: getFileFromComputeNode
  nameWithType: FileOperations.getFileFromComputeNode
  fullName: com.microsoft.azure.batch.FileOperations.getFileFromComputeNode
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.protocol.models.FileProperties
  name: FileProperties
  nameWithType: FileProperties
  fullName: com.microsoft.azure.batch.protocol.models.FileProperties
- uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask*
  name: getFilePropertiesFromTask
  nameWithType: FileOperations.getFilePropertiesFromTask
  fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromTask
  package: com.microsoft.azure.batch
- uid: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode*
  name: getFilePropertiesFromComputeNode
  nameWithType: FileOperations.getFilePropertiesFromComputeNode
  fullName: com.microsoft.azure.batch.FileOperations.getFilePropertiesFromComputeNode
  package: com.microsoft.azure.batch
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.microsoft.azure.batch.BatchClientBehavior
  name: BatchClientBehavior
  nameWithType: BatchClientBehavior
  fullName: com.microsoft.azure.batch.BatchClientBehavior
- uid: java.lang.Iterable
  name: Iterable
  nameWithType: Iterable
  fullName: java.lang.Iterable
- uid: java.util.Collection
  name: Collection
  nameWithType: Collection
  fullName: java.util.Collection
- uid: com.microsoft.azure.PagedList
  name: PagedList
  nameWithType: PagedList
  fullName: com.microsoft.azure.PagedList
- uid: com.microsoft.azure.batch.protocol.models.NodeFile
  name: NodeFile
  nameWithType: NodeFile
  fullName: com.microsoft.azure.batch.protocol.models.NodeFile
