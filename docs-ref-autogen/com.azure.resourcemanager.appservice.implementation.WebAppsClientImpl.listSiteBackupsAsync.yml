### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appservice.implementation.WebAppsClientImpl.listSiteBackupsAsync*"
fullName: "com.azure.resourcemanager.appservice.implementation.WebAppsClientImpl.listSiteBackupsAsync"
name: "listSiteBackupsAsync"
nameWithType: "WebAppsClientImpl.listSiteBackupsAsync"
members:
- uid: "com.azure.resourcemanager.appservice.implementation.WebAppsClientImpl.listSiteBackupsAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.appservice.implementation.WebAppsClientImpl.listSiteBackupsAsync(String resourceGroupName, String name)"
  name: "listSiteBackupsAsync(String resourceGroupName, String name)"
  nameWithType: "WebAppsClientImpl.listSiteBackupsAsync(String resourceGroupName, String name)"
  summary: "Description for Gets existing backups of an app."
  parameters:
  - description: "Name of the resource group to which the resource belongs."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the app."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<BackupItemInner> listSiteBackupsAsync(String resourceGroupName, String name)"
  returns:
    description: "collection of backup items."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.fluent.models.BackupItemInner?alt=com.azure.resourcemanager.appservice.fluent.models.BackupItemInner&text=BackupItemInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appservice.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
