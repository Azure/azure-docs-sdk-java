### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.queue._queue_request_options
  id: _queue_request_options
  parent: com.microsoft.azure.storage.queue
  children:
  - com.microsoft.azure.storage.queue._queue_request_options.applyDefaults(QueueRequestOptions)
  - com.microsoft.azure.storage.queue._queue_request_options.assertPolicyIfRequired()
  - com.microsoft.azure.storage.queue._queue_request_options.getEncryptionPolicy()
  - com.microsoft.azure.storage.queue._queue_request_options.populateAndApplyDefaults(QueueRequestOptions,final CloudQueueClient)
  - com.microsoft.azure.storage.queue._queue_request_options.QueueRequestOptions()
  - com.microsoft.azure.storage.queue._queue_request_options.QueueRequestOptions(final QueueRequestOptions)
  - com.microsoft.azure.storage.queue._queue_request_options.setEncryptionPolicy(QueueEncryptionPolicy)
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 25
  package: com.microsoft.azure.storage.queue
  summary: <p>Represents a set of options that may be specified on a queue request. </p>
  syntax: &o1
    content: public class QueueRequestOptions extends RequestOptions
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage._request_options
  inheritedMembers:
  - com.microsoft.azure.storage._request_options.applyBaseDefaultsInternal(final RequestOptions)
  - com.microsoft.azure.storage._request_options.getLocationMode()
  - com.microsoft.azure.storage._request_options.getMaximumExecutionTimeInMs()
  - com.microsoft.azure.storage._request_options.getOperationExpiryTimeInMs()
  - com.microsoft.azure.storage._request_options.getRetryPolicyFactory()
  - com.microsoft.azure.storage._request_options.getTimeoutIntervalInMs()
  - com.microsoft.azure.storage._request_options.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  - com.microsoft.azure.storage._request_options.RequestOptions()
  - com.microsoft.azure.storage._request_options.RequestOptions(final RequestOptions)
  - com.microsoft.azure.storage._request_options.requireEncryption()
  - com.microsoft.azure.storage._request_options.setLocationMode(final LocationMode)
  - com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)
  - com.microsoft.azure.storage._request_options.setRequireEncryption(Boolean)
  - com.microsoft.azure.storage._request_options.setRetryPolicyFactory(final RetryPolicyFactory)
  - com.microsoft.azure.storage._request_options.setTimeoutIntervalInMs(final Integer)
- uid: com.microsoft.azure.storage.queue._queue_request_options.applyDefaults(QueueRequestOptions)
  id: applyDefaults(QueueRequestOptions)
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: applyDefaults(QueueRequestOptions modifiedOptions)
  nameWithType: QueueRequestOptions.applyDefaults(QueueRequestOptions modifiedOptions)
  fullName: static void com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults(QueueRequestOptions modifiedOptions)
  overload: com.microsoft.azure.storage.queue._queue_request_options.applyDefaults*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 76
  package: com.microsoft.azure.storage.queue
  summary: >-
    <p>Applies defaults to the options passed in.</p>

    <p></p>
  syntax:
    content: protected static void applyDefaults(QueueRequestOptions modifiedOptions)
    parameters:
    - id: modifiedOptions
      type: com.microsoft.azure.storage.queue._queue_request_options
      description: <p>The options to apply defaults to. </p>
- uid: com.microsoft.azure.storage.queue._queue_request_options.assertPolicyIfRequired()
  id: assertPolicyIfRequired()
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: assertPolicyIfRequired()
  nameWithType: QueueRequestOptions.assertPolicyIfRequired()
  fullName: void com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired()
  overload: com.microsoft.azure.storage.queue._queue_request_options.assertPolicyIfRequired*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 127
  package: com.microsoft.azure.storage.queue
  summary: <p>Assert that if strict mode is on, an encryption policy is specified. </p>
  syntax:
    content: protected void assertPolicyIfRequired()
- uid: com.microsoft.azure.storage.queue._queue_request_options.getEncryptionPolicy()
  id: getEncryptionPolicy()
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: getEncryptionPolicy()
  nameWithType: QueueRequestOptions.getEncryptionPolicy()
  fullName: QueueEncryptionPolicy com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy()
  overload: com.microsoft.azure.storage.queue._queue_request_options.getEncryptionPolicy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 105
  package: com.microsoft.azure.storage.queue
  summary: >-
    <p>Gets the encryption policy to use for this request. For more information about the encryption policy defaults, see <xref uid="com.microsoft.azure.storage.queue._queue_request_options.setEncryptionPolicy(QueueEncryptionPolicy)" data-throw-if-not-resolved="false">setEncryptionPolicy(QueueEncryptionPolicy)</xref>.</p>

    <p></p>
  syntax:
    content: public QueueEncryptionPolicy getEncryptionPolicy()
    return:
      type: com.microsoft.azure.storage.queue._queue_encryption_policy
      description: <p>An <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> object that represents the current encryption policy. </p>
- uid: com.microsoft.azure.storage.queue._queue_request_options.populateAndApplyDefaults(QueueRequestOptions,final CloudQueueClient)
  id: populateAndApplyDefaults(QueueRequestOptions,final CloudQueueClient)
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
  nameWithType: QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
  fullName: static final QueueRequestOptions com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
  overload: com.microsoft.azure.storage.queue._queue_request_options.populateAndApplyDefaults*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 63
  package: com.microsoft.azure.storage.queue
  summary: >-
    <p>Populates the default timeout and retry policy from client if they are not set.</p>

    <p></p>
  syntax:
    content: protected static final QueueRequestOptions populateAndApplyDefaults(QueueRequestOptions options, final CloudQueueClient client)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.queue._queue_request_options
      description: <p>The input options to copy from when applying defaults </p>
    - id: client
      type: 93de0ef9com.microsoft.azure.storage.queue._cloud_queue_client
      description: <p>The <xref uid="com.microsoft.azure.storage.queue._cloud_queue_client" data-throw-if-not-resolved="false">CloudQueueClient</xref> service client to populate the default values from. </p>
    return:
      type: 93de0ef9com.microsoft.azure.storage.queue._queue_request_options
- uid: com.microsoft.azure.storage.queue._queue_request_options.QueueRequestOptions()
  id: QueueRequestOptions()
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: QueueRequestOptions()
  nameWithType: QueueRequestOptions.QueueRequestOptions()
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions()
  overload: com.microsoft.azure.storage.queue._queue_request_options.QueueRequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 35
  package: com.microsoft.azure.storage.queue
  summary: <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.queue._queue_request_options" data-throw-if-not-resolved="false">QueueRequestOptions</xref> class. </p>
  syntax:
    content: public QueueRequestOptions()
- uid: com.microsoft.azure.storage.queue._queue_request_options.QueueRequestOptions(final QueueRequestOptions)
  id: QueueRequestOptions(final QueueRequestOptions)
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: QueueRequestOptions(final QueueRequestOptions other)
  nameWithType: QueueRequestOptions.QueueRequestOptions(final QueueRequestOptions other)
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions(final QueueRequestOptions other)
  overload: com.microsoft.azure.storage.queue._queue_request_options.QueueRequestOptions*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 47
  package: com.microsoft.azure.storage.queue
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.queue._queue_request_options" data-throw-if-not-resolved="false">QueueRequestOptions</xref> class as a copy of another <xref uid="com.microsoft.azure.storage.queue._queue_request_options" data-throw-if-not-resolved="false">QueueRequestOptions</xref> instance.</p>

    <p></p>
  syntax:
    content: public QueueRequestOptions(final QueueRequestOptions other)
    parameters:
    - id: other
      type: 93de0ef9com.microsoft.azure.storage.queue._queue_request_options
      description: <p>The <xref uid="com.microsoft.azure.storage.queue._queue_request_options" data-throw-if-not-resolved="false">QueueRequestOptions</xref> object to copy the values from. </p>
- uid: com.microsoft.azure.storage.queue._queue_request_options.setEncryptionPolicy(QueueEncryptionPolicy)
  id: setEncryptionPolicy(QueueEncryptionPolicy)
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  langs:
  - java
  name: setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  nameWithType: QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  fullName: void com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  overload: com.microsoft.azure.storage.queue._queue_request_options.setEncryptionPolicy*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/queue/QueueRequestOptions.java
    startLine: 120
  package: com.microsoft.azure.storage.queue
  summary: >-
    <p>Sets the <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> object to use for this request. </p>

    <p>The default <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> is set in the client and is by default null, indicating no encryption. You can change the <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref>.</p>

    <p></p>
  syntax: &o2
    content: public void setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
    parameters:
    - id: encryptionPolicy
      type: com.microsoft.azure.storage.queue._queue_encryption_policy
      description: <p>the <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> object to use when making service requests. </p>
references:
- uid: com.microsoft.azure.storage.queue._queue_request_options.QueueRequestOptions*
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions.QueueRequestOptions
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions.QueueRequestOptions
  package: com.microsoft.azure.storage.queue
- uid: 93de0ef9com.microsoft.azure.storage.queue._queue_request_options
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.queue._queue_request_options
    name: QueueRequestOptions
    fullName: com.microsoft.azure.storage.queue.QueueRequestOptions
    href: com.microsoft.azure.storage.queue._queue_request_options.yml
- uid: com.microsoft.azure.storage.queue._queue_request_options.getEncryptionPolicy*
  name: getEncryptionPolicy
  nameWithType: QueueRequestOptions.getEncryptionPolicy
  fullName: QueueEncryptionPolicy com.microsoft.azure.storage.queue.QueueRequestOptions.getEncryptionPolicy
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue._queue_request_options.setEncryptionPolicy*
  name: setEncryptionPolicy
  nameWithType: QueueRequestOptions.setEncryptionPolicy
  fullName: void com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy
  package: com.microsoft.azure.storage.queue
- uid: 93de0ef9com.microsoft.azure.storage.queue._cloud_queue_client
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.queue._cloud_queue_client
    name: CloudQueueClient
    fullName: com.microsoft.azure.storage.queue.CloudQueueClient
    href: com.microsoft.azure.storage.queue._cloud_queue_client.yml
- uid: com.microsoft.azure.storage.queue._queue_request_options.populateAndApplyDefaults*
  name: populateAndApplyDefaults
  nameWithType: QueueRequestOptions.populateAndApplyDefaults
  fullName: static final QueueRequestOptions com.microsoft.azure.storage.queue.QueueRequestOptions.populateAndApplyDefaults
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue._queue_request_options.applyDefaults*
  name: applyDefaults
  nameWithType: QueueRequestOptions.applyDefaults
  fullName: static void com.microsoft.azure.storage.queue.QueueRequestOptions.applyDefaults
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage.queue._queue_request_options.assertPolicyIfRequired*
  name: assertPolicyIfRequired
  nameWithType: QueueRequestOptions.assertPolicyIfRequired
  fullName: void com.microsoft.azure.storage.queue.QueueRequestOptions.assertPolicyIfRequired
  package: com.microsoft.azure.storage.queue
- uid: com.microsoft.azure.storage._request_options.applyBaseDefaultsInternal(final RequestOptions)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  nameWithType: RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  fullName: static void com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
  type: Method
  summary: >-
    <p>Populates the default timeout, retry policy, and location mode from client if they are null.</p>

    <p></p>
  syntax:
    content: protected static void applyBaseDefaultsInternal(final RequestOptions modifiedOptions)
    parameters:
    - id: modifiedOptions
      type: 93de0ef9com.microsoft.azure.storage._request_options
      description: <p>The input options to copy from when applying defaults </p>
- uid: com.microsoft.azure.storage._request_options.getLocationMode()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getLocationMode()
  nameWithType: RequestOptions.getLocationMode()
  fullName: final LocationMode com.microsoft.azure.storage.RequestOptions.getLocationMode()
  type: Method
  summary: >-
    <p>Gets the default location mode for this request. For more information about location mode, see <xref uid="com.microsoft.azure.storage._request_options.setLocationMode(final LocationMode)" data-throw-if-not-resolved="false">setLocationMode(LocationMode)</xref>.</p>

    <p></p>
  syntax:
    content: public final LocationMode getLocationMode()
    return:
      type: 93de0ef9com.microsoft.azure.storage._location_mode
      description: <p>A <xref uid="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false">LocationMode</xref> object that represents the location mode for this request. </p>
- uid: com.microsoft.azure.storage._request_options.getMaximumExecutionTimeInMs()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getMaximumExecutionTimeInMs()
  nameWithType: RequestOptions.getMaximumExecutionTimeInMs()
  fullName: Integer com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
  type: Method
  summary: >-
    <p>Gets the maximum execution time for this request. For more information about maximum execution time defaults, see <xref uid="com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)" data-throw-if-not-resolved="false">setMaximumExecutionTimeInMs(Integer)</xref>.</p>

    <p></p>
  syntax:
    content: public Integer getMaximumExecutionTimeInMs()
    return:
      type: 08effaa0
      description: <p>The current maximum execution time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage._request_options.getOperationExpiryTimeInMs()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getOperationExpiryTimeInMs()
  nameWithType: RequestOptions.getOperationExpiryTimeInMs()
  fullName: Long com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
  type: Method
  summary: >-
    <p>RESERVED FOR INTERNAL USE.</p>

    <p>Returns the time at which this operation expires. This is computed by adding the time the operation begins and the maximum execution time and will be null if maximum execution time is null. For more information about maximum execution time, see <xref uid="com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)" data-throw-if-not-resolved="false">setMaximumExecutionTimeInMs(Integer)</xref>.</p>

    <p></p>
  syntax:
    content: public Long getOperationExpiryTimeInMs()
    return:
      type: 34f09483
      description: <p>The current operation expiry time, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage._request_options.getRetryPolicyFactory()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getRetryPolicyFactory()
  nameWithType: RequestOptions.getRetryPolicyFactory()
  fullName: final RetryPolicyFactory com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
  type: Method
  summary: >-
    <p>Gets the retry policy to use for this request. For more information about the retry policy defaults, see <xref uid="com.microsoft.azure.storage._request_options.setRetryPolicyFactory(final RetryPolicyFactory)" data-throw-if-not-resolved="false">setRetryPolicyFactory(RetryPolicyFactory)</xref>.</p>

    <p></p>
  syntax:
    content: public final RetryPolicyFactory getRetryPolicyFactory()
    return:
      type: 93de0ef9com.microsoft.azure.storage._retry_policy_factory
      description: <p>An <xref uid="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false">RetryPolicyFactory</xref> object that represents the current retry policy.</p>
- uid: com.microsoft.azure.storage._request_options.getTimeoutIntervalInMs()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: getTimeoutIntervalInMs()
  nameWithType: RequestOptions.getTimeoutIntervalInMs()
  fullName: final Integer com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
  type: Method
  summary: >-
    <p>Returns the timeout value for this request. For more information about the timeout defaults, see <xref uid="com.microsoft.azure.storage._request_options.setTimeoutIntervalInMs(final Integer)" data-throw-if-not-resolved="false">setTimeoutIntervalInMs(Integer)</xref>.</p>

    <p></p>
  syntax:
    content: public final Integer getTimeoutIntervalInMs()
    return:
      type: 3437983f
      description: <p>The current timeout value, in milliseconds, for this request. </p>
- uid: com.microsoft.azure.storage._request_options.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  nameWithType: RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  fullName: static void com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
  type: Method
  summary: <p>Populates any null fields in the first requestOptions object with values from the second requestOptions object. </p>
  syntax:
    content: protected static void populateRequestOptions(RequestOptions modifiedOptions, final RequestOptions clientOptions, final boolean setStartTime)
    parameters:
    - id: modifiedOptions
      type: com.microsoft.azure.storage._request_options
    - id: clientOptions
      type: 93de0ef9com.microsoft.azure.storage._request_options
    - id: setStartTime
      type: 4dda0764
- uid: com.microsoft.azure.storage._request_options.RequestOptions()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: RequestOptions()
  nameWithType: RequestOptions.RequestOptions()
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions()
  type: Constructor
  summary: <p>Creates an instance of the  class. </p>
  syntax:
    content: public RequestOptions()
- uid: com.microsoft.azure.storage._request_options.RequestOptions(final RequestOptions)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: RequestOptions(final RequestOptions other)
  nameWithType: RequestOptions.RequestOptions(final RequestOptions other)
  fullName: com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions other)
  type: Constructor
  summary: >-
    <p>Creates an instance of the  class by copying values from another  instance.</p>

    <p></p>
  syntax:
    content: public RequestOptions(final RequestOptions other)
    parameters:
    - id: other
      type: 93de0ef9com.microsoft.azure.storage._request_options
      description: <p>A <code><xref uid="com.microsoft.azure.storage._request_options" data-throw-if-not-resolved="false">RequestOptions</xref></code> object that represents the request options to copy. </p>
- uid: com.microsoft.azure.storage._request_options.requireEncryption()
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: requireEncryption()
  nameWithType: RequestOptions.requireEncryption()
  fullName: Boolean com.microsoft.azure.storage.RequestOptions.requireEncryption()
  type: Method
  summary: >-
    <p>Gets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . For more information about require encryption defaults, see <xref uid="com.microsoft.azure.storage._request_options.setRequireEncryption(Boolean)" data-throw-if-not-resolved="false">setRequireEncryption(Boolean)</xref>.</p>

    <p></p>
  syntax:
    content: public Boolean requireEncryption()
    return:
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage._request_options.setLocationMode(final LocationMode)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setLocationMode(final LocationMode locationMode)
  nameWithType: RequestOptions.setLocationMode(final LocationMode locationMode)
  fullName: void com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode locationMode)
  type: Method
  summary: >-
    <p>Sets the <xref uid="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false">LocationMode</xref> for this request. </p>

    <p>The default <xref uid="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false">LocationMode</xref> is set in the client and is by default <xref uid="com.microsoft.azure.storage._location_mode.PRIMARY_ONLY" data-throw-if-not-resolved="false">LocationMode#PRIMARY_ONLY</xref>. You can change the <xref uid="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false">LocationMode</xref> on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that <xref uid="com.microsoft.azure.storage._location_mode" data-throw-if-not-resolved="false">LocationMode</xref>.</p>

    <p></p>
  syntax:
    content: public void setLocationMode(final LocationMode locationMode)
    parameters:
    - id: locationMode
      type: 93de0ef9com.microsoft.azure.storage._location_mode
      description: <p>the locationMode to set </p>
- uid: com.microsoft.azure.storage._request_options.setMaximumExecutionTimeInMs(Integer)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  nameWithType: RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  fullName: void com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
  type: Method
  summary: >-
    <p>Sets the maximum execution time to use when making this request. </p>

    <p>The maximum execution time interval begins at the time that the client begins building the request. The maximum execution time is checked intermittently while uploading data, downloading data, and before executing retries. The service will continue to upload, download, and retry until the maximum execution time is reached. At that time, any partial uploads or downloads will be cancelled and an exception will be thrown. </p>

    <p>The default maximum execution is set in the client and is by default null, indicating no maximum time. You can change the maximum execution time on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use the maximum execution time.</p>

    <p></p>
  syntax:
    content: public void setMaximumExecutionTimeInMs(Integer maximumExecutionTimeInMs)
    parameters:
    - id: maximumExecutionTimeInMs
      type: 08effaa0
      description: <p>The maximum execution time, in milliseconds, to use for this request. </p>
- uid: com.microsoft.azure.storage._request_options.setRequireEncryption(Boolean)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setRequireEncryption(Boolean requireEncryption)
  nameWithType: RequestOptions.setRequireEncryption(Boolean requireEncryption)
  fullName: void com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean requireEncryption)
  type: Method
  summary: >-
    <p>Sets a value to indicate whether all data written and read must be encrypted. Use  to encrypt/decrypt data for transactions; otherwise, . </p>

    <p>The default is set in the client and is by default false, indicating encryption is not required. You can change the value on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use the appropriate value.</p>

    <p></p>
  syntax:
    content: public void setRequireEncryption(Boolean requireEncryption)
    parameters:
    - id: requireEncryption
      type: 866c2227
      description: <p>A value to indicate whether all data written and read must be encrypted. </p>
- uid: com.microsoft.azure.storage._request_options.setRetryPolicyFactory(final RetryPolicyFactory)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  nameWithType: RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  fullName: final void com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
  type: Method
  summary: >-
    <p>Sets the <xref uid="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false">RetryPolicyFactory</xref> object to use for this request. </p>

    <p>The default <xref uid="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false">RetryPolicyFactory</xref> is set in the client and is by default <xref uid="com.microsoft.azure.storage._retry_exponential_retry" data-throw-if-not-resolved="false">RetryExponentialRetry</xref>. You can change the <xref uid="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false">RetryPolicyFactory</xref> on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that <xref uid="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false">RetryPolicyFactory</xref>.</p>

    <p></p>
  syntax:
    content: public final void setRetryPolicyFactory(final RetryPolicyFactory retryPolicyFactory)
    parameters:
    - id: retryPolicyFactory
      type: 93de0ef9com.microsoft.azure.storage._retry_policy_factory
      description: <p>the <xref uid="com.microsoft.azure.storage._retry_policy_factory" data-throw-if-not-resolved="false">RetryPolicyFactory</xref> object to use when making service requests.</p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage._request_options.setTimeoutIntervalInMs(final Integer)
  parent: com.microsoft.azure.storage._request_options
  href: com.microsoft.azure.storage._request_options.yml
  name: setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  nameWithType: RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  fullName: final void com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
  type: Method
  summary: >-
    <p>Sets the timeout to use when making this request. </p>

    <p>The server timeout interval begins at the time that the complete request has been received by the service, and the server begins processing the response. If the timeout interval elapses before the response is returned to the client, the operation times out. The timeout interval resets with each retry, if the request is retried. </p>

    <p>The default server timeout is set in the client and is by default null, indicating no server timeout. You can change the server timeout on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that server timeout.</p>

    <p></p>
  syntax:
    content: public final void setTimeoutIntervalInMs(final Integer timeoutIntervalInMs)
    parameters:
    - id: timeoutIntervalInMs
      type: 3437983f
      description: <p>The timeout, in milliseconds, to use for this request. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage._request_options
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._request_options.yml
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: com.microsoft.azure.storage.RequestOptions
  type: Class
  summary: <p>Represents the options to use while processing a given request. </p>
  syntax:
    content: public class RequestOptions
- uid: com.microsoft.azure.storage.queue._queue_encryption_policy
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue._queue_encryption_policy.yml
  name: QueueEncryptionPolicy
  nameWithType: QueueEncryptionPolicy
  fullName: com.microsoft.azure.storage.queue.QueueEncryptionPolicy
  type: Class
  summary: <p>Represents a queue encryption policy that is used to perform envelope encryption/decryption of Azure queue messages. </p>
  syntax:
    content: public class QueueEncryptionPolicy
- uid: com.microsoft.azure.storage.queue._queue_request_options
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  name: QueueRequestOptions
  nameWithType: QueueRequestOptions
  fullName: com.microsoft.azure.storage.queue.QueueRequestOptions
  type: Class
  summary: <p>Represents a set of options that may be specified on a queue request. </p>
  syntax: *o1
- uid: com.microsoft.azure.storage.queue._queue_request_options.setEncryptionPolicy(QueueEncryptionPolicy)
  parent: com.microsoft.azure.storage.queue._queue_request_options
  href: com.microsoft.azure.storage.queue._queue_request_options.yml
  name: setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  nameWithType: QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  fullName: void com.microsoft.azure.storage.queue.QueueRequestOptions.setEncryptionPolicy(QueueEncryptionPolicy encryptionPolicy)
  type: Method
  summary: >-
    <p>Sets the <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> object to use for this request. </p>

    <p>The default <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> is set in the client and is by default null, indicating no encryption. You can change the <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref> on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage._service_client.getDefaultRequestOptions()" data-throw-if-not-resolved="false">ServiceClient#getDefaultRequestOptions()</xref> object so that all subsequent requests made via the service client will use that <xref uid="com.microsoft.azure.storage.queue._queue_encryption_policy" data-throw-if-not-resolved="false">QueueEncryptionPolicy</xref>.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.storage._service_client.getDefaultRequestOptions()
  parent: com.microsoft.azure.storage._service_client
  href: com.microsoft.azure.storage._service_client.yml
  name: getDefaultRequestOptions()
  nameWithType: ServiceClient.getDefaultRequestOptions()
  fullName: abstract RequestOptions com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()
  type: Method
  summary: >-
    <p>Gets the <xref uid="com.microsoft.azure.storage._request_options" data-throw-if-not-resolved="false">RequestOptions</xref> that is used for requests associated with this </p>

    <p></p>
  syntax:
    content: public abstract RequestOptions getDefaultRequestOptions()
    return:
      type: 13c86962com.microsoft.azure.storage._request_options
      description: <p>The <xref uid="com.microsoft.azure.storage._request_options" data-throw-if-not-resolved="false">RequestOptions</xref> object containing the values used by this <code><xref uid="com.microsoft.azure.storage._service_client" data-throw-if-not-resolved="false">ServiceClient</xref></code></p>
- uid: com.microsoft.azure.storage.queue._cloud_queue_client
  parent: com.microsoft.azure.storage.queue
  href: com.microsoft.azure.storage.queue._cloud_queue_client.yml
  name: CloudQueueClient
  nameWithType: CloudQueueClient
  fullName: com.microsoft.azure.storage.queue.CloudQueueClient
  type: Class
  summary: <p>Provides a service client for accessing the Microsoft Azure Queue service. </p>
  syntax:
    content: public class CloudQueueClient extends ServiceClient
