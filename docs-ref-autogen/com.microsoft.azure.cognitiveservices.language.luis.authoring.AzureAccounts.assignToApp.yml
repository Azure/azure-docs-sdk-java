### YamlMime:JavaMember
nameWithType: AzureAccounts.assignToApp
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.AzureAccounts.assignToApp()
  name: assignToApp()
  nameWithType: AzureAccounts.assignToApp()
  returns:
    description: <p>the first stage of the assignToApp call </p>
    type: <xref href="AzureAccountsAssignToAppDefinitionStages.WithAppId?alt=AzureAccountsAssignToAppDefinitionStages.WithAppId&text=AzureAccountsAssignToAppDefinitionStages.WithAppId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>apps - Assign a LUIS Azure account to an application. Assigns an Azure account to the application.</p>

    <p></p>
  syntax: public AzureAccountsAssignToAppDefinitionStages.WithAppId assignToApp()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.AzureAccounts.assignToApp()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.AzureAccounts.assignToApp(UUID appId, AssignToAppOptionalParameter assignToAppOptionalParameter)
  name: assignToApp(UUID appId, AssignToAppOptionalParameter assignToAppOptionalParameter)
  nameWithType: AzureAccounts.assignToApp(UUID appId, AssignToAppOptionalParameter assignToAppOptionalParameter)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: assignToAppOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.AssignToAppOptionalParameter?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.AssignToAppOptionalParameter&text=AssignToAppOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the OperationStatus object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.OperationStatus&text=OperationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>apps - Assign a LUIS Azure account to an application. Assigns an Azure account to the application.</p>

    <p></p>
  syntax: public OperationStatus assignToApp(UUID appId, AssignToAppOptionalParameter assignToAppOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.AzureAccounts.assignToApp(UUID,AssignToAppOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.AzureAccounts.assignToApp*
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.AzureAccounts.assignToApp
name: assignToApp()
package: com.microsoft.azure.cognitiveservices.language.luis.authoring
metadata: {}
