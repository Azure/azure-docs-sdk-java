### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.Module"
fullName: "com.microsoft.azure.sdk.iot.service.Module"
name: "Module"
nameWithType: "Module"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice?alt=com.microsoft.azure.sdk.iot.service.BaseDevice&text=BaseDevice\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getAuthenticationType()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getAuthenticationType&text=getAuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getCloudToDeviceMessageCount()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getCloudToDeviceMessageCount&text=getCloudToDeviceMessageCount\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getConnectionState()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getConnectionState&text=getConnectionState\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getConnectionStateUpdatedTime()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getConnectionStateUpdatedTime&text=getConnectionStateUpdatedTime\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getDeviceId()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getDeviceId&text=getDeviceId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getGenerationId()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getGenerationId&text=getGenerationId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getLastActivityTime()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getLastActivityTime&text=getLastActivityTime\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getPrimaryKey()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getPrimaryKey&text=getPrimaryKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getPrimaryThumbprint()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getPrimaryThumbprint&text=getPrimaryThumbprint\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getSecondaryKey()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getSecondaryKey&text=getSecondaryKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getSecondaryThumbprint()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getSecondaryThumbprint&text=getSecondaryThumbprint\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.getSymmetricKey()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.getSymmetricKey&text=getSymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.geteTag()?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.geteTag&text=geteTag\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.setForceUpdate(java.lang.Boolean)?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.setForceUpdate&text=setForceUpdate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.setSymmetricKey(com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.setSymmetricKey&text=setSymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.setThumbprint(java.lang.String,java.lang.String)?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.setThumbprint&text=setThumbprint\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice.setThumbprintFinal(java.lang.String,java.lang.String)?alt=com.microsoft.azure.sdk.iot.service.BaseDevice.setThumbprintFinal&text=setThumbprintFinal\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **Module**</br> extends <xref href=\"com.microsoft.azure.sdk.iot.service.BaseDevice?alt=com.microsoft.azure.sdk.iot.service.BaseDevice&text=BaseDevice\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.Module.Module(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)"
  fullName: "com.microsoft.azure.sdk.iot.service.Module.Module(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  name: "Module(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  nameWithType: "Module.Module(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  summary: "Create an Module instance using the given module name"
  modifiers:
  - "protected"
  parameters:
  - description: "Name of the device (used as device id)"
    name: "deviceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- ame of the module (used as module id)"
    name: "moduleId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- Device key. If parameter is null, then the key will be auto generated."
    name: "symmetricKey"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Module(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  exceptions:
  - description: "This exception is thrown if <code>deviceId</code> or <code>moduleId</code> is <code>null</code> or empty."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\">IllegalArgumentException</a>"
  desc: "Create an Module instance using the given module name"
fields:
- uid: "com.microsoft.azure.sdk.iot.service.Module.id"
  fullName: "com.microsoft.azure.sdk.iot.service.Module.id"
  name: "id"
  nameWithType: "Module.id"
  summary: "Module name A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars + \\{'-', ':', '.', '+', '%', '\\_', '\\#', '\\*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''\\}."
  modifiers:
  - "protected"
  field:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "protected String id"
  desc: "Module name A case-sensitive string (up to 128 char long) of ASCII 7-bit alphanumeric chars + \\{'-', ':', '.', '+', '%', '\\_', '\\#', '\\*', '?', '!', '(', ')', ',', '=', '@', ';', '$', '''\\}."
- uid: "com.microsoft.azure.sdk.iot.service.Module.managedBy"
  fullName: "com.microsoft.azure.sdk.iot.service.Module.managedBy"
  name: "managedBy"
  nameWithType: "Module.managedBy"
  summary: "Specifies the module's managed by owner"
  modifiers:
  - "protected"
  field:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "protected String managedBy"
  desc: "Specifies the module's managed by owner"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.Module.createFromId(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.auth.SymmetricKey)"
  fullName: "com.microsoft.azure.sdk.iot.service.Module.createFromId(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  name: "createFromId(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  nameWithType: "Module.createFromId(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  summary: "Static create function Creates module object using the given name."
  modifiers:
  - "static"
  parameters:
  - description: "- String containing the device name"
    name: "deviceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- String containing the module name"
    name: "moduleId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- Device key. If parameter is null, then the key will be auto generated."
    name: "symmetricKey"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.SymmetricKey?alt=com.microsoft.azure.sdk.iot.service.auth.SymmetricKey&text=SymmetricKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Module createFromId(String deviceId, String moduleId, SymmetricKey symmetricKey)"
  exceptions:
  - description: "This exception is thrown if <code>deviceId</code> is <code>null</code> or empty."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\">IllegalArgumentException</a>"
  desc: "Static create function Creates module object using the given name. If input symmetric key are null then they will be auto generated."
  returns:
    description: "Module object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Module.createModule(java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.auth.AuthenticationType)"
  fullName: "com.microsoft.azure.sdk.iot.service.Module.createModule(String deviceId, String moduleId, AuthenticationType authenticationType)"
  name: "createModule(String deviceId, String moduleId, AuthenticationType authenticationType)"
  nameWithType: "Module.createModule(String deviceId, String moduleId, AuthenticationType authenticationType)"
  summary: "Static create function Creates device object using the given name that will use a Certificate Authority signed certificate for authentication."
  modifiers:
  - "static"
  parameters:
  - description: "- String containing the device name"
    name: "deviceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- String containing the module name"
    name: "moduleId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "- The type of authentication used by this device."
    name: "authenticationType"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.auth.AuthenticationType?alt=com.microsoft.azure.sdk.iot.service.auth.AuthenticationType&text=AuthenticationType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Module createModule(String deviceId, String moduleId, AuthenticationType authenticationType)"
  exceptions:
  - description: "This exception is thrown if <code>deviceId</code> or <code>moduleId</code> is <code>null</code> or empty."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/IllegalArgumentException.html\">IllegalArgumentException</a>"
  desc: "Static create function Creates device object using the given name that will use a Certificate Authority signed certificate for authentication."
  returns:
    description: "Module object"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.Module?alt=com.microsoft.azure.sdk.iot.service.Module&text=Module\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.Module.getId()"
  fullName: "com.microsoft.azure.sdk.iot.service.Module.getId()"
  name: "getId()"
  nameWithType: "Module.getId()"
  summary: "Getter for module name"
  syntax: "public String getId()"
  desc: "Getter for module name"
  returns:
    description: "The module string"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.microsoft.azure.sdk.iot.service.Module.getManagedBy()"
  fullName: "com.microsoft.azure.sdk.iot.service.Module.getManagedBy()"
  name: "getManagedBy()"
  nameWithType: "Module.getManagedBy()"
  summary: "Getter for module's managed by owner"
  syntax: "public String getManagedBy()"
  desc: "Getter for module's managed by owner"
  returns:
    description: "The string containing the managed by owner"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
