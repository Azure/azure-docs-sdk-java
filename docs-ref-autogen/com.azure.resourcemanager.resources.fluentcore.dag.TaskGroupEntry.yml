### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>"
name: "TaskGroupEntry<TaskT>"
nameWithType: "TaskGroupEntry<TaskT>"
summary: "Type representing an entry in <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup\"></xref> that holds one <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskItem\"></xref> and associated information which includes: 1."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode&text=DAGNode\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.addDependency(java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.addDependency&text=addDependency\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.addDependent(java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.addDependent&text=addDependent\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.dependencyKeys()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.dependencyKeys&text=dependencyKeys\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.hasDependencies()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.hasDependencies&text=hasDependencies\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.initialize()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.initialize&text=initialize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.isPreparer()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.isPreparer&text=isPreparer\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.lock()?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.lock&text=lock\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.onFaultedResolution(java.lang.String,java.lang.Throwable)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.onFaultedResolution&text=onFaultedResolution\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.onSuccessfulResolution(java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.onSuccessfulResolution&text=onSuccessfulResolution\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.removeDependency(java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.removeDependency&text=removeDependency\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.setPreparer(boolean)?alt=com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.setPreparer&text=setPreparer\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node&text=Node\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.addChild(java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.addChild&text=addChild\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.children()?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.children&text=children\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.data()?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.data&text=data\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.hasChildren()?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.hasChildren&text=hasChildren\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.key()?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.key&text=key\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.owner()?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.owner&text=owner\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.removeChild(java.lang.String)?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.removeChild&text=removeChild\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node.setOwner(com.azure.resourcemanager.resources.fluentcore.dag.Graph<DataT,NodeT>)?alt=com.azure.resourcemanager.resources.fluentcore.dag.Node.setOwner&text=setOwner\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class TaskGroupEntry<TaskT> extends DAGNode<TaskT,TaskGroupEntry<TaskT>>"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.hasFaultedDescentDependencyTasks()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>.hasFaultedDescentDependencyTasks()"
  name: "hasFaultedDescentDependencyTasks()"
  nameWithType: "TaskGroupEntry<TaskT>.hasFaultedDescentDependencyTasks()"
  syntax: "public boolean hasFaultedDescentDependencyTasks()"
  returns:
    description: "true if one or more decedent dependency tasks are in faulted\n state, false otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.initialize()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>.initialize()"
  name: "initialize()"
  nameWithType: "TaskGroupEntry<TaskT>.initialize()"
  summary: "Initialize the node so that traversal can be performed on the parent DAG."
  overridden: "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.initialize()"
  syntax: "public void initialize()"
  desc: "Initialize the node so that traversal can be performed on the parent DAG."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.invokeTaskAsync(boolean,com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>.invokeTaskAsync(boolean ignoreCachedResult, TaskGroup.InvocationContext context)"
  name: "invokeTaskAsync(boolean ignoreCachedResult, TaskGroup.InvocationContext context)"
  nameWithType: "TaskGroupEntry<TaskT>.invokeTaskAsync(boolean ignoreCachedResult, TaskGroup.InvocationContext context)"
  summary: "Invokes the task this entry holds."
  parameters:
  - description: "if the task is already invoked and has result cached then a value false for this\n                           parameter indicates the cached result can be returned without invoking task again,\n                           if true then cached result will be ignored and task will be invoked"
    name: "ignoreCachedResult"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context object shared across all the entries in the group that this entry belongs to,\n                           this will be passed to <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskItem#invokeAsync(TaskGroup.InvocationContext)\"></xref>\n                           method of the task item"
    name: "context"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext&text=InvocationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Indexable> invokeTaskAsync(boolean ignoreCachedResult, TaskGroup.InvocationContext context)"
  desc: "Invokes the task this entry holds. if the task cannot be invoked due to faulted dependencies then an observable that emit <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ErroredDependencyTaskException\"></xref> will be returned."
  returns:
    description: "a cold Observable upon subscription invokes the task this entry hold, which produces a result of\n type <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.onFaultedResolution(java.lang.String,java.lang.Throwable)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>.onFaultedResolution(String dependencyKey, Throwable throwable)"
  name: "onFaultedResolution(String dependencyKey, Throwable throwable)"
  nameWithType: "TaskGroupEntry<TaskT>.onFaultedResolution(String dependencyKey, Throwable throwable)"
  summary: "Reports a dependency of this node has been faulted."
  modifiers:
  - "protected"
  overridden: "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.onFaultedResolution(java.lang.String,java.lang.Throwable)"
  parameters:
  - name: "dependencyKey"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - name: "throwable"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Throwable.html\">Throwable</a>"
  syntax: "protected void onFaultedResolution(String dependencyKey, Throwable throwable)"
  desc: "Reports a dependency of this node has been faulted."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.proxy()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>.proxy()"
  name: "proxy()"
  nameWithType: "TaskGroupEntry<TaskT>.proxy()"
  syntax: "public TaskGroupEntry<TaskT> proxy()"
  returns:
    description: "the proxy entry if it is set, null if not set."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry&text=TaskGroupEntry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TaskT?alt=TaskT&text=TaskT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.setProxy(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>.setProxy(TaskGroupEntry<TaskT> proxy)"
  name: "setProxy(TaskGroupEntry<TaskT> proxy)"
  nameWithType: "TaskGroupEntry<TaskT>.setProxy(TaskGroupEntry<TaskT> proxy)"
  summary: "Set the proxy entry for this entry."
  parameters:
  - description: "the proxy entry"
    name: "proxy"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry&text=TaskGroupEntry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TaskT?alt=TaskT&text=TaskT\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public void setProxy(TaskGroupEntry<TaskT> proxy)"
  desc: "Set the proxy entry for this entry."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.taskResult()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>.taskResult()"
  name: "taskResult()"
  nameWithType: "TaskGroupEntry<TaskT>.taskResult()"
  syntax: "public Indexable taskResult()"
  returns:
    description: "the result produced by the task."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
type: "class"
typeParameters:
- description: "the task type that can return a value"
  name: "TaskT"
desc: "Type representing an entry in <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup\"></xref> that holds one <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskItem\"></xref> and associated information which includes: 1. references to other <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroupEntry\"></xref> dependencies 2. references to the other <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroupEntry\"></xref> dependents"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
