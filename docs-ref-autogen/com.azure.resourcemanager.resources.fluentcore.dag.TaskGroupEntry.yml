### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>"
name: "TaskGroupEntry<TaskT>"
nameWithType: "TaskGroupEntry<TaskT>"
summary: "Type representing an entry in <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup\"></xref> that holds one <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskItem\"></xref> and associated information which includes: 1. references to other <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroupEntry\"></xref> dependencies 2. references to the other <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroupEntry\"></xref> dependents"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.Node\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.DAGNode\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.addDependency(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.addDependent(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.dependencyKeys()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.hasDependencies()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.initialize()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.isPreparer()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.lock()"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.onFaultedResolution(java.lang.String,java.lang.Throwable)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.onSuccessfulResolution(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.removeDependency(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.DAGNode.setPreparer(boolean)"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.addChild(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.children()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.data()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.hasChildren()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.key()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.owner()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.removeChild(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.setOwner(com.azure.resourcemanager.resources.fluentcore.dag.Graph<DataT,NodeT>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class TaskGroupEntry<TaskT> extends DAGNode<TaskT,TaskGroupEntry<TaskT>>"
methods:
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.hasFaultedDescentDependencyTasks()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.initialize()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.invokeTaskAsync(boolean,com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.onFaultedResolution(java.lang.String,java.lang.Throwable)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.proxy()"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.setProxy(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry<TaskT>)"
- "com.azure.resourcemanager.resources.fluentcore.dag.TaskGroupEntry.taskResult()"
type: "class"
typeParameters:
- name: "TaskT"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
