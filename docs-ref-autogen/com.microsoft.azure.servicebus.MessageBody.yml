### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.MessageBody
  id: MessageBody
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus.MessageBody.fromBinaryData(java.util.List<byte[]>)
  - com.microsoft.azure.servicebus.MessageBody.fromSequenceData(java.util.List<java.util.List<java.lang.Object>>)
  - com.microsoft.azure.servicebus.MessageBody.fromValueData(java.lang.Object)
  - com.microsoft.azure.servicebus.MessageBody.getBinaryData()
  - com.microsoft.azure.servicebus.MessageBody.getBodyType()
  - com.microsoft.azure.servicebus.MessageBody.getSequenceData()
  - com.microsoft.azure.servicebus.MessageBody.getValueData()
  langs:
  - java
  name: MessageBody
  nameWithType: MessageBody
  fullName: com.microsoft.azure.servicebus.MessageBody
  type: Class
  package: com.microsoft.azure.servicebus
  summary: This class encapsulates the body of a message. Body types map to AMQP message body types. It has getters and setters for multiple body types. Client should test for body type before calling corresponding get method. Get methods not corresponding to the type of the body return null.
  syntax:
    content: public class MessageBody implements Serializable
  inheritance:
  - java.lang.Object
  implements:
  - java.io.Serializable
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.MessageBody.MessageBody()
  id: MessageBody()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: MessageBody()
  nameWithType: MessageBody.MessageBody()
  fullName: com.microsoft.azure.servicebus.MessageBody.MessageBody()
  overload: com.microsoft.azure.servicebus.MessageBody.MessageBody*
  type: Constructor
  package: com.microsoft.azure.servicebus
  syntax:
    content: private MessageBody()
- uid: com.microsoft.azure.servicebus.MessageBody.fromBinaryData(java.util.List<byte[]>)
  id: fromBinaryData(java.util.List<byte[]>)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: fromBinaryData(List<byte[]> binaryData)
  nameWithType: MessageBody.fromBinaryData(List<byte[]> binaryData)
  fullName: com.microsoft.azure.servicebus.MessageBody.fromBinaryData(List<byte[]> binaryData)
  overload: com.microsoft.azure.servicebus.MessageBody.fromBinaryData*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message body from a list of Data sections.Each Data section is a byte array. Please note that this version of the SDK supports only one Data section in a message. It means only a list of exactly one byte array in it is accepted as message body.
  syntax:
    content: public static MessageBody fromBinaryData(List<byte[]> binaryData)
    parameters:
    - id: binaryData
      type: java.util.List<byte[]>
      description: a list of byte arrays.
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: MessageBody instance wrapping around the binary data.
- uid: com.microsoft.azure.servicebus.MessageBody.fromSequenceData(java.util.List<java.util.List<java.lang.Object>>)
  id: fromSequenceData(java.util.List<java.util.List<java.lang.Object>>)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: fromSequenceData(List<List<Object>> sequenceData)
  nameWithType: MessageBody.fromSequenceData(List<List<Object>> sequenceData)
  fullName: com.microsoft.azure.servicebus.MessageBody.fromSequenceData(List<List<Object>> sequenceData)
  overload: com.microsoft.azure.servicebus.MessageBody.fromSequenceData*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates a message body from a list of AMQPSequence sections.Each AMQPSequence section is in turn a list of objects. Please note that this version of the SDK supports only one AMQPSequence section in a message. It means only a list of exactly one sequence in it is accepted as message body.
  syntax:
    content: public static MessageBody fromSequenceData(List<List<Object>> sequenceData)
    parameters:
    - id: sequenceData
      type: java.util.List<java.util.List<java.lang.Object>>
      description: a list of AMQPSequence sections. Each AMQPSequence section is in turn a list of objects. Every object in each list must of a type supported by AMQP.
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: MessageBody instance wrapping around the sequence data.
- uid: com.microsoft.azure.servicebus.MessageBody.fromValueData(java.lang.Object)
  id: fromValueData(java.lang.Object)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: fromValueData(Object value)
  nameWithType: MessageBody.fromValueData(Object value)
  fullName: com.microsoft.azure.servicebus.MessageBody.fromValueData(Object value)
  overload: com.microsoft.azure.servicebus.MessageBody.fromValueData*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Creates message body of AMQPValue type.
  syntax:
    content: public static MessageBody fromValueData(Object value)
    parameters:
    - id: value
      type: java.lang.Object
      description: AMQPValue content of the message. It must be of a type supported by AMQP.
    return:
      type: com.microsoft.azure.servicebus.MessageBody
      description: MessageBody instance wrapping around the value data.
- uid: com.microsoft.azure.servicebus.MessageBody.getBinaryData()
  id: getBinaryData()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: getBinaryData()
  nameWithType: MessageBody.getBinaryData()
  fullName: com.microsoft.azure.servicebus.MessageBody.getBinaryData()
  overload: com.microsoft.azure.servicebus.MessageBody.getBinaryData*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Returns the content of message body.
  syntax:
    content: public List<byte[]> getBinaryData()
    return:
      type: java.util.List<byte[]>
      description: message body as list of byte arrays only if the MessageBody is of Binary type. Returns null otherwise.
- uid: com.microsoft.azure.servicebus.MessageBody.getBodyType()
  id: getBodyType()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: getBodyType()
  nameWithType: MessageBody.getBodyType()
  fullName: com.microsoft.azure.servicebus.MessageBody.getBodyType()
  overload: com.microsoft.azure.servicebus.MessageBody.getBodyType*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Return the type of content in this message body.
  syntax:
    content: public MessageBodyType getBodyType()
    return:
      type: com.microsoft.azure.servicebus.MessageBodyType
      description: type of message content
- uid: com.microsoft.azure.servicebus.MessageBody.getSequenceData()
  id: getSequenceData()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: getSequenceData()
  nameWithType: MessageBody.getSequenceData()
  fullName: com.microsoft.azure.servicebus.MessageBody.getSequenceData()
  overload: com.microsoft.azure.servicebus.MessageBody.getSequenceData*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Returns the content of message body.
  syntax:
    content: public List<List<Object>> getSequenceData()
    return:
      type: java.util.List<java.util.List<java.lang.Object>>
      description: a list of AMQPSequence sections only if the MessageBody is of Sequence type. Returns null otherwise. Each AMQPSequence section is in turn a list of objects.
- uid: com.microsoft.azure.servicebus.MessageBody.getValueData()
  id: getValueData()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.MessageBody
  langs:
  - java
  name: getValueData()
  nameWithType: MessageBody.getValueData()
  fullName: com.microsoft.azure.servicebus.MessageBody.getValueData()
  overload: com.microsoft.azure.servicebus.MessageBody.getValueData*
  type: Method
  package: com.microsoft.azure.servicebus
  summary: Returns the content of message body.
  syntax:
    content: public Object getValueData()
    return:
      type: java.lang.Object
      description: value of message body only if the MessageBody is of Value type. Returns null otherwise.
references:
- uid: com.microsoft.azure.servicebus.MessageBody.MessageBody*
  name: MessageBody
  nameWithType: MessageBody.MessageBody
  fullName: com.microsoft.azure.servicebus.MessageBody.MessageBody
  package: com.microsoft.azure.servicebus
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.microsoft.azure.servicebus.MessageBody.fromValueData*
  name: fromValueData
  nameWithType: MessageBody.fromValueData
  fullName: com.microsoft.azure.servicebus.MessageBody.fromValueData
  package: com.microsoft.azure.servicebus
- uid: java.util.List<java.util.List<java.lang.Object>>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.MessageBody.fromSequenceData*
  name: fromSequenceData
  nameWithType: MessageBody.fromSequenceData
  fullName: com.microsoft.azure.servicebus.MessageBody.fromSequenceData
  package: com.microsoft.azure.servicebus
- uid: java.util.List<byte[]>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.MessageBody.fromBinaryData*
  name: fromBinaryData
  nameWithType: MessageBody.fromBinaryData
  fullName: com.microsoft.azure.servicebus.MessageBody.fromBinaryData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBody.getValueData*
  name: getValueData
  nameWithType: MessageBody.getValueData
  fullName: com.microsoft.azure.servicebus.MessageBody.getValueData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBody.getSequenceData*
  name: getSequenceData
  nameWithType: MessageBody.getSequenceData
  fullName: com.microsoft.azure.servicebus.MessageBody.getSequenceData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBody.getBinaryData*
  name: getBinaryData
  nameWithType: MessageBody.getBinaryData
  fullName: com.microsoft.azure.servicebus.MessageBody.getBinaryData
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus.MessageBodyType
  name: MessageBodyType
  nameWithType: MessageBodyType
  fullName: com.microsoft.azure.servicebus.MessageBodyType
- uid: com.microsoft.azure.servicebus.MessageBody.getBodyType*
  name: getBodyType
  nameWithType: MessageBody.getBodyType
  fullName: com.microsoft.azure.servicebus.MessageBody.getBodyType
  package: com.microsoft.azure.servicebus
- uid: java.io.Serializable
  name: Serializable
  nameWithType: Serializable
  fullName: java.io.Serializable
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: byte[]
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
