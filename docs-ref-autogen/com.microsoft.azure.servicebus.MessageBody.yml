### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.MessageBody"
fullName: "com.microsoft.azure.servicebus.MessageBody"
name: "MessageBody"
nameWithType: "MessageBody"
summary: "This class encapsulates the body of a message."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MessageBody implements Serializable"
methods:
- uid: "com.microsoft.azure.servicebus.MessageBody.fromBinaryData(java.util.List<byte[]>)"
  fullName: "com.microsoft.azure.servicebus.MessageBody.fromBinaryData(List<byte[]> binaryData)"
  name: "fromBinaryData(List<byte[]> binaryData)"
  nameWithType: "MessageBody.fromBinaryData(List<byte[]> binaryData)"
  summary: "Creates a message body from a list of Data sections.<wbr>Each Data section is a byte array."
  modifiers:
  - "static"
  parameters:
  - description: "a list of byte arrays."
    name: "binaryData"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
  syntax: "public static MessageBody fromBinaryData(List<byte[]> binaryData)"
  desc: "Creates a message body from a list of Data sections.Each Data section is a byte array. Please note that this version of the SDK supports only one Data section in a message. It means only a list of exactly one byte array in it is accepted as message body."
  returns:
    description: "MessageBody instance wrapping around the binary data."
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageBody?alt=com.microsoft.azure.servicebus.MessageBody&text=MessageBody\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageBody.fromSequenceData(java.util.List<java.util.List<java.lang.Object>>)"
  fullName: "com.microsoft.azure.servicebus.MessageBody.fromSequenceData(List<List<Object>> sequenceData)"
  name: "fromSequenceData(List<List<Object>> sequenceData)"
  nameWithType: "MessageBody.fromSequenceData(List<List<Object>> sequenceData)"
  summary: "Creates a message body from a list of AMQPSequence sections.<wbr>Each AMQPSequence section is in turn a list of objects."
  modifiers:
  - "static"
  parameters:
  - description: "a list of AMQPSequence sections. Each AMQPSequence section is in turn a list of objects. Every object in each list must of a type supported by AMQP."
    name: "sequenceData"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "public static MessageBody fromSequenceData(List<List<Object>> sequenceData)"
  desc: "Creates a message body from a list of AMQPSequence sections.Each AMQPSequence section is in turn a list of objects. Please note that this version of the SDK supports only one AMQPSequence section in a message. It means only a list of exactly one sequence in it is accepted as message body."
  returns:
    description: "MessageBody instance wrapping around the sequence data."
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageBody?alt=com.microsoft.azure.servicebus.MessageBody&text=MessageBody\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageBody.fromValueData(java.lang.Object)"
  fullName: "com.microsoft.azure.servicebus.MessageBody.fromValueData(Object value)"
  name: "fromValueData(Object value)"
  nameWithType: "MessageBody.fromValueData(Object value)"
  summary: "Creates message body of AMQPValue type."
  modifiers:
  - "static"
  parameters:
  - description: "AMQPValue content of the message. It must be of a type supported by AMQP."
    name: "value"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static MessageBody fromValueData(Object value)"
  desc: "Creates message body of AMQPValue type."
  returns:
    description: "MessageBody instance wrapping around the value data."
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageBody?alt=com.microsoft.azure.servicebus.MessageBody&text=MessageBody\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageBody.getBinaryData()"
  fullName: "com.microsoft.azure.servicebus.MessageBody.getBinaryData()"
  name: "getBinaryData()"
  nameWithType: "MessageBody.getBinaryData()"
  summary: "Returns the content of message body."
  syntax: "public List<byte[]> getBinaryData()"
  desc: "Returns the content of message body."
  returns:
    description: "message body as list of byte arrays only if the MessageBody is of Binary type. Returns null otherwise."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]&gt;"
- uid: "com.microsoft.azure.servicebus.MessageBody.getBodyType()"
  fullName: "com.microsoft.azure.servicebus.MessageBody.getBodyType()"
  name: "getBodyType()"
  nameWithType: "MessageBody.getBodyType()"
  summary: "Return the type of content in this message body."
  syntax: "public MessageBodyType getBodyType()"
  desc: "Return the type of content in this message body."
  returns:
    description: "type of message content"
    type: "<xref href=\"com.microsoft.azure.servicebus.MessageBodyType?alt=com.microsoft.azure.servicebus.MessageBodyType&text=MessageBodyType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.MessageBody.getSequenceData()"
  fullName: "com.microsoft.azure.servicebus.MessageBody.getSequenceData()"
  name: "getSequenceData()"
  nameWithType: "MessageBody.getSequenceData()"
  summary: "Returns the content of message body."
  syntax: "public List<List<Object>> getSequenceData()"
  desc: "Returns the content of message body."
  returns:
    description: "a list of AMQPSequence sections only if the MessageBody is of Sequence type. Returns null otherwise. Each AMQPSequence section is in turn a list of objects."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.servicebus.MessageBody.getValueData()"
  fullName: "com.microsoft.azure.servicebus.MessageBody.getValueData()"
  name: "getValueData()"
  nameWithType: "MessageBody.getValueData()"
  summary: "Returns the content of message body."
  syntax: "public Object getValueData()"
  desc: "Returns the content of message body."
  returns:
    description: "value of message body only if the MessageBody is of Value type. Returns null otherwise."
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class encapsulates the body of a message. Body types map to AMQP message body types. It has getters and setters for multiple body types. Client should test for body type before calling corresponding get method. Get methods not corresponding to the type of the body return null."
implements:
- "<xref href=\"java.io.Serializable?alt=java.io.Serializable&text=Serializable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
