### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider
  id: _actor_state_provider
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime._actor_state_provider.actorActivatedAsync(ActorId,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.containsStateAsync(ActorId,String,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.deleteReminderAsync(ActorId,String,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.enumerateStateNamesAsync(ActorId,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.getActorsAsync(int,ContinuationToken,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.initialize(ActorTypeInformation)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.loadRemindersAsync(CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.loadStateAsync(ActorId,String,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.removeActorAsync(ActorId,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  - microsoft.servicefabric.actors.runtime._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: ActorStateProvider
  nameWithType: ActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 17
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Represents the interface that an actor state provider needs to implement for actor runtime to communicate with it. </p>"
  syntax:
    content: public interface ActorStateProvider extends StateProviderReplica
  inheritedMembers:
  - microsoft.servicefabric.data._state_provider_replica.abort()
  - microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,CancellationToken,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  - microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)
  - microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
  - microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
  - microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  - microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
  - microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy,Duration,CancellationToken)
  - microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.actorActivatedAsync(ActorId,CancellationToken)
  id: actorActivatedAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.actorActivatedAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 37
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>This method is invoked as part of the activation process of the actor with the specified Id.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor that is activated. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous Actor activation notification processing. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.containsStateAsync(ActorId,String,CancellationToken)
  id: containsStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.containsStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 97
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Checks whether actor state provider contains an actor state with specified state name.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.deleteReminderAsync(ActorId,String,CancellationToken)
  id: deleteReminderAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.deleteReminderAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 178
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Deletes the specified actor reminder if it exists.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  id: deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.deleteRemindersAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 190
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Deletes the specified set of reminders</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
    parameters:
    - id: reminderNames
      type: 6110eba5microsoft.servicefabric.actors._actor_id89fe8e3d
      description: <p>The set of reminders to delete </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.enumerateStateNamesAsync(ActorId,CancellationToken)
  id: enumerateStateNamesAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.enumerateStateNamesAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 127
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Creates an enumerable of all the state names associated with specified actor.</p>\r\n<p>\r\n  <b>Remarks:</b>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider. </p>"
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to create enumerable. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.getActorsAsync(int,ContinuationToken,CancellationToken)
  id: getActorsAsync(int,ContinuationToken,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.getActorsAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 149
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Gets ActorIds from the State Provider.</p>\r\n<p>\r\n  <b>Remarks:</b> The </p>"
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
    parameters:
    - id: numItemsToReturn
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.initialize(ActorTypeInformation)
  id: initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: initialize(ActorTypeInformation actorTypeInformation)
  nameWithType: ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.initialize*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 25
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Initializes the actor state provider with type information of the actor type associated with it.</p>\r\n<p></p>"
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: <p>Type information of the actor class </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.loadRemindersAsync(CancellationToken)
  id: loadRemindersAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: loadRemindersAsync(CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.loadRemindersAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 202
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Loads all the reminders contained in the actor state provider.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors.runtime._actor_reminder_collectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.loadStateAsync(ActorId,String,CancellationToken)
  id: loadStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.loadStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 63
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Loads the actor state associated with the specified state name.</p>\r\n<p></p>"
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to load the state. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to load. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  id: reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.reminderCallbackCompletedAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 46
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Invoked when a reminder fires and finishes executing its callback <xref uid=\"microsoft.servicefabric.actors.runtime._remindable.receiveReminderAsync(String,byte [],Duration,Duration)\" data-throw-if-not-resolved=\"false\">Remindable#receiveReminderAsync</xref> successfully </p>"
  syntax:
    content: public CompletableFuture<?> reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor which own reminder </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime._actor_reminder
      description: <p>Actor reminder that completed successfully. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous reminder callback completed notification processing. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.removeActorAsync(ActorId,CancellationToken)
  id: removeActorAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.removeActorAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 109
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Removes all the existing states and reminders associated with specified actor atomically.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to remove state. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  id: saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.saveReminderAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 164
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime._actor_reminder
      description: <p>Actor reminder to save. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  id: saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._actor_state_provider
  href: microsoft.servicefabric.actors.runtime._actor_state_provider.yml
  langs:
  - java
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  nameWithType: ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  overload: microsoft.servicefabric.actors.runtime._actor_state_provider.saveStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorStateProvider.java
    startLine: 82
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Saves the specified set of actor state changes atomically.</p>\r\n<p>\r\n  <b>Remarks:</b> The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist. </p>"
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors.runtime._actor_state_changea08ddfce
      description: <p>Collection of state changes to save. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
references:
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.initialize*
  name: initialize
  nameWithType: ActorStateProvider.initialize
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.initialize
  package: microsoft.servicefabric.actors.runtime
- uid: 16409f84
  spec.java:
  - name: CompletableFuture<?>
    fullName: CompletableFuture<?>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.actorActivatedAsync*
  name: actorActivatedAsync
  nameWithType: ActorStateProvider.actorActivatedAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.actorActivatedAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.reminderCallbackCompletedAsync*
  name: reminderCallbackCompletedAsync
  nameWithType: ActorStateProvider.reminderCallbackCompletedAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.reminderCallbackCompletedAsync
  package: microsoft.servicefabric.actors.runtime
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 6d056e8b
  spec.java:
  - name: <T> CompletableFuture<T>
    fullName: <T> CompletableFuture<T>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.loadStateAsync*
  name: loadStateAsync
  nameWithType: ActorStateProvider.loadStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 5618da2dmicrosoft.servicefabric.actors.runtime._actor_state_changea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: microsoft.servicefabric.actors.runtime._actor_state_change
    name: ActorStateChange
    fullName: microsoft.servicefabric.actors.runtime.ActorStateChange
    href: microsoft.servicefabric.actors.runtime._actor_state_change.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.saveStateAsync*
  name: saveStateAsync
  nameWithType: ActorStateProvider.saveStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.containsStateAsync*
  name: containsStateAsync
  nameWithType: ActorStateProvider.containsStateAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.containsStateAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.removeActorAsync*
  name: removeActorAsync
  nameWithType: ActorStateProvider.removeActorAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.removeActorAsync
  package: microsoft.servicefabric.actors.runtime
- uid: d20512af
  spec.java:
  - name: CompletableFuture<List<String>>
    fullName: CompletableFuture<List<String>>
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.enumerateStateNamesAsync*
  name: enumerateStateNamesAsync
  nameWithType: ActorStateProvider.enumerateStateNamesAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.enumerateStateNamesAsync
  package: microsoft.servicefabric.actors.runtime
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.actors._paged_result
    name: PagedResult
    fullName: microsoft.servicefabric.actors.PagedResult
    href: microsoft.servicefabric.actors._paged_result.yml
  - name: <
    fullName: <
  - uid: microsoft.servicefabric.actors._actor_id
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors._actor_id.yml
  - name: '>>'
    fullName: '>>'
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.getActorsAsync*
  name: getActorsAsync
  nameWithType: ActorStateProvider.getActorsAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.getActorsAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.saveReminderAsync*
  name: saveReminderAsync
  nameWithType: ActorStateProvider.saveReminderAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.saveReminderAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.deleteReminderAsync*
  name: deleteReminderAsync
  nameWithType: ActorStateProvider.deleteReminderAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteReminderAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 6110eba5microsoft.servicefabric.actors._actor_id89fe8e3d
  spec.java:
  - name: Map<
    fullName: Map<
  - uid: microsoft.servicefabric.actors._actor_id
    name: ActorId
    fullName: microsoft.servicefabric.actors.ActorId
    href: microsoft.servicefabric.actors._actor_id.yml
  - name: ', Collection<String>>'
    fullName: ', Collection<String>>'
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.deleteRemindersAsync*
  name: deleteRemindersAsync
  nameWithType: ActorStateProvider.deleteRemindersAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.deleteRemindersAsync
  package: microsoft.servicefabric.actors.runtime
- uid: 9cdf14d0microsoft.servicefabric.actors.runtime._actor_reminder_collectiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: microsoft.servicefabric.actors.runtime._actor_reminder_collection
    name: ActorReminderCollection
    fullName: microsoft.servicefabric.actors.runtime.ActorReminderCollection
    href: microsoft.servicefabric.actors.runtime._actor_reminder_collection.yml
  - name: '>'
    fullName: '>'
- uid: microsoft.servicefabric.actors.runtime._actor_state_provider.loadRemindersAsync*
  name: loadRemindersAsync
  nameWithType: ActorStateProvider.loadRemindersAsync
  fullName: microsoft.servicefabric.actors.runtime.ActorStateProvider.loadRemindersAsync
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.data._state_provider_replica.abort()
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: abort()
  nameWithType: StateProviderReplica.abort()
  fullName: microsoft.servicefabric.data.StateProviderReplica.abort()
  type: Method
  summary: >-
    <p>Forcefully abort the state provider replica. </p>

    <p>

      <b>Remarks:</b>This generally occurs when a permanent fault is detected on the node, or when Service Fabric cannot reliably manage the replica's lifecycle due to internal failures. </p>
  syntax:
    content: public void abort()
- uid: microsoft.servicefabric.data._state_provider_replica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: >-
    <p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>

    <p>

      <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.backupAsync(BackupOption,Duration,CancellationToken,BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  nameWithType: StateProviderReplica.backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  fullName: microsoft.servicefabric.data.StateProviderReplica.backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
  type: Method
  summary: >-
    <p>Performs a full backup of all reliable state managed by this ReliableStateManager.</p>

    <p>

      <b>Remarks:</b> A FULL backup will be performed with a one-hour timeout. Boolean returned by the backupCallback indicate whether the service was able to successfully move the backup folder to an external location. If false is returned, BackupAsync throws UnsupportedOperationException with the relevant message indicating backupCallback returned false. Also, backup will be marked as unsuccessful. </p>
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupOption option, Duration timeout, CancellationToken cancellationToken, BiFunction<BackupInfo, CancellationToken, CompletableFuture<Boolean>> backupCallback)
    parameters:
    - id: option
      type: microsoft.servicefabric.data._backup_option
      description: <p>The type of backup to perform. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The token to monitor for cancellation requests. </p>
    - id: backupCallback
      type: 8ead6242microsoft.servicefabric.data._backup_infob33c76fcsystem.fabric._cancellation_token774bd4f0
      description: <p>Callback to be called when the backup folder has been created locally and is ready to be moved out of the node </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.changeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Notify the state provider replica that its role is changing, for example to Primary or Secondary.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> changeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric._replica_role
      description: <p>The new replica role, such as primary or secondary. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous change role operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.closeAsync(CancellationToken)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: closeAsync(CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.closeAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.closeAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Gracefully close the state provider replica.</p>

    <p>

      <b>Remarks:</b>This generally occurs when the replica's code is being upgrade, the replica is being moved due to load balancing, or a transient fault is detected. </p>
  syntax:
    content: public CompletableFuture<?> closeAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous close operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.initialize(StatefulServiceInitializationParameters)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: initialize(StatefulServiceInitializationParameters initializationParameters)
  nameWithType: StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  fullName: microsoft.servicefabric.data.StateProviderReplica.initialize(StatefulServiceInitializationParameters initializationParameters)
  type: Method
  summary: >-
    <p>Initialize the state provider replica using the service initialization information.</p>

    <p>

      <b>Remarks:</b>No complex processing should be done during Initialize. Expensive or long-running initialization should be done in OpenAsync. </p>
  syntax:
    content: public void initialize(StatefulServiceInitializationParameters initializationParameters)
    parameters:
    - id: initializationParameters
      type: system.fabric._stateful_service_initialization_parameters
      description: <p>Service initialization information such as service name, partition id, replica id, and code package information. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.openAsync(ReplicaOpenMode,StatefulServicePartition,CancellationToken)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Open the state provider replica for use.</p>

    <p>

      <b>Remarks:</b>Extended state provider initialization tasks can be started at this time. </p>
  syntax:
    content: public CompletableFuture<Replicator> openAsync(ReplicaOpenMode openMode, StatefulServicePartition partition, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric._replica_open_mode
      description: <p>Indicates whether this is a new or existing replica. </p>
    - id: partition
      type: system.fabric._stateful_service_partition
      description: <p>The partition this replica belongs to. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0system.fabric._replicatora08ddfce
      description: <p>Task that represents the asynchronous open operation. The result contains the replicator responsible for replicating state between other state provider replicas in the partition. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: restoreAsync(String backupFolderPath)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath)
  fullName: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
  type: Method
  summary: >-
    <p>Restore a backup taken.</p>

    <p>

      <b>Remarks:</b>A safe restore will be performed, meaning the restore will only be completed if the data to restore is ahead of state of the current replica. </p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.restoreAsync(String,RestorePolicy,Duration,CancellationToken)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Restore a backup taken</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: backupFolderPath
      type: "26831127"
      description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    - id: restorePolicy
      type: microsoft.servicefabric.data._restore_policy
      description: <p>The restore policy. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous restore operation. </p>
- uid: microsoft.servicefabric.data._state_provider_replica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>>)
  parent: microsoft.servicefabric.data._state_provider_replica
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  nameWithType: StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  fullName: microsoft.servicefabric.data.StateProviderReplica.setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
  type: Method
  summary: >-
    <p>Function called during suspected data-loss</p>

    <p></p>
  syntax:
    content: public void setOnDataLossCallback(Function<CancellationToken, CompletableFuture<Boolean>> onDataLossAsync)
    parameters:
    - id: onDataLossAsync
      type: 432ffe41system.fabric._cancellation_token774bd4f0
      description: <p>TODO. Function called as part of suspected data loss processing. Function takes in CancellationToken and returns a CompletableFuture that represents the asynchronous processing of the event. Returning true, indicates that the replica's state has been restored. False indicates that the replica's state has not been changed. </p>
- uid: microsoft.servicefabric.data._state_provider_replica
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data._state_provider_replica.yml
  name: StateProviderReplica
  nameWithType: StateProviderReplica
  fullName: microsoft.servicefabric.data.StateProviderReplica
  type: Interface
  summary: <p>Defines methods a reliable state provider replica must implement for Service Fabric to interact with it. </p>
  syntax:
    content: public interface StateProviderReplica
- uid: microsoft.servicefabric.actors.runtime._null_actor_state_provider
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: ReliableCollectionsActorStateProvider
  nameWithType: ReliableCollectionsActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider
  type: Class
  syntax:
    content: public class ReliableCollectionsActorStateProvider
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: VolatileActorStateProvider
  nameWithType: VolatileActorStateProvider
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider
  type: Class
  summary: <p>ActorStateProvider implementation for Volatile persistence i.e Actor state is kept in-memory only. </p>
  syntax:
    content: public class VolatileActorStateProvider
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: initialize(ActorTypeInformation actorTypeInformation)
  nameWithType: VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  type: Method
  summary: >-
    <p>Initializes the actor state provider with type information of the actor type associated with it.</p>

    <p></p>
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: >-
        <p>

          <xref uid="microsoft.servicefabric.actors.runtime._actor_type_information" data-throw-if-not-resolved="false">ActorTypeInformation</xref> Type information of the actor class. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.initialize(ActorTypeInformation)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: initialize(ActorTypeInformation actorTypeInformation)
  nameWithType: ReliableCollectionsActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.initialize(ActorTypeInformation actorTypeInformation)
  type: Method
  summary: >-
    <p>Initializes the actor state provider with type information of the actor type associated with it.</p>

    <p></p>
  syntax:
    content: public void initialize(ActorTypeInformation actorTypeInformation)
    parameters:
    - id: actorTypeInformation
      type: microsoft.servicefabric.actors.runtime._actor_type_information
      description: <p>Type information of the actor class </p>
- uid: microsoft.servicefabric.actors.runtime._actor_type_information
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_type_information.yml
  name: ActorTypeInformation
  nameWithType: ActorTypeInformation
  fullName: microsoft.servicefabric.actors.runtime.ActorTypeInformation
  type: Class
  summary: <p>Contains information about the type implementing an actor. </p>
  syntax:
    content: public class ActorTypeInformation
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.actorActivatedAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>This method is invoked as part of the activation process of the actor with the specified Id.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>Id of the actor that is activated. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous Actor activation notification processing. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.actorActivatedAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>This method is invoked as part of the activation process of the actor with the specified Id.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> actorActivatedAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor that is activated. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous Actor activation notification processing. </p>
- uid: microsoft.servicefabric.actors._actor_id
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_id.yml
  name: ActorId
  nameWithType: ActorId
  fullName: microsoft.servicefabric.actors.ActorId
  type: Class
  summary: <p>ActorId represents identity of an actor within an actor service. The actors can be identified by <xref uid="" data-throw-if-not-resolved="false">java.lang.String</xref>, <xref uid="" data-throw-if-not-resolved="false">java.util.UUID</xref> or long. </p>
  syntax:
    content: public class ActorId
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A CancellationToken is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref uid="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource</xref> object, which manages cancellation tokens retrieved from its <xref uid="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#getToken()</xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref uid="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false">system.fabric.CancellationTokenSource#cancel()</xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  type: Method
  summary: <p>Invoked when a reminder fires and finishes executing its callback <xref uid="microsoft.servicefabric.actors.runtime._remindable.receiveReminderAsync(String,byte [],Duration,Duration)" data-throw-if-not-resolved="false">Remindable#receiveReminderAsync</xref> successfully </p>
  syntax:
    content: public CompletableFuture<?> reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor which own reminder </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime._actor_reminder
      description: <p>Actor reminder that completed successfully. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous reminder callback completed notification processing. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.reminderCallbackCompletedAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  type: Method
  summary: <p>Invoked when a reminder fires and finishes executing its callback <xref uid="microsoft.servicefabric.actors.runtime._remindable.receiveReminderAsync(String,byte [],Duration,Duration)" data-throw-if-not-resolved="false">Remindable#receiveReminderAsync</xref> successfully </p>
  syntax:
    content: public CompletableFuture<?> reminderCallbackCompletedAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor which own reminder </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime._actor_reminder
      description: <p>Actor reminder that completed successfully. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous reminder callback completed notification processing. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_reminder
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_reminder.yml
  name: ActorReminder
  nameWithType: ActorReminder
  fullName: microsoft.servicefabric.actors.runtime.ActorReminder
  type: Interface
  summary: <p>Encapsulates Reminder set on an Actor </p>
  syntax:
    content: public interface ActorReminder
- uid: microsoft.servicefabric.actors.runtime._remindable.receiveReminderAsync(String,byte [],Duration,Duration)
  parent: microsoft.servicefabric.actors.runtime._remindable
  href: microsoft.servicefabric.actors.runtime._remindable.yml
  name: receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  nameWithType: Remindable.receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  fullName: microsoft.servicefabric.actors.runtime.Remindable.receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
  type: Method
  summary: >-
    <p>Reminder call back invoked when an actor reminder is triggered.</p>

    <p>

      <b>Remarks:</b> When a reminder is triggered, Actors runtime will invoke receiveReminderAsync method on the Actor. An actor can register multiple reminders and the ReceiveReminderAsync method is invoked any time any of those reminders is triggered. The actor can use the reminder name that is passed in to the receiveReminderAsync method to figure out which reminder was triggered. The Actors runtime saves the actor state when the receiveReminderAsync call completes. If an error occurs in saving the state, that actor object will be deactivated and a new instance will be activated, to specify that the state need not be saved upon completion of the reminder. </p>
  syntax:
    content: public CompletableFuture<?> receiveReminderAsync(String reminderName, byte[] context, Duration timeSpan, Duration period)
    parameters:
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder. </p>
    - id: context
      type: ccd9418d
      description: <p>Context associated with this reminder was passed to Actors runtime when reminder was created. </p>
    - id: timeSpan
      type: e02a2de0
      description: <p>Time when reminder with name reminderName is due </p>
    - id: period
      type: e02a2de0
      description: <p>The time interval between triggering of reminder with name reminderName. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous operation performed by this callback. </p>
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.loadStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Loads the actor state associated with the specified state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>Id of the actor that is activated. </p>
    - id: stateName
      type: "26831127"
      description: <p>StateName. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.loadStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Loads the actor state associated with the specified state name.</p>

    <p></p>
  syntax:
    content: public <T> CompletableFuture<T> loadStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to load the state. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to load. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 6d056e8b
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter contains value of actor state associated with given state name. </p>
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Saves the specified set of actor state changes atomically.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors.runtime._actor_state_changea08ddfce
      description: <p>Collection of state changes to save. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.saveStateAsync(ActorId,List<ActorStateChange>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Saves the specified set of actor state changes atomically.</p>

    <p>

      <b>Remarks:</b> The collection of state changes should contain only one item for a given state name. The save operation will fail on trying to add an actor state which already exists or update/remove an actor state which does not exist. </p>
  syntax:
    content: public CompletableFuture<?> saveStateAsync(ActorId actorId, List<ActorStateChange> stateChanges, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the state changes. </p>
    - id: stateChanges
      type: 5618da2dmicrosoft.servicefabric.actors.runtime._actor_state_changea08ddfce
      description: <p>Collection of state changes to save. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_state_change
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_state_change.yml
  name: ActorStateChange
  nameWithType: ActorStateChange
  fullName: microsoft.servicefabric.actors.runtime.ActorStateChange
  type: Class
  summary: <p>Represents change to an actor state with a given state name. </p>
  syntax:
    content: public class ActorStateChange
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.containsStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Checks whether actor state provider contains an actor state with specified state name.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.containsStateAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Checks whether actor state provider contains an actor state with specified state name.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Boolean> containsStateAsync(ActorId actorId, String stateName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to check state existence. </p>
    - id: stateName
      type: "26831127"
      description: <p>Name of the actor state to check for existence. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A task that represents the asynchronous check operation. The value of TResult parameter is true if state with specified name exists otherwise false. </p>
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.removeActorAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Removes all the existing states and reminders associated with specified actor atomically.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to remove state. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.removeActorAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Removes all the existing states and reminders associated with specified actor atomically.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> removeActorAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to remove state. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous remove operation. </p>
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.enumerateStateNamesAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Creates an enumerable of all the state names associated with specified actor.</p>

    <p>

      <b>Remarks:</b>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider. </p>
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to create enumerable. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.enumerateStateNamesAsync(ActorId,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Creates an enumerable of all the state names associated with specified actor.</p>

    <p>

      <b>Remarks:</b>The enumerator returned from actor state provider is safe to use concurrently with reads and writes to the state provider. It represents a snapshot consistent view of the state provider. </p>
  syntax:
    content: public CompletableFuture<List<String>> enumerateStateNamesAsync(ActorId actorId, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to create enumerable. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: d20512af
      description: <p>A task that represents the asynchronous enumeration operation. The value of TResult parameter is an enumerable of all state names associated with specified actor. </p>
- uid: microsoft.servicefabric.actors._paged_result
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._paged_result.yml
  name: PagedResult<T>
  nameWithType: PagedResult<T>
  fullName: microsoft.servicefabric.actors.PagedResult<T>
  type: Class
  summary: >-
    <p>Represents the result of actor query calls.</p>

    <p></p>
  syntax:
    content: public class PagedResult<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>Type of the items this query result contains. </p>
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.getActorsAsync(int,ContinuationToken,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: getActorsAsync(int itemsCount, ContinuationToken continuationToken, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.getActorsAsync(int itemsCount, ContinuationToken continuationToken, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getActorsAsync(int itemsCount, ContinuationToken continuationToken, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Gets ActorIds from the State Provider.</p>

    <p>

      <b>Remarks:</b> The </p>
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int itemsCount, ContinuationToken continuationToken, CancellationToken cancellationToken)
    parameters:
    - id: itemsCount
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.getActorsAsync(int,ContinuationToken,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Gets ActorIds from the State Provider.</p>

    <p>

      <b>Remarks:</b> The </p>
  syntax:
    content: public CompletableFuture<PagedResult<ActorId>> getActorsAsync(int numItemsToReturn, ContinuationToken continuationToken, CancellationToken cancellationToken)
    parameters:
    - id: numItemsToReturn
      type: f75371fa
      description: <p>Number of items requested to be returned. </p>
    - id: continuationToken
      type: microsoft.servicefabric.actors._continuation_token
      description: <p>A continuation token to start querying the results from. A null value of continuation token means start returning values form the beginning. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors._paged_result78504a52microsoft.servicefabric.actors._actor_ide7daa122
      description: <p>A task that represents the asynchronous operation of call to server. </p>
- uid: microsoft.servicefabric.actors._continuation_token
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._continuation_token.yml
  name: ContinuationToken
  nameWithType: ContinuationToken
  fullName: microsoft.servicefabric.actors.ContinuationToken
  type: Class
  summary: >-
    <p>Represents a continuation token for query operations. </p>

    <p>

      <b>Remarks:</b>A method that may return a partial set of results via a <xref uid="microsoft.servicefabric.actors._paged_result" data-throw-if-not-resolved="false">PagedResult</xref> object also returns a continuation token in the object, which can be used in a subsequent call to return the next set of available results. </p>
  syntax:
    content: public class ContinuationToken
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of actor for which to save reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime._actor_reminder
      description: <p>Actor reminder to save. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.saveReminderAsync(ActorId,ActorReminder,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Saves the specified actor reminder. If an actor reminder with given name does not exist, it adds the actor reminder otherwise existing actor reminder with same name is updated.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> saveReminderAsync(ActorId actorId, ActorReminder reminder, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to save the reminder. </p>
    - id: reminder
      type: microsoft.servicefabric.actors.runtime._actor_reminder
      description: <p>Actor reminder to save. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous save operation. </p>
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.deleteReminderAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Deletes the specified actor reminder if it exists.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.deleteReminderAsync(ActorId,String,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Deletes the specified actor reminder if it exists.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> deleteReminderAsync(ActorId actorId, String reminderName, CancellationToken cancellationToken)
    parameters:
    - id: actorId
      type: microsoft.servicefabric.actors._actor_id
      description: <p>ID of the actor for which to delete the reminder. </p>
    - id: reminderName
      type: "26831127"
      description: <p>Name of the reminder to delete. </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Deletes the specified set of reminders</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
    parameters:
    - id: reminderNames
      type: 6110eba5microsoft.servicefabric.actors._actor_id89fe8e3d
      description: <p>The set of reminders to delete </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.deleteRemindersAsync(Map<ActorId, Collection<String>>,CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Deletes the specified set of reminders</p>

    <p></p>
  syntax:
    content: public CompletableFuture<?> deleteRemindersAsync(Map<ActorId, Collection<String>> reminderNames, CancellationToken cancellationToken)
    parameters:
    - id: reminderNames
      type: 6110eba5microsoft.servicefabric.actors._actor_id89fe8e3d
      description: <p>The set of reminders to delete </p>
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A task that represents the asynchronous delete operation. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_reminder_collection
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_reminder_collection.yml
  name: ActorReminderCollection
  nameWithType: ActorReminderCollection
  fullName: microsoft.servicefabric.actors.runtime.ActorReminderCollection
  type: Interface
  summary: <p>Captures ActorReminderState for Actors </p>
  syntax:
    content: public interface ActorReminderCollection
- uid: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.loadRemindersAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._volatile_actor_state_provider.yml
  name: loadRemindersAsync(CancellationToken cancellationToken)
  nameWithType: VolatileActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Loads all the reminders contained in the actor state provider.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors.runtime._actor_reminder_collectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
- uid: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.loadRemindersAsync(CancellationToken)
  parent: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider
  href: microsoft.servicefabric.actors.runtime._reliable_collections_actor_state_provider.yml
  name: loadRemindersAsync(CancellationToken cancellationToken)
  nameWithType: ReliableCollectionsActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.actors.runtime.ReliableCollectionsActorStateProvider.loadRemindersAsync(CancellationToken cancellationToken)
  type: Method
  summary: >-
    <p>Loads all the reminders contained in the actor state provider.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<ActorReminderCollection> loadRemindersAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
      description: >-
        <p>

          <xref uid="system.fabric._cancellation_token" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.actors.runtime._actor_reminder_collectiona08ddfce
      description: <p>A task that represents the asynchronous load operation. The value of TResult parameter is a collection of all actor reminders contained in the actor state provider. </p>
