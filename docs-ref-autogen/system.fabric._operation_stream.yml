items:
- uid: system.fabric._operation_stream
  id: _operation_stream
  parent: system.fabric
  children:
  - system.fabric._operation_stream.getOperationAsync(CancellationToken)
  href: system.fabric._operation_stream.yml
  langs:
  - java
  name: OperationStream
  nameWithType: OperationStream
  fullName: system.fabric.OperationStream
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/OperationStream.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/OperationStream.java
    startLine: 11
  package: system.fabric
  syntax:
    content: public interface OperationStream
- uid: system.fabric._operation_stream.getOperationAsync(CancellationToken)
  id: getOperationAsync(CancellationToken)
  parent: system.fabric._operation_stream
  href: system.fabric._operation_stream.yml
  langs:
  - java
  name: getOperationAsync(CancellationToken cancellationToken)
  nameWithType: OperationStream.getOperationAsync(CancellationToken cancellationToken)
  fullName: CompletableFuture<Operation> system.fabric.OperationStream.getOperationAsync(CancellationToken cancellationToken)
  overload: system.fabric._operation_stream.getOperationAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/OperationStream.java
    startLine: 13
  package: system.fabric
  syntax:
    content: public CompletableFuture<Operation> getOperationAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric._cancellation_token
    return:
      type: 9cdf14d0system.fabric._operationa08ddfce
references:
- uid: 9cdf14d0system.fabric._operationa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric._operation
    name: Operation
    fullName: system.fabric.Operation
    href: system.fabric._operation.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._operation_stream.getOperationAsync*
  name: getOperationAsync
  nameWithType: OperationStream.getOperationAsync
  fullName: CompletableFuture<Operation> system.fabric.OperationStream.getOperationAsync
  package: system.fabric
- uid: system.fabric._operation_stream2
  parent: system.fabric
  href: system.fabric._operation_stream2.yml
  name: OperationStream2
  nameWithType: OperationStream2
  fullName: system.fabric.OperationStream2
  type: Interface
  syntax:
    content: public interface OperationStream2
- uid: system.fabric._operation
  parent: system.fabric
  href: system.fabric._operation.yml
  name: Operation
  nameWithType: Operation
  fullName: system.fabric.Operation
  type: Interface
  summary: >-
    <p>

      <bold>Remarks:</bold>

      <ref refid="" kindref="compound">system.fabric.Operation</ref> is the base interface that describes state changes that are delivered to a Secondary replica. They contain the <ref refid="" kindref="compound">system.fabric.StateReplicator#replicateAsync(OperationData, SequenceNumber, system.fabric.CancellationToken)</ref> and the sequence number and other identifying information. </p>
  syntax:
    content: public interface Operation
- uid: system.fabric._cancellation_token
  parent: system.fabric
  href: system.fabric._cancellation_token.yml
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: system.fabric.CancellationToken
  type: Class
  summary: <p>A <xref href="system.fabric._cancellation_token" data-throw-if-not-resolved="false"></xref> is used to propagate notification that operations should be canceled. You create a cancellation token by instantiating a <xref href="system.fabric._cancellation_token_source" data-throw-if-not-resolved="false"></xref> object, which manages cancellation tokens retrieved from its <xref href="system.fabric._cancellation_token_source.getToken()" data-throw-if-not-resolved="false"></xref> method. You then pass the cancellation token to any number of operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <xref href="system.fabric._cancellation_token_source.cancel()" data-throw-if-not-resolved="false"></xref>, the cancelled property on the cancellation token is set to true. The objects that receive the notification can respond in whatever manner is appropriate. </p>
  syntax:
    content: public class CancellationToken
- uid: system.fabric.exception._fabric_exception
  parent: system.fabric.exception
  href: system.fabric.exception._fabric_exception.yml
  name: FabricException
  nameWithType: FabricException
  fullName: system.fabric.exception.FabricException
  type: Class
  syntax:
    content: public class FabricException
