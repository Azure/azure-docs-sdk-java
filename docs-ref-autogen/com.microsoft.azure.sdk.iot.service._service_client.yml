### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service._service_client
  id: _service_client
  parent: com.microsoft.azure.sdk.iot.service
  children:
  - com.microsoft.azure.sdk.iot.service._service_client.close()
  - com.microsoft.azure.sdk.iot.service._service_client.closeAsync()
  - com.microsoft.azure.sdk.iot.service._service_client.createFromConnectionString(String,IotHubServiceClientProtocol)
  - com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver()
  - com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver(String)
  - com.microsoft.azure.sdk.iot.service._service_client.getFileUploadNotificationReceiver()
  - com.microsoft.azure.sdk.iot.service._service_client.iotHubConnectionString
  - com.microsoft.azure.sdk.iot.service._service_client.open()
  - com.microsoft.azure.sdk.iot.service._service_client.openAsync()
  - com.microsoft.azure.sdk.iot.service._service_client.send(String,Message)
  - com.microsoft.azure.sdk.iot.service._service_client.sendAsync(String,Message)
  - com.microsoft.azure.sdk.iot.service._service_client.ServiceClient(IotHubConnectionString,IotHubServiceClientProtocol)
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: ServiceClient
  nameWithType: ServiceClient
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient
  type: Class
  source:
    remote: &o0
      path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 19
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Extend the <xref uid="com.microsoft.azure.sdk.iot.service._service_client" data-throw-if-not-resolved="false">ServiceClient</xref> class and provide AMPQ specific implementation. </p>
  syntax: &o1
    content: public class ServiceClient
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.sdk.iot.service._service_client.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: close()
  nameWithType: ServiceClient.close()
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.close()
  overload: com.microsoft.azure.sdk.iot.service._service_client.close*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 100
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Close AMQP sender </p>
  syntax: &o3
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the AmqpSender object is not initialized </p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.closeAsync()
  id: closeAsync()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: closeAsync()
  nameWithType: ServiceClient.closeAsync()
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync()
  overload: com.microsoft.azure.sdk.iot.service._service_client.closeAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 157
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Provide asynchronous access to <xref uid="com.microsoft.azure.sdk.iot.service._service_client.close()" data-throw-if-not-resolved="false">close()</xref></p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.createFromConnectionString(String,IotHubServiceClientProtocol)
  id: createFromConnectionString(String,IotHubServiceClientProtocol)
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: static ServiceClient com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service._service_client.createFromConnectionString*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 37
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Create <xref uid="com.microsoft.azure.sdk.iot.service._service_client" data-throw-if-not-resolved="false">ServiceClient</xref> from the specified connection string </p>
  syntax:
    content: public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: connectionString
      type: "26831127"
      description: <p>The connection string for the IotHub </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
      description: <p>protocol to use </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._service_client
      description: <p>The created <xref uid="com.microsoft.azure.sdk.iot.service._service_client" data-throw-if-not-resolved="false">ServiceClient</xref> object </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the object creation failed </p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver()
  id: getFeedbackReceiver()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: getFeedbackReceiver()
  nameWithType: ServiceClient.getFeedbackReceiver()
  fullName: FeedbackReceiver com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver()
  overload: com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 218
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Get <xref uid="com.microsoft.azure.sdk.iot.service._feedback_receiver" data-throw-if-not-resolved="false">FeedbackReceiver</xref> object.</p>

    <p></p>
  syntax: &o5
    content: public FeedbackReceiver getFeedbackReceiver()
    return:
      type: com.microsoft.azure.sdk.iot.service._feedback_receiver
      description: <p>The instance of the <xref uid="com.microsoft.azure.sdk.iot.service._feedback_receiver" data-throw-if-not-resolved="false">FeedbackReceiver</xref></p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver(String)
  id: getFeedbackReceiver(String)
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: getFeedbackReceiver(String deviceId)
  nameWithType: ServiceClient.getFeedbackReceiver(String deviceId)
  fullName: FeedbackReceiver com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver(String deviceId)
  overload: com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 204
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Get <xref uid="com.microsoft.azure.sdk.iot.service._feedback_receiver" data-throw-if-not-resolved="false">FeedbackReceiver</xref> object.This API has been deprecated. Use new API without deviceId as an input parameter. <xrefsect id="deprecated_1_deprecated000011"><xreftitle>Deprecated</xreftitle><xrefdescription><p>As of release 1.1.15, replaced by <xref uid="com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver()" data-throw-if-not-resolved="false">getFeedbackReceiver()</xref></p></xrefdescription></xrefsect></p>
  syntax:
    content: public FeedbackReceiver getFeedbackReceiver(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device identifier for the target device </p>
    return:
      type: com.microsoft.azure.sdk.iot.service._feedback_receiver
      description: <p>The instance of the <xref uid="com.microsoft.azure.sdk.iot.service._feedback_receiver" data-throw-if-not-resolved="false">FeedbackReceiver</xref></p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.getFileUploadNotificationReceiver()
  id: getFileUploadNotificationReceiver()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: getFileUploadNotificationReceiver()
  nameWithType: ServiceClient.getFileUploadNotificationReceiver()
  fullName: FileUploadNotificationReceiver com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver()
  overload: com.microsoft.azure.sdk.iot.service._service_client.getFileUploadNotificationReceiver*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 230
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Get <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver" data-throw-if-not-resolved="false">FileUploadNotificationReceiver</xref> object.</p>

    <p></p>
  syntax:
    content: public FileUploadNotificationReceiver getFileUploadNotificationReceiver()
    return:
      type: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
      description: <p>The instance of the <xref uid="com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver" data-throw-if-not-resolved="false">FileUploadNotificationReceiver</xref></p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.iotHubConnectionString
  id: iotHubConnectionString
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: iotHubConnectionString
  nameWithType: ServiceClient.iotHubConnectionString
  fullName: IotHubConnectionString com.microsoft.azure.sdk.iot.service.ServiceClient.iotHubConnectionString
  type: Field
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 27
  package: com.microsoft.azure.sdk.iot.service
  syntax:
    content: protected IotHubConnectionString iotHubConnectionString
    return:
      type: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string
- uid: com.microsoft.azure.sdk.iot.service._service_client.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: open()
  nameWithType: ServiceClient.open()
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.open()
  overload: com.microsoft.azure.sdk.iot.service._service_client.open*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 85
  package: com.microsoft.azure.sdk.iot.service
  summary: <p>Open AMQP sender </p>
  syntax: &o2
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the AmqpSender object is not initialized </p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.openAsync()
  id: openAsync()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: openAsync()
  nameWithType: ServiceClient.openAsync()
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync()
  overload: com.microsoft.azure.sdk.iot.service._service_client.openAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 135
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Provide asynchronous access to <xref uid="com.microsoft.azure.sdk.iot.service._service_client.open()" data-throw-if-not-resolved="false">open()</xref></p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> openAsync()
    return:
      type: db03ee24
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.send(String,Message)
  id: send(String,Message)
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: send(String deviceId, Message message)
  nameWithType: ServiceClient.send(String deviceId, Message message)
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.send(String deviceId, Message message)
  overload: com.microsoft.azure.sdk.iot.service._service_client.send*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 119
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Send a one-way message to the specified device</p>

    <p></p>
  syntax: &o4
    content: public void send(String deviceId, Message message)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device identifier for the target device </p>
    - id: message
      type: com.microsoft.azure.sdk.iot.service._message
      description: <p>The message for the device </p>
  exceptions:
  - type: cbf33bbe
    description: <p>This exception is thrown if the AmqpSender object is not initialized </p>
  - type: 0d494ee6
    description: <p>This exception is thrown if IotHub rejects the message for any reason </p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.sendAsync(String,Message)
  id: sendAsync(String,Message)
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: sendAsync(String deviceId, Message message)
  nameWithType: ServiceClient.sendAsync(String deviceId, Message message)
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync(String deviceId, Message message)
  overload: com.microsoft.azure.sdk.iot.service._service_client.sendAsync*
  type: Method
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 181
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Provide asynchronous access to <xref uid="com.microsoft.azure.sdk.iot.service._service_client.send(String,Message)" data-throw-if-not-resolved="false">send()</xref></p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> sendAsync(String deviceId, Message message)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>The device identifier for the target device </p>
    - id: message
      type: com.microsoft.azure.sdk.iot.service._message
      description: <p>The message for the device </p>
    return:
      type: db03ee24
      description: <p>The future object for the requested operation </p>
- uid: com.microsoft.azure.sdk.iot.service._service_client.ServiceClient(IotHubConnectionString,IotHubServiceClientProtocol)
  id: ServiceClient(IotHubConnectionString,IotHubServiceClientProtocol)
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  langs:
  - java
  name: ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  nameWithType: ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
  overload: com.microsoft.azure.sdk.iot.service._service_client.ServiceClient*
  type: Constructor
  source:
    remote: *o0
    path: service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java
    startLine: 59
  package: com.microsoft.azure.sdk.iot.service
  summary: >-
    <p>Initialize AMQP sender using given connection string</p>

    <p></p>
  syntax:
    content: protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol)
    parameters:
    - id: iotHubConnectionString
      type: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string
      description: <p>The ConnectionString object for the IotHub </p>
    - id: iotHubServiceClientProtocol
      type: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
      description: <p>protocol to use </p>
references:
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.service._service_client.createFromConnectionString*
  name: createFromConnectionString
  nameWithType: ServiceClient.createFromConnectionString
  fullName: static ServiceClient com.microsoft.azure.sdk.iot.service.ServiceClient.createFromConnectionString
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._service_client.ServiceClient*
  name: ServiceClient
  nameWithType: ServiceClient.ServiceClient
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient.ServiceClient
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._service_client.open*
  name: open
  nameWithType: ServiceClient.open
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.open
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._service_client.close*
  name: close
  nameWithType: ServiceClient.close
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.close
  package: com.microsoft.azure.sdk.iot.service
- uid: 0d494ee6
  spec.java:
  - name: IotHubException
    fullName: IotHubException
- uid: com.microsoft.azure.sdk.iot.service._service_client.send*
  name: send
  nameWithType: ServiceClient.send
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.send
  package: com.microsoft.azure.sdk.iot.service
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.sdk.iot.service._service_client.openAsync*
  name: openAsync
  nameWithType: ServiceClient.openAsync
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.ServiceClient.openAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._service_client.closeAsync*
  name: closeAsync
  nameWithType: ServiceClient.closeAsync
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.ServiceClient.closeAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._service_client.sendAsync*
  name: sendAsync
  nameWithType: ServiceClient.sendAsync
  fullName: CompletableFuture<Void> com.microsoft.azure.sdk.iot.service.ServiceClient.sendAsync
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver*
  name: getFeedbackReceiver
  nameWithType: ServiceClient.getFeedbackReceiver
  fullName: FeedbackReceiver com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service._service_client.getFileUploadNotificationReceiver*
  name: getFileUploadNotificationReceiver
  nameWithType: ServiceClient.getFileUploadNotificationReceiver
  fullName: FileUploadNotificationReceiver com.microsoft.azure.sdk.iot.service.ServiceClient.getFileUploadNotificationReceiver
  package: com.microsoft.azure.sdk.iot.service
- uid: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send
  parent: com.microsoft.azure.sdk.iot.service.transport.amqps
  href: com.microsoft.azure.sdk.iot.service.transport.amqps._amqp_send.yml
  name: AmqpSend
  nameWithType: AmqpSend
  fullName: com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpSend
  type: Class
  summary: <p>Instance of the QPID-Proton-J BaseHandler class overriding the events what are needed to handle high level open, close and send methods. Initialize and use AmqpsSendHandler class for low level ampqs operations. </p>
  syntax:
    content: public class AmqpSend
- uid: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._iot_hub_service_client_protocol.yml
  name: IotHubServiceClientProtocol
  nameWithType: IotHubServiceClientProtocol
  fullName: com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol
  type: Enum
  summary: <p>The application-layer protocol used by the service client to communicate with an IoT Hub. </p>
  syntax:
    content: public enum IotHubServiceClientProtocol
- uid: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._iot_hub_connection_string.yml
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  type: Class
  summary: <p>Expose all connections string properties and methods for user, device and connection string serialization. </p>
  syntax:
    content: public class IotHubConnectionString extends IotHubConnectionStringBuilder
- uid: com.microsoft.azure.sdk.iot.service._service_client
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  name: ServiceClient
  nameWithType: ServiceClient
  fullName: com.microsoft.azure.sdk.iot.service.ServiceClient
  type: Class
  summary: <p>Extend the <xref uid="com.microsoft.azure.sdk.iot.service._service_client" data-throw-if-not-resolved="false">ServiceClient</xref> class and provide AMPQ specific implementation. </p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.service._message
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.service.Message
  type: Class
  summary: <p>IotHub specific message container </p>
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception
  parent: com.microsoft.azure.sdk.iot.service.exceptions
  href: com.microsoft.azure.sdk.iot.service.exceptions._iot_hub_exception.yml
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  type: Class
  summary: <p>Super class for IotHub exceptions </p>
  syntax:
    content: public class IotHubException
- uid: com.microsoft.azure.sdk.iot.service._service_client.open()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  name: open()
  nameWithType: ServiceClient.open()
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.open()
  type: Method
  summary: <p>Open AMQP sender </p>
  syntax: *o2
- uid: com.microsoft.azure.sdk.iot.service._service_client.close()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  name: close()
  nameWithType: ServiceClient.close()
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.close()
  type: Method
  summary: <p>Close AMQP sender </p>
  syntax: *o3
- uid: com.microsoft.azure.sdk.iot.service._service_client.send(String,Message)
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  name: send(String deviceId, Message message)
  nameWithType: ServiceClient.send(String deviceId, Message message)
  fullName: void com.microsoft.azure.sdk.iot.service.ServiceClient.send(String deviceId, Message message)
  type: Method
  summary: >-
    <p>Send a one-way message to the specified device</p>

    <p></p>
  syntax: *o4
- uid: com.microsoft.azure.sdk.iot.service._feedback_receiver
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._feedback_receiver.yml
  name: FeedbackReceiver
  nameWithType: FeedbackReceiver
  fullName: com.microsoft.azure.sdk.iot.service.FeedbackReceiver
  type: Class
  summary: >-
    <p>

      <xref uid="com.microsoft.azure.sdk.iot.service._feedback_receiver" data-throw-if-not-resolved="false">FeedbackReceiver</xref> is a specialized receiver whose ReceiveAsync method returns a <xref uid="com.microsoft.azure.sdk.iot.service._feedback_batch" data-throw-if-not-resolved="false">FeedbackBatch</xref> instead of a <xref uid="com.microsoft.azure.sdk.iot.service._message" data-throw-if-not-resolved="false">Message</xref>. </p>
  syntax:
    content: public class FeedbackReceiver extends Receiver
- uid: com.microsoft.azure.sdk.iot.service._service_client.getFeedbackReceiver()
  parent: com.microsoft.azure.sdk.iot.service._service_client
  href: com.microsoft.azure.sdk.iot.service._service_client.yml
  name: getFeedbackReceiver()
  nameWithType: ServiceClient.getFeedbackReceiver()
  fullName: FeedbackReceiver com.microsoft.azure.sdk.iot.service.ServiceClient.getFeedbackReceiver()
  type: Method
  summary: >-
    <p>Get <xref uid="com.microsoft.azure.sdk.iot.service._feedback_receiver" data-throw-if-not-resolved="false">FeedbackReceiver</xref> object.</p>

    <p></p>
  syntax: *o5
- uid: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver
  parent: com.microsoft.azure.sdk.iot.service
  href: com.microsoft.azure.sdk.iot.service._file_upload_notification_receiver.yml
  name: FileUploadNotificationReceiver
  nameWithType: FileUploadNotificationReceiver
  fullName: com.microsoft.azure.sdk.iot.service.FileUploadNotificationReceiver
  type: Class
  syntax:
    content: public class FileUploadNotificationReceiver extends Receiver
