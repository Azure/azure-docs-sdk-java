### YamlMime:ManagedReference
items:
- uid: system.fabric.health._health_information
  id: _health_information
  parent: system.fabric.health
  children:
  - system.fabric.health._health_information.autoSequenceNumber
  - system.fabric.health._health_information.getDescription()
  - system.fabric.health._health_information.getHealthState()
  - system.fabric.health._health_information.getProperty()
  - system.fabric.health._health_information.getSequenceNumber()
  - system.fabric.health._health_information.getSourceId()
  - system.fabric.health._health_information.getTimeToLive()
  - system.fabric.health._health_information.HealthInformation(String,String,HealthState)
  - system.fabric.health._health_information.isRemoveWhenExpired()
  - system.fabric.health._health_information.setDescription(String)
  - system.fabric.health._health_information.setRemoveWhenExpired(boolean)
  - system.fabric.health._health_information.setSequenceNumber(long)
  - system.fabric.health._health_information.setTimeToLiveSeconds(Duration)
  - system.fabric.health._health_information.unknownSequenceNumber
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: HealthInformation
  nameWithType: HealthInformation
  fullName: system.fabric.health.HealthInformation
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 12
  package: system.fabric.health
  summary: "<p>Contains the health information about the entity. This information is included in the health report. It is also provided as part of the health event. </p>"
  syntax:
    content: public class HealthInformation
  inheritance:
  - java.lang.Object
- uid: system.fabric.health._health_information.autoSequenceNumber
  id: autoSequenceNumber
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: autoSequenceNumber
  nameWithType: HealthInformation.autoSequenceNumber
  fullName: system.fabric.health.HealthInformation.autoSequenceNumber
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 16
  package: system.fabric.health
  syntax:
    content: public final long autoSequenceNumber= 0
    return:
      type: 4c60ae65
- uid: system.fabric.health._health_information.getDescription()
  id: getDescription()
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: getDescription()
  nameWithType: HealthInformation.getDescription()
  fullName: system.fabric.health.HealthInformation.getDescription()
  overload: system.fabric.health._health_information.getDescription*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 125
  package: system.fabric.health
  summary: "<p>Gets the description of the health information. It represents free text used to add human readable information about the report.</p>\r\n<p>\r\n  <b>Remarks:</b>The maximum string length for the description is 4096 characters. </p>"
  syntax:
    content: public String getDescription()
    return:
      type: "26831127"
      description: <p>A String which describes the health information in human readable form. </p>
- uid: system.fabric.health._health_information.getHealthState()
  id: getHealthState()
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: getHealthState()
  nameWithType: HealthInformation.getHealthState()
  fullName: system.fabric.health.HealthInformation.getHealthState()
  overload: system.fabric.health._health_information.getHealthState*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 96
  package: system.fabric.health
  summary: "<p>Gets the health state of the health information.</p>\r\n<p>\r\n  <b>Remarks:</b>The accepted health states are <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Ok</xref>, <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Warning</xref> and <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>. </p>"
  syntax:
    content: public HealthState getHealthState()
    return:
      type: system.fabric.health._health_state
      description: <p>A <xref uid="system.fabric.health._health_state" data-throw-if-not-resolved="false">system.fabric.health.HealthState</xref> representing the reported health state. </p>
- uid: system.fabric.health._health_information.getProperty()
  id: getProperty()
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: getProperty()
  nameWithType: HealthInformation.getProperty()
  fullName: system.fabric.health.HealthInformation.getProperty()
  overload: system.fabric.health._health_information.getProperty*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 81
  package: system.fabric.health
  summary: "<p>Gets the property of the health report.</p>\r\n<p>\r\n  <b>Remarks:</b>The property is a String and not a fixed enumeration to allow the reporter to categorize the health event for a specific property of the entity. For example, reporter A can report the health of the Node01 \"storage\" property and reporter B can report the health of the Node01 \"connectivity\" property. In the health store, these reports are treated as separate health events for the Node01 entity. </p>"
  syntax:
    content: public String getProperty()
    return:
      type: "26831127"
      description: <p>A String representing the property of the health report. Together with the SourceId, it uniquely identifies the health information. </p>
- uid: system.fabric.health._health_information.getSequenceNumber()
  id: getSequenceNumber()
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: getSequenceNumber()
  nameWithType: HealthInformation.getSequenceNumber()
  fullName: system.fabric.health.HealthInformation.getSequenceNumber()
  overload: system.fabric.health._health_information.getSequenceNumber*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 143
  package: system.fabric.health
  summary: "<p>Gets the sequence number associated with the report. Must be greater than <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#unknownSequenceNumber</xref>.</p>\r\n<p>\r\n  <b>Remarks:</b>The report sequence number is used by health store to detect stale reports. Most of the times, the reporter doesn't need to specify the sequence number. The default value AutoSequenceNumber can be used instead. When a health client receives a report with Auto sequence number, it replaces the auto sequence number with a valid sequence number. The sequence number is guaranteed to increase in the same process, even if the client machine time goes backwards. </p>"
  syntax:
    content: public long getSequenceNumber()
    return:
      type: 0364520f
      description: <p>A long representing the report sequence number. </p>
- uid: system.fabric.health._health_information.getSourceId()
  id: getSourceId()
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: getSourceId()
  nameWithType: HealthInformation.getSourceId()
  fullName: system.fabric.health.HealthInformation.getSourceId()
  overload: system.fabric.health._health_information.getSourceId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 64
  package: system.fabric.health
  summary: "<p>Gets the source Identifier which identifies the watchdog/system component which generated the health information.</p>\r\n<p></p>"
  syntax:
    content: public String getSourceId()
    return:
      type: "26831127"
      description: <p>A String representing the source of the health report. </p>
- uid: system.fabric.health._health_information.getTimeToLive()
  id: getTimeToLive()
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: getTimeToLive()
  nameWithType: HealthInformation.getTimeToLive()
  fullName: system.fabric.health.HealthInformation.getTimeToLive()
  overload: system.fabric.health._health_information.getTimeToLive*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 112
  package: system.fabric.health
  summary: "<p>Gets how long the health report is valid. Must be larger than TimeSpan.Zero.</p>\r\n<p>\r\n  <b>Remarks:</b>When clients report periodically, they should send reports with higher frequency than time to live. If clients report on transition, they can set the time to live to infinite. When time to live expires, the health event that contains the health information is either removed from health store, if RemoveWhenExpired is true or evaluated at error, if RemoveWhenExpired is false. </p>"
  syntax:
    content: public Duration getTimeToLive()
    return:
      type: e02a2de0
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref> representing the time to live of the health report. </p>
- uid: system.fabric.health._health_information.HealthInformation(String,String,HealthState)
  id: HealthInformation(String,String,HealthState)
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: HealthInformation(String sourceId, String property, HealthState healthState)
  nameWithType: HealthInformation.HealthInformation(String sourceId, String property, HealthState healthState)
  fullName: system.fabric.health.HealthInformation.HealthInformation(String sourceId, String property, HealthState healthState)
  overload: system.fabric.health._health_information.HealthInformation*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 33
  package: system.fabric.health
  summary: "<p>Initializes a new instance of the <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation</xref> class. </p>"
  syntax:
    content: public HealthInformation(String sourceId, String property, HealthState healthState)
    parameters:
    - id: sourceId
      type: "26831127"
      description: <p>The source of the report. Cannot be null or empty. It can't start with "System.", which is reserved keyword for system components reporting. </p>
    - id: property
      type: "26831127"
      description: <p>The property of the report. Cannot be null or empty. </p>
    - id: healthState
      type: system.fabric.health._health_state
      description: <p>he health state of the report. Must be specified. Must be one of the values of <xref uid="system.fabric.health._health_state" data-throw-if-not-resolved="false">system.fabric.health.HealthState</xref>. </p>
- uid: system.fabric.health._health_information.isRemoveWhenExpired()
  id: isRemoveWhenExpired()
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: isRemoveWhenExpired()
  nameWithType: HealthInformation.isRemoveWhenExpired()
  fullName: system.fabric.health.HealthInformation.isRemoveWhenExpired()
  overload: system.fabric.health._health_information.isRemoveWhenExpired*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 163
  package: system.fabric.health
  summary: "<p>Gets a value that indicates whether the report is removed from health store when it expires. If set to false, the report is treated as an error when expired. false by default.</p>\r\n<p>\r\n  <b>Remarks:</b>When clients report periodically, they should set RemoveWhenExpired false (default). This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires, and this will flag the entity as <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>. Periodic health clients should send reports with higher frequency than time to live to account for delays due to health client batching, message transport over the wire and health store processing. </p>"
  syntax:
    content: public boolean isRemoveWhenExpired()
    return:
      type: 4fc6e284
      description: <p>true if the report should be removed from health store when expired; otherwise, false. </p>
- uid: system.fabric.health._health_information.setDescription(String)
  id: setDescription(String)
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: setDescription(String description)
  nameWithType: HealthInformation.setDescription(String description)
  fullName: system.fabric.health.HealthInformation.setDescription(String description)
  overload: system.fabric.health._health_information.setDescription*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 198
  package: system.fabric.health
  summary: "<p>Sets the description of the health information. It represents free text used to add human readable information about the report.</p>\r\n<p>\r\n  <b>Remarks:</b>The maximum string length for the description is 4096 characters. </p>"
  syntax:
    content: public void setDescription(String description)
    parameters:
    - id: description
      type: "26831127"
      description: <p>A String which describes the health information in human readable form. </p>
- uid: system.fabric.health._health_information.setRemoveWhenExpired(boolean)
  id: setRemoveWhenExpired(boolean)
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: setRemoveWhenExpired(boolean removeWhenExpired)
  nameWithType: HealthInformation.setRemoveWhenExpired(boolean removeWhenExpired)
  fullName: system.fabric.health.HealthInformation.setRemoveWhenExpired(boolean removeWhenExpired)
  overload: system.fabric.health._health_information.setRemoveWhenExpired*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 243
  package: system.fabric.health
  summary: "<p>Sets a value that indicates whether the report is removed from health store when it expires. If set to false, the report is treated as an error when expired. false by default.</p>\r\n<p>\r\n  <b>Remarks:</b>When clients report periodically, they should set RemoveWhenExpired false (default). This way, is the reporter has issues (eg. deadlock) and can't report, the entity is evaluated at error when the health report expires, and this will flag the entity as <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthState#Error</xref>. Periodic health clients should send reports with higher frequency than time to live to account for delays due to health client batching, message transport over the wire and health store processing. </p>"
  syntax:
    content: public void setRemoveWhenExpired(boolean removeWhenExpired)
    parameters:
    - id: removeWhenExpired
      type: 4fc6e284
      description: <p>true if the report should be removed from health store when expired; otherwise, false. </p>
- uid: system.fabric.health._health_information.setSequenceNumber(long)
  id: setSequenceNumber(long)
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: setSequenceNumber(long sequenceNumber)
  nameWithType: HealthInformation.setSequenceNumber(long sequenceNumber)
  fullName: system.fabric.health.HealthInformation.setSequenceNumber(long sequenceNumber)
  overload: system.fabric.health._health_information.setSequenceNumber*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 219
  package: system.fabric.health
  summary: "<p>Sets the sequence number associated with the report. Must be greater than <xref uid=\"\" data-throw-if-not-resolved=\"false\">system.fabric.health.HealthInformation#unknownSequenceNumber</xref>.</p>\r\n<p>\r\n  <b>Remarks:</b>The report sequence number is used by health store to detect stale reports. Most of the times, the reporter doesn't need to specify the sequence number. The default value AutoSequenceNumber can be used instead. When a health client receives a report with Auto sequence number, it replaces the auto sequence number with a valid sequence number. The sequence number is guaranteed to increase in the same process, even if the client machine time goes backwards. </p>"
  syntax:
    content: public void setSequenceNumber(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>A long representing the report sequence number. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>if sequenceNumber is less or equals than unknownSequenceNumber </p>
- uid: system.fabric.health._health_information.setTimeToLiveSeconds(Duration)
  id: setTimeToLiveSeconds(Duration)
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: setTimeToLiveSeconds(Duration timeToLive)
  nameWithType: HealthInformation.setTimeToLiveSeconds(Duration timeToLive)
  fullName: system.fabric.health.HealthInformation.setTimeToLiveSeconds(Duration timeToLive)
  overload: system.fabric.health._health_information.setTimeToLiveSeconds*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 180
  package: system.fabric.health
  summary: "<p>Sets how long the health report is valid. Must be larger than TimeSpan.Zero.</p>\r\n<p>\r\n  <b>Remarks:</b>When clients report periodically, they should send reports with higher frequency than time to live. If clients report on transition, they can set the time to live to infinite. When time to live expires, the health event that contains the health information is either removed from health store, if RemoveWhenExpired is true or evaluated at error, if RemoveWhenExpired is false. </p>"
  syntax:
    content: public void setTimeToLiveSeconds(Duration timeToLive)
    parameters:
    - id: timeToLive
      type: e02a2de0
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.time.Duration</xref> representing the time to live of the health report. </p>
- uid: system.fabric.health._health_information.unknownSequenceNumber
  id: unknownSequenceNumber
  parent: system.fabric.health._health_information
  href: system.fabric.health._health_information.yml
  langs:
  - java
  name: unknownSequenceNumber
  nameWithType: HealthInformation.unknownSequenceNumber
  fullName: system.fabric.health.HealthInformation.unknownSequenceNumber
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/HealthInformation.java
    startLine: 14
  package: system.fabric.health
  syntax:
    content: public final long unknownSequenceNumber= -1
    return:
      type: 4c60ae65
references:
- uid: 4c60ae65
  spec.java:
  - name: final long
    fullName: final long
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: system.fabric.health._health_information.HealthInformation*
  name: HealthInformation
  nameWithType: HealthInformation.HealthInformation
  fullName: system.fabric.health.HealthInformation.HealthInformation
  package: system.fabric.health
- uid: system.fabric.health._health_information.getSourceId*
  name: getSourceId
  nameWithType: HealthInformation.getSourceId
  fullName: system.fabric.health.HealthInformation.getSourceId
  package: system.fabric.health
- uid: system.fabric.health._health_information.getProperty*
  name: getProperty
  nameWithType: HealthInformation.getProperty
  fullName: system.fabric.health.HealthInformation.getProperty
  package: system.fabric.health
- uid: system.fabric.health._health_information.getHealthState*
  name: getHealthState
  nameWithType: HealthInformation.getHealthState
  fullName: system.fabric.health.HealthInformation.getHealthState
  package: system.fabric.health
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: system.fabric.health._health_information.getTimeToLive*
  name: getTimeToLive
  nameWithType: HealthInformation.getTimeToLive
  fullName: system.fabric.health.HealthInformation.getTimeToLive
  package: system.fabric.health
- uid: system.fabric.health._health_information.getDescription*
  name: getDescription
  nameWithType: HealthInformation.getDescription
  fullName: system.fabric.health.HealthInformation.getDescription
  package: system.fabric.health
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric.health._health_information.getSequenceNumber*
  name: getSequenceNumber
  nameWithType: HealthInformation.getSequenceNumber
  fullName: system.fabric.health.HealthInformation.getSequenceNumber
  package: system.fabric.health
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: system.fabric.health._health_information.isRemoveWhenExpired*
  name: isRemoveWhenExpired
  nameWithType: HealthInformation.isRemoveWhenExpired
  fullName: system.fabric.health.HealthInformation.isRemoveWhenExpired
  package: system.fabric.health
- uid: system.fabric.health._health_information.setTimeToLiveSeconds*
  name: setTimeToLiveSeconds
  nameWithType: HealthInformation.setTimeToLiveSeconds
  fullName: system.fabric.health.HealthInformation.setTimeToLiveSeconds
  package: system.fabric.health
- uid: system.fabric.health._health_information.setDescription*
  name: setDescription
  nameWithType: HealthInformation.setDescription
  fullName: system.fabric.health.HealthInformation.setDescription
  package: system.fabric.health
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: system.fabric.health._health_information.setSequenceNumber*
  name: setSequenceNumber
  nameWithType: HealthInformation.setSequenceNumber
  fullName: system.fabric.health.HealthInformation.setSequenceNumber
  package: system.fabric.health
- uid: system.fabric.health._health_information.setRemoveWhenExpired*
  name: setRemoveWhenExpired
  nameWithType: HealthInformation.setRemoveWhenExpired
  fullName: system.fabric.health.HealthInformation.setRemoveWhenExpired
  package: system.fabric.health
- uid: system.fabric.health._health_state
  parent: system.fabric.health
  href: system.fabric.health._health_state.yml
  name: HealthState
  nameWithType: HealthState
  fullName: system.fabric.health.HealthState
  type: Enum
  summary: <p>Represents the Health State of an Entity. </p>
  syntax:
    content: public enum HealthState
