### YamlMime:JavaMember
nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication
type: method
members:
- fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  parameters:
  - description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    name: context
    type: <xref href="%40NonNull+final+Context?alt=%40NonNull+final+Context&text=%40NonNull+final+Context" data-throw-if-not-resolved="False"/>
  - description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    name: configFile
    type: <xref href="%40NonNull+final+File?alt=%40NonNull+final+File&text=%40NonNull+final+File" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if this function is invoked on the main thread. </p>
  returns:
    type: <xref href="com.microsoft.identity.client.IMultipleAccountPublicClientApplication?alt=com.microsoft.identity.client.IMultipleAccountPublicClientApplication&text=IMultipleAccountPublicClientApplication" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>

      <xref uid="" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#createMultipleAccountPublicClientApplication(Context, File)"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>

    <p>This function will pass back an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref> object if it is unable to return <xref uid="com.microsoft.identity.client.IMultipleAccountPublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="IMultipleAccountPublicClientApplication"></xref>. For example, when the device is marked as 'shared' (<xref uid="com.microsoft.identity.client.PublicClientApplication.isSharedDevice()" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#isSharedDevice()"></xref> is set to true) </p>

    <p>

    Note: The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>

    <p>

    For more information on the schema of the MSAL configuration file, please see <a href="https://developer.android.com/guide/topics/resources/providing-resources">Android app resource overview</a> and <a href="https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki">MSAL Github Wiki</a></p>

    <p></p>
  syntax: public static IMultipleAccountPublicClientApplication createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
  uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File)
- fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  parameters:
  - description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    name: context
    type: <xref href="%40NonNull+final+Context?alt=%40NonNull+final+Context&text=%40NonNull+final+Context" data-throw-if-not-resolved="False"/>
  - description: <p>The file containing the JSON configuration for the PublicClientApplication. Cannot be null. </p>
    name: configFile
    type: <xref href="%40NonNull+final+File?alt=%40NonNull+final+File&text=%40NonNull+final+File" data-throw-if-not-resolved="False"/>
  - description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
    name: listener
    type: '@NonNull final <xref href="com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener?alt=com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener&text=IPublicClientApplication.IMultipleAccountApplicationCreatedListener" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>

      <xref uid="" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#createMultipleAccountPublicClientApplication(Context, File, IMultipleAccountApplicationCreatedListener)"></xref> will read the client id and other configuration settings from the file included in your application resources.</p>

    <p>This function will pass back an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref> object if it is unable to return <xref uid="com.microsoft.identity.client.IMultipleAccountPublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="IMultipleAccountPublicClientApplication"></xref>. For example, when the device is marked as 'shared' (<xref uid="com.microsoft.identity.client.PublicClientApplication.isSharedDevice()" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#isSharedDevice()"></xref> is set to true) </p>

    <p>

    Note: The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>

    <p>

    For more information on the schema of the MSAL config json, please see <a href="https://developer.android.com/guide/topics/resources/providing-resources">Android app resource overview</a> and <a href="https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki">MSAL Github Wiki</a></p>

    <p></p>
  syntax: public static void createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final File,@NonNull final IMultipleAccountApplicationCreatedListener)
- fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  parameters:
  - description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    name: context
    type: <xref href="%40NonNull+final+Context?alt=%40NonNull+final+Context&text=%40NonNull+final+Context" data-throw-if-not-resolved="False"/>
  - description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    name: configFileResourceId
    type: <xref href="%40NonNull+final+int?alt=%40NonNull+final+int&text=%40NonNull+final+int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if this function is invoked on the main thread. </p>
  returns:
    description: <p>An instance of IMultipleAccountPublicClientApplication. </p>
    type: <xref href="com.microsoft.identity.client.IMultipleAccountPublicClientApplication?alt=com.microsoft.identity.client.IMultipleAccountPublicClientApplication&text=IMultipleAccountPublicClientApplication" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>

      <xref uid="" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#createMultipleAccountPublicClientApplication(Context, int)"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>

    <p>This function will pass back an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref> object if it is unable to return <xref uid="com.microsoft.identity.client.IMultipleAccountPublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="IMultipleAccountPublicClientApplication"></xref>. For example, when the device is marked as 'shared' (<xref uid="com.microsoft.identity.client.PublicClientApplication.isSharedDevice()" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#isSharedDevice()"></xref> is set to true) </p>

    <p>

    Note: The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>

    <p>

    For more information on the schema of the MSAL config json, please see <a href="https://developer.android.com/guide/topics/resources/providing-resources">Android app resource overview</a> and <a href="https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki">MSAL Github Wiki</a></p>

    <p></p>
  syntax: public static IMultipleAccountPublicClientApplication createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final int configFileResourceId)
  uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,@NonNull final int)
- fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  name: createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  nameWithType: PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  parameters:
  - description: <p>Application's <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref>. The sdk requires the application context to be passed in <xref uid="com.microsoft.identity.client.PublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication"></xref>. Cannot be null. </p>
    name: context
    type: <xref href="%40NonNull+final+Context?alt=%40NonNull+final+Context&text=%40NonNull+final+Context" data-throw-if-not-resolved="False"/>
  - description: <p>The resource ID of the raw file containing the JSON configuration for the PublicClientApplication. </p>
    name: configFileResourceId
    type: <xref href="final+int?alt=final+int&text=final+int" data-throw-if-not-resolved="False"/>
  - description: <p>a callback to be invoked when the object is successfully created. Cannot be null. </p>
    name: listener
    type: '@NonNull final <xref href="com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener?alt=com.microsoft.identity.client.IPublicClientApplication.IMultipleAccountApplicationCreatedListener&text=IPublicClientApplication.IMultipleAccountApplicationCreatedListener" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>

      <xref uid="" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#createMultipleAccountPublicClientApplication(Context, int, IMultipleAccountApplicationCreatedListener)"></xref> will read the client id and other configuration settings from the file included in your application's resources.</p>

    <p>This function will pass back an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="MsalClientException"></xref> object if it is unable to return <xref uid="com.microsoft.identity.client.IMultipleAccountPublicClientApplication" data-throw-if-not-resolved="false" data-raw-source="IMultipleAccountPublicClientApplication"></xref>. For example, when the device is marked as 'shared' (<xref uid="com.microsoft.identity.client.PublicClientApplication.isSharedDevice()" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#isSharedDevice()"></xref> is set to true) </p>

    <p>

    Note: The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Context"></xref> should be the application context instead of the running activity's context, which could potentially make the sdk hold a strong reference to the activity, thus preventing correct garbage collection and causing bugs. </p>

    <p>

    For more information on the schema of the MSAL config json, please see <a href="https://developer.android.com/guide/topics/resources/providing-resources">Android app resource overview</a> and <a href="https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki">MSAL Github Wiki</a></p>

    <p></p>
  syntax: public static void createMultipleAccountPublicClientApplication(@NonNull final Context context, final int configFileResourceId, @NonNull final IMultipleAccountApplicationCreatedListener listener)
  uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication(@NonNull final Context,final int,@NonNull final IMultipleAccountApplicationCreatedListener)
uid: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication*
fullName: com.microsoft.identity.client.PublicClientApplication.createMultipleAccountPublicClientApplication
name: createMultipleAccountPublicClientApplication(@NonNull final Context context, @NonNull final File configFile)
package: com.microsoft.identity.client
metadata: {}
