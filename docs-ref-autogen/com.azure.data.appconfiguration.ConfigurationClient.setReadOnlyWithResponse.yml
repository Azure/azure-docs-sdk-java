### YamlMime:JavaMember
uid: "com.azure.data.appconfiguration.ConfigurationClient.setReadOnlyWithResponse*"
fullName: "com.azure.data.appconfiguration.ConfigurationClient.setReadOnlyWithResponse"
name: "setReadOnlyWithResponse"
nameWithType: "ConfigurationClient.setReadOnlyWithResponse"
members:
- uid: "com.azure.data.appconfiguration.ConfigurationClient.setReadOnlyWithResponse(com.azure.data.appconfiguration.models.ConfigurationSetting,boolean,com.azure.core.util.Context)"
  fullName: "com.azure.data.appconfiguration.ConfigurationClient.setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly, Context context)"
  name: "setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly, Context context)"
  nameWithType: "ConfigurationClient.setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly, Context context)"
  summary: "Sets the read-only status for the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ConfigurationSetting\"></xref>.\n\n**Code Samples**\n\nSet the setting to read-only with the key-label \"prodDBConnection\"-\"westUS\".\n\n```java\nConfigurationSetting resultSetting = configurationClient.setReadOnlyWithResponse(\n     new ConfigurationSetting().setKey(\"prodDBConnection\").setLabel(\"westUS\"), true, Context.NONE)\n     .getValue();\n System.out.printf(\"Key: %s, Value: %s\", resultSetting.getKey(), resultSetting.getValue());\n```\n\nClear read-only of the setting with the key-label \"prodDBConnection\"-\"westUS\".\n\n```java\nResponse<ConfigurationSetting> responseSetting = configurationClient\n     .setConfigurationSettingWithResponse(\n         new ConfigurationSetting().setKey(\"prodDBConnection\").setLabel(\"westUS\"), false,\n         new Context(key2, value2));\n System.out.printf(\"Key: %s, Value: %s\", responseSetting.getValue().getKey(),\n     responseSetting.getValue().getValue());\n```"
  parameters:
  - description: "The configuration setting to set to read-only or not read-only based on the <code>isReadOnly</code>."
    name: "setting"
    type: "<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />"
  - description: "Flag used to set the read-only status of the configuration. <code>true</code> will put the\n configuration into a read-only state, <code>false</code> will clear the state."
    name: "isReadOnly"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ConfigurationSetting> setReadOnlyWithResponse(ConfigurationSetting setting, boolean isReadOnly, Context context)"
  returns:
    description: "A REST response containing the read-only or not read-only ConfigurationSetting if <code>isReadOnly</code>\n is true or null, or false respectively. Or return <code>null</code> if the setting didn't exist.\n <code>null</code> is also returned if the <xref uid=\"com.azure.data.appconfiguration.models.ConfigurationSetting.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> is an invalid value.\n (which will also throw HttpResponseException described below)."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.appconfiguration.models.ConfigurationSetting?alt=com.azure.data.appconfiguration.models.ConfigurationSetting&text=ConfigurationSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.appconfiguration"
artifact: com.azure:azure-data-appconfiguration:1.1.8
