### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoAsync*"
fullName: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoAsync"
name: "getLogoAsync"
nameWithType: "ApplicationsApplicationsClientImpl.getLogoAsync"
members:
- uid: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.implementation.ApplicationsApplicationsClientImpl.getLogoAsync(String applicationId)"
  name: "getLogoAsync(String applicationId)"
  nameWithType: "ApplicationsApplicationsClientImpl.getLogoAsync(String applicationId)"
  summary: "Get media content for application from applications."
  parameters:
  - description: "key: id of application."
    name: "applicationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Flux<ByteBuffer> getLogoAsync(String applicationId)"
  returns:
    description: "media content for application from applications."
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.3.0
