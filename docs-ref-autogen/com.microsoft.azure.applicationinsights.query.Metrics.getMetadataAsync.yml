### YamlMime:JavaMember
nameWithType: Metrics.getMetadataAsync
type: method
members:
- fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String appId)
  name: getMetadataAsync(String appId)
  nameWithType: Metrics.getMetadataAsync(String appId)
  parameters:
  - description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    name: appId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the Object object </p>
    type: <xref href="Observable%3CObject%3E?alt=Observable%3CObject%3E&text=Observable%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieve metric metatadata. Gets metadata describing the available metrics.</p>

    <p></p>
  syntax: public Observable<Object> getMetadataAsync(String appId)
  uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String)
- fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
  name: getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
  nameWithType: Metrics.getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
  parameters:
  - description: <p>ID of the application. This is Application ID from the API Access settings blade in the Azure portal. </p>
    name: appId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CObject%3E?alt=final+ServiceCallback%3CObject%3E&text=final+ServiceCallback%3CObject%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CObject%3E?alt=ServiceFuture%3CObject%3E&text=ServiceFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Retrieve metric metatadata. Gets metadata describing the available metrics.</p>

    <p></p>
  syntax: public ServiceFuture<Object> getMetadataAsync(String appId, final ServiceCallback<Object> serviceCallback)
  uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync(String,final ServiceCallback<Object>)
uid: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync*
fullName: com.microsoft.azure.applicationinsights.query.Metrics.getMetadataAsync
name: getMetadataAsync(String appId)
package: com.microsoft.azure.applicationinsights.query
metadata: {}
