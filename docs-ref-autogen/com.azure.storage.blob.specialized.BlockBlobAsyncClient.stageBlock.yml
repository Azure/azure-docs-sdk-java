### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock*"
fullName: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock"
name: "stageBlock"
nameWithType: "BlockBlobAsyncClient.stageBlock"
members:
- uid: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock(java.lang.String,com.azure.core.util.BinaryData)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock(String base64BlockId, BinaryData data)"
  name: "stageBlock(String base64BlockId, BinaryData data)"
  nameWithType: "BlockBlobAsyncClient.stageBlock(String base64BlockId, BinaryData data)"
  summary: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList."
  parameters:
  - description: "A Base64 encoded <code>String</code> that specifies the ID for this block. Note that all block\n ids for a given blob must be the same length."
    name: "base64BlockId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data to write to the block. Note that this <code>BinaryData</code> must have defined length\n and must be replayable if retries are enabled (the default), see <xref uid=\"com.azure.core.util.BinaryData.isReplayable*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData#isReplayable()\"></xref>."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> stageBlock(String base64BlockId, BinaryData data)"
  desc: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList. For more information, see the [Azure Docs][].\n\nNote that the data passed must be replayable if retries are enabled (the default), see <xref uid=\"com.azure.core.util.BinaryData.isReplayable*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData#isReplayable()\"></xref>.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-block"
  returns:
    description: "A reactive response signalling completion.\n\n <p><strong>Code Samples</strong></p>\n\n <!-- src_embed com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock#String-BinaryData -->\n <pre>\n BinaryData.fromFlux&#40;data, length, false&#41;\n     .flatMap&#40;binaryData -&gt; client.stageBlock&#40;base64BlockID, binaryData&#41;&#41;\n     .subscribe&#40;\n         response -&gt; System.out.println&#40;&quot;Staging block completed&quot;&#41;,\n         error -&gt; System.out.printf&#40;&quot;Error when calling stage Block: %s&quot;, error&#41;&#41;;\n </pre>\n <!-- end com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock#String-BinaryData -->"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock(java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock(String base64BlockId, Flux<ByteBuffer> data, long length)"
  name: "stageBlock(String base64BlockId, Flux<ByteBuffer> data, long length)"
  nameWithType: "BlockBlobAsyncClient.stageBlock(String base64BlockId, Flux<ByteBuffer> data, long length)"
  summary: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList."
  parameters:
  - description: "A Base64 encoded <code>String</code> that specifies the ID for this block. Note that all block\n ids for a given blob must be the same length."
    name: "base64BlockId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data to write to the block. Note that this <code>Flux</code> must be replayable if retries are enabled\n (the default). In other words, the <code>Flux</code> must produce the same data each time it is subscribed to."
    name: "data"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data emitted by the <code>Flux</code>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Void> stageBlock(String base64BlockId, Flux<ByteBuffer> data, long length)"
  desc: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList. For more information, see the [Azure Docs][].\n\nNote that the data passed must be replayable if retries are enabled (the default). In other words, the `Flux` must produce the same data each time it is subscribed to.\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-block"
  returns:
    description: "A reactive response signalling completion.\n\n <p><strong>Code Samples</strong></p>\n\n <!-- src_embed com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock#String-Flux-long -->\n <pre>\n client.stageBlock&#40;base64BlockID, data, length&#41;\n     .subscribe&#40;\n         response -&gt; System.out.println&#40;&quot;Staging block completed&quot;&#41;,\n         error -&gt; System.out.printf&#40;&quot;Error when calling stage Block: %s&quot;, error&#41;&#41;;\n </pre>\n <!-- end com.azure.storage.blob.specialized.BlockBlobAsyncClient.stageBlock#String-Flux-long -->"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Void?alt=java.lang.Void&text=Void\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.19.0
