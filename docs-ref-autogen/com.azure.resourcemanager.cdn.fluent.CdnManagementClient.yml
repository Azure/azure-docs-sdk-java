### YamlMime:JavaType
uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient"
fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient"
name: "CdnManagementClient"
nameWithType: "CdnManagementClient"
summary: "The interface for Cdn<wbr>Management<wbr>Client class."
syntax: "public interface CdnManagementClient"
methods:
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailability(java.lang.String,com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailability(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  name: "checkEndpointNameAvailability(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkEndpointNameAvailability(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the Resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Input to check."
    name: "checkEndpointNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput&text=CheckEndpointNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckEndpointNameAvailabilityOutputInner checkEndpointNameAvailability(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint."
  returns:
    description: "output of check name availability API."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner&text=CheckEndpointNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailabilityAsync(java.lang.String,com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailabilityAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  name: "checkEndpointNameAvailabilityAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkEndpointNameAvailabilityAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the Resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Input to check."
    name: "checkEndpointNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput&text=CheckEndpointNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CheckEndpointNameAvailabilityOutputInner> checkEndpointNameAvailabilityAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint."
  returns:
    description: "output of check name availability API on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner&text=CheckEndpointNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailabilityWithResponse(java.lang.String,com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailabilityWithResponse(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput, Context context)"
  name: "checkEndpointNameAvailabilityWithResponse(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput, Context context)"
  nameWithType: "CdnManagementClient.checkEndpointNameAvailabilityWithResponse(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput, Context context)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the Resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Input to check."
    name: "checkEndpointNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput&text=CheckEndpointNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckEndpointNameAvailabilityOutputInner> checkEndpointNameAvailabilityWithResponse(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput, Context context)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint."
  returns:
    description: "output of check name availability API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner&text=CheckEndpointNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailabilityWithResponseAsync(java.lang.String,com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkEndpointNameAvailabilityWithResponseAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  name: "checkEndpointNameAvailabilityWithResponseAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkEndpointNameAvailabilityWithResponseAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Name of the Resource group within the Azure subscription."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Input to check."
    name: "checkEndpointNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckEndpointNameAvailabilityInput&text=CheckEndpointNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<CheckEndpointNameAvailabilityOutputInner>> checkEndpointNameAvailabilityWithResponseAsync(String resourceGroupName, CheckEndpointNameAvailabilityInput checkEndpointNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a afdx endpoint."
  returns:
    description: "output of check name availability API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckEndpointNameAvailabilityOutputInner&text=CheckEndpointNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailability(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityOutputInner checkNameAvailability(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityAsync(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailabilityAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkNameAvailabilityAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CheckNameAvailabilityOutputInner> checkNameAvailabilityAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithResponse(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  name: "checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  nameWithType: "CdnManagementClient.checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityOutputInner> checkNameAvailabilityWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithResponseAsync(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<CheckNameAvailabilityOutputInner>> checkNameAvailabilityWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscription(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscription(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailabilityWithSubscription(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkNameAvailabilityWithSubscription(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CheckNameAvailabilityOutputInner checkNameAvailabilityWithSubscription(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscriptionAsync(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscriptionAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailabilityWithSubscriptionAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkNameAvailabilityWithSubscriptionAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CheckNameAvailabilityOutputInner> checkNameAvailabilityWithSubscriptionAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithResponse(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  name: "checkNameAvailabilityWithSubscriptionWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  nameWithType: "CdnManagementClient.checkNameAvailabilityWithSubscriptionWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<CheckNameAvailabilityOutputInner> checkNameAvailabilityWithSubscriptionWithResponse(CheckNameAvailabilityInput checkNameAvailabilityInput, Context context)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithResponseAsync(com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.checkNameAvailabilityWithSubscriptionWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  name: "checkNameAvailabilityWithSubscriptionWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  nameWithType: "CdnManagementClient.checkNameAvailabilityWithSubscriptionWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  summary: "Check the availability of a resource name."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "checkNameAvailabilityInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput?alt=com.azure.resourcemanager.cdn.models.CheckNameAvailabilityInput&text=CheckNameAvailabilityInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<CheckNameAvailabilityOutputInner>> checkNameAvailabilityWithSubscriptionWithResponseAsync(CheckNameAvailabilityInput checkNameAvailabilityInput)"
  desc: "Check the availability of a resource name. This is needed for resources where name is globally unique, such as a CDN endpoint."
  returns:
    description: "output of check name availability API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.CheckNameAvailabilityOutputInner&text=CheckNameAvailabilityOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdCustomDomains()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdCustomDomains()"
  name: "getAfdCustomDomains()"
  nameWithType: "CdnManagementClient.getAfdCustomDomains()"
  summary: "Gets the Afd<wbr>Custom<wbr>Domains<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract AfdCustomDomainsClient getAfdCustomDomains()"
  desc: "Gets the AfdCustomDomainsClient object to access its operations."
  returns:
    description: "the AfdCustomDomainsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.AfdCustomDomainsClient?alt=com.azure.resourcemanager.cdn.fluent.AfdCustomDomainsClient&text=AfdCustomDomainsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdEndpoints()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdEndpoints()"
  name: "getAfdEndpoints()"
  nameWithType: "CdnManagementClient.getAfdEndpoints()"
  summary: "Gets the Afd<wbr>Endpoints<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract AfdEndpointsClient getAfdEndpoints()"
  desc: "Gets the AfdEndpointsClient object to access its operations."
  returns:
    description: "the AfdEndpointsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.AfdEndpointsClient?alt=com.azure.resourcemanager.cdn.fluent.AfdEndpointsClient&text=AfdEndpointsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdOriginGroups()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdOriginGroups()"
  name: "getAfdOriginGroups()"
  nameWithType: "CdnManagementClient.getAfdOriginGroups()"
  summary: "Gets the Afd<wbr>Origin<wbr>Groups<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract AfdOriginGroupsClient getAfdOriginGroups()"
  desc: "Gets the AfdOriginGroupsClient object to access its operations."
  returns:
    description: "the AfdOriginGroupsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.AfdOriginGroupsClient?alt=com.azure.resourcemanager.cdn.fluent.AfdOriginGroupsClient&text=AfdOriginGroupsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdOrigins()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdOrigins()"
  name: "getAfdOrigins()"
  nameWithType: "CdnManagementClient.getAfdOrigins()"
  summary: "Gets the Afd<wbr>Origins<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract AfdOriginsClient getAfdOrigins()"
  desc: "Gets the AfdOriginsClient object to access its operations."
  returns:
    description: "the AfdOriginsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.AfdOriginsClient?alt=com.azure.resourcemanager.cdn.fluent.AfdOriginsClient&text=AfdOriginsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdProfiles()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getAfdProfiles()"
  name: "getAfdProfiles()"
  nameWithType: "CdnManagementClient.getAfdProfiles()"
  summary: "Gets the Afd<wbr>Profiles<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract AfdProfilesClient getAfdProfiles()"
  desc: "Gets the AfdProfilesClient object to access its operations."
  returns:
    description: "the AfdProfilesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.AfdProfilesClient?alt=com.azure.resourcemanager.cdn.fluent.AfdProfilesClient&text=AfdProfilesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getApiVersion()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getApiVersion()"
  name: "getApiVersion()"
  nameWithType: "CdnManagementClient.getApiVersion()"
  summary: "Gets Api Version."
  modifiers:
  - "abstract"
  syntax: "public abstract String getApiVersion()"
  desc: "Gets Api Version."
  returns:
    description: "the apiVersion value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getCustomDomains()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getCustomDomains()"
  name: "getCustomDomains()"
  nameWithType: "CdnManagementClient.getCustomDomains()"
  summary: "Gets the Custom<wbr>Domains<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract CustomDomainsClient getCustomDomains()"
  desc: "Gets the CustomDomainsClient object to access its operations."
  returns:
    description: "the CustomDomainsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.CustomDomainsClient?alt=com.azure.resourcemanager.cdn.fluent.CustomDomainsClient&text=CustomDomainsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getDefaultPollInterval()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getDefaultPollInterval()"
  name: "getDefaultPollInterval()"
  nameWithType: "CdnManagementClient.getDefaultPollInterval()"
  summary: "Gets The default poll interval for long-running operation."
  modifiers:
  - "abstract"
  syntax: "public abstract Duration getDefaultPollInterval()"
  desc: "Gets The default poll interval for long-running operation."
  returns:
    description: "the defaultPollInterval value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getEdgeNodes()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getEdgeNodes()"
  name: "getEdgeNodes()"
  nameWithType: "CdnManagementClient.getEdgeNodes()"
  summary: "Gets the Edge<wbr>Nodes<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract EdgeNodesClient getEdgeNodes()"
  desc: "Gets the EdgeNodesClient object to access its operations."
  returns:
    description: "the EdgeNodesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.EdgeNodesClient?alt=com.azure.resourcemanager.cdn.fluent.EdgeNodesClient&text=EdgeNodesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getEndpoint()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getEndpoint()"
  name: "getEndpoint()"
  nameWithType: "CdnManagementClient.getEndpoint()"
  summary: "Gets server parameter."
  modifiers:
  - "abstract"
  syntax: "public abstract String getEndpoint()"
  desc: "Gets server parameter."
  returns:
    description: "the endpoint value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getEndpoints()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getEndpoints()"
  name: "getEndpoints()"
  nameWithType: "CdnManagementClient.getEndpoints()"
  summary: "Gets the Endpoints<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract EndpointsClient getEndpoints()"
  desc: "Gets the EndpointsClient object to access its operations."
  returns:
    description: "the EndpointsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.EndpointsClient?alt=com.azure.resourcemanager.cdn.fluent.EndpointsClient&text=EndpointsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getHttpPipeline()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getHttpPipeline()"
  name: "getHttpPipeline()"
  nameWithType: "CdnManagementClient.getHttpPipeline()"
  summary: "Gets The HTTP pipeline to send requests through."
  modifiers:
  - "abstract"
  syntax: "public abstract HttpPipeline getHttpPipeline()"
  desc: "Gets The HTTP pipeline to send requests through."
  returns:
    description: "the httpPipeline value."
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getLogAnalytics()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getLogAnalytics()"
  name: "getLogAnalytics()"
  nameWithType: "CdnManagementClient.getLogAnalytics()"
  summary: "Gets the Log<wbr>Analytics<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract LogAnalyticsClient getLogAnalytics()"
  desc: "Gets the LogAnalyticsClient object to access its operations."
  returns:
    description: "the LogAnalyticsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.LogAnalyticsClient?alt=com.azure.resourcemanager.cdn.fluent.LogAnalyticsClient&text=LogAnalyticsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getManagedRuleSets()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getManagedRuleSets()"
  name: "getManagedRuleSets()"
  nameWithType: "CdnManagementClient.getManagedRuleSets()"
  summary: "Gets the Managed<wbr>Rule<wbr>Sets<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract ManagedRuleSetsClient getManagedRuleSets()"
  desc: "Gets the ManagedRuleSetsClient object to access its operations."
  returns:
    description: "the ManagedRuleSetsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.ManagedRuleSetsClient?alt=com.azure.resourcemanager.cdn.fluent.ManagedRuleSetsClient&text=ManagedRuleSetsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getOperations()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getOperations()"
  name: "getOperations()"
  nameWithType: "CdnManagementClient.getOperations()"
  summary: "Gets the Operations<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract OperationsClient getOperations()"
  desc: "Gets the OperationsClient object to access its operations."
  returns:
    description: "the OperationsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.OperationsClient?alt=com.azure.resourcemanager.cdn.fluent.OperationsClient&text=OperationsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getOriginGroups()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getOriginGroups()"
  name: "getOriginGroups()"
  nameWithType: "CdnManagementClient.getOriginGroups()"
  summary: "Gets the Origin<wbr>Groups<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract OriginGroupsClient getOriginGroups()"
  desc: "Gets the OriginGroupsClient object to access its operations."
  returns:
    description: "the OriginGroupsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.OriginGroupsClient?alt=com.azure.resourcemanager.cdn.fluent.OriginGroupsClient&text=OriginGroupsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getOrigins()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getOrigins()"
  name: "getOrigins()"
  nameWithType: "CdnManagementClient.getOrigins()"
  summary: "Gets the Origins<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract OriginsClient getOrigins()"
  desc: "Gets the OriginsClient object to access its operations."
  returns:
    description: "the OriginsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.OriginsClient?alt=com.azure.resourcemanager.cdn.fluent.OriginsClient&text=OriginsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getPolicies()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getPolicies()"
  name: "getPolicies()"
  nameWithType: "CdnManagementClient.getPolicies()"
  summary: "Gets the Policies<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract PoliciesClient getPolicies()"
  desc: "Gets the PoliciesClient object to access its operations."
  returns:
    description: "the PoliciesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.PoliciesClient?alt=com.azure.resourcemanager.cdn.fluent.PoliciesClient&text=PoliciesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getProfiles()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getProfiles()"
  name: "getProfiles()"
  nameWithType: "CdnManagementClient.getProfiles()"
  summary: "Gets the Profiles<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract ProfilesClient getProfiles()"
  desc: "Gets the ProfilesClient object to access its operations."
  returns:
    description: "the ProfilesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.ProfilesClient?alt=com.azure.resourcemanager.cdn.fluent.ProfilesClient&text=ProfilesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getResourceUsages()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getResourceUsages()"
  name: "getResourceUsages()"
  nameWithType: "CdnManagementClient.getResourceUsages()"
  summary: "Gets the Resource<wbr>Usages<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract ResourceUsagesClient getResourceUsages()"
  desc: "Gets the ResourceUsagesClient object to access its operations."
  returns:
    description: "the ResourceUsagesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.ResourceUsagesClient?alt=com.azure.resourcemanager.cdn.fluent.ResourceUsagesClient&text=ResourceUsagesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getRoutes()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getRoutes()"
  name: "getRoutes()"
  nameWithType: "CdnManagementClient.getRoutes()"
  summary: "Gets the Routes<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract RoutesClient getRoutes()"
  desc: "Gets the RoutesClient object to access its operations."
  returns:
    description: "the RoutesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.RoutesClient?alt=com.azure.resourcemanager.cdn.fluent.RoutesClient&text=RoutesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getRuleSets()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getRuleSets()"
  name: "getRuleSets()"
  nameWithType: "CdnManagementClient.getRuleSets()"
  summary: "Gets the Rule<wbr>Sets<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract RuleSetsClient getRuleSets()"
  desc: "Gets the RuleSetsClient object to access its operations."
  returns:
    description: "the RuleSetsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.RuleSetsClient?alt=com.azure.resourcemanager.cdn.fluent.RuleSetsClient&text=RuleSetsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getRules()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getRules()"
  name: "getRules()"
  nameWithType: "CdnManagementClient.getRules()"
  summary: "Gets the Rules<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract RulesClient getRules()"
  desc: "Gets the RulesClient object to access its operations."
  returns:
    description: "the RulesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.RulesClient?alt=com.azure.resourcemanager.cdn.fluent.RulesClient&text=RulesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getSecrets()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getSecrets()"
  name: "getSecrets()"
  nameWithType: "CdnManagementClient.getSecrets()"
  summary: "Gets the Secrets<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract SecretsClient getSecrets()"
  desc: "Gets the SecretsClient object to access its operations."
  returns:
    description: "the SecretsClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.SecretsClient?alt=com.azure.resourcemanager.cdn.fluent.SecretsClient&text=SecretsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getSecurityPolicies()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getSecurityPolicies()"
  name: "getSecurityPolicies()"
  nameWithType: "CdnManagementClient.getSecurityPolicies()"
  summary: "Gets the Security<wbr>Policies<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract SecurityPoliciesClient getSecurityPolicies()"
  desc: "Gets the SecurityPoliciesClient object to access its operations."
  returns:
    description: "the SecurityPoliciesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.SecurityPoliciesClient?alt=com.azure.resourcemanager.cdn.fluent.SecurityPoliciesClient&text=SecurityPoliciesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getSubscriptionId()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getSubscriptionId()"
  name: "getSubscriptionId()"
  nameWithType: "CdnManagementClient.getSubscriptionId()"
  summary: "Gets Azure Subscription ID."
  modifiers:
  - "abstract"
  syntax: "public abstract String getSubscriptionId()"
  desc: "Gets Azure Subscription ID."
  returns:
    description: "the subscriptionId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getValidates()"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.getValidates()"
  name: "getValidates()"
  nameWithType: "CdnManagementClient.getValidates()"
  summary: "Gets the Validates<wbr>Client object to access its operations."
  modifiers:
  - "abstract"
  syntax: "public abstract ValidatesClient getValidates()"
  desc: "Gets the ValidatesClient object to access its operations."
  returns:
    description: "the ValidatesClient object."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.ValidatesClient?alt=com.azure.resourcemanager.cdn.fluent.ValidatesClient&text=ValidatesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbe(com.azure.resourcemanager.cdn.models.ValidateProbeInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbe(ValidateProbeInput validateProbeInput)"
  name: "validateProbe(ValidateProbeInput validateProbeInput)"
  nameWithType: "CdnManagementClient.validateProbe(ValidateProbeInput validateProbeInput)"
  summary: "Check if the probe path is a valid path and the file can be accessed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "validateProbeInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ValidateProbeInput?alt=com.azure.resourcemanager.cdn.models.ValidateProbeInput&text=ValidateProbeInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract ValidateProbeOutputInner validateProbe(ValidateProbeInput validateProbeInput)"
  desc: "Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative to the origin path specified in the endpoint configuration."
  returns:
    description: "output of the validate probe API."
    type: "<xref href=\"com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner&text=ValidateProbeOutputInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbeAsync(com.azure.resourcemanager.cdn.models.ValidateProbeInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbeAsync(ValidateProbeInput validateProbeInput)"
  name: "validateProbeAsync(ValidateProbeInput validateProbeInput)"
  nameWithType: "CdnManagementClient.validateProbeAsync(ValidateProbeInput validateProbeInput)"
  summary: "Check if the probe path is a valid path and the file can be accessed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "validateProbeInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ValidateProbeInput?alt=com.azure.resourcemanager.cdn.models.ValidateProbeInput&text=ValidateProbeInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<ValidateProbeOutputInner> validateProbeAsync(ValidateProbeInput validateProbeInput)"
  desc: "Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative to the origin path specified in the endpoint configuration."
  returns:
    description: "output of the validate probe API on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner&text=ValidateProbeOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbeWithResponse(com.azure.resourcemanager.cdn.models.ValidateProbeInput,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbeWithResponse(ValidateProbeInput validateProbeInput, Context context)"
  name: "validateProbeWithResponse(ValidateProbeInput validateProbeInput, Context context)"
  nameWithType: "CdnManagementClient.validateProbeWithResponse(ValidateProbeInput validateProbeInput, Context context)"
  summary: "Check if the probe path is a valid path and the file can be accessed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "validateProbeInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ValidateProbeInput?alt=com.azure.resourcemanager.cdn.models.ValidateProbeInput&text=ValidateProbeInput\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ValidateProbeOutputInner> validateProbeWithResponse(ValidateProbeInput validateProbeInput, Context context)"
  desc: "Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative to the origin path specified in the endpoint configuration."
  returns:
    description: "output of the validate probe API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner&text=ValidateProbeOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbeWithResponseAsync(com.azure.resourcemanager.cdn.models.ValidateProbeInput)"
  fullName: "com.azure.resourcemanager.cdn.fluent.CdnManagementClient.validateProbeWithResponseAsync(ValidateProbeInput validateProbeInput)"
  name: "validateProbeWithResponseAsync(ValidateProbeInput validateProbeInput)"
  nameWithType: "CdnManagementClient.validateProbeWithResponseAsync(ValidateProbeInput validateProbeInput)"
  summary: "Check if the probe path is a valid path and the file can be accessed."
  modifiers:
  - "abstract"
  parameters:
  - description: "Input to check."
    name: "validateProbeInput"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ValidateProbeInput?alt=com.azure.resourcemanager.cdn.models.ValidateProbeInput&text=ValidateProbeInput\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<ValidateProbeOutputInner>> validateProbeWithResponseAsync(ValidateProbeInput validateProbeInput)"
  desc: "Check if the probe path is a valid path and the file can be accessed. Probe path is the path to a file hosted on the origin server to help accelerate the delivery of dynamic content via the CDN endpoint. This path is relative to the origin path specified in the endpoint configuration."
  returns:
    description: "output of the validate probe API along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner?alt=com.azure.resourcemanager.cdn.fluent.models.ValidateProbeOutputInner&text=ValidateProbeOutputInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "The interface for CdnManagementClient class."
metadata: {}
package: "com.azure.resourcemanager.cdn.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-cdn:2.19.0
