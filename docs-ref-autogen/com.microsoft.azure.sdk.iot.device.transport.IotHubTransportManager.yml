### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager"
fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager"
name: "IotHubTransportManager"
nameWithType: "IotHubTransportManager"
summary: "An interface for an simple and synchronous IoT Hub transport."
syntax: "public interface IotHubTransportManager"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.close()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.close()"
  name: "close()"
  nameWithType: "IotHubTransportManager.close()"
  summary: "Closes all resources used to communicate with an IoT Hub."
  modifiers:
  - "abstract"
  syntax: "public abstract void close()"
  exceptions:
  - description: "if an error occurs in closing the transport."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Closes all resources used to communicate with an IoT Hub. Once `close()` is called, the transport is no longer usable. If the transport is already closed, the function shall do nothing."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.open()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.open()"
  name: "open()"
  nameWithType: "IotHubTransportManager.open()"
  summary: "Establishes a communication channel with an IoT Hub."
  modifiers:
  - "abstract"
  syntax: "public abstract void open()"
  exceptions:
  - description: "if a communication channel cannot be established."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Establishes a communication channel with an IoT Hub. If a channel is already open, the function shall do nothing."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.open(java.lang.String[])"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.open(String[] topics)"
  name: "open(String[] topics)"
  nameWithType: "IotHubTransportManager.open(String[] topics)"
  summary: "Establishes a communication channel with an IoT Hub for a specific set of topics."
  modifiers:
  - "abstract"
  parameters:
  - description: "is a list of topics to signed in."
    name: "topics"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract void open(String[] topics)"
  exceptions:
  - description: "if a communication channel cannot be established."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Establishes a communication channel with an IoT Hub for a specific set of topics. If a channel is already open, the function shall do nothing."
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.receive()"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.receive()"
  name: "receive()"
  nameWithType: "IotHubTransportManager.receive()"
  summary: "Synchronously receive message from the IoT Hub."
  modifiers:
  - "abstract"
  syntax: "public abstract Message receive()"
  exceptions:
  - description: "if an error occurs in receiving a message."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Synchronously receive message from the IoT Hub."
  returns:
    description: "the received message. If there is no new message, it will return null."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.Message?alt=com.microsoft.azure.sdk.iot.device.Message&text=Message\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.send(com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage,java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.microsoft.azure.sdk.iot.device.transport.IotHubTransportManager.send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  name: "send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  nameWithType: "IotHubTransportManager.send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  summary: "Synchronously send a message to the IoT Hub."
  modifiers:
  - "abstract"
  parameters:
  - description: "is the message to send."
    name: "message"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage?alt=com.microsoft.azure.sdk.iot.device.transport.IotHubTransportMessage&text=IotHubTransportMessage\" data-throw-if-not-resolved=\"False\" />"
  - description: "any extra headers to include"
    name: "additionalHeaders"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ResponseMessage send(IotHubTransportMessage message, Map<String,String> additionalHeaders)"
  exceptions:
  - description: "if an error occurs in sending a message."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Synchronously send a message to the IoT Hub. And return the response with the status and message."
  returns:
    description: "the response from IoT Hub, including status and message."
    type: "<xref href=\"com.microsoft.azure.sdk.iot.device.ResponseMessage?alt=com.microsoft.azure.sdk.iot.device.ResponseMessage&text=ResponseMessage\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An interface for an simple and synchronous IoT Hub transport."
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.transport"
artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.30.1
