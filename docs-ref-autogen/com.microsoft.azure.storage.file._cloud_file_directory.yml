### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.file._cloud_file_directory
  id: _cloud_file_directory
  parent: com.microsoft.azure.storage.file
  children:
  - com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final StorageUri)
  - com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final StorageUri,final StorageCredentials)
  - com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final StorageUri,final String,final CloudFileShare)
  - com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final URI)
  - com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final URI,final StorageCredentials)
  - com.microsoft.azure.storage.file._cloud_file_directory.create()
  - com.microsoft.azure.storage.file._cloud_file_directory.create(FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.createIfNotExists()
  - com.microsoft.azure.storage.file._cloud_file_directory.createIfNotExists(FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.delete()
  - com.microsoft.azure.storage.file._cloud_file_directory.delete(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.deleteIfExists()
  - com.microsoft.azure.storage.file._cloud_file_directory.deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes()
  - com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.exists()
  - com.microsoft.azure.storage.file._cloud_file_directory.exists(final AccessCondition,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.getDirectoryReference(final String)
  - com.microsoft.azure.storage.file._cloud_file_directory.getFileReference(final String)
  - com.microsoft.azure.storage.file._cloud_file_directory.getMetadata()
  - com.microsoft.azure.storage.file._cloud_file_directory.getName()
  - com.microsoft.azure.storage.file._cloud_file_directory.getParent()
  - com.microsoft.azure.storage.file._cloud_file_directory.getProperties()
  - com.microsoft.azure.storage.file._cloud_file_directory.getServiceClient()
  - com.microsoft.azure.storage.file._cloud_file_directory.getShare()
  - com.microsoft.azure.storage.file._cloud_file_directory.getStorageUri()
  - com.microsoft.azure.storage.file._cloud_file_directory.getUri()
  - com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories()
  - com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories(FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories(String,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented()
  - com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented(final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented(final String,final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  - com.microsoft.azure.storage.file._cloud_file_directory.setMetadata(HashMap<String, String>)
  - com.microsoft.azure.storage.file._cloud_file_directory.setProperties(final FileDirectoryProperties)
  - com.microsoft.azure.storage.file._cloud_file_directory.setShare(final CloudFileShare)
  - com.microsoft.azure.storage.file._cloud_file_directory.setStorageUri(final StorageUri)
  - com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata()
  - com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory
  type: Class
  source:
    remote: &o0
      path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 55
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Represents a virtual directory of files. </p>

    <p>Directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, hold files and can also contain sub-directories. </p>
  syntax: &o1
    content: public class CloudFileDirectory implements ListFileItem
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.storage.file._list_file_item
- uid: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final StorageUri)
  id: CloudFileDirectory(final StorageUri)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: CloudFileDirectory(final StorageUri directoryAbsoluteUri)
  nameWithType: CloudFileDirectory.CloudFileDirectory(final StorageUri directoryAbsoluteUri)
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final StorageUri directoryAbsoluteUri)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 109
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using an absolute URI to the directory.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory(final StorageUri directoryAbsoluteUri)
    parameters:
    - id: directoryAbsoluteUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> that represents the file directory's address. </p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
- uid: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final StorageUri,final StorageCredentials)
  id: CloudFileDirectory(final StorageUri,final StorageCredentials)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: CloudFileDirectory(final StorageUri directoryAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudFileDirectory.CloudFileDirectory(final StorageUri directoryAbsoluteUri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final StorageUri directoryAbsoluteUri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 138
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using an absolute URI to the directory and credentials.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory(final StorageUri directoryAbsoluteUri, final StorageCredentials credentials)
    parameters:
    - id: directoryAbsoluteUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> that represents the file directory's address. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage._storage_credentials
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_credentials" data-throw-if-not-resolved="false">StorageCredentials</xref> object used to authenticate access. </p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
- uid: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final StorageUri,final String,final CloudFileShare)
  id: CloudFileDirectory(final StorageUri,final String,final CloudFileShare)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: CloudFileDirectory(final StorageUri uri, final String directoryName, final CloudFileShare share)
  nameWithType: CloudFileDirectory.CloudFileDirectory(final StorageUri uri, final String directoryName, final CloudFileShare share)
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final StorageUri uri, final String directoryName, final CloudFileShare share)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 154
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using the specified address, share, and client.</p>

    <p></p>
  syntax:
    content: protected CloudFileDirectory(final StorageUri uri, final String directoryName, final CloudFileShare share)
    parameters:
    - id: uri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> that represents the file directory's address. </p>
    - id: directoryName
      type: 3d93591e
      description: <p>A <code>String</code> that represents the name of the directory. </p>
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false">CloudFileShare</xref> object that represents the associated file share. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final URI)
  id: CloudFileDirectory(final URI)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: CloudFileDirectory(final URI directoryAbsoluteUri)
  nameWithType: CloudFileDirectory.CloudFileDirectory(final URI directoryAbsoluteUri)
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final URI directoryAbsoluteUri)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 98
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using an absolute URI to the directory.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory(final URI directoryAbsoluteUri)
    parameters:
    - id: directoryAbsoluteUri
      type: bac42120
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">URI</xref> that represents the file directory's address. </p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
- uid: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory(final URI,final StorageCredentials)
  id: CloudFileDirectory(final URI,final StorageCredentials)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: CloudFileDirectory(final URI directoryAbsoluteUri, final StorageCredentials credentials)
  nameWithType: CloudFileDirectory.CloudFileDirectory(final URI directoryAbsoluteUri, final StorageCredentials credentials)
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory(final URI directoryAbsoluteUri, final StorageCredentials credentials)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory*
  type: Constructor
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 123
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates an instance of the  class using an absolute URI to the directory and credentials.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory(final URI directoryAbsoluteUri, final StorageCredentials credentials)
    parameters:
    - id: directoryAbsoluteUri
      type: bac42120
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">URI</xref> that represents the file directory's address. </p>
    - id: credentials
      type: 93de0ef9com.microsoft.azure.storage._storage_credentials
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_credentials" data-throw-if-not-resolved="false">StorageCredentials</xref> object used to authenticate access. </p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
- uid: com.microsoft.azure.storage.file._cloud_file_directory.create()
  id: create()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: create()
  nameWithType: CloudFileDirectory.create()
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.create()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 172
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the directory.</p>

    <p></p>
  syntax:
    content: public void create()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.create(FileRequestOptions,OperationContext)
  id: create(FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: create(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.create(FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.create(FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.create*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 192
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the directory using the specified options and operation context.</p>

    <p></p>
  syntax:
    content: public void create(FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.createIfNotExists()
  id: createIfNotExists()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: createIfNotExists()
  nameWithType: CloudFileDirectory.createIfNotExists()
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.createIfNotExists()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.createIfNotExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 258
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the directory if it does not exist.</p>

    <p></p>
  syntax:
    content: public boolean createIfNotExists()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the directory did not already exist and was created; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.createIfNotExists(FileRequestOptions,OperationContext)
  id: createIfNotExists(FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: createIfNotExists(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.createIfNotExists(FileRequestOptions options, OperationContext opContext)
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.createIfNotExists(FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.createIfNotExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 280
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Creates the directory if it does not exist, using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public boolean createIfNotExists(FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client (<xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the directory did not already exist and was created; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.delete()
  id: delete()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: delete()
  nameWithType: CloudFileDirectory.delete()
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.delete()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 313
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the directory.</p>

    <p></p>
  syntax:
    content: public void delete()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.delete(AccessCondition,FileRequestOptions,OperationContext)
  id: delete(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.delete*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 335
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the directory using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public void delete(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the directory. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.deleteIfExists()
  id: deleteIfExists()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: deleteIfExists()
  nameWithType: CloudFileDirectory.deleteIfExists()
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.deleteIfExists()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 390
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the directory if it exists.</p>

    <p></p>
  syntax:
    content: public boolean deleteIfExists()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the directory did not already exist and was created; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
  id: deleteIfExists(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.deleteIfExists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 414
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Deletes the directory if it exists using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public boolean deleteIfExists(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the directory. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the directory existed and was deleted; otherwise, <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes()
  id: downloadAttributes()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: downloadAttributes()
  nameWithType: CloudFileDirectory.downloadAttributes()
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.downloadAttributes()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 648
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the directory's properties.</p>

    <p></p>
  syntax: &o2
    content: public void downloadAttributes()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
  id: downloadAttributes(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 670
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Downloads the directory's properties using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public void downloadAttributes(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the directory. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.exists()
  id: exists()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: exists()
  nameWithType: CloudFileDirectory.exists()
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.exists()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 448
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a value that indicates whether the directory exists.</p>

    <p></p>
  syntax:
    content: public boolean exists()
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the directory exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.exists(final AccessCondition,FileRequestOptions,OperationContext)
  id: exists(final AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.exists*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 473
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a value that indicates whether the directory exists, using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public boolean exists(final AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: 93de0ef9com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the share. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 4fc6e284
      description: >-
        <p>

          <code>true</code> if the directory exists, otherwise <code>false</code>.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getDirectoryReference(final String)
  id: getDirectoryReference(final String)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getDirectoryReference(final String itemName)
  nameWithType: CloudFileDirectory.getDirectoryReference(final String itemName)
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.CloudFileDirectory.getDirectoryReference(final String itemName)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getDirectoryReference*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 997
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> object that represents a directory in this directory.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory getDirectoryReference(final String itemName)
    parameters:
    - id: itemName
      type: 3d93591e
      description: <p>A <code>String</code> that represents the name of the directory.</p>
    return:
      type: com.microsoft.azure.storage.file._cloud_file_directory
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> object that represents a reference to the specified directory.</p>
  exceptions:
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
  - type: com.microsoft.azure.storage._storage_exception
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getFileReference(final String)
  id: getFileReference(final String)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getFileReference(final String fileName)
  nameWithType: CloudFileDirectory.getFileReference(final String fileName)
  fullName: CloudFile com.microsoft.azure.storage.file.CloudFileDirectory.getFileReference(final String fileName)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getFileReference*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 978
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a reference to a <xref uid="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false">CloudFile</xref> object that represents a file in this directory.</p>

    <p></p>
  syntax:
    content: public CloudFile getFileReference(final String fileName)
    parameters:
    - id: fileName
      type: 3d93591e
      description: <p>A <code>String</code> that represents the name of the file.</p>
    return:
      type: com.microsoft.azure.storage.file._cloud_file
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file" data-throw-if-not-resolved="false">CloudFile</xref> object that represents a reference to the specified file.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getMetadata()
  id: getMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getMetadata()
  nameWithType: CloudFileDirectory.getMetadata()
  fullName: HashMap<String, String> com.microsoft.azure.storage.file.CloudFileDirectory.getMetadata()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1049
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the metadata for the directory. This value is initialized with the metadata from the directory by a call to <xref uid="com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes()" data-throw-if-not-resolved="false">downloadAttributes</xref>, and is set on the directory with a call to <xref uid="com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata()" data-throw-if-not-resolved="false">uploadMetadata</xref>.</p>

    <p></p>
  syntax:
    content: public HashMap<String, String> getMetadata()
    return:
      type: 3970a053
      description: <p>A <code>java.util.HashMap</code> object that represents the metadata for the directory. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getName()
  id: getName()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getName()
  nameWithType: CloudFileDirectory.getName()
  fullName: String com.microsoft.azure.storage.file.CloudFileDirectory.getName()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getName*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1039
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the name of this directory.</p>

    <p></p>
  syntax:
    content: public String getName()
    return:
      type: "26831127"
      description: <p>An <code>String</code> that represents the name of the directory. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getParent()
  id: getParent()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getParent()
  nameWithType: CloudFileDirectory.getParent()
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.CloudFileDirectory.getParent()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getParent*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1071
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> parent directory associated with this directory.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory getParent()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_directory
      description: <p>An <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> object that represents the parent directory associated with the directory. </p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getParent()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
  - type: "44102508"
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getProperties()
  id: getProperties()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getProperties()
  nameWithType: CloudFileDirectory.getProperties()
  fullName: FileDirectoryProperties com.microsoft.azure.storage.file.CloudFileDirectory.getProperties()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1059
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the <xref uid="com.microsoft.azure.storage.file._file_directory_properties" data-throw-if-not-resolved="false">FileDirectoryProperties</xref> object that holds the directory's system properties.</p>

    <p></p>
  syntax:
    content: public FileDirectoryProperties getProperties()
    return:
      type: com.microsoft.azure.storage.file._file_directory_properties
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_directory_properties" data-throw-if-not-resolved="false">FileDirectoryProperties</xref> object that holds the system properties associated with the directory. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getServiceClient()
  id: getServiceClient()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getServiceClient()
  nameWithType: CloudFileDirectory.getServiceClient()
  fullName: CloudFileClient com.microsoft.azure.storage.file.CloudFileDirectory.getServiceClient()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getServiceClient*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1030
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the File service client associated with this directory.</p>

    <p></p>
  syntax:
    content: public CloudFileClient getServiceClient()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_client
      description: <p>An <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref> object that represents the service client associated with the directory. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getShare()
  id: getShare()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getShare()
  nameWithType: CloudFileDirectory.getShare()
  fullName: CloudFileShare com.microsoft.azure.storage.file.CloudFileDirectory.getShare()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getShare*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1095
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the share for this directory.</p>

    <p></p>
  syntax:
    content: public CloudFileShare getShare()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false">CloudFileShare</xref> that represents the share for this directory.</p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getShare()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getStorageUri()
  id: getStorageUri()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getStorageUri()
  nameWithType: CloudFileDirectory.getStorageUri()
  fullName: final StorageUri com.microsoft.azure.storage.file.CloudFileDirectory.getStorageUri()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getStorageUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1021
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the list of URIs for all locations.</p>

    <p></p>
  syntax:
    content: public final StorageUri getStorageUri()
    return:
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> that represents the list of URIs for all locations. </p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getStorageUri()
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getUri()
  id: getUri()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: getUri()
  nameWithType: CloudFileDirectory.getUri()
  fullName: URI com.microsoft.azure.storage.file.CloudFileDirectory.getUri()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.getUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1011
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns the URI for this directory.</p>

    <p></p>
  syntax:
    content: public URI getUri()
    return:
      type: "62304784"
      description: <p>A <code>java.net.URI</code> object that represents the URI for this directory. </p>
  overridden: com.microsoft.azure.storage.file._list_file_item.getUri()
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories()
  id: listFilesAndDirectories()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: listFilesAndDirectories()
  nameWithType: CloudFileDirectory.listFilesAndDirectories()
  fullName: Iterable<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectories()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 734
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns an enumerable collection of file and directory items for the directory.</p>

    <p></p>
  syntax:
    content: public Iterable<ListFileItem> listFilesAndDirectories()
    return:
      type: 2a13b5a5com.microsoft.azure.storage.file._list_file_itema08ddfce
      description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.file._list_file_item" data-throw-if-not-resolved="false">ListFileItem</xref> objects that represent the file and directory items in this directory. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories(FileRequestOptions,OperationContext)
  id: listFilesAndDirectories(FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: listFilesAndDirectories(FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.listFilesAndDirectories(FileRequestOptions options, OperationContext opContext)
  fullName: Iterable<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectories(FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 759
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns an enumerable collection of file and directory items for the directory.</p>

    <p></p>
  syntax:
    content: public Iterable<ListFileItem> listFilesAndDirectories(FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 2a13b5a5com.microsoft.azure.storage.file._list_file_itema08ddfce
      description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.file._list_file_item" data-throw-if-not-resolved="false">ListFileItem</xref> objects that represent the file and directory items in this directory.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories(String,FileRequestOptions,OperationContext)
  id: listFilesAndDirectories(String,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: listFilesAndDirectories(String prefix, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.listFilesAndDirectories(String prefix, FileRequestOptions options, OperationContext opContext)
  fullName: Iterable<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectories(String prefix, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 786
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns an enumerable collection of file and directory items for the directory.</p>

    <p></p>
  syntax:
    content: public Iterable<ListFileItem> listFilesAndDirectories(String prefix, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: prefix
      type: "26831127"
      description: <p>A string containing the file or directory name prefix. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: 2a13b5a5com.microsoft.azure.storage.file._list_file_itema08ddfce
      description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.file._list_file_item" data-throw-if-not-resolved="false">ListFileItem</xref> objects that represent the file and directory items in this directory.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
  - type: "44102508"
    description: <p>If the resource URI is invalid. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented()
  id: listFilesAndDirectoriesSegmented()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: listFilesAndDirectoriesSegmented()
  nameWithType: CloudFileDirectory.listFilesAndDirectoriesSegmented()
  fullName: ResultSegment<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectoriesSegmented()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 811
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a result segment of an enumerable collection of files and directories for this File service client.</p>

    <p></p>
  syntax:
    content: public ResultSegment<ListFileItem> listFilesAndDirectoriesSegmented()
    return:
      type: com.microsoft.azure.storage._result_segment78504a52com.microsoft.azure.storage.file._list_file_itema08ddfce
      description: <p>A <xref uid="com.microsoft.azure.storage._result_segment" data-throw-if-not-resolved="false">ResultSegment</xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.file._list_file_item" data-throw-if-not-resolved="false">ListFileItem</xref> objects that represent the files and directories. </p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented(final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  id: listFilesAndDirectoriesSegmented(final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: listFilesAndDirectoriesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.listFilesAndDirectoriesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  fullName: ResultSegment<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectoriesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 842
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a result segment of an enumerable collection of files and directories for this directory, using the specified listing details options, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public ResultSegment<ListFileItem> listFilesAndDirectoriesSegmented(final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: maxResults
      type: 3437983f
      description: <p>The maximum number of results to retrieve. If <code>null</code> or greater than 5000, the server will return up to 5,000 items. Must be at least 1. </p>
    - id: continuationToken
      type: 93de0ef9com.microsoft.azure.storage._result_continuation
      description: <p>A <xref uid="com.microsoft.azure.storage._result_continuation" data-throw-if-not-resolved="false">ResultContinuation</xref> object that represents a continuation token returned by a previous listing operation. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage._result_segment78504a52com.microsoft.azure.storage.file._list_file_itema08ddfce
      description: <p>A <xref uid="com.microsoft.azure.storage._result_segment" data-throw-if-not-resolved="false">ResultSegment</xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.file._list_file_item" data-throw-if-not-resolved="false">ListFileItem</xref> objects that represent the files and directories in this directory.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented(final String,final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  id: listFilesAndDirectoriesSegmented(final String,final Integer,final ResultContinuation,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: listFilesAndDirectoriesSegmented(final String prefix, final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.listFilesAndDirectoriesSegmented(final String prefix, final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  fullName: ResultSegment<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectoriesSegmented(final String prefix, final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 876
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Returns a result segment of an enumerable collection of files and directories for this directory, using the specified listing details options, request options, and operation context.</p>

    <p></p>
  syntax:
    content: public ResultSegment<ListFileItem> listFilesAndDirectoriesSegmented(final String prefix, final Integer maxResults, final ResultContinuation continuationToken, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: prefix
      type: 3d93591e
      description: <p>A string containing the file or directory name prefix. </p>
    - id: maxResults
      type: 3437983f
      description: <p>The maximum number of results to retrieve. If <code>null</code> or greater than 5000, the server will return up to 5,000 items. Must be at least 1. </p>
    - id: continuationToken
      type: 93de0ef9com.microsoft.azure.storage._result_continuation
      description: <p>A <xref uid="com.microsoft.azure.storage._result_continuation" data-throw-if-not-resolved="false">ResultContinuation</xref> object that represents a continuation token returned by a previous listing operation. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    return:
      type: com.microsoft.azure.storage._result_segment78504a52com.microsoft.azure.storage.file._list_file_itema08ddfce
      description: <p>A <xref uid="com.microsoft.azure.storage._result_segment" data-throw-if-not-resolved="false">ResultSegment</xref> object that contains a segment of the enumerable collection of <xref uid="com.microsoft.azure.storage.file._list_file_item" data-throw-if-not-resolved="false">ListFileItem</xref> objects that represent the files and directories in this directory.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setMetadata(HashMap<String, String>)
  id: setMetadata(HashMap<String, String>)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: setMetadata(HashMap<String, String> metadata)
  nameWithType: CloudFileDirectory.setMetadata(HashMap<String, String> metadata)
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.setMetadata(HashMap<String, String> metadata)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.setMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1111
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the metadata collection of name-value pairs to be set on the directory with an <xref uid="com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata()" data-throw-if-not-resolved="false">uploadMetadata</xref> call. This collection will overwrite any existing directory metadata. If this is set to an empty collection, the directory metadata will be cleared on an <xref uid="com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata()" data-throw-if-not-resolved="false">uploadMetadata</xref> call.</p>

    <p></p>
  syntax:
    content: public void setMetadata(HashMap<String, String> metadata)
    parameters:
    - id: metadata
      type: 3970a053
      description: <p>A <code>java.util.HashMap</code> object that represents the metadata being assigned to the directory. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setProperties(final FileDirectoryProperties)
  id: setProperties(final FileDirectoryProperties)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: setProperties(final FileDirectoryProperties properties)
  nameWithType: CloudFileDirectory.setProperties(final FileDirectoryProperties properties)
  fullName: final void com.microsoft.azure.storage.file.CloudFileDirectory.setProperties(final FileDirectoryProperties properties)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.setProperties*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1132
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the properties for the directory.</p>

    <p></p>
  syntax:
    content: protected final void setProperties(final FileDirectoryProperties properties)
    parameters:
    - id: properties
      type: 93de0ef9com.microsoft.azure.storage.file._file_directory_properties
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_directory_properties" data-throw-if-not-resolved="false">FileDirectoryProperties</xref> object that represents the properties being assigned to the directory. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setShare(final CloudFileShare)
  id: setShare(final CloudFileShare)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: setShare(final CloudFileShare share)
  nameWithType: CloudFileDirectory.setShare(final CloudFileShare share)
  fullName: final void com.microsoft.azure.storage.file.CloudFileDirectory.setShare(final CloudFileShare share)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.setShare*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1121
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the share for the directory.</p>

    <p></p>
  syntax:
    content: protected final void setShare(final CloudFileShare share)
    parameters:
    - id: share
      type: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false">CloudFileShare</xref> object that represents the share being assigned to the directory. </p>
    return:
      type: 3f6357ce
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setStorageUri(final StorageUri)
  id: setStorageUri(final StorageUri)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: setStorageUri(final StorageUri storageUri)
  nameWithType: CloudFileDirectory.setStorageUri(final StorageUri storageUri)
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.setStorageUri(final StorageUri storageUri)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.setStorageUri*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 1142
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Sets the list of URIs for all locations.</p>

    <p></p>
  syntax:
    content: protected void setStorageUri(final StorageUri storageUri)
    parameters:
    - id: storageUri
      type: 93de0ef9com.microsoft.azure.storage._storage_uri
      description: <p>A <xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref> that represents the list of URIs for all locations. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata()
  id: uploadMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: uploadMetadata()
  nameWithType: CloudFileDirectory.uploadMetadata()
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata()
  overload: com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 564
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the directory's metadata.</p>

    <p></p>
  syntax: &o3
    content: public void uploadMetadata()
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
  id: uploadMetadata(AccessCondition,FileRequestOptions,OperationContext)
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  langs:
  - java
  name: uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  nameWithType: CloudFileDirectory.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
  overload: com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata*
  type: Method
  source:
    remote: *o0
    path: microsoft-azure-storage/src/com/microsoft/azure/storage/file/CloudFileDirectory.java
    startLine: 586
  package: com.microsoft.azure.storage.file
  summary: >-
    <p>Uploads the directory's metadata using the specified request options and operation context.</p>

    <p></p>
  syntax:
    content: public void uploadMetadata(AccessCondition accessCondition, FileRequestOptions options, OperationContext opContext)
    parameters:
    - id: accessCondition
      type: com.microsoft.azure.storage._access_condition
      description: <p>An <xref uid="com.microsoft.azure.storage._access_condition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the directory. </p>
    - id: options
      type: com.microsoft.azure.storage.file._file_request_options
      description: <p>A <xref uid="com.microsoft.azure.storage.file._file_request_options" data-throw-if-not-resolved="false">FileRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.file._cloud_file_client" data-throw-if-not-resolved="false">CloudFileClient</xref>). </p>
    - id: opContext
      type: com.microsoft.azure.storage._operation_context
      description: <p>An <xref uid="com.microsoft.azure.storage._operation_context" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
  exceptions:
  - type: com.microsoft.azure.storage._storage_exception
    description: <p>If a storage service error occurred. </p>
references:
- uid: bac42120
  spec.java:
  - name: final URI
    fullName: final URI
- uid: com.microsoft.azure.storage.file._cloud_file_directory.CloudFileDirectory*
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory.CloudFileDirectory
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory.CloudFileDirectory
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage._storage_uri
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._storage_uri
    name: StorageUri
    fullName: com.microsoft.azure.storage.StorageUri
    href: com.microsoft.azure.storage._storage_uri.yml
- uid: 93de0ef9com.microsoft.azure.storage._storage_credentials
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._storage_credentials
    name: StorageCredentials
    fullName: com.microsoft.azure.storage.StorageCredentials
    href: com.microsoft.azure.storage._storage_credentials.yml
- uid: com.microsoft.azure.storage.file._cloud_file_directory.create*
  name: create
  nameWithType: CloudFileDirectory.create
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.create
  package: com.microsoft.azure.storage.file
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.storage.file._cloud_file_directory.createIfNotExists*
  name: createIfNotExists
  nameWithType: CloudFileDirectory.createIfNotExists
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.createIfNotExists
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.delete*
  name: delete
  nameWithType: CloudFileDirectory.delete
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.delete
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.deleteIfExists*
  name: deleteIfExists
  nameWithType: CloudFileDirectory.deleteIfExists
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.deleteIfExists
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.exists*
  name: exists
  nameWithType: CloudFileDirectory.exists
  fullName: boolean com.microsoft.azure.storage.file.CloudFileDirectory.exists
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage._access_condition
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._access_condition
    name: AccessCondition
    fullName: com.microsoft.azure.storage.AccessCondition
    href: com.microsoft.azure.storage._access_condition.yml
- uid: com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata*
  name: uploadMetadata
  nameWithType: CloudFileDirectory.uploadMetadata
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes*
  name: downloadAttributes
  nameWithType: CloudFileDirectory.downloadAttributes
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.downloadAttributes
  package: com.microsoft.azure.storage.file
- uid: 2a13b5a5com.microsoft.azure.storage.file._list_file_itema08ddfce
  spec.java:
  - name: Iterable<
    fullName: Iterable<
  - uid: com.microsoft.azure.storage.file._list_file_item
    name: ListFileItem
    fullName: com.microsoft.azure.storage.file.ListFileItem
    href: com.microsoft.azure.storage.file._list_file_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectories*
  name: listFilesAndDirectories
  nameWithType: CloudFileDirectory.listFilesAndDirectories
  fullName: Iterable<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectories
  package: com.microsoft.azure.storage.file
- uid: "44102508"
  spec.java:
  - name: URISyntaxException
    fullName: URISyntaxException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.storage._result_segment78504a52com.microsoft.azure.storage.file._list_file_itema08ddfce
  spec.java:
  - uid: com.microsoft.azure.storage._result_segment
    name: ResultSegment
    fullName: com.microsoft.azure.storage.ResultSegment
    href: com.microsoft.azure.storage._result_segment.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.storage.file._list_file_item
    name: ListFileItem
    fullName: com.microsoft.azure.storage.file.ListFileItem
    href: com.microsoft.azure.storage.file._list_file_item.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.storage.file._cloud_file_directory.listFilesAndDirectoriesSegmented*
  name: listFilesAndDirectoriesSegmented
  nameWithType: CloudFileDirectory.listFilesAndDirectoriesSegmented
  fullName: ResultSegment<ListFileItem> com.microsoft.azure.storage.file.CloudFileDirectory.listFilesAndDirectoriesSegmented
  package: com.microsoft.azure.storage.file
- uid: 3437983f
  spec.java:
  - name: final Integer
    fullName: final Integer
- uid: 93de0ef9com.microsoft.azure.storage._result_continuation
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage._result_continuation
    name: ResultContinuation
    fullName: com.microsoft.azure.storage.ResultContinuation
    href: com.microsoft.azure.storage._result_continuation.yml
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getFileReference*
  name: getFileReference
  nameWithType: CloudFileDirectory.getFileReference
  fullName: CloudFile com.microsoft.azure.storage.file.CloudFileDirectory.getFileReference
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getDirectoryReference*
  name: getDirectoryReference
  nameWithType: CloudFileDirectory.getDirectoryReference
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.CloudFileDirectory.getDirectoryReference
  package: com.microsoft.azure.storage.file
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getUri*
  name: getUri
  nameWithType: CloudFileDirectory.getUri
  fullName: URI com.microsoft.azure.storage.file.CloudFileDirectory.getUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getStorageUri*
  name: getStorageUri
  nameWithType: CloudFileDirectory.getStorageUri
  fullName: final StorageUri com.microsoft.azure.storage.file.CloudFileDirectory.getStorageUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getServiceClient*
  name: getServiceClient
  nameWithType: CloudFileDirectory.getServiceClient
  fullName: CloudFileClient com.microsoft.azure.storage.file.CloudFileDirectory.getServiceClient
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getName*
  name: getName
  nameWithType: CloudFileDirectory.getName
  fullName: String com.microsoft.azure.storage.file.CloudFileDirectory.getName
  package: com.microsoft.azure.storage.file
- uid: 3970a053
  spec.java:
  - name: HashMap<String, String>
    fullName: HashMap<String, String>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getMetadata*
  name: getMetadata
  nameWithType: CloudFileDirectory.getMetadata
  fullName: HashMap<String, String> com.microsoft.azure.storage.file.CloudFileDirectory.getMetadata
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getProperties*
  name: getProperties
  nameWithType: CloudFileDirectory.getProperties
  fullName: FileDirectoryProperties com.microsoft.azure.storage.file.CloudFileDirectory.getProperties
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getParent*
  name: getParent
  nameWithType: CloudFileDirectory.getParent
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.CloudFileDirectory.getParent
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.getShare*
  name: getShare
  nameWithType: CloudFileDirectory.getShare
  fullName: CloudFileShare com.microsoft.azure.storage.file.CloudFileDirectory.getShare
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setMetadata*
  name: setMetadata
  nameWithType: CloudFileDirectory.setMetadata
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.setMetadata
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._cloud_file_share
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._cloud_file_share
    name: CloudFileShare
    fullName: com.microsoft.azure.storage.file.CloudFileShare
    href: com.microsoft.azure.storage.file._cloud_file_share.yml
- uid: 3f6357ce
  spec.java:
  - name: final void
    fullName: final void
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setShare*
  name: setShare
  nameWithType: CloudFileDirectory.setShare
  fullName: final void com.microsoft.azure.storage.file.CloudFileDirectory.setShare
  package: com.microsoft.azure.storage.file
- uid: 93de0ef9com.microsoft.azure.storage.file._file_directory_properties
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.azure.storage.file._file_directory_properties
    name: FileDirectoryProperties
    fullName: com.microsoft.azure.storage.file.FileDirectoryProperties
    href: com.microsoft.azure.storage.file._file_directory_properties.yml
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setProperties*
  name: setProperties
  nameWithType: CloudFileDirectory.setProperties
  fullName: final void com.microsoft.azure.storage.file.CloudFileDirectory.setProperties
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._cloud_file_directory.setStorageUri*
  name: setStorageUri
  nameWithType: CloudFileDirectory.setStorageUri
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.setStorageUri
  package: com.microsoft.azure.storage.file
- uid: com.microsoft.azure.storage.file._list_file_item
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: ListFileItem
  nameWithType: ListFileItem
  fullName: com.microsoft.azure.storage.file.ListFileItem
  type: Interface
  summary: <p>Represents an item that may be returned by a file listing operation. </p>
  syntax:
    content: public interface ListFileItem
- uid: com.microsoft.azure.storage.file._cloud_file_share
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_share.yml
  name: CloudFileShare
  nameWithType: CloudFileShare
  fullName: com.microsoft.azure.storage.file.CloudFileShare
  type: Class
  summary: >-
    <p>Represents a share in the Microsoft Azure File service. </p>

    <p>Shares hold directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, and directories hold files. Directories can also contain sub-directories. </p>
  syntax:
    content: public class CloudFileShare
- uid: com.microsoft.azure.storage.file._cloud_file_directory
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  name: CloudFileDirectory
  nameWithType: CloudFileDirectory
  fullName: com.microsoft.azure.storage.file.CloudFileDirectory
  type: Class
  summary: >-
    <p>Represents a virtual directory of files. </p>

    <p>Directories, which are encapsulated as <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> objects, hold files and can also contain sub-directories. </p>
  syntax: *o1
- uid: com.microsoft.azure.storage.file._cloud_file_client
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file_client.yml
  name: CloudFileClient
  nameWithType: CloudFileClient
  fullName: com.microsoft.azure.storage.file.CloudFileClient
  type: Class
  summary: >-
    <p>Provides a client for accessing the Microsoft Azure File service. </p>

    <p>This class provides a point of access to the File service. The service client encapsulates the base URI for the File service. It also encapsulates the credentials for accessing the storage account. </p>
  syntax:
    content: public class CloudFileClient extends ServiceClient
- uid: com.microsoft.azure.storage._storage_uri
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_uri.yml
  name: StorageUri
  nameWithType: StorageUri
  fullName: com.microsoft.azure.storage.StorageUri
  type: Class
  summary: <p>Holds a list of URIs that represents the storage resource. </p>
  syntax:
    content: public class StorageUri
- uid: com.microsoft.azure.storage.file._file_directory_properties
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_directory_properties.yml
  name: FileDirectoryProperties
  nameWithType: FileDirectoryProperties
  fullName: com.microsoft.azure.storage.file.FileDirectoryProperties
  type: Class
  summary: <p>Represents the system properties for a directory. </p>
  syntax:
    content: public class FileDirectoryProperties
- uid: com.microsoft.azure.storage._storage_exception
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_exception.yml
  name: StorageException
  nameWithType: StorageException
  fullName: com.microsoft.azure.storage.StorageException
  type: Class
  summary: <p>Represents an exception for the Microsoft Azure storage service. </p>
  syntax:
    content: public class StorageException
- uid: com.microsoft.azure.storage._storage_credentials
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._storage_credentials.yml
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: com.microsoft.azure.storage.StorageCredentials
  type: Class
  summary: <p>Represents a set of credentials used to authenticate access to a Microsoft Azure storage account. This is the base class for the <xref uid="com.microsoft.azure.storage._storage_credentials_account_and_key" data-throw-if-not-resolved="false">StorageCredentialsAccountAndKey</xref> and <xref uid="com.microsoft.azure.storage._storage_credentials_shared_access_signature" data-throw-if-not-resolved="false">StorageCredentialsSharedAccessSignature</xref> classes. </p>
  syntax:
    content: public class StorageCredentials
- uid: com.microsoft.azure.storage.file._file_request_options
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._file_request_options.yml
  name: FileRequestOptions
  nameWithType: FileRequestOptions
  fullName: com.microsoft.azure.storage.file.FileRequestOptions
  type: Class
  summary: <p>Represents a set of options that may be specified on a request. </p>
  syntax:
    content: public class FileRequestOptions
- uid: com.microsoft.azure.storage._operation_context
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._operation_context.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.azure.storage.OperationContext
  type: Class
  summary: <p>Represents the current logical operation. A logical operation may have a one-to-many relationship with multiple individual physical requests. </p>
  syntax:
    content: public class OperationContext
- uid: com.microsoft.azure.storage._access_condition
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._access_condition.yml
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: com.microsoft.azure.storage.AccessCondition
  type: Class
  summary: <p>Represents a set of access conditions to be used for operations against the storage services. </p>
  syntax:
    content: public class AccessCondition
- uid: com.microsoft.azure.storage._result_segment
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._result_segment.yml
  name: ResultSegment<T>
  nameWithType: ResultSegment<T>
  fullName: com.microsoft.azure.storage.ResultSegment<T>
  type: Class
  summary: >-
    <p>Represents a segment of results and contains continuation and pagination information.</p>

    <p></p>
  syntax:
    content: public class ResultSegment<T>
    typeParameters:
    - type: 8ce1ecb9
      description: <p>The type of the result that the segment contains. </p>
- uid: com.microsoft.azure.storage._result_continuation
  parent: com.microsoft.azure.storage
  href: com.microsoft.azure.storage._result_continuation.yml
  name: ResultContinuation
  nameWithType: ResultContinuation
  fullName: com.microsoft.azure.storage.ResultContinuation
  type: Class
  summary: <p>Represents a continuation token for listing operations. Continuation tokens are used in methods that return a <xref uid="com.microsoft.azure.storage._result_segment" data-throw-if-not-resolved="false">ResultSegment</xref> object, such as <xref uid="com.microsoft.azure.storage.blob._cloud_blob_directory.listBlobsSegmented()" data-throw-if-not-resolved="false">CloudBlobDirectory#listBlobsSegmented</xref>. </p>
  syntax:
    content: public class ResultContinuation
- uid: com.microsoft.azure.storage.file._cloud_file
  parent: com.microsoft.azure.storage.file
  href: com.microsoft.azure.storage.file._cloud_file.yml
  name: CloudFile
  nameWithType: CloudFile
  fullName: com.microsoft.azure.storage.file.CloudFile
  type: Class
  summary: <p>Represents a Microsoft Azure File. </p>
  syntax:
    content: public class CloudFile implements ListFileItem
- uid: com.microsoft.azure.storage.file._list_file_item.getUri()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getUri()
  nameWithType: ListFileItem.getUri()
  fullName: URI com.microsoft.azure.storage.file.ListFileItem.getUri()
  type: Method
  summary: >-
    <p>Returns the URI for the file item.</p>

    <p></p>
  syntax:
    content: public URI getUri()
    return:
      type: "62304784"
      description: <p>A <code>java.net.URI</code> object which represents the file item's URI. </p>
- uid: com.microsoft.azure.storage.file._list_file_item.getStorageUri()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getStorageUri()
  nameWithType: ListFileItem.getStorageUri()
  fullName: StorageUri com.microsoft.azure.storage.file.ListFileItem.getStorageUri()
  type: Method
  summary: >-
    <p>Returns the list of URIs for all storage locations of the file item.</p>

    <p></p>
  syntax:
    content: public StorageUri getStorageUri()
    return:
      type: com.microsoft.azure.storage._storage_uri
      description: <p>A <code><xref uid="com.microsoft.azure.storage._storage_uri" data-throw-if-not-resolved="false">StorageUri</xref></code> object which represents the file item's URI. </p>
- uid: com.microsoft.azure.storage.file._cloud_file_directory.downloadAttributes()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  name: downloadAttributes()
  nameWithType: CloudFileDirectory.downloadAttributes()
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.downloadAttributes()
  type: Method
  summary: >-
    <p>Downloads the directory's properties.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.storage.file._cloud_file_directory.uploadMetadata()
  parent: com.microsoft.azure.storage.file._cloud_file_directory
  href: com.microsoft.azure.storage.file._cloud_file_directory.yml
  name: uploadMetadata()
  nameWithType: CloudFileDirectory.uploadMetadata()
  fullName: void com.microsoft.azure.storage.file.CloudFileDirectory.uploadMetadata()
  type: Method
  summary: >-
    <p>Uploads the directory's metadata.</p>

    <p></p>
  syntax: *o3
- uid: com.microsoft.azure.storage.file._list_file_item.getParent()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getParent()
  nameWithType: ListFileItem.getParent()
  fullName: CloudFileDirectory com.microsoft.azure.storage.file.ListFileItem.getParent()
  type: Method
  summary: >-
    <p>Returns the parent for the file item.</p>

    <p></p>
  syntax:
    content: public CloudFileDirectory getParent()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_directory
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_directory" data-throw-if-not-resolved="false">CloudFileDirectory</xref> object which represents the file item's parent.</p>
- uid: com.microsoft.azure.storage.file._list_file_item.getShare()
  parent: com.microsoft.azure.storage.file._list_file_item
  href: com.microsoft.azure.storage.file._list_file_item.yml
  name: getShare()
  nameWithType: ListFileItem.getShare()
  fullName: CloudFileShare com.microsoft.azure.storage.file.ListFileItem.getShare()
  type: Method
  summary: >-
    <p>Returns the share for the file item.</p>

    <p></p>
  syntax:
    content: public CloudFileShare getShare()
    return:
      type: com.microsoft.azure.storage.file._cloud_file_share
      description: <p>A <xref uid="com.microsoft.azure.storage.file._cloud_file_share" data-throw-if-not-resolved="false">CloudFileShare</xref> object which represents the file item's share.</p>
- uid: com.microsoft.azure.storage.core._storage_request
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core._storage_request.yml
  name: StorageRequest<C,P,R>
  nameWithType: StorageRequest<C,P,R>
  fullName: com.microsoft.azure.storage.core.StorageRequest<C,P,R>
  type: Class
  summary: >-
    <p>RESERVED FOR INTERNAL USE. A class which encapsulate the execution of a given storage operation.</p>

    <p></p>
  syntax:
    content: public class StorageRequest<C,P,R>
    typeParameters:
    - type: 37f8610d
      description: <p>The service client type </p>
    - type: db9ec244
      description: <p>The type of the parent object, i.e. CloudBlobContainer for downloadAttributes etc. </p>
    - type: d4d3e1e1
      description: <p>The type of the expected result </p>
- uid: com.microsoft.azure.storage.core._segmented_storage_request
  parent: com.microsoft.azure.storage.core
  href: com.microsoft.azure.storage.core._segmented_storage_request.yml
  name: SegmentedStorageRequest
  nameWithType: SegmentedStorageRequest
  fullName: com.microsoft.azure.storage.core.SegmentedStorageRequest
  type: Class
  syntax:
    content: public class SegmentedStorageRequest
