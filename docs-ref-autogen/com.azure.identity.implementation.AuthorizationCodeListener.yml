### YamlMime:ManagedReference
items:
- uid: "com.azure.identity.implementation.AuthorizationCodeListener"
  id: "AuthorizationCodeListener"
  parent: "com.azure.identity.implementation"
  children:
  - "com.azure.identity.implementation.AuthorizationCodeListener.create(int)"
  - "com.azure.identity.implementation.AuthorizationCodeListener.dispose()"
  - "com.azure.identity.implementation.AuthorizationCodeListener.listen()"
  langs:
  - "java"
  name: "AuthorizationCodeListener"
  nameWithType: "AuthorizationCodeListener"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener"
  type: "Class"
  package: "com.azure.identity.implementation"
  summary: "A local HTTP server that listens to the authorization code response from Azure Active Directory."
  syntax:
    content: "public final class AuthorizationCodeListener"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.AuthorizationCodeListener(fi.iki.elonen.NanoHTTPD,reactor.core.publisher.MonoProcessor<java.lang.String>)"
  id: "AuthorizationCodeListener(fi.iki.elonen.NanoHTTPD,reactor.core.publisher.MonoProcessor<java.lang.String>)"
  parent: "com.azure.identity.implementation.AuthorizationCodeListener"
  langs:
  - "java"
  name: "AuthorizationCodeListener(NanoHTTPD httpServer, MonoProcessor<String> authorizationCodeEmitter)"
  nameWithType: "AuthorizationCodeListener.AuthorizationCodeListener(NanoHTTPD httpServer, MonoProcessor<String> authorizationCodeEmitter)"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.AuthorizationCodeListener(NanoHTTPD httpServer, MonoProcessor<String> authorizationCodeEmitter)"
  overload: "com.azure.identity.implementation.AuthorizationCodeListener.AuthorizationCodeListener*"
  type: "Constructor"
  package: "com.azure.identity.implementation"
  syntax:
    content: "private AuthorizationCodeListener(NanoHTTPD httpServer, MonoProcessor<String> authorizationCodeEmitter)"
    parameters:
    - id: "httpServer"
      type: "fi.iki.elonen.NanoHTTPD"
    - id: "authorizationCodeEmitter"
      type: "reactor.core.publisher.MonoProcessor<java.lang.String>"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.create(int)"
  id: "create(int)"
  parent: "com.azure.identity.implementation.AuthorizationCodeListener"
  langs:
  - "java"
  name: "create(int port)"
  nameWithType: "AuthorizationCodeListener.create(int port)"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.create(int port)"
  overload: "com.azure.identity.implementation.AuthorizationCodeListener.create*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Starts the server asynchronously on a given port. \"http://locahost:\\{port\\}\" must be white-listed as a reply URL."
  syntax:
    content: "public static Mono<AuthorizationCodeListener> create(int port)"
    parameters:
    - id: "port"
      type: "int"
      description: "the port to listen on"
    return:
      type: "reactor.core.publisher.Mono<com.azure.identity.implementation.AuthorizationCodeListener>"
      description: "a Publisher emitting the listener instance"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.dispose()"
  id: "dispose()"
  parent: "com.azure.identity.implementation.AuthorizationCodeListener"
  langs:
  - "java"
  name: "dispose()"
  nameWithType: "AuthorizationCodeListener.dispose()"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.dispose()"
  overload: "com.azure.identity.implementation.AuthorizationCodeListener.dispose*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Dispose the server"
  syntax:
    content: "public Mono<Void> dispose()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a Publisher signaling the completion"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.listen()"
  id: "listen()"
  parent: "com.azure.identity.implementation.AuthorizationCodeListener"
  langs:
  - "java"
  name: "listen()"
  nameWithType: "AuthorizationCodeListener.listen()"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.listen()"
  overload: "com.azure.identity.implementation.AuthorizationCodeListener.listen*"
  type: "Method"
  package: "com.azure.identity.implementation"
  summary: "Listen for the next authorization code"
  syntax:
    content: "public Mono<String> listen()"
    return:
      type: "reactor.core.publisher.Mono<java.lang.String>"
      description: "a Publisher emitting an authorization code"
references:
- uid: "fi.iki.elonen.NanoHTTPD"
  spec.java:
  - uid: "fi.iki.elonen.NanoHTTPD"
    name: "NanoHTTPD"
    fullName: "fi.iki.elonen.NanoHTTPD"
- uid: "reactor.core.publisher.MonoProcessor<java.lang.String>"
  spec.java:
  - uid: "reactor.core.publisher.MonoProcessor"
    name: "MonoProcessor"
    fullName: "reactor.core.publisher.MonoProcessor"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.AuthorizationCodeListener*"
  name: "AuthorizationCodeListener"
  nameWithType: "AuthorizationCodeListener.AuthorizationCodeListener"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.AuthorizationCodeListener"
  package: "com.azure.identity.implementation"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "reactor.core.publisher.Mono<com.azure.identity.implementation.AuthorizationCodeListener>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.identity.implementation.AuthorizationCodeListener"
    name: "AuthorizationCodeListener"
    fullName: "com.azure.identity.implementation.AuthorizationCodeListener"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.create*"
  name: "create"
  nameWithType: "AuthorizationCodeListener.create"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.create"
  package: "com.azure.identity.implementation"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.dispose*"
  name: "dispose"
  nameWithType: "AuthorizationCodeListener.dispose"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.dispose"
  package: "com.azure.identity.implementation"
- uid: "reactor.core.publisher.Mono<java.lang.String>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.identity.implementation.AuthorizationCodeListener.listen*"
  name: "listen"
  nameWithType: "AuthorizationCodeListener.listen"
  fullName: "com.azure.identity.implementation.AuthorizationCodeListener.listen"
  package: "com.azure.identity.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.MonoProcessor"
  name: "MonoProcessor"
  nameWithType: "MonoProcessor"
  fullName: "reactor.core.publisher.MonoProcessor"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
