### YamlMime:JavaType
uid: "com.azure.containers.containerregistry.ContainerRegistryClient"
fullName: "com.azure.containers.containerregistry.ContainerRegistryClient"
name: "ContainerRegistryClient"
nameWithType: "ContainerRegistryClient"
summary: "This class provides a client that exposes operations to managing container images and artifacts. synchronously. It exposes methods directly performed on the registry like listing the catalog. as well as helper types like <xref uid=\"com.azure.containers.containerregistry.ContainerRegistryClient.getArtifact(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getArtifact\"></xref> and <xref uid=\"com.azure.containers.containerregistry.ContainerRegistryClient.getRepository(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getRepository\"></xref> that can be used to perform operations on repository and artifacts.\n\n**Instantiating a synchronous Container Registry client**\n\n```java\nContainerRegistryClient registryAsyncClient = new ContainerRegistryClientBuilder()\n     .endpoint(endpoint)\n     .audience(ContainerRegistryAudience.AZURE_RESOURCE_MANAGER_PUBLIC_CLOUD)\n     .credential(credential)\n     .buildClient();\n```\n\n**Instantiating a synchronous Container Registry client with custom pipeline**\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(/* add policies */)\n     .build();\n\n ContainerRegistryClient registryAsyncClient = new ContainerRegistryClientBuilder()\n     .pipeline(pipeline)\n     .endpoint(endpoint)\n     .audience(ContainerRegistryAudience.AZURE_RESOURCE_MANAGER_PUBLIC_CLOUD)\n     .credential(credential)\n     .buildClient();\n```\n\nView <xref uid=\"com.azure.containers.containerregistry.ContainerRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the client."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ContainerRegistryClient"
methods:
- "com.azure.containers.containerregistry.ContainerRegistryClient.deleteRepository(java.lang.String)"
- "com.azure.containers.containerregistry.ContainerRegistryClient.deleteRepositoryWithResponse(java.lang.String,com.azure.core.util.Context)"
- "com.azure.containers.containerregistry.ContainerRegistryClient.getArtifact(java.lang.String,java.lang.String)"
- "com.azure.containers.containerregistry.ContainerRegistryClient.getEndpoint()"
- "com.azure.containers.containerregistry.ContainerRegistryClient.getRepository(java.lang.String)"
- "com.azure.containers.containerregistry.ContainerRegistryClient.listRepositoryNames()"
- "com.azure.containers.containerregistry.ContainerRegistryClient.listRepositoryNames(com.azure.core.util.Context)"
type: "class"
metadata: {}
package: "com.azure.containers.containerregistry"
artifact: com.azure:azure-containers-containerregistry:1.0.2
