### YamlMime:JavaMember
nameWithType: UserInfo.UserInfo
type: constructor
members:
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo()
  name: UserInfo()
  nameWithType: UserInfo.UserInfo()
  summary: <p>Default constructor for <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref>. </p>
  syntax: public UserInfo()
  uid: com.microsoft.aad.adal.UserInfo.UserInfo()
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo(IdToken idToken)
  name: UserInfo(IdToken idToken)
  nameWithType: UserInfo.UserInfo(IdToken idToken)
  parameters:
  - description: <p>The <xref uid="" data-throw-if-not-resolved="false">IdToken</xref> to create <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref>. </p>
    name: idToken
    type: <xref href="IdToken?alt=IdToken&text=IdToken" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor for creating <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref> from <xref uid="" data-throw-if-not-resolved="false">IdToken</xref>.</p>

    <p></p>
  syntax: public UserInfo(IdToken idToken)
  uid: com.microsoft.aad.adal.UserInfo.UserInfo(IdToken)
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo(String upn)
  name: UserInfo(String upn)
  nameWithType: UserInfo.UserInfo(String upn)
  parameters:
  - description: <p>Upn that is used to construct the <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref>. </p>
    name: upn
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor for <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref>.</p>

    <p></p>
  syntax: public UserInfo(String upn)
  uid: com.microsoft.aad.adal.UserInfo.UserInfo(String)
- fullName: com.microsoft.aad.adal.UserInfo.UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  name: UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  nameWithType: UserInfo.UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  parameters:
  - description: <p>Unique user id for the userInfo. </p>
    name: userid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Given name for the userInfo. </p>
    name: givenName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Family name for the userInfo. </p>
    name: familyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>IdentityProvider for the userInfo. </p>
    name: identityProvider
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Displayable for the userInfo. </p>
    name: displayableId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor for <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false">UserInfo</xref>.</p>

    <p></p>
  syntax: public UserInfo(String userid, String givenName, String familyName, String identityProvider, String displayableId)
  uid: com.microsoft.aad.adal.UserInfo.UserInfo(String,String,String,String,String)
uid: com.microsoft.aad.adal.UserInfo.UserInfo*
fullName: com.microsoft.aad.adal.UserInfo.UserInfo
name: UserInfo
package: com.microsoft.aad.adal
metadata: {}
