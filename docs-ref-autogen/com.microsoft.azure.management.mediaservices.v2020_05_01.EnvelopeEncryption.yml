### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption"
name: "EnvelopeEncryption"
nameWithType: "EnvelopeEncryption"
summary: "Class for Envelope<wbr>Encryption encryption scheme."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EnvelopeEncryption"
constructors:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.EnvelopeEncryption()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.EnvelopeEncryption()"
  name: "EnvelopeEncryption()"
  nameWithType: "EnvelopeEncryption.EnvelopeEncryption()"
  syntax: "public EnvelopeEncryption()"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.clearTracks()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.clearTracks()"
  name: "clearTracks()"
  nameWithType: "EnvelopeEncryption.clearTracks()"
  summary: "Get representing which tracks should not be encrypted."
  syntax: "public List<TrackSelection> clearTracks()"
  desc: "Get representing which tracks should not be encrypted."
  returns:
    description: "the clearTracks value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.TrackSelection?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.contentKeys()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.contentKeys()"
  name: "contentKeys()"
  nameWithType: "EnvelopeEncryption.contentKeys()"
  summary: "Get representing default content key for each encryption scheme and separate content keys for specific tracks."
  syntax: "public StreamingPolicyContentKeys contentKeys()"
  desc: "Get representing default content key for each encryption scheme and separate content keys for specific tracks."
  returns:
    description: "the contentKeys value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicyContentKeys?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.customKeyAcquisitionUrlTemplate()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.customKeyAcquisitionUrlTemplate()"
  name: "customKeyAcquisitionUrlTemplate()"
  nameWithType: "EnvelopeEncryption.customKeyAcquisitionUrlTemplate()"
  summary: "Get template for the URL of the custom service delivering keys to end user players."
  syntax: "public String customKeyAcquisitionUrlTemplate()"
  desc: "Get template for the URL of the custom service delivering keys to end user players. Not required when using Azure Media Services for issuing keys. The template supports replaceable tokens that the service will update at runtime with the value specific to the request. The currently supported token values are \\{AlternativeMediaId\\}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and \\{ContentKeyId\\}, which is replaced with the value of identifier of the key being requested."
  returns:
    description: "the customKeyAcquisitionUrlTemplate value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.enabledProtocols()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.enabledProtocols()"
  name: "enabledProtocols()"
  nameWithType: "EnvelopeEncryption.enabledProtocols()"
  summary: "Get representing supported protocols."
  syntax: "public EnabledProtocols enabledProtocols()"
  desc: "Get representing supported protocols."
  returns:
    description: "the enabledProtocols value"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.EnabledProtocols?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.EnabledProtocols&text=EnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withClearTracks(java.util.List<com.microsoft.azure.management.mediaservices.v2020_05_01.TrackSelection>)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withClearTracks(List<TrackSelection> clearTracks)"
  name: "withClearTracks(List<TrackSelection> clearTracks)"
  nameWithType: "EnvelopeEncryption.withClearTracks(List<TrackSelection> clearTracks)"
  summary: "Set representing which tracks should not be encrypted."
  parameters:
  - description: "the clearTracks value to set"
    name: "clearTracks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.TrackSelection?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EnvelopeEncryption withClearTracks(List<TrackSelection> clearTracks)"
  desc: "Set representing which tracks should not be encrypted."
  returns:
    description: "the EnvelopeEncryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withContentKeys(com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicyContentKeys)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withContentKeys(StreamingPolicyContentKeys contentKeys)"
  name: "withContentKeys(StreamingPolicyContentKeys contentKeys)"
  nameWithType: "EnvelopeEncryption.withContentKeys(StreamingPolicyContentKeys contentKeys)"
  summary: "Set representing default content key for each encryption scheme and separate content keys for specific tracks."
  parameters:
  - description: "the contentKeys value to set"
    name: "contentKeys"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicyContentKeys?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EnvelopeEncryption withContentKeys(StreamingPolicyContentKeys contentKeys)"
  desc: "Set representing default content key for each encryption scheme and separate content keys for specific tracks."
  returns:
    description: "the EnvelopeEncryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withCustomKeyAcquisitionUrlTemplate(java.lang.String)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withCustomKeyAcquisitionUrlTemplate(String customKeyAcquisitionUrlTemplate)"
  name: "withCustomKeyAcquisitionUrlTemplate(String customKeyAcquisitionUrlTemplate)"
  nameWithType: "EnvelopeEncryption.withCustomKeyAcquisitionUrlTemplate(String customKeyAcquisitionUrlTemplate)"
  summary: "Set template for the URL of the custom service delivering keys to end user players."
  parameters:
  - description: "the customKeyAcquisitionUrlTemplate value to set"
    name: "customKeyAcquisitionUrlTemplate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EnvelopeEncryption withCustomKeyAcquisitionUrlTemplate(String customKeyAcquisitionUrlTemplate)"
  desc: "Set template for the URL of the custom service delivering keys to end user players. Not required when using Azure Media Services for issuing keys. The template supports replaceable tokens that the service will update at runtime with the value specific to the request. The currently supported token values are \\{AlternativeMediaId\\}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and \\{ContentKeyId\\}, which is replaced with the value of identifier of the key being requested."
  returns:
    description: "the EnvelopeEncryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withEnabledProtocols(com.microsoft.azure.management.mediaservices.v2020_05_01.EnabledProtocols)"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption.withEnabledProtocols(EnabledProtocols enabledProtocols)"
  name: "withEnabledProtocols(EnabledProtocols enabledProtocols)"
  nameWithType: "EnvelopeEncryption.withEnabledProtocols(EnabledProtocols enabledProtocols)"
  summary: "Set representing supported protocols."
  parameters:
  - description: "the enabledProtocols value to set"
    name: "enabledProtocols"
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.EnabledProtocols?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.EnabledProtocols&text=EnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EnvelopeEncryption withEnabledProtocols(EnabledProtocols enabledProtocols)"
  desc: "Set representing supported protocols."
  returns:
    description: "the EnvelopeEncryption object itself."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.EnvelopeEncryption&text=EnvelopeEncryption\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class for EnvelopeEncryption encryption scheme."
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
