### YamlMime:JavaType
uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters"
fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters"
name: "CdnManagedHttpsParameters"
nameWithType: "CdnManagedHttpsParameters"
summary: "Defines the certificate source parameters using CDN managed certificate for enabling SSL."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.minimumTlsVersion()"
- "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.protocolType()"
- "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.validate()"
- "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withMinimumTlsVersion(com.azure.resourcemanager.cdn.models.MinimumTlsVersion)"
- "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withProtocolType(com.azure.resourcemanager.cdn.models.ProtocolType)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CdnManagedHttpsParameters extends CustomDomainHttpsParameters"
constructors:
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.CdnManagedHttpsParameters()"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.CdnManagedHttpsParameters()"
  name: "CdnManagedHttpsParameters()"
  nameWithType: "CdnManagedHttpsParameters.CdnManagedHttpsParameters()"
  syntax: "public CdnManagedHttpsParameters()"
methods:
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.certificateSourceParameters()"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.certificateSourceParameters()"
  name: "certificateSourceParameters()"
  nameWithType: "CdnManagedHttpsParameters.certificateSourceParameters()"
  summary: "Get the certificate<wbr>Source<wbr>Parameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  syntax: "public CdnCertificateSourceParameters certificateSourceParameters()"
  desc: "Get the certificateSourceParameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  returns:
    description: "the certificateSourceParameters value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters?alt=com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters&text=CdnCertificateSourceParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.validate()"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.validate()"
  name: "validate()"
  nameWithType: "CdnManagedHttpsParameters.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withCertificateSourceParameters(com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  name: "withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  nameWithType: "CdnManagedHttpsParameters.withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  summary: "Set the certificate<wbr>Source<wbr>Parameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  parameters:
  - description: "the certificateSourceParameters value to set."
    name: "certificateSourceParameters"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters?alt=com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters&text=CdnCertificateSourceParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CdnManagedHttpsParameters withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  desc: "Set the certificateSourceParameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  returns:
    description: "the CdnManagedHttpsParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters&text=CdnManagedHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withMinimumTlsVersion(com.azure.resourcemanager.cdn.models.MinimumTlsVersion)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  name: "withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  nameWithType: "CdnManagedHttpsParameters.withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  summary: "Set the minimum<wbr>Tls<wbr>Version property: TLS protocol version that will be used for Https."
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withMinimumTlsVersion(com.azure.resourcemanager.cdn.models.MinimumTlsVersion)"
  parameters:
  - name: "minimumTlsVersion"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.MinimumTlsVersion?alt=com.azure.resourcemanager.cdn.models.MinimumTlsVersion&text=MinimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CdnManagedHttpsParameters withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  desc: "Set the minimumTlsVersion property: TLS protocol version that will be used for Https."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters&text=CdnManagedHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withProtocolType(com.azure.resourcemanager.cdn.models.ProtocolType)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withProtocolType(ProtocolType protocolType)"
  name: "withProtocolType(ProtocolType protocolType)"
  nameWithType: "CdnManagedHttpsParameters.withProtocolType(ProtocolType protocolType)"
  summary: "Set the protocol<wbr>Type property: Defines the TLS extension protocol that is used for secure delivery."
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withProtocolType(com.azure.resourcemanager.cdn.models.ProtocolType)"
  parameters:
  - name: "protocolType"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ProtocolType?alt=com.azure.resourcemanager.cdn.models.ProtocolType&text=ProtocolType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CdnManagedHttpsParameters withProtocolType(ProtocolType protocolType)"
  desc: "Set the protocolType property: Defines the TLS extension protocol that is used for secure delivery."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters&text=CdnManagedHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the certificate source parameters using CDN managed certificate for enabling SSL."
metadata: {}
package: "com.azure.resourcemanager.cdn.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cdn:2.16.0
