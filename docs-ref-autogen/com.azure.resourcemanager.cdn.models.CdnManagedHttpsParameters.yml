### YamlMime:JavaType
uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters"
fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters"
name: "CdnManagedHttpsParameters"
nameWithType: "CdnManagedHttpsParameters"
summary: "Defines the certificate source parameters using CDN managed certificate for enabling SSL."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters&text=CustomDomainHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.certificateSource()?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.certificateSource&text=certificateSource\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.minimumTlsVersion()?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.minimumTlsVersion&text=minimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.protocolType()?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.protocolType&text=protocolType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.validate()?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withMinimumTlsVersion(com.azure.resourcemanager.cdn.models.MinimumTlsVersion)?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withMinimumTlsVersion&text=withMinimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withProtocolType(com.azure.resourcemanager.cdn.models.ProtocolType)?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withProtocolType&text=withProtocolType\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CdnManagedHttpsParameters**</br> extends <xref href=\"com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters&text=CustomDomainHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.CdnManagedHttpsParameters()"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.CdnManagedHttpsParameters()"
  name: "CdnManagedHttpsParameters()"
  nameWithType: "CdnManagedHttpsParameters.CdnManagedHttpsParameters()"
  summary: "Creates an instance of Cdn<wbr>Managed<wbr>Https<wbr>Parameters class."
  syntax: "public CdnManagedHttpsParameters()"
  desc: "Creates an instance of CdnManagedHttpsParameters class."
methods:
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.certificateSource()"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.certificateSource()"
  name: "certificateSource()"
  nameWithType: "CdnManagedHttpsParameters.certificateSource()"
  summary: "Get the certificate<wbr>Source property: Defines the source of the SSL certificate."
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.certificateSource()"
  syntax: "public CertificateSource certificateSource()"
  desc: "Get the certificateSource property: Defines the source of the SSL certificate."
  returns:
    description: "the certificateSource value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CertificateSource?alt=com.azure.resourcemanager.cdn.models.CertificateSource&text=CertificateSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.certificateSourceParameters()"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.certificateSourceParameters()"
  name: "certificateSourceParameters()"
  nameWithType: "CdnManagedHttpsParameters.certificateSourceParameters()"
  summary: "Get the certificate<wbr>Source<wbr>Parameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  syntax: "public CdnCertificateSourceParameters certificateSourceParameters()"
  desc: "Get the certificateSourceParameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  returns:
    description: "the certificateSourceParameters value."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters?alt=com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters&text=CdnCertificateSourceParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "CdnManagedHttpsParameters.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Cdn<wbr>Managed<wbr>Https<wbr>Parameters from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static CdnManagedHttpsParameters fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of CdnManagedHttpsParameters from the JsonReader."
  returns:
    description: "An instance of CdnManagedHttpsParameters if the JsonReader was pointing to an instance of it, or null if\n it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters&text=CdnManagedHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "CdnManagedHttpsParameters.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.validate()"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.validate()"
  name: "validate()"
  nameWithType: "CdnManagedHttpsParameters.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withCertificateSourceParameters(com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  name: "withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  nameWithType: "CdnManagedHttpsParameters.withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  summary: "Set the certificate<wbr>Source<wbr>Parameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  parameters:
  - description: "the certificateSourceParameters value to set."
    name: "certificateSourceParameters"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters?alt=com.azure.resourcemanager.cdn.models.CdnCertificateSourceParameters&text=CdnCertificateSourceParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CdnManagedHttpsParameters withCertificateSourceParameters(CdnCertificateSourceParameters certificateSourceParameters)"
  desc: "Set the certificateSourceParameters property: Defines the certificate source parameters using CDN managed certificate for enabling SSL."
  returns:
    description: "the CdnManagedHttpsParameters object itself."
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters&text=CdnManagedHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withMinimumTlsVersion(com.azure.resourcemanager.cdn.models.MinimumTlsVersion)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  name: "withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  nameWithType: "CdnManagedHttpsParameters.withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  summary: "Set the minimum<wbr>Tls<wbr>Version property: TLS protocol version that will be used for Https."
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withMinimumTlsVersion(com.azure.resourcemanager.cdn.models.MinimumTlsVersion)"
  parameters:
  - name: "minimumTlsVersion"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.MinimumTlsVersion?alt=com.azure.resourcemanager.cdn.models.MinimumTlsVersion&text=MinimumTlsVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CdnManagedHttpsParameters withMinimumTlsVersion(MinimumTlsVersion minimumTlsVersion)"
  desc: "Set the minimumTlsVersion property: TLS protocol version that will be used for Https."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters&text=CdnManagedHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withProtocolType(com.azure.resourcemanager.cdn.models.ProtocolType)"
  fullName: "com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters.withProtocolType(ProtocolType protocolType)"
  name: "withProtocolType(ProtocolType protocolType)"
  nameWithType: "CdnManagedHttpsParameters.withProtocolType(ProtocolType protocolType)"
  summary: "Set the protocol<wbr>Type property: Defines the TLS extension protocol that is used for secure delivery."
  overridden: "com.azure.resourcemanager.cdn.models.CustomDomainHttpsParameters.withProtocolType(com.azure.resourcemanager.cdn.models.ProtocolType)"
  parameters:
  - name: "protocolType"
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.ProtocolType?alt=com.azure.resourcemanager.cdn.models.ProtocolType&text=ProtocolType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CdnManagedHttpsParameters withProtocolType(ProtocolType protocolType)"
  desc: "Set the protocolType property: Defines the TLS extension protocol that is used for secure delivery."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters?alt=com.azure.resourcemanager.cdn.models.CdnManagedHttpsParameters&text=CdnManagedHttpsParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the certificate source parameters using CDN managed certificate for enabling SSL."
metadata: {}
package: "com.azure.resourcemanager.cdn.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cdn:2.46.0
