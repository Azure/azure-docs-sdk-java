### YamlMime:JavaType
uid: "com.microsoft.azure.management.containerregistry.EventContent"
fullName: "com.microsoft.azure.management.containerregistry.EventContent"
name: "EventContent"
nameWithType: "EventContent"
summary: "The content of the event request message."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class EventContent"
constructors:
- uid: "com.microsoft.azure.management.containerregistry.EventContent.EventContent()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.EventContent()"
  name: "EventContent()"
  nameWithType: "EventContent.EventContent()"
  syntax: "public EventContent()"
methods:
- uid: "com.microsoft.azure.management.containerregistry.EventContent.action()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.action()"
  name: "action()"
  nameWithType: "EventContent.action()"
  summary: "Get the action that encompasses the provided event."
  syntax: "public String action()"
  desc: "Get the action that encompasses the provided event."
  returns:
    description: "the action value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.actor()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.actor()"
  name: "actor()"
  nameWithType: "EventContent.actor()"
  summary: "Get the agent that initiated the event."
  syntax: "public Actor actor()"
  desc: "Get the agent that initiated the event. For most situations, this could be from the authorization context of the request."
  returns:
    description: "the actor value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Actor?alt=com.microsoft.azure.management.containerregistry.Actor&text=Actor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.id()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.id()"
  name: "id()"
  nameWithType: "EventContent.id()"
  summary: "Get the event ID."
  syntax: "public String id()"
  desc: "Get the event ID."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.request()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.request()"
  name: "request()"
  nameWithType: "EventContent.request()"
  summary: "Get the request that generated the event."
  syntax: "public Request request()"
  desc: "Get the request that generated the event."
  returns:
    description: "the request value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Request?alt=com.microsoft.azure.management.containerregistry.Request&text=Request\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.source()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.source()"
  name: "source()"
  nameWithType: "EventContent.source()"
  summary: "Get the registry node that generated the event."
  syntax: "public Source source()"
  desc: "Get the registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
  returns:
    description: "the source value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Source?alt=com.microsoft.azure.management.containerregistry.Source&text=Source\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.target()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.target()"
  name: "target()"
  nameWithType: "EventContent.target()"
  summary: "Get the target of the event."
  syntax: "public Target target()"
  desc: "Get the target of the event."
  returns:
    description: "the target value"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Target?alt=com.microsoft.azure.management.containerregistry.Target&text=Target\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.timestamp()"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.timestamp()"
  name: "timestamp()"
  nameWithType: "EventContent.timestamp()"
  summary: "Get the time at which the event occurred."
  syntax: "public DateTime timestamp()"
  desc: "Get the time at which the event occurred."
  returns:
    description: "the timestamp value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.withAction(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.withAction(String action)"
  name: "withAction(String action)"
  nameWithType: "EventContent.withAction(String action)"
  summary: "Set the action that encompasses the provided event."
  parameters:
  - description: "the action value to set"
    name: "action"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContent withAction(String action)"
  desc: "Set the action that encompasses the provided event."
  returns:
    description: "the EventContent object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.EventContent?alt=com.microsoft.azure.management.containerregistry.EventContent&text=EventContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.withActor(com.microsoft.azure.management.containerregistry.Actor)"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.withActor(Actor actor)"
  name: "withActor(Actor actor)"
  nameWithType: "EventContent.withActor(Actor actor)"
  summary: "Set the agent that initiated the event."
  parameters:
  - description: "the actor value to set"
    name: "actor"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Actor?alt=com.microsoft.azure.management.containerregistry.Actor&text=Actor\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContent withActor(Actor actor)"
  desc: "Set the agent that initiated the event. For most situations, this could be from the authorization context of the request."
  returns:
    description: "the EventContent object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.EventContent?alt=com.microsoft.azure.management.containerregistry.EventContent&text=EventContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.withId(java.lang.String)"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.withId(String id)"
  name: "withId(String id)"
  nameWithType: "EventContent.withId(String id)"
  summary: "Set the event ID."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContent withId(String id)"
  desc: "Set the event ID."
  returns:
    description: "the EventContent object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.EventContent?alt=com.microsoft.azure.management.containerregistry.EventContent&text=EventContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.withRequest(com.microsoft.azure.management.containerregistry.Request)"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.withRequest(Request request)"
  name: "withRequest(Request request)"
  nameWithType: "EventContent.withRequest(Request request)"
  summary: "Set the request that generated the event."
  parameters:
  - description: "the request value to set"
    name: "request"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Request?alt=com.microsoft.azure.management.containerregistry.Request&text=Request\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContent withRequest(Request request)"
  desc: "Set the request that generated the event."
  returns:
    description: "the EventContent object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.EventContent?alt=com.microsoft.azure.management.containerregistry.EventContent&text=EventContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.withSource(com.microsoft.azure.management.containerregistry.Source)"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.withSource(Source source)"
  name: "withSource(Source source)"
  nameWithType: "EventContent.withSource(Source source)"
  summary: "Set the registry node that generated the event."
  parameters:
  - description: "the source value to set"
    name: "source"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Source?alt=com.microsoft.azure.management.containerregistry.Source&text=Source\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContent withSource(Source source)"
  desc: "Set the registry node that generated the event. Put differently, while the actor initiates the event, the source generates it."
  returns:
    description: "the EventContent object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.EventContent?alt=com.microsoft.azure.management.containerregistry.EventContent&text=EventContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.withTarget(com.microsoft.azure.management.containerregistry.Target)"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.withTarget(Target target)"
  name: "withTarget(Target target)"
  nameWithType: "EventContent.withTarget(Target target)"
  summary: "Set the target of the event."
  parameters:
  - description: "the target value to set"
    name: "target"
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.Target?alt=com.microsoft.azure.management.containerregistry.Target&text=Target\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContent withTarget(Target target)"
  desc: "Set the target of the event."
  returns:
    description: "the EventContent object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.EventContent?alt=com.microsoft.azure.management.containerregistry.EventContent&text=EventContent\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.containerregistry.EventContent.withTimestamp(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.containerregistry.EventContent.withTimestamp(DateTime timestamp)"
  name: "withTimestamp(DateTime timestamp)"
  nameWithType: "EventContent.withTimestamp(DateTime timestamp)"
  summary: "Set the time at which the event occurred."
  parameters:
  - description: "the timestamp value to set"
    name: "timestamp"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventContent withTimestamp(DateTime timestamp)"
  desc: "Set the time at which the event occurred."
  returns:
    description: "the EventContent object itself."
    type: "<xref href=\"com.microsoft.azure.management.containerregistry.EventContent?alt=com.microsoft.azure.management.containerregistry.EventContent&text=EventContent\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The content of the event request message."
metadata: {}
package: "com.microsoft.azure.management.containerregistry"
artifact: com.microsoft.azure:azure-mgmt-containerregistry:1.41.4
