### YamlMime:JavaMember
nameWithType: Pools.listUsageMetricsNextAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink)
  name: listUsageMetricsNextAsync(final String nextPageLink)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>

    <p></p>
  syntax: public Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink)
  uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String)
- fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  name: listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: poolListUsageMetricsNextOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions&text=PoolListUsageMetricsNextOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;PoolUsageMetrics&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>

    <p></p>
  syntax: public Observable<Page<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions)
  uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions)
- fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  name: listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: poolListUsageMetricsNextOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions?alt=com.microsoft.azure.batch.protocol.models.PoolListUsageMetricsNextOptions&text=PoolListUsageMetricsNextOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>

    <p></p>
  syntax: public ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink, final PoolListUsageMetricsNextOptions poolListUsageMetricsNextOptions, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final PoolListUsageMetricsNextOptions,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
- fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  name: listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  nameWithType: Pools.listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  parameters:
  - description: <p>The NextLink from the previous successful call to List operation. </p>
    name: nextPageLink
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the ServiceFuture object tracking the Retrofit calls </p>
    name: serviceFuture
    type: final ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;&gt;
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.PoolUsageMetrics?alt=com.microsoft.azure.batch.protocol.models.PoolUsageMetrics&text=PoolUsageMetrics" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists the usage metrics, aggregated by pool across individual time intervals, for the specified account. If you do not specify a $filter clause including a poolId, the response includes all pools that existed in the account in the time range of the returned aggregation intervals. If you do not specify a $filter clause including a startTime or endTime these filters default to the start and end times of the last aggregation interval currently available; that is, only the last aggregation interval is returned.</p>

    <p></p>
  syntax: public ServiceFuture<List<PoolUsageMetrics>> listUsageMetricsNextAsync(final String nextPageLink, final ServiceFuture<List<PoolUsageMetrics>> serviceFuture, final ListOperationCallback<PoolUsageMetrics> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync(final String,final ServiceFuture<List<PoolUsageMetrics>>,final ListOperationCallback<PoolUsageMetrics>)
uid: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync*
fullName: com.microsoft.azure.batch.protocol.Pools.listUsageMetricsNextAsync
name: listUsageMetricsNextAsync(final String nextPageLink)
package: com.microsoft.azure.batch.protocol
metadata: {}
