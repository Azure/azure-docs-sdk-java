### YamlMime:JavaType
constructors:
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig)
  name: SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig)
  parameters:
  - description: <p>embedded speech configuration. </p>
    name: embeddedSpeechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig?alt=com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig&text=EmbeddedSpeechConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer for embedded speech recognition. Added in version 1.19.0 </p>
  syntax: public SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AudioConfig audioConfig)
  name: SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AudioConfig audioConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AudioConfig audioConfig)
  parameters:
  - description: <p>embedded speech configuration. </p>
    name: embeddedSpeechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig?alt=com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig&text=EmbeddedSpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>audio configuration. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer for embedded speech recognition. Added in version 1.19.0 </p>
  syntax: public SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig,AudioConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  name: SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  parameters:
  - description: <p>embedded speech configuration. </p>
    name: embeddedSpeechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig?alt=com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig&text=EmbeddedSpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>configuration for auto detecting the source language. </p>
    name: autoDetectSourceLangConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig?alt=com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig&text=AutoDetectSourceLanguageConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer for embedded speech recognition. Added in version 1.20.0 </p>
  syntax: public SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig,AutoDetectSourceLanguageConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  name: SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  parameters:
  - description: <p>embedded speech configuration. </p>
    name: embeddedSpeechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig?alt=com.microsoft.cognitiveservices.speech.EmbeddedSpeechConfig&text=EmbeddedSpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>configuration for auto detecting the source language. </p>
    name: autoDetectSourceLangConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig?alt=com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig&text=AutoDetectSourceLanguageConfig" data-throw-if-not-resolved="False"/>
  - description: <p>audio configuration. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer for embedded speech recognition. Added in version 1.20.0 </p>
  syntax: public SpeechRecognizer(EmbeddedSpeechConfig embeddedSpeechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(EmbeddedSpeechConfig,AutoDetectSourceLanguageConfig,AudioConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig)
  name: SpeechRecognizer(SpeechConfig speechConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, AudioConfig audioConfig)
  name: SpeechRecognizer(SpeechConfig speechConfig, AudioConfig audioConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, AudioConfig audioConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>audio configuration. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig, AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig,AudioConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  name: SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>the configuration for auto detecting source language </p>
    name: autoDetectSourceLangConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig?alt=com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig&text=AutoDetectSourceLanguageConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig,AutoDetectSourceLanguageConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  name: SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>the configuration for auto detecting source language </p>
    name: autoDetectSourceLangConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig?alt=com.microsoft.cognitiveservices.speech.AutoDetectSourceLanguageConfig&text=AutoDetectSourceLanguageConfig" data-throw-if-not-resolved="False"/>
  - description: <p>audio configuration. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig, AutoDetectSourceLanguageConfig autoDetectSourceLangConfig, AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig,AutoDetectSourceLanguageConfig,AudioConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig)
  name: SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>the configuration for source language </p>
    name: sourceLanguageConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SourceLanguageConfig?alt=com.microsoft.cognitiveservices.speech.SourceLanguageConfig&text=SourceLanguageConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig,SourceLanguageConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig, AudioConfig audioConfig)
  name: SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig, AudioConfig audioConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig, AudioConfig audioConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>the configuration for source language </p>
    name: sourceLanguageConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SourceLanguageConfig?alt=com.microsoft.cognitiveservices.speech.SourceLanguageConfig&text=SourceLanguageConfig" data-throw-if-not-resolved="False"/>
  - description: <p>audio configuration. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig, SourceLanguageConfig sourceLanguageConfig, AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig,SourceLanguageConfig,AudioConfig)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage)
  name: SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>the recognition source language </p>
    name: sourceLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig,String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage, AudioConfig audioConfig)
  name: SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage, AudioConfig audioConfig)
  nameWithType: SpeechRecognizer.SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage, AudioConfig audioConfig)
  parameters:
  - description: <p>speech configuration. </p>
    name: speechConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig?alt=com.microsoft.cognitiveservices.speech.SpeechConfig&text=SpeechConfig" data-throw-if-not-resolved="False"/>
  - description: <p>the recognition source language </p>
    name: sourceLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>audio configuration. </p>
    name: audioConfig
    type: <xref href="com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Initializes a new instance of Speech Recognizer. </p>
  syntax: public SpeechRecognizer(SpeechConfig speechConfig, String sourceLanguage, AudioConfig audioConfig)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.SpeechRecognizer(SpeechConfig,String,AudioConfig)
fields:
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeechRecognitionCanceledEventArgs?alt=com.microsoft.cognitiveservices.speech.SpeechRecognitionCanceledEventArgs&text=SpeechRecognitionCanceledEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.canceled
  name: canceled
  nameWithType: SpeechRecognizer.canceled
  summary: <p>The event canceled signals that the recognition was canceled. </p>
  syntax: public final EventHandlerImpl<SpeechRecognitionCanceledEventArgs> canceled= new EventHandlerImpl<SpeechRecognitionCanceledEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.canceled
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeechRecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.SpeechRecognitionEventArgs&text=SpeechRecognitionEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.recognized
  name: recognized
  nameWithType: SpeechRecognizer.recognized
  summary: <p>The event recognized signals that a final recognition result is received. </p>
  syntax: public final EventHandlerImpl<SpeechRecognitionEventArgs> recognized= new EventHandlerImpl<SpeechRecognitionEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.recognized
- field:
    type: final EventHandlerImpl&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeechRecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.SpeechRecognitionEventArgs&text=SpeechRecognitionEventArgs" data-throw-if-not-resolved="False"/>&gt;
  fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.recognizing
  name: recognizing
  nameWithType: SpeechRecognizer.recognizing
  summary: <p>The event recognizing signals that an intermediate recognition result is received. </p>
  syntax: public final EventHandlerImpl<SpeechRecognitionEventArgs> recognizing= new EventHandlerImpl<SpeechRecognitionEventArgs>(eventCounter)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.recognizing
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.cognitiveservices.speech.Recognizer?alt=com.microsoft.cognitiveservices.speech.Recognizer&text=Recognizer" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.cognitiveservices.speech.Recognizer.close()
- com.microsoft.cognitiveservices.speech.Recognizer.sessionStarted
- com.microsoft.cognitiveservices.speech.Recognizer.sessionStopped
- com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetected
- com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetected
methods:
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getAuthorizationToken()
  name: getAuthorizationToken()
  nameWithType: SpeechRecognizer.getAuthorizationToken()
  returns:
    description: <p>Authorization token. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the authorization token used to communicate with the service. </p>
  syntax: public String getAuthorizationToken()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getAuthorizationToken()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getEndpointId()
  name: getEndpointId()
  nameWithType: SpeechRecognizer.getEndpointId()
  returns:
    description: <p>the endpoint ID of a customized speech model that is used for speech recognition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the endpoint ID of a customized speech model that is used for speech recognition. </p>
  syntax: public String getEndpointId()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getEndpointId()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getOutputFormat()
  name: getOutputFormat()
  nameWithType: SpeechRecognizer.getOutputFormat()
  returns:
    description: <p>The output format of recognition. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.OutputFormat?alt=com.microsoft.cognitiveservices.speech.OutputFormat&text=OutputFormat" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the output format of recognition. </p>
  syntax: public OutputFormat getOutputFormat()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getOutputFormat()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getProperties()
  name: getProperties()
  nameWithType: SpeechRecognizer.getProperties()
  returns:
    description: <p>The collection of properties and their values defined for this SpeechRecognizer. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.PropertyCollection?alt=com.microsoft.cognitiveservices.speech.PropertyCollection&text=PropertyCollection" data-throw-if-not-resolved="False"/>
  summary: <p>The collection of properties and their values defined for this SpeechRecognizer. </p>
  syntax: public PropertyCollection getProperties()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getProperties()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getSpeechRecognitionLanguage()
  name: getSpeechRecognitionLanguage()
  nameWithType: SpeechRecognizer.getSpeechRecognitionLanguage()
  returns:
    description: <p>The spoken language of recognition. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the spoken language of recognition. </p>
  syntax: public String getSpeechRecognitionLanguage()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.getSpeechRecognitionLanguage()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.recognizeOnceAsync()
  name: recognizeOnceAsync()
  nameWithType: SpeechRecognizer.recognizeOnceAsync()
  returns:
    description: <p>A task representing the recognition operation. The task returns a value of SpeechRecognitionResult </p>
    type: Future&lt;<xref href="com.microsoft.cognitiveservices.speech.SpeechRecognitionResult?alt=com.microsoft.cognitiveservices.speech.SpeechRecognitionResult&text=SpeechRecognitionResult" data-throw-if-not-resolved="False"/>&gt;
  summary: '<p>Starts speech recognition, and returns after a single utterance is recognized. The end of a single utterance is determined by listening for silence at the end or until a maximum of 15 seconds of audio is processed. The task returns the recognition text as result. Note: Since recognizeOnceAsync() returns only a single utterance, it is suitable only for single shot recognition like command or query. For long-running multi-utterance recognition, use startContinuousRecognitionAsync() instead. </p>'
  syntax: public Future<SpeechRecognitionResult> recognizeOnceAsync()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.recognizeOnceAsync()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.setAuthorizationToken(String token)
  name: setAuthorizationToken(String token)
  nameWithType: SpeechRecognizer.setAuthorizationToken(String token)
  parameters:
  - description: <p>Authorization token. </p>
    name: token
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: '<p>Sets the authorization token used to communicate with the service. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. Otherwise, the recognizer will encounter errors during recognition. </p>'
  syntax: public void setAuthorizationToken(String token)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.setAuthorizationToken(String)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.startContinuousRecognitionAsync()
  name: startContinuousRecognitionAsync()
  nameWithType: SpeechRecognizer.startContinuousRecognitionAsync()
  returns:
    description: <p>A task representing the asynchronous operation that starts the recognition. </p>
    type: <xref href="Future%3CVoid%3E?alt=Future%3CVoid%3E&text=Future%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Starts speech recognition on a continuous audio stream, until stopContinuousRecognitionAsync() is called. User must subscribe to events to receive recognition results. </p>
  syntax: public Future<Void> startContinuousRecognitionAsync()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.startContinuousRecognitionAsync()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.startKeywordRecognitionAsync(KeywordRecognitionModel model)
  name: startKeywordRecognitionAsync(KeywordRecognitionModel model)
  nameWithType: SpeechRecognizer.startKeywordRecognitionAsync(KeywordRecognitionModel model)
  parameters:
  - description: <p>The keyword recognition model that specifies the keyword to be recognized. </p>
    name: model
    type: <xref href="com.microsoft.cognitiveservices.speech.KeywordRecognitionModel?alt=com.microsoft.cognitiveservices.speech.KeywordRecognitionModel&text=KeywordRecognitionModel" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task representing the asynchronous operation that starts the recognition. </p>
    type: <xref href="Future%3CVoid%3E?alt=Future%3CVoid%3E&text=Future%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: '<p>Configures the recognizer with the given keyword model. After calling this method, the recognizer is listening for the keyword to start the recognition. Call stopKeywordRecognitionAsync() to end the keyword initiated recognition. User must subscribe to events to receive recognition results. Note: Keyword spotting (KWS) functionality might work with any microphone type, official KWS support, however, is currently limited to the microphone arrays found in the Azure Kinect DK hardware or the Speech Devices SDK. </p>'
  syntax: public Future<Void> startKeywordRecognitionAsync(KeywordRecognitionModel model)
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.startKeywordRecognitionAsync(KeywordRecognitionModel)
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.stopContinuousRecognitionAsync()
  name: stopContinuousRecognitionAsync()
  nameWithType: SpeechRecognizer.stopContinuousRecognitionAsync()
  returns:
    description: <p>A future that will complete when input processing has been stopped. Result generation, if applicable for the input provided, may happen after this task completes and should be handled with the appropriate event. </p>
    type: <xref href="Future%3CVoid%3E?alt=Future%3CVoid%3E&text=Future%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Stops a running recognition operation as soon as possible and immediately requests a result based on the the input that has been processed so far. This works for all recognition operations, not just continuous ones, and facilitates the use of push-to-talk or "finish now" buttons for manual audio endpointing. </p>
  syntax: public Future<Void> stopContinuousRecognitionAsync()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.stopContinuousRecognitionAsync()
- fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer.stopKeywordRecognitionAsync()
  name: stopKeywordRecognitionAsync()
  nameWithType: SpeechRecognizer.stopKeywordRecognitionAsync()
  returns:
    description: <p>A task representing the asynchronous operation that stops the recognition. </p>
    type: <xref href="Future%3CVoid%3E?alt=Future%3CVoid%3E&text=Future%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: '<p>Ends the keyword initiated recognition. Note: Keyword spotting (KWS) functionality might work with any microphone type, official KWS support, however, is currently limited to the microphone arrays found in the Azure Kinect DK hardware or the Speech Devices SDK. </p>'
  syntax: public Future<Void> stopKeywordRecognitionAsync()
  uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer.stopKeywordRecognitionAsync()
nameWithType: SpeechRecognizer
syntax: public class SpeechRecognizer extends Recognizer
type: class
uid: com.microsoft.cognitiveservices.speech.SpeechRecognizer
fullName: com.microsoft.cognitiveservices.speech.SpeechRecognizer
name: SpeechRecognizer
package: com.microsoft.cognitiveservices.speech
summary: '<p>Performs speech recognition from microphone, file, or other audio input streams, and gets transcribed text as result. Note: close() must be called in order to release underlying resources held by the object. </p>'
metadata: {}
