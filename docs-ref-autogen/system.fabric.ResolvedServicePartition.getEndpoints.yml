### YamlMime:JavaMember
nameWithType: ResolvedServicePartition.getEndpoints
type: method
members:
- fullName: system.fabric.ResolvedServicePartition.getEndpoints()
  name: getEndpoints()
  nameWithType: ResolvedServicePartition.getEndpoints()
  returns:
    description: <p>Returns <xref uid="system.fabric.ResolvedServiceEndpoint" data-throw-if-not-resolved="false">system.fabric.ResolvedServiceEndpoint</xref>. </p>
    type: List&lt;<xref href="system.fabric.ResolvedServiceEndpoint?alt=system.fabric.ResolvedServiceEndpoint&text=ResolvedServiceEndpoint" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a single endpoint, instead of a collection of all endpoints.</p>

    <p>

      <b>Remarks:</b>Many times, you only need a single endpoint instead of all the endpoints. If the service is stateless, it returns a random endpoint. If the service is a stateful service, than it returns the endpoint to which the Primary replica of the service partition listens. Note that if the Primary replica currently does not exist, it throws <xref uid="system.fabric.exception.FabricException" data-throw-if-not-resolved="false">system.fabric.exception.FabricException</xref>. </p>
  syntax: public List<ResolvedServiceEndpoint> getEndpoints()
  uid: system.fabric.ResolvedServicePartition.getEndpoints()
uid: system.fabric.ResolvedServicePartition.getEndpoints*
fullName: system.fabric.ResolvedServicePartition.getEndpoints()
name: getEndpoints()
package: system.fabric
metadata: {}
