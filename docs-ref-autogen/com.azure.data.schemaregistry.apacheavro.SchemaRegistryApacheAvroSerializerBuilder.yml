### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder"
fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder"
name: "SchemaRegistryApacheAvroSerializerBuilder"
nameWithType: "SchemaRegistryApacheAvroSerializerBuilder"
summary: "The builder for instantiating a <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class SchemaRegistryApacheAvroSerializerBuilder"
constructors:
- uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.SchemaRegistryApacheAvroSerializerBuilder()"
  fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.SchemaRegistryApacheAvroSerializerBuilder()"
  name: "SchemaRegistryApacheAvroSerializerBuilder()"
  nameWithType: "SchemaRegistryApacheAvroSerializerBuilder.SchemaRegistryApacheAvroSerializerBuilder()"
  summary: "Instantiates instance of Builder class."
  syntax: "public SchemaRegistryApacheAvroSerializerBuilder()"
  desc: "Instantiates instance of Builder class. Supplies client defaults."
methods:
- uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.autoRegisterSchemas(boolean)"
  fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.autoRegisterSchemas(boolean autoRegisterSchemas)"
  name: "autoRegisterSchemas(boolean autoRegisterSchemas)"
  nameWithType: "SchemaRegistryApacheAvroSerializerBuilder.autoRegisterSchemas(boolean autoRegisterSchemas)"
  summary: "If specified true, serializer will register schemas against Azure Schema Registry service under the specified group."
  parameters:
  - description: "flag for schema auto-registration"
    name: "autoRegisterSchemas"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryApacheAvroSerializerBuilder autoRegisterSchemas(boolean autoRegisterSchemas)"
  desc: "If specified true, serializer will register schemas against Azure Schema Registry service under the specified group. See Azure Schema Registry documentation for a description of schema registration behavior. If specified false, serializer will simply query the service for an existing ID given schema content. Serialization will fail if the schema has not been pre-created. Auto-registration is **NOT RECOMMENDED** for production scenarios."
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializerBuilder\"></xref> instance"
    type: "<xref href=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder?alt=com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder&text=SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.avroSpecificReader(boolean)"
  fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.avroSpecificReader(boolean avroSpecificReader)"
  name: "avroSpecificReader(boolean avroSpecificReader)"
  nameWithType: "SchemaRegistryApacheAvroSerializerBuilder.avroSpecificReader(boolean avroSpecificReader)"
  summary: "Specifies if objects should be deserialized into Avro <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecificRecord\"></xref> via Avro's <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecificDatumReader\"></xref>."
  parameters:
  - description: "<code>true</code> to deserialize into <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecificRecord\"></xref> via <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecificDatumReader\"></xref>; <code>false</code> otherwise."
    name: "avroSpecificReader"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryApacheAvroSerializerBuilder avroSpecificReader(boolean avroSpecificReader)"
  desc: "Specifies if objects should be deserialized into Avro <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecificRecord\"></xref> via Avro's <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SpecificDatumReader\"></xref>."
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializerBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder?alt=com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder&text=SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.buildSerializer()"
  fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.buildSerializer()"
  name: "buildSerializer()"
  nameWithType: "SchemaRegistryApacheAvroSerializerBuilder.buildSerializer()"
  summary: "Creates a new instance of Schema Registry serializer."
  syntax: "public SchemaRegistryApacheAvroSerializer buildSerializer()"
  desc: "Creates a new instance of Schema Registry serializer."
  returns:
    description: "A new instance of <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>."
    type: "<xref href=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer?alt=com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer&text=SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.schemaGroup(java.lang.String)"
  fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.schemaGroup(String schemaGroup)"
  name: "schemaGroup(String schemaGroup)"
  nameWithType: "SchemaRegistryApacheAvroSerializerBuilder.schemaGroup(String schemaGroup)"
  summary: "Specifies schema group for interacting with Azure Schema Registry service."
  parameters:
  - description: "Azure Schema Registry schema group"
    name: "schemaGroup"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryApacheAvroSerializerBuilder schemaGroup(String schemaGroup)"
  desc: "Specifies schema group for interacting with Azure Schema Registry service. This is optional unless <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.autoRegisterSchemas(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"autoRegisterSchema\"></xref> is set to `true`. If auto-registering schemas, schema will be stored under this group. If not auto-registering, serializer will request schema ID for matching data schema under specified group."
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializerBuilder\"></xref> instance"
    type: "<xref href=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder?alt=com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder&text=SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.schemaRegistryClient(com.azure.data.schemaregistry.SchemaRegistryAsyncClient)"
  fullName: "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder.schemaRegistryClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  name: "schemaRegistryClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  nameWithType: "SchemaRegistryApacheAvroSerializerBuilder.schemaRegistryClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  summary: "The <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> to use to interact with the Schema Registry service."
  parameters:
  - description: "The <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref>."
    name: "schemaRegistryAsyncClient"
    type: "<xref href=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient?alt=com.azure.data.schemaregistry.SchemaRegistryAsyncClient&text=SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistryApacheAvroSerializerBuilder schemaRegistryClient(SchemaRegistryAsyncClient schemaRegistryAsyncClient)"
  desc: "The <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryAsyncClient\"></xref> to use to interact with the Schema Registry service."
  returns:
    description: "updated <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializerBuilder\"></xref> instance."
    type: "<xref href=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder?alt=com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder&text=SchemaRegistryApacheAvroSerializerBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The builder for instantiating a <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>. Additional code samples are in <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>.\n\n**Creating a <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryApacheAvroSerializer\"></xref>**\n\n```java\nTokenCredential tokenCredential = new DefaultAzureCredentialBuilder().build();\n SchemaRegistryAsyncClient schemaRegistryAsyncClient = new SchemaRegistryClientBuilder()\n     .credential(tokenCredential)\n     .fullyQualifiedNamespace(\"{schema-registry-endpoint}\")\n     .buildAsyncClient();\n\n // By setting autoRegisterSchema to true, if the schema does not exist in the Schema Registry instance, it is\n // added to the instance. By default, this is false, so it will error if the schema is not found.\n SchemaRegistryApacheAvroSerializer serializer = new SchemaRegistryApacheAvroSerializerBuilder()\n     .schemaRegistryClient(schemaRegistryAsyncClient)\n     .autoRegisterSchemas(true)\n     .schemaGroup(\"{schema-group}\")\n     .buildSerializer();\n```"
metadata: {}
package: "com.azure.data.schemaregistry.apacheavro"
artifact: com.azure:azure-data-schemaregistry-apacheavro:1.0.3
