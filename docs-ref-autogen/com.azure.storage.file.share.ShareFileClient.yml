### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.share.ShareFileClient"
  id: "ShareFileClient"
  parent: "com.azure.storage.file.share"
  children:
  - "com.azure.storage.file.share.ShareFileClient.ShareFileClient(com.azure.storage.file.share.ShareFileAsyncClient)"
  - "com.azure.storage.file.share.ShareFileClient.abortCopy(java.lang.String)"
  - "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.beginCopy(java.lang.String,com.azure.storage.file.share.FileSmbProperties,java.lang.String,com.azure.storage.file.share.models.PermissionCopyModeType,java.lang.Boolean,java.lang.Boolean,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.storage.file.share.models.ShareRequestConditions)"
  - "com.azure.storage.file.share.ShareFileClient.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration)"
  - "com.azure.storage.file.share.ShareFileClient.clearRange(long)"
  - "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse(long,long,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse(long,long,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.create(long)"
  - "com.azure.storage.file.share.ShareFileClient.createWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.createWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.delete()"
  - "com.azure.storage.file.share.ShareFileClient.deleteWithResponse(com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.deleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.download(java.io.OutputStream)"
  - "com.azure.storage.file.share.ShareFileClient.downloadToFile(java.lang.String)"
  - "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareFileRange,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.downloadWithResponse(java.io.OutputStream,com.azure.storage.file.share.models.ShareFileRange,java.lang.Boolean,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.downloadWithResponse(java.io.OutputStream,com.azure.storage.file.share.models.ShareFileRange,java.lang.Boolean,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.forceCloseAllHandles(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.forceCloseHandle(java.lang.String)"
  - "com.azure.storage.file.share.ShareFileClient.forceCloseHandleWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.generateSas(com.azure.storage.file.share.sas.ShareServiceSasSignatureValues)"
  - "com.azure.storage.file.share.ShareFileClient.getAccountName()"
  - "com.azure.storage.file.share.ShareFileClient.getFileOutputStream()"
  - "com.azure.storage.file.share.ShareFileClient.getFileOutputStream(long)"
  - "com.azure.storage.file.share.ShareFileClient.getFilePath()"
  - "com.azure.storage.file.share.ShareFileClient.getFileUrl()"
  - "com.azure.storage.file.share.ShareFileClient.getHttpPipeline()"
  - "com.azure.storage.file.share.ShareFileClient.getProperties()"
  - "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse(com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.getServiceVersion()"
  - "com.azure.storage.file.share.ShareFileClient.getShareName()"
  - "com.azure.storage.file.share.ShareFileClient.getShareSnapshotId()"
  - "com.azure.storage.file.share.ShareFileClient.listHandles()"
  - "com.azure.storage.file.share.ShareFileClient.listHandles(java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.listRanges()"
  - "com.azure.storage.file.share.ShareFileClient.listRanges(com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.listRanges(com.azure.storage.file.share.models.ShareFileRange,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.openInputStream()"
  - "com.azure.storage.file.share.ShareFileClient.openInputStream(com.azure.storage.file.share.models.ShareFileRange)"
  - "com.azure.storage.file.share.ShareFileClient.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.setProperties(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String)"
  - "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.upload(java.io.InputStream,long)"
  - "com.azure.storage.file.share.ShareFileClient.uploadFromFile(java.lang.String)"
  - "com.azure.storage.file.share.ShareFileClient.uploadFromFile(java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions)"
  - "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrl(long,long,long,java.lang.String)"
  - "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.uploadWithResponse(java.io.InputStream,long,java.lang.Long,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.share.ShareFileClient.uploadWithResponse(java.io.InputStream,long,java.lang.Long,java.time.Duration,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "ShareFileClient"
  nameWithType: "ShareFileClient"
  fullName: "com.azure.storage.file.share.ShareFileClient"
  type: "Class"
  package: "com.azure.storage.file.share"
  summary: "This class provides a client that contains all the operations for interacting files under Azure Storage File Service. Operations allowed by the client are creating, uploading, copying, listing, downloading, and deleting files.\n\n**Instantiating a synchronous File Client**\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.instantiation\\}\n\nView <xref uid=\"com.azure.storage.file.share.ShareFileClientBuilder\" data-throw-if-not-resolved=\"false\">this</xref> for additional ways to construct the client."
  syntax:
    content: "public class ShareFileClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.share.ShareFileClient.ShareFileClient(com.azure.storage.file.share.ShareFileAsyncClient)"
  id: "ShareFileClient(com.azure.storage.file.share.ShareFileAsyncClient)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "ShareFileClient(ShareFileAsyncClient shareFileAsyncClient)"
  nameWithType: "ShareFileClient.ShareFileClient(ShareFileAsyncClient shareFileAsyncClient)"
  fullName: "com.azure.storage.file.share.ShareFileClient.ShareFileClient(ShareFileAsyncClient shareFileAsyncClient)"
  overload: "com.azure.storage.file.share.ShareFileClient.ShareFileClient*"
  type: "Constructor"
  package: "com.azure.storage.file.share"
  summary: "Creates a ShareFileClient that wraps a ShareFileAsyncClient and requests."
  syntax:
    content: " ShareFileClient(ShareFileAsyncClient shareFileAsyncClient)"
    parameters:
    - id: "shareFileAsyncClient"
      type: "com.azure.storage.file.share.ShareFileAsyncClient"
      description: "ShareFileAsyncClient that is used to send requests"
- uid: "com.azure.storage.file.share.ShareFileClient.abortCopy(java.lang.String)"
  id: "abortCopy(java.lang.String)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "abortCopy(String copyId)"
  nameWithType: "ShareFileClient.abortCopy(String copyId)"
  fullName: "com.azure.storage.file.share.ShareFileClient.abortCopy(String copyId)"
  overload: "com.azure.storage.file.share.ShareFileClient.abortCopy*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata.\n\n**Code Samples**\n\nAbort copy file from copy id(\"someCopyId\")\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.abortCopy\\#string\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file"
  syntax:
    content: "public void abortCopy(String copyId)"
    parameters:
    - id: "copyId"
      type: "java.lang.String"
      description: "Specifies the copy id which has copying pending status associate with it."
- uid: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "abortCopyWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "abortCopyWithResponse(String copyId, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.abortCopyWithResponse(String copyId, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse(String copyId, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata.\n\n**Code Samples**\n\nAbort copy file from copy id(\"someCopyId\")\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse\\#string-ShareRequestConditions-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file"
  syntax:
    content: "public Response<Void> abortCopyWithResponse(String copyId, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "copyId"
      type: "java.lang.String"
      description: "Specifies the copy id which has copying pending status associate with it."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response containing the status of aborting copy the file."
- uid: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "abortCopyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "abortCopyWithResponse(String copyId, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.abortCopyWithResponse(String copyId, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse(String copyId, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata.\n\n**Code Samples**\n\nAbort copy file from copy id(\"someCopyId\")\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse\\#string-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file"
  syntax:
    content: "public Response<Void> abortCopyWithResponse(String copyId, Duration timeout, Context context)"
    parameters:
    - id: "copyId"
      type: "java.lang.String"
      description: "Specifies the copy id which has copying pending status associate with it."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response containing the status of aborting copy the file."
- uid: "com.azure.storage.file.share.ShareFileClient.beginCopy(java.lang.String,com.azure.storage.file.share.FileSmbProperties,java.lang.String,com.azure.storage.file.share.models.PermissionCopyModeType,java.lang.Boolean,java.lang.Boolean,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.storage.file.share.models.ShareRequestConditions)"
  id: "beginCopy(java.lang.String,com.azure.storage.file.share.FileSmbProperties,java.lang.String,com.azure.storage.file.share.models.PermissionCopyModeType,java.lang.Boolean,java.lang.Boolean,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.storage.file.share.models.ShareRequestConditions)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "beginCopy(String sourceUrl, FileSmbProperties smbProperties, String filePermission, PermissionCopyModeType filePermissionCopyMode, Boolean ignoreReadOnly, Boolean setArchiveAttribute, Map<String,String> metadata, Duration pollInterval, ShareRequestConditions destinationRequestConditions)"
  nameWithType: "ShareFileClient.beginCopy(String sourceUrl, FileSmbProperties smbProperties, String filePermission, PermissionCopyModeType filePermissionCopyMode, Boolean ignoreReadOnly, Boolean setArchiveAttribute, Map<String,String> metadata, Duration pollInterval, ShareRequestConditions destinationRequestConditions)"
  fullName: "com.azure.storage.file.share.ShareFileClient.beginCopy(String sourceUrl, FileSmbProperties smbProperties, String filePermission, PermissionCopyModeType filePermissionCopyMode, Boolean ignoreReadOnly, Boolean setArchiveAttribute, Map<String,String> metadata, Duration pollInterval, ShareRequestConditions destinationRequestConditions)"
  overload: "com.azure.storage.file.share.ShareFileClient.beginCopy*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Copies a blob or file to a destination file within the storage account.\n\n**Code Samples**\n\nCopy file from source getDirectoryUrl to the `resourcePath`\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.beginCopy\\#string-filesmbproperties-string-permissioncopymodetype-boolean-boolean-map-duration-ShareRequestConditions\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-file"
  syntax:
    content: "public SyncPoller<ShareFileCopyInfo,Void> beginCopy(String sourceUrl, FileSmbProperties smbProperties, String filePermission, PermissionCopyModeType filePermissionCopyMode, Boolean ignoreReadOnly, Boolean setArchiveAttribute, Map<String,String> metadata, Duration pollInterval, ShareRequestConditions destinationRequestConditions)"
    parameters:
    - id: "sourceUrl"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length."
    - id: "smbProperties"
      type: "com.azure.storage.file.share.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file."
    - id: "filePermissionCopyMode"
      type: "com.azure.storage.file.share.models.PermissionCopyModeType"
      description: "Mode of file permission acquisition."
    - id: "ignoreReadOnly"
      type: "java.lang.Boolean"
      description: "Whether or not to copy despite target being read only. (default is false)"
    - id: "setArchiveAttribute"
      type: "java.lang.Boolean"
      description: "Whether or not the archive attribute is to be set on the target. (default is true)"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional name-value pairs associated with the file as metadata. Metadata names must adhere to the\n naming rules."
    - id: "pollInterval"
      type: "java.time.Duration"
      description: "Duration between each poll for the copy status. If none is specified, a default of one second\n is used."
    - id: "destinationRequestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    return:
      type: "com.azure.core.util.polling.SyncPoller<com.azure.storage.file.share.models.ShareFileCopyInfo,java.lang.Void>"
      description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\">SyncPoller</xref> to poll the progress of copy operation."
- uid: "com.azure.storage.file.share.ShareFileClient.beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration)"
  id: "beginCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "beginCopy(String sourceUrl, Map<String,String> metadata, Duration pollInterval)"
  nameWithType: "ShareFileClient.beginCopy(String sourceUrl, Map<String,String> metadata, Duration pollInterval)"
  fullName: "com.azure.storage.file.share.ShareFileClient.beginCopy(String sourceUrl, Map<String,String> metadata, Duration pollInterval)"
  overload: "com.azure.storage.file.share.ShareFileClient.beginCopy*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Copies a blob or file to a destination file within the storage account.\n\n**Code Samples**\n\nCopy file from source getDirectoryUrl to the `resourcePath`\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.beginCopy\\#string-map-duration\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-file"
  syntax:
    content: "public SyncPoller<ShareFileCopyInfo,Void> beginCopy(String sourceUrl, Map<String,String> metadata, Duration pollInterval)"
    parameters:
    - id: "sourceUrl"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional name-value pairs associated with the file as metadata. Metadata names must adhere to the\n naming rules."
    - id: "pollInterval"
      type: "java.time.Duration"
      description: "Duration between each poll for the copy status. If none is specified, a default of one second\n is used."
    return:
      type: "com.azure.core.util.polling.SyncPoller<com.azure.storage.file.share.models.ShareFileCopyInfo,java.lang.Void>"
      description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\">SyncPoller</xref> to poll the progress of copy operation."
- uid: "com.azure.storage.file.share.ShareFileClient.clearRange(long)"
  id: "clearRange(long)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "clearRange(long length)"
  nameWithType: "ShareFileClient.clearRange(long length)"
  fullName: "com.azure.storage.file.share.ShareFileClient.clearRange(long length)"
  overload: "com.azure.storage.file.share.ShareFileClient.clearRange*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Clears a range of bytes to specific of a file in storage file service. Clear operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nClears the first 1024 bytes.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.clearRange\\#long\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public ShareFileUploadInfo clearRange(long length)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being cleared."
    return:
      type: "com.azure.storage.file.share.models.ShareFileUploadInfo"
      description: "The <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse(long,long,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "clearRangeWithResponse(long,long,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "clearRangeWithResponse(long length, long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.clearRangeWithResponse(long length, long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse(long length, long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Clears a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nClear the range starting from 1024 with length of 1024.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse\\#long-long-ShareRequestConditions-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<ShareFileUploadInfo> clearRangeWithResponse(long length, long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "offset"
      type: "long"
      description: "Starting point of the upload range, if <code>null</code> it will start from the beginning."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref> with headers and response\n status code."
- uid: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse(long,long,java.time.Duration,com.azure.core.util.Context)"
  id: "clearRangeWithResponse(long,long,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Clears a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nClear the range starting from 1024 with length of 1024.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse\\#long-long-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<ShareFileUploadInfo> clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "offset"
      type: "long"
      description: "Starting point of the upload range, if <code>null</code> it will start from the beginning."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref> with headers and response\n status code."
- uid: "com.azure.storage.file.share.ShareFileClient.create(long)"
  id: "create(long)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "create(long maxSize)"
  nameWithType: "ShareFileClient.create(long maxSize)"
  fullName: "com.azure.storage.file.share.ShareFileClient.create(long maxSize)"
  overload: "com.azure.storage.file.share.ShareFileClient.create*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Creates a file in the storage account and returns a response of <xref uid=\"com.azure.storage.file.share.models.ShareFileInfo\" data-throw-if-not-resolved=\"false\">ShareFileInfo</xref> to interact with it.\n\n**Code Samples**\n\nCreate the file with length of 1024 bytes, some headers and metadata.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.create\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file"
  syntax:
    content: "public ShareFileInfo create(long maxSize)"
    parameters:
    - id: "maxSize"
      type: "long"
      description: "The maximum size in bytes for the file, up to 1 TiB."
    return:
      type: "com.azure.storage.file.share.models.ShareFileInfo"
      description: "The <xref uid=\"com.azure.storage.file.share.models.ShareFileInfo\" data-throw-if-not-resolved=\"false\">file info</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.createWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "createWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.createWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Creates a file in the storage account and returns a response of ShareFileInfo to interact with it.\n\n**Code Samples**\n\nCreate the file with length of 1024 bytes, some headers, file smb properties and metadata.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.createWithResponse\\#long-ShareFileHttpHeaders-FileSmbProperties-String-Map-ShareRequestConditions-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file"
  syntax:
    content: "public Response<ShareFileInfo> createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "maxSize"
      type: "long"
      description: "The maximum size in bytes for the file, up to 1 TiB."
    - id: "httpHeaders"
      type: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.share.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional name-value pairs associated with the file as metadata."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileInfo\" data-throw-if-not-resolved=\"false\">file info</xref> and the status of creating the file."
- uid: "com.azure.storage.file.share.ShareFileClient.createWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  id: "createWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.createWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Creates a file in the storage account and returns a response of ShareFileInfo to interact with it.\n\n**Code Samples**\n\nCreate the file with length of 1024 bytes, some headers, file smb properties and metadata.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.createWithResponse\\#long-ShareFileHttpHeaders-FileSmbProperties-String-Map-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file"
  syntax:
    content: "public Response<ShareFileInfo> createWithResponse(long maxSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
    parameters:
    - id: "maxSize"
      type: "long"
      description: "The maximum size in bytes for the file, up to 1 TiB."
    - id: "httpHeaders"
      type: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.share.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional name-value pairs associated with the file as metadata."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileInfo\" data-throw-if-not-resolved=\"false\">file info</xref> and the status of creating the file."
- uid: "com.azure.storage.file.share.ShareFileClient.delete()"
  id: "delete()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "ShareFileClient.delete()"
  fullName: "com.azure.storage.file.share.ShareFileClient.delete()"
  overload: "com.azure.storage.file.share.ShareFileClient.delete*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Deletes the file associate with the client.\n\n**Code Samples**\n\nDelete the file\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.delete\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2"
  syntax:
    content: "public void delete()"
- uid: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse(com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "deleteWithResponse(com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "deleteWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.deleteWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Deletes the file associate with the client.\n\n**Code Samples**\n\nDelete the file\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.deleteWithResponse\\#ShareRequestConditions-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2"
  syntax:
    content: "public Response<Void> deleteWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response that only contains headers and response status code"
- uid: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  id: "deleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "deleteWithResponse(Duration timeout, Context context)"
  nameWithType: "ShareFileClient.deleteWithResponse(Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse(Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Deletes the file associate with the client.\n\n**Code Samples**\n\nDelete the file\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.deleteWithResponse\\#duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2"
  syntax:
    content: "public Response<Void> deleteWithResponse(Duration timeout, Context context)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response that only contains headers and response status code"
- uid: "com.azure.storage.file.share.ShareFileClient.download(java.io.OutputStream)"
  id: "download(java.io.OutputStream)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "download(OutputStream stream)"
  nameWithType: "ShareFileClient.download(OutputStream stream)"
  fullName: "com.azure.storage.file.share.ShareFileClient.download(OutputStream stream)"
  overload: "com.azure.storage.file.share.ShareFileClient.download*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Downloads a file from the system, including its metadata and properties\n\n**Code Samples**\n\nDownload the file with its metadata and properties.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.download\\#OutputStream\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public void download(OutputStream stream)"
    parameters:
    - id: "stream"
      type: "java.io.OutputStream"
      description: "A non-null <xref uid=\"\" data-throw-if-not-resolved=\"false\">OutputStream</xref> where the downloaded data will be written."
- uid: "com.azure.storage.file.share.ShareFileClient.downloadToFile(java.lang.String)"
  id: "downloadToFile(java.lang.String)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "downloadToFile(String downloadFilePath)"
  nameWithType: "ShareFileClient.downloadToFile(String downloadFilePath)"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadToFile(String downloadFilePath)"
  overload: "com.azure.storage.file.share.ShareFileClient.downloadToFile*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Downloads a file from the system, including its metadata and properties into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown.\n\n**Code Samples**\n\nDownload the file to current folder.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.downloadToFile\\#string\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public ShareFileProperties downloadToFile(String downloadFilePath)"
    parameters:
    - id: "downloadFilePath"
      type: "java.lang.String"
      description: "The path where store the downloaded file"
    return:
      type: "com.azure.storage.file.share.models.ShareFileProperties"
      description: "The properties of the file."
- uid: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "downloadToFileWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Downloads a file from the system, including its metadata and properties into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown.\n\n**Code Samples**\n\nDownload the file from 1024 to 2048 bytes to current folder.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse\\#String-ShareFileRange-ShareRequestConditions-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public Response<ShareFileProperties> downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "downloadFilePath"
      type: "java.lang.String"
      description: "The path where store the downloaded file"
    - id: "range"
      type: "com.azure.storage.file.share.models.ShareFileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileProperties>"
      description: "The response of the file properties."
- uid: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareFileRange,java.time.Duration,com.azure.core.util.Context)"
  id: "downloadToFileWithResponse(java.lang.String,com.azure.storage.file.share.models.ShareFileRange,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Downloads a file from the system, including its metadata and properties into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown.\n\n**Code Samples**\n\nDownload the file from 1024 to 2048 bytes to current folder.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse\\#String-ShareFileRange-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public Response<ShareFileProperties> downloadToFileWithResponse(String downloadFilePath, ShareFileRange range, Duration timeout, Context context)"
    parameters:
    - id: "downloadFilePath"
      type: "java.lang.String"
      description: "The path where store the downloaded file"
    - id: "range"
      type: "com.azure.storage.file.share.models.ShareFileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileProperties>"
      description: "The response of the file properties."
- uid: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse(java.io.OutputStream,com.azure.storage.file.share.models.ShareFileRange,java.lang.Boolean,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "downloadWithResponse(java.io.OutputStream,com.azure.storage.file.share.models.ShareFileRange,java.lang.Boolean,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Downloads a file from the system, including its metadata and properties\n\n**Code Samples**\n\nDownload the file from 1024 to 2048 bytes with its metadata and properties and without the contentMD5.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.downloadWithResponse\\#OutputStream-ShareFileRange-Boolean-ShareRequestConditions-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public ShareFileDownloadResponse downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "stream"
      type: "java.io.OutputStream"
      description: "A non-null <xref uid=\"\" data-throw-if-not-resolved=\"false\">OutputStream</xref> where the downloaded data will be written."
    - id: "range"
      type: "com.azure.storage.file.share.models.ShareFileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "rangeGetContentMD5"
      type: "java.lang.Boolean"
      description: "Optional boolean which the service returns the MD5 hash for the range when it sets to\n true, as long as the range is less than or equal to 4 MB in size."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.storage.file.share.models.ShareFileDownloadResponse"
      description: "A response containing the headers and response status code"
- uid: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse(java.io.OutputStream,com.azure.storage.file.share.models.ShareFileRange,java.lang.Boolean,java.time.Duration,com.azure.core.util.Context)"
  id: "downloadWithResponse(java.io.OutputStream,com.azure.storage.file.share.models.ShareFileRange,java.lang.Boolean,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Downloads a file from the system, including its metadata and properties\n\n**Code Samples**\n\nDownload the file from 1024 to 2048 bytes with its metadata and properties and without the contentMD5.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.downloadWithResponse\\#OutputStream-ShareFileRange-Boolean-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public ShareFileDownloadResponse downloadWithResponse(OutputStream stream, ShareFileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
    parameters:
    - id: "stream"
      type: "java.io.OutputStream"
      description: "A non-null <xref uid=\"\" data-throw-if-not-resolved=\"false\">OutputStream</xref> where the downloaded data will be written."
    - id: "range"
      type: "com.azure.storage.file.share.models.ShareFileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "rangeGetContentMD5"
      type: "java.lang.Boolean"
      description: "Optional boolean which the service returns the MD5 hash for the range when it sets to\n true, as long as the range is less than or equal to 4 MB in size."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.storage.file.share.models.ShareFileDownloadResponse"
      description: "A response containing the headers and response status code"
- uid: "com.azure.storage.file.share.ShareFileClient.forceCloseAllHandles(java.time.Duration,com.azure.core.util.Context)"
  id: "forceCloseAllHandles(java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "forceCloseAllHandles(Duration timeout, Context context)"
  nameWithType: "ShareFileClient.forceCloseAllHandles(Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.forceCloseAllHandles(Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.forceCloseAllHandles*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Closes all handles opened on the file at the service.\n\n**Code Samples**\n\nForce close all handles.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.forceCloseAllHandles\\#Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles"
  syntax:
    content: "public CloseHandlesInfo forceCloseAllHandles(Duration timeout, Context context)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.storage.file.share.models.CloseHandlesInfo"
      description: "Information about the closed handles"
- uid: "com.azure.storage.file.share.ShareFileClient.forceCloseHandle(java.lang.String)"
  id: "forceCloseHandle(java.lang.String)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "forceCloseHandle(String handleId)"
  nameWithType: "ShareFileClient.forceCloseHandle(String handleId)"
  fullName: "com.azure.storage.file.share.ShareFileClient.forceCloseHandle(String handleId)"
  overload: "com.azure.storage.file.share.ShareFileClient.forceCloseHandle*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Closes a handle on the file at the service. This is intended to be used alongside <xref uid=\"com.azure.storage.file.share.ShareFileClient.listHandles()\" data-throw-if-not-resolved=\"false\">#listHandles()</xref>.\n\n**Code Samples**\n\nForce close handles returned by list handles.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.forceCloseHandle\\#String\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles"
  syntax:
    content: "public CloseHandlesInfo forceCloseHandle(String handleId)"
    parameters:
    - id: "handleId"
      type: "java.lang.String"
      description: "Handle ID to be closed."
    return:
      type: "com.azure.storage.file.share.models.CloseHandlesInfo"
      description: "Information about the closed handles."
- uid: "com.azure.storage.file.share.ShareFileClient.forceCloseHandleWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "forceCloseHandleWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "forceCloseHandleWithResponse(String handleId, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.forceCloseHandleWithResponse(String handleId, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.forceCloseHandleWithResponse(String handleId, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.forceCloseHandleWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Closes a handle on the file at the service. This is intended to be used alongside <xref uid=\"com.azure.storage.file.share.ShareFileClient.listHandles()\" data-throw-if-not-resolved=\"false\">#listHandles()</xref>.\n\n**Code Samples**\n\nForce close handles returned by list handles.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.forceCloseHandleWithResponse\\#String\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles"
  syntax:
    content: "public Response<CloseHandlesInfo> forceCloseHandleWithResponse(String handleId, Duration timeout, Context context)"
    parameters:
    - id: "handleId"
      type: "java.lang.String"
      description: "Handle ID to be closed."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.CloseHandlesInfo>"
      description: "A response that contains information about the closed handles, headers and response status code."
- uid: "com.azure.storage.file.share.ShareFileClient.generateSas(com.azure.storage.file.share.sas.ShareServiceSasSignatureValues)"
  id: "generateSas(com.azure.storage.file.share.sas.ShareServiceSasSignatureValues)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "generateSas(ShareServiceSasSignatureValues shareServiceSasSignatureValues)"
  nameWithType: "ShareFileClient.generateSas(ShareServiceSasSignatureValues shareServiceSasSignatureValues)"
  fullName: "com.azure.storage.file.share.ShareFileClient.generateSas(ShareServiceSasSignatureValues shareServiceSasSignatureValues)"
  overload: "com.azure.storage.file.share.ShareFileClient.generateSas*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Generates a service SAS for the file using the specified <xref uid=\"com.azure.storage.file.share.sas.ShareServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">ShareServiceSasSignatureValues</xref> Note : The client must be authenticated via <xref uid=\"\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>\n\nSee <xref uid=\"com.azure.storage.file.share.sas.ShareServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">ShareServiceSasSignatureValues</xref> for more information on how to construct a service SAS.\n\n**Code Samples**\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.generateSas\\#ShareServiceSasSignatureValues\\}"
  syntax:
    content: "public String generateSas(ShareServiceSasSignatureValues shareServiceSasSignatureValues)"
    parameters:
    - id: "shareServiceSasSignatureValues"
      type: "com.azure.storage.file.share.sas.ShareServiceSasSignatureValues"
      description: "<xref uid=\"com.azure.storage.file.share.sas.ShareServiceSasSignatureValues\" data-throw-if-not-resolved=\"false\">ShareServiceSasSignatureValues</xref>"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> representing all SAS query parameters."
- uid: "com.azure.storage.file.share.ShareFileClient.getAccountName()"
  id: "getAccountName()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getAccountName()"
  nameWithType: "ShareFileClient.getAccountName()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getAccountName()"
  overload: "com.azure.storage.file.share.ShareFileClient.getAccountName*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Get associated account name."
  syntax:
    content: "public String getAccountName()"
    return:
      type: "java.lang.String"
      description: "account name associated with this storage resource."
- uid: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream()"
  id: "getFileOutputStream()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getFileOutputStream()"
  nameWithType: "ShareFileClient.getFileOutputStream()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream()"
  overload: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Creates and opens an output stream to write data to the file. If the file already exists on the service, it will be overwritten."
  syntax:
    content: "public final StorageFileOutputStream getFileOutputStream()"
    return:
      type: "com.azure.storage.file.share.StorageFileOutputStream"
      description: "A <xref uid=\"com.azure.storage.file.share.StorageFileOutputStream\" data-throw-if-not-resolved=\"false\">StorageFileOutputStream</xref> object used to write data to the file."
- uid: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream(long)"
  id: "getFileOutputStream(long)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getFileOutputStream(long offset)"
  nameWithType: "ShareFileClient.getFileOutputStream(long offset)"
  fullName: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream(long offset)"
  overload: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Creates and opens an output stream to write data to the file. If the file already exists on the service, it will be overwritten."
  syntax:
    content: "public final StorageFileOutputStream getFileOutputStream(long offset)"
    parameters:
    - id: "offset"
      type: "long"
      description: "Starting point of the upload range, if <code>null</code> it will start from the beginning."
    return:
      type: "com.azure.storage.file.share.StorageFileOutputStream"
      description: "A <xref uid=\"com.azure.storage.file.share.StorageFileOutputStream\" data-throw-if-not-resolved=\"false\">StorageFileOutputStream</xref> object used to write data to the file."
- uid: "com.azure.storage.file.share.ShareFileClient.getFilePath()"
  id: "getFilePath()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getFilePath()"
  nameWithType: "ShareFileClient.getFilePath()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getFilePath()"
  overload: "com.azure.storage.file.share.ShareFileClient.getFilePath*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Get file path of the client.\n\nGet the file path.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.getFilePath\\}"
  syntax:
    content: "public String getFilePath()"
    return:
      type: "java.lang.String"
      description: "The path of the file."
- uid: "com.azure.storage.file.share.ShareFileClient.getFileUrl()"
  id: "getFileUrl()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getFileUrl()"
  nameWithType: "ShareFileClient.getFileUrl()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getFileUrl()"
  overload: "com.azure.storage.file.share.ShareFileClient.getFileUrl*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Get the url of the storage file client."
  syntax:
    content: "public String getFileUrl()"
    return:
      type: "java.lang.String"
      description: "the URL of the storage file client."
- uid: "com.azure.storage.file.share.ShareFileClient.getHttpPipeline()"
  id: "getHttpPipeline()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getHttpPipeline()"
  nameWithType: "ShareFileClient.getHttpPipeline()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getHttpPipeline()"
  overload: "com.azure.storage.file.share.ShareFileClient.getHttpPipeline*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Gets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpPipeline</xref> powering this client."
  syntax:
    content: "public HttpPipeline getHttpPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "The pipeline."
- uid: "com.azure.storage.file.share.ShareFileClient.getProperties()"
  id: "getProperties()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "ShareFileClient.getProperties()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getProperties()"
  overload: "com.azure.storage.file.share.ShareFileClient.getProperties*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Retrieves the properties of the storage account's file. The properties includes file metadata, last modified date, is server encrypted, and eTag.\n\n**Code Samples**\n\nRetrieve file properties\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.getProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties"
  syntax:
    content: "public ShareFileProperties getProperties()"
    return:
      type: "com.azure.storage.file.share.models.ShareFileProperties"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareFileProperties\" data-throw-if-not-resolved=\"false\">Storage file properties</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse(com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "getPropertiesWithResponse(com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getPropertiesWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.getPropertiesWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Retrieves the properties of the storage account's file. The properties includes file metadata, last modified date, is server encrypted, and eTag.\n\n**Code Samples**\n\nRetrieve file properties\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse\\#ShareRequestConditions-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties"
  syntax:
    content: "public Response<ShareFileProperties> getPropertiesWithResponse(ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileProperties>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileProperties\" data-throw-if-not-resolved=\"false\">Storage file properties</xref> with headers and\n status code."
- uid: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  id: "getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getPropertiesWithResponse(Duration timeout, Context context)"
  nameWithType: "ShareFileClient.getPropertiesWithResponse(Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse(Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Retrieves the properties of the storage account's file. The properties includes file metadata, last modified date, is server encrypted, and eTag.\n\n**Code Samples**\n\nRetrieve file properties\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse\\#duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties"
  syntax:
    content: "public Response<ShareFileProperties> getPropertiesWithResponse(Duration timeout, Context context)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileProperties>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileProperties\" data-throw-if-not-resolved=\"false\">Storage file properties</xref> with headers and\n status code."
- uid: "com.azure.storage.file.share.ShareFileClient.getServiceVersion()"
  id: "getServiceVersion()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getServiceVersion()"
  nameWithType: "ShareFileClient.getServiceVersion()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getServiceVersion()"
  overload: "com.azure.storage.file.share.ShareFileClient.getServiceVersion*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Gets the service version the client is using."
  syntax:
    content: "public ShareServiceVersion getServiceVersion()"
    return:
      type: "com.azure.storage.file.share.ShareServiceVersion"
      description: "the service version the client is using."
- uid: "com.azure.storage.file.share.ShareFileClient.getShareName()"
  id: "getShareName()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getShareName()"
  nameWithType: "ShareFileClient.getShareName()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getShareName()"
  overload: "com.azure.storage.file.share.ShareFileClient.getShareName*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Get the share name of file client.\n\nGet the share name.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.getShareName\\}"
  syntax:
    content: "public String getShareName()"
    return:
      type: "java.lang.String"
      description: "The share name of the file."
- uid: "com.azure.storage.file.share.ShareFileClient.getShareSnapshotId()"
  id: "getShareSnapshotId()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "getShareSnapshotId()"
  nameWithType: "ShareFileClient.getShareSnapshotId()"
  fullName: "com.azure.storage.file.share.ShareFileClient.getShareSnapshotId()"
  overload: "com.azure.storage.file.share.ShareFileClient.getShareSnapshotId*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Get snapshot id which attached to <xref uid=\"com.azure.storage.file.share.ShareFileClient\" data-throw-if-not-resolved=\"false\">ShareFileClient</xref>. Return `null` if no snapshot id attached.\n\n**Code Samples**\n\nGet the share snapshot id.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.getShareSnapshotId\\}"
  syntax:
    content: "public String getShareSnapshotId()"
    return:
      type: "java.lang.String"
      description: "The snapshot id which is a unique <code>DateTime</code> value that identifies the share snapshot to its base\n share."
- uid: "com.azure.storage.file.share.ShareFileClient.listHandles()"
  id: "listHandles()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "listHandles()"
  nameWithType: "ShareFileClient.listHandles()"
  fullName: "com.azure.storage.file.share.ShareFileClient.listHandles()"
  overload: "com.azure.storage.file.share.ShareFileClient.listHandles*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "List of open handles on a file.\n\n**Code Samples**\n\nList all handles for the file client.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.listHandles\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles"
  syntax:
    content: "public PagedIterable<HandleItem> listHandles()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.HandleItem>"
      description: "<xref uid=\"com.azure.storage.file.share.models.HandleItem\" data-throw-if-not-resolved=\"false\">handles</xref> in the files that satisfy the requirements"
- uid: "com.azure.storage.file.share.ShareFileClient.listHandles(java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  id: "listHandles(java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "listHandles(Integer maxResultsPerPage, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.listHandles(Integer maxResultsPerPage, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.listHandles(Integer maxResultsPerPage, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.listHandles*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "List of open handles on a file.\n\n**Code Samples**\n\nList 10 handles for the file client.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.listHandles\\#integer-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles"
  syntax:
    content: "public PagedIterable<HandleItem> listHandles(Integer maxResultsPerPage, Duration timeout, Context context)"
    parameters:
    - id: "maxResultsPerPage"
      type: "java.lang.Integer"
      description: "Optional max number of results returned per page"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.HandleItem>"
      description: "<xref uid=\"com.azure.storage.file.share.models.HandleItem\" data-throw-if-not-resolved=\"false\">handles</xref> in the file that satisfy the requirements"
- uid: "com.azure.storage.file.share.ShareFileClient.listRanges()"
  id: "listRanges()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "listRanges()"
  nameWithType: "ShareFileClient.listRanges()"
  fullName: "com.azure.storage.file.share.ShareFileClient.listRanges()"
  overload: "com.azure.storage.file.share.ShareFileClient.listRanges*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "List of valid ranges for a file.\n\n**Code Samples**\n\nList all ranges for the file client.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.listRanges\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges"
  syntax:
    content: "public PagedIterable<ShareFileRange> listRanges()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.ShareFileRange>"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareFileRange\" data-throw-if-not-resolved=\"false\">ranges</xref> in the files."
- uid: "com.azure.storage.file.share.ShareFileClient.listRanges(com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "listRanges(com.azure.storage.file.share.models.ShareFileRange,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.listRanges*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "List of valid ranges for a file.\n\n**Code Samples**\n\nList all ranges within the file range from 1KB to 2KB.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.listRanges\\#ShareFileRange-ShareRequestConditions-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges"
  syntax:
    content: "public PagedIterable<ShareFileRange> listRanges(ShareFileRange range, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "range"
      type: "com.azure.storage.file.share.models.ShareFileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.ShareFileRange>"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareFileRange\" data-throw-if-not-resolved=\"false\">ranges</xref> in the files that satisfy the requirements"
- uid: "com.azure.storage.file.share.ShareFileClient.listRanges(com.azure.storage.file.share.models.ShareFileRange,java.time.Duration,com.azure.core.util.Context)"
  id: "listRanges(com.azure.storage.file.share.models.ShareFileRange,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "listRanges(ShareFileRange range, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.listRanges(ShareFileRange range, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.listRanges(ShareFileRange range, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.listRanges*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "List of valid ranges for a file.\n\n**Code Samples**\n\nList all ranges within the file range from 1KB to 2KB.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.listRanges\\#ShareFileRange-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges"
  syntax:
    content: "public PagedIterable<ShareFileRange> listRanges(ShareFileRange range, Duration timeout, Context context)"
    parameters:
    - id: "range"
      type: "com.azure.storage.file.share.models.ShareFileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.ShareFileRange>"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareFileRange\" data-throw-if-not-resolved=\"false\">ranges</xref> in the files that satisfy the requirements"
- uid: "com.azure.storage.file.share.ShareFileClient.openInputStream()"
  id: "openInputStream()"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "openInputStream()"
  nameWithType: "ShareFileClient.openInputStream()"
  fullName: "com.azure.storage.file.share.ShareFileClient.openInputStream()"
  overload: "com.azure.storage.file.share.ShareFileClient.openInputStream*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Opens a file input stream to download the file."
  syntax:
    content: "public final StorageFileInputStream openInputStream()"
    return:
      type: "com.azure.storage.file.share.StorageFileInputStream"
      description: "An <code>InputStream</code> object that represents the stream to use for reading from the file."
- uid: "com.azure.storage.file.share.ShareFileClient.openInputStream(com.azure.storage.file.share.models.ShareFileRange)"
  id: "openInputStream(com.azure.storage.file.share.models.ShareFileRange)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "openInputStream(ShareFileRange range)"
  nameWithType: "ShareFileClient.openInputStream(ShareFileRange range)"
  fullName: "com.azure.storage.file.share.ShareFileClient.openInputStream(ShareFileRange range)"
  overload: "com.azure.storage.file.share.ShareFileClient.openInputStream*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Opens a file input stream to download the specified range of the file."
  syntax:
    content: "public final StorageFileInputStream openInputStream(ShareFileRange range)"
    parameters:
    - id: "range"
      type: "com.azure.storage.file.share.models.ShareFileRange"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareFileRange\" data-throw-if-not-resolved=\"false\">ShareFileRange</xref>"
    return:
      type: "com.azure.storage.file.share.StorageFileInputStream"
      description: "An <code>InputStream</code> object that represents the stream to use for reading from the file."
- uid: "com.azure.storage.file.share.ShareFileClient.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "setMetadata(Map<String,String> metadata)"
  nameWithType: "ShareFileClient.setMetadata(Map<String,String> metadata)"
  fullName: "com.azure.storage.file.share.ShareFileClient.setMetadata(Map<String,String> metadata)"
  overload: "com.azure.storage.file.share.ShareFileClient.setMetadata*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Sets the user-defined metadata to associate to the file.\n\nIf `null` is passed for the metadata it will clear the metadata associated to the file.\n\n**Code Samples**\n\nSet the metadata to \"file:updatedMetadata\"\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setMetadata\\#map\\}\n\nClear the metadata of the file\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setMetadata\\#map.clearMetadata\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata"
  syntax:
    content: "public ShareFileMetadataInfo setMetadata(Map<String,String> metadata)"
    parameters:
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Options.Metadata to set on the file, if null is passed the metadata for the file is cleared"
    return:
      type: "com.azure.storage.file.share.models.ShareFileMetadataInfo"
      description: "The <xref uid=\"com.azure.storage.file.share.models.ShareFileMetadataInfo\" data-throw-if-not-resolved=\"false\">file meta info</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "setMetadataWithResponse(Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.setMetadataWithResponse(Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse(Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Sets the user-defined metadata to associate to the file.\n\nIf `null` is passed for the metadata it will clear the metadata associated to the file.\n\n**Code Samples**\n\nSet the metadata to \"file:updatedMetadata\"\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse\\#map-ShareRequestConditions-duration-context\\}\n\nClear the metadata of the file\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse\\#map-ShareRequestConditions-duration-context.clearMetadata\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata"
  syntax:
    content: "public Response<ShareFileMetadataInfo> setMetadataWithResponse(Map<String,String> metadata, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Options.Metadata to set on the file, if null is passed the metadata for the file is cleared"
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileMetadataInfo>"
      description: "Response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileMetadataInfo\" data-throw-if-not-resolved=\"false\">file meta info</xref> with headers and status code"
- uid: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  id: "setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Sets the user-defined metadata to associate to the file.\n\nIf `null` is passed for the metadata it will clear the metadata associated to the file.\n\n**Code Samples**\n\nSet the metadata to \"file:updatedMetadata\"\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse\\#map-duration-context\\}\n\nClear the metadata of the file\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse\\#map-duration-context.clearMetadata\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata"
  syntax:
    content: "public Response<ShareFileMetadataInfo> setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
    parameters:
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Options.Metadata to set on the file, if null is passed the metadata for the file is cleared"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileMetadataInfo>"
      description: "Response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileMetadataInfo\" data-throw-if-not-resolved=\"false\">file meta info</xref> with headers and status code"
- uid: "com.azure.storage.file.share.ShareFileClient.setProperties(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String)"
  id: "setProperties(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "setProperties(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
  nameWithType: "ShareFileClient.setProperties(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
  fullName: "com.azure.storage.file.share.ShareFileClient.setProperties(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
  overload: "com.azure.storage.file.share.ShareFileClient.setProperties*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Sets the user-defined httpHeaders to associate to the file.\n\nIf `null` is passed for the httpHeaders it will clear the httpHeaders associated to the file.\n\n**Code Samples**\n\nSet the httpHeaders of contentType of \"text/plain\"\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setProperties\\#long-ShareFileHttpHeaders-FileSmbProperties-String\\}\n\nClear the httpHeaders of the file and preserve the SMB properties\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setProperties\\#long-ShareFileHttpHeaders-FileSmbProperties-String.clearHttpHeaderspreserveSMBProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties"
  syntax:
    content: "public ShareFileInfo setProperties(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
    parameters:
    - id: "newFileSize"
      type: "long"
      description: "New file size of the file"
    - id: "httpHeaders"
      type: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.share.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file"
    return:
      type: "com.azure.storage.file.share.models.ShareFileInfo"
      description: "The <xref uid=\"com.azure.storage.file.share.models.ShareFileInfo\" data-throw-if-not-resolved=\"false\">file info</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Sets the user-defined httpHeaders to associate to the file.\n\nIf `null` is passed for the httpHeaders it will clear the httpHeaders associated to the file.\n\n**Code Samples**\n\nSet the httpHeaders of contentType of \"text/plain\"\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse\\#long-ShareFileHttpHeaders-FileSmbProperties-String-ShareRequestConditions-Duration-Context\\}\n\nClear the httpHeaders of the file and preserve the SMB properties\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse\\#long-ShareFileHttpHeaders-FileSmbProperties-String-ShareRequestConditions-Duration-Context.clearHttpHeaderspreserveSMBProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties"
  syntax:
    content: "public Response<ShareFileInfo> setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "newFileSize"
      type: "long"
      description: "New file size of the file"
    - id: "httpHeaders"
      type: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.share.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file"
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileInfo>"
      description: "Response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileInfo\" data-throw-if-not-resolved=\"false\">file info</xref> with headers and status code"
- uid: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "setPropertiesWithResponse(long,com.azure.storage.file.share.models.ShareFileHttpHeaders,com.azure.storage.file.share.FileSmbProperties,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Sets the user-defined httpHeaders to associate to the file.\n\nIf `null` is passed for the httpHeaders it will clear the httpHeaders associated to the file.\n\n**Code Samples**\n\nSet the httpHeaders of contentType of \"text/plain\"\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse\\#long-ShareFileHttpHeaders-FileSmbProperties-String-Duration-Context\\}\n\nClear the httpHeaders of the file and preserve the SMB properties\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse\\#long-ShareFileHttpHeaders-FileSmbProperties-String-Duration-Context.clearHttpHeaderspreserveSMBProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties"
  syntax:
    content: "public Response<ShareFileInfo> setPropertiesWithResponse(long newFileSize, ShareFileHttpHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
    parameters:
    - id: "newFileSize"
      type: "long"
      description: "New file size of the file"
    - id: "httpHeaders"
      type: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.share.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileInfo>"
      description: "Response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileInfo\" data-throw-if-not-resolved=\"false\">file info</xref> with headers and status code"
- uid: "com.azure.storage.file.share.ShareFileClient.upload(java.io.InputStream,long)"
  id: "upload(java.io.InputStream,long)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "upload(InputStream data, long length)"
  nameWithType: "ShareFileClient.upload(InputStream data, long length)"
  fullName: "com.azure.storage.file.share.ShareFileClient.upload(InputStream data, long length)"
  overload: "com.azure.storage.file.share.ShareFileClient.upload*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads a range of bytes to the beginning of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload data \"default\" to the file in Storage File Service.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.upload\\#InputStream-long\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public ShareFileUploadInfo upload(InputStream data, long length)"
    parameters:
    - id: "data"
      type: "java.io.InputStream"
      description: "The data which will upload to the storage file."
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body. When the\n ShareFileRangeWriteType is set to clear, the value of this header must be set to zero."
    return:
      type: "com.azure.storage.file.share.models.ShareFileUploadInfo"
      description: "The <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadFromFile(java.lang.String)"
  id: "uploadFromFile(java.lang.String)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "uploadFromFile(String uploadFilePath)"
  nameWithType: "ShareFileClient.uploadFromFile(String uploadFilePath)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadFromFile(String uploadFilePath)"
  overload: "com.azure.storage.file.share.ShareFileClient.uploadFromFile*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads file to storage file service.\n\n**Code Samples**\n\nUpload the file from the source file path.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.uploadFromFile\\#string\\}\n\nFor more information, see the [Azure Docs Create File][] and [Azure Docs Upload][].\n\n\n[Azure Docs Create File]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n[Azure Docs Upload]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public void uploadFromFile(String uploadFilePath)"
    parameters:
    - id: "uploadFilePath"
      type: "java.lang.String"
      description: "The path where store the source file to upload"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadFromFile(java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions)"
  id: "uploadFromFile(java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "uploadFromFile(String uploadFilePath, ShareRequestConditions requestConditions)"
  nameWithType: "ShareFileClient.uploadFromFile(String uploadFilePath, ShareRequestConditions requestConditions)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadFromFile(String uploadFilePath, ShareRequestConditions requestConditions)"
  overload: "com.azure.storage.file.share.ShareFileClient.uploadFromFile*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads file to storage file service.\n\n**Code Samples**\n\nUpload the file from the source file path.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.uploadFromFile\\#string-ShareRequestConditions\\}\n\nFor more information, see the [Azure Docs Create File][] and [Azure Docs Upload][].\n\n\n[Azure Docs Create File]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n[Azure Docs Upload]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public void uploadFromFile(String uploadFilePath, ShareRequestConditions requestConditions)"
    parameters:
    - id: "uploadFilePath"
      type: "java.lang.String"
      description: "The path where store the source file to upload"
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrl(long,long,long,java.lang.String)"
  id: "uploadRangeFromUrl(long,long,long,java.lang.String)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, String sourceUrl)"
  nameWithType: "ShareFileClient.uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, String sourceUrl)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, String sourceUrl)"
  overload: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrl*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads a range of bytes from one file to another file.\n\n**Code Samples**\n\nUpload a number of bytes from a file at defined source and destination offsets\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrl\\#long-long-long-String\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public ShareFileUploadRangeFromUrlInfo uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, String sourceUrl)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "destinationOffset"
      type: "long"
      description: "Starting point of the upload range on the destination."
    - id: "sourceOffset"
      type: "long"
      description: "Starting point of the upload range on the source."
    - id: "sourceUrl"
      type: "java.lang.String"
      description: "Specifies the URL of the source file."
    return:
      type: "com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo"
      description: "The <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo\" data-throw-if-not-resolved=\"false\">file upload range from url info</xref>"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads a range of bytes from one file to another file.\n\n**Code Samples**\n\nUpload a number of bytes from a file at defined source and destination offsets\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse\\#long-long-long-String-ShareRequestConditions-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<ShareFileUploadRangeFromUrlInfo> uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "destinationOffset"
      type: "long"
      description: "Starting point of the upload range on the destination."
    - id: "sourceOffset"
      type: "long"
      description: "Starting point of the upload range on the source."
    - id: "sourceUrl"
      type: "java.lang.String"
      description: "Specifies the URL of the source file."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo\" data-throw-if-not-resolved=\"false\">file upload range from url info</xref> with\n headers and response status code."
- uid: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "uploadRangeFromUrlWithResponse(long,long,long,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads a range of bytes from one file to another file.\n\n**Code Samples**\n\nUpload a number of bytes from a file at defined source and destination offsets\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse\\#long-long-long-String-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<ShareFileUploadRangeFromUrlInfo> uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, String sourceUrl, Duration timeout, Context context)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "destinationOffset"
      type: "long"
      description: "Starting point of the upload range on the destination."
    - id: "sourceOffset"
      type: "long"
      description: "Starting point of the upload range on the source."
    - id: "sourceUrl"
      type: "java.lang.String"
      description: "Specifies the URL of the source file."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo\" data-throw-if-not-resolved=\"false\">file upload range from url info</xref> with\n headers and response status code."
- uid: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse(java.io.InputStream,long,java.lang.Long,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  id: "uploadWithResponse(java.io.InputStream,long,java.lang.Long,com.azure.storage.file.share.models.ShareRequestConditions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "uploadWithResponse(InputStream data, long length, Long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.uploadWithResponse(InputStream data, long length, Long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse(InputStream data, long length, Long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload data \"default\" starting from 1024.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.uploadWithResponse\\#InputStream-long-Long-ShareRequestConditions-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<ShareFileUploadInfo> uploadWithResponse(InputStream data, long length, Long offset, ShareRequestConditions requestConditions, Duration timeout, Context context)"
    parameters:
    - id: "data"
      type: "java.io.InputStream"
      description: "The data which will upload to the storage file."
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "offset"
      type: "java.lang.Long"
      description: "Starting point of the upload range, if <code>null</code> it will start from the beginning."
    - id: "requestConditions"
      type: "com.azure.storage.file.share.models.ShareRequestConditions"
      description: "<xref uid=\"com.azure.storage.file.share.models.ShareRequestConditions\" data-throw-if-not-resolved=\"false\">ShareRequestConditions</xref>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref> with headers and response\n status code."
- uid: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse(java.io.InputStream,long,java.lang.Long,java.time.Duration,com.azure.core.util.Context)"
  id: "uploadWithResponse(java.io.InputStream,long,java.lang.Long,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.share.ShareFileClient"
  langs:
  - "java"
  name: "uploadWithResponse(InputStream data, long length, Long offset, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.uploadWithResponse(InputStream data, long length, Long offset, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse(InputStream data, long length, Long offset, Duration timeout, Context context)"
  overload: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse*"
  type: "Method"
  package: "com.azure.storage.file.share"
  summary: "Uploads a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload data \"default\" starting from 1024.\n\n\\{@codesnippet com.azure.storage.file.share.ShareFileClient.uploadWithResponse\\#InputStream-long-Long-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<ShareFileUploadInfo> uploadWithResponse(InputStream data, long length, Long offset, Duration timeout, Context context)"
    parameters:
    - id: "data"
      type: "java.io.InputStream"
      description: "The data which will upload to the storage file."
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "offset"
      type: "java.lang.Long"
      description: "Starting point of the upload range, if <code>null</code> it will start from the beginning."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref> with headers and response\n status code."
references:
- uid: "com.azure.storage.file.share.ShareFileAsyncClient"
  name: "ShareFileAsyncClient"
  nameWithType: "ShareFileAsyncClient"
  fullName: "com.azure.storage.file.share.ShareFileAsyncClient"
- uid: "com.azure.storage.file.share.ShareFileClient.ShareFileClient*"
  name: "ShareFileClient"
  nameWithType: "ShareFileClient.ShareFileClient"
  fullName: "com.azure.storage.file.share.ShareFileClient.ShareFileClient"
  package: "com.azure.storage.file.share"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.share.ShareFileClient.getFileUrl*"
  name: "getFileUrl"
  nameWithType: "ShareFileClient.getFileUrl"
  fullName: "com.azure.storage.file.share.ShareFileClient.getFileUrl"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareServiceVersion"
  name: "ShareServiceVersion"
  nameWithType: "ShareServiceVersion"
  fullName: "com.azure.storage.file.share.ShareServiceVersion"
- uid: "com.azure.storage.file.share.ShareFileClient.getServiceVersion*"
  name: "getServiceVersion"
  nameWithType: "ShareFileClient.getServiceVersion"
  fullName: "com.azure.storage.file.share.ShareFileClient.getServiceVersion"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.StorageFileInputStream"
  name: "StorageFileInputStream"
  nameWithType: "StorageFileInputStream"
  fullName: "com.azure.storage.file.share.StorageFileInputStream"
- uid: "com.azure.storage.file.share.ShareFileClient.openInputStream*"
  name: "openInputStream"
  nameWithType: "ShareFileClient.openInputStream"
  fullName: "com.azure.storage.file.share.ShareFileClient.openInputStream"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.ShareFileRange"
  name: "ShareFileRange"
  nameWithType: "ShareFileRange"
  fullName: "com.azure.storage.file.share.models.ShareFileRange"
- uid: "com.azure.storage.file.share.StorageFileOutputStream"
  name: "StorageFileOutputStream"
  nameWithType: "StorageFileOutputStream"
  fullName: "com.azure.storage.file.share.StorageFileOutputStream"
- uid: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream*"
  name: "getFileOutputStream"
  nameWithType: "ShareFileClient.getFileOutputStream"
  fullName: "com.azure.storage.file.share.ShareFileClient.getFileOutputStream"
  package: "com.azure.storage.file.share"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.storage.file.share.models.ShareFileInfo"
  name: "ShareFileInfo"
  nameWithType: "ShareFileInfo"
  fullName: "com.azure.storage.file.share.models.ShareFileInfo"
- uid: "com.azure.storage.file.share.ShareFileClient.create*"
  name: "create"
  nameWithType: "ShareFileClient.create"
  fullName: "com.azure.storage.file.share.ShareFileClient.create"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
  name: "ShareFileHttpHeaders"
  nameWithType: "ShareFileHttpHeaders"
  fullName: "com.azure.storage.file.share.models.ShareFileHttpHeaders"
- uid: "com.azure.storage.file.share.FileSmbProperties"
  name: "FileSmbProperties"
  nameWithType: "FileSmbProperties"
  fullName: "com.azure.storage.file.share.FileSmbProperties"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.ShareFileInfo"
    name: "ShareFileInfo"
    fullName: "com.azure.storage.file.share.models.ShareFileInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.createWithResponse*"
  name: "createWithResponse"
  nameWithType: "ShareFileClient.createWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.createWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.ShareRequestConditions"
  name: "ShareRequestConditions"
  nameWithType: "ShareRequestConditions"
  fullName: "com.azure.storage.file.share.models.ShareRequestConditions"
- uid: "com.azure.core.util.polling.SyncPoller<com.azure.storage.file.share.models.ShareFileCopyInfo,java.lang.Void>"
  spec.java:
  - uid: "com.azure.core.util.polling.SyncPoller"
    name: "SyncPoller"
    fullName: "com.azure.core.util.polling.SyncPoller"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.ShareFileCopyInfo"
    name: "ShareFileCopyInfo"
    fullName: "com.azure.storage.file.share.models.ShareFileCopyInfo"
  - name: ","
    fullName: ","
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.beginCopy*"
  name: "beginCopy"
  nameWithType: "ShareFileClient.beginCopy"
  fullName: "com.azure.storage.file.share.ShareFileClient.beginCopy"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.PermissionCopyModeType"
  name: "PermissionCopyModeType"
  nameWithType: "PermissionCopyModeType"
  fullName: "com.azure.storage.file.share.models.PermissionCopyModeType"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.storage.file.share.ShareFileClient.abortCopy*"
  name: "abortCopy"
  nameWithType: "ShareFileClient.abortCopy"
  fullName: "com.azure.storage.file.share.ShareFileClient.abortCopy"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.rest.Response<java.lang.Void>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse*"
  name: "abortCopyWithResponse"
  nameWithType: "ShareFileClient.abortCopyWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.abortCopyWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.ShareFileProperties"
  name: "ShareFileProperties"
  nameWithType: "ShareFileProperties"
  fullName: "com.azure.storage.file.share.models.ShareFileProperties"
- uid: "com.azure.storage.file.share.ShareFileClient.downloadToFile*"
  name: "downloadToFile"
  nameWithType: "ShareFileClient.downloadToFile"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadToFile"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileProperties>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.ShareFileProperties"
    name: "ShareFileProperties"
    fullName: "com.azure.storage.file.share.models.ShareFileProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse*"
  name: "downloadToFileWithResponse"
  nameWithType: "ShareFileClient.downloadToFileWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadToFileWithResponse"
  package: "com.azure.storage.file.share"
- uid: "java.io.OutputStream"
  spec.java:
  - uid: "java.io.OutputStream"
    name: "OutputStream"
    fullName: "java.io.OutputStream"
- uid: "com.azure.storage.file.share.ShareFileClient.download*"
  name: "download"
  nameWithType: "ShareFileClient.download"
  fullName: "com.azure.storage.file.share.ShareFileClient.download"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.ShareFileDownloadResponse"
  name: "ShareFileDownloadResponse"
  nameWithType: "ShareFileDownloadResponse"
  fullName: "com.azure.storage.file.share.models.ShareFileDownloadResponse"
- uid: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse*"
  name: "downloadWithResponse"
  nameWithType: "ShareFileClient.downloadWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.downloadWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.delete*"
  name: "delete"
  nameWithType: "ShareFileClient.delete"
  fullName: "com.azure.storage.file.share.ShareFileClient.delete"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse*"
  name: "deleteWithResponse"
  nameWithType: "ShareFileClient.deleteWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.deleteWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.getProperties*"
  name: "getProperties"
  nameWithType: "ShareFileClient.getProperties"
  fullName: "com.azure.storage.file.share.ShareFileClient.getProperties"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse*"
  name: "getPropertiesWithResponse"
  nameWithType: "ShareFileClient.getPropertiesWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.getPropertiesWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.setProperties*"
  name: "setProperties"
  nameWithType: "ShareFileClient.setProperties"
  fullName: "com.azure.storage.file.share.ShareFileClient.setProperties"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse*"
  name: "setPropertiesWithResponse"
  nameWithType: "ShareFileClient.setPropertiesWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.setPropertiesWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.ShareFileMetadataInfo"
  name: "ShareFileMetadataInfo"
  nameWithType: "ShareFileMetadataInfo"
  fullName: "com.azure.storage.file.share.models.ShareFileMetadataInfo"
- uid: "com.azure.storage.file.share.ShareFileClient.setMetadata*"
  name: "setMetadata"
  nameWithType: "ShareFileClient.setMetadata"
  fullName: "com.azure.storage.file.share.ShareFileClient.setMetadata"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileMetadataInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.ShareFileMetadataInfo"
    name: "ShareFileMetadataInfo"
    fullName: "com.azure.storage.file.share.models.ShareFileMetadataInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse*"
  name: "setMetadataWithResponse"
  nameWithType: "ShareFileClient.setMetadataWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.setMetadataWithResponse"
  package: "com.azure.storage.file.share"
- uid: "java.io.InputStream"
  spec.java:
  - uid: "java.io.InputStream"
    name: "InputStream"
    fullName: "java.io.InputStream"
- uid: "com.azure.storage.file.share.models.ShareFileUploadInfo"
  name: "ShareFileUploadInfo"
  nameWithType: "ShareFileUploadInfo"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadInfo"
- uid: "com.azure.storage.file.share.ShareFileClient.upload*"
  name: "upload"
  nameWithType: "ShareFileClient.upload"
  fullName: "com.azure.storage.file.share.ShareFileClient.upload"
  package: "com.azure.storage.file.share"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.ShareFileUploadInfo"
    name: "ShareFileUploadInfo"
    fullName: "com.azure.storage.file.share.models.ShareFileUploadInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse*"
  name: "uploadWithResponse"
  nameWithType: "ShareFileClient.uploadWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo"
  name: "ShareFileUploadRangeFromUrlInfo"
  nameWithType: "ShareFileUploadRangeFromUrlInfo"
  fullName: "com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrl*"
  name: "uploadRangeFromUrl"
  nameWithType: "ShareFileClient.uploadRangeFromUrl"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrl"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo"
    name: "ShareFileUploadRangeFromUrlInfo"
    fullName: "com.azure.storage.file.share.models.ShareFileUploadRangeFromUrlInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse*"
  name: "uploadRangeFromUrlWithResponse"
  nameWithType: "ShareFileClient.uploadRangeFromUrlWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadRangeFromUrlWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.clearRange*"
  name: "clearRange"
  nameWithType: "ShareFileClient.clearRange"
  fullName: "com.azure.storage.file.share.ShareFileClient.clearRange"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse*"
  name: "clearRangeWithResponse"
  nameWithType: "ShareFileClient.clearRangeWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.clearRangeWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.uploadFromFile*"
  name: "uploadFromFile"
  nameWithType: "ShareFileClient.uploadFromFile"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadFromFile"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.ShareFileRange>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.ShareFileRange"
    name: "ShareFileRange"
    fullName: "com.azure.storage.file.share.models.ShareFileRange"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.listRanges*"
  name: "listRanges"
  nameWithType: "ShareFileClient.listRanges"
  fullName: "com.azure.storage.file.share.ShareFileClient.listRanges"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.share.models.HandleItem>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.HandleItem"
    name: "HandleItem"
    fullName: "com.azure.storage.file.share.models.HandleItem"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.listHandles*"
  name: "listHandles"
  nameWithType: "ShareFileClient.listHandles"
  fullName: "com.azure.storage.file.share.ShareFileClient.listHandles"
  package: "com.azure.storage.file.share"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.storage.file.share.models.CloseHandlesInfo"
  name: "CloseHandlesInfo"
  nameWithType: "CloseHandlesInfo"
  fullName: "com.azure.storage.file.share.models.CloseHandlesInfo"
- uid: "com.azure.storage.file.share.ShareFileClient.forceCloseHandle*"
  name: "forceCloseHandle"
  nameWithType: "ShareFileClient.forceCloseHandle"
  fullName: "com.azure.storage.file.share.ShareFileClient.forceCloseHandle"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.share.models.CloseHandlesInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.share.models.CloseHandlesInfo"
    name: "CloseHandlesInfo"
    fullName: "com.azure.storage.file.share.models.CloseHandlesInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.share.ShareFileClient.forceCloseHandleWithResponse*"
  name: "forceCloseHandleWithResponse"
  nameWithType: "ShareFileClient.forceCloseHandleWithResponse"
  fullName: "com.azure.storage.file.share.ShareFileClient.forceCloseHandleWithResponse"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.forceCloseAllHandles*"
  name: "forceCloseAllHandles"
  nameWithType: "ShareFileClient.forceCloseAllHandles"
  fullName: "com.azure.storage.file.share.ShareFileClient.forceCloseAllHandles"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.getShareSnapshotId*"
  name: "getShareSnapshotId"
  nameWithType: "ShareFileClient.getShareSnapshotId"
  fullName: "com.azure.storage.file.share.ShareFileClient.getShareSnapshotId"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.getShareName*"
  name: "getShareName"
  nameWithType: "ShareFileClient.getShareName"
  fullName: "com.azure.storage.file.share.ShareFileClient.getShareName"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.getFilePath*"
  name: "getFilePath"
  nameWithType: "ShareFileClient.getFilePath"
  fullName: "com.azure.storage.file.share.ShareFileClient.getFilePath"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.ShareFileClient.getAccountName*"
  name: "getAccountName"
  nameWithType: "ShareFileClient.getAccountName"
  fullName: "com.azure.storage.file.share.ShareFileClient.getAccountName"
  package: "com.azure.storage.file.share"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.storage.file.share.ShareFileClient.getHttpPipeline*"
  name: "getHttpPipeline"
  nameWithType: "ShareFileClient.getHttpPipeline"
  fullName: "com.azure.storage.file.share.ShareFileClient.getHttpPipeline"
  package: "com.azure.storage.file.share"
- uid: "com.azure.storage.file.share.sas.ShareServiceSasSignatureValues"
  name: "ShareServiceSasSignatureValues"
  nameWithType: "ShareServiceSasSignatureValues"
  fullName: "com.azure.storage.file.share.sas.ShareServiceSasSignatureValues"
- uid: "com.azure.storage.file.share.ShareFileClient.generateSas*"
  name: "generateSas"
  nameWithType: "ShareFileClient.generateSas"
  fullName: "com.azure.storage.file.share.ShareFileClient.generateSas"
  package: "com.azure.storage.file.share"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "com.azure.core.util.polling.SyncPoller"
  name: "SyncPoller"
  nameWithType: "SyncPoller"
  fullName: "com.azure.core.util.polling.SyncPoller"
- uid: "com.azure.storage.file.share.models.ShareFileCopyInfo,java.lang.Void"
  name: "ShareFileCopyInfo,Void"
  nameWithType: "ShareFileCopyInfo,Void"
  fullName: "com.azure.storage.file.share.models.ShareFileCopyInfo,java.lang.Void"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.core.http.rest.PagedIterable"
  name: "PagedIterable"
  nameWithType: "PagedIterable"
  fullName: "com.azure.core.http.rest.PagedIterable"
- uid: "com.azure.storage.file.share.models.HandleItem"
  name: "HandleItem"
  nameWithType: "HandleItem"
  fullName: "com.azure.storage.file.share.models.HandleItem"
