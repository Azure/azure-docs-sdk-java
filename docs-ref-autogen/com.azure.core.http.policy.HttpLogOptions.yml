### YamlMime:JavaType
uid: "com.azure.core.http.policy.HttpLogOptions"
fullName: "com.azure.core.http.policy.HttpLogOptions"
name: "HttpLogOptions"
nameWithType: "HttpLogOptions"
summary: "The log configurations for HTTP messages."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HttpLogOptions"
constructors:
- uid: "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions()"
  name: "HttpLogOptions()"
  nameWithType: "HttpLogOptions.HttpLogOptions()"
  summary: "Creates a new instance that does not log any information about HTTP requests or responses."
  syntax: "public HttpLogOptions()"
  desc: "Creates a new instance that does not log any information about HTTP requests or responses."
methods:
- uid: "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName(java.lang.String)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName(String allowedHeaderName)"
  name: "addAllowedHeaderName(String allowedHeaderName)"
  nameWithType: "HttpLogOptions.addAllowedHeaderName(String allowedHeaderName)"
  summary: "Sets the given whitelisted header to the default header set that should be logged."
  parameters:
  - description: "The whitelisted header name from the user."
    name: "allowedHeaderName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLogOptions addAllowedHeaderName(String allowedHeaderName)"
  desc: "Sets the given whitelisted header to the default header set that should be logged."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName(java.lang.String)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName(String allowedQueryParamName)"
  name: "addAllowedQueryParamName(String allowedQueryParamName)"
  nameWithType: "HttpLogOptions.addAllowedQueryParamName(String allowedQueryParamName)"
  summary: "Sets the given whitelisted query param that should be logged."
  parameters:
  - description: "The whitelisted query param name from the user."
    name: "allowedQueryParamName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLogOptions addAllowedQueryParamName(String allowedQueryParamName)"
  desc: "Sets the given whitelisted query param that should be logged."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames()"
  name: "getAllowedHeaderNames()"
  nameWithType: "HttpLogOptions.getAllowedHeaderNames()"
  summary: "Gets the whitelisted headers that should be logged."
  syntax: "public Set<String> getAllowedHeaderNames()"
  desc: "Gets the whitelisted headers that should be logged."
  returns:
    description: "The list of whitelisted headers."
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames()"
  name: "getAllowedQueryParamNames()"
  nameWithType: "HttpLogOptions.getAllowedQueryParamNames()"
  summary: "Gets the whitelisted query parameters."
  syntax: "public Set<String> getAllowedQueryParamNames()"
  desc: "Gets the whitelisted query parameters."
  returns:
    description: "The list of whitelisted query parameters."
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.http.policy.HttpLogOptions.getApplicationId()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getApplicationId()"
  name: "getApplicationId()"
  nameWithType: "HttpLogOptions.getApplicationId()"
  summary: "Gets the application specific id."
  deprecatedTag: "Use <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> to configure `applicationId`."
  syntax: "@Deprecated\npublic String getApplicationId()"
  desc: "Gets the application specific id."
  hasDeprecatedTag: true
  returns:
    description: "The application specific id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.getLogLevel()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getLogLevel()"
  name: "getLogLevel()"
  nameWithType: "HttpLogOptions.getLogLevel()"
  summary: "Gets the level of detail to log on HTTP messages."
  syntax: "public HttpLogDetailLevel getLogLevel()"
  desc: "Gets the level of detail to log on HTTP messages."
  returns:
    description: "The <xref uid=\"com.azure.core.http.policy.HttpLogDetailLevel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogDetailLevel\"></xref>."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogDetailLevel?alt=com.azure.core.http.policy.HttpLogDetailLevel&text=HttpLogDetailLevel\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.getRequestLogger()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getRequestLogger()"
  name: "getRequestLogger()"
  nameWithType: "HttpLogOptions.getRequestLogger()"
  summary: "Gets the <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> that will be used to log HTTP requests."
  syntax: "public HttpRequestLogger getRequestLogger()"
  desc: "Gets the <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> that will be used to log HTTP requests.\n\nA default <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> will be used if one isn't supplied."
  returns:
    description: "The <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> that will be used to log HTTP requests."
    type: "<xref href=\"com.azure.core.http.policy.HttpRequestLogger?alt=com.azure.core.http.policy.HttpRequestLogger&text=HttpRequestLogger\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.getResponseLogger()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getResponseLogger()"
  name: "getResponseLogger()"
  nameWithType: "HttpLogOptions.getResponseLogger()"
  summary: "Gets the <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> that will be used to log HTTP responses."
  syntax: "public HttpResponseLogger getResponseLogger()"
  desc: "Gets the <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> that will be used to log HTTP responses.\n\nA default <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> will be used if one isn't supplied."
  returns:
    description: "The <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> that will be used to log HTTP responses."
    type: "<xref href=\"com.azure.core.http.policy.HttpResponseLogger?alt=com.azure.core.http.policy.HttpResponseLogger&text=HttpResponseLogger\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.isPrettyPrintBody()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.isPrettyPrintBody()"
  name: "isPrettyPrintBody()"
  nameWithType: "HttpLogOptions.isPrettyPrintBody()"
  summary: "Gets flag to allow pretty printing of message bodies."
  syntax: "public boolean isPrettyPrintBody()"
  desc: "Gets flag to allow pretty printing of message bodies."
  returns:
    description: "true if pretty printing of message bodies is allowed."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames(java.util.Set<java.lang.String>)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames(Set<String> allowedHeaderNames)"
  name: "setAllowedHeaderNames(Set<String> allowedHeaderNames)"
  nameWithType: "HttpLogOptions.setAllowedHeaderNames(Set<String> allowedHeaderNames)"
  summary: "Sets the given whitelisted headers that should be logged."
  parameters:
  - description: "The list of whitelisted header names from the user."
    name: "allowedHeaderNames"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HttpLogOptions setAllowedHeaderNames(Set<String> allowedHeaderNames)"
  desc: "Sets the given whitelisted headers that should be logged.\n\nThis method sets the provided header names to be the whitelisted header names which will be logged for all HTTP requests and responses, overwriting any previously configured headers. Additionally, users can use <xref uid=\"com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions#addAllowedHeaderName(String)\"></xref> or <xref uid=\"com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions#getAllowedHeaderNames()\"></xref> to add or remove more headers names to the existing set of allowed header names."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames(java.util.Set<java.lang.String>)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
  name: "setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
  nameWithType: "HttpLogOptions.setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
  summary: "Sets the given whitelisted query params to be displayed in the logging info."
  parameters:
  - description: "The list of whitelisted query params from the user."
    name: "allowedQueryParamNames"
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public HttpLogOptions setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
  desc: "Sets the given whitelisted query params to be displayed in the logging info."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.setApplicationId(java.lang.String)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setApplicationId(String applicationId)"
  name: "setApplicationId(String applicationId)"
  nameWithType: "HttpLogOptions.setApplicationId(String applicationId)"
  summary: "Sets the custom application specific id supplied by the user of the client library."
  deprecatedTag: "Use <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> to configure `applicationId`."
  parameters:
  - description: "The user specified application id."
    name: "applicationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic HttpLogOptions setApplicationId(String applicationId)"
  desc: "Sets the custom application specific id supplied by the user of the client library."
  hasDeprecatedTag: true
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.setLogLevel(com.azure.core.http.policy.HttpLogDetailLevel)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setLogLevel(HttpLogDetailLevel logLevel)"
  name: "setLogLevel(HttpLogDetailLevel logLevel)"
  nameWithType: "HttpLogOptions.setLogLevel(HttpLogDetailLevel logLevel)"
  summary: "Sets the level of detail to log on Http messages."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.HttpLogDetailLevel\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogDetailLevel\"></xref>."
    name: "logLevel"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogDetailLevel?alt=com.azure.core.http.policy.HttpLogDetailLevel&text=HttpLogDetailLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLogOptions setLogLevel(HttpLogDetailLevel logLevel)"
  desc: "Sets the level of detail to log on Http messages.\n\nIf logLevel is not provided, default value of <xref uid=\"com.azure.core.http.policy.HttpLogDetailLevel.NONE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogDetailLevel#NONE\"></xref> is set."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.setPrettyPrintBody(boolean)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setPrettyPrintBody(boolean prettyPrintBody)"
  name: "setPrettyPrintBody(boolean prettyPrintBody)"
  nameWithType: "HttpLogOptions.setPrettyPrintBody(boolean prettyPrintBody)"
  summary: "Sets flag to allow pretty printing of message bodies."
  parameters:
  - description: "If true, pretty prints message bodies when logging. If the detailLevel does not include\n body logging, this flag does nothing."
    name: "prettyPrintBody"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLogOptions setPrettyPrintBody(boolean prettyPrintBody)"
  desc: "Sets flag to allow pretty printing of message bodies."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.setRequestLogger(com.azure.core.http.policy.HttpRequestLogger)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setRequestLogger(HttpRequestLogger requestLogger)"
  name: "setRequestLogger(HttpRequestLogger requestLogger)"
  nameWithType: "HttpLogOptions.setRequestLogger(HttpRequestLogger requestLogger)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> that will be used to log HTTP requests."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> that will be used to log HTTP requests."
    name: "requestLogger"
    type: "<xref href=\"com.azure.core.http.policy.HttpRequestLogger?alt=com.azure.core.http.policy.HttpRequestLogger&text=HttpRequestLogger\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLogOptions setRequestLogger(HttpRequestLogger requestLogger)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> that will be used to log HTTP requests.\n\nA default <xref uid=\"com.azure.core.http.policy.HttpRequestLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpRequestLogger\"></xref> will be used if one isn't supplied."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.http.policy.HttpLogOptions.setResponseLogger(com.azure.core.http.policy.HttpResponseLogger)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setResponseLogger(HttpResponseLogger responseLogger)"
  name: "setResponseLogger(HttpResponseLogger responseLogger)"
  nameWithType: "HttpLogOptions.setResponseLogger(HttpResponseLogger responseLogger)"
  summary: "Sets the <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> that will be used to log HTTP responses."
  parameters:
  - description: "The <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> that will be used to log HTTP responses."
    name: "responseLogger"
    type: "<xref href=\"com.azure.core.http.policy.HttpResponseLogger?alt=com.azure.core.http.policy.HttpResponseLogger&text=HttpResponseLogger\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public HttpLogOptions setResponseLogger(HttpResponseLogger responseLogger)"
  desc: "Sets the <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> that will be used to log HTTP responses.\n\nA default <xref uid=\"com.azure.core.http.policy.HttpResponseLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpResponseLogger\"></xref> will be used if one isn't supplied."
  returns:
    description: "The updated HttpLogOptions object."
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The log configurations for HTTP messages."
metadata: {}
package: "com.azure.core.http.policy"
artifact: com.azure:azure-core:1.31.0
