### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.policy.HttpLogOptions"
  id: "HttpLogOptions"
  parent: "com.azure.core.http.policy"
  children:
  - "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions()"
  - "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName(java.lang.String)"
  - "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName(java.lang.String)"
  - "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames()"
  - "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames()"
  - "com.azure.core.http.policy.HttpLogOptions.getApplicationId()"
  - "com.azure.core.http.policy.HttpLogOptions.getLogLevel()"
  - "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames(java.util.Set<java.lang.String>)"
  - "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames(java.util.Set<java.lang.String>)"
  - "com.azure.core.http.policy.HttpLogOptions.setApplicationId(java.lang.String)"
  - "com.azure.core.http.policy.HttpLogOptions.setLogLevel(com.azure.core.http.policy.HttpLogDetailLevel)"
  langs:
  - "java"
  name: "HttpLogOptions"
  nameWithType: "HttpLogOptions"
  fullName: "com.azure.core.http.policy.HttpLogOptions"
  type: "Class"
  package: "com.azure.core.http.policy"
  summary: "The log configurations for HTTP messages."
  syntax:
    content: "public class HttpLogOptions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions()"
  id: "HttpLogOptions()"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "HttpLogOptions()"
  nameWithType: "HttpLogOptions.HttpLogOptions()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions()"
  overload: "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions*"
  type: "Constructor"
  package: "com.azure.core.http.policy"
  summary: "Creates a new instance that does not log any information about HTTP requests or responses."
  syntax:
    content: "public HttpLogOptions()"
- uid: "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName(java.lang.String)"
  id: "addAllowedHeaderName(java.lang.String)"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "addAllowedHeaderName(String allowedHeaderName)"
  nameWithType: "HttpLogOptions.addAllowedHeaderName(String allowedHeaderName)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName(String allowedHeaderName)"
  overload: "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Sets the given whitelisted header to the default header set that should be logged."
  syntax:
    content: "public HttpLogOptions addAllowedHeaderName(String allowedHeaderName)"
    parameters:
    - id: "allowedHeaderName"
      type: "java.lang.String"
      description: "The whitelisted header name from the user."
    return:
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The updated HttpLogOptions object."
- uid: "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName(java.lang.String)"
  id: "addAllowedQueryParamName(java.lang.String)"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "addAllowedQueryParamName(String allowedQueryParamName)"
  nameWithType: "HttpLogOptions.addAllowedQueryParamName(String allowedQueryParamName)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName(String allowedQueryParamName)"
  overload: "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Sets the given whitelisted query param that should be logged."
  syntax:
    content: "public HttpLogOptions addAllowedQueryParamName(String allowedQueryParamName)"
    parameters:
    - id: "allowedQueryParamName"
      type: "java.lang.String"
      description: "The whitelisted query param name from the user."
    return:
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The updated HttpLogOptions object."
- uid: "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames()"
  id: "getAllowedHeaderNames()"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "getAllowedHeaderNames()"
  nameWithType: "HttpLogOptions.getAllowedHeaderNames()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames()"
  overload: "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Gets the whitelisted headers that should be logged."
  syntax:
    content: "public Set<String> getAllowedHeaderNames()"
    return:
      type: "java.util.Set<java.lang.String>"
      description: "The list of whitelisted headers."
- uid: "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames()"
  id: "getAllowedQueryParamNames()"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "getAllowedQueryParamNames()"
  nameWithType: "HttpLogOptions.getAllowedQueryParamNames()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames()"
  overload: "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Gets the whitelisted query parameters."
  syntax:
    content: "public Set<String> getAllowedQueryParamNames()"
    return:
      type: "java.util.Set<java.lang.String>"
      description: "The list of whitelisted query parameters."
- uid: "com.azure.core.http.policy.HttpLogOptions.getApplicationId()"
  id: "getApplicationId()"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "getApplicationId()"
  nameWithType: "HttpLogOptions.getApplicationId()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getApplicationId()"
  overload: "com.azure.core.http.policy.HttpLogOptions.getApplicationId*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Gets the application specific id."
  syntax:
    content: "public String getApplicationId()"
    return:
      type: "java.lang.String"
      description: "The application specific id."
- uid: "com.azure.core.http.policy.HttpLogOptions.getLogLevel()"
  id: "getLogLevel()"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "getLogLevel()"
  nameWithType: "HttpLogOptions.getLogLevel()"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getLogLevel()"
  overload: "com.azure.core.http.policy.HttpLogOptions.getLogLevel*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Gets the level of detail to log on HTTP messages."
  syntax:
    content: "public HttpLogDetailLevel getLogLevel()"
    return:
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
      description: "The <xref uid=\"com.azure.core.http.policy.HttpLogDetailLevel\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel</xref>."
- uid: "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames(java.util.Set<java.lang.String>)"
  id: "setAllowedHeaderNames(java.util.Set<java.lang.String>)"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "setAllowedHeaderNames(Set<String> allowedHeaderNames)"
  nameWithType: "HttpLogOptions.setAllowedHeaderNames(Set<String> allowedHeaderNames)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames(Set<String> allowedHeaderNames)"
  overload: "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Sets the given whitelisted headers that should be logged.\n\nThis method sets the provided header names to be the whitelisted header names which will be logged for all HTTP requests and responses, overwriting any previously configured headers, including the default set. Additionally, users can use <xref uid=\"com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName(java.lang.String)\" data-throw-if-not-resolved=\"false\">HttpLogOptions#addAllowedHeaderName(String)</xref> or <xref uid=\"com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames()\" data-throw-if-not-resolved=\"false\">HttpLogOptions#getAllowedHeaderNames()</xref> to add or remove more headers names to the existing set of allowed header names."
  syntax:
    content: "public HttpLogOptions setAllowedHeaderNames(Set<String> allowedHeaderNames)"
    parameters:
    - id: "allowedHeaderNames"
      type: "java.util.Set<java.lang.String>"
      description: "The list of whitelisted header names from the user."
    return:
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The updated HttpLogOptions object."
- uid: "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames(java.util.Set<java.lang.String>)"
  id: "setAllowedQueryParamNames(java.util.Set<java.lang.String>)"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
  nameWithType: "HttpLogOptions.setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
  overload: "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Sets the given whitelisted query params to be displayed in the logging info."
  syntax:
    content: "public HttpLogOptions setAllowedQueryParamNames(Set<String> allowedQueryParamNames)"
    parameters:
    - id: "allowedQueryParamNames"
      type: "java.util.Set<java.lang.String>"
      description: "The list of whitelisted query params from the user."
    return:
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The updated HttpLogOptions object."
- uid: "com.azure.core.http.policy.HttpLogOptions.setApplicationId(java.lang.String)"
  id: "setApplicationId(java.lang.String)"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "setApplicationId(String applicationId)"
  nameWithType: "HttpLogOptions.setApplicationId(String applicationId)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setApplicationId(String applicationId)"
  overload: "com.azure.core.http.policy.HttpLogOptions.setApplicationId*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Sets the custom application specific id supplied by the user of the client library."
  syntax:
    content: "public HttpLogOptions setApplicationId(String applicationId)"
    parameters:
    - id: "applicationId"
      type: "java.lang.String"
      description: "The user specified application id."
    return:
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The updated HttpLogOptions object."
- uid: "com.azure.core.http.policy.HttpLogOptions.setLogLevel(com.azure.core.http.policy.HttpLogDetailLevel)"
  id: "setLogLevel(com.azure.core.http.policy.HttpLogDetailLevel)"
  parent: "com.azure.core.http.policy.HttpLogOptions"
  langs:
  - "java"
  name: "setLogLevel(HttpLogDetailLevel logLevel)"
  nameWithType: "HttpLogOptions.setLogLevel(HttpLogDetailLevel logLevel)"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setLogLevel(HttpLogDetailLevel logLevel)"
  overload: "com.azure.core.http.policy.HttpLogOptions.setLogLevel*"
  type: "Method"
  package: "com.azure.core.http.policy"
  summary: "Sets the level of detail to log on Http messages.\n\nIf logLevel is not provided, default value of <xref uid=\"com.azure.core.http.policy.HttpLogDetailLevel.NONE\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel#NONE</xref> is set."
  syntax:
    content: "public HttpLogOptions setLogLevel(HttpLogDetailLevel logLevel)"
    parameters:
    - id: "logLevel"
      type: "com.azure.core.http.policy.HttpLogDetailLevel"
      description: "The <xref uid=\"com.azure.core.http.policy.HttpLogDetailLevel\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel</xref>."
    return:
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The updated HttpLogOptions object."
references:
- uid: "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions*"
  name: "HttpLogOptions"
  nameWithType: "HttpLogOptions.HttpLogOptions"
  fullName: "com.azure.core.http.policy.HttpLogOptions.HttpLogOptions"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogDetailLevel"
  name: "HttpLogDetailLevel"
  nameWithType: "HttpLogDetailLevel"
  fullName: "com.azure.core.http.policy.HttpLogDetailLevel"
- uid: "com.azure.core.http.policy.HttpLogOptions.getLogLevel*"
  name: "getLogLevel"
  nameWithType: "HttpLogOptions.getLogLevel"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getLogLevel"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogOptions.setLogLevel*"
  name: "setLogLevel"
  nameWithType: "HttpLogOptions.setLogLevel"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setLogLevel"
  package: "com.azure.core.http.policy"
- uid: "java.util.Set<java.lang.String>"
  spec.java:
  - uid: "java.util.Set"
    name: "Set"
    fullName: "java.util.Set"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames*"
  name: "getAllowedHeaderNames"
  nameWithType: "HttpLogOptions.getAllowedHeaderNames"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getAllowedHeaderNames"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames*"
  name: "setAllowedHeaderNames"
  nameWithType: "HttpLogOptions.setAllowedHeaderNames"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setAllowedHeaderNames"
  package: "com.azure.core.http.policy"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName*"
  name: "addAllowedHeaderName"
  nameWithType: "HttpLogOptions.addAllowedHeaderName"
  fullName: "com.azure.core.http.policy.HttpLogOptions.addAllowedHeaderName"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames*"
  name: "getAllowedQueryParamNames"
  nameWithType: "HttpLogOptions.getAllowedQueryParamNames"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getAllowedQueryParamNames"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames*"
  name: "setAllowedQueryParamNames"
  nameWithType: "HttpLogOptions.setAllowedQueryParamNames"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setAllowedQueryParamNames"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName*"
  name: "addAllowedQueryParamName"
  nameWithType: "HttpLogOptions.addAllowedQueryParamName"
  fullName: "com.azure.core.http.policy.HttpLogOptions.addAllowedQueryParamName"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogOptions.getApplicationId*"
  name: "getApplicationId"
  nameWithType: "HttpLogOptions.getApplicationId"
  fullName: "com.azure.core.http.policy.HttpLogOptions.getApplicationId"
  package: "com.azure.core.http.policy"
- uid: "com.azure.core.http.policy.HttpLogOptions.setApplicationId*"
  name: "setApplicationId"
  nameWithType: "HttpLogOptions.setApplicationId"
  fullName: "com.azure.core.http.policy.HttpLogOptions.setApplicationId"
  package: "com.azure.core.http.policy"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Set"
  name: "Set"
  nameWithType: "Set"
  fullName: "java.util.Set"
