### YamlMime:JavaMember
uid: "com.azure.resourcemanager.appservice.fluent.models.PrivateAccessInner.withVirtualNetworks*"
fullName: "com.azure.resourcemanager.appservice.fluent.models.PrivateAccessInner.withVirtualNetworks"
name: "withVirtualNetworks"
nameWithType: "PrivateAccessInner.withVirtualNetworks"
members:
- uid: "com.azure.resourcemanager.appservice.fluent.models.PrivateAccessInner.withVirtualNetworks(java.util.List<com.azure.resourcemanager.appservice.models.PrivateAccessVirtualNetwork>)"
  fullName: "com.azure.resourcemanager.appservice.fluent.models.PrivateAccessInner.withVirtualNetworks(List<PrivateAccessVirtualNetwork> virtualNetworks)"
  name: "withVirtualNetworks(List<PrivateAccessVirtualNetwork> virtualNetworks)"
  nameWithType: "PrivateAccessInner.withVirtualNetworks(List<PrivateAccessVirtualNetwork> virtualNetworks)"
  summary: "Set the virtualNetworks property: The Virtual Networks (and subnets) allowed to access the site privately."
  parameters:
  - description: "the virtualNetworks value to set."
    name: "virtualNetworks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.appservice.models.PrivateAccessVirtualNetwork?alt=com.azure.resourcemanager.appservice.models.PrivateAccessVirtualNetwork&text=PrivateAccessVirtualNetwork\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PrivateAccessInner withVirtualNetworks(List<PrivateAccessVirtualNetwork> virtualNetworks)"
  returns:
    description: "the PrivateAccessInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.appservice.fluent.models.PrivateAccessInner?alt=com.azure.resourcemanager.appservice.fluent.models.PrivateAccessInner&text=PrivateAccessInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.appservice.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
