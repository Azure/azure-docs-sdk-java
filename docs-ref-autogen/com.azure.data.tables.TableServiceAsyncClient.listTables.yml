### YamlMime:JavaMember
uid: "com.azure.data.tables.TableServiceAsyncClient.listTables*"
fullName: "com.azure.data.tables.TableServiceAsyncClient.listTables"
name: "listTables"
nameWithType: "TableServiceAsyncClient.listTables"
members:
- uid: "com.azure.data.tables.TableServiceAsyncClient.listTables()"
  fullName: "com.azure.data.tables.TableServiceAsyncClient.listTables()"
  name: "listTables()"
  nameWithType: "TableServiceAsyncClient.listTables()"
  summary: "Lists all tables within the account.\n\n**Code Samples**\n\nLists all tables. Prints out the details of the retrieved tables.\n\n```java\ntableServiceAsyncClient.listTables().subscribe(tableItem ->\n     System.out.printf(\"Retrieved table with name '%s'.%n\", tableItem.getName()));\n```"
  syntax: "public PagedFlux<TableItem> listTables()"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing all tables within the account."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.models.TableItem?alt=com.azure.data.tables.models.TableItem&text=TableItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.tables.TableServiceAsyncClient.listTables(com.azure.data.tables.models.ListTablesOptions)"
  fullName: "com.azure.data.tables.TableServiceAsyncClient.listTables(ListTablesOptions options)"
  name: "listTables(ListTablesOptions options)"
  nameWithType: "TableServiceAsyncClient.listTables(ListTablesOptions options)"
  summary: "Lists tables using the parameters in the provided options. If the `filter` parameter in the options is set, only tables matching the filter will be returned. If the `top` parameter is set, the maximum number of returned tables per page will be limited to that value.\n\n**Code Samples**\n\nLists all tables that match the filter. Prints out the details of the retrieved tables.\n\n```java\nListTablesOptions options = new ListTablesOptions().setFilter(\"TableName eq 'myTable'\");\n\n tableServiceAsyncClient.listTables(options).subscribe(tableItem ->\n     System.out.printf(\"Retrieved table with name '%s'.%n\", tableItem.getName()));\n```"
  parameters:
  - description: "The <code>filter</code> and <code>top</code> OData query options to apply to this operation."
    name: "options"
    type: "<xref href=\"com.azure.data.tables.models.ListTablesOptions?alt=com.azure.data.tables.models.ListTablesOptions&text=ListTablesOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<TableItem> listTables(ListTablesOptions options)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> containing matching tables within the account."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.tables.models.TableItem?alt=com.azure.data.tables.models.TableItem&text=TableItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.data.tables"
artifact: com.azure:azure-data-tables:12.2.1
