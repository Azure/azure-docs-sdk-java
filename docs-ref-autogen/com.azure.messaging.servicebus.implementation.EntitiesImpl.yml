### YamlMime:ManagedReference
items:
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl
  id: EntitiesImpl
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation
  children:
  - com.azure.messaging.servicebus.implementation.EntitiesImpl.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.implementation.EntitiesImpl.getWithResponseAsync(java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.messaging.servicebus.implementation.EntitiesImpl.putWithResponseAsync(java.lang.String,java.lang.Object,java.lang.String,com.azure.core.util.Context)
  langs:
  - java
  name: EntitiesImpl
  nameWithType: EntitiesImpl
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl
  type: Class
  package: com.azure.messaging.servicebus.implementation
  summary: An instance of this class provides access to all the operations defined in Entities.
  syntax:
    content: public final class EntitiesImpl
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.EntitiesImpl(com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl)
  id: EntitiesImpl(com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.EntitiesImpl
  langs:
  - java
  name: EntitiesImpl(ServiceBusManagementClientImpl client)
  nameWithType: EntitiesImpl.EntitiesImpl(ServiceBusManagementClientImpl client)
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.EntitiesImpl(ServiceBusManagementClientImpl client)
  overload: com.azure.messaging.servicebus.implementation.EntitiesImpl.EntitiesImpl*
  type: Constructor
  package: com.azure.messaging.servicebus.implementation
  summary: Initializes an instance of EntitiesImpl.
  syntax:
    content: " EntitiesImpl(ServiceBusManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponseAsync(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.EntitiesImpl
  langs:
  - java
  name: deleteWithResponseAsync(String entityName, Context context)
  nameWithType: EntitiesImpl.deleteWithResponseAsync(String entityName, Context context)
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.deleteWithResponseAsync(String entityName, Context context)
  overload: com.azure.messaging.servicebus.implementation.EntitiesImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Delete the Queue or Topic with the given entityName.
  syntax:
    content: public Mono<Response<Object>> deleteWithResponseAsync(String entityName, Context context)
    parameters:
    - id: entityName
      type: java.lang.String
      description: The name of the queue or topic relative to the Service Bus namespace.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
      description: any object.
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.getWithResponseAsync(java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: getWithResponseAsync(java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.EntitiesImpl
  langs:
  - java
  name: getWithResponseAsync(String entityName, Boolean enrich, Context context)
  nameWithType: EntitiesImpl.getWithResponseAsync(String entityName, Boolean enrich, Context context)
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.getWithResponseAsync(String entityName, Boolean enrich, Context context)
  overload: com.azure.messaging.servicebus.implementation.EntitiesImpl.getWithResponseAsync*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Get the details about the Queue or Topic with the given entityName.
  syntax:
    content: public Mono<Response<Object>> getWithResponseAsync(String entityName, Boolean enrich, Context context)
    parameters:
    - id: entityName
      type: java.lang.String
      description: The name of the queue or topic relative to the Service Bus namespace.
    - id: enrich
      type: java.lang.Boolean
      description: A query parameter that sets enrich to true or false.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
      description: the details about the Queue or Topic with the given entityName.
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.putWithResponseAsync(java.lang.String,java.lang.Object,java.lang.String,com.azure.core.util.Context)
  id: putWithResponseAsync(java.lang.String,java.lang.Object,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure:azure-messaging-servicebus:7.0.0
  parent: com.azure.messaging.servicebus.implementation.EntitiesImpl
  langs:
  - java
  name: putWithResponseAsync(String entityName, Object requestBody, String ifMatch, Context context)
  nameWithType: EntitiesImpl.putWithResponseAsync(String entityName, Object requestBody, String ifMatch, Context context)
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.putWithResponseAsync(String entityName, Object requestBody, String ifMatch, Context context)
  overload: com.azure.messaging.servicebus.implementation.EntitiesImpl.putWithResponseAsync*
  type: Method
  package: com.azure.messaging.servicebus.implementation
  summary: Create or update a queue or topic at the provided entityName.
  syntax:
    content: public Mono<Response<Object>> putWithResponseAsync(String entityName, Object requestBody, String ifMatch, Context context)
    parameters:
    - id: entityName
      type: java.lang.String
      description: The name of the queue or topic relative to the Service Bus namespace.
    - id: requestBody
      type: java.lang.Object
      description: Any object.
    - id: ifMatch
      type: java.lang.String
      description: >-
        Match condition for an entity to be updated. If specified and a matching entity is not found, an
             error will be raised. To force an unconditional update, set to the wildcard character (*). If not specified,
             an insert will be performed when no existing entity is found to update and a replace will be performed if an
             existing entity is found.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
      description: any object.
references:
- uid: com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl
  name: ServiceBusManagementClientImpl
  nameWithType: ServiceBusManagementClientImpl
  fullName: com.azure.messaging.servicebus.implementation.ServiceBusManagementClientImpl
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.EntitiesImpl*
  name: EntitiesImpl
  nameWithType: EntitiesImpl.EntitiesImpl
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.EntitiesImpl
  package: com.azure.messaging.servicebus.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: EntitiesImpl.getWithResponseAsync
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.getWithResponseAsync
  package: com.azure.messaging.servicebus.implementation
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.putWithResponseAsync*
  name: putWithResponseAsync
  nameWithType: EntitiesImpl.putWithResponseAsync
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.putWithResponseAsync
  package: com.azure.messaging.servicebus.implementation
- uid: com.azure.messaging.servicebus.implementation.EntitiesImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: EntitiesImpl.deleteWithResponseAsync
  fullName: com.azure.messaging.servicebus.implementation.EntitiesImpl.deleteWithResponseAsync
  package: com.azure.messaging.servicebus.implementation
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
