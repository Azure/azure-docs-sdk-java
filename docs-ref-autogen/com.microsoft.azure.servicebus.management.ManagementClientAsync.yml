### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync
  id: ManagementClientAsync
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management
  children:
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(java.net.URI,com.microsoft.azure.servicebus.ClientSettings)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(com.microsoft.azure.servicebus.management.QueueDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription,com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(com.microsoft.azure.servicebus.management.TopicDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync(int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(java.lang.String,java.lang.String,int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(java.lang.String,int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync(int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync(java.lang.String,java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync(java.lang.String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync(com.microsoft.azure.servicebus.management.QueueDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync(com.microsoft.azure.servicebus.management.TopicDescription)
  langs:
  - java
  name: ManagementClientAsync
  nameWithType: ManagementClientAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync
  type: Class
  package: com.microsoft.azure.servicebus.management
  summary: Asynchronous client to perform management operations on Service Bus entities. Operations return CompletableFuture which asynchronously return the responses.
  syntax:
    content: public class ManagementClientAsync
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  id: ManagementClientAsync(com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
  nameWithType: ManagementClientAsync.ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync*
  type: Constructor
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new <xref uid="com.microsoft.azure.servicebus.management.ManagementClientAsync" data-throw-if-not-resolved="false">ManagementClientAsync</xref>. User should call <xref uid="com.microsoft.azure.servicebus.management.ManagementClientAsync.close()" data-throw-if-not-resolved="false">ManagementClientAsync#close()</xref> at the end of life of the client.
  syntax:
    content: public ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
    parameters:
    - id: connectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: '- connectionStringBuilder containing namespace information and client settings.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(java.net.URI,com.microsoft.azure.servicebus.ClientSettings)
  id: ManagementClientAsync(java.net.URI,com.microsoft.azure.servicebus.ClientSettings)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
  nameWithType: ManagementClientAsync.ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync*
  type: Constructor
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new <xref uid="com.microsoft.azure.servicebus.management.ManagementClientAsync" data-throw-if-not-resolved="false">ManagementClientAsync</xref>. User should call <xref uid="com.microsoft.azure.servicebus.management.ManagementClientAsync.close()" data-throw-if-not-resolved="false">ManagementClientAsync#close()</xref> at the end of life of the client.
  syntax:
    content: public ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: java.net.URI
      description: '- URI of the namespace connecting to.'
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: '- client settings.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  id: close()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: close()
  nameWithType: ManagementClientAsync.close()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.close*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Disposes and closes the managementClient.
  syntax:
    content: public void close()
  exceptions:
  - type: java.io.IOException
    description: if an I/O error occurs
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(com.microsoft.azure.servicebus.management.QueueDescription)
  id: createQueueAsync(com.microsoft.azure.servicebus.management.QueueDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createQueueAsync(QueueDescription queueDescription)
  nameWithType: ManagementClientAsync.createQueueAsync(QueueDescription queueDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(QueueDescription queueDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new queue in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> for default values of queue properties.
  syntax:
    content: public CompletableFuture<QueueDescription> createQueueAsync(QueueDescription queueDescription)
    parameters:
    - id: queueDescription
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> object describing the attributes with which the new queue will be created.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.QueueDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> of the newly created queue.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(java.lang.String)
  id: createQueueAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createQueueAsync(String queuePath)
  nameWithType: ManagementClientAsync.createQueueAsync(String queuePath)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(String queuePath)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new queue in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> for default values of queue properties.
  syntax:
    content: public CompletableFuture<QueueDescription> createQueueAsync(String queuePath)
    parameters:
    - id: queuePath
      type: java.lang.String
      description: '- The name of the queue relative to the service namespace base address.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.QueueDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> of the newly created queue.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  id: createRuleAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClientAsync.createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new rule for a given topic - subscription. See <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> for default values of subscription properties.
  syntax:
    content: public CompletableFuture<RuleDescription> createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- Name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> object describing the attributes with which the new rule will be created.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.rules.RuleDescription>
      description: <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> of the newly created rule.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  id: createSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new subscription in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> for default values of subscription properties.
  syntax:
    content: public CompletableFuture<SubscriptionDescription> createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> object describing the attributes with which the new subscription will be created.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the newly created subscription.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription,com.microsoft.azure.servicebus.rules.RuleDescription)
  id: createSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription,com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  nameWithType: ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new subscription in the service namespace with the provided default rule. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> for default values of subscription properties.
  syntax:
    content: public CompletableFuture<SubscriptionDescription> createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> object describing the attributes with which the new subscription will be created.'
    - id: defaultRule
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> object describing the default rule. If null, then pass-through filter will be created.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the newly created subscription.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(java.lang.String,java.lang.String)
  id: createSubscriptionAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createSubscriptionAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.createSubscriptionAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new subscription for a given topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> for default values of subscription properties.
  syntax:
    content: public CompletableFuture<SubscriptionDescription> createSubscriptionAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic relative to the service namespace base address.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the newly created subscription.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(com.microsoft.azure.servicebus.management.TopicDescription)
  id: createTopicAsync(com.microsoft.azure.servicebus.management.TopicDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createTopicAsync(TopicDescription topicDescription)
  nameWithType: ManagementClientAsync.createTopicAsync(TopicDescription topicDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(TopicDescription topicDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> for default values of topic properties.
  syntax:
    content: public CompletableFuture<TopicDescription> createTopicAsync(TopicDescription topicDescription)
    parameters:
    - id: topicDescription
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> object describing the attributes with which the new topic will be created.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.TopicDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> of the newly created topic.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(java.lang.String)
  id: createTopicAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: createTopicAsync(String topicPath)
  nameWithType: ManagementClientAsync.createTopicAsync(String topicPath)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(String topicPath)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Creates a new topic in the service namespace with the given name. See <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> for default values of topic properties.
  syntax:
    content: public CompletableFuture<TopicDescription> createTopicAsync(String topicPath)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic relative to the service namespace base address.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.TopicDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> of the newly created topic.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync(java.lang.String)
  id: deleteQueueAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: deleteQueueAsync(String path)
  nameWithType: ManagementClientAsync.deleteQueueAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the queue described by the path relative to the service namespace base address.
  syntax:
    content: public CompletableFuture<Void> deleteQueueAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The name of the entity relative to the service namespace base address.'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: A completable future that completes when the queue is deleted.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteRuleAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClientAsync.deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the rule for a given topic-subscription.
  syntax:
    content: public CompletableFuture<Void> deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    - id: ruleName
      type: java.lang.String
      description: '- The name of the rule.'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: A completable future that completes when the rule is deleted.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync(java.lang.String,java.lang.String)
  id: deleteSubscriptionAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: deleteSubscriptionAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.deleteSubscriptionAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the subscription described by the topicPath and the subscriptionName.
  syntax:
    content: public CompletableFuture<Void> deleteSubscriptionAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: A completable future that completes when the subscription is deleted.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync(java.lang.String)
  id: deleteTopicAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: deleteTopicAsync(String path)
  nameWithType: ManagementClientAsync.deleteTopicAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Deletes the topic described by the path relative to the service namespace base address.
  syntax:
    content: public CompletableFuture<Void> deleteTopicAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The name of the entity relative to the service namespace base address.'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Void>
      description: A completable future that completes when the topic is deleted.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync()
  id: getNamespaceInfoAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getNamespaceInfoAsync()
  nameWithType: ManagementClientAsync.getNamespaceInfoAsync()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves information related to the namespace. Works with any claim (Send/Listen/Manage).
  syntax:
    content: public CompletableFuture<NamespaceInfo> getNamespaceInfoAsync()
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.NamespaceInfo>
      description: '- <xref uid="com.microsoft.azure.servicebus.management.NamespaceInfo" data-throw-if-not-resolved="false">NamespaceInfo</xref> containing namespace information.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync(java.lang.String)
  id: getQueueAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getQueueAsync(String path)
  nameWithType: ManagementClientAsync.getQueueAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a queue from the service namespace
  syntax:
    content: public CompletableFuture<QueueDescription> getQueueAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.QueueDescription>
      description: '- QueueDescription containing information about the queue.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync(java.lang.String)
  id: getQueueRuntimeInfoAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getQueueRuntimeInfoAsync(String path)
  nameWithType: ManagementClientAsync.getQueueRuntimeInfoAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the runtime information of a queue.
  syntax:
    content: public CompletableFuture<QueueRuntimeInfo> getQueueRuntimeInfoAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.QueueRuntimeInfo>
      description: '- QueueRuntimeInfo containing runtime information about the queue.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync()
  id: getQueuesAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getQueuesAsync()
  nameWithType: ManagementClientAsync.getQueuesAsync()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of queues present in the namespace.
  syntax:
    content: public CompletableFuture<List<QueueDescription>> getQueuesAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.QueueDescription>>
      description: the first 100 queues.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync(int,int)
  id: getQueuesAsync(int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getQueuesAsync(int count, int skip)
  nameWithType: ManagementClientAsync.getQueuesAsync(int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync(int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of queues present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public CompletableFuture<List<QueueDescription>> getQueuesAsync(int count, int skip)
    parameters:
    - id: count
      type: int
      description: '- The number of queues to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of queues to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.QueueDescription>>
      description: the list of queues.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getRuleAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getRuleAsync(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClientAsync.getRuleAsync(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a rule for a given topic and subscription from the service namespace
  syntax:
    content: public CompletableFuture<RuleDescription> getRuleAsync(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The path of the topic relative to service bus namespace.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    - id: ruleName
      type: java.lang.String
      description: '- The name of the rule.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.rules.RuleDescription>
      description: '- RuleDescription containing information about the subscription.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(java.lang.String,java.lang.String)
  id: getRulesAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getRulesAsync(String topicName, String subscriptionName)
  nameWithType: ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of rules for a given topic-subscription in the namespace.
  syntax:
    content: public CompletableFuture<List<RuleDescription>> getRulesAsync(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.rules.RuleDescription>>
      description: the first 100 rules.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(java.lang.String,java.lang.String,int,int)
  id: getRulesAsync(java.lang.String,java.lang.String,int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  nameWithType: ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of rules for a given topic-subscription in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public CompletableFuture<List<RuleDescription>> getRulesAsync(String topicName, String subscriptionName, int count, int skip)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription.'
    - id: count
      type: int
      description: '- The number of rules to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of rules to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.rules.RuleDescription>>
      description: the list of rules.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync(java.lang.String,java.lang.String)
  id: getSubscriptionAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getSubscriptionAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.getSubscriptionAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a subscription for a given topic from the service namespace
  syntax:
    content: public CompletableFuture<SubscriptionDescription> getSubscriptionAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The path of the topic relative to service bus namespace.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionDescription>
      description: '- SubscriptionDescription containing information about the subscription.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync(java.lang.String,java.lang.String)
  id: getSubscriptionRuntimeInfoAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the runtime information of a subscription in a given topic
  syntax:
    content: public CompletableFuture<SubscriptionRuntimeInfo> getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- The path of the topic relative to service bus namespace.'
    - id: subscriptionName
      type: java.lang.String
      description: '- The name of the subscription'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo>
      description: '- SubscriptionRuntimeInfo containing the runtime information about the subscription.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(java.lang.String)
  id: getSubscriptionsAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getSubscriptionsAsync(String topicName)
  nameWithType: ManagementClientAsync.getSubscriptionsAsync(String topicName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String topicName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of subscriptions for a given topic in the namespace.
  syntax:
    content: public CompletableFuture<List<SubscriptionDescription>> getSubscriptionsAsync(String topicName)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.SubscriptionDescription>>
      description: the first 100 subscriptions.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(java.lang.String,int,int)
  id: getSubscriptionsAsync(java.lang.String,int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getSubscriptionsAsync(String topicName, int count, int skip)
  nameWithType: ManagementClientAsync.getSubscriptionsAsync(String topicName, int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String topicName, int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of subscriptions for a given topic in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public CompletableFuture<List<SubscriptionDescription>> getSubscriptionsAsync(String topicName, int count, int skip)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- The name of the topic.'
    - id: count
      type: int
      description: '- The number of subscriptions to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of subscriptions to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.SubscriptionDescription>>
      description: the list of subscriptions.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync(java.lang.String)
  id: getTopicAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getTopicAsync(String path)
  nameWithType: ManagementClientAsync.getTopicAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves a topic from the service namespace
  syntax:
    content: public CompletableFuture<TopicDescription> getTopicAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.TopicDescription>
      description: '- Description containing information about the topic.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync(java.lang.String)
  id: getTopicRuntimeInfoAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getTopicRuntimeInfoAsync(String path)
  nameWithType: ManagementClientAsync.getTopicRuntimeInfoAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the runtime information of a topic
  syntax:
    content: public CompletableFuture<TopicRuntimeInfo> getTopicRuntimeInfoAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- The path of the queue relative to service bus namespace.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.TopicRuntimeInfo>
      description: '- TopicRuntimeInfo containing runtime information about the topic.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync()
  id: getTopicsAsync()
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getTopicsAsync()
  nameWithType: ManagementClientAsync.getTopicsAsync()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of topics present in the namespace.
  syntax:
    content: public CompletableFuture<List<TopicDescription>> getTopicsAsync()
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.TopicDescription>>
      description: the first 100 topics.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync(int,int)
  id: getTopicsAsync(int,int)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: getTopicsAsync(int count, int skip)
  nameWithType: ManagementClientAsync.getTopicsAsync(int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync(int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Retrieves the list of topics present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities.
  syntax:
    content: public CompletableFuture<List<TopicDescription>> getTopicsAsync(int count, int skip)
    parameters:
    - id: count
      type: int
      description: '- The number of topics to fetch. Defaults to 100. Maximum value allowed is 100.'
    - id: skip
      type: int
      description: '- The number of topics to skip. Defaults to 0. Cannot be negative.'
    return:
      type: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.TopicDescription>>
      description: the list of topics.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync(java.lang.String)
  id: queueExistsAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: queueExistsAsync(String path)
  nameWithType: ManagementClientAsync.queueExistsAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given queue exists or not.
  syntax:
    content: public CompletableFuture<Boolean> queueExistsAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- Path of the entity to check'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Boolean>
      description: '- True if the entity exists. False otherwise.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(java.lang.String,java.lang.String,java.lang.String)
  id: ruleExistsAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClientAsync.ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given rule exists or not for a given subscription.
  syntax:
    content: public CompletableFuture<Boolean> ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- Path of the topic'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    - id: ruleName
      type: java.lang.String
      description: '- Name of the rule'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Boolean>
      description: '- True if the entity exists. False otherwise.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync(java.lang.String,java.lang.String)
  id: subscriptionExistsAsync(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: subscriptionExistsAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.subscriptionExistsAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given subscription exists or not.
  syntax:
    content: public CompletableFuture<Boolean> subscriptionExistsAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: java.lang.String
      description: '- Path of the topic'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Boolean>
      description: '- True if the entity exists. False otherwise.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync(java.lang.String)
  id: topicExistsAsync(java.lang.String)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: topicExistsAsync(String path)
  nameWithType: ManagementClientAsync.topicExistsAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Checks whether a given topic exists or not.
  syntax:
    content: public CompletableFuture<Boolean> topicExistsAsync(String path)
    parameters:
    - id: path
      type: java.lang.String
      description: '- Path of the entity to check'
    return:
      type: java.util.concurrent.CompletableFuture<java.lang.Boolean>
      description: '- True if the entity exists. False otherwise.'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync(com.microsoft.azure.servicebus.management.QueueDescription)
  id: updateQueueAsync(com.microsoft.azure.servicebus.management.QueueDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: updateQueueAsync(QueueDescription queueDescription)
  nameWithType: ManagementClientAsync.updateQueueAsync(QueueDescription queueDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync(QueueDescription queueDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing queue.
  syntax:
    content: public CompletableFuture<QueueDescription> updateQueueAsync(QueueDescription queueDescription)
    parameters:
    - id: queueDescription
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> object describing the attributes with which the queue will be updated.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.QueueDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false">QueueDescription</xref> of the updated queue.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  id: updateRuleAsync(java.lang.String,java.lang.String,com.microsoft.azure.servicebus.rules.RuleDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClientAsync.updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing rule.
  syntax:
    content: public CompletableFuture<RuleDescription> updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
    parameters:
    - id: topicName
      type: java.lang.String
      description: '- Name of the topic.'
    - id: subscriptionName
      type: java.lang.String
      description: '- Name of the subscription.'
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> object describing the attributes with which the rule will be updated.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.rules.RuleDescription>
      description: <xref uid="com.microsoft.azure.servicebus.rules.RuleDescription" data-throw-if-not-resolved="false">RuleDescription</xref> of the updated rule.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  id: updateSubscriptionAsync(com.microsoft.azure.servicebus.management.SubscriptionDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClientAsync.updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing subscription.
  syntax:
    content: public CompletableFuture<SubscriptionDescription> updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> object describing the attributes with which the subscription will be updated.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false">SubscriptionDescription</xref> of the updated subscription.
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync(com.microsoft.azure.servicebus.management.TopicDescription)
  id: updateTopicAsync(com.microsoft.azure.servicebus.management.TopicDescription)
  artifact: com.microsoft.azure:azure-servicebus:3.4.0
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  langs:
  - java
  name: updateTopicAsync(TopicDescription topicDescription)
  nameWithType: ManagementClientAsync.updateTopicAsync(TopicDescription topicDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync(TopicDescription topicDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync*
  type: Method
  package: com.microsoft.azure.servicebus.management
  summary: Updates an existing topic.
  syntax:
    content: public CompletableFuture<TopicDescription> updateTopicAsync(TopicDescription topicDescription)
    parameters:
    - id: topicDescription
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: '- A <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> object describing the attributes with which the topic will be updated.'
    return:
      type: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.TopicDescription>
      description: <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false">TopicDescription</xref> of the updated topic.
references:
- uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync*
  name: ManagementClientAsync
  nameWithType: ManagementClientAsync.ManagementClientAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.net.URI
  spec.java:
  - uid: java.net.URI
    name: URI
    fullName: java.net.URI
- uid: com.microsoft.azure.servicebus.ClientSettings
  name: ClientSettings
  nameWithType: ClientSettings
  fullName: com.microsoft.azure.servicebus.ClientSettings
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.NamespaceInfo>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.NamespaceInfo
    name: NamespaceInfo
    fullName: com.microsoft.azure.servicebus.management.NamespaceInfo
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync*
  name: getNamespaceInfoAsync
  nameWithType: ManagementClientAsync.getNamespaceInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.QueueDescription>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.QueueDescription
    name: QueueDescription
    fullName: com.microsoft.azure.servicebus.management.QueueDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync*
  name: getQueueAsync
  nameWithType: ManagementClientAsync.getQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.QueueRuntimeInfo>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
    name: QueueRuntimeInfo
    fullName: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync*
  name: getQueueRuntimeInfoAsync
  nameWithType: ManagementClientAsync.getQueueRuntimeInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.TopicDescription>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.TopicDescription
    name: TopicDescription
    fullName: com.microsoft.azure.servicebus.management.TopicDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync*
  name: getTopicAsync
  nameWithType: ManagementClientAsync.getTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.TopicRuntimeInfo>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
    name: TopicRuntimeInfo
    fullName: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync*
  name: getTopicRuntimeInfoAsync
  nameWithType: ManagementClientAsync.getTopicRuntimeInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionDescription>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
    name: SubscriptionDescription
    fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync*
  name: getSubscriptionAsync
  nameWithType: ManagementClientAsync.getSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
    name: SubscriptionRuntimeInfo
    fullName: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync*
  name: getSubscriptionRuntimeInfoAsync
  nameWithType: ManagementClientAsync.getSubscriptionRuntimeInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.rules.RuleDescription>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync*
  name: getRuleAsync
  nameWithType: ManagementClientAsync.getRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.QueueDescription>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.QueueDescription
    name: QueueDescription
    fullName: com.microsoft.azure.servicebus.management.QueueDescription
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync*
  name: getQueuesAsync
  nameWithType: ManagementClientAsync.getQueuesAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync
  package: com.microsoft.azure.servicebus.management
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.TopicDescription>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.TopicDescription
    name: TopicDescription
    fullName: com.microsoft.azure.servicebus.management.TopicDescription
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync*
  name: getTopicsAsync
  nameWithType: ManagementClientAsync.getTopicsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.management.SubscriptionDescription>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
    name: SubscriptionDescription
    fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync*
  name: getSubscriptionsAsync
  nameWithType: ManagementClientAsync.getSubscriptionsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<java.util.List<com.microsoft.azure.servicebus.rules.RuleDescription>>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync*
  name: getRulesAsync
  nameWithType: ManagementClientAsync.getRulesAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync*
  name: createQueueAsync
  nameWithType: ManagementClientAsync.createQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.QueueDescription
  name: QueueDescription
  nameWithType: QueueDescription
  fullName: com.microsoft.azure.servicebus.management.QueueDescription
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync*
  name: updateQueueAsync
  nameWithType: ManagementClientAsync.updateQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync*
  name: createTopicAsync
  nameWithType: ManagementClientAsync.createTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.TopicDescription
  name: TopicDescription
  nameWithType: TopicDescription
  fullName: com.microsoft.azure.servicebus.management.TopicDescription
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync*
  name: updateTopicAsync
  nameWithType: ManagementClientAsync.updateTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  name: createSubscriptionAsync
  nameWithType: ManagementClientAsync.createSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
  name: SubscriptionDescription
  nameWithType: SubscriptionDescription
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
- uid: com.microsoft.azure.servicebus.rules.RuleDescription
  name: RuleDescription
  nameWithType: RuleDescription
  fullName: com.microsoft.azure.servicebus.rules.RuleDescription
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync*
  name: updateSubscriptionAsync
  nameWithType: ManagementClientAsync.updateSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync*
  name: createRuleAsync
  nameWithType: ManagementClientAsync.createRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync*
  name: updateRuleAsync
  nameWithType: ManagementClientAsync.updateRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<java.lang.Boolean>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync*
  name: queueExistsAsync
  nameWithType: ManagementClientAsync.queueExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync*
  name: topicExistsAsync
  nameWithType: ManagementClientAsync.topicExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync*
  name: subscriptionExistsAsync
  nameWithType: ManagementClientAsync.subscriptionExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync*
  name: ruleExistsAsync
  nameWithType: ManagementClientAsync.ruleExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.util.concurrent.CompletableFuture<java.lang.Void>
  spec.java:
  - uid: java.util.concurrent.CompletableFuture
    name: CompletableFuture
    fullName: java.util.concurrent.CompletableFuture
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync*
  name: deleteQueueAsync
  nameWithType: ManagementClientAsync.deleteQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync*
  name: deleteTopicAsync
  nameWithType: ManagementClientAsync.deleteTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync*
  name: deleteSubscriptionAsync
  nameWithType: ManagementClientAsync.deleteSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync*
  name: deleteRuleAsync
  nameWithType: ManagementClientAsync.deleteRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.close*
  name: close
  nameWithType: ManagementClientAsync.close
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.close
  package: com.microsoft.azure.servicebus.management
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.concurrent.CompletableFuture
  name: CompletableFuture
  nameWithType: CompletableFuture
  fullName: java.util.concurrent.CompletableFuture
- uid: com.microsoft.azure.servicebus.management.NamespaceInfo
  name: NamespaceInfo
  nameWithType: NamespaceInfo
  fullName: com.microsoft.azure.servicebus.management.NamespaceInfo
- uid: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
  name: QueueRuntimeInfo
  nameWithType: QueueRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
- uid: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
  name: TopicRuntimeInfo
  nameWithType: TopicRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
- uid: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
  name: SubscriptionRuntimeInfo
  nameWithType: SubscriptionRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: java.lang.Boolean
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
