### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync
  id: ManagementClientAsync
  parent: com.microsoft.azure.servicebus.management
  children:
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(QueueDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync(String,String,RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription,RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(TopicDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync(String,String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync(String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync(int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync(String,String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String,String,int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync(String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync(String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String,int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync()
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync(int,int)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(ConnectionStringBuilder)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(URI,ClientSettings)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(String,String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync(String,String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync(String)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync(QueueDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync(String,String,RuleDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync(SubscriptionDescription)
  - com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync(TopicDescription)
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: ManagementClientAsync
  nameWithType: ManagementClientAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 39
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Asynchronous client to perform management operations on Service Bus entities. Operations return CompletableFuture which asynchronously return the responses. </p>"
  syntax: &o1
    content: public class ManagementClientAsync
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  id: close()
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: close()
  nameWithType: ManagementClientAsync.close()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.close*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 986
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Disposes and closes the managementClient. </p>"
  syntax: &o2
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>if an I/O error occurs </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(QueueDescription)
  id: createQueueAsync(QueueDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createQueueAsync(QueueDescription queueDescription)
  nameWithType: ManagementClientAsync.createQueueAsync(QueueDescription queueDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(QueueDescription queueDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 508
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new queue in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> for default values of queue properties. </p>"
  syntax:
    content: public CompletableFuture<QueueDescription> createQueueAsync(QueueDescription queueDescription)
    parameters:
    - id: queueDescription
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> object describing the attributes with which the new queue will be created. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.QueueDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> of the newly created queue. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(String)
  id: createQueueAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createQueueAsync(String queuePath)
  nameWithType: ManagementClientAsync.createQueueAsync(String queuePath)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync(String queuePath)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 498
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new queue in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.QueueDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"QueueDescription\"></xref> for default values of queue properties. </p>"
  syntax:
    content: public CompletableFuture<QueueDescription> createQueueAsync(String queuePath)
    parameters:
    - id: queuePath
      type: "26831127"
      description: <p>- The name of the queue relative to the service namespace base address. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.QueueDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> of the newly created queue. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Entity name is null, empty, too long or uses illegal characters. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync(String,String,RuleDescription)
  id: createRuleAsync(String,String,RuleDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClientAsync.createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 707
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new rule for a given topic - subscription. See <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuleDescription\"></xref> for default values of subscription properties. </p>"
  syntax:
    content: public CompletableFuture<RuleDescription> createRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
    parameters:
    - id: topicName
      type: "26831127"
      description: <p>- Name of the topic. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- Name of the subscription. </p>
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>- A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> object describing the attributes with which the new rule will be created. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> of the newly created rule. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(String,String)
  id: createSubscriptionAsync(String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createSubscriptionAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.createSubscriptionAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 628
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new subscription for a given topic in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> for default values of subscription properties. </p>"
  syntax:
    content: public CompletableFuture<SubscriptionDescription> createSubscriptionAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- The name of the topic relative to the service namespace base address. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the newly created subscription. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Entity name is null, empty, too long or uses illegal characters. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription)
  id: createSubscriptionAsync(SubscriptionDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 638
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new subscription in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> for default values of subscription properties. </p>"
  syntax:
    content: public CompletableFuture<SubscriptionDescription> createSubscriptionAsync(SubscriptionDescription subscriptionDescription)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> object describing the attributes with which the new subscription will be created. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the newly created subscription. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription,RuleDescription)
  id: createSubscriptionAsync(SubscriptionDescription,RuleDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  nameWithType: ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 649
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new subscription in the service namespace with the provided default rule. See <xref uid=\"com.microsoft.azure.servicebus.management.SubscriptionDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SubscriptionDescription\"></xref> for default values of subscription properties. </p>"
  syntax:
    content: public CompletableFuture<SubscriptionDescription> createSubscriptionAsync(SubscriptionDescription subscriptionDescription, RuleDescription defaultRule)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> object describing the attributes with which the new subscription will be created. </p>
    - id: defaultRule
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>- A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> object describing the default rule. If null, then pass-through filter will be created. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the newly created subscription. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(String)
  id: createTopicAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createTopicAsync(String topicPath)
  nameWithType: ManagementClientAsync.createTopicAsync(String topicPath)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(String topicPath)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 563
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new topic in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> for default values of topic properties. </p>"
  syntax:
    content: public CompletableFuture<TopicDescription> createTopicAsync(String topicPath)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- The name of the topic relative to the service namespace base address. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.TopicDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> of the newly created topic. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Entity name is null, empty, too long or uses illegal characters. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(TopicDescription)
  id: createTopicAsync(TopicDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: createTopicAsync(TopicDescription topicDescription)
  nameWithType: ManagementClientAsync.createTopicAsync(TopicDescription topicDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync(TopicDescription topicDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 573
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new topic in the service namespace with the given name. See <xref uid=\"com.microsoft.azure.servicebus.management.TopicDescription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TopicDescription\"></xref> for default values of topic properties. </p>"
  syntax:
    content: public CompletableFuture<TopicDescription> createTopicAsync(TopicDescription topicDescription)
    parameters:
    - id: topicDescription
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> object describing the attributes with which the new topic will be created. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.TopicDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> of the newly created topic. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync(String)
  id: deleteQueueAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: deleteQueueAsync(String path)
  nameWithType: ManagementClientAsync.deleteQueueAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 923
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Deletes the queue described by the path relative to the service namespace base address. </p>"
  syntax:
    content: public CompletableFuture<Void> deleteQueueAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- The name of the entity relative to the service namespace base address. </p>
    return:
      type: db03ee24
      description: <p>A completable future that completes when the queue is deleted. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync(String,String,String)
  id: deleteRuleAsync(String,String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClientAsync.deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 961
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Deletes the rule for a given topic-subscription. </p>"
  syntax:
    content: public CompletableFuture<Void> deleteRuleAsync(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- The name of the topic. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription. </p>
    - id: ruleName
      type: "26831127"
      description: <p>- The name of the rule. </p>
    return:
      type: db03ee24
      description: <p>A completable future that completes when the rule is deleted. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync(String,String)
  id: deleteSubscriptionAsync(String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: deleteSubscriptionAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.deleteSubscriptionAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 946
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Deletes the subscription described by the topicPath and the subscriptionName. </p>"
  syntax:
    content: public CompletableFuture<Void> deleteSubscriptionAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- The name of the topic. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription. </p>
    return:
      type: db03ee24
      description: <p>A completable future that completes when the subscription is deleted. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync(String)
  id: deleteTopicAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: deleteTopicAsync(String path)
  nameWithType: ManagementClientAsync.deleteTopicAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 934
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Deletes the topic described by the path relative to the service namespace base address. </p>"
  syntax:
    content: public CompletableFuture<Void> deleteTopicAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- The name of the entity relative to the service namespace base address. </p>
    return:
      type: db03ee24
      description: <p>A completable future that completes when the topic is deleted. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync()
  id: getNamespaceInfoAsync()
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getNamespaceInfoAsync()
  nameWithType: ManagementClientAsync.getNamespaceInfoAsync()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 84
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves information related to the namespace. Works with any claim (Send/Listen/Manage). </p>"
  syntax:
    content: public CompletableFuture<NamespaceInfo> getNamespaceInfoAsync()
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.NamespaceInfoa08ddfce
      description: <p>- <xref uid="com.microsoft.azure.servicebus.management.NamespaceInfo" data-throw-if-not-resolved="false" data-raw-source="NamespaceInfo"></xref> containing namespace information. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync(String)
  id: getQueueAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getQueueAsync(String path)
  nameWithType: ManagementClientAsync.getQueueAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 109
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves a queue from the service namespace </p>"
  syntax:
    content: public CompletableFuture<QueueDescription> getQueueAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- The path of the queue relative to service bus namespace. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.QueueDescriptiona08ddfce
      description: <p>- QueueDescription containing information about the queue. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync(String)
  id: getQueueRuntimeInfoAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getQueueRuntimeInfoAsync(String path)
  nameWithType: ManagementClientAsync.getQueueRuntimeInfoAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 136
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the runtime information of a queue. </p>"
  syntax:
    content: public CompletableFuture<QueueRuntimeInfo> getQueueRuntimeInfoAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- The path of the queue relative to service bus namespace. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.QueueRuntimeInfoa08ddfce
      description: <p>- QueueRuntimeInfo containing runtime information about the queue. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync()
  id: getQueuesAsync()
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getQueuesAsync()
  nameWithType: ManagementClientAsync.getQueuesAsync()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 307
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of queues present in the namespace. </p>"
  syntax:
    content: public CompletableFuture<List<QueueDescription>> getQueuesAsync()
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.management.QueueDescriptione7daa122
      description: <p>the first 100 queues. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync(int,int)
  id: getQueuesAsync(int,int)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getQueuesAsync(int count, int skip)
  nameWithType: ManagementClientAsync.getQueuesAsync(int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync(int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 319
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of queues present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>"
  syntax:
    content: public CompletableFuture<List<QueueDescription>> getQueuesAsync(int count, int skip)
    parameters:
    - id: count
      type: f75371fa
      description: <p>- The number of queues to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    - id: skip
      type: f75371fa
      description: <p>- The number of queues to skip. Defaults to 0. Cannot be negative. </p>
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.management.QueueDescriptione7daa122
      description: <p>the list of queues. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync(String,String,String)
  id: getRuleAsync(String,String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getRuleAsync(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClientAsync.getRuleAsync(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 279
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves a rule for a given topic and subscription from the service namespace </p>"
  syntax:
    content: public CompletableFuture<RuleDescription> getRuleAsync(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- The path of the topic relative to service bus namespace. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription. </p>
    - id: ruleName
      type: "26831127"
      description: <p>- The name of the rule. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
      description: <p>- RuleDescription containing information about the subscription. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String,String)
  id: getRulesAsync(String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getRulesAsync(String topicName, String subscriptionName)
  nameWithType: ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 430
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of rules for a given topic-subscription in the namespace. </p>"
  syntax:
    content: public CompletableFuture<List<RuleDescription>> getRulesAsync(String topicName, String subscriptionName)
    parameters:
    - id: topicName
      type: "26831127"
      description: <p>- The name of the topic. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription. </p>
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
      description: <p>the first 100 rules. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String,String,int,int)
  id: getRulesAsync(String,String,int,int)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  nameWithType: ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 444
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of rules for a given topic-subscription in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>"
  syntax:
    content: public CompletableFuture<List<RuleDescription>> getRulesAsync(String topicName, String subscriptionName, int count, int skip)
    parameters:
    - id: topicName
      type: "26831127"
      description: <p>- The name of the topic. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription. </p>
    - id: count
      type: f75371fa
      description: <p>- The number of rules to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    - id: skip
      type: f75371fa
      description: <p>- The number of rules to skip. Defaults to 0. Cannot be negative. </p>
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
      description: <p>the list of rules. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync(String,String)
  id: getSubscriptionAsync(String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getSubscriptionAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.getSubscriptionAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 218
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves a subscription for a given topic from the service namespace </p>"
  syntax:
    content: public CompletableFuture<SubscriptionDescription> getSubscriptionAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- The path of the topic relative to service bus namespace. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionDescriptiona08ddfce
      description: <p>- SubscriptionDescription containing information about the subscription. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync(String,String)
  id: getSubscriptionRuntimeInfoAsync(String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 248
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the runtime information of a subscription in a given topic </p>"
  syntax:
    content: public CompletableFuture<SubscriptionRuntimeInfo> getSubscriptionRuntimeInfoAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- The path of the topic relative to service bus namespace. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- The name of the subscription </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfoa08ddfce
      description: <p>- SubscriptionRuntimeInfo containing the runtime information about the subscription. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String)
  id: getSubscriptionsAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getSubscriptionsAsync(String topicName)
  nameWithType: ManagementClientAsync.getSubscriptionsAsync(String topicName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String topicName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 386
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of subscriptions for a given topic in the namespace. </p>"
  syntax:
    content: public CompletableFuture<List<SubscriptionDescription>> getSubscriptionsAsync(String topicName)
    parameters:
    - id: topicName
      type: "26831127"
      description: <p>- The name of the topic. </p>
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.management.SubscriptionDescriptione7daa122
      description: <p>the first 100 subscriptions. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String,int,int)
  id: getSubscriptionsAsync(String,int,int)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getSubscriptionsAsync(String topicName, int count, int skip)
  nameWithType: ManagementClientAsync.getSubscriptionsAsync(String topicName, int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync(String topicName, int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 399
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of subscriptions for a given topic in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>"
  syntax:
    content: public CompletableFuture<List<SubscriptionDescription>> getSubscriptionsAsync(String topicName, int count, int skip)
    parameters:
    - id: topicName
      type: "26831127"
      description: <p>- The name of the topic. </p>
    - id: count
      type: f75371fa
      description: <p>- The number of subscriptions to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    - id: skip
      type: f75371fa
      description: <p>- The number of subscriptions to skip. Defaults to 0. Cannot be negative. </p>
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.management.SubscriptionDescriptione7daa122
      description: <p>the list of subscriptions. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync(String)
  id: getTopicAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getTopicAsync(String path)
  nameWithType: ManagementClientAsync.getTopicAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 163
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves a topic from the service namespace </p>"
  syntax:
    content: public CompletableFuture<TopicDescription> getTopicAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- The path of the queue relative to service bus namespace. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.TopicDescriptiona08ddfce
      description: <p>- Description containing information about the topic. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync(String)
  id: getTopicRuntimeInfoAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getTopicRuntimeInfoAsync(String path)
  nameWithType: ManagementClientAsync.getTopicRuntimeInfoAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 190
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the runtime information of a topic </p>"
  syntax:
    content: public CompletableFuture<TopicRuntimeInfo> getTopicRuntimeInfoAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- The path of the queue relative to service bus namespace. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.TopicRuntimeInfoa08ddfce
      description: <p>- TopicRuntimeInfo containing runtime information about the topic. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- Thrown if path is null, empty, or not in right format or length. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync()
  id: getTopicsAsync()
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getTopicsAsync()
  nameWithType: ManagementClientAsync.getTopicsAsync()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync()
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 346
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of topics present in the namespace. </p>"
  syntax:
    content: public CompletableFuture<List<TopicDescription>> getTopicsAsync()
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.management.TopicDescriptione7daa122
      description: <p>the first 100 topics. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync(int,int)
  id: getTopicsAsync(int,int)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: getTopicsAsync(int count, int skip)
  nameWithType: ManagementClientAsync.getTopicsAsync(int count, int skip)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync(int count, int skip)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 358
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Retrieves the list of topics present in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>"
  syntax:
    content: public CompletableFuture<List<TopicDescription>> getTopicsAsync(int count, int skip)
    parameters:
    - id: count
      type: f75371fa
      description: <p>- The number of topics to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    - id: skip
      type: f75371fa
      description: <p>- The number of topics to skip. Defaults to 0. Cannot be negative. </p>
    return:
      type: 0eb76d20com.microsoft.azure.servicebus.management.TopicDescriptione7daa122
      description: <p>the list of topics. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(ConnectionStringBuilder)
  id: ManagementClientAsync(ConnectionStringBuilder)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
  nameWithType: ManagementClientAsync.ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 60
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManagementClientAsync\"></xref>. User should call <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientAsync.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManagementClientAsync#close()\"></xref> at the end of life of the client. </p>"
  syntax:
    content: public ManagementClientAsync(ConnectionStringBuilder connectionStringBuilder)
    parameters:
    - id: connectionStringBuilder
      type: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
      description: <p>- connectionStringBuilder containing namespace information and client settings. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(URI,ClientSettings)
  id: ManagementClientAsync(URI,ClientSettings)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
  nameWithType: ManagementClientAsync.ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync*
  type: Constructor
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 70
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Creates a new <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManagementClientAsync\"></xref>. User should call <xref uid=\"com.microsoft.azure.servicebus.management.ManagementClientAsync.close()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ManagementClientAsync#close()\"></xref> at the end of life of the client. </p>"
  syntax:
    content: public ManagementClientAsync(URI namespaceEndpointURI, ClientSettings clientSettings)
    parameters:
    - id: namespaceEndpointURI
      type: "62304784"
      description: <p>- URI of the namespace connecting to. </p>
    - id: clientSettings
      type: com.microsoft.azure.servicebus.ClientSettings
      description: <p>- client settings. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync(String)
  id: queueExistsAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: queueExistsAsync(String path)
  nameWithType: ManagementClientAsync.queueExistsAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 805
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Checks whether a given queue exists or not. </p>"
  syntax:
    content: public CompletableFuture<Boolean> queueExistsAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- Path of the entity to check </p>
    return:
      type: 7e53ac82
      description: <p>- True if the entity exists. False otherwise. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(String,String,String)
  id: ruleExistsAsync(String,String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
  nameWithType: ManagementClientAsync.ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 893
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Checks whether a given rule exists or not for a given subscription. </p>"
  syntax:
    content: public CompletableFuture<Boolean> ruleExistsAsync(String topicPath, String subscriptionName, String ruleName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- Path of the topic </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- Name of the subscription. </p>
    - id: ruleName
      type: "26831127"
      description: <p>- Name of the rule </p>
    return:
      type: 7e53ac82
      description: <p>- True if the entity exists. False otherwise. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync(String,String)
  id: subscriptionExistsAsync(String,String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: subscriptionExistsAsync(String topicPath, String subscriptionName)
  nameWithType: ManagementClientAsync.subscriptionExistsAsync(String topicPath, String subscriptionName)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync(String topicPath, String subscriptionName)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 862
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Checks whether a given subscription exists or not. </p>"
  syntax:
    content: public CompletableFuture<Boolean> subscriptionExistsAsync(String topicPath, String subscriptionName)
    parameters:
    - id: topicPath
      type: "26831127"
      description: <p>- Path of the topic </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- Name of the subscription. </p>
    return:
      type: 7e53ac82
      description: <p>- True if the entity exists. False otherwise. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync(String)
  id: topicExistsAsync(String)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: topicExistsAsync(String path)
  nameWithType: ManagementClientAsync.topicExistsAsync(String path)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync(String path)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 833
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Checks whether a given topic exists or not. </p>"
  syntax:
    content: public CompletableFuture<Boolean> topicExistsAsync(String path)
    parameters:
    - id: path
      type: "26831127"
      description: <p>- Path of the entity to check </p>
    return:
      type: 7e53ac82
      description: <p>- True if the entity exists. False otherwise. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- path is not null / empty / too long / invalid. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync(QueueDescription)
  id: updateQueueAsync(QueueDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: updateQueueAsync(QueueDescription queueDescription)
  nameWithType: ManagementClientAsync.updateQueueAsync(QueueDescription queueDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync(QueueDescription queueDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 518
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Updates an existing queue. </p>"
  syntax:
    content: public CompletableFuture<QueueDescription> updateQueueAsync(QueueDescription queueDescription)
    parameters:
    - id: queueDescription
      type: com.microsoft.azure.servicebus.management.QueueDescription
      description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> object describing the attributes with which the queue will be updated. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.QueueDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.QueueDescription" data-throw-if-not-resolved="false" data-raw-source="QueueDescription"></xref> of the updated queue. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- descriptor is null. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync(String,String,RuleDescription)
  id: updateRuleAsync(String,String,RuleDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  nameWithType: ManagementClientAsync.updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 719
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Updates an existing rule. </p>"
  syntax:
    content: public CompletableFuture<RuleDescription> updateRuleAsync(String topicName, String subscriptionName, RuleDescription ruleDescription)
    parameters:
    - id: topicName
      type: "26831127"
      description: <p>- Name of the topic. </p>
    - id: subscriptionName
      type: "26831127"
      description: <p>- Name of the subscription. </p>
    - id: ruleDescription
      type: com.microsoft.azure.servicebus.rules.RuleDescription
      description: <p>- A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> object describing the attributes with which the rule will be updated. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RuleDescription"></xref> of the updated rule. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- descriptor is null. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync(SubscriptionDescription)
  id: updateSubscriptionAsync(SubscriptionDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  nameWithType: ManagementClientAsync.updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 660
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Updates an existing subscription. </p>"
  syntax:
    content: public CompletableFuture<SubscriptionDescription> updateSubscriptionAsync(SubscriptionDescription subscriptionDescription)
    parameters:
    - id: subscriptionDescription
      type: com.microsoft.azure.servicebus.management.SubscriptionDescription
      description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> object describing the attributes with which the subscription will be updated. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.SubscriptionDescription" data-throw-if-not-resolved="false" data-raw-source="SubscriptionDescription"></xref> of the updated subscription. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- descriptor is null. </p>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync(TopicDescription)
  id: updateTopicAsync(TopicDescription)
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  langs:
  - java
  name: updateTopicAsync(TopicDescription topicDescription)
  nameWithType: ManagementClientAsync.updateTopicAsync(TopicDescription topicDescription)
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync(TopicDescription topicDescription)
  overload: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/management/ManagementClientAsync.java
    startLine: 583
  package: com.microsoft.azure.servicebus.management
  summary: "<p>Updates an existing topic. </p>"
  syntax:
    content: public CompletableFuture<TopicDescription> updateTopicAsync(TopicDescription topicDescription)
    parameters:
    - id: topicDescription
      type: com.microsoft.azure.servicebus.management.TopicDescription
      description: <p>- A <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> object describing the attributes with which the topic will be updated. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.servicebus.management.TopicDescriptiona08ddfce
      description: >-
        <p>

          <xref uid="com.microsoft.azure.servicebus.management.TopicDescription" data-throw-if-not-resolved="false" data-raw-source="TopicDescription"></xref> of the updated topic. </p>
  exceptions:
  - type: 3c87bd19
    description: <p>- descriptor is null. </p>
references:
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync*
  name: ManagementClientAsync
  nameWithType: ManagementClientAsync.ManagementClientAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ManagementClientAsync
  package: com.microsoft.azure.servicebus.management
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: 9cdf14d0com.microsoft.azure.servicebus.management.NamespaceInfoa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.management.NamespaceInfo
    name: NamespaceInfo
    fullName: com.microsoft.azure.servicebus.management.NamespaceInfo
    href: com.microsoft.azure.servicebus.management.NamespaceInfo.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync*
  name: getNamespaceInfoAsync
  nameWithType: ManagementClientAsync.getNamespaceInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getNamespaceInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 9cdf14d0com.microsoft.azure.servicebus.management.QueueDescriptiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.management.QueueDescription
    name: QueueDescription
    fullName: com.microsoft.azure.servicebus.management.QueueDescription
    href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync*
  name: getQueueAsync
  nameWithType: ManagementClientAsync.getQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: 9cdf14d0com.microsoft.azure.servicebus.management.QueueRuntimeInfoa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
    name: QueueRuntimeInfo
    fullName: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
    href: com.microsoft.azure.servicebus.management.QueueRuntimeInfo.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync*
  name: getQueueRuntimeInfoAsync
  nameWithType: ManagementClientAsync.getQueueRuntimeInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueueRuntimeInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: 9cdf14d0com.microsoft.azure.servicebus.management.TopicDescriptiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.management.TopicDescription
    name: TopicDescription
    fullName: com.microsoft.azure.servicebus.management.TopicDescription
    href: com.microsoft.azure.servicebus.management.TopicDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync*
  name: getTopicAsync
  nameWithType: ManagementClientAsync.getTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: 9cdf14d0com.microsoft.azure.servicebus.management.TopicRuntimeInfoa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
    name: TopicRuntimeInfo
    fullName: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
    href: com.microsoft.azure.servicebus.management.TopicRuntimeInfo.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync*
  name: getTopicRuntimeInfoAsync
  nameWithType: ManagementClientAsync.getTopicRuntimeInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicRuntimeInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionDescriptiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
    name: SubscriptionDescription
    fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
    href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync*
  name: getSubscriptionAsync
  nameWithType: ManagementClientAsync.getSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: 9cdf14d0com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfoa08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
    name: SubscriptionRuntimeInfo
    fullName: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
    href: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync*
  name: getSubscriptionRuntimeInfoAsync
  nameWithType: ManagementClientAsync.getSubscriptionRuntimeInfoAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionRuntimeInfoAsync
  package: com.microsoft.azure.servicebus.management
- uid: 9cdf14d0com.microsoft.azure.servicebus.rules.RuleDescriptiona08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
    href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync*
  name: getRuleAsync
  nameWithType: ManagementClientAsync.getRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: 0eb76d20com.microsoft.azure.servicebus.management.QueueDescriptione7daa122
  spec.java:
  - name: CompletableFuture<List<
    fullName: CompletableFuture<List<
  - uid: com.microsoft.azure.servicebus.management.QueueDescription
    name: QueueDescription
    fullName: com.microsoft.azure.servicebus.management.QueueDescription
    href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync*
  name: getQueuesAsync
  nameWithType: ManagementClientAsync.getQueuesAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getQueuesAsync
  package: com.microsoft.azure.servicebus.management
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: 0eb76d20com.microsoft.azure.servicebus.management.TopicDescriptione7daa122
  spec.java:
  - name: CompletableFuture<List<
    fullName: CompletableFuture<List<
  - uid: com.microsoft.azure.servicebus.management.TopicDescription
    name: TopicDescription
    fullName: com.microsoft.azure.servicebus.management.TopicDescription
    href: com.microsoft.azure.servicebus.management.TopicDescription.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync*
  name: getTopicsAsync
  nameWithType: ManagementClientAsync.getTopicsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getTopicsAsync
  package: com.microsoft.azure.servicebus.management
- uid: 0eb76d20com.microsoft.azure.servicebus.management.SubscriptionDescriptione7daa122
  spec.java:
  - name: CompletableFuture<List<
    fullName: CompletableFuture<List<
  - uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
    name: SubscriptionDescription
    fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
    href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync*
  name: getSubscriptionsAsync
  nameWithType: ManagementClientAsync.getSubscriptionsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getSubscriptionsAsync
  package: com.microsoft.azure.servicebus.management
- uid: 0eb76d20com.microsoft.azure.servicebus.rules.RuleDescriptione7daa122
  spec.java:
  - name: CompletableFuture<List<
    fullName: CompletableFuture<List<
  - uid: com.microsoft.azure.servicebus.rules.RuleDescription
    name: RuleDescription
    fullName: com.microsoft.azure.servicebus.rules.RuleDescription
    href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  - name: '>>'
    fullName: '>>'
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync*
  name: getRulesAsync
  nameWithType: ManagementClientAsync.getRulesAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync*
  name: createQueueAsync
  nameWithType: ManagementClientAsync.createQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync*
  name: updateQueueAsync
  nameWithType: ManagementClientAsync.updateQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync*
  name: createTopicAsync
  nameWithType: ManagementClientAsync.createTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync*
  name: updateTopicAsync
  nameWithType: ManagementClientAsync.updateTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync*
  name: createSubscriptionAsync
  nameWithType: ManagementClientAsync.createSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync*
  name: updateSubscriptionAsync
  nameWithType: ManagementClientAsync.updateSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync*
  name: createRuleAsync
  nameWithType: ManagementClientAsync.createRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.createRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync*
  name: updateRuleAsync
  nameWithType: ManagementClientAsync.updateRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.updateRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: 7e53ac82
  spec.java:
  - name: CompletableFuture<Boolean>
    fullName: CompletableFuture<Boolean>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync*
  name: queueExistsAsync
  nameWithType: ManagementClientAsync.queueExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.queueExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync*
  name: topicExistsAsync
  nameWithType: ManagementClientAsync.topicExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.topicExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync*
  name: subscriptionExistsAsync
  nameWithType: ManagementClientAsync.subscriptionExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.subscriptionExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync*
  name: ruleExistsAsync
  nameWithType: ManagementClientAsync.ruleExistsAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.ruleExistsAsync
  package: com.microsoft.azure.servicebus.management
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync*
  name: deleteQueueAsync
  nameWithType: ManagementClientAsync.deleteQueueAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteQueueAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync*
  name: deleteTopicAsync
  nameWithType: ManagementClientAsync.deleteTopicAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteTopicAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync*
  name: deleteSubscriptionAsync
  nameWithType: ManagementClientAsync.deleteSubscriptionAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteSubscriptionAsync
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync*
  name: deleteRuleAsync
  nameWithType: ManagementClientAsync.deleteRuleAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.deleteRuleAsync
  package: com.microsoft.azure.servicebus.management
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.close*
  name: close
  nameWithType: ManagementClientAsync.close
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.close
  package: com.microsoft.azure.servicebus.management
- uid: com.microsoft.azure.servicebus.ClientSettings
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus.ClientSettings.yml
  name: ClientSettings
  nameWithType: ClientSettings
  fullName: com.microsoft.azure.servicebus.ClientSettings
  type: Class
  summary: "<p>Class encapsulating common client level settings like TokenProvider, RetryPolicy, OperationTimeout. </p>"
  syntax:
    content: public class ClientSettings
- uid: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder.yml
  name: ConnectionStringBuilder
  nameWithType: ConnectionStringBuilder
  fullName: com.microsoft.azure.servicebus.primitives.ConnectionStringBuilder
  type: Class
  summary: "<p>This class can be used to construct a connection string which can establish communication with ServiceBus entities. It can also be used to perform basic validation on an existing connection string. </p>\r\n<p>Sample Code: <pre><code>ConnectionStringBuilder connectionStringBuilder = new ConnectionStringBuilder(\r\n                                             \"ServiceBusNamespaceName\", \r\n                                             \"ServiceBusEntityName\", // QueueName or TopicName or SubscriptionPath\r\n                                             \"SharedAccessSignatureKeyName\", \r\n                                             \"SharedAccessSignatureKey\");\r\n     \r\n    String connectionString = connectionStringBuilder.toString();\r\n    </code></pre></p>\r\n<p>A connection string is basically a string consisted of key-value pair separated by \";\". Basic format is {{ &lt;}key{&gt;}={ &lt;}value{&gt;}[;{ &lt;}key{&gt;}={ &lt;}value{&gt;}]} where supported key name are as follow: <ul><li><p>Endpoint - URL that points to the servicebus namespace </p></li><li><p>EntityPath - Path to the service bus entity (queue/topic/subscription/). For queues and topics, it is just the entity name. For subscriptions, path is &lt;topicName&gt;/subscriptions/&lt;subscriptionName&gt; </p></li><li><p>SharedAccessKeyName - Key name to the corresponding shared access policy rule for the namespace, or entity. </p></li><li><p>SharedAccessKey - Key value for the corresponding shared access policy rule of the namespace or entity. </p></li><li><p>SharedAccessSignatureToken - Instead of a key name and key value, clients can provide an already generated SAS Token. </p></li><li><p>OperationTimeout - Default timeout to be used for all senders, receiver and clients created from this connection string. </p></li><li><p>RetryPolicy - Name of the retry policy. </p></li></ul></p>"
  syntax:
    content: public class ConnectionStringBuilder
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  name: ManagementClientAsync
  nameWithType: ManagementClientAsync
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync
  type: Class
  summary: "<p>Asynchronous client to perform management operations on Service Bus entities. Operations return CompletableFuture which asynchronously return the responses. </p>"
  syntax: *o1
- uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  parent: com.microsoft.azure.servicebus.management.ManagementClientAsync
  href: com.microsoft.azure.servicebus.management.ManagementClientAsync.yml
  name: close()
  nameWithType: ManagementClientAsync.close()
  fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.close()
  type: Method
  summary: "<p>Disposes and closes the managementClient. </p>"
  syntax: *o2
- uid: com.microsoft.azure.servicebus.management.NamespaceInfo
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.NamespaceInfo.yml
  name: NamespaceInfo
  nameWithType: NamespaceInfo
  fullName: com.microsoft.azure.servicebus.management.NamespaceInfo
  type: Class
  summary: "<p>Represents the metadata related to a service bus namespace. </p>"
  syntax:
    content: public class NamespaceInfo
- uid: com.microsoft.azure.servicebus.management.QueueDescription
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.QueueDescription.yml
  name: QueueDescription
  nameWithType: QueueDescription
  fullName: com.microsoft.azure.servicebus.management.QueueDescription
  type: Class
  summary: "<p>Represents the metadata description of the queue. </p>"
  syntax:
    content: public class QueueDescription
- uid: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.QueueRuntimeInfo.yml
  name: QueueRuntimeInfo
  nameWithType: QueueRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.QueueRuntimeInfo
  type: Class
  summary: "<p>This provides runtime information of the queue. </p>"
  syntax:
    content: public class QueueRuntimeInfo
- uid: com.microsoft.azure.servicebus.management.TopicDescription
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.TopicDescription.yml
  name: TopicDescription
  nameWithType: TopicDescription
  fullName: com.microsoft.azure.servicebus.management.TopicDescription
  type: Class
  summary: "<p>Represents the metadata description of the topic. </p>"
  syntax:
    content: public class TopicDescription
- uid: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.TopicRuntimeInfo.yml
  name: TopicRuntimeInfo
  nameWithType: TopicRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.TopicRuntimeInfo
  type: Class
  summary: "<p>This provides runtime information of the topic. </p>"
  syntax:
    content: public class TopicRuntimeInfo
- uid: com.microsoft.azure.servicebus.management.SubscriptionDescription
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.SubscriptionDescription.yml
  name: SubscriptionDescription
  nameWithType: SubscriptionDescription
  fullName: com.microsoft.azure.servicebus.management.SubscriptionDescription
  type: Class
  summary: "<p>Represents the metadata description of the subscription. </p>"
  syntax:
    content: public class SubscriptionDescription
- uid: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
  parent: com.microsoft.azure.servicebus.management
  href: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo.yml
  name: SubscriptionRuntimeInfo
  nameWithType: SubscriptionRuntimeInfo
  fullName: com.microsoft.azure.servicebus.management.SubscriptionRuntimeInfo
  type: Class
  summary: "<p>This provides runtime information of the subscription. </p>"
  syntax:
    content: public class SubscriptionRuntimeInfo
- uid: com.microsoft.azure.servicebus.rules.RuleDescription
  parent: com.microsoft.azure.servicebus.rules
  href: com.microsoft.azure.servicebus.rules.RuleDescription.yml
  name: RuleDescription
  nameWithType: RuleDescription
  fullName: com.microsoft.azure.servicebus.rules.RuleDescription
  type: Class
  summary: "<p>Representation of a rule defined on service bus topics.</p>\r\n<p></p>"
  syntax:
    content: public class RuleDescription
- uid: com.microsoft.azure.servicebus.primitives.ServiceBusException
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives.ServiceBusException.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  summary: "<p>This is the base exception that service bus will generate for all error cases. </p>"
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.servicebus.security.TokenProvider
  parent: com.microsoft.azure.servicebus.security
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: com.microsoft.azure.servicebus.security.TokenProvider
  type: Class
  summary: "<p>This abstract class defines the contract of a token provider. All token providers should inherit from this class. An instance of token provider is used to obtain a security token for a given audience. </p>"
  syntax:
    content: public class TokenProvider
