### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput
  id: CosmosDBOutput
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation
  children:
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionName()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionThroughput()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.connectionStringSetting()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.createIfNotExists()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.dataType()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.databaseName()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.name()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.partitionKey()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.preferredLocations()
  - com.microsoft.azure.functions.annotation.CosmosDBOutput.useMultipleWriteLocations()
  langs:
  - java
  name: CosmosDBOutput
  nameWithType: CosmosDBOutput
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput
  type: Interface
  package: com.microsoft.azure.functions.annotation
  summary: "Place this on a parameter whose value would be written to CosmosDB. The parameter type should be OutputBinding<T>, where T could be one of:\n\n *  Some native Java types such as String\n *  Any POJO type\n\nThe following example shows a Java function that adds a document to a database, using data provided in the body of an HTTP Post request.\n\n```java\n@FunctionName(\"addItem\")\n\n public String cosmosDbAddItem(\n    @HttpTrigger(name = \"request\", methods = {HttpMethod.POST}, authLevel = AuthorizationLevel.ANONYMOUS)\n     final String message,\n    @CosmosDBOutput(name = \"database\", databaseName = \"ToDoList\", collectionName = \"Items\", \n    connectionStringSetting = \"AzureCosmosDBConnection\")\n ) {\n     return \"{ \\\"id\\\": \\\"\" + System.currentTimeMillis() + \"\\\", \\\"description\\\": \\\"\" + message + \"\\\" }\";\n }\n```"
  syntax:
    content: public interface CosmosDBOutput implements Annotation
  implements:
  - java.lang.annotation.Annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionName()
  id: collectionName()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: collectionName()
  nameWithType: CosmosDBOutput.collectionName()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionName()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionName*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: Defines the collection name of the CosmosDB to which to write.
  syntax:
    content: public abstract String collectionName()
    return:
      type: java.lang.String
      description: The collection name string.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionThroughput()
  id: collectionThroughput()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: collectionThroughput()
  nameWithType: CosmosDBOutput.collectionThroughput()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionThroughput()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionThroughput*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: If CreateIfNotExists is true, defines the throughput of the created collection.
  syntax:
    content: public abstract int collectionThroughput()
    return:
      type: int
      description: Throughput of the created collection.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.connectionStringSetting()
  id: connectionStringSetting()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: connectionStringSetting()
  nameWithType: CosmosDBOutput.connectionStringSetting()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.connectionStringSetting()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.connectionStringSetting*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: Defines the app setting name that contains the CosmosDB connection string.
  syntax:
    content: public abstract String connectionStringSetting()
    return:
      type: java.lang.String
      description: The app setting name of the connection string.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.createIfNotExists()
  id: createIfNotExists()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: createIfNotExists()
  nameWithType: CosmosDBOutput.createIfNotExists()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.createIfNotExists()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.createIfNotExists*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: Defines the ID of the CosmosDB to which to write.
  syntax:
    content: public abstract boolean createIfNotExists()
    return:
      type: boolean
      description: The ID string.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.dataType()
  id: dataType()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: dataType()
  nameWithType: CosmosDBOutput.dataType()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.dataType()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.dataType*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: >-
    Defines how Functions runtime should treat the parameter value. Possible values are:

     *  "" or string: treat it as a string whose value is serialized from the parameter
     *  binary: treat it as a binary data whose value comes from for example OutputBinding<byte\[\]>
  syntax:
    content: public abstract String dataType()
    return:
      type: java.lang.String
      description: The dataType which will be used by the Functions runtime.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.databaseName()
  id: databaseName()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: databaseName()
  nameWithType: CosmosDBOutput.databaseName()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.databaseName()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.databaseName*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: Defines the database name of the CosmosDB to which to write.
  syntax:
    content: public abstract String databaseName()
    return:
      type: java.lang.String
      description: The database name string.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.name()
  id: name()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: name()
  nameWithType: CosmosDBOutput.name()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.name()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.name*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: The variable name used in function.json.
  syntax:
    content: public abstract String name()
    return:
      type: java.lang.String
      description: The variable name used in function.json.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.partitionKey()
  id: partitionKey()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: partitionKey()
  nameWithType: CosmosDBOutput.partitionKey()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.partitionKey()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.partitionKey*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: Defines the partition key path for the created collection when createIfNotExists is set to true. May include binding parameters.
  syntax:
    content: public abstract String partitionKey()
    return:
      type: java.lang.String
      description: partitionKey of the created collection.
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.preferredLocations()
  id: preferredLocations()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: preferredLocations()
  nameWithType: CosmosDBOutput.preferredLocations()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.preferredLocations()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.preferredLocations*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: Defines preferred locations (regions) for geo-replicated database accounts in the Azure Cosmos DB service. Values should be comma-separated. example, PreferredLocations = "East US,South Central US,North Europe"
  syntax:
    content: public abstract String preferredLocations()
    return:
      type: java.lang.String
      description: PreferredLocations for geo-replicated database accounts
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.useMultipleWriteLocations()
  id: useMultipleWriteLocations()
  artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
  parent: com.microsoft.azure.functions.annotation.CosmosDBOutput
  langs:
  - java
  name: useMultipleWriteLocations()
  nameWithType: CosmosDBOutput.useMultipleWriteLocations()
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.useMultipleWriteLocations()
  overload: com.microsoft.azure.functions.annotation.CosmosDBOutput.useMultipleWriteLocations*
  type: Method
  package: com.microsoft.azure.functions.annotation
  summary: Enable to use with Multi Master accounts.
  syntax:
    content: public abstract boolean useMultipleWriteLocations()
    return:
      type: boolean
      description: whether to Multi Master accounts
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.name*
  name: name
  nameWithType: CosmosDBOutput.name
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.name
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.dataType*
  name: dataType
  nameWithType: CosmosDBOutput.dataType
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.dataType
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.databaseName*
  name: databaseName
  nameWithType: CosmosDBOutput.databaseName
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.databaseName
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionName*
  name: collectionName
  nameWithType: CosmosDBOutput.collectionName
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionName
  package: com.microsoft.azure.functions.annotation
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.createIfNotExists*
  name: createIfNotExists
  nameWithType: CosmosDBOutput.createIfNotExists
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.createIfNotExists
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.connectionStringSetting*
  name: connectionStringSetting
  nameWithType: CosmosDBOutput.connectionStringSetting
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.connectionStringSetting
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.partitionKey*
  name: partitionKey
  nameWithType: CosmosDBOutput.partitionKey
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.partitionKey
  package: com.microsoft.azure.functions.annotation
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionThroughput*
  name: collectionThroughput
  nameWithType: CosmosDBOutput.collectionThroughput
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.collectionThroughput
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.useMultipleWriteLocations*
  name: useMultipleWriteLocations
  nameWithType: CosmosDBOutput.useMultipleWriteLocations
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.useMultipleWriteLocations
  package: com.microsoft.azure.functions.annotation
- uid: com.microsoft.azure.functions.annotation.CosmosDBOutput.preferredLocations*
  name: preferredLocations
  nameWithType: CosmosDBOutput.preferredLocations
  fullName: com.microsoft.azure.functions.annotation.CosmosDBOutput.preferredLocations
  package: com.microsoft.azure.functions.annotation
- uid: java.lang.annotation.Annotation
  name: Annotation
  nameWithType: Annotation
  fullName: java.lang.annotation.Annotation
