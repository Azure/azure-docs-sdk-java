### YamlMime:ManagedReference
items:
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  id: FormTrainingAsyncClient
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training
  children:
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization,java.time.Duration)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean,com.azure.ai.formrecognizer.training.models.TrainingOptions)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel(java.lang.String)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse(java.lang.String)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties()
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(java.lang.String,java.lang.String)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse(java.lang.String,java.lang.String)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModel(java.lang.String)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse(java.lang.String)
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getFormRecognizerAsyncClient()
  - com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.listCustomModels()
  langs:
  - java
  name: FormTrainingAsyncClient
  nameWithType: FormTrainingAsyncClient
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  type: Class
  package: com.azure.ai.formrecognizer.training
  summary: >-
    This class provides an asynchronous client that contains model management operations that apply to Azure Form Recognizer. Operations allowed by the client are, to creating, training of custom models, delete models, list models and get subscription account information.


    **Instantiating an asynchronous Form Training Client**


    ```java

    FormTrainingAsyncClient formTrainingAsyncClient = new FormTrainingClientBuilder().buildAsyncClient();

    ```
  syntax:
    content: public final class FormTrainingAsyncClient
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.FormTrainingAsyncClient(com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl,com.azure.ai.formrecognizer.FormRecognizerServiceVersion)
  id: FormTrainingAsyncClient(com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl,com.azure.ai.formrecognizer.FormRecognizerServiceVersion)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)
  nameWithType: FormTrainingAsyncClient.FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.FormTrainingAsyncClient*
  type: Constructor
  package: com.azure.ai.formrecognizer.training
  summary: Create a <xref uid="com.azure.ai.formrecognizer.training.FormTrainingClient" data-throw-if-not-resolved="false">FormTrainingClient</xref> that sends requests to the Form Recognizer service's endpoint. Each service call goes through the <xref uid="com.azure.ai.formrecognizer.training.FormTrainingClientBuilder.pipeline*" data-throw-if-not-resolved="false">http pipeline</xref>.
  syntax:
    content: " FormTrainingAsyncClient(FormRecognizerClientImpl service, FormRecognizerServiceVersion serviceVersion)"
    parameters:
    - id: service
      type: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
      description: The proxy service used to perform REST calls.
    - id: serviceVersion
      type: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
      description: The versions of Azure Form Recognizer supported by this client library.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization)
  id: beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: beginCopyModel(String modelId, CopyAuthorization target)
  nameWithType: FormTrainingAsyncClient.beginCopyModel(String modelId, CopyAuthorization target)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(String modelId, CopyAuthorization target)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.


    This should be called with the source Form Recognizer resource (with the model that is intended to be copied). The target parameter should be supplied from the target resource's output from <xref uid="com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">FormTrainingAsyncClient#getCopyAuthorization(String, String)</xref> method.


    The service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.


    **Code sample**


    ```java

    String resourceId = "target-resource-Id";
     String resourceRegion = "target-resource-region";
     String copyModelId = "copy-model-Id";
     formTrainingAsyncClient.getCopyAuthorization(resourceId, resourceRegion)
         .flatMapMany(copyAuthorization -> formTrainingAsyncClient.beginCopyModel(copyModelId, copyAuthorization))
         .flatMap(AsyncPollResponse::getFinalResult)
         .subscribe(customFormModelInfo ->
             System.out.printf("Copied model has model Id: %s, model status: %s, training started on: %s,"
                 + " training completed on: %s.%n",
             customFormModelInfo.getModelId(),
             customFormModelInfo.getStatus(),
             customFormModelInfo.getTrainingStartedOn(),
             customFormModelInfo.getTrainingCompletedOn()));
    ```
  syntax:
    content: public PollerFlux<FormRecognizerOperationResult,CustomFormModelInfo> beginCopyModel(String modelId, CopyAuthorization target)
    parameters:
    - id: modelId
      type: java.lang.String
      description: Model identifier of the model to copy to the target Form Recognizer resource
    - id: target
      type: com.azure.ai.formrecognizer.training.models.CopyAuthorization
      description: >-
        the copy authorization to the target Form Recognizer resource. The copy authorization can be
         generated from the target resource's call to <xref uid="com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">FormTrainingAsyncClient#getCopyAuthorization(String, String)</xref>
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModelInfo>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the copy model operation until it has completed, has failed,
         or has been cancelled. The completed operation returns the copied model <xref uid="com.azure.ai.formrecognizer.training.models.CustomFormModelInfo" data-throw-if-not-resolved="false">CustomFormModelInfo</xref>.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization,java.time.Duration)
  id: beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization,java.time.Duration)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval)
  nameWithType: FormTrainingAsyncClient.beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.


    This should be called with the source Form Recognizer resource (with the model that is intended to be copied). The target parameter should be supplied from the target resource's output from <xref uid="com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">FormTrainingAsyncClient#getCopyAuthorization(String, String)</xref> method.


    The service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.


    **Code sample**


    ```java

    String resourceId = "target-resource-Id";
     String resourceRegion = "target-resource-region";
     String copyModelId = "copy-model-Id";
     formTrainingAsyncClient.getCopyAuthorization(resourceId, resourceRegion)
         .flatMapMany(copyAuthorization -> formTrainingAsyncClient.beginCopyModel(copyModelId, copyAuthorization,
             Duration.ofSeconds(5)))
         .flatMap(AsyncPollResponse::getFinalResult)
             .subscribe(customFormModelInfo ->
                 System.out.printf("Copied model has model Id: %s, model status: %s, training started on: %s,"
                     + "training completed on: %s.%n",
                 customFormModelInfo.getModelId(),
                 customFormModelInfo.getStatus(),
                 customFormModelInfo.getTrainingStartedOn(),
                 customFormModelInfo.getTrainingCompletedOn()));
    ```
  syntax:
    content: public PollerFlux<FormRecognizerOperationResult,CustomFormModelInfo> beginCopyModel(String modelId, CopyAuthorization target, Duration pollInterval)
    parameters:
    - id: modelId
      type: java.lang.String
      description: Model identifier of the model to copy to the target Form Recognizer resource
    - id: target
      type: com.azure.ai.formrecognizer.training.models.CopyAuthorization
      description: >-
        the copy authorization to the target Form Recognizer resource. The copy authorization can be
         generated from the target resource's call to <xref uid="com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(java.lang.String,java.lang.String)" data-throw-if-not-resolved="false">FormTrainingAsyncClient#getCopyAuthorization(String, String)</xref>
    - id: pollInterval
      type: java.time.Duration
      description: >-
        Duration between each poll for the operation status. If none is specified, a default of
         5 seconds is used.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModelInfo>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the copy model operation until it has completed, has failed,
         or has been cancelled. The completed operation returns the copied model <xref uid="com.azure.ai.formrecognizer.training.models.CustomFormModelInfo" data-throw-if-not-resolved="false">CustomFormModelInfo</xref>.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean)
  id: beginTraining(java.lang.String,boolean)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
  nameWithType: FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Create and train a custom model. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other type of content is ignored.


    The service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.


    See [here][] for information on building your own training data set.


    **Code sample**


    ```java

    String trainingFilesUrl = "{SAS-URL-of-your-container-in-blob-storage}";
     boolean useTrainingLabels = true;
     formTrainingAsyncClient.beginTraining(trainingFilesUrl, useTrainingLabels)
         // if training polling operation completed, retrieve the final result.
         .flatMap(AsyncPollResponse::getFinalResult)
         .subscribe(customFormModel -> {
             System.out.printf("Model Id: %s%n", customFormModel.getModelId());
             System.out.printf("Model Status: %s%n", customFormModel.getModelStatus());
             customFormModel.getSubmodels()
                 .forEach(customFormSubmodel -> customFormSubmodel.getFields()
                     .forEach((key, customFormModelField) ->
                         System.out.printf("Form type: %s Field Text: %s Field Accuracy: %f%n",
                             key, customFormModelField.getName(), customFormModelField.getAccuracy())));
         });
    ```



    [here]: https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data
  syntax:
    content: public PollerFlux<FormRecognizerOperationResult,CustomFormModel> beginTraining(String trainingFilesUrl, boolean useTrainingLabels)
    parameters:
    - id: trainingFilesUrl
      type: java.lang.String
      description: >-
        source URL parameter that is an externally accessible Azure
         storage blob container Uri (preferably a Shared Access Signature Uri).
    - id: useTrainingLabels
      type: boolean
      description: boolean to specify the use of labeled files for training the model.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModel>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the training model operation until it has completed, has failed, or has
         been cancelled. The completed operation returns the trained <xref uid="com.azure.ai.formrecognizer.training.models.CustomFormModel" data-throw-if-not-resolved="false">custom form model</xref>.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(java.lang.String,boolean,com.azure.ai.formrecognizer.training.models.TrainingOptions)
  id: beginTraining(java.lang.String,boolean,com.azure.ai.formrecognizer.training.models.TrainingOptions)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
  nameWithType: FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: "Create and train a custom model.\n\nModels are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'.Other type of content is ignored.\n\nSee [here][] for information on building your own training data set.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString trainingFilesUrl = \"{SAS-URL-of-your-container-in-blob-storage}\";\n TrainingFileFilter trainingFileFilter = new TrainingFileFilter().setSubfoldersIncluded(true).setPrefix(\"Invoice\");\n \n formTrainingAsyncClient.beginTraining(trainingFilesUrl, true,\n     new TrainingOptions()\n         .setTrainingFileFilter(trainingFileFilter)\n         .setPollInterval(Duration.ofSeconds(5)))\n     // if training polling operation completed, retrieve the final result.\n     .flatMap(AsyncPollResponse::getFinalResult)\n     .subscribe(customFormModel -> {\n         System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n         System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n         customFormModel.getSubmodels().forEach(customFormSubmodel ->\n             customFormSubmodel.getFields().forEach((key, customFormModelField) ->\n                 System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %f%n\",\n                     key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n     });\n```\n\n\n[here]: https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data"
  syntax:
    content: public PollerFlux<FormRecognizerOperationResult,CustomFormModel> beginTraining(String trainingFilesUrl, boolean useTrainingLabels, TrainingOptions trainingOptions)
    parameters:
    - id: trainingFilesUrl
      type: java.lang.String
      description: >-
        an externally accessible Azure storage blob container Uri (preferably a
         Shared Access Signature Uri).
    - id: useTrainingLabels
      type: boolean
      description: boolean to specify the use of labeled files for training the model.
    - id: trainingOptions
      type: com.azure.ai.formrecognizer.training.models.TrainingOptions
      description: >-
        The additional configurable <xref uid="com.azure.ai.formrecognizer.training.models.TrainingOptions" data-throw-if-not-resolved="false">options</xref>
         that may be passed when training a model.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModel>
      description: >-
        A <xref uid="com.azure.core.util.polling.PollerFlux" data-throw-if-not-resolved="false">PollerFlux</xref> that polls the training model operation until it has completed, has failed, or has
         been cancelled. The completed operation returns the trained <xref uid="com.azure.ai.formrecognizer.training.models.CustomFormModel" data-throw-if-not-resolved="false">custom form model</xref>.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel(java.lang.String)
  id: deleteModel(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: deleteModel(String modelId)
  nameWithType: FormTrainingAsyncClient.deleteModel(String modelId)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel(String modelId)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Deletes the specified custom model.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     formTrainingAsyncClient.deleteModel(modelId)
         .subscribe(ignored -> System.out.printf("Model Id: %s is deleted%n", modelId));
    ```
  syntax:
    content: public Mono<Void> deleteModel(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: An empty Mono.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse(java.lang.String)
  id: deleteModelWithResponse(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: deleteModelWithResponse(String modelId)
  nameWithType: FormTrainingAsyncClient.deleteModelWithResponse(String modelId)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse(String modelId)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Deletes the specified custom model.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     formTrainingAsyncClient.deleteModelWithResponse(modelId)
         .subscribe(response -> {
             System.out.printf("Response Status Code: %d.", response.getStatusCode());
             System.out.printf("Model Id: %s is deleted.%n", modelId);
         });
    ```
  syntax:
    content: public Mono<Response<Void>> deleteModelWithResponse(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> containing the status code and HTTP headers.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties()
  id: getAccountProperties()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: getAccountProperties()
  nameWithType: FormTrainingAsyncClient.getAccountProperties()
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties()
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Get account information of the form recognizer account.


    **Code sample**


    ```java

    formTrainingAsyncClient.getAccountProperties()
         .subscribe(accountProperties -> {
             System.out.printf("Max number of models that can be trained for this account: %d%n",
                 accountProperties.getCustomModelLimit());
             System.out.printf("Current count of trained custom models: %d%n",
                 accountProperties.getCustomModelCount());
         });
    ```
  syntax:
    content: public Mono<AccountProperties> getAccountProperties()
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.training.models.AccountProperties>
      description: The requested account information details.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  id: getAccountPropertiesWithResponse()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: getAccountPropertiesWithResponse()
  nameWithType: FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse()
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Get account information of the form recognizer account with an Http response.


    **Code sample**


    ```java

    formTrainingAsyncClient.getAccountPropertiesWithResponse()
         .subscribe(response -> {
             System.out.printf("Response Status Code: %d.", response.getStatusCode());
             AccountProperties accountProperties = response.getValue();
             System.out.printf("Max number of models that can be trained for this account: %d%n",
                 accountProperties.getCustomModelLimit());
             System.out.printf("Current count of trained custom models: %d%n",
                 accountProperties.getCustomModelCount());
         });
    ```
  syntax:
    content: public Mono<Response<AccountProperties>> getAccountPropertiesWithResponse()
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.training.models.AccountProperties>>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> containing the requested account information details.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(java.lang.String,java.lang.String)
  id: getCopyAuthorization(java.lang.String,java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: getCopyAuthorization(String resourceId, String resourceRegion)
  nameWithType: FormTrainingAsyncClient.getCopyAuthorization(String resourceId, String resourceRegion)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization(String resourceId, String resourceRegion)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: Generate authorization for copying a custom model into the target Form Recognizer resource.
  syntax:
    content: public Mono<CopyAuthorization> getCopyAuthorization(String resourceId, String resourceRegion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: Azure Resource Id of the target Form Recognizer resource where the model will be copied to.
    - id: resourceRegion
      type: java.lang.String
      description: >-
        Location of the target Form Recognizer resource. A valid Azure region name supported
         by Cognitive Services.

         <p><strong>Code sample</strong></p>
         <pre>
         String resourceId = &quot;target-resource-Id&quot;;
         String resourceRegion = &quot;target-resource-region&quot;;
         formTrainingAsyncClient.getCopyAuthorization&#40;resourceId, resourceRegion&#41;
             .subscribe&#40;copyAuthorization -&gt;
                 System.out.printf&#40;&quot;Copy Authorization for model id: %s, access token: %s, expiration time: %s, &quot;
                         + &quot;target resource Id; %s, target resource region: %s%n&quot;,
                     copyAuthorization.getModelId&#40;&#41;,
                     copyAuthorization.getAccessToken&#40;&#41;,
                     copyAuthorization.getExpiresOn&#40;&#41;,
                     copyAuthorization.getResourceId&#40;&#41;,
                     copyAuthorization.getResourceRegion&#40;&#41;
                 &#41;&#41;;
         </pre>
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.training.models.CopyAuthorization>
      description: The <xref uid="com.azure.ai.formrecognizer.training.models.CopyAuthorization" data-throw-if-not-resolved="false">CopyAuthorization</xref> that could be used to authorize copying model between resources.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse(java.lang.String,java.lang.String)
  id: getCopyAuthorizationWithResponse(java.lang.String,java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)
  nameWithType: FormTrainingAsyncClient.getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: Generate authorization for copying a custom model into the target Form Recognizer resource. This should be called by the target resource (where the model will be copied to) and the output can be passed as the target parameter into <xref uid="com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel(java.lang.String,com.azure.ai.formrecognizer.training.models.CopyAuthorization)" data-throw-if-not-resolved="false">FormTrainingAsyncClient#beginCopyModel(String, CopyAuthorization)</xref>.
  syntax:
    content: public Mono<Response<CopyAuthorization>> getCopyAuthorizationWithResponse(String resourceId, String resourceRegion)
    parameters:
    - id: resourceId
      type: java.lang.String
      description: Azure Resource Id of the target Form Recognizer resource where the model will be copied to.
    - id: resourceRegion
      type: java.lang.String
      description: >-
        Location of the target Form Recognizer resource. A valid Azure region name supported by
         Cognitive Services.

         <p><strong>Code sample</strong></p>
         <pre>
         String resourceId = &quot;target-resource-Id&quot;;
         String resourceRegion = &quot;target-resource-region&quot;;
         formTrainingAsyncClient.getCopyAuthorizationWithResponse&#40;resourceId, resourceRegion&#41;
             .subscribe&#40;copyAuthorization -&gt;
                 System.out.printf&#40;&quot;Copy Authorization response status: %s, for model id: %s, access token: %s, &quot;
                         + &quot;expiration time: %s, target resource Id; %s, target resource region: %s%n&quot;,
                 copyAuthorization.getStatusCode&#40;&#41;,
                 copyAuthorization.getValue&#40;&#41;.getModelId&#40;&#41;,
                 copyAuthorization.getValue&#40;&#41;.getAccessToken&#40;&#41;,
                 copyAuthorization.getValue&#40;&#41;.getExpiresOn&#40;&#41;,
                 copyAuthorization.getValue&#40;&#41;.getResourceId&#40;&#41;,
                 copyAuthorization.getValue&#40;&#41;.getResourceRegion&#40;&#41;
             &#41;&#41;;
         </pre>
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.training.models.CopyAuthorization>>
      description: >-
        A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> containing the <xref uid="com.azure.ai.formrecognizer.training.models.CopyAuthorization" data-throw-if-not-resolved="false">CopyAuthorization</xref> that could be used to authorize copying
         model between resources.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModel(java.lang.String)
  id: getCustomModel(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: getCustomModel(String modelId)
  nameWithType: FormTrainingAsyncClient.getCustomModel(String modelId)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModel(String modelId)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModel*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: "Get detailed information for a specified custom model id.\n\n**Code sample**\n\n```java\nString modelId = \"{model_id}\";\n formTrainingAsyncClient.getCustomModel(modelId).subscribe(customFormModel -> {\n     System.out.printf(\"Model Id: %s%n\", customFormModel.getModelId());\n     System.out.printf(\"Model Status: %s%n\", customFormModel.getModelStatus());\n     customFormModel.getSubmodels()\n         .forEach(customFormSubmodel -> customFormSubmodel.getFields()\n             .forEach((key, customFormModelField) ->\n                 System.out.printf(\"Form Type: %s Field Text: %s Field Accuracy: %f%n\",\n                     key, customFormModelField.getName(), customFormModelField.getAccuracy())));\n \n });\n```"
  syntax:
    content: public Mono<CustomFormModel> getCustomModel(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.training.models.CustomFormModel>
      description: The detailed information for the specified model.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse(java.lang.String)
  id: getCustomModelWithResponse(java.lang.String)
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: getCustomModelWithResponse(String modelId)
  nameWithType: FormTrainingAsyncClient.getCustomModelWithResponse(String modelId)
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse(String modelId)
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    Get detailed information for a specified custom model id with Http response.


    **Code sample**


    ```java

    String modelId = "{model_id}";
     formTrainingAsyncClient.getCustomModelWithResponse(modelId).subscribe(response -> {
         System.out.printf("Response Status Code: %d.", response.getStatusCode());
         CustomFormModel customFormModel = response.getValue();
         System.out.printf("Model Id: %s%n", customFormModel.getModelId());
         System.out.printf("Model Status: %s%n", customFormModel.getModelStatus());
         customFormModel.getSubmodels()
             .forEach(customFormSubmodel -> customFormSubmodel.getFields()
                 .forEach((key, customFormModelField) ->
                     System.out.printf("Form Type: %s Field Text: %s Field Accuracy: %f%n",
                         key, customFormModelField.getName(), customFormModelField.getAccuracy())));
     });
    ```
  syntax:
    content: public Mono<Response<CustomFormModel>> getCustomModelWithResponse(String modelId)
    parameters:
    - id: modelId
      type: java.lang.String
      description: The UUID string format model identifier.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.training.models.CustomFormModel>>
      description: A <xref uid="com.azure.core.http.rest.Response" data-throw-if-not-resolved="false">Response</xref> containing the requested <xref uid="com.azure.ai.formrecognizer.training.models.CustomFormModel" data-throw-if-not-resolved="false">model</xref>.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getFormRecognizerAsyncClient()
  id: getFormRecognizerAsyncClient()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: getFormRecognizerAsyncClient()
  nameWithType: FormTrainingAsyncClient.getFormRecognizerAsyncClient()
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getFormRecognizerAsyncClient()
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getFormRecognizerAsyncClient*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: Creates a new <xref uid="com.azure.ai.formrecognizer.FormRecognizerAsyncClient" data-throw-if-not-resolved="false">FormRecognizerAsyncClient</xref> object. The new `FormTrainingAsyncClient` uses the same request policy pipeline as the `FormTrainingAsyncClient`.
  syntax:
    content: public FormRecognizerAsyncClient getFormRecognizerAsyncClient()
    return:
      type: com.azure.ai.formrecognizer.FormRecognizerAsyncClient
      description: A new <xref uid="com.azure.ai.formrecognizer.FormRecognizerAsyncClient" data-throw-if-not-resolved="false">FormRecognizerAsyncClient</xref> object.
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.listCustomModels()
  id: listCustomModels()
  artifact: com.azure:azure-ai-formrecognizer:3.0.0
  parent: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient
  langs:
  - java
  name: listCustomModels()
  nameWithType: FormTrainingAsyncClient.listCustomModels()
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.listCustomModels()
  overload: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.listCustomModels*
  type: Method
  package: com.azure.ai.formrecognizer.training
  summary: >-
    List information for each model on the form recognizer account.


    **Code sample**


    ```java

    formTrainingAsyncClient.listCustomModels()
         .subscribe(customModel ->
             System.out.printf("Model Id: %s, Model status: %s, Created on: %s, Last updated on: %s.%n",
                 customModel.getModelId(),
                 customModel.getStatus(),
                 customModel.getTrainingStartedOn(),
                 customModel.getTrainingCompletedOn()));
    ```
  syntax:
    content: public PagedFlux<CustomFormModelInfo> listCustomModels()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.training.models.CustomFormModelInfo>
      description: <xref uid="com.azure.core.http.rest.PagedFlux" data-throw-if-not-resolved="false">PagedFlux</xref> of <xref uid="com.azure.ai.formrecognizer.training.models.CustomFormModelInfo" data-throw-if-not-resolved="false">CustomFormModelInfo</xref>.
references:
- uid: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
  name: FormRecognizerClientImpl
  nameWithType: FormRecognizerClientImpl
  fullName: com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl
- uid: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
  name: FormRecognizerServiceVersion
  nameWithType: FormRecognizerServiceVersion
  fullName: com.azure.ai.formrecognizer.FormRecognizerServiceVersion
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.FormTrainingAsyncClient*
  name: FormTrainingAsyncClient
  nameWithType: FormTrainingAsyncClient.FormTrainingAsyncClient
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.FormTrainingAsyncClient
  package: com.azure.ai.formrecognizer.training
- uid: com.azure.ai.formrecognizer.FormRecognizerAsyncClient
  name: FormRecognizerAsyncClient
  nameWithType: FormRecognizerAsyncClient
  fullName: com.azure.ai.formrecognizer.FormRecognizerAsyncClient
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getFormRecognizerAsyncClient*
  name: getFormRecognizerAsyncClient
  nameWithType: FormTrainingAsyncClient.getFormRecognizerAsyncClient
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getFormRecognizerAsyncClient
  package: com.azure.ai.formrecognizer.training
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModel>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult
    name: FormRecognizerOperationResult
    fullName: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult
  - name: ','
    fullName: ','
  - uid: com.azure.ai.formrecognizer.training.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.training.models.CustomFormModel
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining*
  name: beginTraining
  nameWithType: FormTrainingAsyncClient.beginTraining
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginTraining
  package: com.azure.ai.formrecognizer.training
- uid: com.azure.ai.formrecognizer.training.models.TrainingOptions
  name: TrainingOptions
  nameWithType: TrainingOptions
  fullName: com.azure.ai.formrecognizer.training.models.TrainingOptions
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.training.models.CustomFormModel>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.training.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.training.models.CustomFormModel
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModel*
  name: getCustomModel
  nameWithType: FormTrainingAsyncClient.getCustomModel
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModel
  package: com.azure.ai.formrecognizer.training
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.training.models.CustomFormModel>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.training.models.CustomFormModel
    name: CustomFormModel
    fullName: com.azure.ai.formrecognizer.training.models.CustomFormModel
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse*
  name: getCustomModelWithResponse
  nameWithType: FormTrainingAsyncClient.getCustomModelWithResponse
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCustomModelWithResponse
  package: com.azure.ai.formrecognizer.training
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.training.models.AccountProperties>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.training.models.AccountProperties
    name: AccountProperties
    fullName: com.azure.ai.formrecognizer.training.models.AccountProperties
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties*
  name: getAccountProperties
  nameWithType: FormTrainingAsyncClient.getAccountProperties
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountProperties
  package: com.azure.ai.formrecognizer.training
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.training.models.AccountProperties>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.training.models.AccountProperties
    name: AccountProperties
    fullName: com.azure.ai.formrecognizer.training.models.AccountProperties
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse*
  name: getAccountPropertiesWithResponse
  nameWithType: FormTrainingAsyncClient.getAccountPropertiesWithResponse
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getAccountPropertiesWithResponse
  package: com.azure.ai.formrecognizer.training
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel*
  name: deleteModel
  nameWithType: FormTrainingAsyncClient.deleteModel
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModel
  package: com.azure.ai.formrecognizer.training
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse*
  name: deleteModelWithResponse
  nameWithType: FormTrainingAsyncClient.deleteModelWithResponse
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.deleteModelWithResponse
  package: com.azure.ai.formrecognizer.training
- uid: com.azure.core.http.rest.PagedFlux<com.azure.ai.formrecognizer.training.models.CustomFormModelInfo>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
    name: CustomFormModelInfo
    fullName: com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.listCustomModels*
  name: listCustomModels
  nameWithType: FormTrainingAsyncClient.listCustomModels
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.listCustomModels
  package: com.azure.ai.formrecognizer.training
- uid: com.azure.ai.formrecognizer.training.models.CopyAuthorization
  name: CopyAuthorization
  nameWithType: CopyAuthorization
  fullName: com.azure.ai.formrecognizer.training.models.CopyAuthorization
- uid: com.azure.core.util.polling.PollerFlux<com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModelInfo>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult
    name: FormRecognizerOperationResult
    fullName: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult
  - name: ','
    fullName: ','
  - uid: com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
    name: CustomFormModelInfo
    fullName: com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel*
  name: beginCopyModel
  nameWithType: FormTrainingAsyncClient.beginCopyModel
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.beginCopyModel
  package: com.azure.ai.formrecognizer.training
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: reactor.core.publisher.Mono<com.azure.ai.formrecognizer.training.models.CopyAuthorization>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.training.models.CopyAuthorization
    name: CopyAuthorization
    fullName: com.azure.ai.formrecognizer.training.models.CopyAuthorization
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization*
  name: getCopyAuthorization
  nameWithType: FormTrainingAsyncClient.getCopyAuthorization
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorization
  package: com.azure.ai.formrecognizer.training
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.ai.formrecognizer.training.models.CopyAuthorization>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.ai.formrecognizer.training.models.CopyAuthorization
    name: CopyAuthorization
    fullName: com.azure.ai.formrecognizer.training.models.CopyAuthorization
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse*
  name: getCopyAuthorizationWithResponse
  nameWithType: FormTrainingAsyncClient.getCopyAuthorizationWithResponse
  fullName: com.azure.ai.formrecognizer.training.FormTrainingAsyncClient.getCopyAuthorizationWithResponse
  package: com.azure.ai.formrecognizer.training
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModel
  name: FormRecognizerOperationResult,CustomFormModel
  nameWithType: FormRecognizerOperationResult,CustomFormModel
  fullName: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModel
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.ai.formrecognizer.training.models.CustomFormModel
  name: CustomFormModel
  nameWithType: CustomFormModel
  fullName: com.azure.ai.formrecognizer.training.models.CustomFormModel
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: com.azure.ai.formrecognizer.training.models.AccountProperties
  name: AccountProperties
  nameWithType: AccountProperties
  fullName: com.azure.ai.formrecognizer.training.models.AccountProperties
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
  name: CustomFormModelInfo
  nameWithType: CustomFormModelInfo
  fullName: com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
- uid: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
  name: FormRecognizerOperationResult,CustomFormModelInfo
  nameWithType: FormRecognizerOperationResult,CustomFormModelInfo
  fullName: com.azure.ai.formrecognizer.models.FormRecognizerOperationResult,com.azure.ai.formrecognizer.training.models.CustomFormModelInfo
