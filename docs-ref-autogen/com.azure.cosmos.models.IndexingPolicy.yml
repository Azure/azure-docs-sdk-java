### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.models.IndexingPolicy
  id: IndexingPolicy
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models
  children:
  - com.azure.cosmos.models.IndexingPolicy.IndexingPolicy()
  - com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes()
  - com.azure.cosmos.models.IndexingPolicy.getExcludedPaths()
  - com.azure.cosmos.models.IndexingPolicy.getIncludedPaths()
  - com.azure.cosmos.models.IndexingPolicy.getIndexingMode()
  - com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes()
  - com.azure.cosmos.models.IndexingPolicy.isAutomatic()
  - com.azure.cosmos.models.IndexingPolicy.setAutomatic(boolean)
  - com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes(java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>)
  - com.azure.cosmos.models.IndexingPolicy.setExcludedPaths(java.util.List<com.azure.cosmos.models.ExcludedPath>)
  - com.azure.cosmos.models.IndexingPolicy.setIncludedPaths(java.util.List<com.azure.cosmos.models.IncludedPath>)
  - com.azure.cosmos.models.IndexingPolicy.setIndexingMode(com.azure.cosmos.models.IndexingMode)
  - com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes(java.util.List<com.azure.cosmos.models.SpatialSpec>)
  langs:
  - java
  name: IndexingPolicy
  nameWithType: IndexingPolicy
  fullName: com.azure.cosmos.models.IndexingPolicy
  type: Class
  package: com.azure.cosmos.models
  summary: Represents the indexing policy configuration for a container in the Azure Cosmos DB database service.
  syntax:
    content: public final class IndexingPolicy
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy()
  id: IndexingPolicy()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: IndexingPolicy()
  nameWithType: IndexingPolicy.IndexingPolicy()
  fullName: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy()
  overload: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Constructor.
  syntax:
    content: public IndexingPolicy()
- uid: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(com.azure.cosmos.implementation.Index[])
  id: IndexingPolicy(com.azure.cosmos.implementation.Index[])
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: IndexingPolicy(Index[] defaultIndexOverrides)
  nameWithType: IndexingPolicy.IndexingPolicy(Index[] defaultIndexOverrides)
  fullName: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(Index[] defaultIndexOverrides)
  overload: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*
  type: Constructor
  package: com.azure.cosmos.models
  summary: >-
    Initializes a new instance of the IndexingPolicy class with the specified set of indexes as default index specifications for the root path.


    The following example shows how to override the default indexingPolicy for root path:


    ```java

    HashIndex hashIndexOverride = Index.HASH(DataType.STRING, 5);
     RangeIndex rangeIndexOverride = Index.RANGE(DataType.NUMBER, 2);
     SpatialIndex spatialIndexOverride = Index.SPATIAL(DataType.POINT);

     IndexingPolicy indexingPolicy = new IndexingPolicy(hashIndexOverride, rangeIndexOverride, spatialIndexOverride);
    ```
  syntax:
    content: " IndexingPolicy(Index[] defaultIndexOverrides)"
    parameters:
    - id: defaultIndexOverrides
      type: com.azure.cosmos.implementation.Index[]
      description: >-
        comma separated set of indexes that serve as default index specifications for the
         root path.
- uid: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(com.fasterxml.jackson.databind.node.ObjectNode)
  id: IndexingPolicy(com.fasterxml.jackson.databind.node.ObjectNode)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: IndexingPolicy(ObjectNode objectNode)
  nameWithType: IndexingPolicy.IndexingPolicy(ObjectNode objectNode)
  fullName: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(ObjectNode objectNode)
  overload: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Constructor.
  syntax:
    content: " IndexingPolicy(ObjectNode objectNode)"
    parameters:
    - id: objectNode
      type: com.fasterxml.jackson.databind.node.ObjectNode
      description: the object node that represents the indexing policy.
- uid: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(java.lang.String)
  id: IndexingPolicy(java.lang.String)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: IndexingPolicy(String jsonString)
  nameWithType: IndexingPolicy.IndexingPolicy(String jsonString)
  fullName: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy(String jsonString)
  overload: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*
  type: Constructor
  package: com.azure.cosmos.models
  summary: Constructor.
  syntax:
    content: " IndexingPolicy(String jsonString)"
    parameters:
    - id: jsonString
      type: java.lang.String
      description: the json string that represents the indexing policy.
- uid: com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes()
  id: getCompositeIndexes()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: getCompositeIndexes()
  nameWithType: IndexingPolicy.getCompositeIndexes()
  fullName: com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes()
  overload: com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the composite indexes for additional indexes.
  syntax:
    content: public List<List<CompositePath>> getCompositeIndexes()
    return:
      type: java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>
      description: the composite indexes.
- uid: com.azure.cosmos.models.IndexingPolicy.getExcludedPaths()
  id: getExcludedPaths()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: getExcludedPaths()
  nameWithType: IndexingPolicy.getExcludedPaths()
  fullName: com.azure.cosmos.models.IndexingPolicy.getExcludedPaths()
  overload: com.azure.cosmos.models.IndexingPolicy.getExcludedPaths*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the paths that are not indexed.
  syntax:
    content: public List<ExcludedPath> getExcludedPaths()
    return:
      type: java.util.List<com.azure.cosmos.models.ExcludedPath>
      description: the excluded paths.
- uid: com.azure.cosmos.models.IndexingPolicy.getIncludedPaths()
  id: getIncludedPaths()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: getIncludedPaths()
  nameWithType: IndexingPolicy.getIncludedPaths()
  fullName: com.azure.cosmos.models.IndexingPolicy.getIncludedPaths()
  overload: com.azure.cosmos.models.IndexingPolicy.getIncludedPaths*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the paths that are chosen to be indexed by the user.
  syntax:
    content: public List<IncludedPath> getIncludedPaths()
    return:
      type: java.util.List<com.azure.cosmos.models.IncludedPath>
      description: the included paths.
- uid: com.azure.cosmos.models.IndexingPolicy.getIndexingMode()
  id: getIndexingMode()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: getIndexingMode()
  nameWithType: IndexingPolicy.getIndexingMode()
  fullName: com.azure.cosmos.models.IndexingPolicy.getIndexingMode()
  overload: com.azure.cosmos.models.IndexingPolicy.getIndexingMode*
  type: Method
  package: com.azure.cosmos.models
  summary: Gets the indexing mode (consistent or lazy).
  syntax:
    content: public IndexingMode getIndexingMode()
    return:
      type: com.azure.cosmos.models.IndexingMode
      description: the indexing mode.
- uid: com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes()
  id: getSpatialIndexes()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: getSpatialIndexes()
  nameWithType: IndexingPolicy.getSpatialIndexes()
  fullName: com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes()
  overload: com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the spatial indexes for additional indexes.
  syntax:
    content: public List<SpatialSpec> getSpatialIndexes()
    return:
      type: java.util.List<com.azure.cosmos.models.SpatialSpec>
      description: the spatial indexes.
- uid: com.azure.cosmos.models.IndexingPolicy.isAutomatic()
  id: isAutomatic()
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: isAutomatic()
  nameWithType: IndexingPolicy.isAutomatic()
  fullName: com.azure.cosmos.models.IndexingPolicy.isAutomatic()
  overload: com.azure.cosmos.models.IndexingPolicy.isAutomatic*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Gets whether automatic indexing is enabled for a container.


    In automatic indexing, items can be explicitly excluded from indexing using RequestOptions. In manual indexing, items can be explicitly included.
  syntax:
    content: public Boolean isAutomatic()
    return:
      type: java.lang.Boolean
      description: the automatic
- uid: com.azure.cosmos.models.IndexingPolicy.setAutomatic(boolean)
  id: setAutomatic(boolean)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: setAutomatic(boolean automatic)
  nameWithType: IndexingPolicy.setAutomatic(boolean automatic)
  fullName: com.azure.cosmos.models.IndexingPolicy.setAutomatic(boolean automatic)
  overload: com.azure.cosmos.models.IndexingPolicy.setAutomatic*
  type: Method
  package: com.azure.cosmos.models
  summary: >-
    Sets whether automatic indexing is enabled for a container.


    In automatic indexing, items can be explicitly excluded from indexing using RequestOptions. In manual indexing, items can be explicitly included.
  syntax:
    content: public IndexingPolicy setAutomatic(boolean automatic)
    parameters:
    - id: automatic
      type: boolean
      description: the automatic
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: the Indexing Policy.
- uid: com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes(java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>)
  id: setCompositeIndexes(java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: setCompositeIndexes(List<List<CompositePath>> compositeIndexes)
  nameWithType: IndexingPolicy.setCompositeIndexes(List<List<CompositePath>> compositeIndexes)
  fullName: com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes(List<List<CompositePath>> compositeIndexes)
  overload: com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the composite indexes for additional indexes.
  syntax:
    content: public IndexingPolicy setCompositeIndexes(List<List<CompositePath>> compositeIndexes)
    parameters:
    - id: compositeIndexes
      type: java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>
      description: the composite indexes.
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: the Indexing Policy.
- uid: com.azure.cosmos.models.IndexingPolicy.setExcludedPaths(java.util.List<com.azure.cosmos.models.ExcludedPath>)
  id: setExcludedPaths(java.util.List<com.azure.cosmos.models.ExcludedPath>)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: setExcludedPaths(List<ExcludedPath> excludedPaths)
  nameWithType: IndexingPolicy.setExcludedPaths(List<ExcludedPath> excludedPaths)
  fullName: com.azure.cosmos.models.IndexingPolicy.setExcludedPaths(List<ExcludedPath> excludedPaths)
  overload: com.azure.cosmos.models.IndexingPolicy.setExcludedPaths*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets excluded paths.
  syntax:
    content: public IndexingPolicy setExcludedPaths(List<ExcludedPath> excludedPaths)
    parameters:
    - id: excludedPaths
      type: java.util.List<com.azure.cosmos.models.ExcludedPath>
      description: the excluded paths
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: the excluded paths
- uid: com.azure.cosmos.models.IndexingPolicy.setIncludedPaths(java.util.List<com.azure.cosmos.models.IncludedPath>)
  id: setIncludedPaths(java.util.List<com.azure.cosmos.models.IncludedPath>)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: setIncludedPaths(List<IncludedPath> includedPaths)
  nameWithType: IndexingPolicy.setIncludedPaths(List<IncludedPath> includedPaths)
  fullName: com.azure.cosmos.models.IndexingPolicy.setIncludedPaths(List<IncludedPath> includedPaths)
  overload: com.azure.cosmos.models.IndexingPolicy.setIncludedPaths*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets included paths.
  syntax:
    content: public IndexingPolicy setIncludedPaths(List<IncludedPath> includedPaths)
    parameters:
    - id: includedPaths
      type: java.util.List<com.azure.cosmos.models.IncludedPath>
      description: the included paths
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: the included paths
- uid: com.azure.cosmos.models.IndexingPolicy.setIndexingMode(com.azure.cosmos.models.IndexingMode)
  id: setIndexingMode(com.azure.cosmos.models.IndexingMode)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: setIndexingMode(IndexingMode indexingMode)
  nameWithType: IndexingPolicy.setIndexingMode(IndexingMode indexingMode)
  fullName: com.azure.cosmos.models.IndexingPolicy.setIndexingMode(IndexingMode indexingMode)
  overload: com.azure.cosmos.models.IndexingPolicy.setIndexingMode*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the indexing mode (consistent or lazy).
  syntax:
    content: public IndexingPolicy setIndexingMode(IndexingMode indexingMode)
    parameters:
    - id: indexingMode
      type: com.azure.cosmos.models.IndexingMode
      description: the indexing mode.
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: the Indexing Policy.
- uid: com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes(java.util.List<com.azure.cosmos.models.SpatialSpec>)
  id: setSpatialIndexes(java.util.List<com.azure.cosmos.models.SpatialSpec>)
  artifact: com.azure:azure-cosmos:4.3.1
  parent: com.azure.cosmos.models.IndexingPolicy
  langs:
  - java
  name: setSpatialIndexes(List<SpatialSpec> spatialIndexes)
  nameWithType: IndexingPolicy.setSpatialIndexes(List<SpatialSpec> spatialIndexes)
  fullName: com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes(List<SpatialSpec> spatialIndexes)
  overload: com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes*
  type: Method
  package: com.azure.cosmos.models
  summary: Sets the spatial indexes for additional indexes.
  syntax:
    content: public IndexingPolicy setSpatialIndexes(List<SpatialSpec> spatialIndexes)
    parameters:
    - id: spatialIndexes
      type: java.util.List<com.azure.cosmos.models.SpatialSpec>
      description: the spatial indexes.
    return:
      type: com.azure.cosmos.models.IndexingPolicy
      description: the Indexing Policy.
references:
- uid: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy*
  name: IndexingPolicy
  nameWithType: IndexingPolicy.IndexingPolicy
  fullName: com.azure.cosmos.models.IndexingPolicy.IndexingPolicy
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.implementation.Index[]
  spec.java:
  - uid: com.azure.cosmos.implementation.Index
    name: Index
    fullName: com.azure.cosmos.implementation.Index
  - name: '[]'
    fullName: '[]'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.fasterxml.jackson.databind.node.ObjectNode
  spec.java:
  - uid: com.fasterxml.jackson.databind.node.ObjectNode
    name: ObjectNode
    fullName: com.fasterxml.jackson.databind.node.ObjectNode
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.cosmos.models.IndexingPolicy.isAutomatic*
  name: isAutomatic
  nameWithType: IndexingPolicy.isAutomatic
  fullName: com.azure.cosmos.models.IndexingPolicy.isAutomatic
  package: com.azure.cosmos.models
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.azure.cosmos.models.IndexingPolicy.setAutomatic*
  name: setAutomatic
  nameWithType: IndexingPolicy.setAutomatic
  fullName: com.azure.cosmos.models.IndexingPolicy.setAutomatic
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.IndexingMode
  name: IndexingMode
  nameWithType: IndexingMode
  fullName: com.azure.cosmos.models.IndexingMode
- uid: com.azure.cosmos.models.IndexingPolicy.getIndexingMode*
  name: getIndexingMode
  nameWithType: IndexingPolicy.getIndexingMode
  fullName: com.azure.cosmos.models.IndexingPolicy.getIndexingMode
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.IndexingPolicy.setIndexingMode*
  name: setIndexingMode
  nameWithType: IndexingPolicy.setIndexingMode
  fullName: com.azure.cosmos.models.IndexingPolicy.setIndexingMode
  package: com.azure.cosmos.models
- uid: java.util.List<com.azure.cosmos.models.IncludedPath>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.IncludedPath
    name: IncludedPath
    fullName: com.azure.cosmos.models.IncludedPath
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.models.IndexingPolicy.getIncludedPaths*
  name: getIncludedPaths
  nameWithType: IndexingPolicy.getIncludedPaths
  fullName: com.azure.cosmos.models.IndexingPolicy.getIncludedPaths
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.IndexingPolicy.setIncludedPaths*
  name: setIncludedPaths
  nameWithType: IndexingPolicy.setIncludedPaths
  fullName: com.azure.cosmos.models.IndexingPolicy.setIncludedPaths
  package: com.azure.cosmos.models
- uid: java.util.List<com.azure.cosmos.models.ExcludedPath>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.ExcludedPath
    name: ExcludedPath
    fullName: com.azure.cosmos.models.ExcludedPath
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.models.IndexingPolicy.getExcludedPaths*
  name: getExcludedPaths
  nameWithType: IndexingPolicy.getExcludedPaths
  fullName: com.azure.cosmos.models.IndexingPolicy.getExcludedPaths
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.IndexingPolicy.setExcludedPaths*
  name: setExcludedPaths
  nameWithType: IndexingPolicy.setExcludedPaths
  fullName: com.azure.cosmos.models.IndexingPolicy.setExcludedPaths
  package: com.azure.cosmos.models
- uid: java.util.List<java.util.List<com.azure.cosmos.models.CompositePath>>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.CompositePath
    name: CompositePath
    fullName: com.azure.cosmos.models.CompositePath
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes*
  name: getCompositeIndexes
  nameWithType: IndexingPolicy.getCompositeIndexes
  fullName: com.azure.cosmos.models.IndexingPolicy.getCompositeIndexes
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes*
  name: setCompositeIndexes
  nameWithType: IndexingPolicy.setCompositeIndexes
  fullName: com.azure.cosmos.models.IndexingPolicy.setCompositeIndexes
  package: com.azure.cosmos.models
- uid: java.util.List<com.azure.cosmos.models.SpatialSpec>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.SpatialSpec
    name: SpatialSpec
    fullName: com.azure.cosmos.models.SpatialSpec
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes*
  name: getSpatialIndexes
  nameWithType: IndexingPolicy.getSpatialIndexes
  fullName: com.azure.cosmos.models.IndexingPolicy.getSpatialIndexes
  package: com.azure.cosmos.models
- uid: com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes*
  name: setSpatialIndexes
  nameWithType: IndexingPolicy.setSpatialIndexes
  fullName: com.azure.cosmos.models.IndexingPolicy.setSpatialIndexes
  package: com.azure.cosmos.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.cosmos.models.IncludedPath
  name: IncludedPath
  nameWithType: IncludedPath
  fullName: com.azure.cosmos.models.IncludedPath
- uid: com.azure.cosmos.models.ExcludedPath
  name: ExcludedPath
  nameWithType: ExcludedPath
  fullName: com.azure.cosmos.models.ExcludedPath
- uid: com.azure.cosmos.models.CompositePath
  name: CompositePath
  nameWithType: CompositePath
  fullName: com.azure.cosmos.models.CompositePath
- uid: com.azure.cosmos.models.SpatialSpec
  name: SpatialSpec
  nameWithType: SpatialSpec
  fullName: com.azure.cosmos.models.SpatialSpec
