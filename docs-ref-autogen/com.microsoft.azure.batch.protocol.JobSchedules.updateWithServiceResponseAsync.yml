### YamlMime:JavaMember
nameWithType: JobSchedules.updateWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  name: updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  nameWithType: JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  parameters:
  - description: <p>The ID of the job schedule to update. </p>
    name: jobScheduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: jobScheduleUpdateParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter&text=JobScheduleUpdateParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders&text=JobScheduleUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates the properties of the specified job schedule. This fully replaces all the updatable properties of the job schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, JobScheduleUpdateHeaders>> updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(String,JobScheduleUpdateParameter)
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  name: updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  nameWithType: JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  parameters:
  - description: <p>The ID of the job schedule to update. </p>
    name: jobScheduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: jobScheduleUpdateParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobScheduleUpdateParameter&text=JobScheduleUpdateParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobScheduleUpdateOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.JobScheduleUpdateOptions&text=JobScheduleUpdateOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobScheduleUpdateHeaders&text=JobScheduleUpdateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates the properties of the specified job schedule. This fully replaces all the updatable properties of the job schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, JobScheduleUpdateHeaders>> updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter, JobScheduleUpdateOptions jobScheduleUpdateOptions)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(String,JobScheduleUpdateParameter,JobScheduleUpdateOptions)
uid: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.JobSchedules.updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
name: updateWithServiceResponseAsync(String jobScheduleId, JobScheduleUpdateParameter jobScheduleUpdateParameter)
package: com.microsoft.azure.batch.protocol
metadata: {}
