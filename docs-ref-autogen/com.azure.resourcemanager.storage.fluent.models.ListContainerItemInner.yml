### YamlMime:JavaType
uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner"
fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner"
name: "ListContainerItemInner"
nameWithType: "ListContainerItemInner"
summary: "The blob container properties be listed out."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.storage.models.AzureEntityResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.resourcemanager.storage.models.AzureEntityResource.etag()"
- "com.azure.resourcemanager.storage.models.AzureEntityResource.validate()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ListContainerItemInner extends AzureEntityResource"
constructors:
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.ListContainerItemInner()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.ListContainerItemInner()"
  name: "ListContainerItemInner()"
  nameWithType: "ListContainerItemInner.ListContainerItemInner()"
  syntax: "public ListContainerItemInner()"
methods:
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.defaultEncryptionScope()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.defaultEncryptionScope()"
  name: "defaultEncryptionScope()"
  nameWithType: "ListContainerItemInner.defaultEncryptionScope()"
  summary: "Get the defaultEncryptionScope property: Default the container to use specified encryption scope for all writes."
  syntax: "public String defaultEncryptionScope()"
  returns:
    description: "the defaultEncryptionScope value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.deleted()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.deleted()"
  name: "deleted()"
  nameWithType: "ListContainerItemInner.deleted()"
  summary: "Get the deleted property: Indicates whether the blob container was deleted."
  syntax: "public Boolean deleted()"
  returns:
    description: "the deleted value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.deletedTime()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.deletedTime()"
  name: "deletedTime()"
  nameWithType: "ListContainerItemInner.deletedTime()"
  summary: "Get the deletedTime property: Blob container deletion time."
  syntax: "public OffsetDateTime deletedTime()"
  returns:
    description: "the deletedTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.denyEncryptionScopeOverride()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.denyEncryptionScopeOverride()"
  name: "denyEncryptionScopeOverride()"
  nameWithType: "ListContainerItemInner.denyEncryptionScopeOverride()"
  summary: "Get the denyEncryptionScopeOverride property: Block override of encryption scope from the container default."
  syntax: "public Boolean denyEncryptionScopeOverride()"
  returns:
    description: "the denyEncryptionScopeOverride value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.enableNfsV3AllSquash()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.enableNfsV3AllSquash()"
  name: "enableNfsV3AllSquash()"
  nameWithType: "ListContainerItemInner.enableNfsV3AllSquash()"
  summary: "Get the enableNfsV3AllSquash property: Enable NFSv3 all squash on blob container."
  syntax: "public Boolean enableNfsV3AllSquash()"
  returns:
    description: "the enableNfsV3AllSquash value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.enableNfsV3RootSquash()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.enableNfsV3RootSquash()"
  name: "enableNfsV3RootSquash()"
  nameWithType: "ListContainerItemInner.enableNfsV3RootSquash()"
  summary: "Get the enableNfsV3RootSquash property: Enable NFSv3 root squash on blob container."
  syntax: "public Boolean enableNfsV3RootSquash()"
  returns:
    description: "the enableNfsV3RootSquash value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.hasImmutabilityPolicy()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.hasImmutabilityPolicy()"
  name: "hasImmutabilityPolicy()"
  nameWithType: "ListContainerItemInner.hasImmutabilityPolicy()"
  summary: "Get the hasImmutabilityPolicy property: The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container."
  syntax: "public Boolean hasImmutabilityPolicy()"
  returns:
    description: "the hasImmutabilityPolicy value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.hasLegalHold()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.hasLegalHold()"
  name: "hasLegalHold()"
  nameWithType: "ListContainerItemInner.hasLegalHold()"
  summary: "Get the hasLegalHold property: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account."
  syntax: "public Boolean hasLegalHold()"
  returns:
    description: "the hasLegalHold value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.immutabilityPolicy()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.immutabilityPolicy()"
  name: "immutabilityPolicy()"
  nameWithType: "ListContainerItemInner.immutabilityPolicy()"
  summary: "Get the immutabilityPolicy property: The ImmutabilityPolicy property of the container."
  syntax: "public ImmutabilityPolicyProperties immutabilityPolicy()"
  returns:
    description: "the immutabilityPolicy value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ImmutabilityPolicyProperties?alt=com.azure.resourcemanager.storage.models.ImmutabilityPolicyProperties&text=ImmutabilityPolicyProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.immutableStorageWithVersioning()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.immutableStorageWithVersioning()"
  name: "immutableStorageWithVersioning()"
  nameWithType: "ListContainerItemInner.immutableStorageWithVersioning()"
  summary: "Get the immutableStorageWithVersioning property: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process."
  syntax: "public ImmutableStorageWithVersioning immutableStorageWithVersioning()"
  returns:
    description: "the immutableStorageWithVersioning value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ImmutableStorageWithVersioning?alt=com.azure.resourcemanager.storage.models.ImmutableStorageWithVersioning&text=ImmutableStorageWithVersioning\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.lastModifiedTime()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.lastModifiedTime()"
  name: "lastModifiedTime()"
  nameWithType: "ListContainerItemInner.lastModifiedTime()"
  summary: "Get the lastModifiedTime property: Returns the date and time the container was last modified."
  syntax: "public OffsetDateTime lastModifiedTime()"
  returns:
    description: "the lastModifiedTime value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.leaseDuration()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.leaseDuration()"
  name: "leaseDuration()"
  nameWithType: "ListContainerItemInner.leaseDuration()"
  summary: "Get the leaseDuration property: Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased."
  syntax: "public LeaseDuration leaseDuration()"
  returns:
    description: "the leaseDuration value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.LeaseDuration?alt=com.azure.resourcemanager.storage.models.LeaseDuration&text=LeaseDuration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.leaseState()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.leaseState()"
  name: "leaseState()"
  nameWithType: "ListContainerItemInner.leaseState()"
  summary: "Get the leaseState property: Lease state of the container."
  syntax: "public LeaseState leaseState()"
  returns:
    description: "the leaseState value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.LeaseState?alt=com.azure.resourcemanager.storage.models.LeaseState&text=LeaseState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.leaseStatus()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.leaseStatus()"
  name: "leaseStatus()"
  nameWithType: "ListContainerItemInner.leaseStatus()"
  summary: "Get the leaseStatus property: The lease status of the container."
  syntax: "public LeaseStatus leaseStatus()"
  returns:
    description: "the leaseStatus value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.LeaseStatus?alt=com.azure.resourcemanager.storage.models.LeaseStatus&text=LeaseStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.legalHold()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.legalHold()"
  name: "legalHold()"
  nameWithType: "ListContainerItemInner.legalHold()"
  summary: "Get the legalHold property: The LegalHold property of the container."
  syntax: "public LegalHoldProperties legalHold()"
  returns:
    description: "the legalHold value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.LegalHoldProperties?alt=com.azure.resourcemanager.storage.models.LegalHoldProperties&text=LegalHoldProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.metadata()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.metadata()"
  name: "metadata()"
  nameWithType: "ListContainerItemInner.metadata()"
  summary: "Get the metadata property: A name-value pair to associate with the container as metadata."
  syntax: "public Map<String,String> metadata()"
  returns:
    description: "the metadata value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.publicAccess()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.publicAccess()"
  name: "publicAccess()"
  nameWithType: "ListContainerItemInner.publicAccess()"
  summary: "Get the publicAccess property: Specifies whether data in the container may be accessed publicly and the level of access."
  syntax: "public PublicAccess publicAccess()"
  returns:
    description: "the publicAccess value."
    type: "<xref href=\"com.azure.resourcemanager.storage.models.PublicAccess?alt=com.azure.resourcemanager.storage.models.PublicAccess&text=PublicAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.remainingRetentionDays()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.remainingRetentionDays()"
  name: "remainingRetentionDays()"
  nameWithType: "ListContainerItemInner.remainingRetentionDays()"
  summary: "Get the remainingRetentionDays property: Remaining retention days for soft deleted blob container."
  syntax: "public Integer remainingRetentionDays()"
  returns:
    description: "the remainingRetentionDays value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.validate()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.validate()"
  name: "validate()"
  nameWithType: "ListContainerItemInner.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.storage.models.AzureEntityResource.validate()"
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.version()"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.version()"
  name: "version()"
  nameWithType: "ListContainerItemInner.version()"
  summary: "Get the version property: The version of the deleted blob container."
  syntax: "public String version()"
  returns:
    description: "the version value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withDefaultEncryptionScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withDefaultEncryptionScope(String defaultEncryptionScope)"
  name: "withDefaultEncryptionScope(String defaultEncryptionScope)"
  nameWithType: "ListContainerItemInner.withDefaultEncryptionScope(String defaultEncryptionScope)"
  summary: "Set the defaultEncryptionScope property: Default the container to use specified encryption scope for all writes."
  parameters:
  - description: "the defaultEncryptionScope value to set."
    name: "defaultEncryptionScope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ListContainerItemInner withDefaultEncryptionScope(String defaultEncryptionScope)"
  returns:
    description: "the ListContainerItemInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner?alt=com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner&text=ListContainerItemInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withDenyEncryptionScopeOverride(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withDenyEncryptionScopeOverride(Boolean denyEncryptionScopeOverride)"
  name: "withDenyEncryptionScopeOverride(Boolean denyEncryptionScopeOverride)"
  nameWithType: "ListContainerItemInner.withDenyEncryptionScopeOverride(Boolean denyEncryptionScopeOverride)"
  summary: "Set the denyEncryptionScopeOverride property: Block override of encryption scope from the container default."
  parameters:
  - description: "the denyEncryptionScopeOverride value to set."
    name: "denyEncryptionScopeOverride"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ListContainerItemInner withDenyEncryptionScopeOverride(Boolean denyEncryptionScopeOverride)"
  returns:
    description: "the ListContainerItemInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner?alt=com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner&text=ListContainerItemInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withEnableNfsV3AllSquash(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withEnableNfsV3AllSquash(Boolean enableNfsV3AllSquash)"
  name: "withEnableNfsV3AllSquash(Boolean enableNfsV3AllSquash)"
  nameWithType: "ListContainerItemInner.withEnableNfsV3AllSquash(Boolean enableNfsV3AllSquash)"
  summary: "Set the enableNfsV3AllSquash property: Enable NFSv3 all squash on blob container."
  parameters:
  - description: "the enableNfsV3AllSquash value to set."
    name: "enableNfsV3AllSquash"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ListContainerItemInner withEnableNfsV3AllSquash(Boolean enableNfsV3AllSquash)"
  returns:
    description: "the ListContainerItemInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner?alt=com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner&text=ListContainerItemInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withEnableNfsV3RootSquash(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withEnableNfsV3RootSquash(Boolean enableNfsV3RootSquash)"
  name: "withEnableNfsV3RootSquash(Boolean enableNfsV3RootSquash)"
  nameWithType: "ListContainerItemInner.withEnableNfsV3RootSquash(Boolean enableNfsV3RootSquash)"
  summary: "Set the enableNfsV3RootSquash property: Enable NFSv3 root squash on blob container."
  parameters:
  - description: "the enableNfsV3RootSquash value to set."
    name: "enableNfsV3RootSquash"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ListContainerItemInner withEnableNfsV3RootSquash(Boolean enableNfsV3RootSquash)"
  returns:
    description: "the ListContainerItemInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner?alt=com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner&text=ListContainerItemInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withImmutableStorageWithVersioning(com.azure.resourcemanager.storage.models.ImmutableStorageWithVersioning)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withImmutableStorageWithVersioning(ImmutableStorageWithVersioning immutableStorageWithVersioning)"
  name: "withImmutableStorageWithVersioning(ImmutableStorageWithVersioning immutableStorageWithVersioning)"
  nameWithType: "ListContainerItemInner.withImmutableStorageWithVersioning(ImmutableStorageWithVersioning immutableStorageWithVersioning)"
  summary: "Set the immutableStorageWithVersioning property: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process."
  parameters:
  - description: "the immutableStorageWithVersioning value to set."
    name: "immutableStorageWithVersioning"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.ImmutableStorageWithVersioning?alt=com.azure.resourcemanager.storage.models.ImmutableStorageWithVersioning&text=ImmutableStorageWithVersioning\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ListContainerItemInner withImmutableStorageWithVersioning(ImmutableStorageWithVersioning immutableStorageWithVersioning)"
  returns:
    description: "the ListContainerItemInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner?alt=com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner&text=ListContainerItemInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withMetadata(Map<String,String> metadata)"
  name: "withMetadata(Map<String,String> metadata)"
  nameWithType: "ListContainerItemInner.withMetadata(Map<String,String> metadata)"
  summary: "Set the metadata property: A name-value pair to associate with the container as metadata."
  parameters:
  - description: "the metadata value to set."
    name: "metadata"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ListContainerItemInner withMetadata(Map<String,String> metadata)"
  returns:
    description: "the ListContainerItemInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner?alt=com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner&text=ListContainerItemInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withPublicAccess(com.azure.resourcemanager.storage.models.PublicAccess)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner.withPublicAccess(PublicAccess publicAccess)"
  name: "withPublicAccess(PublicAccess publicAccess)"
  nameWithType: "ListContainerItemInner.withPublicAccess(PublicAccess publicAccess)"
  summary: "Set the publicAccess property: Specifies whether data in the container may be accessed publicly and the level of access."
  parameters:
  - description: "the publicAccess value to set."
    name: "publicAccess"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.PublicAccess?alt=com.azure.resourcemanager.storage.models.PublicAccess&text=PublicAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ListContainerItemInner withPublicAccess(PublicAccess publicAccess)"
  returns:
    description: "the ListContainerItemInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner?alt=com.azure.resourcemanager.storage.fluent.models.ListContainerItemInner&text=ListContainerItemInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.storage.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.14.0
