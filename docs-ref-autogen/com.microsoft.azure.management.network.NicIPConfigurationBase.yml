### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.NicIPConfigurationBase"
fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase"
name: "NicIPConfigurationBase"
nameWithType: "NicIPConfigurationBase"
summary: "The base IP configuration shared across IP configurations in regular and virtual machine scale set network interface."
syntax: "public interface NicIPConfigurationBase extends HasSubnet, HasPrivateIPAddress"
methods:
- uid: "com.microsoft.azure.management.network.NicIPConfigurationBase.getNetwork()"
  fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase.getNetwork()"
  name: "getNetwork()"
  nameWithType: "NicIPConfigurationBase.getNetwork()"
  modifiers:
  - "abstract"
  syntax: "public abstract Network getNetwork()"
  returns:
    description: "the virtual network associated with this IP configuration"
    type: "<xref href=\"com.microsoft.azure.management.network.Network?alt=com.microsoft.azure.management.network.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NicIPConfigurationBase.getNetworkSecurityGroup()"
  fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase.getNetworkSecurityGroup()"
  name: "getNetworkSecurityGroup()"
  nameWithType: "NicIPConfigurationBase.getNetworkSecurityGroup()"
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkSecurityGroup getNetworkSecurityGroup()"
  returns:
    description: "the network security group, if any, associated with the subnet, if any, assigned to this network interface IP configuration\n <p>\n (Note that this results in additional calls to Azure.)"
    type: "<xref href=\"com.microsoft.azure.management.network.NetworkSecurityGroup?alt=com.microsoft.azure.management.network.NetworkSecurityGroup&text=NetworkSecurityGroup\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NicIPConfigurationBase.isPrimary()"
  fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase.isPrimary()"
  name: "isPrimary()"
  nameWithType: "NicIPConfigurationBase.isPrimary()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isPrimary()"
  returns:
    description: "true if this is the primary IP configuration"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.NicIPConfigurationBase.listAssociatedApplicationGatewayBackends()"
  fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase.listAssociatedApplicationGatewayBackends()"
  name: "listAssociatedApplicationGatewayBackends()"
  nameWithType: "NicIPConfigurationBase.listAssociatedApplicationGatewayBackends()"
  modifiers:
  - "abstract"
  syntax: "public abstract Collection<ApplicationGatewayBackend> listAssociatedApplicationGatewayBackends()"
  returns:
    description: "the application gateway backends associated with this network IP configuration"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackend?alt=com.microsoft.azure.management.network.ApplicationGatewayBackend&text=ApplicationGatewayBackend\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NicIPConfigurationBase.listAssociatedLoadBalancerBackends()"
  fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase.listAssociatedLoadBalancerBackends()"
  name: "listAssociatedLoadBalancerBackends()"
  nameWithType: "NicIPConfigurationBase.listAssociatedLoadBalancerBackends()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<LoadBalancerBackend> listAssociatedLoadBalancerBackends()"
  returns:
    description: "the load balancer backends associated with this network interface IP configuration"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.LoadBalancerBackend?alt=com.microsoft.azure.management.network.LoadBalancerBackend&text=LoadBalancerBackend\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NicIPConfigurationBase.listAssociatedLoadBalancerInboundNatRules()"
  fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase.listAssociatedLoadBalancerInboundNatRules()"
  name: "listAssociatedLoadBalancerInboundNatRules()"
  nameWithType: "NicIPConfigurationBase.listAssociatedLoadBalancerInboundNatRules()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<LoadBalancerInboundNatRule> listAssociatedLoadBalancerInboundNatRules()"
  returns:
    description: "the load balancer inbound NAT rules associated with this network interface IP configuration"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.LoadBalancerInboundNatRule?alt=com.microsoft.azure.management.network.LoadBalancerInboundNatRule&text=LoadBalancerInboundNatRule\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.NicIPConfigurationBase.privateIPAddressVersion()"
  fullName: "com.microsoft.azure.management.network.NicIPConfigurationBase.privateIPAddressVersion()"
  name: "privateIPAddressVersion()"
  nameWithType: "NicIPConfigurationBase.privateIPAddressVersion()"
  modifiers:
  - "abstract"
  syntax: "public abstract IPVersion privateIPAddressVersion()"
  returns:
    description: "private IP address version"
    type: "<xref href=\"com.microsoft.azure.management.network.IPVersion?alt=com.microsoft.azure.management.network.IPVersion&text=IPVersion\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The base IP configuration shared across IP configurations in regular and virtual machine scale set network interface."
implements:
- "<xref href=\"com.microsoft.azure.management.network.model.HasPrivateIPAddress?alt=com.microsoft.azure.management.network.model.HasPrivateIPAddress&text=HasPrivateIPAddress\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasSubnet?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasSubnet&text=HasSubnet\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
