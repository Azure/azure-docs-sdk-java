### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlDatabase.SqlDatabaseDefinition
  id: SqlDatabaseDefinition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.SqlDatabaseDefinition.yml
  langs:
  - java
  name: SqlDatabase.SqlDatabaseDefinition<ParentT>
  nameWithType: SqlDatabase.SqlDatabaseDefinition<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.SqlDatabaseDefinition<ParentT>
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 389
  package: com.microsoft.azure.management.sql
  summary: "<p>Container interface for all the definitions that need to be implemented.</p>\r\n<p></p>"
  syntax:
    content: public interface SqlDatabaseDefinition<ParentT> extends SqlDatabase.DefinitionStages.Blank<ParentT>,SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>,SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>,SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>,SqlDatabase.DefinitionStages.WithImportFrom<ParentT>,SqlDatabase.DefinitionStages.WithStorageKey<ParentT>,SqlDatabase.DefinitionStages.WithAuthentication<ParentT>,SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>,SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>,SqlDatabase.DefinitionStages.WithCreateMode<ParentT>,SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>,SqlDatabase.DefinitionStages.WithAttachFinal<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.attach()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase.fromRestorePoint(RestorePoint)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase.fromRestorePoint(RestorePoint,DateTime)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSampleDatabase.fromSample(SampleName)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.importFrom(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.importFrom(StorageAccount,String,String)
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.withActiveDirectoryLoginAndPassword(String,String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withBasicEdition()
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withBasicEdition(SqlDatabaseBasicStorage)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollation.withCollation(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEdition)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEditions)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytes.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode.withMode(CreateMode)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool>)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey.withSharedAccessKey(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.withSqlAdministratorLoginAndPassword(String,String)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  - com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey.withStorageAccessKey(String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
references:
- uid: 18a275b1
  spec.java:
  - name: ParentT
    fullName: ParentT
- uid: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.attach()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition
  href: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InDefinition.yml
  name: attach()
  nameWithType: Attachable.InDefinition<ParentT>.attach()
  fullName: ParentT com.microsoft.azure.management.resources.fluentcore.model.Attachable<ParentT>.InDefinition<ParentT>.attach()
  type: Method
  summary: "<p>Attaches the child definition to the parent resource definiton. </p>"
  syntax:
    content: public ParentT attach()
    return:
      type: 18a275b1
      description: <p>the next stage of the parent definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: "<p>Execute the create request.</p>\r\n<p></p>"
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase.yml
  name: fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>.fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
  type: Method
  summary: "<p>Creates a new database from a previously deleted database (see restorable dropped database). </p>\r\n<p>Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachFinal<ParentT> fromRestorableDroppedDatabase(SqlRestorableDroppedDatabase restorableDroppedDatabase)
    parameters:
    - id: restorableDroppedDatabase
      type: com.microsoft.azure.management.sql.SqlRestorableDroppedDatabase
      description: <p>the restorable dropped database </p>
    return:
      type: 84d41e1b
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase.fromRestorePoint(RestorePoint)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase.yml
  name: fromRestorePoint(RestorePoint restorePoint)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint)
  type: Method
  summary: "<p>Creates a new database from a restore point.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> fromRestorePoint(RestorePoint restorePoint)
    parameters:
    - id: restorePoint
      type: com.microsoft.azure.management.sql.RestorePoint
      description: <p>the restore point </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase.fromRestorePoint(RestorePoint,DateTime)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase.yml
  name: fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>.fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
  type: Method
  summary: "<p>Creates a new database from a restore point.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> fromRestorePoint(RestorePoint restorePoint, DateTime restorePointDateTime)
    parameters:
    - id: restorePoint
      type: com.microsoft.azure.management.sql.RestorePoint
      description: <p>the restore point </p>
    - id: restorePointDateTime
      type: 230df18c
      description: <p>date and time to restore from </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSampleDatabase.fromSample(SampleName)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSampleDatabase
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSampleDatabase.yml
  name: fromSample(SampleName sampleName)
  nameWithType: SqlDatabase.DefinitionStages.WithSampleDatabase<ParentT>.fromSample(SampleName sampleName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSampleDatabase<ParentT>.fromSample(SampleName sampleName)
  type: Method
  summary: "<p>Creates a new database from a restore point.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> fromSample(SampleName sampleName)
    parameters:
    - id: sampleName
      type: com.microsoft.azure.management.sql.SampleName
      description: <p>the sample database to use as the source </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.importFrom(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.yml
  name: importFrom(String storageUri)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(String storageUri)
  type: Method
  summary: "<p>Creates a new database from a BACPAC file.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithStorageKey<ParentT> importFrom(String storageUri)
    parameters:
    - id: storageUri
      type: "26831127"
      description: <p>the source URI for the database to be imported </p>
    return:
      type: cad5a990
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.importFrom(StorageAccount,String,String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.yml
  name: importFrom(StorageAccount storageAccount, String containerName, String fileName)
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>.importFrom(StorageAccount storageAccount, String containerName, String fileName)
  type: Method
  summary: "<p>Creates a new database from a BACPAC file.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAuthentication<ParentT> importFrom(StorageAccount storageAccount, String containerName, String fileName)
    parameters:
    - id: storageAccount
      type: com.microsoft.azure.management.storage.StorageAccount
      description: <p>an existing storage account to be used </p>
    - id: containerName
      type: "26831127"
      description: <p>the container name within the storage account to use </p>
    - id: fileName
      type: "26831127"
      description: <p>the exported database file name </p>
    return:
      type: a03fdbba
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.withActiveDirectoryLoginAndPassword(String,String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.yml
  name: withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  type: Method
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
    parameters:
    - id: administratorLogin
      type: "26831127"
      description: <p>the Active Directory administrator login </p>
    - id: administratorPassword
      type: "26831127"
      description: <p>the Active Directory administrator password </p>
    return:
      type: d09bf4bc
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withBasicEdition()
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.yml
  name: withBasicEdition()
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition()
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition()
  type: Method
  summary: "<p>Sets a \"Basic\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withBasicEdition()
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withBasicEdition(SqlDatabaseBasicStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.yml
  name: withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  type: Method
  summary: "<p>Sets a \"Basic\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
    parameters:
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabaseBasicStorage
      description: <p>the max storage capacity </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollation.withCollation(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollation
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollation.yml
  name: withCollation(String collation)
  nameWithType: SqlDatabase.DefinitionStages.WithCollation<ParentT>.withCollation(String collation)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollation<ParentT>.withCollation(String collation)
  type: Method
  summary: "<p>Sets the collation for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withCollation(String collation)
    parameters:
    - id: collation
      type: "26831127"
      description: <p>collation to be set for database </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.yml
  name: withCollation(String collation)
  nameWithType: SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String collation)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollationAllCreateOptions.withCollation(String collation)
  type: Method
  summary: "<p>Sets the collation for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withCollation(String collation)
    parameters:
    - id: collation
      type: "26831127"
      description: <p>collation to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEdition)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.yml
  name: withEdition(DatabaseEdition edition)
  nameWithType: SqlDatabase.DefinitionStages.WithEdition<ParentT>.withEdition(DatabaseEdition edition)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition<ParentT>.withEdition(DatabaseEdition edition)
  type: Method
  summary: "<p>Sets the edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withEdition(DatabaseEdition edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql.DatabaseEdition
      description: <p>edition to be set for database </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.withEdition(DatabaseEditions)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition.yml
  name: withEdition(DatabaseEditions edition)
  nameWithType: SqlDatabase.DefinitionStages.WithEdition<ParentT>.withEdition(DatabaseEditions edition)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEdition<ParentT>.withEdition(DatabaseEditions edition)
  type: Method
  summary: "<p>Sets the edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withEdition(DatabaseEditions edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql.DatabaseEditions
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.yml
  name: withExistingElasticPool(String elasticPoolName)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(String elasticPoolName)
  type: Method
  summary: "<p>Sets the existing elastic pool for the SQLDatabase.</p>\r\n<p></p>"
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(String elasticPoolName)
    parameters:
    - id: elasticPoolName
      type: "26831127"
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPoolda8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.yml
  name: withExistingElasticPool(SqlElasticPool sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  type: Method
  summary: "<p>Sets the existing elastic pool for the SQLDatabase.</p>\r\n<p></p>"
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withExistingElasticPool(SqlElasticPool sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.sql.SqlElasticPool
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPoolda8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytes.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytes
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytes.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.DefinitionStages.WithMaxSizeBytes<ParentT>.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytes<ParentT>.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: "<p>Sets the max size in bytes for SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytesAllCreateOptions.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: "<p>Sets the max size in bytes for SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreate
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode.withMode(CreateMode)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode.yml
  name: withMode(CreateMode createMode)
  nameWithType: SqlDatabase.DefinitionStages.WithCreateMode<ParentT>.withMode(CreateMode createMode)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode<ParentT>.withMode(CreateMode createMode)
  type: Method
  summary: "<p>Sets the create mode for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachFinal<ParentT> withMode(CreateMode createMode)
    parameters:
    - id: createMode
      type: com.microsoft.azure.management.sql.CreateMode
      description: <p>create mode for the database, should not be default in this flow </p>
    return:
      type: 84d41e1b
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool>)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.yml
  name: withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  type: Method
  summary: "<p>Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database.</p>\r\n<p></p>"
  syntax:
    content: public WithExistingDatabaseAfterElasticPool<ParentT> withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.sql.SqlElasticPoola08ddfce
      description: <p>creatable definition for new elastic pool to be created for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPoolda8a2936
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.yml
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  type: Method
  summary: "<p>Sets a \"Premium\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.yml
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  type: Method
  summary: "<p>Sets a \"Premium\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumStorage
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective.yml
  name: withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  nameWithType: SqlDatabase.DefinitionStages.WithServiceObjective<ParentT>.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithServiceObjective<ParentT>.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  type: Method
  summary: "<p>Sets the service level objective for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withServiceObjective(ServiceObjectiveName serviceLevelObjective)
    parameters:
    - id: serviceLevelObjective
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: <p>service level objected for the SQL Database </p>
    return:
      type: d09bf4bc
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey.withSharedAccessKey(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey.yml
  name: withSharedAccessKey(String sharedAccessKey)
  nameWithType: SqlDatabase.DefinitionStages.WithStorageKey<ParentT>.withSharedAccessKey(String sharedAccessKey)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey<ParentT>.withSharedAccessKey(String sharedAccessKey)
  type: Method
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAuthentication<ParentT> withSharedAccessKey(String sharedAccessKey)
    parameters:
    - id: sharedAccessKey
      type: "26831127"
      description: <p>the shared access key to use; it must be preceded with a "?." </p>
    return:
      type: a03fdbba
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.yml
  name: withSourceDatabase(String sourceDatabaseId)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(String sourceDatabaseId)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(String sourceDatabaseId)
  type: Method
  summary: "<p>Sets the resource if of source database for the SQL Database. </p>\r\n<p>Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithCreateMode<ParentT> withSourceDatabase(String sourceDatabaseId)
    parameters:
    - id: sourceDatabaseId
      type: "26831127"
      description: <p>id of the source database </p>
    return:
      type: 7e2a3b51
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.yml
  name: withSourceDatabase(SqlDatabase sourceDatabase)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(SqlDatabase sourceDatabase)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>.withSourceDatabase(SqlDatabase sourceDatabase)
  type: Method
  summary: "<p>Sets the resource if of source database for the SQL Database. </p>\r\n<p>Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithCreateMode<ParentT> withSourceDatabase(SqlDatabase sourceDatabase)
    parameters:
    - id: sourceDatabase
      type: com.microsoft.azure.management.sql.SqlDatabase
      description: <p>instance of the source database </p>
    return:
      type: 7e2a3b51
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.withSqlAdministratorLoginAndPassword(String,String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.yml
  name: withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  type: Method
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
    parameters:
    - id: administratorLogin
      type: "26831127"
      description: <p>the SQL administrator login </p>
    - id: administratorPassword
      type: "26831127"
      description: <p>the SQL administrator password </p>
    return:
      type: d09bf4bc
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.yml
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  type: Method
  summary: "<p>Sets a \"Standard\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults.yml
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  nameWithType: SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT>.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  type: Method
  summary: "<p>Sets a \"Standard\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.WithEditionDefaults<ParentT> withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardStorage
      description: <p>edition to be set for database </p>
    return:
      type: 7bd7b72e
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey.withStorageAccessKey(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey.yml
  name: withStorageAccessKey(String storageAccessKey)
  nameWithType: SqlDatabase.DefinitionStages.WithStorageKey<ParentT>.withStorageAccessKey(String storageAccessKey)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey<ParentT>.withStorageAccessKey(String storageAccessKey)
  type: Method
  syntax:
    content: public SqlDatabase.DefinitionStages.WithAuthentication<ParentT> withStorageAccessKey(String storageAccessKey)
    parameters:
    - id: storageAccessKey
      type: "26831127"
      description: <p>the storage access key to use </p>
    return:
      type: a03fdbba
      description: <p>next definition stage </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.Blank
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.Blank.yml
  name: SqlDatabase.DefinitionStages.Blank<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.Blank<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.Blank<ParentT>
  type: Interface
  summary: "<p>The first stage of the SQL Server Firewall rule definition.</p>\r\n<p>\r\nThe first stage of the SQL database definition. </p>"
  syntax:
    content: public interface Blank<ParentT> extends SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>,SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions.yml
  name: SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAllDifferentOptions<ParentT>
  type: Interface
  summary: "<p>The SQL database interface with all starting options for definition.</p>\r\n<p>\r\nThe SQL database interface with all starting options for definition. </p>"
  syntax:
    content: public interface WithAllDifferentOptions<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName.yml
  name: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithElasticPoolName<ParentT>
  type: Interface
  summary: "<p>The SQL Database definition to set the elastic pool for database.</p>\r\n<p>\r\nThe SQL Database definition to set the elastic pool for database. </p>"
  syntax:
    content: public interface WithElasticPoolName<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase.yml
  name: SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorableDroppedDatabase<ParentT>
  type: Interface
  summary: "<p>The SQL Database definition to set a restorable dropped database as the source database.</p>\r\n<p></p>"
  syntax:
    content: public interface WithRestorableDroppedDatabase<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom.yml
  name: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithImportFrom<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithImportFrom<ParentT>
  type: Interface
  summary: "<p>The SQL Database definition to import a BACPAC file as the source database.</p>\r\n<p></p>"
  syntax:
    content: public interface WithImportFrom<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey.yml
  name: SqlDatabase.DefinitionStages.WithStorageKey<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithStorageKey<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithStorageKey<ParentT>
  type: Interface
  summary: "<p>Sets the storage key type and value to use.</p>\r\n<p></p>"
  syntax:
    content: public interface WithStorageKey<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.yml
  name: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
  type: Interface
  summary: "<p>Sets the authentication type and SQL or Active Directory administrator login and password.</p>\r\n<p></p>"
  syntax:
    content: public interface WithAuthentication<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase.yml
  name: SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithRestorePointDatabase<ParentT>
  type: Interface
  summary: "<p>The SQL Database definition to set a restore point as the source database.</p>\r\n<p></p>"
  syntax:
    content: public interface WithRestorePointDatabase<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.yml
  name: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId<ParentT>
  type: Interface
  summary: "<p>The SQL Database definition to set the source database id for database.</p>\r\n<p>\r\nThe SQL Database definition to set the source database id for database. </p>"
  syntax:
    content: public interface WithSourceDatabaseId<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode.yml
  name: SqlDatabase.DefinitionStages.WithCreateMode<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithCreateMode<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateMode<ParentT>
  type: Interface
  summary: "<p>The SQL Database definition to set the create mode for database.</p>\r\n<p>\r\nThe SQL Database definition to set the create mode for database. </p>"
  syntax:
    content: public interface WithCreateMode<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition</p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAttachAllOptions
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAttachAllOptions.yml
  name: SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT>
  type: Interface
  summary: "<p>The final stage of the SQL Database definition with all the other options.</p>\r\n<p></p>"
  syntax:
    content: public interface WithAttachAllOptions<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAttachFinal
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAttachFinal.yml
  name: SqlDatabase.DefinitionStages.WithAttachFinal<ParentT>
  nameWithType: SqlDatabase.DefinitionStages.WithAttachFinal<ParentT>
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAttachFinal<ParentT>
  type: Interface
  summary: "<p>The final stage of the SQL Database definition. </p>\r\n<p>At this stage, any remaining optional settings can be specified, or the SQL Database definition can be attached to the parent SQL Server definition.</p>\r\n<p></p>"
  syntax:
    content: public interface WithAttachFinal<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
