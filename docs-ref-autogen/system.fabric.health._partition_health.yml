items:
- uid: system.fabric.health._partition_health
  id: _partition_health
  parent: system.fabric.health
  children:
  - system.fabric.health._partition_health.getPartitionId()
  - system.fabric.health._partition_health.getReplicaHealthState()
  href: system.fabric.health._partition_health.yml
  langs:
  - java
  name: PartitionHealth
  nameWithType: PartitionHealth
  fullName: system.fabric.health.PartitionHealth
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
    startLine: 10
  package: system.fabric.health
  summary: <p>Describes health of a partition as returned by <xref href="system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public class PartitionHealth extends EntityHealth
  inheritance:
  - java.lang.Object
  - system.fabric.health._entity_health
  inheritedMembers:
  - system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  - system.fabric.health._entity_health.getAggregatedHealthState()
  - system.fabric.health._entity_health.getHealthEvents()
  - system.fabric.health._entity_health.getUnhealthyEvaluations()
  - system.fabric.health._partition_health.PartitionHealth(String,int,HealthEvent [],HealthEvaluation [],ReplicaHealthState [])
- uid: system.fabric.health._partition_health.getPartitionId()
  id: getPartitionId()
  parent: system.fabric.health._partition_health
  href: system.fabric.health._partition_health.yml
  langs:
  - java
  name: getPartitionId()
  nameWithType: PartitionHealth.getPartitionId()
  fullName: UUID system.fabric.health.PartitionHealth.getPartitionId()
  overload: system.fabric.health._partition_health.getPartitionId*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
    startLine: 36
  package: system.fabric.health
  summary: >-
    <p>Gets the partition ID, which uniquely identifies the partition.</p>

    <p></p>
  syntax:
    content: public UUID getPartitionId()
    return:
      type: add9545a
      description: <p>The partition ID. </p>
- uid: system.fabric.health._partition_health.getReplicaHealthState()
  id: getReplicaHealthState()
  parent: system.fabric.health._partition_health
  href: system.fabric.health._partition_health.yml
  langs:
  - java
  name: getReplicaHealthState()
  nameWithType: PartitionHealth.getReplicaHealthState()
  fullName: List<ReplicaHealthState> system.fabric.health.PartitionHealth.getReplicaHealthState()
  overload: system.fabric.health._partition_health.getReplicaHealthState*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/health/PartitionHealth.java
    startLine: 49
  package: system.fabric.health
  summary: >-
    <p>Gets the replica health states for the current partition as found in the health store.</p>

    <p></p>
  syntax:
    content: public List<ReplicaHealthState> getReplicaHealthState()
    return:
      type: 5618da2dsystem.fabric.health._replica_health_statea08ddfce
      description: <p>The replicas of the current partition as found in the health store. Only replicas that respect the <xref href="system.fabric._partition_health_query_description.getReplicaHealthStatesFilter()" data-throw-if-not-resolved="false"></xref> (if specified) are returned. If the input filter is not specified, all replicas are returned. All replicas are evaluated to determine the partition aggregated health. </p>
references:
- uid: add9545a
  spec.java:
  - name: UUID
    fullName: UUID
- uid: system.fabric.health._partition_health.getPartitionId*
  name: getPartitionId
  nameWithType: PartitionHealth.getPartitionId
  fullName: UUID system.fabric.health.PartitionHealth.getPartitionId
  package: system.fabric.health
- uid: 5618da2dsystem.fabric.health._replica_health_statea08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: system.fabric.health._replica_health_state
    name: ReplicaHealthState
    fullName: system.fabric.health.ReplicaHealthState
    href: system.fabric.health._replica_health_state.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric.health._partition_health.getReplicaHealthState*
  name: getReplicaHealthState
  nameWithType: PartitionHealth.getReplicaHealthState
  fullName: List<ReplicaHealthState> system.fabric.health.PartitionHealth.getReplicaHealthState
  package: system.fabric.health
- uid: system.fabric.health._entity_health.EntityHealth(int,List<HealthEvent>,List<HealthEvaluation>)
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  nameWithType: EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  fullName: system.fabric.health.EntityHealth.EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
  type: Constructor
  syntax:
    content: protected EntityHealth(int aggregatedHealthState, List<HealthEvent> healthEvents, List<HealthEvaluation> unhealthyEvaluations)
    parameters:
    - id: aggregatedHealthState
      type: f75371fa
    - id: healthEvents
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
    - id: unhealthyEvaluations
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
- uid: system.fabric.health._entity_health.getAggregatedHealthState()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getAggregatedHealthState()
  nameWithType: EntityHealth.getAggregatedHealthState()
  fullName: HealthState system.fabric.health.EntityHealth.getAggregatedHealthState()
  type: Method
  summary: >-
    <p>Gets the entity aggregated health state.</p>

    <p></p>
  syntax:
    content: public HealthState getAggregatedHealthState()
    return:
      type: system.fabric.health._health_state
      description: >-
        <p>

          <xref href="system.fabric.health._health_state" data-throw-if-not-resolved="false"></xref> representing the aggregated health state computed by Health Manager based on reported events on entity and its children (if any) and desired health policy. </p>
- uid: system.fabric.health._entity_health.getHealthEvents()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getHealthEvents()
  nameWithType: EntityHealth.getHealthEvents()
  fullName: List<HealthEvent> system.fabric.health.EntityHealth.getHealthEvents()
  type: Method
  summary: >-
    <p>Gets the health events reported on the entity.</p>

    <p>

      <bold>Remarks:</bold>The health events are created based on health reports sent to health store. They contain additional metadata added by health store. </p>
  syntax:
    content: public List<HealthEvent> getHealthEvents()
    return:
      type: 5618da2dsystem.fabric.health._health_eventa08ddfce
      description: <p>The health events reported on the entity. </p>
- uid: system.fabric.health._entity_health.getUnhealthyEvaluations()
  parent: system.fabric.health._entity_health
  href: system.fabric.health._entity_health.yml
  name: getUnhealthyEvaluations()
  nameWithType: EntityHealth.getUnhealthyEvaluations()
  fullName: List<HealthEvaluation> system.fabric.health.EntityHealth.getUnhealthyEvaluations()
  type: Method
  summary: >-
    <p>Gets the unhealthy evaluations that show why the current aggregated health state was returned by Health Manager.</p>

    <p></p>
  syntax:
    content: public List<HealthEvaluation> getUnhealthyEvaluations()
    return:
      type: 5618da2dsystem.fabric.health._health_evaluationa08ddfce
      description: <p>The unhealthy evaluations that describe why the current aggregated health state was returned by Health Manager. </p>
- uid: system.fabric.health._partition_health.PartitionHealth(String,int,HealthEvent [],HealthEvaluation [],ReplicaHealthState [])
- uid: system.fabric.health._entity_health
  parent: system.fabric.health
  href: system.fabric.health._entity_health.yml
  name: EntityHealth
  nameWithType: EntityHealth
  fullName: system.fabric.health.EntityHealth
  type: Class
  summary: <p>Represents the base class for all entity health related classes. </p>
  syntax:
    content: public class EntityHealth
- uid: system.fabric.health._replica_health_state
  parent: system.fabric.health
  href: system.fabric.health._replica_health_state.yml
  name: ReplicaHealthState
  nameWithType: ReplicaHealthState
  fullName: system.fabric.health.ReplicaHealthState
  type: Class
  summary: <p>Represents a base class for stateful service replica or stateless service instance health state. </p>
  syntax:
    content: public class ReplicaHealthState
- uid: system.fabric.health._health_event
  parent: system.fabric.health
  href: system.fabric.health._health_event.yml
  name: HealthEvent
  nameWithType: HealthEvent
  fullName: system.fabric.health.HealthEvent
  type: Class
  summary: <p>A <xref href="system.fabric.health._health_event" data-throw-if-not-resolved="false"></xref> object is a structure which contains the health information that is used while reporting health on an entity via ReportHealth API </p>
  syntax:
    content: public class HealthEvent
- uid: system.fabric.health._health_evaluation
  parent: system.fabric.health
  href: system.fabric.health._health_evaluation.yml
  name: HealthEvaluation
  nameWithType: HealthEvaluation
  fullName: system.fabric.health.HealthEvaluation
  type: Class
  summary: <p>Represents a health evaluation which describes the data and the algorithm used by health store to evaluate the health of an entity. </p>
  syntax:
    content: public class HealthEvaluation
- uid: system.fabric._partition_health_query_description.getReplicaHealthStatesFilter()
  parent: system.fabric._partition_health_query_description
  href: system.fabric._partition_health_query_description.yml
  name: getReplicaHealthStatesFilter()
  nameWithType: PartitionHealthQueryDescription.getReplicaHealthStatesFilter()
  fullName: ReplicaHealthStatesFilter system.fabric.PartitionHealthQueryDescription.getReplicaHealthStatesFilter()
  type: Method
  summary: >-
    <p>Gets the filter for <xref href="system.fabric.health._replica_health_state" data-throw-if-not-resolved="false"></xref> children. Only children that match the filter will be returned. All children will be used to evaluate the partition aggregated health state.</p>

    <p>

      <bold>Remarks:</bold> Only children that match the filter will be returned. All children will be used to evaluate the partition aggregated health state. If the filter is not specified, all partition children are returned. </p>
  syntax:
    content: public ReplicaHealthStatesFilter getReplicaHealthStatesFilter()
    return:
      type: system.fabric._replica_health_states_filter
      description: <p>The <xref href="system.fabric._replica_health_states_filter" data-throw-if-not-resolved="false"></xref> used to filter returned replicas. </p>
- uid: system.fabric._health_client.getPartitionHealthAsync(PartitionHealthQueryDescription)
  parent: system.fabric._health_client
  href: system.fabric._health_client.yml
  name: getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
  nameWithType: HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
  fullName: CompletableFuture<PartitionHealth> system.fabric.HealthClient.getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
  type: Method
  summary: >-
    <p>Asynchronously gets the health of a Service Fabric partition by using the specified timeout.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<PartitionHealth> getPartitionHealthAsync(PartitionHealthQueryDescription queryDescription)
    parameters:
    - id: queryDescription
      type: system.fabric._partition_health_query_description
      description: <p>The query description. </p>
    return:
      type: 9cdf14d0system.fabric.health._partition_healtha08ddfce
      description: <p>The health of a Service Fabric partition. </p>
