### YamlMime:JavaMember
uid: "com.azure.cosmos.implementation.directconnectivity.SharedTransportClient.getOrCreateInstance*"
fullName: "com.azure.cosmos.implementation.directconnectivity.SharedTransportClient.getOrCreateInstance"
name: "getOrCreateInstance"
nameWithType: "SharedTransportClient.getOrCreateInstance"
members:
- uid: "com.azure.cosmos.implementation.directconnectivity.SharedTransportClient.getOrCreateInstance(com.azure.cosmos.implementation.directconnectivity.Protocol,com.azure.cosmos.implementation.Configs,com.azure.cosmos.implementation.ConnectionPolicy,com.azure.cosmos.implementation.UserAgentContainer,com.azure.cosmos.implementation.DiagnosticsClientContext.DiagnosticsClientConfig,com.azure.cosmos.implementation.directconnectivity.IAddressResolver)"
  fullName: "com.azure.cosmos.implementation.directconnectivity.SharedTransportClient.getOrCreateInstance(Protocol protocol, Configs configs, ConnectionPolicy connectionPolicy, UserAgentContainer userAgent, DiagnosticsClientContext.DiagnosticsClientConfig diagnosticsClientConfig, IAddressResolver addressResolver)"
  name: "getOrCreateInstance(Protocol protocol, Configs configs, ConnectionPolicy connectionPolicy, UserAgentContainer userAgent, DiagnosticsClientContext.DiagnosticsClientConfig diagnosticsClientConfig, IAddressResolver addressResolver)"
  nameWithType: "SharedTransportClient.getOrCreateInstance(Protocol protocol, Configs configs, ConnectionPolicy connectionPolicy, UserAgentContainer userAgent, DiagnosticsClientContext.DiagnosticsClientConfig diagnosticsClientConfig, IAddressResolver addressResolver)"
  parameters:
  - name: "protocol"
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.Protocol?alt=com.azure.cosmos.implementation.directconnectivity.Protocol&text=Protocol\" data-throw-if-not-resolved=\"False\" />"
  - name: "configs"
    type: "<xref href=\"com.azure.cosmos.implementation.Configs?alt=com.azure.cosmos.implementation.Configs&text=Configs\" data-throw-if-not-resolved=\"False\" />"
  - name: "connectionPolicy"
    type: "<xref href=\"com.azure.cosmos.implementation.ConnectionPolicy?alt=com.azure.cosmos.implementation.ConnectionPolicy&text=ConnectionPolicy\" data-throw-if-not-resolved=\"False\" />"
  - name: "userAgent"
    type: "<xref href=\"com.azure.cosmos.implementation.UserAgentContainer?alt=com.azure.cosmos.implementation.UserAgentContainer&text=UserAgentContainer\" data-throw-if-not-resolved=\"False\" />"
  - name: "diagnosticsClientConfig"
    type: "<xref href=\"com.azure.cosmos.implementation.DiagnosticsClientContext.DiagnosticsClientConfig?alt=com.azure.cosmos.implementation.DiagnosticsClientContext.DiagnosticsClientConfig&text=DiagnosticsClientConfig\" data-throw-if-not-resolved=\"False\" />"
  - name: "addressResolver"
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.IAddressResolver?alt=com.azure.cosmos.implementation.directconnectivity.IAddressResolver&text=IAddressResolver\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static TransportClient getOrCreateInstance(Protocol protocol, Configs configs, ConnectionPolicy connectionPolicy, UserAgentContainer userAgent, DiagnosticsClientContext.DiagnosticsClientConfig diagnosticsClientConfig, IAddressResolver addressResolver)"
  returns:
    type: "<xref href=\"com.azure.cosmos.implementation.directconnectivity.TransportClient?alt=com.azure.cosmos.implementation.directconnectivity.TransportClient&text=TransportClient\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.implementation.directconnectivity"
artifact: com.azure:azure-cosmos:4.14.0
