### YamlMime:JavaType
uid: "com.azure.ai.textanalytics.models.DetectLanguageInput"
fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput"
name: "DetectLanguageInput"
nameWithType: "DetectLanguageInput"
summary: "The <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DetectLanguageInput\"></xref> model."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DetectLanguageInput"
constructors:
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput.DetectLanguageInput(java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput.DetectLanguageInput(String id, String text)"
  name: "DetectLanguageInput(String id, String text)"
  nameWithType: "DetectLanguageInput.DetectLanguageInput(String id, String text)"
  summary: "Creates an input for detect language that will takes `id` and `document` as required inputs."
  parameters:
  - description: "Unique, non-empty document identifier."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The text property."
    name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DetectLanguageInput(String id, String text)"
  desc: "Creates an input for detect language that will takes `id` and `document` as required inputs."
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput.DetectLanguageInput(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput.DetectLanguageInput(String id, String text, String countryHint)"
  name: "DetectLanguageInput(String id, String text, String countryHint)"
  nameWithType: "DetectLanguageInput.DetectLanguageInput(String id, String text, String countryHint)"
  summary: "Creates an input for detect language that will takes `id`, `document` and `countryHint`."
  parameters:
  - description: "Unique, non-empty document identifier."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The text property."
    name: "text"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Accepts two letter country codes specified by ISO 3166-1 alpha-2. Defaults to \"US\" if not\n specified. To remove this behavior you can reset this parameter by setting this value to empty string\n <code>countryHint</code> = \"\" or \"none\"."
    name: "countryHint"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DetectLanguageInput(String id, String text, String countryHint)"
  desc: "Creates an input for detect language that will takes `id`, `document` and `countryHint`."
methods:
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput.getCountryHint()"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput.getCountryHint()"
  name: "getCountryHint()"
  nameWithType: "DetectLanguageInput.getCountryHint()"
  summary: "Gets the country<wbr>Hint property: The `countryHint` property."
  syntax: "public String getCountryHint()"
  desc: "Gets the countryHint property: The `countryHint` property."
  returns:
    description: "The <code>countryHint</code> value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput.getId()"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput.getId()"
  name: "getId()"
  nameWithType: "DetectLanguageInput.getId()"
  summary: "Gets the id property: Unique, non-empty document identifier."
  syntax: "public String getId()"
  desc: "Gets the id property: Unique, non-empty document identifier."
  returns:
    description: "The id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput.getText()"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput.getText()"
  name: "getText()"
  nameWithType: "DetectLanguageInput.getText()"
  summary: "Gets the text property: The text property."
  syntax: "public String getText()"
  desc: "Gets the text property: The text property."
  returns:
    description: "The text value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.textanalytics.models.DetectLanguageInput.toString()"
  fullName: "com.azure.ai.textanalytics.models.DetectLanguageInput.toString()"
  name: "toString()"
  nameWithType: "DetectLanguageInput.toString()"
  overridden: "java.lang.Object.toString()"
  syntax: "public String toString()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The <xref uid=\"com.azure.ai.textanalytics.models.DetectLanguageInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DetectLanguageInput\"></xref> model."
metadata: {}
package: "com.azure.ai.textanalytics.models"
artifact: com.azure:azure-ai-textanalytics:5.1.12
