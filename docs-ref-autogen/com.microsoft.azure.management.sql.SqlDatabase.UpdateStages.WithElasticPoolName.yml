### YamlMime:JavaType
uid: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName"
fullName: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName"
name: "SqlDatabase.UpdateStages.WithElasticPoolName"
nameWithType: "SqlDatabase.UpdateStages.WithElasticPoolName"
summary: "The SQL Database definition to set the elastic pool for database."
syntax: "public static interface SqlDatabase.UpdateStages.WithElasticPoolName"
methods:
- uid: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(com.microsoft.azure.management.sql.SqlElasticPool)"
  fullName: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  name: "withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  nameWithType: "SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  summary: "Sets the existing elastic pool for the SQLDatabase."
  modifiers:
  - "abstract"
  parameters:
  - description: "for the SQL Database"
    name: "sqlElasticPool"
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withExistingElasticPool(SqlElasticPool sqlElasticPool)"
  desc: "Sets the existing elastic pool for the SQLDatabase."
  returns:
    description: "The next stage of the update."
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabase.Update?alt=com.microsoft.azure.management.sql.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(java.lang.String)"
  fullName: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)"
  name: "withExistingElasticPool(String elasticPoolName)"
  nameWithType: "SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)"
  summary: "Sets the existing elastic pool for the SQLDatabase."
  modifiers:
  - "abstract"
  parameters:
  - description: "for the SQL Database"
    name: "elasticPoolName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withExistingElasticPool(String elasticPoolName)"
  desc: "Sets the existing elastic pool for the SQLDatabase."
  returns:
    description: "The next stage of the update."
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabase.Update?alt=com.microsoft.azure.management.sql.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(com.microsoft.azure.management.resources.fluentcore.model.Creatable<com.microsoft.azure.management.sql.SqlElasticPool>)"
  fullName: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  name: "withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  nameWithType: "SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  summary: "Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database."
  modifiers:
  - "abstract"
  parameters:
  - description: "creatable definition for new elastic pool to be created for the SQL Database"
    name: "sqlElasticPool"
    type: "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Creatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Creatable&text=Creatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.sql.SqlElasticPool?alt=com.microsoft.azure.management.sql.SqlElasticPool&text=SqlElasticPool\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract SqlDatabase.Update withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)"
  desc: "Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database."
  returns:
    description: "The next stage of the update."
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabase.Update?alt=com.microsoft.azure.management.sql.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()"
  fullName: "com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()"
  name: "withoutElasticPool()"
  nameWithType: "SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()"
  summary: "Removes database from it's elastic pool."
  modifiers:
  - "abstract"
  syntax: "public abstract SqlDatabase.UpdateStages.WithEdition withoutElasticPool()"
  desc: "Removes database from it's elastic pool."
  returns:
    description: "The next stage of the update."
    type: "<xref href=\"com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition?alt=com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition&text=WithEdition\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The SQL Database definition to set the elastic pool for database."
metadata: {}
package: "com.microsoft.azure.management.sql"
artifact: com.microsoft.azure:azure-mgmt-sql:1.41.4
