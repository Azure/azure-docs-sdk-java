### YamlMime:JavaType
uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings"
fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings"
name: "BackendPoolsSettings"
nameWithType: "BackendPoolsSettings"
summary: "Settings that apply to all backend pools."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **BackendPoolsSettings**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings?alt=com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings&text=BackendPoolsSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.BackendPoolsSettings()"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.BackendPoolsSettings()"
  name: "BackendPoolsSettings()"
  nameWithType: "BackendPoolsSettings.BackendPoolsSettings()"
  summary: "Creates an instance of Backend<wbr>Pools<wbr>Settings class."
  syntax: "public BackendPoolsSettings()"
  desc: "Creates an instance of BackendPoolsSettings class."
methods:
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.enforceCertificateNameCheck()"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.enforceCertificateNameCheck()"
  name: "enforceCertificateNameCheck()"
  nameWithType: "BackendPoolsSettings.enforceCertificateNameCheck()"
  summary: "Get the enforce<wbr>Certificate<wbr>Name<wbr>Check property: Whether to enforce certificate name check on HTTPS requests to all backend pools."
  syntax: "public EnforceCertificateNameCheckEnabledState enforceCertificateNameCheck()"
  desc: "Get the enforceCertificateNameCheck property: Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests."
  returns:
    description: "the enforceCertificateNameCheck value."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.EnforceCertificateNameCheckEnabledState?alt=com.azure.resourcemanager.frontdoor.models.EnforceCertificateNameCheckEnabledState&text=EnforceCertificateNameCheckEnabledState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "BackendPoolsSettings.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Backend<wbr>Pools<wbr>Settings from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static BackendPoolsSettings fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the BackendPoolsSettings."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of BackendPoolsSettings from the JsonReader."
  returns:
    description: "An instance of BackendPoolsSettings if the JsonReader was pointing to an instance of it, or null if it\n was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings?alt=com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings&text=BackendPoolsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.sendRecvTimeoutSeconds()"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.sendRecvTimeoutSeconds()"
  name: "sendRecvTimeoutSeconds()"
  nameWithType: "BackendPoolsSettings.sendRecvTimeoutSeconds()"
  summary: "Get the send<wbr>Recv<wbr>Timeout<wbr>Seconds property: Send and receive timeout on forwarding request to the backend."
  syntax: "public Integer sendRecvTimeoutSeconds()"
  desc: "Get the sendRecvTimeoutSeconds property: Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns."
  returns:
    description: "the sendRecvTimeoutSeconds value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "BackendPoolsSettings.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.validate()"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.validate()"
  name: "validate()"
  nameWithType: "BackendPoolsSettings.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.withEnforceCertificateNameCheck(com.azure.resourcemanager.frontdoor.models.EnforceCertificateNameCheckEnabledState)"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.withEnforceCertificateNameCheck(EnforceCertificateNameCheckEnabledState enforceCertificateNameCheck)"
  name: "withEnforceCertificateNameCheck(EnforceCertificateNameCheckEnabledState enforceCertificateNameCheck)"
  nameWithType: "BackendPoolsSettings.withEnforceCertificateNameCheck(EnforceCertificateNameCheckEnabledState enforceCertificateNameCheck)"
  summary: "Set the enforce<wbr>Certificate<wbr>Name<wbr>Check property: Whether to enforce certificate name check on HTTPS requests to all backend pools."
  parameters:
  - description: "the enforceCertificateNameCheck value to set."
    name: "enforceCertificateNameCheck"
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.EnforceCertificateNameCheckEnabledState?alt=com.azure.resourcemanager.frontdoor.models.EnforceCertificateNameCheckEnabledState&text=EnforceCertificateNameCheckEnabledState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public BackendPoolsSettings withEnforceCertificateNameCheck(EnforceCertificateNameCheckEnabledState enforceCertificateNameCheck)"
  desc: "Set the enforceCertificateNameCheck property: Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests."
  returns:
    description: "the BackendPoolsSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings?alt=com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings&text=BackendPoolsSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.withSendRecvTimeoutSeconds(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings.withSendRecvTimeoutSeconds(Integer sendRecvTimeoutSeconds)"
  name: "withSendRecvTimeoutSeconds(Integer sendRecvTimeoutSeconds)"
  nameWithType: "BackendPoolsSettings.withSendRecvTimeoutSeconds(Integer sendRecvTimeoutSeconds)"
  summary: "Set the send<wbr>Recv<wbr>Timeout<wbr>Seconds property: Send and receive timeout on forwarding request to the backend."
  parameters:
  - description: "the sendRecvTimeoutSeconds value to set."
    name: "sendRecvTimeoutSeconds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public BackendPoolsSettings withSendRecvTimeoutSeconds(Integer sendRecvTimeoutSeconds)"
  desc: "Set the sendRecvTimeoutSeconds property: Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns."
  returns:
    description: "the BackendPoolsSettings object itself."
    type: "<xref href=\"com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings?alt=com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings&text=BackendPoolsSettings\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Settings that apply to all backend pools."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings?alt=com.azure.resourcemanager.frontdoor.models.BackendPoolsSettings&text=BackendPoolsSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.frontdoor.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-frontdoor:1.1.0
