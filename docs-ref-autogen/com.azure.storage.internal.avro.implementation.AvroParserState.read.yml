### YamlMime:JavaMember
uid: "com.azure.storage.internal.avro.implementation.AvroParserState.read*"
fullName: "com.azure.storage.internal.avro.implementation.AvroParserState.read"
name: "read"
nameWithType: "AvroParserState.read"
members:
- uid: "com.azure.storage.internal.avro.implementation.AvroParserState.read()"
  fullName: "com.azure.storage.internal.avro.implementation.AvroParserState.read()"
  name: "read()"
  nameWithType: "AvroParserState.read()"
  summary: "Consumes a single byte from the state's internal cache of buffers. Meant for use by AvroSchema objects (specifically ones that represent primitive types, since complex types are just a combination of primitive types)"
  syntax: "public byte read()"
  returns:
    description: "The byte requested."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.internal.avro.implementation.AvroParserState.read(long)"
  fullName: "com.azure.storage.internal.avro.implementation.AvroParserState.read(long size)"
  name: "read(long size)"
  nameWithType: "AvroParserState.read(long size)"
  summary: "Consumes bytes from the state's internal cache of buffers. Meant for use by AvroSchema objects (specifically ones that represent primitive types, since complex types are just a combination of primitive types)"
  parameters:
  - description: "The number of bytes to consume."
    name: "size"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public List<ByteBuffer> read(long size)"
  returns:
    description: "A List of ByteBuffers with the number of bytes requested."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.internal.avro.implementation"
artifact: com.azure:azure-storage-internal-avro:12.0.2
