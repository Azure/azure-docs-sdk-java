### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.createFrom*"
fullName: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.createFrom"
name: "createFrom"
nameWithType: "CosmosParameters.createFrom"
members:
- uid: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.createFrom(java.util.List<com.azure.spring.data.cosmos.repository.query.CosmosParameter>)"
  fullName: "com.azure.spring.data.cosmos.repository.query.CosmosParameters.createFrom(List<CosmosParameter> parameters)"
  name: "createFrom(List<CosmosParameter> parameters)"
  nameWithType: "CosmosParameters.createFrom(List<CosmosParameter> parameters)"
  overridden: "org.springframework.data.repository.query.Parameters.createFrom(java.util.List<T>)"
  parameters:
  - name: "parameters"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameter?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameter&text=CosmosParameter\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "protected CosmosParameters createFrom(List<CosmosParameter> parameters)"
  returns:
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.query.CosmosParameters?alt=com.azure.spring.data.cosmos.repository.query.CosmosParameters&text=CosmosParameters\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.query"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
