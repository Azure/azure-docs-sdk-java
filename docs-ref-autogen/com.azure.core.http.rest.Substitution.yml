### YamlMime:ManagedReference
items:
- uid: "com.azure.core.http.rest.Substitution"
  id: "Substitution"
  parent: "com.azure.core.http.rest"
  children:
  - "com.azure.core.http.rest.Substitution.Substitution(java.lang.String,int,boolean)"
  - "com.azure.core.http.rest.Substitution.getMethodParameterIndex()"
  - "com.azure.core.http.rest.Substitution.getUrlParameterName()"
  - "com.azure.core.http.rest.Substitution.shouldEncode()"
  langs:
  - "java"
  name: "Substitution"
  nameWithType: "Substitution"
  fullName: "com.azure.core.http.rest.Substitution"
  type: "Class"
  package: "com.azure.core.http.rest"
  summary: "A Substitution is a value that can be used to replace placeholder values in a URL. Placeholders look like: \"http://\\{host\\}.com/\\{fileName\\}.html\", where \"\\{host\\}\" and \"\\{fileName\\}\" are the placeholders."
  syntax:
    content: " class Substitution"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.http.rest.Substitution.Substitution(java.lang.String,int,boolean)"
  id: "Substitution(java.lang.String,int,boolean)"
  parent: "com.azure.core.http.rest.Substitution"
  langs:
  - "java"
  name: "Substitution(String urlParameterName, int methodParameterIndex, boolean shouldEncode)"
  nameWithType: "Substitution.Substitution(String urlParameterName, int methodParameterIndex, boolean shouldEncode)"
  fullName: "com.azure.core.http.rest.Substitution.Substitution(String urlParameterName, int methodParameterIndex, boolean shouldEncode)"
  overload: "com.azure.core.http.rest.Substitution.Substitution*"
  type: "Constructor"
  package: "com.azure.core.http.rest"
  summary: "Create a new Substitution."
  syntax:
    content: " Substitution(String urlParameterName, int methodParameterIndex, boolean shouldEncode)"
    parameters:
    - id: "urlParameterName"
      type: "java.lang.String"
      description: "The name that is used between curly quotes as a placeholder in the\n                         target URL."
    - id: "methodParameterIndex"
      type: "int"
      description: "The index of the parameter in the original interface method where\n                             the value for the placeholder is."
    - id: "shouldEncode"
      type: "boolean"
      description: "Whether or not the value from the method's argument should be encoded\n                     when the substitution is taking place."
- uid: "com.azure.core.http.rest.Substitution.getMethodParameterIndex()"
  id: "getMethodParameterIndex()"
  parent: "com.azure.core.http.rest.Substitution"
  langs:
  - "java"
  name: "getMethodParameterIndex()"
  nameWithType: "Substitution.getMethodParameterIndex()"
  fullName: "com.azure.core.http.rest.Substitution.getMethodParameterIndex()"
  overload: "com.azure.core.http.rest.Substitution.getMethodParameterIndex*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the index of the method parameter where the replacement value is."
  syntax:
    content: "public int getMethodParameterIndex()"
    return:
      type: "int"
      description: "The index of the method parameter where the replacement value is."
- uid: "com.azure.core.http.rest.Substitution.getUrlParameterName()"
  id: "getUrlParameterName()"
  parent: "com.azure.core.http.rest.Substitution"
  langs:
  - "java"
  name: "getUrlParameterName()"
  nameWithType: "Substitution.getUrlParameterName()"
  fullName: "com.azure.core.http.rest.Substitution.getUrlParameterName()"
  overload: "com.azure.core.http.rest.Substitution.getUrlParameterName*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get the placeholder's name."
  syntax:
    content: "public String getUrlParameterName()"
    return:
      type: "java.lang.String"
      description: "The name of the placeholder."
- uid: "com.azure.core.http.rest.Substitution.shouldEncode()"
  id: "shouldEncode()"
  parent: "com.azure.core.http.rest.Substitution"
  langs:
  - "java"
  name: "shouldEncode()"
  nameWithType: "Substitution.shouldEncode()"
  fullName: "com.azure.core.http.rest.Substitution.shouldEncode()"
  overload: "com.azure.core.http.rest.Substitution.shouldEncode*"
  type: "Method"
  package: "com.azure.core.http.rest"
  summary: "Get whether or not the replacement value from the method argument needs to be encoded when the substitution is taking place."
  syntax:
    content: "public boolean shouldEncode()"
    return:
      type: "boolean"
      description: "Whether or not the replacement value from the method argument needs to be encoded\n when the substitution is taking place."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.core.http.rest.Substitution.Substitution*"
  name: "Substitution"
  nameWithType: "Substitution.Substitution"
  fullName: "com.azure.core.http.rest.Substitution.Substitution"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.Substitution.getUrlParameterName*"
  name: "getUrlParameterName"
  nameWithType: "Substitution.getUrlParameterName"
  fullName: "com.azure.core.http.rest.Substitution.getUrlParameterName"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.Substitution.getMethodParameterIndex*"
  name: "getMethodParameterIndex"
  nameWithType: "Substitution.getMethodParameterIndex"
  fullName: "com.azure.core.http.rest.Substitution.getMethodParameterIndex"
  package: "com.azure.core.http.rest"
- uid: "com.azure.core.http.rest.Substitution.shouldEncode*"
  name: "shouldEncode"
  nameWithType: "Substitution.shouldEncode"
  fullName: "com.azure.core.http.rest.Substitution.shouldEncode"
  package: "com.azure.core.http.rest"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
