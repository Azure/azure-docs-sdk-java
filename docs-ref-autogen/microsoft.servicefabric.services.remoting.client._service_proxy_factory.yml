### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_factory
  id: _service_proxy_factory
  parent: microsoft.servicefabric.services.remoting.client
  children:
  - microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI)
  - microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)
  href: microsoft.servicefabric.services.remoting.client._service_proxy_factory.yml
  langs:
  - java
  name: ServiceProxyFactory
  nameWithType: ServiceProxyFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
    startLine: 12
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>Specifies the interface for the factory that creates proxies for remote communication to the specified service. </p>"
  syntax:
    content: public interface ServiceProxyFactory
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI)
  id: createServiceProxy(Class<T>,URI)
  parent: microsoft.servicefabric.services.remoting.client._service_proxy_factory
  href: microsoft.servicefabric.services.remoting.client._service_proxy_factory.yml
  langs:
  - java
  name: createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
  nameWithType: ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
  overload: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
    startLine: 28
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; \r\n    </code> that the service implements.</p>\r\n<p></p>"
  syntax:
    content: public public<T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
    parameters:
    - id: serviceInterfaceType
      type: ffb09d2d
      description: <p>Interface type that is being remoted </p>
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the Service. </p>
    return:
      type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
      description: <p>The proxy that implement the interface that is being remoted. The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface. </p>
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)
  id: createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)
  parent: microsoft.servicefabric.services.remoting.client._service_proxy_factory
  href: microsoft.servicefabric.services.remoting.client._service_proxy_factory.yml
  langs:
  - java
  name: createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  nameWithType: ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  overload: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxyFactory.java
    startLine: 57
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; \r\n    </code> that the service implements.</p>\r\n<p></p>"
  syntax:
    content: public public<T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
    parameters:
    - id: serviceInterfaceType
      type: ffb09d2d
      description: <p>Interface type that is being remoted </p>
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the Service. </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client._service_partition_key
      description: <p>The Partition key that determines which service partition is responsible for handling requests from this service proxy. </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client._target_replica_selector
      description: <p>Determines which replica or instance of the service partition the client should connect to. </p>
    - id: listenerName
      type: "26831127"
      description: <p>This parameter is Optional if the service has a single communication listener. The endpoints from the service are of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}. When the service exposes multiple endpoints, this parameter identifies which of those endpoints to use for the remoting communication.</p>
    return:
      type: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
      description: <p>The proxy that implement the interface that is being remoted. The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface. </p>
references:
- uid: ffb09d2d
  spec.java:
  - name: Class<T>
    fullName: Class<T>
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: 21d1468cmicrosoft.servicefabric.services.remoting._service21353812
  spec.java:
  - name: 'public<T extends '
    fullName: 'public<T extends '
  - uid: microsoft.servicefabric.services.remoting._service
    name: Service
    fullName: microsoft.servicefabric.services.remoting.Service
    href: microsoft.servicefabric.services.remoting._service.yml
  - name: '> T'
    fullName: '> T'
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_factory.createServiceProxy*
  name: createServiceProxy
  nameWithType: ServiceProxyFactory.createServiceProxy
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyFactory.createServiceProxy
  package: microsoft.servicefabric.services.remoting.client
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
  name: FabricServiceProxyFactory
  nameWithType: FabricServiceProxyFactory
  fullName: microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory
  type: Class
  summary: <p>Specifies the factory that creates proxies for remote communication to the specified service. </p>
  syntax:
    content: public class FabricServiceProxyFactory implements ServiceProxyFactory
- uid: microsoft.servicefabric.services.remoting._service
  parent: microsoft.servicefabric.services.remoting
  href: microsoft.servicefabric.services.remoting._service.yml
  name: Service
  nameWithType: Service
  fullName: microsoft.servicefabric.services.remoting.Service
  type: Interface
  summary: <p>This is the marker interface for enabling interface Remoting for services. An <xref uid="microsoft.servicefabric.services.remoting.runtime._service_remoting_listener" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener</xref> provides remoting for all interfaces implemented by the service that derive from this interface. The remoted interfaces can be accessed via Proxy on the client side. </p>
  syntax:
    content: public interface Service
- uid: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.createServiceProxy(Class<T>,URI)
  parent: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
  href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
  name: createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
  nameWithType: FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
  fullName: microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
  type: Method
  summary: >-
    <p>Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; 

        </code> that the service implements.</p>

    <p></p>
  syntax:
    content: public <T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri)
    parameters:
    - id: serviceInterfaceType
      type: ffb09d2d
      description: <p>Interface type that is being remoted </p>
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the Service. </p>
    return:
      type: 36136266microsoft.servicefabric.services.remoting._service21353812
      description: <p>The proxy that implement the interface that is being remoted. The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface. </p>
- uid: microsoft.servicefabric.services.remoting.client._service_proxy
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
  name: ServiceProxy
  nameWithType: ServiceProxy
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy
  type: Interface
  summary: <p>This is the base Client side interface for Remoting. The framework provides the Remoting infrastructure for all the service contracts inheriting from IService through ServiceRemotingListener and ServiceProxy. </p>
  syntax:
    content: public interface ServiceProxy
- uid: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.createServiceProxy(Class<T>,URI,ServicePartitionKey,TargetReplicaSelector,String)
  parent: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory
  href: microsoft.servicefabric.services.remoting.client._fabric_service_proxy_factory.yml
  name: createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  nameWithType: FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  fullName: microsoft.servicefabric.services.remoting.client.FabricServiceProxyFactory.createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
  type: Method
  summary: >-
    <p>Creates a proxy to communicate to the specified service using the remoted interface<code>&lt;T&gt; 

        </code> that the service implements.</p>

    <p></p>
  syntax:
    content: public <T extends Service> T createServiceProxy(Class<T> serviceInterfaceType, URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName)
    parameters:
    - id: serviceInterfaceType
      type: ffb09d2d
      description: <p>Interface type that is being remoted </p>
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the Service. </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client._service_partition_key
      description: <p>The Partition key that determines which service partition is responsible for handling requests from this service proxy. </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client._target_replica_selector
      description: <p>Determines which replica or instance of the service partition the client should connect to. </p>
    - id: listenerName
      type: "26831127"
      description: <p>This parameter is Optional if the service has a single communication listener. The endpoints from the service are of the form {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}. When the service exposes multiple endpoints, this parameter identifies which of those endpoints to use for the remoting communication.</p>
    return:
      type: 36136266microsoft.servicefabric.services.remoting._service21353812
      description: <p>The proxy that implement the interface that is being remoted. The returned object also implement <xref uid="microsoft.servicefabric.services.remoting.client._service_proxy" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.client.ServiceProxy</xref> interface. </p>
- uid: microsoft.servicefabric.services.client._service_partition_key
  parent: microsoft.servicefabric.services.client
  href: microsoft.servicefabric.services.client._service_partition_key.yml
  name: ServicePartitionKey
  nameWithType: ServicePartitionKey
  fullName: microsoft.servicefabric.services.client.ServicePartitionKey
  type: Class
  summary: <p>Defines a key to address a service partition. </p>
  syntax:
    content: public class ServicePartitionKey
- uid: microsoft.servicefabric.services.communication.client._target_replica_selector
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._target_replica_selector.yml
  name: TargetReplicaSelector
  nameWithType: TargetReplicaSelector
  fullName: microsoft.servicefabric.services.communication.client.TargetReplicaSelector
  type: Enum
  summary: <p>This enumeration specifies how the target replica or instance should be chosen when creating a communication channel for a particular partition. </p>
  syntax:
    content: public enum TargetReplicaSelector
