### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob"
  id: "EncryptedBlob"
  parent: "com.azure.storage.blob.specialized.cryptography"
  children:
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.EncryptedBlob(com.azure.storage.blob.specialized.cryptography.EncryptionData,reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getCiphertextFlux()"
  - "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getEncryptionData()"
  langs:
  - "java"
  name: "EncryptedBlob"
  nameWithType: "EncryptedBlob"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob"
  type: "Class"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: "final class EncryptedBlob"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.EncryptedBlob(com.azure.storage.blob.specialized.cryptography.EncryptionData,reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  id: "EncryptedBlob(com.azure.storage.blob.specialized.cryptography.EncryptionData,reactor.core.publisher.Flux<java.nio.ByteBuffer>)"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob"
  langs:
  - "java"
  name: "EncryptedBlob(EncryptionData encryptionData, Flux<ByteBuffer> ciphertextFlux)"
  nameWithType: "EncryptedBlob.EncryptedBlob(EncryptionData encryptionData, Flux<ByteBuffer> ciphertextFlux)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.EncryptedBlob(EncryptionData encryptionData, Flux<ByteBuffer> ciphertextFlux)"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.EncryptedBlob*"
  type: "Constructor"
  package: "com.azure.storage.blob.specialized.cryptography"
  summary: "Creates a new EncryptedBlob with given EncryptedData and Flowable ByteBuffer"
  syntax:
    content: " EncryptedBlob(EncryptionData encryptionData, Flux<ByteBuffer> ciphertextFlux)"
    parameters:
    - id: "encryptionData"
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
      description: "A <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptionData\" data-throw-if-not-resolved=\"false\">EncryptionData</xref>"
    - id: "ciphertextFlux"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "A Flowable ByteBuffer"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getCiphertextFlux()"
  id: "getCiphertextFlux()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob"
  langs:
  - "java"
  name: "getCiphertextFlux()"
  nameWithType: "EncryptedBlob.getCiphertextFlux()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getCiphertextFlux()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getCiphertextFlux*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " Flux<ByteBuffer> getCiphertextFlux()"
    return:
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "This EncryptedBlob's Flowable ByteBuffer."
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getEncryptionData()"
  id: "getEncryptionData()"
  parent: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob"
  langs:
  - "java"
  name: "getEncryptionData()"
  nameWithType: "EncryptedBlob.getEncryptionData()"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getEncryptionData()"
  overload: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getEncryptionData*"
  type: "Method"
  package: "com.azure.storage.blob.specialized.cryptography"
  syntax:
    content: " EncryptionData getEncryptionData()"
    return:
      type: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
      description: "This EncryptedBlob's EncryptedData."
references:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
  name: "EncryptionData"
  nameWithType: "EncryptionData"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptionData"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.EncryptedBlob*"
  name: "EncryptedBlob"
  nameWithType: "EncryptedBlob.EncryptedBlob"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.EncryptedBlob"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getEncryptionData*"
  name: "getEncryptionData"
  nameWithType: "EncryptedBlob.getEncryptionData"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getEncryptionData"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getCiphertextFlux*"
  name: "getCiphertextFlux"
  nameWithType: "EncryptedBlob.getCiphertextFlux"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlob.getCiphertextFlux"
  package: "com.azure.storage.blob.specialized.cryptography"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
