### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener)
  name: ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener)
  nameWithType: ServiceInstanceListener.ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener)
  parameters:
  - name: createCommunicationListener
    type: Function&lt;<xref href="microsoft.servicefabric.services.runtime.StatelessServiceContext?alt=microsoft.servicefabric.services.runtime.StatelessServiceContext&text=StatelessServiceContext" data-throw-if-not-resolved="False"/>, <xref href="microsoft.servicefabric.services.communication.runtime.CommunicationListener?alt=microsoft.servicefabric.services.communication.runtime.CommunicationListener&text=CommunicationListener" data-throw-if-not-resolved="False"/>&gt;
  syntax: public ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener)
  uid: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener>)
- fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener, String name)
  name: ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener, String name)
  nameWithType: ServiceInstanceListener.ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener, String name)
  parameters:
  - description: <p>Factory method for creating the communication listener </p>
    name: createCommunicationListener
    type: Function&lt;<xref href="microsoft.servicefabric.services.runtime.StatelessServiceContext?alt=microsoft.servicefabric.services.runtime.StatelessServiceContext&text=StatelessServiceContext" data-throw-if-not-resolved="False"/>, <xref href="microsoft.servicefabric.services.communication.runtime.CommunicationListener?alt=microsoft.servicefabric.services.communication.runtime.CommunicationListener&text=CommunicationListener" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>Name of the communication listener. This parameter is optional, if the service has only one communication listener </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates the ServiceInstanceListener</p>

    <p></p>
  syntax: public ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener> createCommunicationListener, String name)
  uid: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.ServiceInstanceListener(Function<StatelessServiceContext, CommunicationListener>,String)
fields:
- field:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.defaultName
  name: defaultName
  nameWithType: ServiceInstanceListener.defaultName
  summary: <p>The default name used when the ServiceInstanceListener is not given a name. </p>
  syntax: public static final String defaultName= ""
  uid: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.defaultName
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.getCommunicationListenerFactory()
  name: getCommunicationListenerFactory()
  nameWithType: ServiceInstanceListener.getCommunicationListenerFactory()
  returns:
    description: <p>Factory method </p>
    type: Function&lt;<xref href="microsoft.servicefabric.services.runtime.StatelessServiceContext?alt=microsoft.servicefabric.services.runtime.StatelessServiceContext&text=StatelessServiceContext" data-throw-if-not-resolved="False"/>, <xref href="microsoft.servicefabric.services.communication.runtime.CommunicationListener?alt=microsoft.servicefabric.services.communication.runtime.CommunicationListener&text=CommunicationListener" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Factory method for creating the communication listener.</p>

    <p></p>
  syntax: public Function<StatelessServiceContext, CommunicationListener> getCommunicationListenerFactory()
  uid: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.getCommunicationListenerFactory()
- fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.getName()
  name: getName()
  nameWithType: ServiceInstanceListener.getName()
  returns:
    description: <p>Name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Name of the communication listener.</p>

    <p></p>
  syntax: public String getName()
  uid: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener.getName()
nameWithType: ServiceInstanceListener
syntax: public class ServiceInstanceListener
type: class
uid: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener
fullName: microsoft.servicefabric.services.communication.runtime.ServiceInstanceListener
name: ServiceInstanceListener
package: microsoft.servicefabric.services.communication.runtime
summary: <p>Represents the communication listener and its properties for a Stateless Service Instance. Endpoints given out by the communication listener are associated with name of the communication listener. </p>
metadata: {}
