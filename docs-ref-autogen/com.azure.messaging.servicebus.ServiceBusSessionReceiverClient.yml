### YamlMime:JavaType
uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient"
fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient"
name: "ServiceBusSessionReceiverClient"
nameWithType: "ServiceBusSessionReceiverClient"
summary: "This **synchronous** session receiver client is used to acquire session locks from a queue or topic and create <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> instances that are tied to the locked sessions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServiceBusSessionReceiverClient implements AutoCloseable"
methods:
- uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptNextSession()"
  fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptNextSession()"
  name: "acceptNextSession()"
  nameWithType: "ServiceBusSessionReceiverClient.acceptNextSession()"
  summary: "Acquires a session lock for the next available session and creates a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session."
  syntax: "public ServiceBusReceiverClient acceptNextSession()"
  desc: "Acquires a session lock for the next available session and creates a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session. It will wait until a session is available if no one is available immediately."
  returns:
    description: "A <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> that is tied to the available session."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceiverClient?alt=com.azure.messaging.servicebus.ServiceBusReceiverClient&text=ServiceBusReceiverClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptSession(java.lang.String)"
  fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptSession(String sessionId)"
  name: "acceptSession(String sessionId)"
  nameWithType: "ServiceBusSessionReceiverClient.acceptSession(String sessionId)"
  summary: "Acquires a session lock for `sessionId` and create a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session."
  parameters:
  - description: "The session id."
    name: "sessionId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServiceBusReceiverClient acceptSession(String sessionId)"
  desc: "Acquires a session lock for `sessionId` and create a <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> to receive messages from the session. If the session is already locked by another client, an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AmqpException\"></xref> is thrown immediately."
  returns:
    description: "A <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> that is tied to the specified session."
    type: "<xref href=\"com.azure.messaging.servicebus.ServiceBusReceiverClient?alt=com.azure.messaging.servicebus.ServiceBusReceiverClient&text=ServiceBusReceiverClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.close()"
  fullName: "com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.close()"
  name: "close()"
  nameWithType: "ServiceBusSessionReceiverClient.close()"
  syntax: "public void close()"
type: "class"
desc: "This **synchronous** session receiver client is used to acquire session locks from a queue or topic and create <xref uid=\"com.azure.messaging.servicebus.ServiceBusReceiverClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceBusReceiverClient\"></xref> instances that are tied to the locked sessions.\n\n**Receive messages from a specific session**\n\nUse <xref uid=\"com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptSession(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#acceptSession(String)\"></xref> to acquire the lock of a session if you know the session id.\n\n```java\n// The connectionString/sessionQueueName must be set by the application. The 'connectionString' format is shown below.\n // \"Endpoint={fully-qualified-namespace};SharedAccessKeyName={policy-name};SharedAccessKey={key}\"\n ServiceBusSessionReceiverClient sessionReceiver = new ServiceBusClientBuilder()\n     .connectionString(connectionString)\n     .sessionReceiver()\n     .queueName(sessionQueueName)\n     .buildClient();\n ServiceBusReceiverClient receiver = sessionReceiver.acceptSession(\"<< my-session-id >>\");\n\n // Use the receiver and finally close it along with the sessionReceiver.\n receiver.close();\n sessionReceiver.close();\n```\n\n**Receive messages from the first available session**\n\nUse <xref uid=\"com.azure.messaging.servicebus.ServiceBusSessionReceiverClient.acceptNextSession()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#acceptNextSession()\"></xref> to acquire the lock of the next available session without specifying the session id.\n\n```java\n// The connectionString/sessionQueueName must be set by the application. The 'connectionString' format is shown below.\n // \"Endpoint={fully-qualified-namespace};SharedAccessKeyName={policy-name};SharedAccessKey={key}\"\n ServiceBusSessionReceiverClient sessionReceiver = new ServiceBusClientBuilder()\n     .connectionString(\n         \"Endpoint={fully-qualified-namespace};SharedAccessKeyName={policy-name};SharedAccessKey={key}\")\n     .sessionReceiver()\n     .queueName(\"<< QUEUE NAME >>\")\n     .buildClient();\n ServiceBusReceiverClient receiver = sessionReceiver.acceptNextSession();\n\n // Use the receiver and finally close it along with the sessionReceiver.\n receiver.close();\n sessionReceiver.close();\n```"
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.messaging.servicebus"
artifact: com.azure:azure-messaging-servicebus:7.10.1
