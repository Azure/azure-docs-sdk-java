### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionUnmanaged
  id: DefinitionUnmanaged
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionUnmanaged.yml
  langs:
  - java
  name: VirtualMachineScaleSet.DefinitionUnmanaged
  nameWithType: VirtualMachineScaleSet.DefinitionUnmanaged
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionUnmanaged
  type: Interface
  source:
    remote:
      path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachineScaleSet.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachineScaleSet.java
    startLine: 392
  package: com.microsoft.azure.management.compute
  summary: "<p>The entirety of the unmanaged disk based virtual machine scale set definition. </p>"
  syntax:
    content: public interface DefinitionUnmanaged extends VirtualMachineScaleSet.DefinitionShared,VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged,VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged,VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged,VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged,VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged,VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged,VirtualMachineScaleSet.DefinitionStages.WithUnmanagedCreate
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithExtension.defineNewExtension(String)
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged.withAdminPassword(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged.withAdminUsername(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withAutoUpdate()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCapacity.withCapacity(int)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithComputerNamePrefix.withComputerNamePrefix(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCustomData.withCustomData(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withExistingPrimaryInternalLoadBalancer(LoadBalancer)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withExistingPrimaryInternetFacingLoadBalancer(LoadBalancer)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet.withExistingPrimaryNetworkSubnet(Network,String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestLinuxImage(String,String,String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestWindowsImage(String,String,String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLinuxCustomImage(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity(int)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(Creatable<StorageAccount>)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskCaching(CachingTypes)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskName(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutAutoUpdate()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withoutOverProvisioning()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withoutPrimaryInternalLoadBalancer()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withoutPrimaryInternetFacingLoadBalancer()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutVMAgent()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvision(boolean)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvisioning()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularLinuxImage(KnownLinuxVirtualMachineImage)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularWindowsImage(KnownWindowsVirtualMachineImage)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool.withPrimaryInternalLoadBalancerBackends(String...)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool.withPrimaryInternalLoadBalancerInboundNatPools(String...)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool.withPrimaryInternetFacingLoadBalancerBackends(String...)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool.withPrimaryInternetFacingLoadBalancerInboundNatPools(String...)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withRootPassword(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged.withRootUsername(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSkuTypes)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSku)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificLinuxImageVersion(ImageReference)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificWindowsImageVersion(ImageReference)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withSsh(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged.withSsh(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredLinuxImage(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredWindowsImage(String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withTimeZone(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUpgradePolicy.withUpgradeMode(UpgradeMode)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withVMAgent()
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withWindowsCustomImage(String)
  - com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withWinRM(WinRMListener)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: "<p>Execute the create request.</p>\r\n<p></p>"
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithExtension.defineNewExtension(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithExtension
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithExtension.yml
  name: defineNewExtension(String name)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithExtension.defineNewExtension(String name)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithExtension.defineNewExtension(String name)
  type: Method
  summary: "<p>Begins the definition of an extension reference to be attached to the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public VirtualMachineScaleSetExtension.DefinitionStages.Blank<WithCreate> defineNewExtension(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the reference name for the extension </p>
    return:
      type: 3763768acom.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreatea08ddfce
      description: <p>the first stage of the extension reference definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged.withAdminPassword(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged.yml
  name: withAdminPassword(String adminPassword)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged.withAdminPassword(String adminPassword)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged.withAdminPassword(String adminPassword)
  type: Method
  summary: "<p>Specifies the administrator password for the Windows virtual machine.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsCreateUnmanaged withAdminPassword(String adminPassword)
    parameters:
    - id: adminPassword
      type: "26831127"
      description: <p>the administrator password. This must follow the criteria for Azure Windows VM password. </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
      description: <p>the stage representing creatable Windows VM definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged.withAdminUsername(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged.yml
  name: withAdminUsername(String adminUserName)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged.withAdminUsername(String adminUserName)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged.withAdminUsername(String adminUserName)
  type: Method
  summary: "<p>Specifies the administrator user name for the Windows virtual machine.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsAdminPasswordUnmanaged withAdminUsername(String adminUserName)
    parameters:
    - id: adminUserName
      type: "26831127"
      description: <p>the Windows administrator user name. This must follow the required naming convention for Windows user name. </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged
      description: <p>the stage representing creatable Linux VM definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withAutoUpdate()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.yml
  name: withAutoUpdate()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withAutoUpdate()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withAutoUpdate()
  type: Method
  summary: "<p>Enables automatic updates.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsCreateUnmanaged withAutoUpdate()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCapacity.withCapacity(int)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCapacity
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCapacity.yml
  name: withCapacity(int capacity)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithCapacity.withCapacity(int capacity)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCapacity.withCapacity(int capacity)
  type: Method
  summary: "<p>Specifies the maximum number of virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withCapacity(int capacity)
    parameters:
    - id: capacity
      type: f75371fa
      description: <p>number of virtual machines </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithComputerNamePrefix.withComputerNamePrefix(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithComputerNamePrefix
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithComputerNamePrefix.yml
  name: withComputerNamePrefix(String namePrefix)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithComputerNamePrefix.withComputerNamePrefix(String namePrefix)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithComputerNamePrefix.withComputerNamePrefix(String namePrefix)
  type: Method
  summary: "<p>Specifies the name prefix to use for auto-generating the names for the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withComputerNamePrefix(String namePrefix)
    parameters:
    - id: namePrefix
      type: "26831127"
      description: <p>the prefix for the auto-generated names of the virtual machines in the scale set </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCustomData.withCustomData(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCustomData
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCustomData.yml
  name: withCustomData(String base64EncodedCustomData)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithCustomData.withCustomData(String base64EncodedCustomData)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCustomData.withCustomData(String base64EncodedCustomData)
  type: Method
  summary: "<p>Specifies the custom data for the virtual machine scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withCustomData(String base64EncodedCustomData)
    parameters:
    - id: base64EncodedCustomData
      type: "26831127"
      description: <p>the base64 encoded custom data </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage in the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withExistingPrimaryInternalLoadBalancer(LoadBalancer)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.yml
  name: withExistingPrimaryInternalLoadBalancer(LoadBalancer loadBalancer)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withExistingPrimaryInternalLoadBalancer(LoadBalancer loadBalancer)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withExistingPrimaryInternalLoadBalancer(LoadBalancer loadBalancer)
  type: Method
  summary: "<p>Specifies the internal load balancer whose backends and/or NAT pools can be assigned to the primary network interface of the virtual machines in the scale set. </p>\r\n<p>By default all the backends and inbound NAT pools of the load balancer will be associated with the primary network interface of the virtual machines in the scale set, unless subset of them is selected in the next stages. </p>\r\n<p></p>"
  syntax:
    content: public WithInternalLoadBalancerBackendOrNatPool withExistingPrimaryInternalLoadBalancer(LoadBalancer loadBalancer)
    parameters:
    - id: loadBalancer
      type: com.microsoft.azure.management.network.LoadBalancer
      description: <p>an existing internal load balancer </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withExistingPrimaryInternetFacingLoadBalancer(LoadBalancer)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.yml
  name: withExistingPrimaryInternetFacingLoadBalancer(LoadBalancer loadBalancer)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withExistingPrimaryInternetFacingLoadBalancer(LoadBalancer loadBalancer)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withExistingPrimaryInternetFacingLoadBalancer(LoadBalancer loadBalancer)
  type: Method
  summary: "<p>Specifies an Internet-facing load balancer whose backends and/or NAT pools can be assigned to the primary network interfaces of the virtual machines in the scale set. </p>\r\n<p>By default, all the backends and inbound NAT pools of the load balancer will be associated with the primary network interface of the scale set virtual machines. </p>\r\n<p></p>"
  syntax:
    content: public WithPrimaryInternetFacingLoadBalancerBackendOrNatPool withExistingPrimaryInternetFacingLoadBalancer(LoadBalancer loadBalancer)
    parameters:
    - id: loadBalancer
      type: com.microsoft.azure.management.network.LoadBalancer
      description: <p>an existing Internet-facing load balancer </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet.withExistingPrimaryNetworkSubnet(Network,String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet.yml
  name: withExistingPrimaryNetworkSubnet(Network network, String subnetName)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet.withExistingPrimaryNetworkSubnet(Network network, String subnetName)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet.withExistingPrimaryNetworkSubnet(Network network, String subnetName)
  type: Method
  summary: "<p>Associate an existing virtual network subnet with the primary network interface of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithPrimaryInternetFacingLoadBalancer withExistingPrimaryNetworkSubnet(Network network, String subnetName)
    parameters:
    - id: network
      type: com.microsoft.azure.management.network.Network
      description: <p>an existing virtual network </p>
    - id: subnetName
      type: "26831127"
      description: <p>the subnet name </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.yml
  name: withExistingStorageAccount(StorageAccount storageAccount)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  type: Method
  summary: "<p>Specifies an existing storage account for the OS and data disk VHDs of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withExistingStorageAccount(StorageAccount storageAccount)
    parameters:
    - id: storageAccount
      type: com.microsoft.azure.management.storage.StorageAccount
      description: <p>an existing storage account </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage in the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestLinuxImage(String,String,String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withLatestLinuxImage(String publisher, String offer, String sku)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestLinuxImage(String publisher, String offer, String sku)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestLinuxImage(String publisher, String offer, String sku)
  type: Method
  summary: "<p>Specifies that the latest version of a marketplace Linux image should be used.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxRootUsernameManagedOrUnmanaged withLatestLinuxImage(String publisher, String offer, String sku)
    parameters:
    - id: publisher
      type: "26831127"
      description: <p>the publisher of the image </p>
    - id: offer
      type: "26831127"
      description: <p>the offer of the image </p>
    - id: sku
      type: "26831127"
      description: <p>the SKU of the image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestWindowsImage(String,String,String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withLatestWindowsImage(String publisher, String offer, String sku)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestWindowsImage(String publisher, String offer, String sku)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLatestWindowsImage(String publisher, String offer, String sku)
  type: Method
  summary: "<p>Specifies that the latest version of the specified marketplace Windows image should be used.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsAdminUsernameManagedOrUnmanaged withLatestWindowsImage(String publisher, String offer, String sku)
    parameters:
    - id: publisher
      type: "26831127"
      description: <p>specifies the publisher of the image </p>
    - id: offer
      type: "26831127"
      description: <p>specifies the offer of the image </p>
    - id: sku
      type: "26831127"
      description: <p>specifies the SKU of the image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLinuxCustomImage(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withLinuxCustomImage(String customImageId)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withLinuxCustomImage(String customImageId)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withLinuxCustomImage(String customImageId)
  type: Method
  summary: "<p>Specifies the ID of a Linux custom image to be used.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxRootUsernameManaged withLinuxCustomImage(String customImageId)
    parameters:
    - id: customImageId
      type: "26831127"
      description: <p>the resource ID of the custom image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.yml
  name: withManagedServiceIdentity()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity()
  type: Method
  summary: "<p>Specifies that Managed Service Identity needs to be enabled in the virtual machine scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithRoleAndScopeOrCreate withManagedServiceIdentity()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithRoleAndScopeOrCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity(int)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.yml
  name: withManagedServiceIdentity(int tokenPort)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity(int tokenPort)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithManagedServiceIdentity.withManagedServiceIdentity(int tokenPort)
  type: Method
  summary: "<p>Specifies that Managed Service Identity needs to be enabled in the virtual machine scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithRoleAndScopeOrCreate withManagedServiceIdentity(int tokenPort)
    parameters:
    - id: tokenPort
      type: f75371fa
      description: <p>the port on the virtual machine scale set instance where access token is available </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithRoleAndScopeOrCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.yml
  name: withNewStorageAccount(String name)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(String name)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(String name)
  type: Method
  summary: "<p>Specifies a new storage account for the OS and data disk VHDs of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withNewStorageAccount(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the name of the storage account </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(Creatable<StorageAccount>)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.yml
  name: withNewStorageAccount(Creatable<StorageAccount> creatable)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(Creatable<StorageAccount> creatable)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithStorageAccount.withNewStorageAccount(Creatable<StorageAccount> creatable)
  type: Method
  summary: "<p>Specifies a new storage account for the OS and data disk VHDs of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withNewStorageAccount(Creatable<StorageAccount> creatable)
    parameters:
    - id: creatable
      type: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.storage.StorageAccounta08ddfce
      description: <p>the storage account definition in a creatable stage </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage in the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskCaching(CachingTypes)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.yml
  name: withOSDiskCaching(CachingTypes cachingType)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskCaching(CachingTypes cachingType)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskCaching(CachingTypes cachingType)
  type: Method
  summary: "<p>Specifies the caching type for the operating system disk.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withOSDiskCaching(CachingTypes cachingType)
    parameters:
    - id: cachingType
      type: com.microsoft.azure.management.compute.CachingTypes
      description: <p>the caching type </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskName(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.yml
  name: withOSDiskName(String name)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskName(String name)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOSDiskSettings.withOSDiskName(String name)
  type: Method
  summary: "<p>Specifies the name for the OS disk.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withOSDiskName(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the OS disk name </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutAutoUpdate()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.yml
  name: withoutAutoUpdate()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutAutoUpdate()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutAutoUpdate()
  type: Method
  summary: "<p>Disables automatic updates.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsCreateUnmanaged withoutAutoUpdate()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withoutOverProvisioning()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.yml
  name: withoutOverProvisioning()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withoutOverProvisioning()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withoutOverProvisioning()
  type: Method
  summary: "<p>Disables over-provisioning of virtual machines.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withoutOverProvisioning()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withoutPrimaryInternalLoadBalancer()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.yml
  name: withoutPrimaryInternalLoadBalancer()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withoutPrimaryInternalLoadBalancer()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer.withoutPrimaryInternalLoadBalancer()
  type: Method
  summary: "<p>Specifies that no internal load balancer should be associated with the primary network interfaces of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithOS withoutPrimaryInternalLoadBalancer()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withoutPrimaryInternetFacingLoadBalancer()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.yml
  name: withoutPrimaryInternetFacingLoadBalancer()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withoutPrimaryInternetFacingLoadBalancer()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer.withoutPrimaryInternetFacingLoadBalancer()
  type: Method
  summary: "<p>Specifies that no public load balancer should be associated with the virtual machine scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithPrimaryInternalLoadBalancer withoutPrimaryInternetFacingLoadBalancer()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutVMAgent()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.yml
  name: withoutVMAgent()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutVMAgent()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withoutVMAgent()
  type: Method
  summary: "<p>Disables the VM agent.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsCreateUnmanaged withoutVMAgent()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvision(boolean)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.yml
  name: withOverProvision(boolean enabled)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvision(boolean enabled)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvision(boolean enabled)
  type: Method
  summary: "<p>Enables or disables over-provisioning of virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withOverProvision(boolean enabled)
    parameters:
    - id: enabled
      type: 4fc6e284
      description: <p>true if enabling over-0provisioning of virtual machines in the scale set, otherwise false </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvisioning()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.yml
  name: withOverProvisioning()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvisioning()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOverProvision.withOverProvisioning()
  type: Method
  summary: "<p>Enables over-provisioning of virtual machines.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withOverProvisioning()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularLinuxImage(KnownLinuxVirtualMachineImage)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
  type: Method
  summary: "<p>Specifies a known marketplace Linux image used as the virtual machine's operating system.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxRootUsernameManagedOrUnmanaged withPopularLinuxImage(KnownLinuxVirtualMachineImage knownImage)
    parameters:
    - id: knownImage
      type: com.microsoft.azure.management.compute.KnownLinuxVirtualMachineImage
      description: <p>a known market-place image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularWindowsImage(KnownWindowsVirtualMachineImage)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
  type: Method
  summary: "<p>Specifies a known marketplace Windows image used as the operating system for the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsAdminUsernameManagedOrUnmanaged withPopularWindowsImage(KnownWindowsVirtualMachineImage knownImage)
    parameters:
    - id: knownImage
      type: com.microsoft.azure.management.compute.KnownWindowsVirtualMachineImage
      description: <p>a known market-place image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool.withPrimaryInternalLoadBalancerBackends(String...)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool.yml
  name: withPrimaryInternalLoadBalancerBackends(String...backendNames)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool.withPrimaryInternalLoadBalancerBackends(String...backendNames)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool.withPrimaryInternalLoadBalancerBackends(String...backendNames)
  type: Method
  summary: "<p>Associates the specified backends of the selected load balancer with the primary network interface of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithInternalInternalLoadBalancerNatPool withPrimaryInternalLoadBalancerBackends(String...backendNames)
    parameters:
    - id: backendNames
      type: 04d2b762
      description: <p>names of existing backends in the selected load balancer </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool.withPrimaryInternalLoadBalancerInboundNatPools(String...)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool.yml
  name: withPrimaryInternalLoadBalancerInboundNatPools(String...natPoolNames)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool.withPrimaryInternalLoadBalancerInboundNatPools(String...natPoolNames)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool.withPrimaryInternalLoadBalancerInboundNatPools(String...natPoolNames)
  type: Method
  summary: "<p>Associate internal load balancer inbound NAT pools with the the primary network interface of the scale set virtual machine.</p>\r\n<p></p>"
  syntax:
    content: public WithOS withPrimaryInternalLoadBalancerInboundNatPools(String...natPoolNames)
    parameters:
    - id: natPoolNames
      type: 04d2b762
      description: <p>inbound NAT pool names </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool.withPrimaryInternetFacingLoadBalancerBackends(String...)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool.yml
  name: withPrimaryInternetFacingLoadBalancerBackends(String...backendNames)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool.withPrimaryInternetFacingLoadBalancerBackends(String...backendNames)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool.withPrimaryInternetFacingLoadBalancerBackends(String...backendNames)
  type: Method
  summary: "<p>Associates the specified backends of the selected load balancer with the primary network interface of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithPrimaryInternetFacingLoadBalancerNatPool withPrimaryInternetFacingLoadBalancerBackends(String...backendNames)
    parameters:
    - id: backendNames
      type: 04d2b762
      description: <p>the names of existing backends in the selected load balancer </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool.withPrimaryInternetFacingLoadBalancerInboundNatPools(String...)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool.yml
  name: withPrimaryInternetFacingLoadBalancerInboundNatPools(String...natPoolNames)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool.withPrimaryInternetFacingLoadBalancerInboundNatPools(String...natPoolNames)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool.withPrimaryInternetFacingLoadBalancerInboundNatPools(String...natPoolNames)
  type: Method
  summary: "<p>Associates the specified inbound NAT pools of the selected internal load balancer with the primary network interface of the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithPrimaryInternalLoadBalancer withPrimaryInternetFacingLoadBalancerInboundNatPools(String...natPoolNames)
    parameters:
    - id: natPoolNames
      type: 04d2b762
      description: <p>inbound NAT pools names existing on the selected load balancer </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withRootPassword(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.yml
  name: withRootPassword(String rootPassword)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withRootPassword(String rootPassword)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withRootPassword(String rootPassword)
  type: Method
  summary: "<p>Specifies the SSH root password for the Linux virtual machine.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxCreateUnmanaged withRootPassword(String rootPassword)
    parameters:
    - id: rootPassword
      type: "26831127"
      description: <p>a password following the complexity criteria for Azure Linux VM passwords </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged.withRootUsername(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged.yml
  name: withRootUsername(String rootUserName)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged.withRootUsername(String rootUserName)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged.withRootUsername(String rootUserName)
  type: Method
  summary: "<p>Specifies the SSH root user name for the Linux virtual machine.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxRootPasswordOrPublicKeyUnmanaged withRootUsername(String rootUserName)
    parameters:
    - id: rootUserName
      type: "26831127"
      description: <p>a root user name following the required naming convention for Linux user names </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSkuTypes)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.yml
  name: withSku(VirtualMachineScaleSetSkuTypes skuType)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSkuTypes skuType)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSkuTypes skuType)
  type: Method
  summary: "<p>Specifies the SKU for the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithNetworkSubnet withSku(VirtualMachineScaleSetSkuTypes skuType)
    parameters:
    - id: skuType
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSetSkuTypes
      description: <p>the SKU type </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSku)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.yml
  name: withSku(VirtualMachineScaleSetSku sku)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSku sku)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithSku.withSku(VirtualMachineScaleSetSku sku)
  type: Method
  summary: "<p>Specifies the SKU for the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithNetworkSubnet withSku(VirtualMachineScaleSetSku sku)
    parameters:
    - id: sku
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSetSku
      description: <p>a SKU from the list of available sizes for the virtual machines in this scale set </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificLinuxImageVersion(ImageReference)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withSpecificLinuxImageVersion(ImageReference imageReference)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificLinuxImageVersion(ImageReference imageReference)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificLinuxImageVersion(ImageReference imageReference)
  type: Method
  summary: "<p>Specifies the specific version of a market-place Linux image that should be used.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxRootUsernameManagedOrUnmanaged withSpecificLinuxImageVersion(ImageReference imageReference)
    parameters:
    - id: imageReference
      type: com.microsoft.azure.management.compute.ImageReference
      description: <p>describes the publisher, offer, SKU and version of the market-place image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameManagedOrUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificWindowsImageVersion(ImageReference)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withSpecificWindowsImageVersion(ImageReference imageReference)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificWindowsImageVersion(ImageReference imageReference)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withSpecificWindowsImageVersion(ImageReference imageReference)
  type: Method
  summary: "<p>Specifies the specific version of a marketplace Windows image needs to be used.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsAdminUsernameManagedOrUnmanaged withSpecificWindowsImageVersion(ImageReference imageReference)
    parameters:
    - id: imageReference
      type: com.microsoft.azure.management.compute.ImageReference
      description: <p>describes publisher, offer, SKU and version of the marketplace image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManagedOrUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withSsh(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.yml
  name: withSsh(String publicKey)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withSsh(String publicKey)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.withSsh(String publicKey)
  type: Method
  summary: "<p>Specifies the SSH public key. </p>\r\n<p>Each call to this method adds the given public key to the list of VM's public keys.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxCreateUnmanaged withSsh(String publicKey)
    parameters:
    - id: publicKey
      type: "26831127"
      description: <p>the SSH public key in PEM format. </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged.withSsh(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged.yml
  name: withSsh(String publicKey)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged.withSsh(String publicKey)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged.withSsh(String publicKey)
  type: Method
  summary: "<p>Specifies the SSH public key. </p>\r\n<p>Each call to this method adds the given public key to the list of VM's public keys.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxCreateUnmanaged withSsh(String publicKey)
    parameters:
    - id: publicKey
      type: "26831127"
      description: <p>an SSH public key in the PEM format. </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredLinuxImage(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withStoredLinuxImage(String imageUrl)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredLinuxImage(String imageUrl)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredLinuxImage(String imageUrl)
  type: Method
  summary: "<p>Specifies the user (custom) Linux image used as the virtual machine's operating system.</p>\r\n<p></p>"
  syntax:
    content: public WithLinuxRootUsernameUnmanaged withStoredLinuxImage(String imageUrl)
    parameters:
    - id: imageUrl
      type: "26831127"
      description: <p>the URL the the VHD </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredWindowsImage(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withStoredWindowsImage(String imageUrl)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredWindowsImage(String imageUrl)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withStoredWindowsImage(String imageUrl)
  type: Method
  summary: "<p>Specifies the user (custom) Windows image to be used as the operating system for the virtual machines in the scale set.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsAdminUsernameUnmanaged withStoredWindowsImage(String imageUrl)
    parameters:
    - id: imageUrl
      type: "26831127"
      description: <p>the URL of the VHD </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withTimeZone(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.yml
  name: withTimeZone(String timeZone)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withTimeZone(String timeZone)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withTimeZone(String timeZone)
  type: Method
  summary: "<p>Specifies the time zone for the virtual machines to use.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsCreateUnmanaged withTimeZone(String timeZone)
    parameters:
    - id: timeZone
      type: "26831127"
      description: <p>a time zone </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUpgradePolicy.withUpgradeMode(UpgradeMode)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUpgradePolicy
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUpgradePolicy.yml
  name: withUpgradeMode(UpgradeMode upgradeMode)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithUpgradePolicy.withUpgradeMode(UpgradeMode upgradeMode)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUpgradePolicy.withUpgradeMode(UpgradeMode upgradeMode)
  type: Method
  summary: "<p>Specifies the virtual machine scale set upgrade policy mode.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withUpgradeMode(UpgradeMode upgradeMode)
    parameters:
    - id: upgradeMode
      type: com.microsoft.azure.management.compute.UpgradeMode
      description: <p>an upgrade policy mode </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withVMAgent()
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.yml
  name: withVMAgent()
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withVMAgent()
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withVMAgent()
  type: Method
  summary: "<p>Enables the VM agent.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsCreateUnmanaged withVMAgent()
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withWindowsCustomImage(String)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.yml
  name: withWindowsCustomImage(String customImageId)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithOS.withWindowsCustomImage(String customImageId)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithOS.withWindowsCustomImage(String customImageId)
  type: Method
  summary: "<p>Specifies the ID of a Windows custom image to be used.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsAdminUsernameManaged withWindowsCustomImage(String customImageId)
    parameters:
    - id: customImageId
      type: "26831127"
      description: <p>the resource ID of the custom image </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameManaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withWinRM(WinRMListener)
  parent: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.yml
  name: withWinRM(WinRMListener listener)
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withWinRM(WinRMListener listener)
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.withWinRM(WinRMListener listener)
  type: Method
  summary: "<p>Specifies the WinRM listener. </p>\r\n<p>Each call to this method adds the given listener to the list of VM's WinRM listeners.</p>\r\n<p></p>"
  syntax:
    content: public WithWindowsCreateUnmanaged withWinRM(WinRMListener listener)
    parameters:
    - id: listener
      type: com.microsoft.azure.management.compute.WinRMListener
      description: <p>a WinRM listener </p>
    return:
      type: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionShared
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionShared.yml
  name: VirtualMachineScaleSet.DefinitionShared
  nameWithType: VirtualMachineScaleSet.DefinitionShared
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionShared
  type: Interface
  summary: "<p>The virtual machine scale set stages shared between managed and unmanaged based virtual machine scale set definitions. </p>"
  syntax:
    content: public interface DefinitionShared extends VirtualMachineScaleSet.DefinitionStages.Blank,VirtualMachineScaleSet.DefinitionStages.WithGroup,VirtualMachineScaleSet.DefinitionStages.WithSku,VirtualMachineScaleSet.DefinitionStages.WithNetworkSubnet,VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancer,VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternalLoadBalancer,VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerBackendOrNatPool,VirtualMachineScaleSet.DefinitionStages.WithInternalLoadBalancerBackendOrNatPool,VirtualMachineScaleSet.DefinitionStages.WithPrimaryInternetFacingLoadBalancerNatPool,VirtualMachineScaleSet.DefinitionStages.WithInternalInternalLoadBalancerNatPool,VirtualMachineScaleSet.DefinitionStages.WithOS,VirtualMachineScaleSet.DefinitionStages.WithCreate
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged.yml
  name: VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootUsernameUnmanaged
  type: Interface
  summary: "<p>The stage of the Linux virtual machine scale set definition allowing to specify SSH root user name. </p>"
  syntax:
    content: public interface WithLinuxRootUsernameUnmanaged
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged.yml
  name: VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxRootPasswordOrPublicKeyUnmanaged
  type: Interface
  summary: "<p>The stage of the Linux virtual machine scale set definition allowing to specify SSH root password or public key. </p>"
  syntax:
    content: public interface WithLinuxRootPasswordOrPublicKeyUnmanaged
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged.yml
  name: VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminUsernameUnmanaged
  type: Interface
  summary: "<p>The stage of the Windows virtual machine scale set definition allowing to specify administrator user name. </p>"
  syntax:
    content: public interface WithWindowsAdminUsernameUnmanaged
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged.yml
  name: VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsAdminPasswordUnmanaged
  type: Interface
  summary: "<p>The stage of the Windows virtual machine scale set definition allowing to specify administrator user name. </p>"
  syntax:
    content: public interface WithWindowsAdminPasswordUnmanaged
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged.yml
  name: VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithLinuxCreateUnmanaged
  type: Interface
  summary: "<p>The stage of a Linux virtual machine scale set definition which contains all the minimum required inputs for the resource to be created, but also allows for any other optional settings to be specified. </p>"
  syntax:
    content: public interface WithLinuxCreateUnmanaged
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged.yml
  name: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithWindowsCreateUnmanaged
  type: Interface
  summary: "<p>The stage of a Windows virtual machine scale set definition which contains all the minimum required inputs for the resource to be created, but also allows for any other optional settings to be specified. </p>"
  syntax:
    content: public interface WithWindowsCreateUnmanaged
- uid: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUnmanagedCreate
  parent: com.microsoft.azure.management.compute
  href: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUnmanagedCreate.yml
  name: VirtualMachineScaleSet.DefinitionStages.WithUnmanagedCreate
  nameWithType: VirtualMachineScaleSet.DefinitionStages.WithUnmanagedCreate
  fullName: com.microsoft.azure.management.compute.VirtualMachineScaleSet.DefinitionStages.WithUnmanagedCreate
  type: Interface
  summary: "<p>The stage of the definition which contains all the minimum required inputs for the VM scale set to be created and optionally allow unmanaged data disks specific settings to be specified. </p>"
  syntax:
    content: public interface WithUnmanagedCreate
