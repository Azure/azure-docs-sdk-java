### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeAsync*"
fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeAsync"
name: "getAtSubscriptionScopeAsync"
nameWithType: "DeploymentsClient.getAtSubscriptionScopeAsync"
members:
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeAsync(String deploymentName)"
  name: "getAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.getAtSubscriptionScopeAsync(String deploymentName)"
  summary: "Gets a deployment."
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentExtendedInner> getAtSubscriptionScopeAsync(String deploymentName)"
  returns:
    description: "a deployment."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
