### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions
  id: ExitOptions
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions()
  - com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction()
  - com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction()
  - com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(com.microsoft.azure.batch.protocol.models.DependencyAction)
  - com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(com.microsoft.azure.batch.protocol.models.JobAction)
  langs:
  - java
  name: ExitOptions
  nameWithType: ExitOptions
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Specifies how the Batch service responds to a particular exit condition.
  syntax:
    content: public class ExitOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions()
  id: ExitOptions()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ExitOptions
  langs:
  - java
  name: ExitOptions()
  nameWithType: ExitOptions.ExitOptions()
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions()
  overload: com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public ExitOptions()
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction()
  id: dependencyAction()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ExitOptions
  langs:
  - java
  name: dependencyAction()
  nameWithType: ExitOptions.dependencyAction()
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction()
  overload: com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks. Possible values include: 'satisfy', 'block'."
  syntax:
    content: public DependencyAction dependencyAction()
    return:
      type: com.microsoft.azure.batch.protocol.models.DependencyAction
      description: the dependencyAction value
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction()
  id: jobAction()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ExitOptions
  langs:
  - java
  name: jobAction()
  nameWithType: ExitOptions.jobAction()
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction()
  overload: com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get the default is none for exit code 0 and terminate for all other exit conditions. If the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'none', 'disable', 'terminate'."
  syntax:
    content: public JobAction jobAction()
    return:
      type: com.microsoft.azure.batch.protocol.models.JobAction
      description: the jobAction value
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(com.microsoft.azure.batch.protocol.models.DependencyAction)
  id: withDependencyAction(com.microsoft.azure.batch.protocol.models.DependencyAction)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ExitOptions
  langs:
  - java
  name: withDependencyAction(DependencyAction dependencyAction)
  nameWithType: ExitOptions.withDependencyAction(DependencyAction dependencyAction)
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(DependencyAction dependencyAction)
  overload: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks. Possible values include: 'satisfy', 'block'."
  syntax:
    content: public ExitOptions withDependencyAction(DependencyAction dependencyAction)
    parameters:
    - id: dependencyAction
      type: com.microsoft.azure.batch.protocol.models.DependencyAction
      description: the dependencyAction value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ExitOptions
      description: the ExitOptions object itself.
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(com.microsoft.azure.batch.protocol.models.JobAction)
  id: withJobAction(com.microsoft.azure.batch.protocol.models.JobAction)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.ExitOptions
  langs:
  - java
  name: withJobAction(JobAction jobAction)
  nameWithType: ExitOptions.withJobAction(JobAction jobAction)
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(JobAction jobAction)
  overload: com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set the default is none for exit code 0 and terminate for all other exit conditions. If the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'none', 'disable', 'terminate'."
  syntax:
    content: public ExitOptions withJobAction(JobAction jobAction)
    parameters:
    - id: jobAction
      type: com.microsoft.azure.batch.protocol.models.JobAction
      description: the jobAction value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.ExitOptions
      description: the ExitOptions object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions*
  name: ExitOptions
  nameWithType: ExitOptions.ExitOptions
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobAction
  name: JobAction
  nameWithType: JobAction
  fullName: com.microsoft.azure.batch.protocol.models.JobAction
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction*
  name: jobAction
  nameWithType: ExitOptions.jobAction
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction*
  name: withJobAction
  nameWithType: ExitOptions.withJobAction
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.DependencyAction
  name: DependencyAction
  nameWithType: DependencyAction
  fullName: com.microsoft.azure.batch.protocol.models.DependencyAction
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction*
  name: dependencyAction
  nameWithType: ExitOptions.dependencyAction
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction*
  name: withDependencyAction
  nameWithType: ExitOptions.withDependencyAction
  fullName: com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
