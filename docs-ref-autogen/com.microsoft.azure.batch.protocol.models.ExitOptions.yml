### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.ExitOptions"
fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions"
name: "ExitOptions"
nameWithType: "ExitOptions"
summary: "Specifies how the Batch service responds to a particular exit condition."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ExitOptions"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions()"
  fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions.ExitOptions()"
  name: "ExitOptions()"
  nameWithType: "ExitOptions.ExitOptions()"
  syntax: "public ExitOptions()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction()"
  fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions.dependencyAction()"
  name: "dependencyAction()"
  nameWithType: "ExitOptions.dependencyAction()"
  summary: "Get possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait)."
  syntax: "public DependencyAction dependencyAction()"
  desc: "Get possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks. Possible values include: 'satisfy', 'block'."
  returns:
    description: "the dependencyAction value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DependencyAction?alt=com.microsoft.azure.batch.protocol.models.DependencyAction&text=DependencyAction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction()"
  fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions.jobAction()"
  name: "jobAction()"
  nameWithType: "ExitOptions.jobAction()"
  summary: "Get the default is none for exit code 0 and terminate for all other exit conditions."
  syntax: "public JobAction jobAction()"
  desc: "Get the default is none for exit code 0 and terminate for all other exit conditions. If the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'none', 'disable', 'terminate'."
  returns:
    description: "the jobAction value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAction?alt=com.microsoft.azure.batch.protocol.models.JobAction&text=JobAction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(com.microsoft.azure.batch.protocol.models.DependencyAction)"
  fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions.withDependencyAction(DependencyAction dependencyAction)"
  name: "withDependencyAction(DependencyAction dependencyAction)"
  nameWithType: "ExitOptions.withDependencyAction(DependencyAction dependencyAction)"
  summary: "Set possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait)."
  parameters:
  - description: "the dependencyAction value to set"
    name: "dependencyAction"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.DependencyAction?alt=com.microsoft.azure.batch.protocol.models.DependencyAction&text=DependencyAction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExitOptions withDependencyAction(DependencyAction dependencyAction)"
  desc: "Set possible values are 'satisfy' (allowing dependent tasks to progress) and 'block' (dependent tasks continue to wait). Batch does not yet support cancellation of dependent tasks. Possible values include: 'satisfy', 'block'."
  returns:
    description: "the ExitOptions object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(com.microsoft.azure.batch.protocol.models.JobAction)"
  fullName: "com.microsoft.azure.batch.protocol.models.ExitOptions.withJobAction(JobAction jobAction)"
  name: "withJobAction(JobAction jobAction)"
  nameWithType: "ExitOptions.withJobAction(JobAction jobAction)"
  summary: "Set the default is none for exit code 0 and terminate for all other exit conditions."
  parameters:
  - description: "the jobAction value to set"
    name: "jobAction"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.JobAction?alt=com.microsoft.azure.batch.protocol.models.JobAction&text=JobAction\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExitOptions withJobAction(JobAction jobAction)"
  desc: "Set the default is none for exit code 0 and terminate for all other exit conditions. If the Job's onTaskFailed property is noaction, then specifying this property returns an error and the add Task request fails with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). Possible values include: 'none', 'disable', 'terminate'."
  returns:
    description: "the ExitOptions object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ExitOptions?alt=com.microsoft.azure.batch.protocol.models.ExitOptions&text=ExitOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Specifies how the Batch service responds to a particular exit condition."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
