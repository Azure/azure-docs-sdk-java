### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant"
fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant"
name: "MicrosoftGraphOAuth2PermissionGrant"
nameWithType: "MicrosoftGraphOAuth2PermissionGrant"
summary: "o<wbr>Auth2Permission<wbr>Grant."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.additionalProperties()"
- "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.id()"
- "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.validate()"
- "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
- "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.withId(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MicrosoftGraphOAuth2PermissionGrant extends MicrosoftGraphEntity"
constructors:
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.MicrosoftGraphOAuth2PermissionGrant()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.MicrosoftGraphOAuth2PermissionGrant()"
  name: "MicrosoftGraphOAuth2PermissionGrant()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.MicrosoftGraphOAuth2PermissionGrant()"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant()"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.additionalProperties()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.additionalProperties()"
  name: "additionalProperties()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.additionalProperties()"
  summary: "Get the additional<wbr>Properties property: o<wbr>Auth2Permission<wbr>Grant."
  overridden: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.additionalProperties()"
  syntax: "public Map<String,Object> additionalProperties()"
  desc: "Get the additionalProperties property: oAuth2PermissionGrant."
  returns:
    description: "the additionalProperties value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.clientId()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.clientId()"
  name: "clientId()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.clientId()"
  summary: "Get the client<wbr>Id property: The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API."
  syntax: "public String clientId()"
  desc: "Get the clientId property: The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only)."
  returns:
    description: "the clientId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.consentType()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.consentType()"
  name: "consentType()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.consentType()"
  summary: "Get the consent<wbr>Type property: Indicates if authorization is granted for the client application to impersonate all users or only a specific user."
  syntax: "public String consentType()"
  desc: "Get the consentType property: Indicates if authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only)."
  returns:
    description: "the consentType value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.principalId()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.principalId()"
  name: "principalId()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.principalId()"
  summary: "Get the principal<wbr>Id property: The id of the user on behalf of whom the client is authorized to access the resource, when consent<wbr>Type is Principal."
  syntax: "public String principalId()"
  desc: "Get the principalId property: The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal."
  returns:
    description: "the principalId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.resourceId()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.resourceId()"
  name: "resourceId()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.resourceId()"
  summary: "Get the resource<wbr>Id property: The id of the resource service principal to which access is authorized."
  syntax: "public String resourceId()"
  desc: "Get the resourceId property: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user."
  returns:
    description: "the resourceId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.scope()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.scope()"
  name: "scope()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.scope()"
  summary: "Get the scope property: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API)."
  syntax: "public String scope()"
  desc: "Get the scope property: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the publishedPermissionScopes property of the resource service principal."
  returns:
    description: "the scope value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.validate()"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.validate()"
  name: "validate()"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withAdditionalProperties(Map<String,Object> additionalProperties)"
  name: "withAdditionalProperties(Map<String,Object> additionalProperties)"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.withAdditionalProperties(Map<String,Object> additionalProperties)"
  summary: "Set the additional<wbr>Properties property: o<wbr>Auth2Permission<wbr>Grant."
  overridden: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.withAdditionalProperties(java.util.Map<java.lang.String,java.lang.Object>)"
  parameters:
  - description: "the additionalProperties value to set."
    name: "additionalProperties"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant withAdditionalProperties(Map<String,Object> additionalProperties)"
  desc: "Set the additionalProperties property: oAuth2PermissionGrant."
  returns:
    description: "the MicrosoftGraphOAuth2PermissionGrant object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant&text=MicrosoftGraphOAuth2PermissionGrant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withClientId(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withClientId(String clientId)"
  name: "withClientId(String clientId)"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.withClientId(String clientId)"
  summary: "Set the client<wbr>Id property: The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API."
  parameters:
  - description: "the clientId value to set."
    name: "clientId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant withClientId(String clientId)"
  desc: "Set the clientId property: The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only)."
  returns:
    description: "the MicrosoftGraphOAuth2PermissionGrant object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant&text=MicrosoftGraphOAuth2PermissionGrant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withConsentType(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withConsentType(String consentType)"
  name: "withConsentType(String consentType)"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.withConsentType(String consentType)"
  summary: "Set the consent<wbr>Type property: Indicates if authorization is granted for the client application to impersonate all users or only a specific user."
  parameters:
  - description: "the consentType value to set."
    name: "consentType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant withConsentType(String consentType)"
  desc: "Set the consentType property: Indicates if authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only)."
  returns:
    description: "the MicrosoftGraphOAuth2PermissionGrant object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant&text=MicrosoftGraphOAuth2PermissionGrant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withId(String id)"
  name: "withId(String id)"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.withId(String id)"
  summary: "Set the id property: Read-only."
  overridden: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphEntity.withId(java.lang.String)"
  parameters:
  - name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant withId(String id)"
  desc: "Set the id property: Read-only."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant&text=MicrosoftGraphOAuth2PermissionGrant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withPrincipalId(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withPrincipalId(String principalId)"
  name: "withPrincipalId(String principalId)"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.withPrincipalId(String principalId)"
  summary: "Set the principal<wbr>Id property: The id of the user on behalf of whom the client is authorized to access the resource, when consent<wbr>Type is Principal."
  parameters:
  - description: "the principalId value to set."
    name: "principalId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant withPrincipalId(String principalId)"
  desc: "Set the principalId property: The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal."
  returns:
    description: "the MicrosoftGraphOAuth2PermissionGrant object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant&text=MicrosoftGraphOAuth2PermissionGrant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withResourceId(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withResourceId(String resourceId)"
  name: "withResourceId(String resourceId)"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.withResourceId(String resourceId)"
  summary: "Set the resource<wbr>Id property: The id of the resource service principal to which access is authorized."
  parameters:
  - description: "the resourceId value to set."
    name: "resourceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant withResourceId(String resourceId)"
  desc: "Set the resourceId property: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user."
  returns:
    description: "the MicrosoftGraphOAuth2PermissionGrant object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant&text=MicrosoftGraphOAuth2PermissionGrant\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant.withScope(String scope)"
  name: "withScope(String scope)"
  nameWithType: "MicrosoftGraphOAuth2PermissionGrant.withScope(String scope)"
  summary: "Set the scope property: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API)."
  parameters:
  - description: "the scope value to set."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MicrosoftGraphOAuth2PermissionGrant withScope(String scope)"
  desc: "Set the scope property: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the publishedPermissionScopes property of the resource service principal."
  returns:
    description: "the MicrosoftGraphOAuth2PermissionGrant object itself."
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant?alt=com.azure.resourcemanager.authorization.fluent.models.MicrosoftGraphOAuth2PermissionGrant&text=MicrosoftGraphOAuth2PermissionGrant\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "oAuth2PermissionGrant."
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.16.0
