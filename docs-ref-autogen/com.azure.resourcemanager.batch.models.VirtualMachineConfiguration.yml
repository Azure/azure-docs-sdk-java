### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration"
fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration"
name: "VirtualMachineConfiguration"
nameWithType: "VirtualMachineConfiguration"
summary: "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class VirtualMachineConfiguration"
constructors:
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.VirtualMachineConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.VirtualMachineConfiguration()"
  name: "VirtualMachineConfiguration()"
  nameWithType: "VirtualMachineConfiguration.VirtualMachineConfiguration()"
  syntax: "public VirtualMachineConfiguration()"
methods:
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.containerConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.containerConfiguration()"
  name: "containerConfiguration()"
  nameWithType: "VirtualMachineConfiguration.containerConfiguration()"
  summary: "Get the containerConfiguration property: The configuration for container-enabled pools. If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it."
  syntax: "public ContainerConfiguration containerConfiguration()"
  returns:
    description: "the containerConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ContainerConfiguration?alt=com.azure.resourcemanager.batch.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.dataDisks()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.dataDisks()"
  name: "dataDisks()"
  nameWithType: "VirtualMachineConfiguration.dataDisks()"
  summary: "Get the dataDisks property: The configuration for data disks attached to the compute nodes in the pool. This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
  syntax: "public List<DataDisk> dataDisks()"
  returns:
    description: "the dataDisks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.diskEncryptionConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.diskEncryptionConfiguration()"
  name: "diskEncryptionConfiguration()"
  nameWithType: "VirtualMachineConfiguration.diskEncryptionConfiguration()"
  summary: "Get the diskEncryptionConfiguration property: If specified, encryption is performed on each node in the pool during node provisioning."
  syntax: "public DiskEncryptionConfiguration diskEncryptionConfiguration()"
  returns:
    description: "the diskEncryptionConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration?alt=com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.extensions()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.extensions()"
  name: "extensions()"
  nameWithType: "VirtualMachineConfiguration.extensions()"
  summary: "Get the extensions property: The virtual machine extension for the pool. If specified, the extensions mentioned in this configuration will be installed on each node."
  syntax: "public List<VMExtension> extensions()"
  returns:
    description: "the extensions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.imageReference()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.imageReference()"
  name: "imageReference()"
  nameWithType: "VirtualMachineConfiguration.imageReference()"
  summary: "Get the imageReference property: A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation."
  syntax: "public ImageReference imageReference()"
  returns:
    description: "the imageReference value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ImageReference?alt=com.azure.resourcemanager.batch.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.licenseType()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.licenseType()"
  name: "licenseType()"
  nameWithType: "VirtualMachineConfiguration.licenseType()"
  summary: "Get the licenseType property: The type of on-premises license to be used when deploying the operating system. This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:\n\nWindows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  syntax: "public String licenseType()"
  returns:
    description: "the licenseType value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodeAgentSkuId()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodeAgentSkuId()"
  name: "nodeAgentSkuId()"
  nameWithType: "VirtualMachineConfiguration.nodeAgentSkuId()"
  summary: "Get the nodeAgentSkuId property: The SKU of the Batch node agent to be provisioned on compute nodes in the pool. The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation."
  syntax: "public String nodeAgentSkuId()"
  returns:
    description: "the nodeAgentSkuId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodePlacementConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodePlacementConfiguration()"
  name: "nodePlacementConfiguration()"
  nameWithType: "VirtualMachineConfiguration.nodePlacementConfiguration()"
  summary: "Get the nodePlacementConfiguration property: Node placement configuration for batch pools. This configuration will specify rules on how nodes in the pool will be physically allocated."
  syntax: "public NodePlacementConfiguration nodePlacementConfiguration()"
  returns:
    description: "the nodePlacementConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NodePlacementConfiguration?alt=com.azure.resourcemanager.batch.models.NodePlacementConfiguration&text=NodePlacementConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.osDisk()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.osDisk()"
  name: "osDisk()"
  nameWithType: "VirtualMachineConfiguration.osDisk()"
  summary: "Get the osDisk property: Settings for the operating system disk of the virtual machine. Contains configuration for ephemeral OSDisk settings."
  syntax: "public OSDisk osDisk()"
  returns:
    description: "the osDisk value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.OSDisk?alt=com.azure.resourcemanager.batch.models.OSDisk&text=OSDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.validate()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.validate()"
  name: "validate()"
  nameWithType: "VirtualMachineConfiguration.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.windowsConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.windowsConfiguration()"
  name: "windowsConfiguration()"
  nameWithType: "VirtualMachineConfiguration.windowsConfiguration()"
  summary: "Get the windowsConfiguration property: Windows operating system settings to apply to the virtual machine. This property must not be specified if the imageReference specifies a Linux OS image."
  syntax: "public WindowsConfiguration windowsConfiguration()"
  returns:
    description: "the windowsConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.WindowsConfiguration?alt=com.azure.resourcemanager.batch.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withContainerConfiguration(com.azure.resourcemanager.batch.models.ContainerConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  name: "withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  summary: "Set the containerConfiguration property: The configuration for container-enabled pools. If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it."
  parameters:
  - description: "the containerConfiguration value to set."
    name: "containerConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ContainerConfiguration?alt=com.azure.resourcemanager.batch.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDataDisks(java.util.List<com.azure.resourcemanager.batch.models.DataDisk>)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)"
  name: "withDataDisks(List<DataDisk> dataDisks)"
  nameWithType: "VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)"
  summary: "Set the dataDisks property: The configuration for data disks attached to the compute nodes in the pool. This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
  parameters:
  - description: "the dataDisks value to set."
    name: "dataDisks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualMachineConfiguration withDataDisks(List<DataDisk> dataDisks)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  name: "withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  summary: "Set the diskEncryptionConfiguration property: If specified, encryption is performed on each node in the pool during node provisioning."
  parameters:
  - description: "the diskEncryptionConfiguration value to set."
    name: "diskEncryptionConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration?alt=com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withExtensions(java.util.List<com.azure.resourcemanager.batch.models.VMExtension>)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withExtensions(List<VMExtension> extensions)"
  name: "withExtensions(List<VMExtension> extensions)"
  nameWithType: "VirtualMachineConfiguration.withExtensions(List<VMExtension> extensions)"
  summary: "Set the extensions property: The virtual machine extension for the pool. If specified, the extensions mentioned in this configuration will be installed on each node."
  parameters:
  - description: "the extensions value to set."
    name: "extensions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualMachineConfiguration withExtensions(List<VMExtension> extensions)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withImageReference(com.azure.resourcemanager.batch.models.ImageReference)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withImageReference(ImageReference imageReference)"
  name: "withImageReference(ImageReference imageReference)"
  nameWithType: "VirtualMachineConfiguration.withImageReference(ImageReference imageReference)"
  summary: "Set the imageReference property: A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation."
  parameters:
  - description: "the imageReference value to set."
    name: "imageReference"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ImageReference?alt=com.azure.resourcemanager.batch.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withImageReference(ImageReference imageReference)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withLicenseType(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withLicenseType(String licenseType)"
  name: "withLicenseType(String licenseType)"
  nameWithType: "VirtualMachineConfiguration.withLicenseType(String licenseType)"
  summary: "Set the licenseType property: The type of on-premises license to be used when deploying the operating system. This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:\n\nWindows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  parameters:
  - description: "the licenseType value to set."
    name: "licenseType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withLicenseType(String licenseType)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodeAgentSkuId(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodeAgentSkuId(String nodeAgentSkuId)"
  name: "withNodeAgentSkuId(String nodeAgentSkuId)"
  nameWithType: "VirtualMachineConfiguration.withNodeAgentSkuId(String nodeAgentSkuId)"
  summary: "Set the nodeAgentSkuId property: The SKU of the Batch node agent to be provisioned on compute nodes in the pool. The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation."
  parameters:
  - description: "the nodeAgentSkuId value to set."
    name: "nodeAgentSkuId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withNodeAgentSkuId(String nodeAgentSkuId)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodePlacementConfiguration(com.azure.resourcemanager.batch.models.NodePlacementConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  name: "withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  summary: "Set the nodePlacementConfiguration property: Node placement configuration for batch pools. This configuration will specify rules on how nodes in the pool will be physically allocated."
  parameters:
  - description: "the nodePlacementConfiguration value to set."
    name: "nodePlacementConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NodePlacementConfiguration?alt=com.azure.resourcemanager.batch.models.NodePlacementConfiguration&text=NodePlacementConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withOsDisk(com.azure.resourcemanager.batch.models.OSDisk)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withOsDisk(OSDisk osDisk)"
  name: "withOsDisk(OSDisk osDisk)"
  nameWithType: "VirtualMachineConfiguration.withOsDisk(OSDisk osDisk)"
  summary: "Set the osDisk property: Settings for the operating system disk of the virtual machine. Contains configuration for ephemeral OSDisk settings."
  parameters:
  - description: "the osDisk value to set."
    name: "osDisk"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.OSDisk?alt=com.azure.resourcemanager.batch.models.OSDisk&text=OSDisk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withOsDisk(OSDisk osDisk)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withWindowsConfiguration(com.azure.resourcemanager.batch.models.WindowsConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  name: "withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  summary: "Set the windowsConfiguration property: Windows operating system settings to apply to the virtual machine. This property must not be specified if the imageReference specifies a Linux OS image."
  parameters:
  - description: "the windowsConfiguration value to set."
    name: "windowsConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.WindowsConfiguration?alt=com.azure.resourcemanager.batch.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.batch.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
