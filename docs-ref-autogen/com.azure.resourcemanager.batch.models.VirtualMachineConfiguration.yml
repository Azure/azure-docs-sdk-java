### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration"
fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration"
name: "VirtualMachineConfiguration"
nameWithType: "VirtualMachineConfiguration"
summary: "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **VirtualMachineConfiguration**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.VirtualMachineConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.VirtualMachineConfiguration()"
  name: "VirtualMachineConfiguration()"
  nameWithType: "VirtualMachineConfiguration.VirtualMachineConfiguration()"
  summary: "Creates an instance of Virtual<wbr>Machine<wbr>Configuration class."
  syntax: "public VirtualMachineConfiguration()"
  desc: "Creates an instance of VirtualMachineConfiguration class."
methods:
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.containerConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.containerConfiguration()"
  name: "containerConfiguration()"
  nameWithType: "VirtualMachineConfiguration.containerConfiguration()"
  summary: "Get the container<wbr>Configuration property: If specified, setup is performed on each node in the pool to allow tasks to run in containers."
  syntax: "public ContainerConfiguration containerConfiguration()"
  desc: "Get the containerConfiguration property: If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it."
  returns:
    description: "the containerConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ContainerConfiguration?alt=com.azure.resourcemanager.batch.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.dataDisks()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.dataDisks()"
  name: "dataDisks()"
  nameWithType: "VirtualMachineConfiguration.dataDisks()"
  summary: "Get the data<wbr>Disks property: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
  syntax: "public List<DataDisk> dataDisks()"
  desc: "Get the dataDisks property: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
  returns:
    description: "the dataDisks value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.diskEncryptionConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.diskEncryptionConfiguration()"
  name: "diskEncryptionConfiguration()"
  nameWithType: "VirtualMachineConfiguration.diskEncryptionConfiguration()"
  summary: "Get the disk<wbr>Encryption<wbr>Configuration property: If specified, encryption is performed on each node in the pool during node provisioning."
  syntax: "public DiskEncryptionConfiguration diskEncryptionConfiguration()"
  desc: "Get the diskEncryptionConfiguration property: If specified, encryption is performed on each node in the pool during node provisioning."
  returns:
    description: "the diskEncryptionConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration?alt=com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.extensions()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.extensions()"
  name: "extensions()"
  nameWithType: "VirtualMachineConfiguration.extensions()"
  summary: "Get the extensions property: If specified, the extensions mentioned in this configuration will be installed on each node."
  syntax: "public List<VMExtension> extensions()"
  desc: "Get the extensions property: If specified, the extensions mentioned in this configuration will be installed on each node."
  returns:
    description: "the extensions value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "VirtualMachineConfiguration.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Virtual<wbr>Machine<wbr>Configuration from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static VirtualMachineConfiguration fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of VirtualMachineConfiguration from the JsonReader."
  returns:
    description: "An instance of VirtualMachineConfiguration if the JsonReader was pointing to an instance of it, or null\n if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.imageReference()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.imageReference()"
  name: "imageReference()"
  nameWithType: "VirtualMachineConfiguration.imageReference()"
  summary: "Get the image<wbr>Reference property: A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine."
  syntax: "public ImageReference imageReference()"
  desc: "Get the imageReference property: A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation."
  returns:
    description: "the imageReference value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ImageReference?alt=com.azure.resourcemanager.batch.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.licenseType()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.licenseType()"
  name: "licenseType()"
  nameWithType: "VirtualMachineConfiguration.licenseType()"
  summary: "Get the license<wbr>Type property: This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed."
  syntax: "public String licenseType()"
  desc: "Get the licenseType property: This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  returns:
    description: "the licenseType value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodeAgentSkuId()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodeAgentSkuId()"
  name: "nodeAgentSkuId()"
  nameWithType: "VirtualMachineConfiguration.nodeAgentSkuId()"
  summary: "Get the node<wbr>Agent<wbr>Sku<wbr>Id property: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service."
  syntax: "public String nodeAgentSkuId()"
  desc: "Get the nodeAgentSkuId property: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation."
  returns:
    description: "the nodeAgentSkuId value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodePlacementConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.nodePlacementConfiguration()"
  name: "nodePlacementConfiguration()"
  nameWithType: "VirtualMachineConfiguration.nodePlacementConfiguration()"
  summary: "Get the node<wbr>Placement<wbr>Configuration property: This configuration will specify rules on how nodes in the pool will be physically allocated."
  syntax: "public NodePlacementConfiguration nodePlacementConfiguration()"
  desc: "Get the nodePlacementConfiguration property: This configuration will specify rules on how nodes in the pool will be physically allocated."
  returns:
    description: "the nodePlacementConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NodePlacementConfiguration?alt=com.azure.resourcemanager.batch.models.NodePlacementConfiguration&text=NodePlacementConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.osDisk()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.osDisk()"
  name: "osDisk()"
  nameWithType: "VirtualMachineConfiguration.osDisk()"
  summary: "Get the os<wbr>Disk property: Contains configuration for ephemeral OSDisk settings."
  syntax: "public OSDisk osDisk()"
  desc: "Get the osDisk property: Contains configuration for ephemeral OSDisk settings."
  returns:
    description: "the osDisk value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.OSDisk?alt=com.azure.resourcemanager.batch.models.OSDisk&text=OSDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.securityProfile()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.securityProfile()"
  name: "securityProfile()"
  nameWithType: "VirtualMachineConfiguration.securityProfile()"
  summary: "Get the security<wbr>Profile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  syntax: "public SecurityProfile securityProfile()"
  desc: "Get the securityProfile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  returns:
    description: "the securityProfile value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.SecurityProfile?alt=com.azure.resourcemanager.batch.models.SecurityProfile&text=SecurityProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.serviceArtifactReference()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.serviceArtifactReference()"
  name: "serviceArtifactReference()"
  nameWithType: "VirtualMachineConfiguration.serviceArtifactReference()"
  summary: "Get the service<wbr>Artifact<wbr>Reference property: The service artifact reference id in the form of /subscriptions/\\{subscription<wbr>Id\\}/resource<wbr>Groups/\\{resource<wbr>Group\\}/providers/Microsoft.<wbr>Compute/galleries/\\{gallery<wbr>Name\\}/service<wbr>Artifacts/\\{service<wbr>Artifact<wbr>Name\\}/vm<wbr>Artifacts<wbr>Profiles/\\{vm<wbr>Artifacts<wbr>Profiles<wbr>Name\\}."
  syntax: "public ServiceArtifactReference serviceArtifactReference()"
  desc: "Get the serviceArtifactReference property: The service artifact reference id in the form of /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroup\\}/providers/Microsoft.Compute/galleries/\\{galleryName\\}/serviceArtifacts/\\{serviceArtifactName\\}/vmArtifactsProfiles/\\{vmArtifactsProfilesName\\}."
  returns:
    description: "the serviceArtifactReference value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ServiceArtifactReference?alt=com.azure.resourcemanager.batch.models.ServiceArtifactReference&text=ServiceArtifactReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "VirtualMachineConfiguration.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.validate()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.validate()"
  name: "validate()"
  nameWithType: "VirtualMachineConfiguration.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.windowsConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.windowsConfiguration()"
  name: "windowsConfiguration()"
  nameWithType: "VirtualMachineConfiguration.windowsConfiguration()"
  summary: "Get the windows<wbr>Configuration property: This property must not be specified if the image<wbr>Reference specifies a Linux OS image."
  syntax: "public WindowsConfiguration windowsConfiguration()"
  desc: "Get the windowsConfiguration property: This property must not be specified if the imageReference specifies a Linux OS image."
  returns:
    description: "the windowsConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.WindowsConfiguration?alt=com.azure.resourcemanager.batch.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withContainerConfiguration(com.azure.resourcemanager.batch.models.ContainerConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  name: "withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  summary: "Set the container<wbr>Configuration property: If specified, setup is performed on each node in the pool to allow tasks to run in containers."
  parameters:
  - description: "the containerConfiguration value to set."
    name: "containerConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ContainerConfiguration?alt=com.azure.resourcemanager.batch.models.ContainerConfiguration&text=ContainerConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withContainerConfiguration(ContainerConfiguration containerConfiguration)"
  desc: "Set the containerConfiguration property: If specified, setup is performed on each node in the pool to allow tasks to run in containers. All regular tasks and job manager tasks run on this pool must specify the containerSettings property, and all other tasks may specify it."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDataDisks(java.util.List<com.azure.resourcemanager.batch.models.DataDisk>)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)"
  name: "withDataDisks(List<DataDisk> dataDisks)"
  nameWithType: "VirtualMachineConfiguration.withDataDisks(List<DataDisk> dataDisks)"
  summary: "Set the data<wbr>Disks property: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
  parameters:
  - description: "the dataDisks value to set."
    name: "dataDisks"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.batch.models.DataDisk?alt=com.azure.resourcemanager.batch.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualMachineConfiguration withDataDisks(List<DataDisk> dataDisks)"
  desc: "Set the dataDisks property: This property must be specified if the compute nodes in the pool need to have empty data disks attached to them."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  name: "withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  summary: "Set the disk<wbr>Encryption<wbr>Configuration property: If specified, encryption is performed on each node in the pool during node provisioning."
  parameters:
  - description: "the diskEncryptionConfiguration value to set."
    name: "diskEncryptionConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration?alt=com.azure.resourcemanager.batch.models.DiskEncryptionConfiguration&text=DiskEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration)"
  desc: "Set the diskEncryptionConfiguration property: If specified, encryption is performed on each node in the pool during node provisioning."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withExtensions(java.util.List<com.azure.resourcemanager.batch.models.VMExtension>)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withExtensions(List<VMExtension> extensions)"
  name: "withExtensions(List<VMExtension> extensions)"
  nameWithType: "VirtualMachineConfiguration.withExtensions(List<VMExtension> extensions)"
  summary: "Set the extensions property: If specified, the extensions mentioned in this configuration will be installed on each node."
  parameters:
  - description: "the extensions value to set."
    name: "extensions"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.batch.models.VMExtension?alt=com.azure.resourcemanager.batch.models.VMExtension&text=VMExtension\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public VirtualMachineConfiguration withExtensions(List<VMExtension> extensions)"
  desc: "Set the extensions property: If specified, the extensions mentioned in this configuration will be installed on each node."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withImageReference(com.azure.resourcemanager.batch.models.ImageReference)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withImageReference(ImageReference imageReference)"
  name: "withImageReference(ImageReference imageReference)"
  nameWithType: "VirtualMachineConfiguration.withImageReference(ImageReference imageReference)"
  summary: "Set the image<wbr>Reference property: A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine."
  parameters:
  - description: "the imageReference value to set."
    name: "imageReference"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ImageReference?alt=com.azure.resourcemanager.batch.models.ImageReference&text=ImageReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withImageReference(ImageReference imageReference)"
  desc: "Set the imageReference property: A reference to an Azure Virtual Machines Marketplace image or the Azure Image resource of a custom Virtual Machine. To get the list of all imageReferences verified by Azure Batch, see the 'List supported node agent SKUs' operation."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withLicenseType(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withLicenseType(String licenseType)"
  name: "withLicenseType(String licenseType)"
  nameWithType: "VirtualMachineConfiguration.withLicenseType(String licenseType)"
  summary: "Set the license<wbr>Type property: This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed."
  parameters:
  - description: "the licenseType value to set."
    name: "licenseType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VirtualMachineConfiguration withLicenseType(String licenseType)"
  desc: "Set the licenseType property: This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are: Windows\\_Server - The on-premises license is for Windows Server. Windows\\_Client - The on-premises license is for Windows Client."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodeAgentSkuId(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodeAgentSkuId(String nodeAgentSkuId)"
  name: "withNodeAgentSkuId(String nodeAgentSkuId)"
  nameWithType: "VirtualMachineConfiguration.withNodeAgentSkuId(String nodeAgentSkuId)"
  summary: "Set the node<wbr>Agent<wbr>Sku<wbr>Id property: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service."
  parameters:
  - description: "the nodeAgentSkuId value to set."
    name: "nodeAgentSkuId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public VirtualMachineConfiguration withNodeAgentSkuId(String nodeAgentSkuId)"
  desc: "Set the nodeAgentSkuId property: The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodePlacementConfiguration(com.azure.resourcemanager.batch.models.NodePlacementConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  name: "withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  summary: "Set the node<wbr>Placement<wbr>Configuration property: This configuration will specify rules on how nodes in the pool will be physically allocated."
  parameters:
  - description: "the nodePlacementConfiguration value to set."
    name: "nodePlacementConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NodePlacementConfiguration?alt=com.azure.resourcemanager.batch.models.NodePlacementConfiguration&text=NodePlacementConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withNodePlacementConfiguration(NodePlacementConfiguration nodePlacementConfiguration)"
  desc: "Set the nodePlacementConfiguration property: This configuration will specify rules on how nodes in the pool will be physically allocated."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withOsDisk(com.azure.resourcemanager.batch.models.OSDisk)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withOsDisk(OSDisk osDisk)"
  name: "withOsDisk(OSDisk osDisk)"
  nameWithType: "VirtualMachineConfiguration.withOsDisk(OSDisk osDisk)"
  summary: "Set the os<wbr>Disk property: Contains configuration for ephemeral OSDisk settings."
  parameters:
  - description: "the osDisk value to set."
    name: "osDisk"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.OSDisk?alt=com.azure.resourcemanager.batch.models.OSDisk&text=OSDisk\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withOsDisk(OSDisk osDisk)"
  desc: "Set the osDisk property: Contains configuration for ephemeral OSDisk settings."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withSecurityProfile(com.azure.resourcemanager.batch.models.SecurityProfile)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withSecurityProfile(SecurityProfile securityProfile)"
  name: "withSecurityProfile(SecurityProfile securityProfile)"
  nameWithType: "VirtualMachineConfiguration.withSecurityProfile(SecurityProfile securityProfile)"
  summary: "Set the security<wbr>Profile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  parameters:
  - description: "the securityProfile value to set."
    name: "securityProfile"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.SecurityProfile?alt=com.azure.resourcemanager.batch.models.SecurityProfile&text=SecurityProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withSecurityProfile(SecurityProfile securityProfile)"
  desc: "Set the securityProfile property: Specifies the security profile settings for the virtual machine or virtual machine scale set."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withServiceArtifactReference(com.azure.resourcemanager.batch.models.ServiceArtifactReference)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  name: "withServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  nameWithType: "VirtualMachineConfiguration.withServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  summary: "Set the service<wbr>Artifact<wbr>Reference property: The service artifact reference id in the form of /subscriptions/\\{subscription<wbr>Id\\}/resource<wbr>Groups/\\{resource<wbr>Group\\}/providers/Microsoft.<wbr>Compute/galleries/\\{gallery<wbr>Name\\}/service<wbr>Artifacts/\\{service<wbr>Artifact<wbr>Name\\}/vm<wbr>Artifacts<wbr>Profiles/\\{vm<wbr>Artifacts<wbr>Profiles<wbr>Name\\}."
  parameters:
  - description: "the serviceArtifactReference value to set."
    name: "serviceArtifactReference"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.ServiceArtifactReference?alt=com.azure.resourcemanager.batch.models.ServiceArtifactReference&text=ServiceArtifactReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withServiceArtifactReference(ServiceArtifactReference serviceArtifactReference)"
  desc: "Set the serviceArtifactReference property: The service artifact reference id in the form of /subscriptions/\\{subscriptionId\\}/resourceGroups/\\{resourceGroup\\}/providers/Microsoft.Compute/galleries/\\{galleryName\\}/serviceArtifacts/\\{serviceArtifactName\\}/vmArtifactsProfiles/\\{vmArtifactsProfilesName\\}."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withWindowsConfiguration(com.azure.resourcemanager.batch.models.WindowsConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  name: "withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  nameWithType: "VirtualMachineConfiguration.withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  summary: "Set the windows<wbr>Configuration property: This property must not be specified if the image<wbr>Reference specifies a Linux OS image."
  parameters:
  - description: "the windowsConfiguration value to set."
    name: "windowsConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.WindowsConfiguration?alt=com.azure.resourcemanager.batch.models.WindowsConfiguration&text=WindowsConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public VirtualMachineConfiguration withWindowsConfiguration(WindowsConfiguration windowsConfiguration)"
  desc: "Set the windowsConfiguration property: This property must not be specified if the imageReference specifies a Linux OS image."
  returns:
    description: "the VirtualMachineConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.batch.models.VirtualMachineConfiguration?alt=com.azure.resourcemanager.batch.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.batch.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:2.0.0
