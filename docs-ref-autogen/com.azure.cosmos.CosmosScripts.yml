### YamlMime:JavaType
uid: "com.azure.cosmos.CosmosScripts"
fullName: "com.azure.cosmos.CosmosScripts"
name: "CosmosScripts"
nameWithType: "CosmosScripts"
summary: "The type Cosmos sync scripts."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CosmosScripts"
methods:
- uid: "com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties)"
  fullName: "com.azure.cosmos.CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties)"
  name: "createStoredProcedure(CosmosStoredProcedureProperties properties)"
  nameWithType: "CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties)"
  summary: "Create stored procedure"
  parameters:
  - description: "the properties"
    name: "properties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureProperties?alt=com.azure.cosmos.models.CosmosStoredProcedureProperties&text=CosmosStoredProcedureProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosStoredProcedureResponse createStoredProcedure(CosmosStoredProcedureProperties properties)"
  desc: "Create stored procedure"
  returns:
    description: "the cosmos stored procedure response"
    type: "<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureResponse?alt=com.azure.cosmos.models.CosmosStoredProcedureResponse&text=CosmosStoredProcedureResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosScripts.createStoredProcedure(com.azure.cosmos.models.CosmosStoredProcedureProperties,com.azure.cosmos.models.CosmosStoredProcedureRequestOptions)"
  fullName: "com.azure.cosmos.CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
  name: "createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
  nameWithType: "CosmosScripts.createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
  summary: "Create stored procedure cosmos"
  parameters:
  - description: "the properties"
    name: "properties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureProperties?alt=com.azure.cosmos.models.CosmosStoredProcedureProperties&text=CosmosStoredProcedureProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureRequestOptions?alt=com.azure.cosmos.models.CosmosStoredProcedureRequestOptions&text=CosmosStoredProcedureRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosStoredProcedureResponse createStoredProcedure(CosmosStoredProcedureProperties properties, CosmosStoredProcedureRequestOptions options)"
  desc: "Create stored procedure cosmos"
  returns:
    description: "the cosmos stored procedure response"
    type: "<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureResponse?alt=com.azure.cosmos.models.CosmosStoredProcedureResponse&text=CosmosStoredProcedureResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosScripts.createTrigger(com.azure.cosmos.models.CosmosTriggerProperties)"
  fullName: "com.azure.cosmos.CosmosScripts.createTrigger(CosmosTriggerProperties properties)"
  name: "createTrigger(CosmosTriggerProperties properties)"
  nameWithType: "CosmosScripts.createTrigger(CosmosTriggerProperties properties)"
  summary: "Create trigger"
  parameters:
  - description: "the properties"
    name: "properties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosTriggerProperties?alt=com.azure.cosmos.models.CosmosTriggerProperties&text=CosmosTriggerProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosTriggerResponse createTrigger(CosmosTriggerProperties properties)"
  desc: "Create trigger"
  returns:
    description: "the cosmos trigger response"
    type: "<xref href=\"com.azure.cosmos.models.CosmosTriggerResponse?alt=com.azure.cosmos.models.CosmosTriggerResponse&text=CosmosTriggerResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosScripts.createUserDefinedFunction(com.azure.cosmos.models.CosmosUserDefinedFunctionProperties)"
  fullName: "com.azure.cosmos.CosmosScripts.createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
  name: "createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
  nameWithType: "CosmosScripts.createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
  summary: "Create user defined function"
  parameters:
  - description: "the properties"
    name: "properties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosUserDefinedFunctionProperties?alt=com.azure.cosmos.models.CosmosUserDefinedFunctionProperties&text=CosmosUserDefinedFunctionProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosUserDefinedFunctionResponse createUserDefinedFunction(CosmosUserDefinedFunctionProperties properties)"
  desc: "Create user defined function"
  returns:
    description: "the cosmos user defined function response"
    type: "<xref href=\"com.azure.cosmos.models.CosmosUserDefinedFunctionResponse?alt=com.azure.cosmos.models.CosmosUserDefinedFunctionResponse&text=CosmosUserDefinedFunctionResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosScripts.getStoredProcedure(java.lang.String)"
  fullName: "com.azure.cosmos.CosmosScripts.getStoredProcedure(String id)"
  name: "getStoredProcedure(String id)"
  nameWithType: "CosmosScripts.getStoredProcedure(String id)"
  summary: "Gets stored procedure."
  parameters:
  - description: "the id"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosStoredProcedure getStoredProcedure(String id)"
  desc: "Gets stored procedure."
  returns:
    description: "the stored procedure"
    type: "<xref href=\"com.azure.cosmos.CosmosStoredProcedure?alt=com.azure.cosmos.CosmosStoredProcedure&text=CosmosStoredProcedure\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosScripts.getTrigger(java.lang.String)"
  fullName: "com.azure.cosmos.CosmosScripts.getTrigger(String id)"
  name: "getTrigger(String id)"
  nameWithType: "CosmosScripts.getTrigger(String id)"
  summary: "Gets trigger."
  parameters:
  - description: "the id"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosTrigger getTrigger(String id)"
  desc: "Gets trigger."
  returns:
    description: "the trigger"
    type: "<xref href=\"com.azure.cosmos.CosmosTrigger?alt=com.azure.cosmos.CosmosTrigger&text=CosmosTrigger\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosScripts.getUserDefinedFunction(java.lang.String)"
  fullName: "com.azure.cosmos.CosmosScripts.getUserDefinedFunction(String id)"
  name: "getUserDefinedFunction(String id)"
  nameWithType: "CosmosScripts.getUserDefinedFunction(String id)"
  summary: "Gets user defined function."
  parameters:
  - description: "the id"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosUserDefinedFunction getUserDefinedFunction(String id)"
  desc: "Gets user defined function."
  returns:
    description: "the user defined function"
    type: "<xref href=\"com.azure.cosmos.CosmosUserDefinedFunction?alt=com.azure.cosmos.CosmosUserDefinedFunction&text=CosmosUserDefinedFunction\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  name: "queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  nameWithType: "CosmosScripts.queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  summary: "Query stored procedures <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable<CosmosStoredProcedureProperties> queryStoredProcedures(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  desc: "Query stored procedures <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureProperties?alt=com.azure.cosmos.models.CosmosStoredProcedureProperties&text=CosmosStoredProcedureProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosScripts.queryStoredProcedures(String query, CosmosQueryRequestOptions options)"
  name: "queryStoredProcedures(String query, CosmosQueryRequestOptions options)"
  nameWithType: "CosmosScripts.queryStoredProcedures(String query, CosmosQueryRequestOptions options)"
  summary: "Query stored procedures <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query"
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable<CosmosStoredProcedureProperties> queryStoredProcedures(String query, CosmosQueryRequestOptions options)"
  desc: "Query stored procedures <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureProperties?alt=com.azure.cosmos.models.CosmosStoredProcedureProperties&text=CosmosStoredProcedureProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.queryTriggers(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosScripts.queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  name: "queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  nameWithType: "CosmosScripts.queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  summary: "Query triggers <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable<CosmosTriggerProperties> queryTriggers(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  desc: "Query triggers <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosTriggerProperties?alt=com.azure.cosmos.models.CosmosTriggerProperties&text=CosmosTriggerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.queryTriggers(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosScripts.queryTriggers(String query, CosmosQueryRequestOptions options)"
  name: "queryTriggers(String query, CosmosQueryRequestOptions options)"
  nameWithType: "CosmosScripts.queryTriggers(String query, CosmosQueryRequestOptions options)"
  summary: "Query triggers <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query"
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable<CosmosTriggerProperties> queryTriggers(String query, CosmosQueryRequestOptions options)"
  desc: "Query triggers <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosTriggerProperties?alt=com.azure.cosmos.models.CosmosTriggerProperties&text=CosmosTriggerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  name: "queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  nameWithType: "CosmosScripts.queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  summary: "Query user defined functions <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query spec"
    name: "querySpec"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> queryUserDefinedFunctions(SqlQuerySpec querySpec, CosmosQueryRequestOptions options)"
  desc: "Query user defined functions <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosUserDefinedFunctionProperties?alt=com.azure.cosmos.models.CosmosUserDefinedFunctionProperties&text=CosmosUserDefinedFunctionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions)"
  fullName: "com.azure.cosmos.CosmosScripts.queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)"
  name: "queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)"
  nameWithType: "CosmosScripts.queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)"
  summary: "Query user defined functions <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query"
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options"
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> queryUserDefinedFunctions(String query, CosmosQueryRequestOptions options)"
  desc: "Query user defined functions <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosUserDefinedFunctionProperties?alt=com.azure.cosmos.models.CosmosUserDefinedFunctionProperties&text=CosmosUserDefinedFunctionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.readAllStoredProcedures()"
  fullName: "com.azure.cosmos.CosmosScripts.readAllStoredProcedures()"
  name: "readAllStoredProcedures()"
  nameWithType: "CosmosScripts.readAllStoredProcedures()"
  summary: "Read all stored procedures <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  syntax: "public CosmosPagedIterable<CosmosStoredProcedureProperties> readAllStoredProcedures()"
  desc: "Read all stored procedures <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosStoredProcedureProperties?alt=com.azure.cosmos.models.CosmosStoredProcedureProperties&text=CosmosStoredProcedureProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.readAllTriggers()"
  fullName: "com.azure.cosmos.CosmosScripts.readAllTriggers()"
  name: "readAllTriggers()"
  nameWithType: "CosmosScripts.readAllTriggers()"
  summary: "Read all triggers <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  syntax: "public CosmosPagedIterable<CosmosTriggerProperties> readAllTriggers()"
  desc: "Read all triggers <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosTriggerProperties?alt=com.azure.cosmos.models.CosmosTriggerProperties&text=CosmosTriggerProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions()"
  fullName: "com.azure.cosmos.CosmosScripts.readAllUserDefinedFunctions()"
  name: "readAllUserDefinedFunctions()"
  nameWithType: "CosmosScripts.readAllUserDefinedFunctions()"
  summary: "Read all user defined functions <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  syntax: "public CosmosPagedIterable<CosmosUserDefinedFunctionProperties> readAllUserDefinedFunctions()"
  desc: "Read all user defined functions <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>"
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosUserDefinedFunctionProperties?alt=com.azure.cosmos.models.CosmosUserDefinedFunctionProperties&text=CosmosUserDefinedFunctionProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "The type Cosmos sync scripts."
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.34.0
