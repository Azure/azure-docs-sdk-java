### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.PublicIpAddress"
fullName: "com.azure.resourcemanager.network.models.PublicIpAddress"
name: "PublicIpAddress"
nameWithType: "PublicIpAddress"
summary: "Public IP address."
syntax: "public interface PublicIpAddress extends GroupableResource<NetworkManager,PublicIpAddressInner>, Refreshable<PublicIpAddress>, Updatable<PublicIpAddress.Update>, UpdatableWithTags<PublicIpAddress>"
methods:
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.availabilityZones()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.availabilityZones()"
  name: "availabilityZones()"
  nameWithType: "PublicIpAddress.availabilityZones()"
  modifiers:
  - "abstract"
  syntax: "public abstract Set<AvailabilityZoneId> availabilityZones()"
  returns:
    description: "the availability zones assigned to the public IP address"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Set.html\">Set</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.AvailabilityZoneId?alt=com.azure.resourcemanager.resources.fluentcore.arm.AvailabilityZoneId&text=AvailabilityZoneId\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.fqdn()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.fqdn()"
  name: "fqdn()"
  nameWithType: "PublicIpAddress.fqdn()"
  modifiers:
  - "abstract"
  syntax: "public abstract String fqdn()"
  returns:
    description: "the assigned FQDN (fully qualified domain name)"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.getAssignedLoadBalancerFrontend()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.getAssignedLoadBalancerFrontend()"
  name: "getAssignedLoadBalancerFrontend()"
  nameWithType: "PublicIpAddress.getAssignedLoadBalancerFrontend()"
  modifiers:
  - "abstract"
  syntax: "public abstract LoadBalancerPublicFrontend getAssignedLoadBalancerFrontend()"
  returns:
    description: "the load balancer public frontend that this public IP address is assigned to"
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerPublicFrontend?alt=com.azure.resourcemanager.network.models.LoadBalancerPublicFrontend&text=LoadBalancerPublicFrontend\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.getAssignedNetworkInterfaceIPConfiguration()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.getAssignedNetworkInterfaceIPConfiguration()"
  name: "getAssignedNetworkInterfaceIPConfiguration()"
  nameWithType: "PublicIpAddress.getAssignedNetworkInterfaceIPConfiguration()"
  modifiers:
  - "abstract"
  syntax: "public abstract NicIpConfiguration getAssignedNetworkInterfaceIPConfiguration()"
  returns:
    description: "the network interface IP configuration that this public IP address is assigned to"
    type: "<xref href=\"com.azure.resourcemanager.network.models.NicIpConfiguration?alt=com.azure.resourcemanager.network.models.NicIpConfiguration&text=NicIpConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.hasAssignedLoadBalancer()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.hasAssignedLoadBalancer()"
  name: "hasAssignedLoadBalancer()"
  nameWithType: "PublicIpAddress.hasAssignedLoadBalancer()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean hasAssignedLoadBalancer()"
  returns:
    description: "true if this public IP address is assigned to a load balancer"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.hasAssignedNetworkInterface()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.hasAssignedNetworkInterface()"
  name: "hasAssignedNetworkInterface()"
  nameWithType: "PublicIpAddress.hasAssignedNetworkInterface()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean hasAssignedNetworkInterface()"
  returns:
    description: "true if this public IP address is assigned to a network interface"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.idleTimeoutInMinutes()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.idleTimeoutInMinutes()"
  name: "idleTimeoutInMinutes()"
  nameWithType: "PublicIpAddress.idleTimeoutInMinutes()"
  modifiers:
  - "abstract"
  syntax: "public abstract int idleTimeoutInMinutes()"
  returns:
    description: "the idle connection timeout setting (in minutes)"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.ipAddress()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.ipAddress()"
  name: "ipAddress()"
  nameWithType: "PublicIpAddress.ipAddress()"
  modifiers:
  - "abstract"
  syntax: "public abstract String ipAddress()"
  returns:
    description: "the assigned IP address"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.ipAllocationMethod()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.ipAllocationMethod()"
  name: "ipAllocationMethod()"
  nameWithType: "PublicIpAddress.ipAllocationMethod()"
  modifiers:
  - "abstract"
  syntax: "public abstract IpAllocationMethod ipAllocationMethod()"
  returns:
    description: "the IP address allocation method (Static/Dynamic)"
    type: "<xref href=\"com.azure.resourcemanager.network.models.IpAllocationMethod?alt=com.azure.resourcemanager.network.models.IpAllocationMethod&text=IpAllocationMethod\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.ipTags()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.ipTags()"
  name: "ipTags()"
  nameWithType: "PublicIpAddress.ipTags()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<IpTag> ipTags()"
  returns:
    description: "read-only list of ipTags assosiated with public ip address"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.network.models.IpTag?alt=com.azure.resourcemanager.network.models.IpTag&text=IpTag\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.leafDomainLabel()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.leafDomainLabel()"
  name: "leafDomainLabel()"
  nameWithType: "PublicIpAddress.leafDomainLabel()"
  modifiers:
  - "abstract"
  syntax: "public abstract String leafDomainLabel()"
  returns:
    description: "the assigned leaf domain label"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.reverseFqdn()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.reverseFqdn()"
  name: "reverseFqdn()"
  nameWithType: "PublicIpAddress.reverseFqdn()"
  modifiers:
  - "abstract"
  syntax: "public abstract String reverseFqdn()"
  returns:
    description: "the assigned reverse FQDN, if any"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.sku()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.sku()"
  name: "sku()"
  nameWithType: "PublicIpAddress.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract PublicIPSkuType sku()"
  returns:
    description: "public IP address sku."
    type: "<xref href=\"com.azure.resourcemanager.network.models.PublicIPSkuType?alt=com.azure.resourcemanager.network.models.PublicIPSkuType&text=PublicIPSkuType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.PublicIpAddress.version()"
  fullName: "com.azure.resourcemanager.network.models.PublicIpAddress.version()"
  name: "version()"
  nameWithType: "PublicIpAddress.version()"
  modifiers:
  - "abstract"
  syntax: "public abstract IpVersion version()"
  returns:
    description: "the IP version of the public IP address"
    type: "<xref href=\"com.azure.resourcemanager.network.models.IpVersion?alt=com.azure.resourcemanager.network.models.IpVersion&text=IpVersion\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Public IP address."
implements:
- "<xref href=\"com.azure.resourcemanager.network.models.UpdatableWithTags?alt=com.azure.resourcemanager.network.models.UpdatableWithTags&text=UpdatableWithTags\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.PublicIpAddress?alt=com.azure.resourcemanager.network.models.PublicIpAddress&text=PublicIpAddress\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.NetworkManager?alt=com.azure.resourcemanager.network.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.network.fluent.models.PublicIpAddressInner?alt=com.azure.resourcemanager.network.fluent.models.PublicIpAddressInner&text=PublicIpAddressInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.PublicIpAddress?alt=com.azure.resourcemanager.network.models.PublicIpAddress&text=PublicIpAddress\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.PublicIpAddress.Update?alt=com.azure.resourcemanager.network.models.PublicIpAddress.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.19.0
