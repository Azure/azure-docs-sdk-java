### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient"
fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient"
name: "BackupsClient"
nameWithType: "BackupsClient"
summary: "An instance of this class provides access to all the operations defined in Backups<wbr>Client."
syntax: "public interface **BackupsClient**"
methods:
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.get(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.get(String resourceGroupName, String serverName, String backupName)"
  name: "get(String resourceGroupName, String serverName, String backupName)"
  nameWithType: "BackupsClient.get(String resourceGroupName, String serverName, String backupName)"
  summary: "Get specific backup for a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the server."
    name: "serverName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the backup."
    name: "backupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract ServerBackupInner get(String resourceGroupName, String serverName, String backupName)"
  desc: "Get specific backup for a given server."
  returns:
    description: "specific backup for a given server."
    type: "<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner&text=ServerBackupInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.getAsync(String resourceGroupName, String serverName, String backupName)"
  name: "getAsync(String resourceGroupName, String serverName, String backupName)"
  nameWithType: "BackupsClient.getAsync(String resourceGroupName, String serverName, String backupName)"
  summary: "Get specific backup for a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the server."
    name: "serverName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the backup."
    name: "backupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<ServerBackupInner> getAsync(String resourceGroupName, String serverName, String backupName)"
  desc: "Get specific backup for a given server."
  returns:
    description: "specific backup for a given server on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner&text=ServerBackupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.getWithResponse(String resourceGroupName, String serverName, String backupName, Context context)"
  name: "getWithResponse(String resourceGroupName, String serverName, String backupName, Context context)"
  nameWithType: "BackupsClient.getWithResponse(String resourceGroupName, String serverName, String backupName, Context context)"
  summary: "Get specific backup for a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the server."
    name: "serverName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the backup."
    name: "backupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<ServerBackupInner> getWithResponse(String resourceGroupName, String serverName, String backupName, Context context)"
  desc: "Get specific backup for a given server."
  returns:
    description: "specific backup for a given server along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner&text=ServerBackupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.getWithResponseAsync(String resourceGroupName, String serverName, String backupName)"
  name: "getWithResponseAsync(String resourceGroupName, String serverName, String backupName)"
  nameWithType: "BackupsClient.getWithResponseAsync(String resourceGroupName, String serverName, String backupName)"
  summary: "Get specific backup for a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the server."
    name: "serverName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the backup."
    name: "backupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<ServerBackupInner>> getWithResponseAsync(String resourceGroupName, String serverName, String backupName)"
  desc: "Get specific backup for a given server."
  returns:
    description: "specific backup for a given server along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner&text=ServerBackupInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.listByServer(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.listByServer(String resourceGroupName, String serverName)"
  name: "listByServer(String resourceGroupName, String serverName)"
  nameWithType: "BackupsClient.listByServer(String resourceGroupName, String serverName)"
  summary: "List all the backups for a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the server."
    name: "serverName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<ServerBackupInner> listByServer(String resourceGroupName, String serverName)"
  desc: "List all the backups for a given server."
  returns:
    description: "a list of server backups as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner&text=ServerBackupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.listByServer(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.listByServer(String resourceGroupName, String serverName, Context context)"
  name: "listByServer(String resourceGroupName, String serverName, Context context)"
  nameWithType: "BackupsClient.listByServer(String resourceGroupName, String serverName, Context context)"
  summary: "List all the backups for a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the server."
    name: "serverName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<ServerBackupInner> listByServer(String resourceGroupName, String serverName, Context context)"
  desc: "List all the backups for a given server."
  returns:
    description: "a list of server backups as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner&text=ServerBackupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.listByServerAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresqlflexibleserver.fluent.BackupsClient.listByServerAsync(String resourceGroupName, String serverName)"
  name: "listByServerAsync(String resourceGroupName, String serverName)"
  nameWithType: "BackupsClient.listByServerAsync(String resourceGroupName, String serverName)"
  summary: "List all the backups for a given server."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the server."
    name: "serverName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<ServerBackupInner> listByServerAsync(String resourceGroupName, String serverName)"
  desc: "List all the backups for a given server."
  returns:
    description: "a list of server backups as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner?alt=com.azure.resourcemanager.postgresqlflexibleserver.fluent.models.ServerBackupInner&text=ServerBackupInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in BackupsClient."
metadata: {}
package: "com.azure.resourcemanager.postgresqlflexibleserver.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresqlflexibleserver:1.0.0
