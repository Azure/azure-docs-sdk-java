### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler"
fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler"
name: "AmqpConnectionHandler"
nameWithType: "AmqpConnectionHandler"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)"
- "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onTransportError(org.apache.qpid.proton.engine.Event)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
- "org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)"
- "org.apache.qpid.proton.engine.BaseHandler.children()"
- "org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)"
- "org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)"
- "org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)"
- "org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)"
- "org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)"
syntax: "public abstract class AmqpConnectionHandler extends ErrorLoggingBaseHandlerWithCleanup implements CbsSessionStateCallback"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.AmqpConnectionHandler(java.lang.String,com.azure.core.credential.AzureSasCredential,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.AmqpConnectionHandler(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  name: "AmqpConnectionHandler(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  nameWithType: "AmqpConnectionHandler.AmqpConnectionHandler(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  modifiers:
  - "protected"
  parameters:
  - name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "sasTokenProvider"
    type: "<xref href=\"com.azure.core.credential.AzureSasCredential?alt=com.azure.core.credential.AzureSasCredential&text=AzureSasCredential\" data-throw-if-not-resolved=\"False\" />"
  - name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected AmqpConnectionHandler(String hostName, AzureSasCredential sasTokenProvider, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.AmqpConnectionHandler(java.lang.String,com.azure.core.credential.TokenCredential,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.AmqpConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  name: "AmqpConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  nameWithType: "AmqpConnectionHandler.AmqpConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  modifiers:
  - "protected"
  parameters:
  - name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "credential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  - name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected AmqpConnectionHandler(String hostName, TokenCredential credential, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.AmqpConnectionHandler(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol,com.microsoft.azure.sdk.iot.service.ProxyOptions,javax.net.ssl.SSLContext)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.AmqpConnectionHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  name: "AmqpConnectionHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  nameWithType: "AmqpConnectionHandler.AmqpConnectionHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
  modifiers:
  - "protected"
  parameters:
  - name: "hostName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "userName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "sasToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "iotHubServiceClientProtocol"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  - name: "proxyOptions"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - name: "sslContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected AmqpConnectionHandler(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions, SSLContext sslContext)"
fields:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.connection"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.connection"
  name: "connection"
  nameWithType: "AmqpConnectionHandler.connection"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"org.apache.qpid.proton.engine.Connection?alt=org.apache.qpid.proton.engine.Connection&text=Connection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Connection connection"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.hostName"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.hostName"
  name: "hostName"
  nameWithType: "AmqpConnectionHandler.hostName"
  modifiers:
  - "protected"
  - "final"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final String hostName"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.iotHubServiceClientProtocol"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.iotHubServiceClientProtocol"
  name: "iotHubServiceClientProtocol"
  nameWithType: "AmqpConnectionHandler.iotHubServiceClientProtocol"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol?alt=com.microsoft.azure.sdk.iot.service.IotHubServiceClientProtocol&text=IotHubServiceClientProtocol\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected IotHubServiceClientProtocol iotHubServiceClientProtocol"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.proxyOptions"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.proxyOptions"
  name: "proxyOptions"
  nameWithType: "AmqpConnectionHandler.proxyOptions"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.ProxyOptions?alt=com.microsoft.azure.sdk.iot.service.ProxyOptions&text=ProxyOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected ProxyOptions proxyOptions"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.sasToken"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.sasToken"
  name: "sasToken"
  nameWithType: "AmqpConnectionHandler.sasToken"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected String sasToken"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.sslContext"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.sslContext"
  name: "sslContext"
  nameWithType: "AmqpConnectionHandler.sslContext"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected SSLContext sslContext"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.userName"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.userName"
  name: "userName"
  nameWithType: "AmqpConnectionHandler.userName"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected String userName"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onAuthenticationFailed(com.microsoft.azure.sdk.iot.service.exceptions.IotHubException)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onAuthenticationFailed(IotHubException e)"
  name: "onAuthenticationFailed(IotHubException e)"
  nameWithType: "AmqpConnectionHandler.onAuthenticationFailed(IotHubException e)"
  summary: "Executes when the CBS session has failed to authenticate the connection"
  parameters:
  - name: "e"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.service.exceptions.IotHubException?alt=com.microsoft.azure.sdk.iot.service.exceptions.IotHubException&text=IotHubException\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onAuthenticationFailed(IotHubException e)"
  desc: "Executes when the CBS session has failed to authenticate the connection"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionBound(Event event)"
  name: "onConnectionBound(Event event)"
  nameWithType: "AmqpConnectionHandler.onConnectionBound(Event event)"
  summary: "Event handler for the connection bound event"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  parameters:
  - description: "The proton event object"
    name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionBound(Event event)"
  desc: "Event handler for the connection bound event"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionInit(Event event)"
  name: "onConnectionInit(Event event)"
  nameWithType: "AmqpConnectionHandler.onConnectionInit(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionInit(Event event)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onConnectionRemoteOpen(Event event)"
  name: "onConnectionRemoteOpen(Event event)"
  nameWithType: "AmqpConnectionHandler.onConnectionRemoteOpen(Event event)"
  overridden: "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionRemoteOpen(Event event)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onLinkRemoteOpen(Event event)"
  name: "onLinkRemoteOpen(Event event)"
  nameWithType: "AmqpConnectionHandler.onLinkRemoteOpen(Event event)"
  overridden: "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onLinkRemoteOpen(Event event)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onReactorInit(Event event)"
  name: "onReactorInit(Event event)"
  nameWithType: "AmqpConnectionHandler.onReactorInit(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onReactorInit(Event event)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.onSessionRemoteOpen(Event event)"
  name: "onSessionRemoteOpen(Event event)"
  nameWithType: "AmqpConnectionHandler.onSessionRemoteOpen(Event event)"
  overridden: "com.microsoft.azure.sdk.iot.deps.transport.amqp.ErrorLoggingBaseHandlerWithCleanup.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onSessionRemoteOpen(Event event)"
- uid: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened()"
  fullName: "com.microsoft.azure.sdk.iot.service.transport.amqps.AmqpConnectionHandler.verifyConnectionWasOpened()"
  name: "verifyConnectionWasOpened()"
  nameWithType: "AmqpConnectionHandler.verifyConnectionWasOpened()"
  summary: "If an exception was encountered while opening the AMQP connection, this function shall throw that saved exception"
  modifiers:
  - "protected"
  syntax: "protected void verifyConnectionWasOpened()"
  exceptions:
  - description: "if an exception was encountered while openinging the AMQP connection. The encountered\n exception will be the inner exception"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "If an exception was encountered while opening the AMQP connection, this function shall throw that saved exception"
type: "class"
implements:
- "<xref href=\"com.microsoft.azure.sdk.iot.service.transport.amqps.CbsSessionStateCallback?alt=com.microsoft.azure.sdk.iot.service.transport.amqps.CbsSessionStateCallback&text=CbsSessionStateCallback\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.transport.amqps"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
