### YamlMime:JavaMember
nameWithType: BaselinesInner.listAsync
type: method
members:
- fullName: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String resourceUri)
  name: listAsync(String resourceUri)
  nameWithType: BaselinesInner.listAsync(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;SingleMetricBaselineInner&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner?alt=com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner&text=SingleMetricBaselineInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>**Lists the metric baseline values for a resource**.</p>

    <p></p>
  syntax: public Observable<List<SingleMetricBaselineInner>> listAsync(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String resourceUri, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  name: listAsync(String resourceUri, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  nameWithType: BaselinesInner.listAsync(String resourceUri, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner?alt=com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner&text=SingleMetricBaselineInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner?alt=com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner&text=SingleMetricBaselineInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>**Lists the metric baseline values for a resource**.</p>

    <p></p>
  syntax: public ServiceFuture<List<SingleMetricBaselineInner>> listAsync(String resourceUri, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String,final ServiceCallback<List<SingleMetricBaselineInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType)
  name: listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType)
  nameWithType: BaselinesInner.listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The names of the metrics (comma separated) to retrieve. </p>
    name: metricnames
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Metric namespace to query metric definitions for. </p>
    name: metricnamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The list of aggregation types (comma separated) to retrieve. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of sensitivities (comma separated) to retrieve. </p>
    name: sensitivities
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A = a1 and B = b1 or b2&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A = a1, B = b1 and C = c1:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A = a1&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Allows retrieving only metadata of the baseline. On data request all information is retrieved. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the List&lt;SingleMetricBaselineInner&gt; object </p>
    type: Observable&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner?alt=com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner&text=SingleMetricBaselineInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>**Lists the metric baseline values for a resource**.</p>

    <p></p>
  syntax: public Observable<List<SingleMetricBaselineInner>> listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType)
  uid: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String,String,String,String,Period,String,String,String,ResultType)
- fullName: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  name: listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  nameWithType: BaselinesInner.listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The names of the metrics (comma separated) to retrieve. </p>
    name: metricnames
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Metric namespace to query metric definitions for. </p>
    name: metricnamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The list of aggregation types (comma separated) to retrieve. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of sensitivities (comma separated) to retrieve. </p>
    name: sensitivities
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A = a1 and B = b1 or b2&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A = a1, B = b1 and C = c1:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A = a1&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Allows retrieving only metadata of the baseline. On data request all information is retrieved. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner?alt=com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner&text=SingleMetricBaselineInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner?alt=com.microsoft.azure.management.monitor.implementation.SingleMetricBaselineInner&text=SingleMetricBaselineInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>**Lists the metric baseline values for a resource**.</p>

    <p></p>
  syntax: public ServiceFuture<List<SingleMetricBaselineInner>> listAsync(String resourceUri, String metricnames, String metricnamespace, String timespan, Period interval, String aggregation, String sensitivities, String filter, ResultType resultType, final ServiceCallback<List<SingleMetricBaselineInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String,String,String,String,Period,String,String,String,ResultType,final ServiceCallback<List<SingleMetricBaselineInner>>)
uid: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync*
fullName: com.microsoft.azure.management.monitor.implementation.BaselinesInner.listAsync(String resourceUri)
name: listAsync(String resourceUri)
package: com.microsoft.azure.management.monitor.implementation
metadata: {}
