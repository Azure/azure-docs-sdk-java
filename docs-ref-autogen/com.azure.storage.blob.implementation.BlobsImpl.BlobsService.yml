### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  id: "BlobsService"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.abortCopyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.acquireLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.breakLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.changeLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.copyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.createSnapshot(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.download(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccessControl(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getProperties(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.releaseLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.rename(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.PathRenameMode,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.renewLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setAccessControl(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setHTTPHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setTier(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.startCopyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.undelete(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "BlobsImpl.BlobsService"
  nameWithType: "BlobsImpl.BlobsService"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  type: "Interface"
  package: "com.azure.storage.blob.implementation"
  summary: "The interface defining all the services for AzureBlobStorageBlobs to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface BlobsImpl.BlobsService"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.abortCopyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "abortCopyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "abortCopyFromURL(String containerName, String blob, String url, String copyId, Integer timeout, String leaseId, String version, String requestId, String comp, String copyActionAbortConstant, Context context)"
  nameWithType: "BlobsImpl.BlobsService.abortCopyFromURL(String containerName, String blob, String url, String copyId, Integer timeout, String leaseId, String version, String requestId, String comp, String copyActionAbortConstant, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.abortCopyFromURL(String containerName, String blob, String url, String copyId, Integer timeout, String leaseId, String version, String requestId, String comp, String copyActionAbortConstant, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.abortCopyFromURL*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsAbortCopyFromURLResponse> abortCopyFromURL(String containerName, String blob, String url, String copyId, Integer timeout, String leaseId, String version, String requestId, String comp, String copyActionAbortConstant, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "copyId"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "copyActionAbortConstant"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsAbortCopyFromURLResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.acquireLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "acquireLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "acquireLease(String containerName, String blob, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  nameWithType: "BlobsImpl.BlobsService.acquireLease(String containerName, String blob, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.acquireLease(String containerName, String blob, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.acquireLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsAcquireLeaseResponse> acquireLease(String containerName, String blob, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "duration"
      type: "java.lang.Integer"
    - id: "proposedLeaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsAcquireLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.breakLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "breakLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "breakLease(String containerName, String blob, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  nameWithType: "BlobsImpl.BlobsService.breakLease(String containerName, String blob, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.breakLease(String containerName, String blob, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.breakLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsBreakLeaseResponse> breakLease(String containerName, String blob, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "breakPeriod"
      type: "java.lang.Integer"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsBreakLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.changeLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "changeLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "changeLease(String containerName, String blob, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  nameWithType: "BlobsImpl.BlobsService.changeLease(String containerName, String blob, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.changeLease(String containerName, String blob, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.changeLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsChangeLeaseResponse> changeLease(String containerName, String blob, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "proposedLeaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsChangeLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.copyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "copyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "copyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, String sourceContentMD5, String xMsRequiresSync, Context context)"
  nameWithType: "BlobsImpl.BlobsService.copyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, String sourceContentMD5, String xMsRequiresSync, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.copyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, String sourceContentMD5, String xMsRequiresSync, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.copyFromURL*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsCopyFromURLResponse> copyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, String sourceContentMD5, String xMsRequiresSync, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "tier"
      type: "com.azure.storage.blob.models.AccessTier"
    - id: "sourceIfModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfMatch"
      type: "java.lang.String"
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "copySource"
      type: "java.net.URL"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "sourceContentMD5"
      type: "java.lang.String"
    - id: "xMsRequiresSync"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsCopyFromURLResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.createSnapshot(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "createSnapshot(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "createSnapshot(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "BlobsImpl.BlobsService.createSnapshot(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.createSnapshot(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.createSnapshot*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsCreateSnapshotResponse> createSnapshot(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String leaseId, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsCreateSnapshotResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.DeleteSnapshotsOptionType,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "delete(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DeleteSnapshotsOptionType deleteSnapshots, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, Context context)"
  nameWithType: "BlobsImpl.BlobsService.delete(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DeleteSnapshotsOptionType deleteSnapshots, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.delete(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DeleteSnapshotsOptionType deleteSnapshots, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.delete*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsDeleteResponse> delete(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DeleteSnapshotsOptionType deleteSnapshots, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "snapshot"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "deleteSnapshots"
      type: "com.azure.storage.blob.models.DeleteSnapshotsOptionType"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsDeleteResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.download(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,com.azure.core.util.Context)"
  id: "download(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "download(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, Boolean rangeGetContentMD5, Boolean rangeGetContentCRC64, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
  nameWithType: "BlobsImpl.BlobsService.download(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, Boolean rangeGetContentMD5, Boolean rangeGetContentCRC64, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.download(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, Boolean rangeGetContentMD5, Boolean rangeGetContentCRC64, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.download*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsDownloadResponse> download(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, Boolean rangeGetContentMD5, Boolean rangeGetContentCRC64, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "snapshot"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "range"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "rangeGetContentMD5"
      type: "java.lang.Boolean"
    - id: "rangeGetContentCRC64"
      type: "java.lang.Boolean"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsDownloadResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccessControl(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getAccessControl(java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "getAccessControl(String url, Integer timeout, Boolean upn, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
  nameWithType: "BlobsImpl.BlobsService.getAccessControl(String url, Integer timeout, Boolean upn, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccessControl(String url, Integer timeout, Boolean upn, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccessControl*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsGetAccessControlResponse> getAccessControl(String url, Integer timeout, Boolean upn, String leaseId, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "upn"
      type: "java.lang.Boolean"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "requestId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsGetAccessControlResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "getAccountInfo(String containerName, String blob, String url, String version, String restype, String comp, Context context)"
  nameWithType: "BlobsImpl.BlobsService.getAccountInfo(String containerName, String blob, String url, String version, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccountInfo(String containerName, String blob, String url, String version, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccountInfo*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsGetAccountInfoResponse> getAccountInfo(String containerName, String blob, String url, String version, String restype, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsGetAccountInfoResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getProperties(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,com.azure.core.util.Context)"
  id: "getProperties(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "getProperties(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
  nameWithType: "BlobsImpl.BlobsService.getProperties(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getProperties(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getProperties*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsGetPropertiesResponse> getProperties(String containerName, String blob, String url, String snapshot, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "snapshot"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsGetPropertiesResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.releaseLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "releaseLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "releaseLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  nameWithType: "BlobsImpl.BlobsService.releaseLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.releaseLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.releaseLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsReleaseLeaseResponse> releaseLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsReleaseLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.rename(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.PathRenameMode,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "rename(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.PathRenameMode,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "rename(String filesystem, String path, String url, Integer timeout, PathRenameMode pathRenameMode, String renameSource, String directoryProperties, String posixPermissions, String posixUmask, String leaseId, String sourceLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
  nameWithType: "BlobsImpl.BlobsService.rename(String filesystem, String path, String url, Integer timeout, PathRenameMode pathRenameMode, String renameSource, String directoryProperties, String posixPermissions, String posixUmask, String leaseId, String sourceLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.rename(String filesystem, String path, String url, Integer timeout, PathRenameMode pathRenameMode, String renameSource, String directoryProperties, String posixPermissions, String posixUmask, String leaseId, String sourceLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.rename*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsRenameResponse> rename(String filesystem, String path, String url, Integer timeout, PathRenameMode pathRenameMode, String renameSource, String directoryProperties, String posixPermissions, String posixUmask, String leaseId, String sourceLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String cacheControl, String contentType, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
    parameters:
    - id: "filesystem"
      type: "java.lang.String"
    - id: "path"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "pathRenameMode"
      type: "com.azure.storage.blob.models.PathRenameMode"
    - id: "renameSource"
      type: "java.lang.String"
    - id: "directoryProperties"
      type: "java.lang.String"
    - id: "posixPermissions"
      type: "java.lang.String"
    - id: "posixUmask"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "sourceLeaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "sourceIfModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfMatch"
      type: "java.lang.String"
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsRenameResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.renewLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "renewLease(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "renewLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  nameWithType: "BlobsImpl.BlobsService.renewLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.renewLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.renewLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsRenewLeaseResponse> renewLease(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsRenewLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setAccessControl(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setAccessControl(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "setAccessControl(String url, Integer timeout, String leaseId, String owner, String group, String posixPermissions, String posixAcl, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
  nameWithType: "BlobsImpl.BlobsService.setAccessControl(String url, Integer timeout, String leaseId, String owner, String group, String posixPermissions, String posixAcl, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setAccessControl(String url, Integer timeout, String leaseId, String owner, String group, String posixPermissions, String posixAcl, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setAccessControl*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsSetAccessControlResponse> setAccessControl(String url, Integer timeout, String leaseId, String owner, String group, String posixPermissions, String posixAcl, String ifMatch, String ifNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String requestId, String version, String action, Context context)"
    parameters:
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "owner"
      type: "java.lang.String"
    - id: "group"
      type: "java.lang.String"
    - id: "posixPermissions"
      type: "java.lang.String"
    - id: "posixAcl"
      type: "java.lang.String"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "requestId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetAccessControlResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setHTTPHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setHTTPHeaders(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "setHTTPHeaders(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String cacheControl, String contentType, String contentMd5, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
  nameWithType: "BlobsImpl.BlobsService.setHTTPHeaders(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String cacheControl, String contentType, String contentMd5, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setHTTPHeaders(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String cacheControl, String contentType, String contentMd5, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setHTTPHeaders*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsSetHTTPHeadersResponse> setHTTPHeaders(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String cacheControl, String contentType, String contentMd5, String contentEncoding, String contentLanguage, String contentDisposition, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetHTTPHeadersResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "setMetadata(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "setMetadata(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "BlobsImpl.BlobsService.setMetadata(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setMetadata(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setMetadata*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsSetMetadataResponse> setMetadata(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetMetadataResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setTier(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setTier(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "setTier(String containerName, String blob, String url, Integer timeout, AccessTier tier, RehydratePriority rehydratePriority, String version, String requestId, String leaseId, String comp, Context context)"
  nameWithType: "BlobsImpl.BlobsService.setTier(String containerName, String blob, String url, Integer timeout, AccessTier tier, RehydratePriority rehydratePriority, String version, String requestId, String leaseId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setTier(String containerName, String blob, String url, Integer timeout, AccessTier tier, RehydratePriority rehydratePriority, String version, String requestId, String leaseId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setTier*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsSetTierResponse> setTier(String containerName, String blob, String url, Integer timeout, AccessTier tier, RehydratePriority rehydratePriority, String version, String requestId, String leaseId, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "tier"
      type: "com.azure.storage.blob.models.AccessTier"
    - id: "rehydratePriority"
      type: "com.azure.storage.blob.models.RehydratePriority"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetTierResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.startCopyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "startCopyFromURL(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.AccessTier,com.azure.storage.blob.models.RehydratePriority,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "startCopyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, RehydratePriority rehydratePriority, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, Context context)"
  nameWithType: "BlobsImpl.BlobsService.startCopyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, RehydratePriority rehydratePriority, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.startCopyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, RehydratePriority rehydratePriority, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.startCopyFromURL*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsStartCopyFromURLResponse> startCopyFromURL(String containerName, String blob, String url, Integer timeout, Map<String,String> metadata, AccessTier tier, RehydratePriority rehydratePriority, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String leaseId, String version, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "tier"
      type: "com.azure.storage.blob.models.AccessTier"
    - id: "rehydratePriority"
      type: "com.azure.storage.blob.models.RehydratePriority"
    - id: "sourceIfModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfMatch"
      type: "java.lang.String"
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "copySource"
      type: "java.net.URL"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsStartCopyFromURLResponse>"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.undelete(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "undelete(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService"
  langs:
  - "java"
  name: "undelete(String containerName, String blob, String url, Integer timeout, String version, String requestId, String comp, Context context)"
  nameWithType: "BlobsImpl.BlobsService.undelete(String containerName, String blob, String url, Integer timeout, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.undelete(String containerName, String blob, String url, Integer timeout, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.undelete*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<BlobsUndeleteResponse> undelete(String containerName, String blob, String url, Integer timeout, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsUndeleteResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.core.util.DateTimeRfc1123"
  spec.java:
  - uid: "com.azure.core.util.DateTimeRfc1123"
    name: "DateTimeRfc1123"
    fullName: "com.azure.core.util.DateTimeRfc1123"
- uid: "com.azure.storage.blob.models.EncryptionAlgorithmType"
  name: "EncryptionAlgorithmType"
  nameWithType: "EncryptionAlgorithmType"
  fullName: "com.azure.storage.blob.models.EncryptionAlgorithmType"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsDownloadResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsDownloadResponse"
    name: "BlobsDownloadResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsDownloadResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.download*"
  name: "download"
  nameWithType: "BlobsImpl.BlobsService.download"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.download"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsGetPropertiesResponse"
    name: "BlobsGetPropertiesResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getProperties*"
  name: "getProperties"
  nameWithType: "BlobsImpl.BlobsService.getProperties"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getProperties"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.DeleteSnapshotsOptionType"
  name: "DeleteSnapshotsOptionType"
  nameWithType: "DeleteSnapshotsOptionType"
  fullName: "com.azure.storage.blob.models.DeleteSnapshotsOptionType"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsDeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsDeleteResponse"
    name: "BlobsDeleteResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsDeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.delete*"
  name: "delete"
  nameWithType: "BlobsImpl.BlobsService.delete"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.delete"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetAccessControlResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsSetAccessControlResponse"
    name: "BlobsSetAccessControlResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsSetAccessControlResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setAccessControl*"
  name: "setAccessControl"
  nameWithType: "BlobsImpl.BlobsService.setAccessControl"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setAccessControl"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsGetAccessControlResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsGetAccessControlResponse"
    name: "BlobsGetAccessControlResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsGetAccessControlResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccessControl*"
  name: "getAccessControl"
  nameWithType: "BlobsImpl.BlobsService.getAccessControl"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccessControl"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.PathRenameMode"
  name: "PathRenameMode"
  nameWithType: "PathRenameMode"
  fullName: "com.azure.storage.blob.models.PathRenameMode"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsRenameResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsRenameResponse"
    name: "BlobsRenameResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsRenameResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.rename*"
  name: "rename"
  nameWithType: "BlobsImpl.BlobsService.rename"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.rename"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsUndeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsUndeleteResponse"
    name: "BlobsUndeleteResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsUndeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.undelete*"
  name: "undelete"
  nameWithType: "BlobsImpl.BlobsService.undelete"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.undelete"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetHTTPHeadersResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsSetHTTPHeadersResponse"
    name: "BlobsSetHTTPHeadersResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsSetHTTPHeadersResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setHTTPHeaders*"
  name: "setHTTPHeaders"
  nameWithType: "BlobsImpl.BlobsService.setHTTPHeaders"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setHTTPHeaders"
  package: "com.azure.storage.blob.implementation"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetMetadataResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsSetMetadataResponse"
    name: "BlobsSetMetadataResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsSetMetadataResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setMetadata*"
  name: "setMetadata"
  nameWithType: "BlobsImpl.BlobsService.setMetadata"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setMetadata"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsAcquireLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsAcquireLeaseResponse"
    name: "BlobsAcquireLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsAcquireLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.acquireLease*"
  name: "acquireLease"
  nameWithType: "BlobsImpl.BlobsService.acquireLease"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.acquireLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsReleaseLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsReleaseLeaseResponse"
    name: "BlobsReleaseLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsReleaseLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.releaseLease*"
  name: "releaseLease"
  nameWithType: "BlobsImpl.BlobsService.releaseLease"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.releaseLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsRenewLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsRenewLeaseResponse"
    name: "BlobsRenewLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsRenewLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.renewLease*"
  name: "renewLease"
  nameWithType: "BlobsImpl.BlobsService.renewLease"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.renewLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsChangeLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsChangeLeaseResponse"
    name: "BlobsChangeLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsChangeLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.changeLease*"
  name: "changeLease"
  nameWithType: "BlobsImpl.BlobsService.changeLease"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.changeLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsBreakLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsBreakLeaseResponse"
    name: "BlobsBreakLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsBreakLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.breakLease*"
  name: "breakLease"
  nameWithType: "BlobsImpl.BlobsService.breakLease"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.breakLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsCreateSnapshotResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsCreateSnapshotResponse"
    name: "BlobsCreateSnapshotResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsCreateSnapshotResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.createSnapshot*"
  name: "createSnapshot"
  nameWithType: "BlobsImpl.BlobsService.createSnapshot"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.createSnapshot"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.AccessTier"
  name: "AccessTier"
  nameWithType: "AccessTier"
  fullName: "com.azure.storage.blob.models.AccessTier"
- uid: "com.azure.storage.blob.models.RehydratePriority"
  name: "RehydratePriority"
  nameWithType: "RehydratePriority"
  fullName: "com.azure.storage.blob.models.RehydratePriority"
- uid: "java.net.URL"
  spec.java:
  - uid: "java.net.URL"
    name: "URL"
    fullName: "java.net.URL"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsStartCopyFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsStartCopyFromURLResponse"
    name: "BlobsStartCopyFromURLResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsStartCopyFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.startCopyFromURL*"
  name: "startCopyFromURL"
  nameWithType: "BlobsImpl.BlobsService.startCopyFromURL"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.startCopyFromURL"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsCopyFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsCopyFromURLResponse"
    name: "BlobsCopyFromURLResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsCopyFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.copyFromURL*"
  name: "copyFromURL"
  nameWithType: "BlobsImpl.BlobsService.copyFromURL"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.copyFromURL"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsAbortCopyFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsAbortCopyFromURLResponse"
    name: "BlobsAbortCopyFromURLResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsAbortCopyFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.abortCopyFromURL*"
  name: "abortCopyFromURL"
  nameWithType: "BlobsImpl.BlobsService.abortCopyFromURL"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.abortCopyFromURL"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsSetTierResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsSetTierResponse"
    name: "BlobsSetTierResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsSetTierResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setTier*"
  name: "setTier"
  nameWithType: "BlobsImpl.BlobsService.setTier"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.setTier"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.BlobsGetAccountInfoResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.BlobsGetAccountInfoResponse"
    name: "BlobsGetAccountInfoResponse"
    fullName: "com.azure.storage.blob.implementation.models.BlobsGetAccountInfoResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccountInfo*"
  name: "getAccountInfo"
  nameWithType: "BlobsImpl.BlobsService.getAccountInfo"
  fullName: "com.azure.storage.blob.implementation.BlobsImpl.BlobsService.getAccountInfo"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.BlobsDownloadResponse"
  name: "BlobsDownloadResponse"
  nameWithType: "BlobsDownloadResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsDownloadResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsGetPropertiesResponse"
  name: "BlobsGetPropertiesResponse"
  nameWithType: "BlobsGetPropertiesResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsGetPropertiesResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsDeleteResponse"
  name: "BlobsDeleteResponse"
  nameWithType: "BlobsDeleteResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsDeleteResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsSetAccessControlResponse"
  name: "BlobsSetAccessControlResponse"
  nameWithType: "BlobsSetAccessControlResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsSetAccessControlResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsGetAccessControlResponse"
  name: "BlobsGetAccessControlResponse"
  nameWithType: "BlobsGetAccessControlResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsGetAccessControlResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsRenameResponse"
  name: "BlobsRenameResponse"
  nameWithType: "BlobsRenameResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsRenameResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsUndeleteResponse"
  name: "BlobsUndeleteResponse"
  nameWithType: "BlobsUndeleteResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsUndeleteResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsSetHTTPHeadersResponse"
  name: "BlobsSetHTTPHeadersResponse"
  nameWithType: "BlobsSetHTTPHeadersResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsSetHTTPHeadersResponse"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.azure.storage.blob.implementation.models.BlobsSetMetadataResponse"
  name: "BlobsSetMetadataResponse"
  nameWithType: "BlobsSetMetadataResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsSetMetadataResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsAcquireLeaseResponse"
  name: "BlobsAcquireLeaseResponse"
  nameWithType: "BlobsAcquireLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsAcquireLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsReleaseLeaseResponse"
  name: "BlobsReleaseLeaseResponse"
  nameWithType: "BlobsReleaseLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsReleaseLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsRenewLeaseResponse"
  name: "BlobsRenewLeaseResponse"
  nameWithType: "BlobsRenewLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsRenewLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsChangeLeaseResponse"
  name: "BlobsChangeLeaseResponse"
  nameWithType: "BlobsChangeLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsChangeLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsBreakLeaseResponse"
  name: "BlobsBreakLeaseResponse"
  nameWithType: "BlobsBreakLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsBreakLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsCreateSnapshotResponse"
  name: "BlobsCreateSnapshotResponse"
  nameWithType: "BlobsCreateSnapshotResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsCreateSnapshotResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsStartCopyFromURLResponse"
  name: "BlobsStartCopyFromURLResponse"
  nameWithType: "BlobsStartCopyFromURLResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsStartCopyFromURLResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsCopyFromURLResponse"
  name: "BlobsCopyFromURLResponse"
  nameWithType: "BlobsCopyFromURLResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsCopyFromURLResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsAbortCopyFromURLResponse"
  name: "BlobsAbortCopyFromURLResponse"
  nameWithType: "BlobsAbortCopyFromURLResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsAbortCopyFromURLResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsSetTierResponse"
  name: "BlobsSetTierResponse"
  nameWithType: "BlobsSetTierResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsSetTierResponse"
- uid: "com.azure.storage.blob.implementation.models.BlobsGetAccountInfoResponse"
  name: "BlobsGetAccountInfoResponse"
  nameWithType: "BlobsGetAccountInfoResponse"
  fullName: "com.azure.storage.blob.implementation.models.BlobsGetAccountInfoResponse"
