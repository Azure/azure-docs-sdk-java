### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  id: ContainerServiceImpl
  parent: com.microsoft.azure.management.containerservice.implementation
  children:
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.agentPools()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.ContainerServiceImpl(String,ContainerServiceInner,ContainerServiceManager)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.createResourceAsync()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.defineAgentPool(String)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.getInnerAsync()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.isDiagnosticsEnabled()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.linuxRootUsername()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterDnsPrefix()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterFqdn()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterNodeCount()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterOSDiskSizeInGB()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterStorageProfile()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterSubnetName()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.networkId()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.orchestratorType()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalClientId()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalSecret()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.sshKey()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withAgentVirtualMachineCount(int)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDcosOrchestration()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDiagnostics()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withKubernetesOrchestration()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withLinux()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterDnsPrefix(String)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterNodeCount(ContainerServiceMasterProfileCount)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterOSDiskSizeInGB(int)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterStorageProfile(ContainerServiceStorageProfileTypes)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterVMSize(ContainerServiceVMSizeTypes)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withoutDiagnostics()
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withRootUsername(String)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withServicePrincipal(String,String)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSshKey(String)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSubnet(String,String)
  - com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSwarmOrchestration()
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: ContainerServiceImpl
  nameWithType: ContainerServiceImpl
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  type: Class
  source:
    remote: &o0
      path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 37
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>The implementation for ContainerService and its create and update interfaces. </p>"
  syntax: &o1
    content: public class ContainerServiceImpl implements ContainerService,ContainerService.Definition,ContainerService.Update
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.GroupableResourceImpl<ContainerService, ContainerServiceInner, ContainerServiceImpl, ContainerServiceManager>
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
  - com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  - com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
  - com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
  - com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(Region)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.agentPools()
  id: agentPools()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: agentPools()
  nameWithType: ContainerServiceImpl.agentPools()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.agentPools()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.agentPools*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 104
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public Map<String, ContainerServiceAgentPool> agentPools()
    return:
      type: 2108f1f4com.microsoft.azure.management.containerservice.ContainerServiceAgentPoola08ddfce
      description: <p>the agent pools map </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.agentPools()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.ContainerServiceImpl(String,ContainerServiceInner,ContainerServiceManager)
  id: ContainerServiceImpl(String,ContainerServiceInner,ContainerServiceManager)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: ContainerServiceImpl(String name, ContainerServiceInner innerObject, ContainerServiceManager manager)
  nameWithType: ContainerServiceImpl.ContainerServiceImpl(String name, ContainerServiceInner innerObject, ContainerServiceManager manager)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.ContainerServiceImpl(String name, ContainerServiceInner innerObject, ContainerServiceManager manager)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.ContainerServiceImpl*
  type: Constructor
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 51
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: protected ContainerServiceImpl(String name, ContainerServiceInner innerObject, ContainerServiceManager manager)
    parameters:
    - id: name
      type: "26831127"
    - id: innerObject
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner
    - id: manager
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.createResourceAsync()
  id: createResourceAsync()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: createResourceAsync()
  nameWithType: ContainerServiceImpl.createResourceAsync()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.createResourceAsync()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.createResourceAsync*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 347
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public Observable<ContainerService> createResourceAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.containerservice.ContainerServicea08ddfce
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.defineAgentPool(String)
  id: defineAgentPool(String)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: defineAgentPool(String name)
  nameWithType: ContainerServiceImpl.defineAgentPool(String name)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.defineAgentPool(String name)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.defineAgentPool*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 207
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Begins the definition of a agent pool profile to be attached to the container service.</p>\r\n<p></p>"
  syntax:
    content: public ContainerServiceAgentPoolImpl defineAgentPool(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the name for the agent pool profile </p>
    return:
      type: abad75d1
      description: <p>the stage representing configuration for the agent pool profile </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.getInnerAsync()
  id: getInnerAsync()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: getInnerAsync()
  nameWithType: ContainerServiceImpl.getInnerAsync()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.getInnerAsync()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.getInnerAsync*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 342
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: protected Observable<ContainerServiceInner> getInnerAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.containerservice.implementation.ContainerServiceInnera08ddfce
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.isDiagnosticsEnabled()
  id: isDiagnosticsEnabled()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: isDiagnosticsEnabled()
  nameWithType: ContainerServiceImpl.isDiagnosticsEnabled()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.isDiagnosticsEnabled()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.isDiagnosticsEnabled*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 183
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public boolean isDiagnosticsEnabled()
    return:
      type: 4fc6e284
      description: <p>true if diagnostics are enabled </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.isDiagnosticsEnabled()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.linuxRootUsername()
  id: linuxRootUsername()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: linuxRootUsername()
  nameWithType: ContainerServiceImpl.linuxRootUsername()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.linuxRootUsername()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.linuxRootUsername*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 116
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String linuxRootUsername()
    return:
      type: "26831127"
      description: <p>the Linux root username </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.linuxRootUsername()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterDnsPrefix()
  id: masterDnsPrefix()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: masterDnsPrefix()
  nameWithType: ContainerServiceImpl.masterDnsPrefix()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterDnsPrefix()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterDnsPrefix*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 86
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String masterDnsPrefix()
    return:
      type: "26831127"
      description: <p>the master DNS prefix which was specified at creation time </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.masterDnsPrefix()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterFqdn()
  id: masterFqdn()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: masterFqdn()
  nameWithType: ContainerServiceImpl.masterFqdn()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterFqdn()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterFqdn*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 95
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String masterFqdn()
    return:
      type: "26831127"
      description: <p>the master FQDN </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.masterFqdn()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterNodeCount()
  id: masterNodeCount()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: masterNodeCount()
  nameWithType: ContainerServiceImpl.masterNodeCount()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterNodeCount()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterNodeCount*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 67
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public int masterNodeCount()
    return:
      type: f75371fa
      description: <p>the master node count </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.masterNodeCount()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterOSDiskSizeInGB()
  id: masterOSDiskSizeInGB()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: masterOSDiskSizeInGB()
  nameWithType: ContainerServiceImpl.masterOSDiskSizeInGB()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterOSDiskSizeInGB()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterOSDiskSizeInGB*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 155
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public int masterOSDiskSizeInGB()
    return:
      type: f75371fa
      description: <p>OS disk size in GB set for every machine in the master pool </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.masterOSDiskSizeInGB()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterStorageProfile()
  id: masterStorageProfile()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: masterStorageProfile()
  nameWithType: ContainerServiceImpl.masterStorageProfile()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterStorageProfile()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterStorageProfile*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 164
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public ContainerServiceStorageProfileTypes masterStorageProfile()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes
      description: <p>the storage kind set for every machine in the master pool </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.masterStorageProfile()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterSubnetName()
  id: masterSubnetName()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: masterSubnetName()
  nameWithType: ContainerServiceImpl.masterSubnetName()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterSubnetName()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterSubnetName*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 173
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String masterSubnetName()
    return:
      type: "26831127"
      description: <p>the name of the subnet used by every machine in the master pool </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.masterSubnetName()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.networkId()
  id: networkId()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: networkId()
  nameWithType: ContainerServiceImpl.networkId()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.networkId()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.networkId*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 178
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String networkId()
    return:
      type: "26831127"
      description: <p>the ID of the virtual network used by every machine in the master and agent pools </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.networkId()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.orchestratorType()
  id: orchestratorType()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: orchestratorType()
  nameWithType: ContainerServiceImpl.orchestratorType()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.orchestratorType()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.orchestratorType*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 77
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public ContainerServiceOrchestratorTypes orchestratorType()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes
      description: <p>the type of the orchestrator </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.orchestratorType()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalClientId()
  id: servicePrincipalClientId()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: servicePrincipalClientId()
  nameWithType: ContainerServiceImpl.servicePrincipalClientId()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalClientId()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalClientId*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 137
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String servicePrincipalClientId()
    return:
      type: "26831127"
      description: <p>the service principal client ID </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalClientId()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalSecret()
  id: servicePrincipalSecret()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: servicePrincipalSecret()
  nameWithType: ContainerServiceImpl.servicePrincipalSecret()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalSecret()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalSecret*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 146
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String servicePrincipalSecret()
    return:
      type: "26831127"
      description: <p>the service principal secret </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalSecret()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.sshKey()
  id: sshKey()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: sshKey()
  nameWithType: ContainerServiceImpl.sshKey()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.sshKey()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.sshKey*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 125
  package: com.microsoft.azure.management.containerservice.implementation
  syntax:
    content: public String sshKey()
    return:
      type: "26831127"
      description: <p>the Linux SSH key </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.sshKey()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withAgentVirtualMachineCount(int)
  id: withAgentVirtualMachineCount(int)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withAgentVirtualMachineCount(int agentCount)
  nameWithType: ContainerServiceImpl.withAgentVirtualMachineCount(int agentCount)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withAgentVirtualMachineCount(int agentCount)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withAgentVirtualMachineCount*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 300
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Updates the agent pool virtual machine count.</p>\r\n<p></p>"
  syntax:
    content: public ContainerServiceImpl withAgentVirtualMachineCount(int agentCount)
    parameters:
    - id: agentCount
      type: f75371fa
      description: <p>the number of agents (virtual machines) to host docker containers. </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the update </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithUpdateAgentPoolCount.withAgentVirtualMachineCount(int)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDcosOrchestration()
  id: withDcosOrchestration()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withDcosOrchestration()
  nameWithType: ContainerServiceImpl.withDcosOrchestration()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDcosOrchestration()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDcosOrchestration*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 258
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the DCOS orchestration type for the container service. </p>"
  syntax:
    content: public ContainerServiceImpl withDcosOrchestration()
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDiagnostics()
  id: withDiagnostics()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withDiagnostics()
  nameWithType: ContainerServiceImpl.withDiagnostics()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDiagnostics()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDiagnostics*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 214
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Enables diagnostics. </p>"
  syntax:
    content: public ContainerServiceImpl withDiagnostics()
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.withDiagnostics()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withKubernetesOrchestration()
  id: withKubernetesOrchestration()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withKubernetesOrchestration()
  nameWithType: ContainerServiceImpl.withKubernetesOrchestration()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withKubernetesOrchestration()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withKubernetesOrchestration*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 264
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the Kubernetes orchestration type for the container service. </p>"
  syntax:
    content: public ContainerServiceImpl withKubernetesOrchestration()
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withLinux()
  id: withLinux()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withLinux()
  nameWithType: ContainerServiceImpl.withLinux()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withLinux()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withLinux*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 226
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Begins the definition to specify Linux settings. </p>"
  syntax:
    content: public ContainerServiceImpl withLinux()
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the stage representing configuration of Linux specific settings </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux.withLinux()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterDnsPrefix(String)
  id: withMasterDnsPrefix(String)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withMasterDnsPrefix(String dnsPrefix)
  nameWithType: ContainerServiceImpl.withMasterDnsPrefix(String dnsPrefix)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterDnsPrefix(String dnsPrefix)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterDnsPrefix*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 201
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the DNS prefix to be used to create the FQDN for the master pool.</p>\r\n<p></p>"
  syntax:
    content: public ContainerServiceImpl withMasterDnsPrefix(String dnsPrefix)
    parameters:
    - id: dnsPrefix
      type: "26831127"
      description: <p>the DNS prefix to be used to create the FQDN for the master pool </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterDnsPrefix.withMasterDnsPrefix(String)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterNodeCount(ContainerServiceMasterProfileCount)
  id: withMasterNodeCount(ContainerServiceMasterProfileCount)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withMasterNodeCount(ContainerServiceMasterProfileCount profileCount)
  nameWithType: ContainerServiceImpl.withMasterNodeCount(ContainerServiceMasterProfileCount profileCount)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterNodeCount(ContainerServiceMasterProfileCount profileCount)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterNodeCount*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 193
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the master node count. </p>"
  syntax:
    content: public ContainerServiceImpl withMasterNodeCount(ContainerServiceMasterProfileCount profileCount)
    parameters:
    - id: count
      type: com.microsoft.azure.management.containerservice.ContainerServiceMasterProfileCount
      description: <p>master profile count (1, 3, 5) </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterOSDiskSizeInGB(int)
  id: withMasterOSDiskSizeInGB(int)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withMasterOSDiskSizeInGB(int osDiskSizeInGB)
  nameWithType: ContainerServiceImpl.withMasterOSDiskSizeInGB(int osDiskSizeInGB)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterOSDiskSizeInGB(int osDiskSizeInGB)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterOSDiskSizeInGB*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 318
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>OS Disk Size in GB to be used for every machine in the master pool.</p>\r\n<p>If you specify 0, the default osDisk size will be used according to the vmSize specified. </p>"
  syntax:
    content: public ContainerServiceImpl withMasterOSDiskSizeInGB(int osDiskSizeInGB)
    parameters:
    - id: osDiskSizeInGB
      type: f75371fa
      description: <p>OS Disk Size in GB to be used for every machine in the master pool </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterOSDiskSize.withMasterOSDiskSizeInGB(int)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterStorageProfile(ContainerServiceStorageProfileTypes)
  id: withMasterStorageProfile(ContainerServiceStorageProfileTypes)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
  nameWithType: ContainerServiceImpl.withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterStorageProfile*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 312
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the storage kind to be used for every machine in master pool.</p>\r\n<p></p>"
  syntax:
    content: public ContainerServiceImpl withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
    parameters:
    - id: storageProfile
      type: com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes
      description: <p>the storage kind to be used for every machine in the master pool </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterStorageProfile.withMasterStorageProfile(ContainerServiceStorageProfileTypes)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterVMSize(ContainerServiceVMSizeTypes)
  id: withMasterVMSize(ContainerServiceVMSizeTypes)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
  nameWithType: ContainerServiceImpl.withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterVMSize*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 306
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the size of the master VMs, default set to \"Standard_D2_v2\". </p>"
  syntax:
    content: public ContainerServiceImpl withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
    parameters:
    - id: vmSize
      type: com.microsoft.azure.management.containerservice.ContainerServiceVMSizeTypes
      description: <p>the size of the VM </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterVMSize.withMasterVMSize(ContainerServiceVMSizeTypes)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withoutDiagnostics()
  id: withoutDiagnostics()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withoutDiagnostics()
  nameWithType: ContainerServiceImpl.withoutDiagnostics()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withoutDiagnostics()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withoutDiagnostics*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 220
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Disables diagnostics. </p>"
  syntax:
    content: public ContainerServiceImpl withoutDiagnostics()
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.withoutDiagnostics()
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withRootUsername(String)
  id: withRootUsername(String)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withRootUsername(String rootUserName)
  nameWithType: ContainerServiceImpl.withRootUsername(String rootUserName)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withRootUsername(String rootUserName)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withRootUsername*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 235
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Begins the definition to specify Linux root username. </p>"
  syntax:
    content: public ContainerServiceImpl withRootUsername(String rootUserName)
    parameters:
    - id: rootUserName
      type: "26831127"
      description: <p>the root username </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withServicePrincipal(String,String)
  id: withServicePrincipal(String,String)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withServicePrincipal(String clientId, String secret)
  nameWithType: ContainerServiceImpl.withServicePrincipal(String clientId, String secret)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withServicePrincipal(String clientId, String secret)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withServicePrincipal*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 270
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Properties for cluster service principals. </p>"
  syntax:
    content: public ContainerServiceImpl withServicePrincipal(String clientId, String secret)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>the ID for the service principal </p>
    - id: secret
      type: "26831127"
      description: <p>the secret password associated with the service principal </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String,String)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSshKey(String)
  id: withSshKey(String)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withSshKey(String sshKeyData)
  nameWithType: ContainerServiceImpl.withSshKey(String sshKeyData)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSshKey(String sshKeyData)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSshKey*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 241
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Begins the definition to specify Linux ssh key. </p>"
  syntax:
    content: public ContainerServiceImpl withSshKey(String sshKeyData)
    parameters:
    - id: sshKeyData
      type: "26831127"
      description: <p>the SSH key data </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSubnet(String,String)
  id: withSubnet(String,String)
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withSubnet(String networkId, String subnetName)
  nameWithType: ContainerServiceImpl.withSubnet(String networkId, String subnetName)
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSubnet(String networkId, String subnetName)
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSubnet*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 324
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the virtual network and subnet for the virtual machines in the master and agent pools.</p>\r\n<p></p>"
  syntax:
    content: public ContainerServiceImpl withSubnet(String networkId, String subnetName)
    parameters:
    - id: networkId
      type: "26831127"
      description: <p>the network ID to be used by the machines </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of the subnet </p>
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithSubnet.withSubnet(String,String)
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSwarmOrchestration()
  id: withSwarmOrchestration()
  parent: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  langs:
  - java
  name: withSwarmOrchestration()
  nameWithType: ContainerServiceImpl.withSwarmOrchestration()
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSwarmOrchestration()
  overload: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSwarmOrchestration*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerservice/src/main/java/com/microsoft/azure/management/containerservice/implementation/ContainerServiceImpl.java
    startLine: 252
  package: com.microsoft.azure.management.containerservice.implementation
  summary: "<p>Specifies the Swarm orchestration type for the container service. </p>"
  syntax:
    content: public ContainerServiceImpl withSwarmOrchestration()
    return:
      type: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
      description: <p>the next stage of the definition </p>
  overridden: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.ContainerServiceImpl*
  name: ContainerServiceImpl
  nameWithType: ContainerServiceImpl.ContainerServiceImpl
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.ContainerServiceImpl
  package: com.microsoft.azure.management.containerservice.implementation
- uid: c2d0e8c6com.microsoft.azure.management.containerservice.implementation.ContainerServiceInnera08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner
    name: ContainerServiceInner
    fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner
    href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.getInnerAsync*
  name: getInnerAsync
  nameWithType: ContainerServiceImpl.getInnerAsync
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.getInnerAsync
  package: com.microsoft.azure.management.containerservice.implementation
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterNodeCount*
  name: masterNodeCount
  nameWithType: ContainerServiceImpl.masterNodeCount
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterNodeCount
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.orchestratorType*
  name: orchestratorType
  nameWithType: ContainerServiceImpl.orchestratorType
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.orchestratorType
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterDnsPrefix*
  name: masterDnsPrefix
  nameWithType: ContainerServiceImpl.masterDnsPrefix
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterDnsPrefix
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterFqdn*
  name: masterFqdn
  nameWithType: ContainerServiceImpl.masterFqdn
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterFqdn
  package: com.microsoft.azure.management.containerservice.implementation
- uid: 2108f1f4com.microsoft.azure.management.containerservice.ContainerServiceAgentPoola08ddfce
  spec.java:
  - name: 'Map<String, '
    fullName: 'Map<String, '
  - uid: com.microsoft.azure.management.containerservice.ContainerServiceAgentPool
    name: ContainerServiceAgentPool
    fullName: com.microsoft.azure.management.containerservice.ContainerServiceAgentPool
    href: com.microsoft.azure.management.containerservice.ContainerServiceAgentPool.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.agentPools*
  name: agentPools
  nameWithType: ContainerServiceImpl.agentPools
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.agentPools
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.linuxRootUsername*
  name: linuxRootUsername
  nameWithType: ContainerServiceImpl.linuxRootUsername
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.linuxRootUsername
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.sshKey*
  name: sshKey
  nameWithType: ContainerServiceImpl.sshKey
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.sshKey
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalClientId*
  name: servicePrincipalClientId
  nameWithType: ContainerServiceImpl.servicePrincipalClientId
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalClientId
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalSecret*
  name: servicePrincipalSecret
  nameWithType: ContainerServiceImpl.servicePrincipalSecret
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.servicePrincipalSecret
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterOSDiskSizeInGB*
  name: masterOSDiskSizeInGB
  nameWithType: ContainerServiceImpl.masterOSDiskSizeInGB
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterOSDiskSizeInGB
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterStorageProfile*
  name: masterStorageProfile
  nameWithType: ContainerServiceImpl.masterStorageProfile
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterStorageProfile
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterSubnetName*
  name: masterSubnetName
  nameWithType: ContainerServiceImpl.masterSubnetName
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.masterSubnetName
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.networkId*
  name: networkId
  nameWithType: ContainerServiceImpl.networkId
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.networkId
  package: com.microsoft.azure.management.containerservice.implementation
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.isDiagnosticsEnabled*
  name: isDiagnosticsEnabled
  nameWithType: ContainerServiceImpl.isDiagnosticsEnabled
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.isDiagnosticsEnabled
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterNodeCount*
  name: withMasterNodeCount
  nameWithType: ContainerServiceImpl.withMasterNodeCount
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterNodeCount
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterDnsPrefix*
  name: withMasterDnsPrefix
  nameWithType: ContainerServiceImpl.withMasterDnsPrefix
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterDnsPrefix
  package: com.microsoft.azure.management.containerservice.implementation
- uid: abad75d1
  spec.java:
  - name: ContainerServiceAgentPoolImpl
    fullName: ContainerServiceAgentPoolImpl
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.defineAgentPool*
  name: defineAgentPool
  nameWithType: ContainerServiceImpl.defineAgentPool
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.defineAgentPool
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDiagnostics*
  name: withDiagnostics
  nameWithType: ContainerServiceImpl.withDiagnostics
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDiagnostics
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withoutDiagnostics*
  name: withoutDiagnostics
  nameWithType: ContainerServiceImpl.withoutDiagnostics
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withoutDiagnostics
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withLinux*
  name: withLinux
  nameWithType: ContainerServiceImpl.withLinux
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withLinux
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withRootUsername*
  name: withRootUsername
  nameWithType: ContainerServiceImpl.withRootUsername
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withRootUsername
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSshKey*
  name: withSshKey
  nameWithType: ContainerServiceImpl.withSshKey
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSshKey
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSwarmOrchestration*
  name: withSwarmOrchestration
  nameWithType: ContainerServiceImpl.withSwarmOrchestration
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSwarmOrchestration
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDcosOrchestration*
  name: withDcosOrchestration
  nameWithType: ContainerServiceImpl.withDcosOrchestration
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withDcosOrchestration
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withKubernetesOrchestration*
  name: withKubernetesOrchestration
  nameWithType: ContainerServiceImpl.withKubernetesOrchestration
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withKubernetesOrchestration
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withServicePrincipal*
  name: withServicePrincipal
  nameWithType: ContainerServiceImpl.withServicePrincipal
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withServicePrincipal
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withAgentVirtualMachineCount*
  name: withAgentVirtualMachineCount
  nameWithType: ContainerServiceImpl.withAgentVirtualMachineCount
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withAgentVirtualMachineCount
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterVMSize*
  name: withMasterVMSize
  nameWithType: ContainerServiceImpl.withMasterVMSize
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterVMSize
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterStorageProfile*
  name: withMasterStorageProfile
  nameWithType: ContainerServiceImpl.withMasterStorageProfile
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterStorageProfile
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterOSDiskSizeInGB*
  name: withMasterOSDiskSizeInGB
  nameWithType: ContainerServiceImpl.withMasterOSDiskSizeInGB
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withMasterOSDiskSizeInGB
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSubnet*
  name: withSubnet
  nameWithType: ContainerServiceImpl.withSubnet
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.withSubnet
  package: com.microsoft.azure.management.containerservice.implementation
- uid: c2d0e8c6com.microsoft.azure.management.containerservice.ContainerServicea08ddfce
  spec.java:
  - name: Observable<
    fullName: Observable<
  - uid: com.microsoft.azure.management.containerservice.ContainerService
    name: ContainerService
    fullName: com.microsoft.azure.management.containerservice.ContainerService
    href: com.microsoft.azure.management.containerservice.ContainerService.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.createResourceAsync*
  name: createResourceAsync
  nameWithType: ContainerServiceImpl.createResourceAsync
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.createResourceAsync
  package: com.microsoft.azure.management.containerservice.implementation
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: apply()
  nameWithType: Appliable<T>.apply()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.apply()
  type: Method
  summary: "<p>Execute the update request.</p>\r\n<p></p>"
  syntax:
    content: public T apply()
    return:
      type: 8ce1ecb9
      description: <p>the updated resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: applyAsync()
  nameWithType: Appliable<T>.applyAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync()
  type: Method
  summary: "<p>Execute the update request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public Observable<T> applyAsync()
    return:
      type: c4094ba1
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: applyAsync(final ServiceCallback<T> callback)
  nameWithType: Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Execute the update request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> applyAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback for success and failure </p>
    return:
      type: c0371a4e
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: "<p>Execute the create request.</p>\r\n<p></p>"
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Creatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: "<p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>\r\n<p></p>"
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model.Indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.yml
  name: id()
  nameWithType: HasId.id()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
  type: Method
  syntax:
    content: public String id()
    return:
      type: "26831127"
      description: <p>the resource ID string </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
  parent: com.microsoft.azure.management.resources.fluentcore.model.HasInner
  href: com.microsoft.azure.management.resources.fluentcore.model.HasInner.yml
  name: inner()
  nameWithType: HasInner<T>.inner()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.HasInner<T>.inner()
  type: Method
  syntax:
    content: public T inner()
    return:
      type: 8ce1ecb9
      description: <p>wrapped inner object providing direct access to the underlying auto-generated API implementation, based on Azure REST API </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.yml
  name: manager()
  nameWithType: HasManager<ManagerT>.manager()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager<ManagerT>.manager()
  type: Method
  syntax:
    content: public ManagerT manager()
    return:
      type: 8b0aab42
      description: <p>the manager client of this resource type </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.yml
  name: name()
  nameWithType: HasName.name()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Refreshable
  href: com.microsoft.azure.management.resources.fluentcore.model.Refreshable.yml
  name: refresh()
  nameWithType: Refreshable<T>.refresh()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Refreshable<T>.refresh()
  type: Method
  summary: "<p>Refreshes the resource to sync with Azure.</p>\r\n<p></p>"
  syntax:
    content: public T refresh()
    return:
      type: 8ce1ecb9
      description: <p>the refreshed resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Refreshable
  href: com.microsoft.azure.management.resources.fluentcore.model.Refreshable.yml
  name: refreshAsync()
  nameWithType: Refreshable<T>.refreshAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Refreshable<T>.refreshAsync()
  type: Method
  summary: "<p>Refreshes the resource to sync with Azure.</p>\r\n<p></p>"
  syntax:
    content: public Observable<T> refreshAsync()
    return:
      type: c4094ba1
      description: <p>the Observable to refreshed resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.yml
  name: region()
  nameWithType: Resource.region()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
  type: Method
  syntax:
    content: public Region region()
    return:
      type: com.microsoft.azure.management.resources.fluentcore.arm.Region
      description: <p>the region the resource is in </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.yml
  name: regionName()
  nameWithType: Resource.regionName()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
  type: Method
  syntax:
    content: public String regionName()
    return:
      type: "26831127"
      description: <p>the name of the region the resource is in </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.yml
  name: resourceGroupName()
  nameWithType: HasResourceGroup.resourceGroupName()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
  type: Method
  syntax:
    content: public String resourceGroupName()
    return:
      type: "26831127"
      description: <p>the name of the resource group </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.yml
  name: tags()
  nameWithType: Resource.tags()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
  type: Method
  syntax:
    content: public Map<String, String> tags()
    return:
      type: 689c8cb5
      description: <p>the tags for the resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.yml
  name: type()
  nameWithType: Resource.type()
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
  type: Method
  syntax:
    content: public String type()
    return:
      type: "26831127"
      description: <p>the type of the resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Updatable
  href: com.microsoft.azure.management.resources.fluentcore.model.Updatable.yml
  name: update()
  nameWithType: Updatable<T>.update()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Updatable<T>.update()
  type: Method
  summary: "<p>Begins an update for a new resource. </p>\r\n<p>This is the beginning of the builder pattern used to update top level resources in Azure. The final method completing the definition and starting the actual resource creation process in Azure is <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Appliable#apply()\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public T update()
    return:
      type: 8ce1ecb9
      description: <p>the stage of new resource update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withoutTag(String key)
  nameWithType: Resource.UpdateWithTags<T>.withoutTag(String key)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withoutTag(String key)
  type: Method
  summary: "<p>Removes a tag from the resource. </p>"
  syntax:
    content: public T withoutTag(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key of the tag to remove </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.yml
  name: withRegion(String regionName)
  nameWithType: Resource.DefinitionWithRegion<T>.withRegion(String regionName)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion<T>.withRegion(String regionName)
  type: Method
  summary: "<p>Specifies the region for the resource by name. </p>"
  syntax:
    content: public T withRegion(String regionName)
    parameters:
    - id: regionName
      type: "26831127"
      description: <p>The name of the region for the resource </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.withRegion(Region)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion.yml
  name: withRegion(Region region)
  nameWithType: Resource.DefinitionWithRegion<T>.withRegion(Region region)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithRegion<T>.withRegion(Region region)
  type: Method
  summary: "<p>Specifies the region for the resource. </p>"
  syntax:
    content: public T withRegion(Region region)
    parameters:
    - id: region
      type: com.microsoft.azure.management.resources.fluentcore.arm.Region
      description: <p>The location for the resource </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.UpdateWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.UpdateWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: ContainerService
  nameWithType: ContainerService
  fullName: com.microsoft.azure.management.containerservice.ContainerService
  type: Interface
  summary: "<p>A client-side representation for a container service. </p>"
  syntax:
    content: public interface ContainerService extends GroupableResource<ContainerServiceManager, ContainerServiceInner>,Refreshable<ContainerService>,Updatable<ContainerService.Update>,OrchestratorServiceBase
- uid: com.microsoft.azure.management.containerservice.ContainerService.Definition
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerService.Definition.yml
  name: ContainerService.Definition
  nameWithType: ContainerService.Definition
  fullName: com.microsoft.azure.management.containerservice.ContainerService.Definition
  type: Interface
  summary: "<p>Container interface for all the definitions related to a container service. </p>"
  syntax:
    content: public interface Definition
- uid: com.microsoft.azure.management.containerservice.ContainerService.Update
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerService.Update.yml
  name: ContainerService.Update
  nameWithType: ContainerService.Update
  fullName: com.microsoft.azure.management.containerservice.ContainerService.Update
  type: Interface
  summary: "<p>The template for an update operation, containing all the settings that can be modified. </p>"
  syntax:
    content: public interface Update
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner
  parent: com.microsoft.azure.management.containerservice.implementation
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner.yml
  name: ContainerServiceInner
  nameWithType: ContainerServiceInner
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceInner
  type: Class
  summary: "<p>Container service. </p>"
  syntax:
    content: public class ContainerServiceInner
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager
  parent: com.microsoft.azure.management.containerservice.implementation
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager.yml
  name: ContainerServiceManager
  nameWithType: ContainerServiceManager
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceManager
  type: Class
  summary: "<p>Entry point to Azure Container Service management. </p>"
  syntax:
    content: public class ContainerServiceManager
- uid: com.microsoft.azure.management.containerservice.ContainerService.masterNodeCount()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: masterNodeCount()
  nameWithType: ContainerService.masterNodeCount()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.masterNodeCount()
  type: Method
  syntax:
    content: public int masterNodeCount()
    return:
      type: f75371fa
      description: <p>the master node count </p>
- uid: com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes.yml
  name: ContainerServiceOrchestratorTypes
  nameWithType: ContainerServiceOrchestratorTypes
  fullName: com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes
  type: Class
  summary: "<p>Defines values for ContainerServiceOrchestratorTypes. </p>"
  syntax:
    content: public class ContainerServiceOrchestratorTypes
- uid: com.microsoft.azure.management.containerservice.ContainerService.orchestratorType()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: orchestratorType()
  nameWithType: ContainerService.orchestratorType()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.orchestratorType()
  type: Method
  syntax:
    content: public ContainerServiceOrchestratorTypes orchestratorType()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerServiceOrchestratorTypes
      description: <p>the type of the orchestrator </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.masterDnsPrefix()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: masterDnsPrefix()
  nameWithType: ContainerService.masterDnsPrefix()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.masterDnsPrefix()
  type: Method
  syntax:
    content: public String masterDnsPrefix()
    return:
      type: "26831127"
      description: <p>the master DNS prefix which was specified at creation time </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.masterFqdn()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: masterFqdn()
  nameWithType: ContainerService.masterFqdn()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.masterFqdn()
  type: Method
  syntax:
    content: public String masterFqdn()
    return:
      type: "26831127"
      description: <p>the master FQDN </p>
- uid: com.microsoft.azure.management.containerservice.ContainerServiceAgentPool
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerServiceAgentPool.yml
  name: ContainerServiceAgentPool
  nameWithType: ContainerServiceAgentPool
  fullName: com.microsoft.azure.management.containerservice.ContainerServiceAgentPool
  type: Interface
  summary: "<p>A client-side representation for a container service agent pool. </p>"
  syntax:
    content: public interface ContainerServiceAgentPool extends ChildResource<OrchestratorServiceBase>,HasInner<ContainerServiceAgentPoolProfile>
- uid: com.microsoft.azure.management.containerservice.ContainerService.agentPools()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: agentPools()
  nameWithType: ContainerService.agentPools()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.agentPools()
  type: Method
  syntax:
    content: public Map<String, ContainerServiceAgentPool> agentPools()
    return:
      type: 2108f1f4com.microsoft.azure.management.containerservice.ContainerServiceAgentPoola08ddfce
      description: <p>the agent pools map </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.linuxRootUsername()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: linuxRootUsername()
  nameWithType: ContainerService.linuxRootUsername()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.linuxRootUsername()
  type: Method
  syntax:
    content: public String linuxRootUsername()
    return:
      type: "26831127"
      description: <p>the Linux root username </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.sshKey()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: sshKey()
  nameWithType: ContainerService.sshKey()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.sshKey()
  type: Method
  syntax:
    content: public String sshKey()
    return:
      type: "26831127"
      description: <p>the Linux SSH key </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalClientId()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: servicePrincipalClientId()
  nameWithType: ContainerService.servicePrincipalClientId()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalClientId()
  type: Method
  syntax:
    content: public String servicePrincipalClientId()
    return:
      type: "26831127"
      description: <p>the service principal client ID </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalSecret()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: servicePrincipalSecret()
  nameWithType: ContainerService.servicePrincipalSecret()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.servicePrincipalSecret()
  type: Method
  syntax:
    content: public String servicePrincipalSecret()
    return:
      type: "26831127"
      description: <p>the service principal secret </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.masterOSDiskSizeInGB()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: masterOSDiskSizeInGB()
  nameWithType: ContainerService.masterOSDiskSizeInGB()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.masterOSDiskSizeInGB()
  type: Method
  syntax:
    content: public int masterOSDiskSizeInGB()
    return:
      type: f75371fa
      description: <p>OS disk size in GB set for every machine in the master pool </p>
- uid: com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes.yml
  name: ContainerServiceStorageProfileTypes
  nameWithType: ContainerServiceStorageProfileTypes
  fullName: com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes
  type: Class
  summary: "<p>Defines values for ContainerServiceStorageProfileTypes. </p>"
  syntax:
    content: public class ContainerServiceStorageProfileTypes
- uid: com.microsoft.azure.management.containerservice.ContainerService.masterStorageProfile()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: masterStorageProfile()
  nameWithType: ContainerService.masterStorageProfile()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.masterStorageProfile()
  type: Method
  syntax:
    content: public ContainerServiceStorageProfileTypes masterStorageProfile()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes
      description: <p>the storage kind set for every machine in the master pool </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.masterSubnetName()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: masterSubnetName()
  nameWithType: ContainerService.masterSubnetName()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.masterSubnetName()
  type: Method
  syntax:
    content: public String masterSubnetName()
    return:
      type: "26831127"
      description: <p>the name of the subnet used by every machine in the master pool </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.networkId()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: networkId()
  nameWithType: ContainerService.networkId()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.networkId()
  type: Method
  syntax:
    content: public String networkId()
    return:
      type: "26831127"
      description: <p>the ID of the virtual network used by every machine in the master and agent pools </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.isDiagnosticsEnabled()
  parent: com.microsoft.azure.management.containerservice.ContainerService
  href: com.microsoft.azure.management.containerservice.ContainerService.yml
  name: isDiagnosticsEnabled()
  nameWithType: ContainerService.isDiagnosticsEnabled()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.isDiagnosticsEnabled()
  type: Method
  syntax:
    content: public boolean isDiagnosticsEnabled()
    return:
      type: 4fc6e284
      description: <p>true if diagnostics are enabled </p>
- uid: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  parent: com.microsoft.azure.management.containerservice.implementation
  href: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl.yml
  name: ContainerServiceImpl
  nameWithType: ContainerServiceImpl
  fullName: com.microsoft.azure.management.containerservice.implementation.ContainerServiceImpl
  type: Class
  summary: "<p>The implementation for ContainerService and its create and update interfaces. </p>"
  syntax: *o1
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterNodeCount
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterNodeCount.yml
  name: withMasterNodeCount(ContainerServiceMasterProfileCount count)
  nameWithType: ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount count)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterNodeCount.withMasterNodeCount(ContainerServiceMasterProfileCount count)
  type: Method
  summary: "<p>Specifies the master node count. </p>"
  syntax:
    content: public WithAgentPool withMasterNodeCount(ContainerServiceMasterProfileCount count)
    parameters:
    - id: count
      type: com.microsoft.azure.management.containerservice.ContainerServiceMasterProfileCount
      description: <p>master profile count (1, 3, 5) </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithAgentPool
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerServiceMasterProfileCount
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerServiceMasterProfileCount.yml
  name: ContainerServiceMasterProfileCount
  nameWithType: ContainerServiceMasterProfileCount
  fullName: com.microsoft.azure.management.containerservice.ContainerServiceMasterProfileCount
  type: Enum
  summary: "<p>The minimum valid number of master nodes. </p>"
  syntax:
    content: public enum ContainerServiceMasterProfileCount
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterDnsPrefix.withMasterDnsPrefix(String)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterDnsPrefix
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterDnsPrefix.yml
  name: withMasterDnsPrefix(String dnsPrefix)
  nameWithType: ContainerService.DefinitionStages.WithMasterDnsPrefix.withMasterDnsPrefix(String dnsPrefix)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterDnsPrefix.withMasterDnsPrefix(String dnsPrefix)
  type: Method
  summary: "<p>Specifies the DNS prefix to be used to create the FQDN for the master pool.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withMasterDnsPrefix(String dnsPrefix)
    parameters:
    - id: dnsPrefix
      type: "26831127"
      description: <p>the DNS prefix to be used to create the FQDN for the master pool </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithAgentPool
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithAgentPool.yml
  name: defineAgentPool(String name)
  nameWithType: ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String name)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithAgentPool.defineAgentPool(String name)
  type: Method
  summary: "<p>Begins the definition of a agent pool profile to be attached to the container service.</p>\r\n<p></p>"
  syntax:
    content: public ContainerServiceAgentPool.DefinitionStages.Blank<WithCreate> defineAgentPool(String name)
    parameters:
    - id: name
      type: "26831127"
      description: <p>the name for the agent pool profile </p>
    return:
      type: 58280ecccom.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithCreatea08ddfce
      description: <p>the stage representing configuration for the agent pool profile </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.withDiagnostics()
  parent: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics
  href: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.yml
  name: withDiagnostics()
  nameWithType: ContainerService.UpdateStages.WithDiagnostics.withDiagnostics()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.withDiagnostics()
  type: Method
  summary: "<p>Enables diagnostics. </p>"
  syntax:
    content: public Update withDiagnostics()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.Update
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.withoutDiagnostics()
  parent: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics
  href: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.yml
  name: withoutDiagnostics()
  nameWithType: ContainerService.UpdateStages.WithDiagnostics.withoutDiagnostics()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithDiagnostics.withoutDiagnostics()
  type: Method
  summary: "<p>Disables diagnostics. </p>"
  syntax:
    content: public Update withoutDiagnostics()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.Update
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux.withLinux()
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux.yml
  name: withLinux()
  nameWithType: ContainerService.DefinitionStages.WithLinux.withLinux()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux.withLinux()
  type: Method
  summary: "<p>Begins the definition to specify Linux settings. </p>"
  syntax:
    content: public WithLinuxRootUsername withLinux()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxRootUsername
      description: <p>the stage representing configuration of Linux specific settings </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxRootUsername
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxRootUsername.yml
  name: withRootUsername(String rootUserName)
  nameWithType: ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String rootUserName)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxRootUsername.withRootUsername(String rootUserName)
  type: Method
  summary: "<p>Begins the definition to specify Linux root username. </p>"
  syntax:
    content: public WithLinuxSshKey withRootUsername(String rootUserName)
    parameters:
    - id: rootUserName
      type: "26831127"
      description: <p>the root username </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxSshKey
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxSshKey
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxSshKey.yml
  name: withSshKey(String sshKeyData)
  nameWithType: ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String sshKeyData)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinuxSshKey.withSshKey(String sshKeyData)
  type: Method
  summary: "<p>Begins the definition to specify Linux ssh key. </p>"
  syntax:
    content: public WithMasterNodeCount withSshKey(String sshKeyData)
    parameters:
    - id: sshKeyData
      type: "26831127"
      description: <p>the SSH key data </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterNodeCount
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.yml
  name: withSwarmOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withSwarmOrchestration()
  type: Method
  summary: "<p>Specifies the Swarm orchestration type for the container service. </p>"
  syntax:
    content: public WithLinux withSwarmOrchestration()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.yml
  name: withDcosOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withDcosOrchestration()
  type: Method
  summary: "<p>Specifies the DCOS orchestration type for the container service. </p>"
  syntax:
    content: public WithLinux withDcosOrchestration()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.yml
  name: withKubernetesOrchestration()
  nameWithType: ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithOrchestrator.withKubernetesOrchestration()
  type: Method
  summary: "<p>Specifies the Kubernetes orchestration type for the container service. </p>"
  syntax:
    content: public WithServicePrincipalProfile withKubernetesOrchestration()
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String,String)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile.yml
  name: withServicePrincipal(String clientId, String secret)
  nameWithType: ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String clientId, String secret)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithServicePrincipalProfile.withServicePrincipal(String clientId, String secret)
  type: Method
  summary: "<p>Properties for cluster service principals. </p>"
  syntax:
    content: public WithLinux withServicePrincipal(String clientId, String secret)
    parameters:
    - id: clientId
      type: "26831127"
      description: <p>the ID for the service principal </p>
    - id: secret
      type: "26831127"
      description: <p>the secret password associated with the service principal </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithLinux
      description: <p>the next stage </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithUpdateAgentPoolCount.withAgentVirtualMachineCount(int)
  parent: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithUpdateAgentPoolCount
  href: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithUpdateAgentPoolCount.yml
  name: withAgentVirtualMachineCount(int agentCount)
  nameWithType: ContainerService.UpdateStages.WithUpdateAgentPoolCount.withAgentVirtualMachineCount(int agentCount)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.UpdateStages.WithUpdateAgentPoolCount.withAgentVirtualMachineCount(int agentCount)
  type: Method
  summary: "<p>Updates the agent pool virtual machine count.</p>\r\n<p></p>"
  syntax:
    content: public Update withAgentVirtualMachineCount(int agentCount)
    parameters:
    - id: agentCount
      type: f75371fa
      description: <p>the number of agents (virtual machines) to host docker containers. </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.Update
      description: <p>the next stage of the update </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterVMSize.withMasterVMSize(ContainerServiceVMSizeTypes)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterVMSize
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterVMSize.yml
  name: withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
  nameWithType: ContainerService.DefinitionStages.WithMasterVMSize.withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterVMSize.withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
  type: Method
  summary: "<p>Specifies the size of the master VMs, default set to \"Standard_D2_v2\". </p>"
  syntax:
    content: public WithCreate withMasterVMSize(ContainerServiceVMSizeTypes vmSize)
    parameters:
    - id: vmSize
      type: com.microsoft.azure.management.containerservice.ContainerServiceVMSizeTypes
      description: <p>the size of the VM </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerServiceVMSizeTypes
  parent: com.microsoft.azure.management.containerservice
  href: com.microsoft.azure.management.containerservice.ContainerServiceVMSizeTypes.yml
  name: ContainerServiceVMSizeTypes
  nameWithType: ContainerServiceVMSizeTypes
  fullName: com.microsoft.azure.management.containerservice.ContainerServiceVMSizeTypes
  type: Class
  summary: "<p>Defines values for ContainerServiceVMSizeTypes. </p>"
  syntax:
    content: public class ContainerServiceVMSizeTypes
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterStorageProfile.withMasterStorageProfile(ContainerServiceStorageProfileTypes)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterStorageProfile
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterStorageProfile.yml
  name: withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
  nameWithType: ContainerService.DefinitionStages.WithMasterStorageProfile.withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterStorageProfile.withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
  type: Method
  summary: "<p>Specifies the storage kind to be used for every machine in master pool.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withMasterStorageProfile(ContainerServiceStorageProfileTypes storageProfile)
    parameters:
    - id: storageProfile
      type: com.microsoft.azure.management.containerservice.ContainerServiceStorageProfileTypes
      description: <p>the storage kind to be used for every machine in the master pool </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterOSDiskSize.withMasterOSDiskSizeInGB(int)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterOSDiskSize
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterOSDiskSize.yml
  name: withMasterOSDiskSizeInGB(int osDiskSizeInGB)
  nameWithType: ContainerService.DefinitionStages.WithMasterOSDiskSize.withMasterOSDiskSizeInGB(int osDiskSizeInGB)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithMasterOSDiskSize.withMasterOSDiskSizeInGB(int osDiskSizeInGB)
  type: Method
  summary: "<p>OS Disk Size in GB to be used for every machine in the master pool.</p>\r\n<p>If you specify 0, the default osDisk size will be used according to the vmSize specified. </p>"
  syntax:
    content: public WithCreate withMasterOSDiskSizeInGB(int osDiskSizeInGB)
    parameters:
    - id: osDiskSizeInGB
      type: f75371fa
      description: <p>OS Disk Size in GB to be used for every machine in the master pool </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithSubnet.withSubnet(String,String)
  parent: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithSubnet
  href: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithSubnet.yml
  name: withSubnet(String networkId, String subnetName)
  nameWithType: ContainerService.DefinitionStages.WithSubnet.withSubnet(String networkId, String subnetName)
  fullName: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithSubnet.withSubnet(String networkId, String subnetName)
  type: Method
  summary: "<p>Specifies the virtual network and subnet for the virtual machines in the master and agent pools.</p>\r\n<p></p>"
  syntax:
    content: public WithCreate withSubnet(String networkId, String subnetName)
    parameters:
    - id: networkId
      type: "26831127"
      description: <p>the network ID to be used by the machines </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of the subnet </p>
    return:
      type: com.microsoft.azure.management.containerservice.ContainerService.DefinitionStages.WithCreate
      description: <p>the next stage of the definition </p>
