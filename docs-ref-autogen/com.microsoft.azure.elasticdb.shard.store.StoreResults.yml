### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.StoreResults()
  name: StoreResults()
  nameWithType: StoreResults.StoreResults()
  summary: <p>Constructs instance of SqlResults. </p>
  syntax: public StoreResults()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.StoreResults()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getLogEntries()
  name: getLogEntries()
  nameWithType: StoreResults.getLogEntries()
  returns:
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.store.StoreLogEntry?alt=com.microsoft.azure.elasticdb.shard.store.StoreLogEntry&text=StoreLogEntry" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<StoreLogEntry> getLogEntries()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getLogEntries()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getResult()
  name: getResult()
  nameWithType: StoreResults.getResult()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreResult?alt=com.microsoft.azure.elasticdb.shard.store.StoreResult&text=StoreResult" data-throw-if-not-resolved="False"/>
  syntax: public StoreResult getResult()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getResult()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreLocations()
  name: getStoreLocations()
  nameWithType: StoreResults.getStoreLocations()
  returns:
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Collection of locations. </p>
  syntax: public List<ShardLocation> getStoreLocations()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreLocations()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreMappings()
  name: getStoreMappings()
  nameWithType: StoreResults.getStoreMappings()
  returns:
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.store.StoreMapping?alt=com.microsoft.azure.elasticdb.shard.store.StoreMapping&text=StoreMapping" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Collection of mappings. </p>
  syntax: public List<StoreMapping> getStoreMappings()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreMappings()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreOperations()
  name: getStoreOperations()
  nameWithType: StoreResults.getStoreOperations()
  returns:
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.store.StoreLogEntry?alt=com.microsoft.azure.elasticdb.shard.store.StoreLogEntry&text=StoreLogEntry" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Collection of store operations. </p>
  syntax: public List<StoreLogEntry> getStoreOperations()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreOperations()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreSchemaInfoCollection()
  name: getStoreSchemaInfoCollection()
  nameWithType: StoreResults.getStoreSchemaInfoCollection()
  returns:
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.store.StoreSchemaInfo?alt=com.microsoft.azure.elasticdb.shard.store.StoreSchemaInfo&text=StoreSchemaInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Collection of SchemaInfo objects. </p>
  syntax: public List<StoreSchemaInfo> getStoreSchemaInfoCollection()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreSchemaInfoCollection()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreShardMaps()
  name: getStoreShardMaps()
  nameWithType: StoreResults.getStoreShardMaps()
  returns:
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.store.StoreShardMap?alt=com.microsoft.azure.elasticdb.shard.store.StoreShardMap&text=StoreShardMap" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Collection of shard maps. </p>
  syntax: public List<StoreShardMap> getStoreShardMaps()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreShardMaps()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreShards()
  name: getStoreShards()
  nameWithType: StoreResults.getStoreShards()
  returns:
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.store.StoreShard?alt=com.microsoft.azure.elasticdb.shard.store.StoreShard&text=StoreShard" data-throw-if-not-resolved="False"/>&gt;
  summary: <p>Collection of shards. </p>
  syntax: public List<StoreShard> getStoreShards()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreShards()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreVersion()
  name: getStoreVersion()
  nameWithType: StoreResults.getStoreVersion()
  returns:
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.Version?alt=com.microsoft.azure.elasticdb.shard.store.Version&text=Version" data-throw-if-not-resolved="False"/>
  summary: <p>Store version. </p>
  syntax: public Version getStoreVersion()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.getStoreVersion()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.setResult(StoreResult result)
  name: setResult(StoreResult result)
  nameWithType: StoreResults.setResult(StoreResult result)
  parameters:
  - name: result
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreResult?alt=com.microsoft.azure.elasticdb.shard.store.StoreResult&text=StoreResult" data-throw-if-not-resolved="False"/>
  syntax: public void setResult(StoreResult result)
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.setResult(StoreResult)
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults.setStoreVersion(Version version)
  name: setStoreVersion(Version version)
  nameWithType: StoreResults.setStoreVersion(Version version)
  parameters:
  - name: version
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.Version?alt=com.microsoft.azure.elasticdb.shard.store.Version&text=Version" data-throw-if-not-resolved="False"/>
  syntax: public void setStoreVersion(Version version)
  uid: com.microsoft.azure.elasticdb.shard.store.StoreResults.setStoreVersion(Version)
nameWithType: StoreResults
syntax: public class StoreResults
type: class
uid: com.microsoft.azure.elasticdb.shard.store.StoreResults
fullName: com.microsoft.azure.elasticdb.shard.store.StoreResults
name: StoreResults
package: com.microsoft.azure.elasticdb.shard.store
summary: <p>Representation of storage results from storage API execution. </p>
metadata: {}
