### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient"
fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient"
name: "DeploymentsClient"
nameWithType: "DeploymentsClient"
summary: "An instance of this class provides access to all the operations defined in Deployments<wbr>Client."
syntax: "public interface DeploymentsClient extends InnerSupportsGet<DeploymentExtendedInner>, InnerSupportsListing<DeploymentExtendedInner>, InnerSupportsDelete<Void>"
methods:
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group to deploy the resources to. The name is case insensitive.\n     The resource group must already exist."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  name: "beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group to deploy the resources to. The name is case insensitive.\n     The resource group must already exist."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group to deploy the resources to. The name is case insensitive.\n     The resource group must already exist."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  name: "beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  name: "beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  name: "beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  name: "beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  name: "beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  name: "beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  name: "beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  name: "beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  name: "beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtTenantScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  name: "beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentExtendedInner>,DeploymentExtendedInner> beginCreateOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of deployment information."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDelete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDelete(String resourceGroupName, String deploymentName)"
  name: "beginDelete(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.beginDelete(String resourceGroupName, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to delete. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDelete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDelete(String resourceGroupName, String deploymentName, Context context)"
  name: "beginDelete(String resourceGroupName, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.beginDelete(String resourceGroupName, String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to delete. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDelete(String resourceGroupName, String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAsync(String resourceGroupName, String deploymentName)"
  name: "beginDeleteAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAsync(String resourceGroupName, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to delete. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAsync(String resourceGroupName, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
  name: "beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtManagementGroupScope(String groupId, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  name: "beginDeleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.beginDeleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  name: "beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtScope(String scope, String deploymentName)"
  name: "beginDeleteAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtScope(String scope, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtScope(String scope, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtScope(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtScope(String scope, String deploymentName, Context context)"
  name: "beginDeleteAtScope(String scope, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.beginDeleteAtScope(String scope, String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtScope(String scope, String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtScopeAsync(String scope, String deploymentName)"
  name: "beginDeleteAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtScopeAsync(String scope, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAtScopeAsync(String scope, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtSubscriptionScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtSubscriptionScope(String deploymentName)"
  name: "beginDeleteAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtSubscriptionScope(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtSubscriptionScope(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtSubscriptionScope(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtSubscriptionScope(String deploymentName, Context context)"
  name: "beginDeleteAtSubscriptionScope(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.beginDeleteAtSubscriptionScope(String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtSubscriptionScope(String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtSubscriptionScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
  name: "beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAtSubscriptionScopeAsync(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtTenantScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtTenantScope(String deploymentName)"
  name: "beginDeleteAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtTenantScope(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtTenantScope(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtTenantScope(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtTenantScope(String deploymentName, Context context)"
  name: "beginDeleteAtTenantScope(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.beginDeleteAtTenantScope(String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<Void>,Void> beginDeleteAtTenantScope(String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtTenantScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginDeleteAtTenantScopeAsync(String deploymentName)"
  name: "beginDeleteAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.beginDeleteAtTenantScopeAsync(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PollerFlux<PollResult<Void>,Void> beginDeleteAtTenantScopeAsync(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of long-running operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  name: "beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "beginValidateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginValidateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  name: "beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "beginValidateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  name: "beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  name: "beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  name: "beginValidateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  name: "beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  name: "beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtSubscriptionScopeAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  name: "beginValidateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  name: "beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  name: "beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtTenantScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginValidateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  name: "beginValidateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.beginValidateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<DeploymentValidateResultInner>,DeploymentValidateResultInner> beginValidateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of information from validate template deployment response."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIf(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  name: "beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIf(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  name: "beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  name: "beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  name: "beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "beginWhatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  name: "beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to What If."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  name: "beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to What If."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtSubscriptionScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  name: "beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to What If."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  name: "beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SyncPoller<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtTenantScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.beginWhatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "beginWhatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.beginWhatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollerFlux<PollResult<WhatIfOperationResultInner>,WhatIfOperationResultInner> beginWhatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  returns:
    description: "the <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> for polling of result of the What-If operation."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.management.polling.PollResult?alt=com.azure.core.management.polling.PollResult&text=PollResult\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHash(java.lang.Object)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHash(Object template)"
  name: "calculateTemplateHash(Object template)"
  nameWithType: "DeploymentsClient.calculateTemplateHash(Object template)"
  summary: "Calculate the hash of the given template."
  modifiers:
  - "abstract"
  parameters:
  - description: "The template provided to calculate hash."
    name: "template"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public abstract TemplateHashResultInner calculateTemplateHash(Object template)"
  desc: "Calculate the hash of the given template."
  returns:
    description: "result of the request to calculate template hash."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner?alt=com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner&text=TemplateHashResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHashAsync(java.lang.Object)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHashAsync(Object template)"
  name: "calculateTemplateHashAsync(Object template)"
  nameWithType: "DeploymentsClient.calculateTemplateHashAsync(Object template)"
  summary: "Calculate the hash of the given template."
  modifiers:
  - "abstract"
  parameters:
  - description: "The template provided to calculate hash."
    name: "template"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public abstract Mono<TemplateHashResultInner> calculateTemplateHashAsync(Object template)"
  desc: "Calculate the hash of the given template."
  returns:
    description: "result of the request to calculate template hash on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner?alt=com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner&text=TemplateHashResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHashWithResponse(java.lang.Object,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHashWithResponse(Object template, Context context)"
  name: "calculateTemplateHashWithResponse(Object template, Context context)"
  nameWithType: "DeploymentsClient.calculateTemplateHashWithResponse(Object template, Context context)"
  summary: "Calculate the hash of the given template."
  modifiers:
  - "abstract"
  parameters:
  - description: "The template provided to calculate hash."
    name: "template"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<TemplateHashResultInner> calculateTemplateHashWithResponse(Object template, Context context)"
  desc: "Calculate the hash of the given template."
  returns:
    description: "result of the request to calculate template hash along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner?alt=com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner&text=TemplateHashResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHashWithResponseAsync(java.lang.Object)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.calculateTemplateHashWithResponseAsync(Object template)"
  name: "calculateTemplateHashWithResponseAsync(Object template)"
  nameWithType: "DeploymentsClient.calculateTemplateHashWithResponseAsync(Object template)"
  summary: "Calculate the hash of the given template."
  modifiers:
  - "abstract"
  parameters:
  - description: "The template provided to calculate hash."
    name: "template"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  syntax: "public abstract Mono<Response<TemplateHashResultInner>> calculateTemplateHashWithResponseAsync(Object template)"
  desc: "Calculate the hash of the given template."
  returns:
    description: "result of the request to calculate template hash along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of\n     <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner?alt=com.azure.resourcemanager.resources.fluent.models.TemplateHashResultInner&text=TemplateHashResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancel(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancel(String resourceGroupName, String deploymentName)"
  name: "cancel(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.cancel(String resourceGroupName, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void cancel(String resourceGroupName, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAsync(String resourceGroupName, String deploymentName)"
  name: "cancelAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAsync(String resourceGroupName, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> cancelAsync(String resourceGroupName, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScope(String groupId, String deploymentName)"
  name: "cancelAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtManagementGroupScope(String groupId, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void cancelAtManagementGroupScope(String groupId, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  name: "cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> cancelAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  name: "cancelAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.cancelAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> cancelAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  name: "cancelAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> cancelAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScope(String scope, String deploymentName)"
  name: "cancelAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtScope(String scope, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void cancelAtScope(String scope, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScopeAsync(String scope, String deploymentName)"
  name: "cancelAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtScopeAsync(String scope, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> cancelAtScopeAsync(String scope, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScopeWithResponse(String scope, String deploymentName, Context context)"
  name: "cancelAtScopeWithResponse(String scope, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.cancelAtScopeWithResponse(String scope, String deploymentName, Context context)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> cancelAtScopeWithResponse(String scope, String deploymentName, Context context)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtScopeWithResponseAsync(String scope, String deploymentName)"
  name: "cancelAtScopeWithResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtScopeWithResponseAsync(String scope, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> cancelAtScopeWithResponseAsync(String scope, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScope(String deploymentName)"
  name: "cancelAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtSubscriptionScope(String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void cancelAtSubscriptionScope(String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScopeAsync(String deploymentName)"
  name: "cancelAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtSubscriptionScopeAsync(String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> cancelAtSubscriptionScopeAsync(String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  name: "cancelAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.cancelAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> cancelAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  name: "cancelAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> cancelAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScope(String deploymentName)"
  name: "cancelAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtTenantScope(String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void cancelAtTenantScope(String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScopeAsync(String deploymentName)"
  name: "cancelAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtTenantScopeAsync(String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> cancelAtTenantScopeAsync(String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScopeWithResponse(String deploymentName, Context context)"
  name: "cancelAtTenantScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.cancelAtTenantScopeWithResponse(String deploymentName, Context context)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> cancelAtTenantScopeWithResponse(String deploymentName, Context context)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelAtTenantScopeWithResponseAsync(String deploymentName)"
  name: "cancelAtTenantScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.cancelAtTenantScopeWithResponseAsync(String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> cancelAtTenantScopeWithResponseAsync(String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resources partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelWithResponse(String resourceGroupName, String deploymentName, Context context)"
  name: "cancelWithResponse(String resourceGroupName, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.cancelWithResponse(String resourceGroupName, String deploymentName, Context context)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Void> cancelWithResponse(String resourceGroupName, String deploymentName, Context context)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.cancelWithResponseAsync(String resourceGroupName, String deploymentName)"
  name: "cancelWithResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.cancelWithResponseAsync(String resourceGroupName, String deploymentName)"
  summary: "You can cancel a deployment only if the provisioning<wbr>State is Accepted or Running."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Void>> cancelWithResponseAsync(String resourceGroupName, String deploymentName)"
  desc: "You can cancel a deployment only if the provisioningState is Accepted or Running. After the deployment is canceled, the provisioningState is set to Canceled. Canceling a template deployment stops the currently running template deployment and leaves the resource group partially deployed."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistence(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistence(String resourceGroupName, String deploymentName)"
  name: "checkExistence(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistence(String resourceGroupName, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to check. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract boolean checkExistence(String resourceGroupName, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAsync(String resourceGroupName, String deploymentName)"
  name: "checkExistenceAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAsync(String resourceGroupName, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to check. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Boolean> checkExistenceAsync(String resourceGroupName, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
  name: "checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract boolean checkExistenceAtManagementGroupScope(String groupId, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  name: "checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Boolean> checkExistenceAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  name: "checkExistenceAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.checkExistenceAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Boolean> checkExistenceAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  name: "checkExistenceAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Boolean>> checkExistenceAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScope(String scope, String deploymentName)"
  name: "checkExistenceAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtScope(String scope, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract boolean checkExistenceAtScope(String scope, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScopeAsync(String scope, String deploymentName)"
  name: "checkExistenceAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtScopeAsync(String scope, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Boolean> checkExistenceAtScopeAsync(String scope, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScopeWithResponse(String scope, String deploymentName, Context context)"
  name: "checkExistenceAtScopeWithResponse(String scope, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.checkExistenceAtScopeWithResponse(String scope, String deploymentName, Context context)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Boolean> checkExistenceAtScopeWithResponse(String scope, String deploymentName, Context context)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtScopeWithResponseAsync(String scope, String deploymentName)"
  name: "checkExistenceAtScopeWithResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtScopeWithResponseAsync(String scope, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Boolean>> checkExistenceAtScopeWithResponseAsync(String scope, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScope(String deploymentName)"
  name: "checkExistenceAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtSubscriptionScope(String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract boolean checkExistenceAtSubscriptionScope(String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
  name: "checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Boolean> checkExistenceAtSubscriptionScopeAsync(String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  name: "checkExistenceAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.checkExistenceAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Boolean> checkExistenceAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  name: "checkExistenceAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Boolean>> checkExistenceAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScope(String deploymentName)"
  name: "checkExistenceAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtTenantScope(String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract boolean checkExistenceAtTenantScope(String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScopeAsync(String deploymentName)"
  name: "checkExistenceAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtTenantScopeAsync(String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Boolean> checkExistenceAtTenantScopeAsync(String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScopeWithResponse(String deploymentName, Context context)"
  name: "checkExistenceAtTenantScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.checkExistenceAtTenantScopeWithResponse(String deploymentName, Context context)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Boolean> checkExistenceAtTenantScopeWithResponse(String deploymentName, Context context)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceAtTenantScopeWithResponseAsync(String deploymentName)"
  name: "checkExistenceAtTenantScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceAtTenantScopeWithResponseAsync(String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Boolean>> checkExistenceAtTenantScopeWithResponseAsync(String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceWithResponse(String resourceGroupName, String deploymentName, Context context)"
  name: "checkExistenceWithResponse(String resourceGroupName, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.checkExistenceWithResponse(String resourceGroupName, String deploymentName, Context context)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to check. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Boolean> checkExistenceWithResponse(String resourceGroupName, String deploymentName, Context context)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.checkExistenceWithResponseAsync(String resourceGroupName, String deploymentName)"
  name: "checkExistenceWithResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.checkExistenceWithResponseAsync(String resourceGroupName, String deploymentName)"
  summary: "Checks whether the deployment exists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to check. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Boolean>> checkExistenceWithResponseAsync(String resourceGroupName, String deploymentName)"
  desc: "Checks whether the deployment exists."
  returns:
    description: "whether resource exists along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html\">Boolean</a>&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group to deploy the resources to. The name is case insensitive.\n     The resource group must already exist."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  name: "createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group to deploy the resources to. The name is case insensitive.\n     The resource group must already exist."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group to deploy the resources to. The name is case insensitive.\n     The resource group must already exist."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentExtendedInner> createOrUpdateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  name: "createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentExtendedInner> createOrUpdateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "createOrUpdateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  name: "createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentExtendedInner> createOrUpdateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  name: "createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScopeAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentExtendedInner> createOrUpdateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  name: "createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  name: "createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentExtendedInner createOrUpdateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  name: "createOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentExtendedInner> createOrUpdateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  name: "createOrUpdateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "createOrUpdateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.createOrUpdateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "You can provide the template and parameters directly in the request or link to JSON files."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group to deploy the resources to. The name is case insensitive.\n     The resource group must already exist."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters supplied to the operation."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "You can provide the template and parameters directly in the request or link to JSON files."
  returns:
    description: "deployment information along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.delete(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.delete(String resourceGroupName, String deploymentName)"
  name: "delete(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.delete(String resourceGroupName, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to delete. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void delete(String resourceGroupName, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.delete(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.delete(String resourceGroupName, String deploymentName, Context context)"
  name: "delete(String resourceGroupName, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.delete(String resourceGroupName, String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to delete. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void delete(String resourceGroupName, String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAsync(String resourceGroupName, String deploymentName)"
  name: "deleteAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAsync(String resourceGroupName, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to delete. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAsync(String resourceGroupName, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScope(String groupId, String deploymentName)"
  name: "deleteAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtManagementGroupScope(String groupId, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteAtManagementGroupScope(String groupId, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  name: "deleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.deleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtManagementGroupScope(String groupId, String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  name: "deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  name: "deleteAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> deleteAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScope(String scope, String deploymentName)"
  name: "deleteAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtScope(String scope, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteAtScope(String scope, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScope(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScope(String scope, String deploymentName, Context context)"
  name: "deleteAtScope(String scope, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.deleteAtScope(String scope, String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtScope(String scope, String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScopeAsync(String scope, String deploymentName)"
  name: "deleteAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtScopeAsync(String scope, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAtScopeAsync(String scope, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtScopeWithResponseAsync(String scope, String deploymentName)"
  name: "deleteAtScopeWithResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtScopeWithResponseAsync(String scope, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> deleteAtScopeWithResponseAsync(String scope, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScope(String deploymentName)"
  name: "deleteAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtSubscriptionScope(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteAtSubscriptionScope(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScope(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScope(String deploymentName, Context context)"
  name: "deleteAtSubscriptionScope(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.deleteAtSubscriptionScope(String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtSubscriptionScope(String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScopeAsync(String deploymentName)"
  name: "deleteAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtSubscriptionScopeAsync(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAtSubscriptionScopeAsync(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  name: "deleteAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> deleteAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScope(String deploymentName)"
  name: "deleteAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtTenantScope(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract void deleteAtTenantScope(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScope(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScope(String deploymentName, Context context)"
  name: "deleteAtTenantScope(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.deleteAtTenantScope(String deploymentName, Context context)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void deleteAtTenantScope(String deploymentName, Context context)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScopeAsync(String deploymentName)"
  name: "deleteAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtTenantScopeAsync(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Void> deleteAtTenantScopeAsync(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "A <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that completes when a successful response is received."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteAtTenantScopeWithResponseAsync(String deploymentName)"
  name: "deleteAtTenantScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.deleteAtTenantScopeWithResponseAsync(String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> deleteAtTenantScopeWithResponseAsync(String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.deleteWithResponseAsync(String resourceGroupName, String deploymentName)"
  name: "deleteWithResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.deleteWithResponseAsync(String resourceGroupName, String deploymentName)"
  summary: "A template deployment that is currently running cannot be deleted."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployment to delete. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> deleteWithResponseAsync(String resourceGroupName, String deploymentName)"
  desc: "A template deployment that is currently running cannot be deleted. Deleting a template deployment removes the associated deployment operations. Deleting a template deployment does not affect the state of the resource group. This is an asynchronous operation that returns a status of 202 until the template deployment is successfully deleted. The Location response header contains the URI that is used to obtain the status of the process. While the process is running, a call to the URI in the Location header returns a status of 202. When the process finishes, the URI in the Location header returns a status of 204 on success. If the asynchronous request failed, the URI in the Location header returns an error-level status code."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplate(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplate(String resourceGroupName, String deploymentName)"
  name: "exportTemplate(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplate(String resourceGroupName, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExportResultInner exportTemplate(String resourceGroupName, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAsync(String resourceGroupName, String deploymentName)"
  name: "exportTemplateAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAsync(String resourceGroupName, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExportResultInner> exportTemplateAsync(String resourceGroupName, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
  name: "exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExportResultInner exportTemplateAtManagementGroupScope(String groupId, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  name: "exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExportResultInner> exportTemplateAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  name: "exportTemplateAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.exportTemplateAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExportResultInner> exportTemplateAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  name: "exportTemplateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExportResultInner>> exportTemplateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScope(String scope, String deploymentName)"
  name: "exportTemplateAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtScope(String scope, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExportResultInner exportTemplateAtScope(String scope, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScopeAsync(String scope, String deploymentName)"
  name: "exportTemplateAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtScopeAsync(String scope, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExportResultInner> exportTemplateAtScopeAsync(String scope, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScopeWithResponse(String scope, String deploymentName, Context context)"
  name: "exportTemplateAtScopeWithResponse(String scope, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.exportTemplateAtScopeWithResponse(String scope, String deploymentName, Context context)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExportResultInner> exportTemplateAtScopeWithResponse(String scope, String deploymentName, Context context)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtScopeWithResponseAsync(String scope, String deploymentName)"
  name: "exportTemplateAtScopeWithResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtScopeWithResponseAsync(String scope, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExportResultInner>> exportTemplateAtScopeWithResponseAsync(String scope, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScope(String deploymentName)"
  name: "exportTemplateAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtSubscriptionScope(String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExportResultInner exportTemplateAtSubscriptionScope(String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
  name: "exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExportResultInner> exportTemplateAtSubscriptionScopeAsync(String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  name: "exportTemplateAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.exportTemplateAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExportResultInner> exportTemplateAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  name: "exportTemplateAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExportResultInner>> exportTemplateAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScope(String deploymentName)"
  name: "exportTemplateAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtTenantScope(String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExportResultInner exportTemplateAtTenantScope(String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScopeAsync(String deploymentName)"
  name: "exportTemplateAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtTenantScopeAsync(String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExportResultInner> exportTemplateAtTenantScopeAsync(String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScopeWithResponse(String deploymentName, Context context)"
  name: "exportTemplateAtTenantScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.exportTemplateAtTenantScopeWithResponse(String deploymentName, Context context)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExportResultInner> exportTemplateAtTenantScopeWithResponse(String deploymentName, Context context)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateAtTenantScopeWithResponseAsync(String deploymentName)"
  name: "exportTemplateAtTenantScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateAtTenantScopeWithResponseAsync(String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExportResultInner>> exportTemplateAtTenantScopeWithResponseAsync(String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateWithResponse(String resourceGroupName, String deploymentName, Context context)"
  name: "exportTemplateWithResponse(String resourceGroupName, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.exportTemplateWithResponse(String resourceGroupName, String deploymentName, Context context)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExportResultInner> exportTemplateWithResponse(String resourceGroupName, String deploymentName, Context context)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.exportTemplateWithResponseAsync(String resourceGroupName, String deploymentName)"
  name: "exportTemplateWithResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.exportTemplateWithResponseAsync(String resourceGroupName, String deploymentName)"
  summary: "Exports the template used for specified deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExportResultInner>> exportTemplateWithResponseAsync(String resourceGroupName, String deploymentName)"
  desc: "Exports the template used for specified deployment."
  returns:
    description: "the deployment export result along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExportResultInner&text=DeploymentExportResultInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScope(String groupId, String deploymentName)"
  name: "getAtManagementGroupScope(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.getAtManagementGroupScope(String groupId, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExtendedInner getAtManagementGroupScope(String groupId, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  name: "getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExtendedInner> getAtManagementGroupScopeAsync(String groupId, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  name: "getAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.getAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExtendedInner> getAtManagementGroupScopeWithResponse(String groupId, String deploymentName, Context context)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  name: "getAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  nameWithType: "DeploymentsClient.getAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExtendedInner>> getAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScope(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScope(String scope, String deploymentName)"
  name: "getAtScope(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.getAtScope(String scope, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExtendedInner getAtScope(String scope, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScopeAsync(String scope, String deploymentName)"
  name: "getAtScopeAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.getAtScopeAsync(String scope, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExtendedInner> getAtScopeAsync(String scope, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScopeWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScopeWithResponse(String scope, String deploymentName, Context context)"
  name: "getAtScopeWithResponse(String scope, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.getAtScopeWithResponse(String scope, String deploymentName, Context context)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExtendedInner> getAtScopeWithResponse(String scope, String deploymentName, Context context)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScopeWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtScopeWithResponseAsync(String scope, String deploymentName)"
  name: "getAtScopeWithResponseAsync(String scope, String deploymentName)"
  nameWithType: "DeploymentsClient.getAtScopeWithResponseAsync(String scope, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExtendedInner>> getAtScopeWithResponseAsync(String scope, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScope(String deploymentName)"
  name: "getAtSubscriptionScope(String deploymentName)"
  nameWithType: "DeploymentsClient.getAtSubscriptionScope(String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExtendedInner getAtSubscriptionScope(String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeAsync(String deploymentName)"
  name: "getAtSubscriptionScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.getAtSubscriptionScopeAsync(String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExtendedInner> getAtSubscriptionScopeAsync(String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  name: "getAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.getAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExtendedInner> getAtSubscriptionScopeWithResponse(String deploymentName, Context context)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  name: "getAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.getAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExtendedInner>> getAtSubscriptionScopeWithResponseAsync(String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScope(String deploymentName)"
  name: "getAtTenantScope(String deploymentName)"
  nameWithType: "DeploymentsClient.getAtTenantScope(String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExtendedInner getAtTenantScope(String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScopeAsync(String deploymentName)"
  name: "getAtTenantScopeAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.getAtTenantScopeAsync(String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExtendedInner> getAtTenantScopeAsync(String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScopeWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScopeWithResponse(String deploymentName, Context context)"
  name: "getAtTenantScopeWithResponse(String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.getAtTenantScopeWithResponse(String deploymentName, Context context)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExtendedInner> getAtTenantScopeWithResponse(String deploymentName, Context context)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScopeWithResponseAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getAtTenantScopeWithResponseAsync(String deploymentName)"
  name: "getAtTenantScopeWithResponseAsync(String deploymentName)"
  nameWithType: "DeploymentsClient.getAtTenantScopeWithResponseAsync(String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExtendedInner>> getAtTenantScopeWithResponseAsync(String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroup(String resourceGroupName, String deploymentName)"
  name: "getByResourceGroup(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.getByResourceGroup(String resourceGroupName, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract DeploymentExtendedInner getByResourceGroup(String resourceGroupName, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
  name: "getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<DeploymentExtendedInner> getByResourceGroupAsync(String resourceGroupName, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroupWithResponse(String resourceGroupName, String deploymentName, Context context)"
  name: "getByResourceGroupWithResponse(String resourceGroupName, String deploymentName, Context context)"
  nameWithType: "DeploymentsClient.getByResourceGroupWithResponse(String resourceGroupName, String deploymentName, Context context)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<DeploymentExtendedInner> getByResourceGroupWithResponse(String resourceGroupName, String deploymentName, Context context)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String deploymentName)"
  name: "getByResourceGroupWithResponseAsync(String resourceGroupName, String deploymentName)"
  nameWithType: "DeploymentsClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String deploymentName)"
  summary: "Gets a deployment."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group. The name is case insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<Response<DeploymentExtendedInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String deploymentName)"
  desc: "Gets a deployment."
  returns:
    description: "a deployment along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.list()"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.list()"
  name: "list()"
  nameWithType: "DeploymentsClient.list()"
  summary: "Get all the deployments for a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> list()"
  desc: "Get all the deployments for a subscription."
  returns:
    description: "all the deployments for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.list(String filter, Integer top, Context context)"
  name: "list(String filter, Integer top, Context context)"
  nameWithType: "DeploymentsClient.list(String filter, Integer top, Context context)"
  summary: "Get all the deployments for a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> list(String filter, Integer top, Context context)"
  desc: "Get all the deployments for a subscription."
  returns:
    description: "all the deployments for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync()"
  name: "listAsync()"
  nameWithType: "DeploymentsClient.listAsync()"
  summary: "Get all the deployments for a subscription."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAsync()"
  desc: "Get all the deployments for a subscription."
  returns:
    description: "all the deployments for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAsync(String filter, Integer top)"
  name: "listAsync(String filter, Integer top)"
  nameWithType: "DeploymentsClient.listAsync(String filter, Integer top)"
  summary: "Get all the deployments for a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAsync(String filter, Integer top)"
  desc: "Get all the deployments for a subscription."
  returns:
    description: "all the deployments for a subscription as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScope(String groupId)"
  name: "listAtManagementGroupScope(String groupId)"
  nameWithType: "DeploymentsClient.listAtManagementGroupScope(String groupId)"
  summary: "Get all the deployments for a management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listAtManagementGroupScope(String groupId)"
  desc: "Get all the deployments for a management group."
  returns:
    description: "all the deployments for a management group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScope(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScope(String groupId, String filter, Integer top, Context context)"
  name: "listAtManagementGroupScope(String groupId, String filter, Integer top, Context context)"
  nameWithType: "DeploymentsClient.listAtManagementGroupScope(String groupId, String filter, Integer top, Context context)"
  summary: "Get all the deployments for a management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listAtManagementGroupScope(String groupId, String filter, Integer top, Context context)"
  desc: "Get all the deployments for a management group."
  returns:
    description: "all the deployments for a management group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScopeAsync(String groupId)"
  name: "listAtManagementGroupScopeAsync(String groupId)"
  nameWithType: "DeploymentsClient.listAtManagementGroupScopeAsync(String groupId)"
  summary: "Get all the deployments for a management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtManagementGroupScopeAsync(String groupId)"
  desc: "Get all the deployments for a management group."
  returns:
    description: "all the deployments for a management group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
  name: "listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
  nameWithType: "DeploymentsClient.listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
  summary: "Get all the deployments for a management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtManagementGroupScopeAsync(String groupId, String filter, Integer top)"
  desc: "Get all the deployments for a management group."
  returns:
    description: "all the deployments for a management group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScope(String scope)"
  name: "listAtScope(String scope)"
  nameWithType: "DeploymentsClient.listAtScope(String scope)"
  summary: "Get all the deployments at the given scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listAtScope(String scope)"
  desc: "Get all the deployments at the given scope."
  returns:
    description: "all the deployments at the given scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScope(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScope(String scope, String filter, Integer top, Context context)"
  name: "listAtScope(String scope, String filter, Integer top, Context context)"
  nameWithType: "DeploymentsClient.listAtScope(String scope, String filter, Integer top, Context context)"
  summary: "Get all the deployments at the given scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listAtScope(String scope, String filter, Integer top, Context context)"
  desc: "Get all the deployments at the given scope."
  returns:
    description: "all the deployments at the given scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScopeAsync(String scope)"
  name: "listAtScopeAsync(String scope)"
  nameWithType: "DeploymentsClient.listAtScopeAsync(String scope)"
  summary: "Get all the deployments at the given scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtScopeAsync(String scope)"
  desc: "Get all the deployments at the given scope."
  returns:
    description: "all the deployments at the given scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScopeAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtScopeAsync(String scope, String filter, Integer top)"
  name: "listAtScopeAsync(String scope, String filter, Integer top)"
  nameWithType: "DeploymentsClient.listAtScopeAsync(String scope, String filter, Integer top)"
  summary: "Get all the deployments at the given scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtScopeAsync(String scope, String filter, Integer top)"
  desc: "Get all the deployments at the given scope."
  returns:
    description: "all the deployments at the given scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScope()"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScope()"
  name: "listAtTenantScope()"
  nameWithType: "DeploymentsClient.listAtTenantScope()"
  summary: "Get all the deployments at the tenant scope."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listAtTenantScope()"
  desc: "Get all the deployments at the tenant scope."
  returns:
    description: "all the deployments at the tenant scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScope(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScope(String filter, Integer top, Context context)"
  name: "listAtTenantScope(String filter, Integer top, Context context)"
  nameWithType: "DeploymentsClient.listAtTenantScope(String filter, Integer top, Context context)"
  summary: "Get all the deployments at the tenant scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listAtTenantScope(String filter, Integer top, Context context)"
  desc: "Get all the deployments at the tenant scope."
  returns:
    description: "all the deployments at the tenant scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync()"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync()"
  name: "listAtTenantScopeAsync()"
  nameWithType: "DeploymentsClient.listAtTenantScopeAsync()"
  summary: "Get all the deployments at the tenant scope."
  modifiers:
  - "abstract"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtTenantScopeAsync()"
  desc: "Get all the deployments at the tenant scope."
  returns:
    description: "all the deployments at the tenant scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync(java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listAtTenantScopeAsync(String filter, Integer top)"
  name: "listAtTenantScopeAsync(String filter, Integer top)"
  nameWithType: "DeploymentsClient.listAtTenantScopeAsync(String filter, Integer top)"
  summary: "Get all the deployments at the tenant scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listAtTenantScopeAsync(String filter, Integer top)"
  desc: "Get all the deployments at the tenant scope."
  returns:
    description: "all the deployments at the tenant scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroup(String resourceGroupName)"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "DeploymentsClient.listByResourceGroup(String resourceGroupName)"
  summary: "Get all the deployments for a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployments to get. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listByResourceGroup(String resourceGroupName)"
  desc: "Get all the deployments for a resource group."
  returns:
    description: "all the deployments for a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroup(java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  name: "listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  nameWithType: "DeploymentsClient.listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  summary: "Get all the deployments for a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployments to get. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<DeploymentExtendedInner> listByResourceGroup(String resourceGroupName, String filter, Integer top, Context context)"
  desc: "Get all the deployments for a resource group."
  returns:
    description: "all the deployments for a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroupAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroupAsync(String resourceGroupName)"
  name: "listByResourceGroupAsync(String resourceGroupName)"
  nameWithType: "DeploymentsClient.listByResourceGroupAsync(String resourceGroupName)"
  summary: "Get all the deployments for a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployments to get. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listByResourceGroupAsync(String resourceGroupName)"
  desc: "Get all the deployments for a resource group."
  returns:
    description: "all the deployments for a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
  name: "listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
  nameWithType: "DeploymentsClient.listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
  summary: "Get all the deployments for a resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group with the deployments to get. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The filter to apply on the operation. For example, you can use $filter=provisioningState eq\n     '{state}'."
    name: "filter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The number of results to get. If null is passed, returns all deployments."
    name: "top"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public abstract PagedFlux<DeploymentExtendedInner> listByResourceGroupAsync(String resourceGroupName, String filter, Integer top)"
  desc: "Get all the deployments for a resource group."
  returns:
    description: "all the deployments for a resource group as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validate(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validate(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  name: "validate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.validate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validate(String resourceGroupName, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentValidateResultInner> validateAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  name: "validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtManagementGroupScope(String groupId, String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "validateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.validateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentValidateResultInner> validateAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  name: "validateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.validateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> validateAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  name: "validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtScope(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  name: "validateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.validateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtScope(String scope, String deploymentName, DeploymentInner parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  name: "validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentValidateResultInner> validateAtScopeAsync(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  name: "validateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The resource scope."
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> validateAtScopeWithResponseAsync(String scope, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  name: "validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  name: "validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  nameWithType: "DeploymentsClient.validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtSubscriptionScope(String deploymentName, DeploymentInner parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScopeAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  name: "validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentValidateResultInner> validateAtSubscriptionScopeAsync(String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  name: "validateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> validateAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  name: "validateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.validateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtTenantScope(String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  name: "validateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  nameWithType: "DeploymentsClient.validateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract DeploymentValidateResultInner validateAtTenantScope(String deploymentName, ScopedDeployment parameters, Context context)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  name: "validateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.validateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<DeploymentValidateResultInner> validateAtTenantScopeAsync(String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentValidateResultInner&text=DeploymentValidateResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeployment)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  name: "validateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  nameWithType: "DeploymentsClient.validateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeployment?alt=com.azure.resourcemanager.resources.models.ScopedDeployment&text=ScopedDeployment\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> validateAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeployment parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.fluent.models.DeploymentInner)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.validateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  name: "validateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  nameWithType: "DeploymentsClient.validateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  summary: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentInner&text=DeploymentInner\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> validateWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentInner parameters)"
  desc: "Validates whether the specified template is syntactically correct and will be accepted by Azure Resource Manager.."
  returns:
    description: "information from validate template deployment response along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful\n     completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIf(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  name: "whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIf(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  name: "whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIf(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  name: "whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<WhatIfOperationResultInner> whatIfAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "result of the What-If operation on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScope(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  name: "whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIfAtManagementGroupScope(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScopeAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "whatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<WhatIfOperationResultInner> whatIfAtManagementGroupScopeAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  returns:
    description: "result of the What-If operation on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScopeWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "whatIfAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The management group ID."
    name: "groupId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> whatIfAtManagementGroupScopeWithResponseAsync(String groupId, String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the management group."
  returns:
    description: "result of the What-If operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  name: "whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to What If."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScope(java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  name: "whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to What If."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIfAtSubscriptionScope(String deploymentName, DeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  name: "whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to What If."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<WhatIfOperationResultInner> whatIfAtSubscriptionScopeAsync(String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "result of the What-If operation on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  name: "whatIfAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to What If."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> whatIfAtSubscriptionScopeWithResponseAsync(String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the subscription."
  returns:
    description: "result of the What-If operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScope(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  name: "whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  nameWithType: "DeploymentsClient.whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract WhatIfOperationResultInner whatIfAtTenantScope(String deploymentName, ScopedDeploymentWhatIf parameters, Context context)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  returns:
    description: "result of the What-If operation."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScopeAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "whatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<WhatIfOperationResultInner> whatIfAtTenantScopeAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  returns:
    description: "result of the What-If operation on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner?alt=com.azure.resourcemanager.resources.fluent.models.WhatIfOperationResultInner&text=WhatIfOperationResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScopeWithResponseAsync(java.lang.String,com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  name: "whatIfAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.ScopedDeploymentWhatIf&text=ScopedDeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> whatIfAtTenantScopeWithResponseAsync(String deploymentName, ScopedDeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the tenant group."
  returns:
    description: "result of the What-If operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.resources.models.DeploymentWhatIf)"
  fullName: "com.azure.resourcemanager.resources.fluent.DeploymentsClient.whatIfWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  name: "whatIfWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  nameWithType: "DeploymentsClient.whatIfWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  summary: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group the template will be deployed to. The name is case\n     insensitive."
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the deployment."
    name: "deploymentName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Parameters to validate."
    name: "parameters"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.DeploymentWhatIf?alt=com.azure.resourcemanager.resources.models.DeploymentWhatIf&text=DeploymentWhatIf\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Flux<ByteBuffer>>> whatIfWithResponseAsync(String resourceGroupName, String deploymentName, DeploymentWhatIf parameters)"
  desc: "Returns changes that will be made by the deployment if executed at the scope of the resource group."
  returns:
    description: "result of the What-If operation along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> on successful completion of <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html\">Flux</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/nio/ByteBuffer.html\">ByteBuffer</a>&gt;&gt;&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in DeploymentsClient."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete&text=InnerSupportsDelete\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing&text=InnerSupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner?alt=com.azure.resourcemanager.resources.fluent.models.DeploymentExtendedInner&text=DeploymentExtendedInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
