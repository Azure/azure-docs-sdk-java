### YamlMime:JavaMember
nameWithType: PrivateLinkResourcesInner.getAsync
type: method
members:
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  name: getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  nameWithType: PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private link resource name. This must be unique within the account. </p>
    name: privateLinkResourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PrivateLinkResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified private link resource.</p>

    <p></p>
  syntax: public Observable<PrivateLinkResourceInner> getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String,String,String)
- fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  name: getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  nameWithType: PrivateLinkResourcesInner.getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group that contains the Batch account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Batch account. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The private link resource name. This must be unique within the account. </p>
    name: privateLinkResourceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner?alt=com.microsoft.azure.management.batch.implementation.PrivateLinkResourceInner&text=PrivateLinkResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about the specified private link resource.</p>

    <p></p>
  syntax: public ServiceFuture<PrivateLinkResourceInner> getAsync(String resourceGroupName, String accountName, String privateLinkResourceName, final ServiceCallback<PrivateLinkResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync(String,String,String,final ServiceCallback<PrivateLinkResourceInner>)
uid: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync*
fullName: com.microsoft.azure.management.batch.implementation.PrivateLinkResourcesInner.getAsync
name: getAsync(String resourceGroupName, String accountName, String privateLinkResourceName)
package: com.microsoft.azure.management.batch.implementation
metadata: {}
