### YamlMime:JavaType
uid: "com.azure.resourcemanager.keyvault.models.Vault"
fullName: "com.azure.resourcemanager.keyvault.models.Vault"
name: "Vault"
nameWithType: "Vault"
summary: "An immutable client-side representation of an Azure Key Vault."
syntax: "public interface Vault extends GroupableResource<KeyVaultManager,VaultInner>, Refreshable<Vault>, Updatable<Vault.Update>, SupportsListingPrivateLinkResource, SupportsUpdatingPrivateEndpointConnection"
methods:
- uid: "com.azure.resourcemanager.keyvault.models.Vault.accessPolicies()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.accessPolicies()"
  name: "accessPolicies()"
  nameWithType: "Vault.accessPolicies()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<AccessPolicy> accessPolicies()"
  returns:
    description: "an array of 0 to 16 identities that have access to the key vault. All identities in the array must use\n     the same tenant ID as the key vault's tenant ID."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicy?alt=com.azure.resourcemanager.keyvault.models.AccessPolicy&text=AccessPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.createMode()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.createMode()"
  name: "createMode()"
  nameWithType: "Vault.createMode()"
  summary: "Get the create<wbr>Mode value."
  modifiers:
  - "abstract"
  syntax: "public abstract CreateMode createMode()"
  desc: "Get the createMode value."
  returns:
    description: "the createMode value"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.CreateMode?alt=com.azure.resourcemanager.keyvault.models.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.enabledForDeployment()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.enabledForDeployment()"
  name: "enabledForDeployment()"
  nameWithType: "Vault.enabledForDeployment()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean enabledForDeployment()"
  returns:
    description: "whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key\n     vault."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.enabledForDiskEncryption()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.enabledForDiskEncryption()"
  name: "enabledForDiskEncryption()"
  nameWithType: "Vault.enabledForDiskEncryption()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean enabledForDiskEncryption()"
  returns:
    description: "whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.enabledForTemplateDeployment()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.enabledForTemplateDeployment()"
  name: "enabledForTemplateDeployment()"
  nameWithType: "Vault.enabledForTemplateDeployment()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean enabledForTemplateDeployment()"
  returns:
    description: "whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.keyClient()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.keyClient()"
  name: "keyClient()"
  nameWithType: "Vault.keyClient()"
  modifiers:
  - "abstract"
  syntax: "public abstract KeyAsyncClient keyClient()"
  returns:
    description: "an authenticated Key Vault key client"
    type: "<xref href=\"com.azure.security.keyvault.keys.KeyAsyncClient?alt=com.azure.security.keyvault.keys.KeyAsyncClient&text=KeyAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.keys()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.keys()"
  name: "keys()"
  nameWithType: "Vault.keys()"
  modifiers:
  - "abstract"
  syntax: "public abstract Keys keys()"
  returns:
    description: "the Key Vault key API entry point"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Keys?alt=com.azure.resourcemanager.keyvault.models.Keys&text=Keys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.networkRuleSet()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.networkRuleSet()"
  name: "networkRuleSet()"
  nameWithType: "Vault.networkRuleSet()"
  summary: "Get the network<wbr>Acls value."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkRuleSet networkRuleSet()"
  desc: "Get the networkAcls value."
  returns:
    description: "the networkAcls value"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.NetworkRuleSet?alt=com.azure.resourcemanager.keyvault.models.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.purgeProtectionEnabled()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.purgeProtectionEnabled()"
  name: "purgeProtectionEnabled()"
  nameWithType: "Vault.purgeProtectionEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean purgeProtectionEnabled()"
  returns:
    description: "whether purge protection is enabled for this key vault. Purge protection can only be enabled if soft\n     delete is enabled."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.roleBasedAccessControlEnabled()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.roleBasedAccessControlEnabled()"
  name: "roleBasedAccessControlEnabled()"
  nameWithType: "Vault.roleBasedAccessControlEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean roleBasedAccessControlEnabled()"
  returns:
    description: "whether role based access control (RBAC) for authorization of data access is enabled."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.secretClient()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.secretClient()"
  name: "secretClient()"
  nameWithType: "Vault.secretClient()"
  modifiers:
  - "abstract"
  syntax: "public abstract SecretAsyncClient secretClient()"
  returns:
    description: "an authenticated Key Vault secret client"
    type: "<xref href=\"com.azure.security.keyvault.secrets.SecretAsyncClient?alt=com.azure.security.keyvault.secrets.SecretAsyncClient&text=SecretAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.secrets()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.secrets()"
  name: "secrets()"
  nameWithType: "Vault.secrets()"
  modifiers:
  - "abstract"
  syntax: "public abstract Secrets secrets()"
  returns:
    description: "the Key Vault secret API entry point"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Secrets?alt=com.azure.resourcemanager.keyvault.models.Secrets&text=Secrets\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.sku()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.sku()"
  name: "sku()"
  nameWithType: "Vault.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract Sku sku()"
  returns:
    description: "SKU details."
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Sku?alt=com.azure.resourcemanager.keyvault.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.softDeleteEnabled()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.softDeleteEnabled()"
  name: "softDeleteEnabled()"
  nameWithType: "Vault.softDeleteEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean softDeleteEnabled()"
  returns:
    description: "whether soft delete is enabled for this key vault."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.tenantId()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.tenantId()"
  name: "tenantId()"
  nameWithType: "Vault.tenantId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String tenantId()"
  returns:
    description: "the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.vaultHttpPipeline()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.vaultHttpPipeline()"
  name: "vaultHttpPipeline()"
  nameWithType: "Vault.vaultHttpPipeline()"
  modifiers:
  - "abstract"
  syntax: "public abstract HttpPipeline vaultHttpPipeline()"
  returns:
    description: "an authenticated Key Vault rest client"
    type: "<xref href=\"com.azure.core.http.HttpPipeline?alt=com.azure.core.http.HttpPipeline&text=HttpPipeline\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.keyvault.models.Vault.vaultUri()"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.vaultUri()"
  name: "vaultUri()"
  nameWithType: "Vault.vaultUri()"
  modifiers:
  - "abstract"
  syntax: "public abstract String vaultUri()"
  returns:
    description: "the URI of the vault for performing operations on keys and secrets."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "interface"
desc: "An immutable client-side representation of an Azure Key Vault."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.KeyVaultManager?alt=com.azure.resourcemanager.keyvault.KeyVaultManager&text=KeyVaultManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.resourcemanager.keyvault.fluent.models.VaultInner?alt=com.azure.resourcemanager.keyvault.fluent.models.VaultInner&text=VaultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingPrivateLinkResource?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListingPrivateLinkResource&text=SupportsListingPrivateLinkResource\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsUpdatingPrivateEndpointConnection?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsUpdatingPrivateEndpointConnection&text=SupportsUpdatingPrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Refreshable?alt=com.azure.resourcemanager.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.Vault?alt=com.azure.resourcemanager.keyvault.models.Vault&text=Vault\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Updatable?alt=com.azure.resourcemanager.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.Vault.Update?alt=com.azure.resourcemanager.keyvault.models.Vault.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.19.0
