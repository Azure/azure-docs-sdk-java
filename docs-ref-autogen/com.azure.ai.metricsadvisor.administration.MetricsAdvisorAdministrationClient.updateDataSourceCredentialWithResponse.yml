### YamlMime:JavaMember
uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateDataSourceCredentialWithResponse*"
fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateDataSourceCredentialWithResponse"
name: "updateDataSourceCredentialWithResponse"
nameWithType: "MetricsAdvisorAdministrationClient.updateDataSourceCredentialWithResponse"
members:
- uid: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateDataSourceCredentialWithResponse(com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity,com.azure.core.util.Context)"
  fullName: "com.azure.ai.metricsadvisor.administration.MetricsAdvisorAdministrationClient.updateDataSourceCredentialWithResponse(DataSourceCredentialEntity dataSourceCredential, Context context)"
  name: "updateDataSourceCredentialWithResponse(DataSourceCredentialEntity dataSourceCredential, Context context)"
  nameWithType: "MetricsAdvisorAdministrationClient.updateDataSourceCredentialWithResponse(DataSourceCredentialEntity dataSourceCredential, Context context)"
  summary: "Update a data source credential entity.\n\n**Code sample**\n\n```java\nfinal String datasourceCredentialId = \"f45668b2-bffa-11eb-8529-0246ac130003\";\n DataSourceCredentialEntity existingDatasourceCredential =\n     metricsAdvisorAdminClient.getDataSourceCredential(datasourceCredentialId);\n DataSourceServicePrincipalInKeyVault actualCredentialSPInKV = null;\n if (existingDatasourceCredential instanceof DataSourceServicePrincipalInKeyVault) {\n     actualCredentialSPInKV  = (DataSourceServicePrincipalInKeyVault) existingDatasourceCredential;\n }\n Response<DataSourceCredentialEntity> credentialEntityWithResponse =\n     metricsAdvisorAdminClient.updateDataSourceCredentialWithResponse(\n         actualCredentialSPInKV.setDescription(\"set updated description\"), Context.NONE);\n\n System.out.printf(\"Credential Entity creation operation status: %s%n\",\n     credentialEntityWithResponse.getStatusCode());\n if (credentialEntityWithResponse.getValue() instanceof DataSourceServicePrincipalInKeyVault) {\n     DataSourceServicePrincipalInKeyVault updatedCredentialSPInKV\n         = (DataSourceServicePrincipalInKeyVault) credentialEntityWithResponse.getValue();\n     System.out.printf(\"Actual credential entity key vault endpoint: %s%n\",\n         updatedCredentialSPInKV.getKeyVaultEndpoint());\n     System.out.printf(\"Actual credential entity key vault updated description: %s%n\",\n         updatedCredentialSPInKV.getDescription());\n }\n```"
  parameters:
  - description: "The credential entity."
    name: "dataSourceCredential"
    type: "<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity?alt=com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity&text=DataSourceCredentialEntity\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DataSourceCredentialEntity> updateDataSourceCredentialWithResponse(DataSourceCredentialEntity dataSourceCredential, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the updated <xref uid=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataSourceCredentialEntity\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity?alt=com.azure.ai.metricsadvisor.administration.models.DataSourceCredentialEntity&text=DataSourceCredentialEntity\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.ai.metricsadvisor.administration"
artifact: com.azure:azure-ai-metricsadvisor:1.1.1
