### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable"
fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>"
name: "AzureConfigurable<T>"
nameWithType: "AzureConfigurable<T>"
summary: "The base interface for allowing configurations to be made on the HTTP client."
syntax: "public interface AzureConfigurable<T>"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withAuxiliaryCredential(com.azure.core.credential.TokenCredential)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withAuxiliaryCredential(TokenCredential token)"
  name: "withAuxiliaryCredential(TokenCredential token)"
  nameWithType: "AzureConfigurable<T>.withAuxiliaryCredential(TokenCredential token)"
  summary: "Set the cross-tenant auxiliary credentials for Azure which can hold up to three."
  modifiers:
  - "abstract"
  parameters:
  - description: "the auxiliary credential"
    name: "token"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withAuxiliaryCredential(TokenCredential token)"
  desc: "Set the cross-tenant auxiliary credentials for Azure which can hold up to three."
  returns:
    description: "the configurable object itself"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withAuxiliaryCredentials(java.util.List<com.azure.core.credential.TokenCredential>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withAuxiliaryCredentials(List<TokenCredential> tokens)"
  name: "withAuxiliaryCredentials(List<TokenCredential> tokens)"
  nameWithType: "AzureConfigurable<T>.withAuxiliaryCredentials(List<TokenCredential> tokens)"
  summary: "Set the cross-tenant auxiliary credentials for Azure which can hold up to three."
  modifiers:
  - "abstract"
  parameters:
  - description: "the auxiliary credentials"
    name: "tokens"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract T withAuxiliaryCredentials(List<TokenCredential> tokens)"
  desc: "Set the cross-tenant auxiliary credentials for Azure which can hold up to three."
  returns:
    description: "the configurable object itself"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withConfiguration(com.azure.core.util.Configuration)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withConfiguration(Configuration configuration)"
  name: "withConfiguration(Configuration configuration)"
  nameWithType: "AzureConfigurable<T>.withConfiguration(Configuration configuration)"
  summary: "Sets the configuration."
  modifiers:
  - "abstract"
  parameters:
  - description: "the proxy to use"
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withConfiguration(Configuration configuration)"
  desc: "Sets the configuration."
  returns:
    description: "the configurable object itself for chaining"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withHttpClient(com.azure.core.http.HttpClient)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withHttpClient(HttpClient httpClient)"
  name: "withHttpClient(HttpClient httpClient)"
  nameWithType: "AzureConfigurable<T>.withHttpClient(HttpClient httpClient)"
  summary: "Sets the HTTP client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the HTTP client"
    name: "httpClient"
    type: "<xref href=\"com.azure.core.http.HttpClient?alt=com.azure.core.http.HttpClient&text=HttpClient\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withHttpClient(HttpClient httpClient)"
  desc: "Sets the HTTP client."
  returns:
    description: "the configurable object itself for chaining"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withLogLevel(com.azure.core.http.policy.HttpLogDetailLevel)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withLogLevel(HttpLogDetailLevel logLevel)"
  name: "withLogLevel(HttpLogDetailLevel logLevel)"
  nameWithType: "AzureConfigurable<T>.withLogLevel(HttpLogDetailLevel logLevel)"
  summary: "Sets the logging detail level on the HTTP client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the logging level"
    name: "logLevel"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogDetailLevel?alt=com.azure.core.http.policy.HttpLogDetailLevel&text=HttpLogDetailLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withLogLevel(HttpLogDetailLevel logLevel)"
  desc: "Sets the logging detail level on the HTTP client. If set, this configure will override <xref uid=\"com.azure.core.http.policy.HttpLogOptions.setLogLevel*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions#setLogLevel(HttpLogDetailLevel)\"></xref> configure of <xref uid=\"com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withLogOptions(com.azure.core.http.policy.HttpLogOptions)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"AzureConfigurable#withLogOptions(HttpLogOptions)\"></xref>."
  returns:
    description: "the configurable object itself"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withLogOptions(HttpLogOptions logOptions)"
  name: "withLogOptions(HttpLogOptions logOptions)"
  nameWithType: "AzureConfigurable<T>.withLogOptions(HttpLogOptions logOptions)"
  summary: "Set the logging options on the HTTP client."
  modifiers:
  - "abstract"
  parameters:
  - description: "the HttpLogDetailLevel logging options"
    name: "logOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withLogOptions(HttpLogOptions logOptions)"
  desc: "Set the logging options on the HTTP client."
  returns:
    description: "the configurable object itself"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withPolicy(HttpPipelinePolicy policy)"
  name: "withPolicy(HttpPipelinePolicy policy)"
  nameWithType: "AzureConfigurable<T>.withPolicy(HttpPipelinePolicy policy)"
  summary: "Plug in a policy into the HTTP pipeline."
  modifiers:
  - "abstract"
  parameters:
  - description: "the policy to plug in"
    name: "policy"
    type: "<xref href=\"com.azure.core.http.policy.HttpPipelinePolicy?alt=com.azure.core.http.policy.HttpPipelinePolicy&text=HttpPipelinePolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withPolicy(HttpPipelinePolicy policy)"
  desc: "Plug in a policy into the HTTP pipeline."
  returns:
    description: "the configurable object itself"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withRetryOptions(com.azure.core.http.policy.RetryOptions)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withRetryOptions(RetryOptions retryOptions)"
  name: "withRetryOptions(RetryOptions retryOptions)"
  nameWithType: "AzureConfigurable<T>.withRetryOptions(RetryOptions retryOptions)"
  summary: "Sets the retry options for the HTTP pipeline retry policy."
  modifiers:
  - "abstract"
  parameters:
  - description: "the retry options for the HTTP pipeline retry policy."
    name: "retryOptions"
    type: "<xref href=\"com.azure.core.http.policy.RetryOptions?alt=com.azure.core.http.policy.RetryOptions&text=RetryOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withRetryOptions(RetryOptions retryOptions)"
  desc: "Sets the retry options for the HTTP pipeline retry policy.\n\nThis setting has no effect, if retry policy is set via <xref uid=\"com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withRetryPolicy(com.azure.core.http.policy.RetryPolicy)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#withRetryPolicy(RetryPolicy)\"></xref>."
  returns:
    description: "the configurable object itself."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withRetryPolicy(com.azure.core.http.policy.RetryPolicy)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withRetryPolicy(RetryPolicy retryPolicy)"
  name: "withRetryPolicy(RetryPolicy retryPolicy)"
  nameWithType: "AzureConfigurable<T>.withRetryPolicy(RetryPolicy retryPolicy)"
  summary: "Sets the retry policy used in HTTP pipeline."
  modifiers:
  - "abstract"
  parameters:
  - description: "the retry policy"
    name: "retryPolicy"
    type: "<xref href=\"com.azure.core.http.policy.RetryPolicy?alt=com.azure.core.http.policy.RetryPolicy&text=RetryPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract T withRetryPolicy(RetryPolicy retryPolicy)"
  desc: "Sets the retry policy used in HTTP pipeline."
  returns:
    description: "the configurable object itself for chaining"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withScope(java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withScope(String scope)"
  name: "withScope(String scope)"
  nameWithType: "AzureConfigurable<T>.withScope(String scope)"
  summary: "Sets the credential scope."
  modifiers:
  - "abstract"
  parameters:
  - description: "the credential scope"
    name: "scope"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract T withScope(String scope)"
  desc: "Sets the credential scope."
  returns:
    description: "the configurable object itself for chaining"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable.withScopes(java.util.List<java.lang.String>)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.AzureConfigurable<T>.withScopes(List<String> scopes)"
  name: "withScopes(List<String> scopes)"
  nameWithType: "AzureConfigurable<T>.withScopes(List<String> scopes)"
  summary: "Sets the credential scopes."
  modifiers:
  - "abstract"
  parameters:
  - description: "the credential scope"
    name: "scopes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public abstract T withScopes(List<String> scopes)"
  desc: "Sets the credential scopes."
  returns:
    description: "the configurable object itself for chaining"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
typeParameters:
- description: "the actual type of the interface extending this interface"
  name: "T"
desc: "The base interface for allowing configurations to be made on the HTTP client."
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.arm"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
