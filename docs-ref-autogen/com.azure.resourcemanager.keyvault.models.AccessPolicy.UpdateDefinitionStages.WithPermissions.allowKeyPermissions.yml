### YamlMime:JavaMember
uid: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions.allowKeyPermissions*"
fullName: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowKeyPermissions"
name: "allowKeyPermissions"
nameWithType: "AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowKeyPermissions"
members:
- uid: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions.allowKeyPermissions(com.azure.resourcemanager.keyvault.models.KeyPermissions...)"
  fullName: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(KeyPermissions[] permissions)"
  name: "allowKeyPermissions(KeyPermissions[] permissions)"
  nameWithType: "AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(KeyPermissions[] permissions)"
  summary: "Allow a list of permissions for the AD identity to access keys."
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.KeyPermissions?alt=com.azure.resourcemanager.keyvault.models.KeyPermissions&text=KeyPermissions\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public abstract AccessPolicy.UpdateDefinitionStages.WithAttach<ParentT> allowKeyPermissions(KeyPermissions[] permissions)"
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach?alt=com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions.allowKeyPermissions(java.util.List<com.azure.resourcemanager.keyvault.models.KeyPermissions>)"
  fullName: "com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(List<KeyPermissions> permissions)"
  name: "allowKeyPermissions(List<KeyPermissions> permissions)"
  nameWithType: "AccessPolicy.UpdateDefinitionStages.WithPermissions<ParentT>.allowKeyPermissions(List<KeyPermissions> permissions)"
  summary: "Allow a list of permissions for the AD identity to access keys."
  parameters:
  - description: "the list of permissions allowed"
    name: "permissions"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.KeyPermissions?alt=com.azure.resourcemanager.keyvault.models.KeyPermissions&text=KeyPermissions\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract AccessPolicy.UpdateDefinitionStages.WithAttach<ParentT> allowKeyPermissions(List<KeyPermissions> permissions)"
  returns:
    description: "the next stage of access policy definition"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach?alt=com.azure.resourcemanager.keyvault.models.AccessPolicy.UpdateDefinitionStages.WithAttach&text=WithAttach\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"ParentT?alt=ParentT&text=ParentT\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.1.0
