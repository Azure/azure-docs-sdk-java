### YamlMime:JavaType
methods:
- fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration<E>.hasMoreElementsAsync()
  name: hasMoreElementsAsync()
  nameWithType: AsyncEnumeration<E>.hasMoreElementsAsync()
  returns:
    description: <p>A completable future which returns boolean indicating whether there are more elements left to enumerate. </p>
    type: <xref href="CompletableFuture%3CBoolean%3E?alt=CompletableFuture%3CBoolean%3E&text=CompletableFuture%3CBoolean%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Gets asynchronously whether there are more elements to enumerate. </p>
  syntax: public CompletableFuture<Boolean> hasMoreElementsAsync()
  uid: microsoft.servicefabric.data.utilities.AsyncEnumeration.hasMoreElementsAsync()
- fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration<E>.nextElementAsync()
  name: nextElementAsync()
  nameWithType: AsyncEnumeration<E>.nextElementAsync()
  returns:
    description: <p>The next element. </p>
    type: <xref href="CompletableFuture%3CE%3E?alt=CompletableFuture%3CE%3E&text=CompletableFuture%3CE%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the next element in enumeration. </p>
  syntax: public CompletableFuture<E> nextElementAsync()
  uid: microsoft.servicefabric.data.utilities.AsyncEnumeration.nextElementAsync()
nameWithType: AsyncEnumeration<E>
syntax: public interface AsyncEnumeration<E>
type: interface
typeParameters:
- description: <p>The type of element to enumerate. </p>
  name: E
uid: microsoft.servicefabric.data.utilities.AsyncEnumeration
fullName: microsoft.servicefabric.data.utilities.AsyncEnumeration<E>
name: AsyncEnumeration<E>
package: microsoft.servicefabric.data.utilities
summary: >-
  <p>Asynchronous enumerator</p>

  <p></p>
metadata: {}
