### YamlMime:JavaType
uid: "com.microsoft.azure.management.batch.ResourceFile"
fullName: "com.microsoft.azure.management.batch.ResourceFile"
name: "ResourceFile"
nameWithType: "ResourceFile"
summary: "A single file or multiple files to be downloaded to a compute node."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class ResourceFile"
constructors:
- uid: "com.microsoft.azure.management.batch.ResourceFile.ResourceFile()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.ResourceFile()"
  name: "ResourceFile()"
  nameWithType: "ResourceFile.ResourceFile()"
  syntax: "public ResourceFile()"
methods:
- uid: "com.microsoft.azure.management.batch.ResourceFile.autoStorageContainerName()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.autoStorageContainerName()"
  name: "autoStorageContainerName()"
  nameWithType: "ResourceFile.autoStorageContainerName()"
  summary: "Get the auto<wbr>Storage<wbr>Container<wbr>Name, storage<wbr>Container<wbr>Url and http<wbr>Url properties are mutually exclusive and one of them must be specified."
  syntax: "public String autoStorageContainerName()"
  desc: "Get the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified."
  returns:
    description: "the autoStorageContainerName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.blobPrefix()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.blobPrefix()"
  name: "blobPrefix()"
  nameWithType: "ResourceFile.blobPrefix()"
  summary: "Get the property is valid only when auto<wbr>Storage<wbr>Container<wbr>Name or storage<wbr>Container<wbr>Url is used."
  syntax: "public String blobPrefix()"
  desc: "Get the property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded."
  returns:
    description: "the blobPrefix value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.fileMode()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.fileMode()"
  name: "fileMode()"
  nameWithType: "ResourceFile.fileMode()"
  summary: "Get this property applies only to files being downloaded to Linux compute nodes."
  syntax: "public String fileMode()"
  desc: "Get this property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file."
  returns:
    description: "the fileMode value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.filePath()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.filePath()"
  name: "filePath()"
  nameWithType: "ResourceFile.filePath()"
  summary: "Get if the http<wbr>Url property is specified, the file<wbr>Path is required and describes the path which the file will be downloaded to, including the filename."
  syntax: "public String filePath()"
  desc: "Get if the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..')."
  returns:
    description: "the filePath value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.httpUrl()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.httpUrl()"
  name: "httpUrl()"
  nameWithType: "ResourceFile.httpUrl()"
  summary: "Get the auto<wbr>Storage<wbr>Container<wbr>Name, storage<wbr>Container<wbr>Url and http<wbr>Url properties are mutually exclusive and one of them must be specified."
  syntax: "public String httpUrl()"
  desc: "Get the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, use a managed identity with read permission, or set the ACL for the blob or its container to allow public access."
  returns:
    description: "the httpUrl value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.identityReference()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.identityReference()"
  name: "identityReference()"
  nameWithType: "ResourceFile.identityReference()"
  summary: "Get the identity<wbr>Reference value."
  syntax: "public ComputeNodeIdentityReference identityReference()"
  desc: "Get the identityReference value."
  returns:
    description: "the identityReference value"
    type: "<xref href=\"com.microsoft.azure.management.batch.ComputeNodeIdentityReference?alt=com.microsoft.azure.management.batch.ComputeNodeIdentityReference&text=ComputeNodeIdentityReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.storageContainerUrl()"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.storageContainerUrl()"
  name: "storageContainerUrl()"
  nameWithType: "ResourceFile.storageContainerUrl()"
  summary: "Get the auto<wbr>Storage<wbr>Container<wbr>Name, storage<wbr>Container<wbr>Url and http<wbr>Url properties are mutually exclusive and one of them must be specified."
  syntax: "public String storageContainerUrl()"
  desc: "Get the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed identity with read and list permissions, or set the ACL for the container to allow public access."
  returns:
    description: "the storageContainerUrl value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.withAutoStorageContainerName(java.lang.String)"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.withAutoStorageContainerName(String autoStorageContainerName)"
  name: "withAutoStorageContainerName(String autoStorageContainerName)"
  nameWithType: "ResourceFile.withAutoStorageContainerName(String autoStorageContainerName)"
  summary: "Set the auto<wbr>Storage<wbr>Container<wbr>Name, storage<wbr>Container<wbr>Url and http<wbr>Url properties are mutually exclusive and one of them must be specified."
  parameters:
  - description: "the autoStorageContainerName value to set"
    name: "autoStorageContainerName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceFile withAutoStorageContainerName(String autoStorageContainerName)"
  desc: "Set the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified."
  returns:
    description: "the ResourceFile object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.withBlobPrefix(java.lang.String)"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.withBlobPrefix(String blobPrefix)"
  name: "withBlobPrefix(String blobPrefix)"
  nameWithType: "ResourceFile.withBlobPrefix(String blobPrefix)"
  summary: "Set the property is valid only when auto<wbr>Storage<wbr>Container<wbr>Name or storage<wbr>Container<wbr>Url is used."
  parameters:
  - description: "the blobPrefix value to set"
    name: "blobPrefix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceFile withBlobPrefix(String blobPrefix)"
  desc: "Set the property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded."
  returns:
    description: "the ResourceFile object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.withFileMode(java.lang.String)"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.withFileMode(String fileMode)"
  name: "withFileMode(String fileMode)"
  nameWithType: "ResourceFile.withFileMode(String fileMode)"
  summary: "Set this property applies only to files being downloaded to Linux compute nodes."
  parameters:
  - description: "the fileMode value to set"
    name: "fileMode"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceFile withFileMode(String fileMode)"
  desc: "Set this property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file."
  returns:
    description: "the ResourceFile object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.withFilePath(java.lang.String)"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.withFilePath(String filePath)"
  name: "withFilePath(String filePath)"
  nameWithType: "ResourceFile.withFilePath(String filePath)"
  summary: "Set if the http<wbr>Url property is specified, the file<wbr>Path is required and describes the path which the file will be downloaded to, including the filename."
  parameters:
  - description: "the filePath value to set"
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceFile withFilePath(String filePath)"
  desc: "Set if the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..')."
  returns:
    description: "the ResourceFile object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.withHttpUrl(java.lang.String)"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.withHttpUrl(String httpUrl)"
  name: "withHttpUrl(String httpUrl)"
  nameWithType: "ResourceFile.withHttpUrl(String httpUrl)"
  summary: "Set the auto<wbr>Storage<wbr>Container<wbr>Name, storage<wbr>Container<wbr>Url and http<wbr>Url properties are mutually exclusive and one of them must be specified."
  parameters:
  - description: "the httpUrl value to set"
    name: "httpUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceFile withHttpUrl(String httpUrl)"
  desc: "Set the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL points to Azure Blob Storage, it must be readable from compute nodes. There are three ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, use a managed identity with read permission, or set the ACL for the blob or its container to allow public access."
  returns:
    description: "the ResourceFile object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.withIdentityReference(com.microsoft.azure.management.batch.ComputeNodeIdentityReference)"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.withIdentityReference(ComputeNodeIdentityReference identityReference)"
  name: "withIdentityReference(ComputeNodeIdentityReference identityReference)"
  nameWithType: "ResourceFile.withIdentityReference(ComputeNodeIdentityReference identityReference)"
  summary: "Set the identity<wbr>Reference value."
  parameters:
  - description: "the identityReference value to set"
    name: "identityReference"
    type: "<xref href=\"com.microsoft.azure.management.batch.ComputeNodeIdentityReference?alt=com.microsoft.azure.management.batch.ComputeNodeIdentityReference&text=ComputeNodeIdentityReference\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceFile withIdentityReference(ComputeNodeIdentityReference identityReference)"
  desc: "Set the identityReference value."
  returns:
    description: "the ResourceFile object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.batch.ResourceFile.withStorageContainerUrl(java.lang.String)"
  fullName: "com.microsoft.azure.management.batch.ResourceFile.withStorageContainerUrl(String storageContainerUrl)"
  name: "withStorageContainerUrl(String storageContainerUrl)"
  nameWithType: "ResourceFile.withStorageContainerUrl(String storageContainerUrl)"
  summary: "Set the auto<wbr>Storage<wbr>Container<wbr>Name, storage<wbr>Container<wbr>Url and http<wbr>Url properties are mutually exclusive and one of them must be specified."
  parameters:
  - description: "the storageContainerUrl value to set"
    name: "storageContainerUrl"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ResourceFile withStorageContainerUrl(String storageContainerUrl)"
  desc: "Set the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable from compute nodes. There are three ways to get such a URL for a container in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the container, use a managed identity with read and list permissions, or set the ACL for the container to allow public access."
  returns:
    description: "the ResourceFile object itself."
    type: "<xref href=\"com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A single file or multiple files to be downloaded to a compute node."
metadata: {}
package: "com.microsoft.azure.management.batch"
artifact: com.microsoft.azure:azure-mgmt-batch:1.41.4
