### YamlMime:JavaMember
nameWithType: ListShardMap<KeyT>.tryGetMappingForKey
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.map.ListShardMap<KeyT>.tryGetMappingForKey(KeyT key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> pointMapping)
  name: tryGetMappingForKey(KeyT key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> pointMapping)
  nameWithType: ListShardMap<KeyT>.tryGetMappingForKey(KeyT key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> pointMapping)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Whether to search in the cache and/or store. </p>
    name: lookupOptions
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.LookupOptions?alt=com.microsoft.azure.elasticdb.shard.base.LookupOptions&text=LookupOptions" data-throw-if-not-resolved="False"/>
  - description: <p>Mapping that contains the key value. </p>
    name: pointMapping
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: >-
      <p>

        <code>true</code> if mapping is found, <code>false</code> otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Tries to looks up the key value and place the corresponding mapping in <em>pointMapping</em> .</p>

    <p></p>
  syntax: public boolean tryGetMappingForKey(KeyT key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> pointMapping)
  uid: com.microsoft.azure.elasticdb.shard.map.ListShardMap.tryGetMappingForKey(KeyT,LookupOptions,ReferenceObjectHelper<PointMapping>)
- fullName: com.microsoft.azure.elasticdb.shard.map.ListShardMap<KeyT>.tryGetMappingForKey(KeyT key, ReferenceObjectHelper<PointMapping> pointMapping)
  name: tryGetMappingForKey(KeyT key, ReferenceObjectHelper<PointMapping> pointMapping)
  nameWithType: ListShardMap<KeyT>.tryGetMappingForKey(KeyT key, ReferenceObjectHelper<PointMapping> pointMapping)
  parameters:
  - description: <p>Input key value. </p>
    name: key
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>Mapping that contains the key value. </p>
    name: pointMapping
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.PointMapping?alt=com.microsoft.azure.elasticdb.shard.base.PointMapping&text=PointMapping" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: >-
      <p>

        <code>true</code> if mapping is found, <code>false</code> otherwise. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Tries to looks up the key value and place the corresponding mapping in <em>pointMapping</em> . Only the global shard map store is searched, not local cache. This is equivalent to .</p>

    <p></p>
  syntax: public boolean tryGetMappingForKey(KeyT key, ReferenceObjectHelper<PointMapping> pointMapping)
  uid: com.microsoft.azure.elasticdb.shard.map.ListShardMap.tryGetMappingForKey(KeyT,ReferenceObjectHelper<PointMapping>)
uid: com.microsoft.azure.elasticdb.shard.map.ListShardMap.tryGetMappingForKey*
fullName: com.microsoft.azure.elasticdb.shard.map.ListShardMap<KeyT>.tryGetMappingForKey(KeyT key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> pointMapping)
name: tryGetMappingForKey(KeyT key, LookupOptions lookupOptions, ReferenceObjectHelper<PointMapping> pointMapping)
package: com.microsoft.azure.elasticdb.shard.map
metadata: {}
