### YamlMime:JavaType
uid: "com.azure.storage.internal.avro.implementation.schema.complex.AvroRecordSchema"
fullName: "com.azure.storage.internal.avro.implementation.schema.complex.AvroRecordSchema"
name: "AvroRecordSchema"
nameWithType: "AvroRecordSchema"
summary: "A record is encoded by encoding the values of its fields in the order that they are declared. In other words, a record is encoded as just the concatenation of the encodings of its fields. Field values are encoded per their schema. The field value schemas will do most of the work, so we need to just keep track of which field we are working on and add them to the map as they come in. Field1 Field2 Field3 ...."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.storage.internal.avro.implementation.schema.AvroSchema\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.storage.internal.avro.implementation.schema.AvroCompositeSchema\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.checkType(java.lang.String,java.lang.Object,java.lang.Class<?>)"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.getBytes(java.util.List<?>)"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.getSchema(com.azure.storage.internal.avro.implementation.schema.AvroType,com.azure.storage.internal.avro.implementation.AvroParserState,java.util.function.Consumer<java.lang.Object>)"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.isDone()"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.publishResult()"
- "com.azure.storage.internal.avro.implementation.schema.AvroSchema.pushToStack()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class AvroRecordSchema extends AvroCompositeSchema"
constructors:
- "com.azure.storage.internal.avro.implementation.schema.complex.AvroRecordSchema.AvroRecordSchema(java.lang.String,java.util.List<com.azure.storage.internal.avro.implementation.schema.AvroRecordField>,com.azure.storage.internal.avro.implementation.AvroParserState,java.util.function.Consumer<java.lang.Object>)"
methods:
- "com.azure.storage.internal.avro.implementation.schema.complex.AvroRecordSchema.pushToStack()"
type: "class"
metadata: {}
package: "com.azure.storage.internal.avro.implementation.schema.complex"
artifact: com.azure:azure-storage-internal-avro:12.0.2
