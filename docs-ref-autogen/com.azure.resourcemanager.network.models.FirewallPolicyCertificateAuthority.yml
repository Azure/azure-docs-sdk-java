### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority"
fullName: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority"
name: "FirewallPolicyCertificateAuthority"
nameWithType: "FirewallPolicyCertificateAuthority"
summary: "Trusted Root certificates properties for tls."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class FirewallPolicyCertificateAuthority"
constructors:
- uid: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.FirewallPolicyCertificateAuthority()"
  fullName: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.FirewallPolicyCertificateAuthority()"
  name: "FirewallPolicyCertificateAuthority()"
  nameWithType: "FirewallPolicyCertificateAuthority.FirewallPolicyCertificateAuthority()"
  syntax: "public FirewallPolicyCertificateAuthority()"
methods:
- uid: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.keyVaultSecretId()"
  fullName: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.keyVaultSecretId()"
  name: "keyVaultSecretId()"
  nameWithType: "FirewallPolicyCertificateAuthority.keyVaultSecretId()"
  summary: "Get the key<wbr>Vault<wbr>Secret<wbr>Id property: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in Key<wbr>Vault."
  syntax: "public String keyVaultSecretId()"
  desc: "Get the keyVaultSecretId property: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
  returns:
    description: "the keyVaultSecretId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.name()"
  fullName: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.name()"
  name: "name()"
  nameWithType: "FirewallPolicyCertificateAuthority.name()"
  summary: "Get the name property: Name of the CA certificate."
  syntax: "public String name()"
  desc: "Get the name property: Name of the CA certificate."
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.validate()"
  fullName: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.validate()"
  name: "validate()"
  nameWithType: "FirewallPolicyCertificateAuthority.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.withKeyVaultSecretId(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.withKeyVaultSecretId(String keyVaultSecretId)"
  name: "withKeyVaultSecretId(String keyVaultSecretId)"
  nameWithType: "FirewallPolicyCertificateAuthority.withKeyVaultSecretId(String keyVaultSecretId)"
  summary: "Set the key<wbr>Vault<wbr>Secret<wbr>Id property: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in Key<wbr>Vault."
  parameters:
  - description: "the keyVaultSecretId value to set."
    name: "keyVaultSecretId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FirewallPolicyCertificateAuthority withKeyVaultSecretId(String keyVaultSecretId)"
  desc: "Set the keyVaultSecretId property: Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault."
  returns:
    description: "the FirewallPolicyCertificateAuthority object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority?alt=com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority&text=FirewallPolicyCertificateAuthority\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority.withName(String name)"
  name: "withName(String name)"
  nameWithType: "FirewallPolicyCertificateAuthority.withName(String name)"
  summary: "Set the name property: Name of the CA certificate."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public FirewallPolicyCertificateAuthority withName(String name)"
  desc: "Set the name property: Name of the CA certificate."
  returns:
    description: "the FirewallPolicyCertificateAuthority object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority?alt=com.azure.resourcemanager.network.models.FirewallPolicyCertificateAuthority&text=FirewallPolicyCertificateAuthority\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Trusted Root certificates properties for tls."
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.16.0
