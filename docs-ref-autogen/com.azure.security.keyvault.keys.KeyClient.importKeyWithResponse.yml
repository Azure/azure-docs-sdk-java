### YamlMime:JavaMember
uid: "com.azure.security.keyvault.keys.KeyClient.importKeyWithResponse*"
fullName: "com.azure.security.keyvault.keys.KeyClient.importKeyWithResponse"
name: "importKeyWithResponse"
nameWithType: "KeyClient.importKeyWithResponse"
members:
- uid: "com.azure.security.keyvault.keys.KeyClient.importKeyWithResponse(com.azure.security.keyvault.keys.models.ImportKeyOptions,com.azure.core.util.Context)"
  fullName: "com.azure.security.keyvault.keys.KeyClient.importKeyWithResponse(ImportKeyOptions importKeyOptions, Context context)"
  name: "importKeyWithResponse(ImportKeyOptions importKeyOptions, Context context)"
  nameWithType: "KeyClient.importKeyWithResponse(ImportKeyOptions importKeyOptions, Context context)"
  summary: "Imports an externally created <xref uid=\"com.azure.security.keyvault.keys.models.JsonWebKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> and stores it in the key vault. The import key operation may be used to import any <xref uid=\"com.azure.security.keyvault.keys.models.KeyType\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key type\"></xref> into Azure Key Vault. If a <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> with the provided name already exists, Azure Key Vault creates a new version of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref>. This operation requires the `keys/import` permission.\n\n<xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ImportKeyOptions\"></xref> is required and its fields <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getName*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"name\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getKey()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key material\"></xref> cannot be `null`. The <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getExpiresOn*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"expires\"></xref> and <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.getNotBefore*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"notBefore\"></xref> values in `keyImportOptions` are optional. If not specified, no values are set for the fields. The <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.isEnabled*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"enabled\"></xref> field is set to `true` and the <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions.isHardwareProtected()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"hsm\"></xref> field is set to `false` by Azure Key Vault, if they are not specified.\n\n**Code Samples**\n\nImports a new <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"key\"></xref> into the key vault. Prints out the details of the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"imported key\"></xref>.\n\n```java\nImportKeyOptions importKeyOptions = new ImportKeyOptions(\"keyName\", jsonWebKeyToImport)\n     .setHardwareProtected(false);\n Response<KeyVaultKey> response =\n     keyClient.importKeyWithResponse(importKeyOptions, new Context(\"key1\", \"value1\"));\n \n System.out.printf(\"Imported key with name: %s and id: %s%n\", response.getValue().getName(),\n     response.getValue().getId());\n```"
  parameters:
  - description: "The <xref uid=\"com.azure.security.keyvault.keys.models.ImportKeyOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options object\"></xref> containing information about the\n <xref uid=\"com.azure.security.keyvault.keys.models.JsonWebKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"JsonWebKey\"></xref> being imported."
    name: "importKeyOptions"
    type: "<xref href=\"com.azure.security.keyvault.keys.models.ImportKeyOptions?alt=com.azure.security.keyvault.keys.models.ImportKeyOptions&text=ImportKeyOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref> that is passed through the <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpPipeline\"></xref> during the service\n call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<KeyVaultKey> importKeyWithResponse(ImportKeyOptions importKeyOptions, Context context)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> whose <xref uid=\"com.azure.core.http.rest.Response.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"value\"></xref> contains the <xref uid=\"com.azure.security.keyvault.keys.models.KeyVaultKey\" data-throw-if-not-resolved=\"false\" data-raw-source=\"imported key\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.security.keyvault.keys.models.KeyVaultKey?alt=com.azure.security.keyvault.keys.models.KeyVaultKey&text=KeyVaultKey\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.security.keyvault.keys"
artifact: com.azure:azure-security-keyvault-keys:4.3.5
