### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.breakLease*"
fullName: "com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.breakLease"
name: "breakLease"
nameWithType: "DataLakeLeaseAsyncClient.breakLease"
members:
- uid: "com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.breakLease()"
  fullName: "com.azure.storage.file.datalake.specialized.DataLakeLeaseAsyncClient.breakLease()"
  name: "breakLease()"
  nameWithType: "DataLakeLeaseAsyncClient.breakLease()"
  summary: "Breaks the previously acquired lease, if it exists.\n\n**Code Samples**\n\n```java\nclient.breakLease().subscribe(response ->\n     System.out.printf(\"The broken lease has %d seconds remaining on the lease\", response));\n```"
  syntax: "public Mono<Integer> breakLease()"
  returns:
    description: "A reactive response containing the remaining time in the broken lease in seconds."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.specialized"
artifact: com.azure:azure-storage-file-datalake:12.4.0
