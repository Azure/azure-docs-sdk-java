### YamlMime:JavaType
uid: "com.azure.core.util.polling.SyncPoller"
fullName: "com.azure.core.util.polling.SyncPoller<T,U>"
name: "SyncPoller<T,U>"
nameWithType: "SyncPoller<T,U>"
summary: "A type that offers API that simplifies the task of executing long-running operations against an Azure service."
syntax: "public interface SyncPoller<T,U>"
methods:
- uid: "com.azure.core.util.polling.SyncPoller.<T,U>createPoller(java.time.Duration,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>>,java.util.function.BiFunction<com.azure.core.util.polling.PollingContext<T>,com.azure.core.util.polling.PollResponse<T>,T>,java.util.function.Function<com.azure.core.util.polling.PollingContext<T>,U>)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.<T,U>createPoller(Duration pollInterval, Function<PollingContext<T>,PollResponse<T>> syncActivationOperation, Function<PollingContext<T>,PollResponse<T>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,T> cancelOperation, Function<PollingContext<T>,U> fetchResultOperation)"
  name: "<T,U>createPoller(Duration pollInterval, Function<PollingContext<T>,PollResponse<T>> syncActivationOperation, Function<PollingContext<T>,PollResponse<T>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,T> cancelOperation, Function<PollingContext<T>,U> fetchResultOperation)"
  nameWithType: "SyncPoller<T,U>.<T,U>createPoller(Duration pollInterval, Function<PollingContext<T>,PollResponse<T>> syncActivationOperation, Function<PollingContext<T>,PollResponse<T>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,T> cancelOperation, Function<PollingContext<T>,U> fetchResultOperation)"
  summary: "Creates default Sync<wbr>Poller."
  modifiers:
  - "static"
  parameters:
  - description: "the polling interval."
    name: "pollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the operation to synchronously activate (start) the long running operation,\n     this operation will be called with a new <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>."
    name: "syncActivationOperation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\">Function</a>&lt;<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "the operation to poll the current state of long running operation, this parameter\n     is required and the operation will be called with current <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>."
    name: "pollOperation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\">Function</a>&lt;<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "a <xref uid=\"java.util.function.Function\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Function\"></xref> that represents the operation to cancel the long running operation\n     if service supports cancellation, this parameter is required and if service does not support cancellation\n     then the implementer should return Mono.error with an error message indicating absence of cancellation\n     support, the operation will be called with current <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>."
    name: "cancelOperation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/BiFunction.html\">BiFunction</a>&lt;<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "a <xref uid=\"java.util.function.Function\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Function\"></xref> that represents the  operation to retrieve final result of\n     the long running operation if service support it, this parameter is required and operation will be called\n     current <xref uid=\"com.azure.core.util.polling.PollingContext\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollingContext\"></xref>, if service does not have an api to fetch final result and if final result\n     is same as final poll response value then implementer can choose to simply return value from provided\n     final poll response."
    name: "fetchResultOperation"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\">Function</a>&lt;<xref href=\"com.azure.core.util.polling.PollingContext?alt=com.azure.core.util.polling.PollingContext&text=PollingContext\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static SyncPoller<T,U> <T,U>createPoller(Duration pollInterval, Function<PollingContext<T>,PollResponse<T>> syncActivationOperation, Function<PollingContext<T>,PollResponse<T>> pollOperation, BiFunction<PollingContext<T>,PollResponse<T>,T> cancelOperation, Function<PollingContext<T>,U> fetchResultOperation)"
  desc: "Creates default SyncPoller."
  returns:
    description: "new <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> instance."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.cancelOperation()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.cancelOperation()"
  name: "cancelOperation()"
  nameWithType: "SyncPoller<T,U>.cancelOperation()"
  summary: "cancels the remote long-running operation if cancellation is supported by the service."
  modifiers:
  - "abstract"
  syntax: "public abstract void cancelOperation()"
  desc: "cancels the remote long-running operation if cancellation is supported by the service."
- uid: "com.azure.core.util.polling.SyncPoller.getFinalResult()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.getFinalResult()"
  name: "getFinalResult()"
  nameWithType: "SyncPoller<T,U>.getFinalResult()"
  summary: "Retrieve the final result of the long running operation."
  modifiers:
  - "abstract"
  syntax: "public abstract U getFinalResult()"
  desc: "Retrieve the final result of the long running operation."
  returns:
    description: "the final result of the long-running operation if there is one."
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.polling.SyncPoller.poll()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.poll()"
  name: "poll()"
  nameWithType: "SyncPoller<T,U>.poll()"
  summary: "Poll once and return the poll response received."
  modifiers:
  - "abstract"
  syntax: "public abstract PollResponse<T> poll()"
  desc: "Poll once and return the poll response received."
  returns:
    description: "the poll response"
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.setPollInterval(java.time.Duration)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.setPollInterval(Duration pollInterval)"
  name: "setPollInterval(Duration pollInterval)"
  nameWithType: "SyncPoller<T,U>.setPollInterval(Duration pollInterval)"
  summary: "Sets the poll interval for this poller."
  modifiers:
  - "default"
  parameters:
  - description: "The new poll interval for this poller."
    name: "pollInterval"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public default SyncPoller<T,U> setPollInterval(Duration pollInterval)"
  desc: "Sets the poll interval for this poller. The new interval will be used for all subsequent polling operations including the polling operations that are already in progress."
  returns:
    description: "The updated instance of <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitForCompletion()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitForCompletion()"
  name: "waitForCompletion()"
  nameWithType: "SyncPoller<T,U>.waitForCompletion()"
  summary: "Wait for polling to complete."
  modifiers:
  - "abstract"
  syntax: "public abstract PollResponse<T> waitForCompletion()"
  desc: "Wait for polling to complete. The polling is considered complete based on status defined in <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  returns:
    description: "the final poll response"
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitForCompletion(java.time.Duration)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitForCompletion(Duration timeout)"
  name: "waitForCompletion(Duration timeout)"
  nameWithType: "SyncPoller<T,U>.waitForCompletion(Duration timeout)"
  summary: "Wait for polling to complete with a timeout."
  modifiers:
  - "abstract"
  parameters:
  - description: "the duration to waits for polling completion."
    name: "timeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public abstract PollResponse<T> waitForCompletion(Duration timeout)"
  desc: "Wait for polling to complete with a timeout. The polling is considered complete based on status defined in <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  returns:
    description: "the final poll response."
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitUntil(com.azure.core.util.polling.LongRunningOperationStatus)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitUntil(LongRunningOperationStatus statusToWaitFor)"
  name: "waitUntil(LongRunningOperationStatus statusToWaitFor)"
  nameWithType: "SyncPoller<T,U>.waitUntil(LongRunningOperationStatus statusToWaitFor)"
  summary: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to receive."
  modifiers:
  - "abstract"
  parameters:
  - description: "the desired <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to block for."
    name: "statusToWaitFor"
    type: "<xref href=\"com.azure.core.util.polling.LongRunningOperationStatus?alt=com.azure.core.util.polling.LongRunningOperationStatus&text=LongRunningOperationStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollResponse<T> waitUntil(LongRunningOperationStatus statusToWaitFor)"
  desc: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to receive."
  returns:
    description: "<xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse\"></xref> whose <xref uid=\"com.azure.core.util.polling.PollResponse.getStatus()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse#getStatus()\"></xref> matches <code>statusToWaitFor</code>."
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitUntil(java.time.Duration,com.azure.core.util.polling.LongRunningOperationStatus)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  name: "waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  nameWithType: "SyncPoller<T,U>.waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  summary: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  modifiers:
  - "abstract"
  parameters:
  - description: "the duration to waits for the polling."
    name: "timeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "the desired <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to block for."
    name: "statusToWaitFor"
    type: "<xref href=\"com.azure.core.util.polling.LongRunningOperationStatus?alt=com.azure.core.util.polling.LongRunningOperationStatus&text=LongRunningOperationStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollResponse<T> waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  desc: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse\"></xref> whose <xref uid=\"com.azure.core.util.polling.PollResponse.getStatus()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse#getStatus()\"></xref> matches <code>statusToWaitFor</code>."
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "The type of poll response value."
  name: "T"
- description: "The type of the final result of long-running operation."
  name: "U"
desc: "A type that offers API that simplifies the task of executing long-running operations against an Azure service.\n\nIt provides the following functionality:\n\n *  Querying the current state of the long-running operation.\n *  Requesting cancellation of long-running operation, if supported by the service.\n *  Fetching final result of long-running operation, if supported by the service.\n *  Wait for long-running operation to complete, with optional timeout.\n *  Wait for long-running operation to reach a specific state."
metadata: {}
package: "com.azure.core.util.polling"
artifact: com.azure:azure-core:1.33.0
