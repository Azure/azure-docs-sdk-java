### YamlMime:JavaType
uid: "com.azure.core.util.polling.SyncPoller"
fullName: "com.azure.core.util.polling.SyncPoller<T,U>"
name: "SyncPoller<T,U>"
nameWithType: "SyncPoller<T,U>"
summary: "A type that offers API that simplifies the task of executing long-running operations against an Azure service."
syntax: "public interface SyncPoller<T,U>"
methods:
- uid: "com.azure.core.util.polling.SyncPoller.cancelOperation()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.cancelOperation()"
  name: "cancelOperation()"
  nameWithType: "SyncPoller<T,U>.cancelOperation()"
  summary: "cancels the remote long-running operation if cancellation is supported by the service."
  modifiers:
  - "abstract"
  syntax: "public abstract void cancelOperation()"
  desc: "cancels the remote long-running operation if cancellation is supported by the service."
- uid: "com.azure.core.util.polling.SyncPoller.getFinalResult()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.getFinalResult()"
  name: "getFinalResult()"
  nameWithType: "SyncPoller<T,U>.getFinalResult()"
  summary: "Retrieve the final result of the long running operation."
  modifiers:
  - "abstract"
  syntax: "public abstract U getFinalResult()"
  desc: "Retrieve the final result of the long running operation."
  returns:
    description: "the final result of the long-running operation if there is one."
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.polling.SyncPoller.poll()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.poll()"
  name: "poll()"
  nameWithType: "SyncPoller<T,U>.poll()"
  summary: "Poll once and return the poll response received."
  modifiers:
  - "abstract"
  syntax: "public abstract PollResponse<T> poll()"
  desc: "Poll once and return the poll response received."
  returns:
    description: "the poll response"
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.setPollInterval(java.time.Duration)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.setPollInterval(Duration pollInterval)"
  name: "setPollInterval(Duration pollInterval)"
  nameWithType: "SyncPoller<T,U>.setPollInterval(Duration pollInterval)"
  summary: "Sets the poll interval for this poller."
  modifiers:
  - "default"
  parameters:
  - description: "The new poll interval for this poller."
    name: "pollInterval"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default SyncPoller<T,U> setPollInterval(Duration pollInterval)"
  desc: "Sets the poll interval for this poller. The new interval will be used for all subsequent polling operations including the polling operations that are already in progress."
  returns:
    description: "The updated instance of <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitForCompletion()"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitForCompletion()"
  name: "waitForCompletion()"
  nameWithType: "SyncPoller<T,U>.waitForCompletion()"
  summary: "Wait for polling to complete."
  modifiers:
  - "abstract"
  syntax: "public abstract PollResponse<T> waitForCompletion()"
  desc: "Wait for polling to complete. The polling is considered complete based on status defined in <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  returns:
    description: "the final poll response"
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitForCompletion(java.time.Duration)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitForCompletion(Duration timeout)"
  name: "waitForCompletion(Duration timeout)"
  nameWithType: "SyncPoller<T,U>.waitForCompletion(Duration timeout)"
  summary: "Wait for polling to complete with a timeout."
  modifiers:
  - "abstract"
  parameters:
  - description: "the duration to waits for polling completion."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollResponse<T> waitForCompletion(Duration timeout)"
  desc: "Wait for polling to complete with a timeout. The polling is considered complete based on status defined in <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  returns:
    description: "the final poll response."
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitUntil(com.azure.core.util.polling.LongRunningOperationStatus)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitUntil(LongRunningOperationStatus statusToWaitFor)"
  name: "waitUntil(LongRunningOperationStatus statusToWaitFor)"
  nameWithType: "SyncPoller<T,U>.waitUntil(LongRunningOperationStatus statusToWaitFor)"
  summary: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to receive."
  modifiers:
  - "abstract"
  parameters:
  - description: "the desired <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to block for."
    name: "statusToWaitFor"
    type: "<xref href=\"com.azure.core.util.polling.LongRunningOperationStatus?alt=com.azure.core.util.polling.LongRunningOperationStatus&text=LongRunningOperationStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollResponse<T> waitUntil(LongRunningOperationStatus statusToWaitFor)"
  desc: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to receive."
  returns:
    description: "<xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse\"></xref> whose <xref uid=\"com.azure.core.util.polling.PollResponse.getStatus()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse#getStatus()\"></xref> matches <code>statusToWaitFor</code>."
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.polling.SyncPoller.waitUntil(java.time.Duration,com.azure.core.util.polling.LongRunningOperationStatus)"
  fullName: "com.azure.core.util.polling.SyncPoller<T,U>.waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  name: "waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  nameWithType: "SyncPoller<T,U>.waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  summary: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  modifiers:
  - "abstract"
  parameters:
  - description: "the duration to waits for the polling."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "the desired <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref> to block for."
    name: "statusToWaitFor"
    type: "<xref href=\"com.azure.core.util.polling.LongRunningOperationStatus?alt=com.azure.core.util.polling.LongRunningOperationStatus&text=LongRunningOperationStatus\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PollResponse<T> waitUntil(Duration timeout, LongRunningOperationStatus statusToWaitFor)"
  desc: "Wait for the given <xref uid=\"com.azure.core.util.polling.LongRunningOperationStatus\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LongRunningOperationStatus\"></xref>."
  returns:
    description: "<xref uid=\"com.azure.core.util.polling.PollResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse\"></xref> whose <xref uid=\"com.azure.core.util.polling.PollResponse.getStatus()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollResponse#getStatus()\"></xref> matches <code>statusToWaitFor</code>."
    type: "<xref href=\"com.azure.core.util.polling.PollResponse?alt=com.azure.core.util.polling.PollResponse&text=PollResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "The type of poll response value."
  name: "T"
- description: "The type of the final result of long-running operation."
  name: "U"
desc: "A type that offers API that simplifies the task of executing long-running operations against an Azure service.\n\nIt provides the following functionality:\n\n *  Querying the current state of the long-running operation.\n *  Requesting cancellation of long-running operation, if supported by the service.\n *  Fetching final result of long-running operation, if supported by the service.\n *  Wait for long-running operation to complete, with optional timeout.\n *  Wait for long-running operation to reach a specific state."
metadata: {}
package: "com.azure.core.util.polling"
artifact: com.azure:azure-core:1.31.0
