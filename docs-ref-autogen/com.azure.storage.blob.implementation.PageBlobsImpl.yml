### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl"
  id: "PageBlobsImpl"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,long,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,long,java.lang.Integer,com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.String,long,java.lang.String,byte[],byte[],java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.String,long,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,byte[],byte[],java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "PageBlobsImpl"
  nameWithType: "PageBlobsImpl"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl"
  type: "Class"
  package: "com.azure.storage.blob.implementation"
  summary: "An instance of this class provides access to all the operations defined in PageBlobs."
  syntax:
    content: "public final class PageBlobsImpl"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  id: "PageBlobsImpl(com.azure.storage.blob.implementation.AzureBlobStorageImpl)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "PageBlobsImpl(AzureBlobStorageImpl client)"
  nameWithType: "PageBlobsImpl.PageBlobsImpl(AzureBlobStorageImpl client)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsImpl(AzureBlobStorageImpl client)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsImpl*"
  type: "Constructor"
  package: "com.azure.storage.blob.implementation"
  summary: "Initializes an instance of PageBlobsImpl."
  syntax:
    content: "public PageBlobsImpl(AzureBlobStorageImpl client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  id: "clearPagesWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
  nameWithType: "PageBlobsImpl.clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Clear Pages operation clears a set of pages from a page blob."
  syntax:
    content: "public Mono<PageBlobsClearPagesResponse> clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "clearPagesWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Clear Pages operation clears a set of pages from a page blob."
  syntax:
    content: "public Mono<PageBlobsClearPagesResponse> clearPagesWithRestResponseAsync(String containerName, String blob, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "range"
      type: "java.lang.String"
      description: "Return only the bytes of the blob in the specified range."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifSequenceNumberLessThanOrEqualTo"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified."
    - id: "ifSequenceNumberLessThan"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has a sequence number less than the specified."
    - id: "ifSequenceNumberEqualTo"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has the specified sequence number."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,com.azure.core.util.Context)"
  id: "copyIncrementalWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Context context)"
  nameWithType: "PageBlobsImpl.copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob. The snapshot is copied such that only the differential changes between the previously copied snapshot are transferred to the destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual. This API is supported since REST version 2016-05-31."
  syntax:
    content: "public Mono<PageBlobsCopyIncrementalResponse> copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "copySource"
      type: "java.net.URL"
      description: "Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "copyIncrementalWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.Integer,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  nameWithType: "PageBlobsImpl.copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Copy Incremental operation copies a snapshot of the source page blob to a destination page blob. The snapshot is copied such that only the differential changes between the previously copied snapshot are transferred to the destination. The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual. This API is supported since REST version 2016-05-31."
  syntax:
    content: "public Mono<PageBlobsCopyIncrementalResponse> copyIncrementalWithRestResponseAsync(String containerName, String blob, URL copySource, Integer timeout, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "copySource"
      type: "java.net.URL"
      description: "Specifies the name of the source page blob snapshot. This value is a URL of up to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it would appear in a request URI. The source blob must either be public or must be authenticated via a shared access signature."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,long,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.String,long,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Context context)"
  nameWithType: "PageBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Create operation creates a new page blob."
  syntax:
    content: "public Mono<PageBlobsCreateResponse> createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "blobContentLength"
      type: "long"
      description: "This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync(java.lang.String,java.lang.String,long,long,java.lang.Integer,com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "createWithRestResponseAsync(java.lang.String,java.lang.String,long,long,java.lang.Integer,com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.azure.storage.blob.models.BlobHttpHeaders,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Integer timeout, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Integer timeout, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Integer timeout, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Create operation creates a new page blob."
  syntax:
    content: "public Mono<PageBlobsCreateResponse> createWithRestResponseAsync(String containerName, String blob, long contentLength, long blobContentLength, Integer timeout, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, BlobHttpHeaders blobHttpHeaders, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "blobContentLength"
      type: "long"
      description: "This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "tier"
      type: "com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier"
      description: "Optional. Indicates the tier to be set on the page blob. Possible values include: 'P4', 'P6', 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80'."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional. Specifies a user-defined name-value pair associated with the blob. If no name-value pairs are specified, the operation will copy the metadata from the source blob or file to the destination blob. If one or more name-value pairs are specified, the destination blob is created with the specified metadata, and metadata is not copied from the source blob or file. Note that beginning with version 2009-09-19, metadata names must adhere to the naming rules for C# identifiers. See Naming and Referencing Containers, Blobs, and Metadata for more information."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "blobSequenceNumber"
      type: "java.lang.Long"
      description: "Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "blobHttpHeaders"
      type: "com.azure.storage.blob.models.BlobHttpHeaders"
      description: "Additional parameters for the operation."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCreateResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPageRangesDiffWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "getPageRangesDiffWithRestResponseAsync(String containerName, String blob, Context context)"
  nameWithType: "PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(String containerName, String blob, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(String containerName, String blob, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were changed between target blob and previous snapshot or version."
  syntax:
    content: "public Mono<PageBlobsGetPageRangesDiffResponse> getPageRangesDiffWithRestResponseAsync(String containerName, String blob, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPageRangesDiffWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "getPageRangesDiffWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  nameWithType: "PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "\\[Update\\] The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that were changed between target blob and previous snapshot or version."
  syntax:
    content: "public Mono<PageBlobsGetPageRangesDiffResponse> getPageRangesDiffWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "snapshot"
      type: "java.lang.String"
      description: "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "prevsnapshot"
      type: "java.lang.String"
      description: "Optional in version 2015-07-08 and newer. The prevsnapshot parameter is a DateTime value that specifies that the response will contain only pages that were changed between target blob and previous snapshot. Changed pages include both updated and cleared pages. The target blob may be a snapshot, as long as the snapshot specified by prevsnapshot is the older of the two. Note that incremental snapshots are currently supported only for blobs created on or after January 1, 2016."
    - id: "prevSnapshotUrl"
      type: "java.net.URL"
      description: "Optional. This header is only supported in service versions 2019-04-19 and after and specifies the URL of a previous snapshot of the target blob. The response will only contain pages that were changed between the target blob and its previous snapshot."
    - id: "range"
      type: "java.lang.String"
      description: "Return only the bytes of the blob in the specified range."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPageRangesWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "getPageRangesWithRestResponseAsync(String containerName, String blob, Context context)"
  nameWithType: "PageBlobsImpl.getPageRangesWithRestResponseAsync(String containerName, String blob, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync(String containerName, String blob, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Get Page Ranges operation returns the list of valid page ranges for a page blob, version or snapshot of a page blob."
  syntax:
    content: "public Mono<PageBlobsGetPageRangesResponse> getPageRangesWithRestResponseAsync(String containerName, String blob, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPageRangesWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "getPageRangesWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  nameWithType: "PageBlobsImpl.getPageRangesWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Get Page Ranges operation returns the list of valid page ranges for a page blob, version or snapshot of a page blob."
  syntax:
    content: "public Mono<PageBlobsGetPageRangesResponse> getPageRangesWithRestResponseAsync(String containerName, String blob, String snapshot, Integer timeout, String range, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "snapshot"
      type: "java.lang.String"
      description: "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot to retrieve. For more information on working with blob snapshots, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/creating-a-snapshot-of-a-blob\"&gt;Creating a Snapshot of a Blob.&lt;/a&gt;."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "range"
      type: "java.lang.String"
      description: "Return only the bytes of the blob in the specified range."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  id: "resizeWithRestResponseAsync(java.lang.String,java.lang.String,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Context context)"
  nameWithType: "PageBlobsImpl.resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "Resize the Blob."
  syntax:
    content: "public Mono<PageBlobsResizeResponse> resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "blobContentLength"
      type: "long"
      description: "This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsResizeResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "resizeWithRestResponseAsync(java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "Resize the Blob."
  syntax:
    content: "public Mono<PageBlobsResizeResponse> resizeWithRestResponseAsync(String containerName, String blob, long blobContentLength, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "blobContentLength"
      type: "long"
      description: "This header specifies the maximum size for the page blob, up to 1 TB. The page blob size must be aligned to a 512-byte boundary."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsResizeResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,com.azure.core.util.Context)"
  id: "updateSequenceNumberWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Context context)"
  nameWithType: "PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "Update the sequence number of the blob."
  syntax:
    content: "public Mono<PageBlobsUpdateSequenceNumberResponse> updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "sequenceNumberAction"
      type: "com.azure.storage.blob.models.SequenceNumberActionType"
      description: "Required if the x-ms-blob-sequence-number header is set for the request. This property applies to page blobs only. This property indicates how the service should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.azure.core.util.Context)"
  id: "updateSequenceNumberWithRestResponseAsync(java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Integer,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, Context context)"
  nameWithType: "PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "Update the sequence number of the blob."
  syntax:
    content: "public Mono<PageBlobsUpdateSequenceNumberResponse> updateSequenceNumberWithRestResponseAsync(String containerName, String blob, SequenceNumberActionType sequenceNumberAction, Integer timeout, String leaseId, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, Long blobSequenceNumber, String requestId, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "sequenceNumberAction"
      type: "com.azure.storage.blob.models.SequenceNumberActionType"
      description: "Required if the x-ms-blob-sequence-number header is set for the request. This property applies to page blobs only. This property indicates how the service should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "blobSequenceNumber"
      type: "java.lang.Long"
      description: "Set for page blobs only. The sequence number is a user-controlled value that you can use to track requests. The value of the sequence number must be between 0 and 2^63 - 1."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.String,long,java.lang.String,byte[],byte[],java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "uploadPagesFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.String,long,java.lang.String,byte[],byte[],java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Upload Pages operation writes a range of pages to a page blob where the contents are read from a URL."
  syntax:
    content: "public Mono<PageBlobsUploadPagesFromURLResponse> uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, byte[] sourceContentMD5, byte[] sourceContentcrc64, Integer timeout, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, OffsetDateTime sourceIfModifiedSince, OffsetDateTime sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "sourceUrl"
      type: "java.net.URL"
      description: "Specify a URL to the copy source."
    - id: "sourceRange"
      type: "java.lang.String"
      description: "Bytes of source data in the specified range. The length of this range should match the ContentLength header and x-ms-range/Range destination range header."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "range"
      type: "java.lang.String"
      description: "The range of bytes to which the source range would be written. The range should be 512 aligned and range-end is required."
    - id: "sourceContentMD5"
      type: "byte[]"
      description: "Specify the md5 calculated for the range of bytes that must be read from the copy source."
    - id: "sourceContentcrc64"
      type: "byte[]"
      description: "Specify the crc64 calculated for the range of bytes that must be read from the copy source."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifSequenceNumberLessThanOrEqualTo"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified."
    - id: "ifSequenceNumberLessThan"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has a sequence number less than the specified."
    - id: "ifSequenceNumberEqualTo"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has the specified sequence number."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "sourceIfModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "sourceIfUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "sourceIfMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.String,long,java.lang.String,com.azure.core.util.Context)"
  id: "uploadPagesFromURLWithRestResponseAsync(java.lang.String,java.lang.String,java.net.URL,java.lang.String,long,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, Context context)"
  nameWithType: "PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Upload Pages operation writes a range of pages to a page blob where the contents are read from a URL."
  syntax:
    content: "public Mono<PageBlobsUploadPagesFromURLResponse> uploadPagesFromURLWithRestResponseAsync(String containerName, String blob, URL sourceUrl, String sourceRange, long contentLength, String range, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "sourceUrl"
      type: "java.net.URL"
      description: "Specify a URL to the copy source."
    - id: "sourceRange"
      type: "java.lang.String"
      description: "Bytes of source data in the specified range. The length of this range should match the ContentLength header and x-ms-range/Range destination range header."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "range"
      type: "java.lang.String"
      description: "The range of bytes to which the source range would be written. The range should be 512 aligned and range-end is required."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,byte[],byte[],java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  id: "uploadPagesWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,byte[],byte[],java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.CpkInfo,com.azure.storage.blob.implementation.models.EncryptionScope,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Upload Pages operation writes a range of pages to a page blob."
  syntax:
    content: "public Mono<PageBlobsUploadPagesResponse> uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, byte[] transactionalContentMD5, byte[] transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, OffsetDateTime ifModifiedSince, OffsetDateTime ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String requestId, CpkInfo cpkInfo, EncryptionScope encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "Initial data."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "transactionalContentMD5"
      type: "byte[]"
      description: "Specify the transactional md5 for the body, to be validated by the service."
    - id: "transactionalContentCrc64"
      type: "byte[]"
      description: "Specify the transactional crc64 for the body, to be validated by the service."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "range"
      type: "java.lang.String"
      description: "Return only the bytes of the blob in the specified range."
    - id: "leaseId"
      type: "java.lang.String"
      description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    - id: "ifSequenceNumberLessThanOrEqualTo"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has a sequence number less than or equal to the specified."
    - id: "ifSequenceNumberLessThan"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has a sequence number less than the specified."
    - id: "ifSequenceNumberEqualTo"
      type: "java.lang.Long"
      description: "Specify this header value to operate only on a blob if it has the specified sequence number."
    - id: "ifModifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has been modified since the specified date/time."
    - id: "ifUnmodifiedSince"
      type: "java.time.OffsetDateTime"
      description: "Specify this header value to operate only on a blob if it has not been modified since the specified date/time."
    - id: "ifMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs with a matching value."
    - id: "ifNoneMatch"
      type: "java.lang.String"
      description: "Specify an ETag value to operate only on blobs without a matching value."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "cpkInfo"
      type: "com.azure.storage.blob.models.CpkInfo"
      description: "Additional parameters for the operation."
    - id: "encryptionScope"
      type: "com.azure.storage.blob.implementation.models.EncryptionScope"
      description: "Additional parameters for the operation."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  id: "uploadPagesWithRestResponseAsync(java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl"
  langs:
  - "java"
  name: "uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
  nameWithType: "PageBlobsImpl.uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  summary: "The Upload Pages operation writes a range of pages to a page blob."
  syntax:
    content: "public Mono<PageBlobsUploadPagesResponse> uploadPagesWithRestResponseAsync(String containerName, String blob, Flux<ByteBuffer> body, long contentLength, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
      description: "The container name."
    - id: "blob"
      type: "java.lang.String"
      description: "The blob name."
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
      description: "Initial data."
    - id: "contentLength"
      type: "long"
      description: "The length of the request."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse>"
      description: "a Mono which performs the network request upon subscription."
references:
- uid: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
  name: "AzureBlobStorageImpl"
  nameWithType: "AzureBlobStorageImpl"
  fullName: "com.azure.storage.blob.implementation.AzureBlobStorageImpl"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsImpl*"
  name: "PageBlobsImpl"
  nameWithType: "PageBlobsImpl.PageBlobsImpl"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsImpl"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
    name: "PageBlobsCreateResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync*"
  name: "createWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.createWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.createWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier"
  name: "PremiumPageBlobAccessTier"
  nameWithType: "PremiumPageBlobAccessTier"
  fullName: "com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.storage.blob.models.BlobHttpHeaders"
  name: "BlobHttpHeaders"
  nameWithType: "BlobHttpHeaders"
  fullName: "com.azure.storage.blob.models.BlobHttpHeaders"
- uid: "com.azure.storage.blob.models.CpkInfo"
  name: "CpkInfo"
  nameWithType: "CpkInfo"
  fullName: "com.azure.storage.blob.models.CpkInfo"
- uid: "com.azure.storage.blob.implementation.models.EncryptionScope"
  name: "EncryptionScope"
  nameWithType: "EncryptionScope"
  fullName: "com.azure.storage.blob.implementation.models.EncryptionScope"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
    name: "PageBlobsUploadPagesResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync*"
  name: "uploadPagesWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.uploadPagesWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
    name: "PageBlobsClearPagesResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync*"
  name: "clearPagesWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.clearPagesWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.clearPagesWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.net.URL"
  spec.java:
  - uid: "java.net.URL"
    name: "URL"
    fullName: "java.net.URL"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
    name: "PageBlobsUploadPagesFromURLResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync*"
  name: "uploadPagesFromURLWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.uploadPagesFromURLWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
    name: "PageBlobsGetPageRangesResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync*"
  name: "getPageRangesWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.getPageRangesWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
    name: "PageBlobsGetPageRangesDiffResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync*"
  name: "getPageRangesDiffWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.getPageRangesDiffWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.getPageRangesDiffWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsResizeResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
    name: "PageBlobsResizeResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync*"
  name: "resizeWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.resizeWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.resizeWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.SequenceNumberActionType"
  name: "SequenceNumberActionType"
  nameWithType: "SequenceNumberActionType"
  fullName: "com.azure.storage.blob.models.SequenceNumberActionType"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
    name: "PageBlobsUpdateSequenceNumberResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync*"
  name: "updateSequenceNumberWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.updateSequenceNumberWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.updateSequenceNumberWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
    name: "PageBlobsCopyIncrementalResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync*"
  name: "copyIncrementalWithRestResponseAsync"
  nameWithType: "PageBlobsImpl.copyIncrementalWithRestResponseAsync"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.copyIncrementalWithRestResponseAsync"
  package: "com.azure.storage.blob.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  name: "PageBlobsImpl.PageBlobsService"
  nameWithType: "PageBlobsImpl.PageBlobsService"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
  name: "PageBlobsCreateResponse"
  nameWithType: "PageBlobsCreateResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
  name: "PageBlobsUploadPagesResponse"
  nameWithType: "PageBlobsUploadPagesResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
  name: "PageBlobsClearPagesResponse"
  nameWithType: "PageBlobsClearPagesResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
  name: "PageBlobsUploadPagesFromURLResponse"
  nameWithType: "PageBlobsUploadPagesFromURLResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
  name: "PageBlobsGetPageRangesResponse"
  nameWithType: "PageBlobsGetPageRangesResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
  name: "PageBlobsGetPageRangesDiffResponse"
  nameWithType: "PageBlobsGetPageRangesDiffResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
  name: "PageBlobsResizeResponse"
  nameWithType: "PageBlobsResizeResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
  name: "PageBlobsUpdateSequenceNumberResponse"
  nameWithType: "PageBlobsUpdateSequenceNumberResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
  name: "PageBlobsCopyIncrementalResponse"
  nameWithType: "PageBlobsCopyIncrementalResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
