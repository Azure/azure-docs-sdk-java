### YamlMime:JavaMember
uid: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists*"
fullName: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists"
name: "createContainerIfNotExists"
nameWithType: "CosmosDatabase.createContainerIfNotExists"
members:
- uid: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(com.azure.cosmos.models.CosmosContainerProperties)"
  fullName: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(CosmosContainerProperties containerProperties)"
  name: "createContainerIfNotExists(CosmosContainerProperties containerProperties)"
  nameWithType: "CosmosDatabase.createContainerIfNotExists(CosmosContainerProperties containerProperties)"
  summary: "Create container if one matching the id in the properties object does not exist."
  parameters:
  - description: "the container properties."
    name: "containerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosContainerResponse createContainerIfNotExists(CosmosContainerProperties containerProperties)"
  returns:
    description: "the cosmos container response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(com.azure.cosmos.models.CosmosContainerProperties,com.azure.cosmos.models.ThroughputProperties)"
  fullName: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  name: "createContainerIfNotExists(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  nameWithType: "CosmosDatabase.createContainerIfNotExists(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  summary: "Creates a Cosmos container if one matching the id in the properties object does not exist.\n\nThe throughput properties will only be used if the specified container does not exist and therefor a new container will be created."
  parameters:
  - description: "the container properties."
    name: "containerProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the throughput properties for the container."
    name: "throughputProperties"
    type: "<xref href=\"com.azure.cosmos.models.ThroughputProperties?alt=com.azure.cosmos.models.ThroughputProperties&text=ThroughputProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosContainerResponse createContainerIfNotExists(CosmosContainerProperties containerProperties, ThroughputProperties throughputProperties)"
  returns:
    description: "the cosmos container response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(java.lang.String,java.lang.String)"
  fullName: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(String id, String partitionKeyPath)"
  name: "createContainerIfNotExists(String id, String partitionKeyPath)"
  nameWithType: "CosmosDatabase.createContainerIfNotExists(String id, String partitionKeyPath)"
  summary: "Creates a Cosmos container if one matching the id does not exist."
  parameters:
  - description: "the id."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key path."
    name: "partitionKeyPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosContainerResponse createContainerIfNotExists(String id, String partitionKeyPath)"
  returns:
    description: "the cosmos container response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(java.lang.String,java.lang.String,com.azure.cosmos.models.ThroughputProperties)"
  fullName: "com.azure.cosmos.CosmosDatabase.createContainerIfNotExists(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  name: "createContainerIfNotExists(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  nameWithType: "CosmosDatabase.createContainerIfNotExists(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  summary: "Creates a Cosmos container if one matching the id does not exist.\n\nThe throughput properties will only be used if the specified container does not exist and therefor a new container will be created."
  parameters:
  - description: "the id."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key path."
    name: "partitionKeyPath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the throughput properties for the container."
    name: "throughputProperties"
    type: "<xref href=\"com.azure.cosmos.models.ThroughputProperties?alt=com.azure.cosmos.models.ThroughputProperties&text=ThroughputProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosContainerResponse createContainerIfNotExists(String id, String partitionKeyPath, ThroughputProperties throughputProperties)"
  returns:
    description: "the cosmos container response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerResponse?alt=com.azure.cosmos.models.CosmosContainerResponse&text=CosmosContainerResponse\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.11.0
