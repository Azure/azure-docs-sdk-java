### YamlMime:JavaMember
nameWithType: SqlDatabase.importBacpac
type: method
members:
- fullName: com.microsoft.azure.management.sql.SqlDatabase.importBacpac(StorageAccount storageAccount, String containerName, String fileName)
  name: importBacpac(StorageAccount storageAccount, String containerName, String fileName)
  nameWithType: SqlDatabase.importBacpac(StorageAccount storageAccount, String containerName, String fileName)
  parameters:
  - description: <p>an existing storage account to be used </p>
    name: storageAccount
    type: <xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>
  - description: <p>the container name within the storage account to use </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the exported database file name </p>
    name: fileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>response object </p>
    type: <xref href="SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword?alt=SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword&text=SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Imports into the current database from an existing storage account and relative path; the current database must be empty.</p>

    <p></p>
  syntax: public SqlDatabaseImportRequest.DefinitionStages.WithAuthenticationTypeAndLoginPassword importBacpac(StorageAccount storageAccount, String containerName, String fileName)
  uid: com.microsoft.azure.management.sql.SqlDatabase.importBacpac(StorageAccount,String,String)
- fullName: com.microsoft.azure.management.sql.SqlDatabase.importBacpac(String storageUri)
  name: importBacpac(String storageUri)
  nameWithType: SqlDatabase.importBacpac(String storageUri)
  parameters:
  - description: <p>the storage URI to use </p>
    name: storageUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>response object </p>
    type: <xref href="SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey?alt=SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey&text=SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Imports into the current database from a specified URI path; the current database must be empty.</p>

    <p></p>
  syntax: public SqlDatabaseImportRequest.DefinitionStages.WithStorageTypeAndKey importBacpac(String storageUri)
  uid: com.microsoft.azure.management.sql.SqlDatabase.importBacpac(String)
uid: com.microsoft.azure.management.sql.SqlDatabase.importBacpac*
fullName: com.microsoft.azure.management.sql.SqlDatabase.importBacpac(StorageAccount storageAccount, String containerName, String fileName)
name: importBacpac(StorageAccount storageAccount, String containerName, String fileName)
package: com.microsoft.azure.management.sql
metadata: {}
