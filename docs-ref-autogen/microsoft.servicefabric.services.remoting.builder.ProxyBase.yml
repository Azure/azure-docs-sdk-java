### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase()
  name: ProxyBase()
  nameWithType: ProxyBase.ProxyBase()
  summary: <p>Initializes a new instance of the ProxyBase class. </p>
  syntax: protected ProxyBase()
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith(CompletableFuture<Object> future)
  name: continueWith(CompletableFuture<Object> future)
  nameWithType: ProxyBase.continueWith(CompletableFuture<Object> future)
  parameters:
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents the asynchronous operation for remote method call. </p>
    name: future
    type: <xref href="CompletableFuture%3CObject%3E?alt=CompletableFuture%3CObject%3E&text=CompletableFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents the asynchronous operation for remote method call. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture%3C%3F%3E&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to continue after getting the response body that does not have value. </p>
  syntax: protected CompletableFuture<?> continueWith(CompletableFuture<Object> future)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith(CompletableFuture<Object>)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
  name: continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
  nameWithType: ProxyBase.continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
  parameters:
  - description: <p>Interface Id for the remoted interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Method Id for the remote method. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents the asynchronous operation for remote method call. </p>
    name: future
    type: <xref href="CompletableFuture%3CObject%3E?alt=CompletableFuture%3CObject%3E&text=CompletableFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents the asynchronous operation for remote method call. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=%3CT%3E+CompletableFuture%3CT%3E&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to get the result from the response body. </p>
  syntax: protected <T> CompletableFuture<T> continueWithResult(int interfaceId, int methodId, CompletableFuture<Object> future)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWithResult(int,int,CompletableFuture<Object>)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
  name: createRequestMessageBody(Object requestMessageBodyValue)
  nameWithType: ProxyBase.createRequestMessageBody(Object requestMessageBodyValue)
  parameters:
  - description: <p>request message body. </p>
    name: requestMessageBodyValue
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an Object with request message body. </p>
    type: <xref href="abstract+Object?alt=abstract+Object&text=abstract+Object" data-throw-if-not-resolved="False"/>
  summary: <p>Create the remoting request message body. </p>
  syntax: protected abstract Object createRequestMessageBody(Object requestMessageBodyValue)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.createRequestMessageBody(Object)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.deserializeMessage(byte[] msgBodyValue)
  name: deserializeMessage(byte[] msgBodyValue)
  nameWithType: ProxyBase.deserializeMessage(byte[] msgBodyValue)
  parameters:
  - description: <p>byte array having serialized object value. </p>
    name: msgBodyValue
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Original object before serialization. </p>
    type: <xref href="abstract+Object?alt=abstract+Object&text=abstract+Object" data-throw-if-not-resolved="False"/>
  summary: <p>Deserialize method. </p>
  syntax: protected abstract Object deserializeMessage(byte[] msgBodyValue)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.deserializeMessage(byte [])
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
  name: getResponseMessageBodyValue(Object responseMessageBody)
  nameWithType: ProxyBase.getResponseMessageBodyValue(Object responseMessageBody)
  parameters:
  - description: <p>Response body. </p>
    name: responseMessageBody
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Get the value of the response. </p>
    type: <xref href="abstract+Object?alt=abstract+Object&text=abstract+Object" data-throw-if-not-resolved="False"/>
  summary: <p>Get the response of the request to remote object. </p>
  syntax: protected abstract Object getResponseMessageBodyValue(Object responseMessageBody)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.getResponseMessageBodyValue(Object)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)
  name: getReturnValue(int interfaceId, int methodId, Object responseBody)
  nameWithType: ProxyBase.getReturnValue(int interfaceId, int methodId, Object responseBody)
  parameters:
  - description: <p>Interface Id for the actor interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Method Id for the actor method. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Response body. </p>
    name: responseBody
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Return value of method call as <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Object"></xref>. </p>
    type: <xref href="abstract+Object?alt=abstract+Object&text=abstract+Object" data-throw-if-not-resolved="False"/>
  summary: <p>Implemented by the derived class to type cast the response body and extract the value from it. </p>
  syntax: protected abstract Object getReturnValue(int interfaceId, int methodId, Object responseBody)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue(int,int,Object)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  name: invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  nameWithType: ProxyBase.invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invokved. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Message body to be sent to remote object. </p>
    name: requestMsgBodyBytes
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="abstract+void?alt=abstract+void&text=abstract+void" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the message to the remote object. </p>
  syntax: protected abstract void invoke(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int,int,byte [])
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  name: invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  nameWithType: ProxyBase.invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invokved. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Message body to be sent to remote object. </p>
    name: requestMsgBodyValue
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the message to the remote object. </p>
  syntax: protected void invoke(int interfaceId, int methodId, Object requestMsgBodyValue)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int,int,Object)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  name: invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  nameWithType: ProxyBase.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invokved. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Request body. </p>
    name: requestMsgBodyBytes
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Cancellation token </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous operation async call to remote object. </p>
    type: <xref href="abstract+CompletableFuture%3Cbyte%5B%5D%3E?alt=abstract+CompletableFuture%3Cbyte%5B%5D%3E&text=abstract+CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the request to the remote object and get the response back. </p>
  syntax: protected abstract CompletableFuture<byte[]> invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int,int,byte [],CancellationToken)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  name: invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  nameWithType: ProxyBase.invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  parameters:
  - description: <p>Id of the remote interface. </p>
    name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the remote method to be invoked. </p>
    name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Request body. </p>
    name: requestMsgBodyValue
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents the asynchronous operation async call to remote object. </p>
    type: <xref href="CompletableFuture%3CObject%3E?alt=CompletableFuture%3CObject%3E&text=CompletableFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Called by the generated proxy class to send the request to the remote object and get the response back. </p>
  syntax: protected CompletableFuture<Object> invokeAsync(int interfaceId, int methodId, Object requestMsgBodyValue, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int,int,Object,CancellationToken)
- fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase.serializeMessage(Object msgBodyValue)
  name: serializeMessage(Object msgBodyValue)
  nameWithType: ProxyBase.serializeMessage(Object msgBodyValue)
  parameters:
  - description: <p>Any object which needs to be serialized. </p>
    name: msgBodyValue
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>byte array containing serialized object. </p>
    type: <xref href="abstract+byte+%5B%5D?alt=abstract+byte+%5B%5D&text=abstract+byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Serializes the given Object </p>
  syntax: protected abstract byte [] serializeMessage(Object msgBodyValue)
  uid: microsoft.servicefabric.services.remoting.builder.ProxyBase.serializeMessage(Object)
nameWithType: ProxyBase
syntax: public class ProxyBase
type: class
uid: microsoft.servicefabric.services.remoting.builder.ProxyBase
fullName: microsoft.servicefabric.services.remoting.builder.ProxyBase
name: ProxyBase
package: microsoft.servicefabric.services.remoting.builder
summary: <p>The base class used by remoting code generator to generate the proxy for the remoted interfaces. </p>
metadata: {}
