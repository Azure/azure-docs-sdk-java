### YamlMime:JavaType
uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory"
fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory"
name: "ReactiveCosmosRepositoryFactory"
nameWithType: "ReactiveCosmosRepositoryFactory"
summary: "Factory class for reactive cosmos repository contains application context and operations information"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport?alt=org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport&text=ReactiveRepositoryFactorySupport\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport.setEvaluationContextProvider(org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)?alt=org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport.setEvaluationContextProvider&text=setEvaluationContextProvider\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport.validate(org.springframework.data.repository.core.RepositoryMetadata)?alt=org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport&text=RepositoryFactorySupport\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>getTargetRepositoryViaReflection(java.lang.Class<?>,java.lang.Object...)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>getTargetRepositoryViaReflection&text=<R>getTargetRepositoryViaReflection\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>getTargetRepositoryViaReflection(org.springframework.data.repository.core.RepositoryInformation,java.lang.Object...)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>getTargetRepositoryViaReflection&text=<R>getTargetRepositoryViaReflection\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>instantiateClass(java.lang.Class<?>,java.lang.Object...)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.<R>instantiateClass&text=<R>instantiateClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.<T,ID>getEntityInformation(java.lang.Class<T>)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.<T,ID>getEntityInformation&text=<T,ID>getEntityInformation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository(java.lang.Class<T>)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository&text=<T>getRepository\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository(java.lang.Class<T>,java.lang.Object)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository&text=<T>getRepository\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository(java.lang.Class<T>,org.springframework.data.repository.core.support.RepositoryComposition.RepositoryFragments)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.<T>getRepository&text=<T>getRepository\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.addInvocationListener(org.springframework.data.repository.core.support.RepositoryMethodInvocationListener)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.addInvocationListener&text=addInvocationListener\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.addQueryCreationListener(org.springframework.data.repository.core.support.QueryCreationListener<?>)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.addQueryCreationListener&text=addQueryCreationListener\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.addRepositoryProxyPostProcessor(org.springframework.data.repository.core.support.RepositoryProxyPostProcessor)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.addRepositoryProxyPostProcessor&text=addRepositoryProxyPostProcessor\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getProjectionFactory()?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getProjectionFactory&text=getProjectionFactory\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getProjectionFactory(java.lang.ClassLoader,org.springframework.beans.factory.BeanFactory)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getProjectionFactory&text=getProjectionFactory\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getQueryLookupStrategy(org.springframework.data.repository.query.QueryLookupStrategy.Key,org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getQueryLookupStrategy&text=getQueryLookupStrategy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getQueryMethods()?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getQueryMethods&text=getQueryMethods\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryBaseClass(org.springframework.data.repository.core.RepositoryMetadata)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryBaseClass&text=getRepositoryBaseClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryFragments(org.springframework.data.repository.core.RepositoryMetadata)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryFragments&text=getRepositoryFragments\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryInformation(org.springframework.data.repository.core.RepositoryMetadata,org.springframework.data.repository.core.support.RepositoryComposition.RepositoryFragments)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryInformation&text=getRepositoryInformation\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryMetadata(java.lang.Class<?>)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryMetadata&text=getRepositoryMetadata\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepository(org.springframework.data.repository.core.RepositoryInformation)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepository&text=getTargetRepository\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.setBeanClassLoader(java.lang.ClassLoader)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.setBeanClassLoader&text=setBeanClassLoader\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.setBeanFactory(org.springframework.beans.factory.BeanFactory)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.setBeanFactory&text=setBeanFactory\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.setNamedQueries(org.springframework.data.repository.core.NamedQueries)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.setNamedQueries&text=setNamedQueries\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.setQueryLookupStrategyKey(org.springframework.data.repository.query.QueryLookupStrategy.Key)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.setQueryLookupStrategyKey&text=setQueryLookupStrategyKey\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.springframework.data.repository.core.support.RepositoryFactorySupport.setRepositoryBaseClass(java.lang.Class<?>)?alt=org.springframework.data.repository.core.support.RepositoryFactorySupport.setRepositoryBaseClass&text=setRepositoryBaseClass\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ReactiveCosmosRepositoryFactory**</br> extends <xref href=\"org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport?alt=org.springframework.data.repository.core.support.ReactiveRepositoryFactorySupport&text=ReactiveRepositoryFactorySupport\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.ReactiveCosmosRepositoryFactory(com.azure.spring.data.cosmos.core.ReactiveCosmosOperations)"
  fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.ReactiveCosmosRepositoryFactory(ReactiveCosmosOperations cosmosOperations)"
  name: "ReactiveCosmosRepositoryFactory(ReactiveCosmosOperations cosmosOperations)"
  nameWithType: "ReactiveCosmosRepositoryFactory.ReactiveCosmosRepositoryFactory(ReactiveCosmosOperations cosmosOperations)"
  summary: "Initialization"
  parameters:
  - description: "for cosmosDB operations"
    name: "cosmosOperations"
    type: "<xref href=\"com.azure.spring.data.cosmos.core.ReactiveCosmosOperations?alt=com.azure.spring.data.cosmos.core.ReactiveCosmosOperations&text=ReactiveCosmosOperations\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ReactiveCosmosRepositoryFactory(ReactiveCosmosOperations cosmosOperations)"
  desc: "Initialization"
methods:
- uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation(java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation(Class<T> domainType)"
  name: "<T,ID>getEntityInformation(Class<T> domainType)"
  nameWithType: "ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation(Class<T> domainType)"
  overridden: "org.springframework.data.repository.core.support.RepositoryFactorySupport.<T,ID>getEntityInformation(java.lang.Class<T>)"
  parameters:
  - name: "domainType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EntityInformation<T,ID> <T,ID>getEntityInformation(Class<T> domainType)"
  returns:
    type: "<xref href=\"org.springframework.data.repository.core.EntityInformation?alt=org.springframework.data.repository.core.EntityInformation&text=EntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.getQueryLookupStrategy(org.springframework.data.repository.query.QueryLookupStrategy.Key,org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)"
  fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.getQueryLookupStrategy(QueryLookupStrategy.Key key, QueryMethodEvaluationContextProvider evaluationContextProvider)"
  name: "getQueryLookupStrategy(QueryLookupStrategy.Key key, QueryMethodEvaluationContextProvider evaluationContextProvider)"
  nameWithType: "ReactiveCosmosRepositoryFactory.getQueryLookupStrategy(QueryLookupStrategy.Key key, QueryMethodEvaluationContextProvider evaluationContextProvider)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.core.support.RepositoryFactorySupport.getQueryLookupStrategy(org.springframework.data.repository.query.QueryLookupStrategy.Key,org.springframework.data.repository.query.QueryMethodEvaluationContextProvider)"
  parameters:
  - name: "key"
    type: "<xref href=\"org.springframework.data.repository.query.QueryLookupStrategy.Key?alt=org.springframework.data.repository.query.QueryLookupStrategy.Key&text=Key\" data-throw-if-not-resolved=\"False\" />"
  - name: "evaluationContextProvider"
    type: "<xref href=\"org.springframework.data.repository.query.QueryMethodEvaluationContextProvider?alt=org.springframework.data.repository.query.QueryMethodEvaluationContextProvider&text=QueryMethodEvaluationContextProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Optional<QueryLookupStrategy> getQueryLookupStrategy(QueryLookupStrategy.Key key, QueryMethodEvaluationContextProvider evaluationContextProvider)"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\">Optional</a>&lt;<xref href=\"org.springframework.data.repository.query.QueryLookupStrategy?alt=org.springframework.data.repository.query.QueryLookupStrategy&text=QueryLookupStrategy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.getRepositoryBaseClass(org.springframework.data.repository.core.RepositoryMetadata)"
  fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.getRepositoryBaseClass(RepositoryMetadata metadata)"
  name: "getRepositoryBaseClass(RepositoryMetadata metadata)"
  nameWithType: "ReactiveCosmosRepositoryFactory.getRepositoryBaseClass(RepositoryMetadata metadata)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepositoryBaseClass(org.springframework.data.repository.core.RepositoryMetadata)"
  parameters:
  - name: "metadata"
    type: "<xref href=\"org.springframework.data.repository.core.RepositoryMetadata?alt=org.springframework.data.repository.core.RepositoryMetadata&text=RepositoryMetadata\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Class<?> getRepositoryBaseClass(RepositoryMetadata metadata)"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;?&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.getTargetRepository(org.springframework.data.repository.core.RepositoryInformation)"
  fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.getTargetRepository(RepositoryInformation information)"
  name: "getTargetRepository(RepositoryInformation information)"
  nameWithType: "ReactiveCosmosRepositoryFactory.getTargetRepository(RepositoryInformation information)"
  modifiers:
  - "protected"
  overridden: "org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepository(org.springframework.data.repository.core.RepositoryInformation)"
  parameters:
  - name: "information"
    type: "<xref href=\"org.springframework.data.repository.core.RepositoryInformation?alt=org.springframework.data.repository.core.RepositoryInformation&text=RepositoryInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Object getTargetRepository(RepositoryInformation information)"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
type: "class"
desc: "Factory class for reactive cosmos repository contains application context and operations information"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.44.0
