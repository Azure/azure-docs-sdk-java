### YamlMime:JavaMember
uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withEnableCrossZoneUpgrade*"
fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withEnableCrossZoneUpgrade"
name: "withEnableCrossZoneUpgrade"
nameWithType: "RollingUpgradePolicy.withEnableCrossZoneUpgrade"
members:
- uid: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withEnableCrossZoneUpgrade(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.compute.models.RollingUpgradePolicy.withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  name: "withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  nameWithType: "RollingUpgradePolicy.withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  summary: "Set the enableCrossZoneUpgrade property: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration the Update Domain and maxBatchInstancePercent to determine the batch size."
  parameters:
  - description: "the enableCrossZoneUpgrade value to set."
    name: "enableCrossZoneUpgrade"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RollingUpgradePolicy withEnableCrossZoneUpgrade(Boolean enableCrossZoneUpgrade)"
  returns:
    description: "the RollingUpgradePolicy object itself."
    type: "<xref href=\"com.azure.resourcemanager.compute.models.RollingUpgradePolicy?alt=com.azure.resourcemanager.compute.models.RollingUpgradePolicy&text=RollingUpgradePolicy\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.compute.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-compute:2.4.0
