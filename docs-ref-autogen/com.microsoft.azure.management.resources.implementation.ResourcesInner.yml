### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  id: "ResourcesInner"
  parent: "com.microsoft.azure.management.resources.implementation"
  children:
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesService"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteById(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistence(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceById(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteById(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.getById(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.list()"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.list(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync()"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNext(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextSinglePageAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextWithServiceResponseAsync(java.lang.String)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync()"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync()"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  langs:
  - "java"
  name: "ResourcesInner"
  nameWithType: "ResourcesInner"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  type: "Class"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "An instance of this class provides access to all the operations defined in Resources."
  syntax:
    content: "public class ResourcesInner implements InnerSupportsListing<GenericResourceInner>"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  id: "ResourcesInner(retrofit2.Retrofit,com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "ResourcesInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  nameWithType: "ResourcesInner.ResourcesInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesInner(Retrofit retrofit, ResourceManagementClientImpl client)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Initializes an instance of ResourcesInner."
  syntax:
    content: "public ResourcesInner(Retrofit retrofit, ResourceManagementClientImpl client)"
    parameters:
    - id: "retrofit"
      type: "retrofit2.Retrofit"
      description: "the Retrofit instance built from a Retrofit Builder."
    - id: "client"
      type: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginCreateOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public GenericResourceInner beginCreateOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public Observable<GenericResourceInner> beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "beginCreateOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> beginCreateOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginCreateOrUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public GenericResourceInner beginCreateOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public Observable<GenericResourceInner> beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "beginCreateOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> beginCreateOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginCreateOrUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> beginCreateOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginCreateOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> beginCreateOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "beginDelete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDelete*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public void beginDelete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public Observable<Void> beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteById(java.lang.String,java.lang.String)"
  id: "beginDeleteById(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDeleteById(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.beginDeleteById(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteById(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public void beginDeleteById(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteByIdAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDeleteByIdAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.beginDeleteByIdAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public Observable<Void> beginDeleteByIdAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginDeleteByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDeleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.beginDeleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public ServiceFuture<Void> beginDeleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "beginDeleteByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDeleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.beginDeleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "beginDeleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginDeleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "beginMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResources*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public void beginMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "beginMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public Observable<Void> beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public ServiceFuture<Void> beginMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "beginMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.beginMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public GenericResourceInner beginUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public Observable<GenericResourceInner> beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "beginUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> beginUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public GenericResourceInner beginUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public Observable<GenericResourceInner> beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "beginUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> beginUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> beginUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "beginUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> beginUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "beginValidateMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResources*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public void beginValidateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "beginValidateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public Observable<Void> beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "beginValidateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public ServiceFuture<Void> beginValidateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "beginValidateMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "beginValidateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public Observable<ServiceResponse<Void>> beginValidateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistence(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "checkExistence(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistence*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether a resource exists."
  syntax:
    content: "public boolean checkExistence(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to check. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The resource provider of the resource to check."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to check whether it exists."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "boolean"
      description: "the boolean object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether a resource exists."
  syntax:
    content: "public Observable<Boolean> checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to check. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The resource provider of the resource to check."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to check whether it exists."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<java.lang.Boolean>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  id: "checkExistenceAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "ResourcesInner.checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether a resource exists."
  syntax:
    content: "public ServiceFuture<Boolean> checkExistenceAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to check. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The resource provider of the resource to check."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to check whether it exists."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceById(java.lang.String,java.lang.String)"
  id: "checkExistenceById(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistenceById(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.checkExistenceById(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceById(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks by ID whether a resource exists."
  syntax:
    content: "public boolean checkExistenceById(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "boolean"
      description: "the boolean object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceByIdAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistenceByIdAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.checkExistenceByIdAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks by ID whether a resource exists."
  syntax:
    content: "public Observable<Boolean> checkExistenceByIdAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<java.lang.Boolean>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  id: "checkExistenceByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Boolean>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistenceByIdAsync(String resourceId, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
  nameWithType: "ResourcesInner.checkExistenceByIdAsync(String resourceId, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync(String resourceId, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks by ID whether a resource exists."
  syntax:
    content: "public ServiceFuture<Boolean> checkExistenceByIdAsync(String resourceId, String apiVersion, ServiceCallback<Boolean> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "checkExistenceByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistenceByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.checkExistenceByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks by ID whether a resource exists."
  syntax:
    content: "public Observable<ServiceResponse<Boolean>> checkExistenceByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "checkExistenceWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "checkExistenceWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.checkExistenceWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Checks whether a resource exists."
  syntax:
    content: "public Observable<ServiceResponse<Boolean>> checkExistenceWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to check. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The resource provider of the resource to check."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to check whether it exists."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
      description: "the observable to the Boolean object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "createOrUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdate*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public GenericResourceInner createOrUpdate(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public Observable<GenericResourceInner> createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "createOrUpdateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> createOrUpdateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "createOrUpdateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public GenericResourceInner createOrUpdateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public Observable<GenericResourceInner> createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "createOrUpdateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> createOrUpdateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "createOrUpdateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.createOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Create a resource by ID."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> createOrUpdateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Create or update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "createOrUpdateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Creates a resource."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to create."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to create."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for creating or updating the resource."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.delete*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public void delete(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public Observable<Void> deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public ServiceFuture<Void> deleteAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteById(java.lang.String,java.lang.String)"
  id: "deleteById(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "deleteById(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.deleteById(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteById(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public void deleteById(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync(java.lang.String,java.lang.String)"
  id: "deleteByIdAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "deleteByIdAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.deleteByIdAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public Observable<Void> deleteByIdAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "deleteByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "deleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.deleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public ServiceFuture<Void> deleteByIdAsync(String resourceId, String apiVersion, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "deleteByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "deleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.deleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource by ID."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "deleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Deletes a resource."
  syntax:
    content: "public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group that contains the resource to delete. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to delete."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "get(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.get*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource."
  syntax:
    content: "public GenericResourceInner get(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to get. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to get."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource."
  syntax:
    content: "public Observable<GenericResourceInner> getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to get. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to get."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> getAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to get. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to get."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getById(java.lang.String,java.lang.String)"
  id: "getById(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "getById(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.getById(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getById(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource by ID."
  syntax:
    content: "public GenericResourceInner getById(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync(java.lang.String,java.lang.String)"
  id: "getByIdAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "getByIdAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.getByIdAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource by ID."
  syntax:
    content: "public Observable<GenericResourceInner> getByIdAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "getByIdAsync(java.lang.String,java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "getByIdAsync(String resourceId, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.getByIdAsync(String resourceId, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync(String resourceId, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource by ID."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> getByIdAsync(String resourceId, String apiVersion, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  id: "getByIdWithServiceResponseAsync(java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "getByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  nameWithType: "ResourcesInner.getByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource by ID."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> getByIdWithServiceResponseAsync(String resourceId, String apiVersion)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "getWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "getWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  nameWithType: "ResourcesInner.getWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Gets a resource."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> getWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resource to get. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to get."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the GenericResourceInner object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list()"
  id: "list()"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "list()"
  nameWithType: "ResourcesInner.list()"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list()"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public PagedList<GenericResourceInner> list()"
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the PagedList&lt;GenericResourceInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "list(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "list(String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.list(String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list(String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public PagedList<GenericResourceInner> list(String filter, String expand, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resource groups."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the PagedList&lt;GenericResourceInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync()"
  id: "listAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listAsync()"
  nameWithType: "ResourcesInner.listAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public Observable<Page<GenericResourceInner>> listAsync()"
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "listAsync(com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listAsync(ListOperationCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.listAsync(ListOperationCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(ListOperationCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public ServiceFuture<List<GenericResourceInner>> listAsync(ListOperationCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listAsync(String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.listAsync(String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public Observable<Page<GenericResourceInner>> listAsync(String filter, String expand, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resource groups."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "listAsync(java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listAsync(String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.listAsync(String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync(String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public ServiceFuture<List<GenericResourceInner>> listAsync(String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resource groups."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup(java.lang.String)"
  id: "listByResourceGroup(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroup(String resourceGroupName)"
  nameWithType: "ResourcesInner.listByResourceGroup(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public PagedList<GenericResourceInner> listByResourceGroup(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the PagedList&lt;GenericResourceInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroup(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public PagedList<GenericResourceInner> listByResourceGroup(String resourceGroupName, String filter, String expand, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resources."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the PagedList&lt;GenericResourceInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String)"
  id: "listByResourceGroupAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName)"
  nameWithType: "ResourcesInner.listByResourceGroupAsync(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public Observable<Page<GenericResourceInner>> listByResourceGroupAsync(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "listByResourceGroupAsync(java.lang.String,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public ServiceFuture<List<GenericResourceInner>> listByResourceGroupAsync(String resourceGroupName, ListOperationCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public Observable<Page<GenericResourceInner>> listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resources."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "listByResourceGroupAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public ServiceFuture<List<GenericResourceInner>> listByResourceGroupAsync(String resourceGroupName, String filter, String expand, Integer top, ListOperationCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resources."
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNext(java.lang.String)"
  id: "listByResourceGroupNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupNext(String nextPageLink)"
  nameWithType: "ResourcesInner.listByResourceGroupNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public PagedList<GenericResourceInner> listByResourceGroupNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the PagedList&lt;GenericResourceInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync(java.lang.String)"
  id: "listByResourceGroupNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupNextAsync(String nextPageLink)"
  nameWithType: "ResourcesInner.listByResourceGroupNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public Observable<Page<GenericResourceInner>> listByResourceGroupNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "listByResourceGroupNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public ServiceFuture<List<GenericResourceInner>> listByResourceGroupNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextSinglePageAsync(java.lang.String)"
  id: "listByResourceGroupNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupNextSinglePageAsync(String nextPageLink)"
  nameWithType: "ResourcesInner.listByResourceGroupNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listByResourceGroupNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the PagedList&lt;GenericResourceInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextWithServiceResponseAsync(java.lang.String)"
  id: "listByResourceGroupNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "ResourcesInner.listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listByResourceGroupNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync(java.lang.String)"
  id: "listByResourceGroupSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupSinglePageAsync(String resourceGroupName)"
  nameWithType: "ResourcesInner.listByResourceGroupSinglePageAsync(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listByResourceGroupSinglePageAsync(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the PagedList&lt;GenericResourceInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroupSinglePageAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group. ServiceResponse> \\* @param resourceGroupName The resource group with the resources to get. ServiceResponse> \\* @param filter The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. ServiceResponse> \\* @param expand The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime ServiceResponse> \\* @param top The number of results to return. If null is passed, returns all resources."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listByResourceGroupSinglePageAsync(String resourceGroupName, String filter, String expand, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "filter"
      type: "java.lang.String"
    - id: "expand"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the PagedList&lt;GenericResourceInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync(java.lang.String)"
  id: "listByResourceGroupWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
  nameWithType: "ResourcesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listByResourceGroupWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources for a resource group."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter, String expand, Integer top)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The resource group with the resources to get."
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resources."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNext(java.lang.String)"
  id: "listNext(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listNext(String nextPageLink)"
  nameWithType: "ResourcesInner.listNext(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNext(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNext*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public PagedList<GenericResourceInner> listNext(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the PagedList&lt;GenericResourceInner&gt; object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync(java.lang.String)"
  id: "listNextAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink)"
  nameWithType: "ResourcesInner.listNextAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public Observable<Page<GenericResourceInner>> listNextAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "listNextAsync(java.lang.String,com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>,com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.listNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public ServiceFuture<List<GenericResourceInner>> listNextAsync(String nextPageLink, ServiceFuture<List<GenericResourceInner>> serviceFuture, ListOperationCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    - id: "serviceFuture"
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the ServiceFuture object tracking the Retrofit calls"
    - id: "serviceCallback"
      type: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextSinglePageAsync(java.lang.String)"
  id: "listNextSinglePageAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listNextSinglePageAsync(String nextPageLink)"
  nameWithType: "ResourcesInner.listNextSinglePageAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextSinglePageAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription. ServiceResponse> \\* @param nextPageLink The NextLink from the previous successful call to List operation."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listNextSinglePageAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the PagedList&lt;GenericResourceInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextWithServiceResponseAsync(java.lang.String)"
  id: "listNextWithServiceResponseAsync(java.lang.String)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listNextWithServiceResponseAsync(String nextPageLink)"
  nameWithType: "ResourcesInner.listNextWithServiceResponseAsync(String nextPageLink)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextWithServiceResponseAsync(String nextPageLink)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listNextWithServiceResponseAsync(String nextPageLink)"
    parameters:
    - id: "nextPageLink"
      type: "java.lang.String"
      description: "The NextLink from the previous successful call to List operation."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync()"
  id: "listSinglePageAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listSinglePageAsync()"
  nameWithType: "ResourcesInner.listSinglePageAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listSinglePageAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the PagedList&lt;GenericResourceInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listSinglePageAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listSinglePageAsync(String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.listSinglePageAsync(String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync(String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription. ServiceResponse> \\* @param filter The filter to apply on the operation.<br><br>The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.<br><br>For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'<br><br>You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.<br><br>For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)<br><br>You can link more than one substringof together by adding and/or operators.<br><br>You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'<br><br>You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId. ServiceResponse> \\* @param expand The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime ServiceResponse> \\* @param top The number of results to return. If null is passed, returns all resource groups."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listSinglePageAsync(String filter, String expand, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
    - id: "expand"
      type: "java.lang.String"
    - id: "top"
      type: "java.lang.Integer"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the PagedList&lt;GenericResourceInner&gt; object wrapped in <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync()"
  id: "listWithServiceResponseAsync()"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listWithServiceResponseAsync()"
  nameWithType: "ResourcesInner.listWithServiceResponseAsync()"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync()"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listWithServiceResponseAsync()"
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  id: "listWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "listWithServiceResponseAsync(String filter, String expand, Integer top)"
  nameWithType: "ResourcesInner.listWithServiceResponseAsync(String filter, String expand, Integer top)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync(String filter, String expand, Integer top)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Get all the resources in a subscription."
  syntax:
    content: "public Observable<ServiceResponse<Page<GenericResourceInner>>> listWithServiceResponseAsync(String filter, String expand, Integer top)"
    parameters:
    - id: "filter"
      type: "java.lang.String"
      description: "The filter to apply on the operation.&lt;br&gt;&lt;br&gt;The properties you can use for eq (equals) or ne (not equals) are: location, resourceType, name, resourceGroup, identity, identity/principalId, plan, plan/publisher, plan/product, plan/name, plan/version, and plan/promotionCode.&lt;br&gt;&lt;br&gt;For example, to filter by a resource type, use: $filter=resourceType eq 'Microsoft.Network/virtualNetworks'&lt;br&gt;&lt;br&gt;You can use substringof(value, property) in the filter. The properties you can use for substring are: name and resourceGroup.&lt;br&gt;&lt;br&gt;For example, to get all resources with 'demo' anywhere in the name, use: $filter=substringof('demo', name)&lt;br&gt;&lt;br&gt;You can link more than one substringof together by adding and/or operators.&lt;br&gt;&lt;br&gt;You can filter by tag names and values. For example, to filter for a tag name and value, use $filter=tagName eq 'tag1' and tagValue eq 'Value1'&lt;br&gt;&lt;br&gt;You can use some properties together when filtering. The combinations you can use are: substringof and/or resourceType, plan and plan/publisher and plan/name, identity and identity/principalId."
    - id: "expand"
      type: "java.lang.String"
      description: "The $expand query parameter. You can expand createdTime and changedTime. For example, to expand both properties, use $expand=changedTime,createdTime"
    - id: "top"
      type: "java.lang.Integer"
      description: "The number of results to return. If null is passed, returns all resource groups."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
      description: "the observable to the PagedList&lt;GenericResourceInner&gt; object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "moveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResources*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public void moveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "moveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public Observable<Void> moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "moveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public ServiceFuture<Void> moveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "moveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "moveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.moveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Moves resources from one resource group to another resource group. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. When moving resources, both the source group and the target group are locked for the duration of the operation. Write and delete operations are blocked on the groups until the move completes."
  syntax:
    content: "public Observable<ServiceResponse<Void>> moveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.update*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public GenericResourceInner update(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public Observable<GenericResourceInner> updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "updateAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> updateAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "updateById(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "updateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.updateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateById*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public GenericResourceInner updateById(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    return:
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "the GenericResourceInner object if successful."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "updateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public Observable<GenericResourceInner> updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  id: "updateByIdAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  nameWithType: "ResourcesInner.updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public ServiceFuture<GenericResourceInner> updateByIdAsync(String resourceId, String apiVersion, GenericResourceInner parameters, ServiceCallback<GenericResourceInner> serviceCallback)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "updateByIdWithServiceResponseAsync(java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "updateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.updateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource by ID."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> updateByIdWithServiceResponseAsync(String resourceId, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceId"
      type: "java.lang.String"
      description: "The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}"
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Update resource parameters."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  id: "updateWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.management.resources.implementation.GenericResourceInner)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "updateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  nameWithType: "ResourcesInner.updateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Updates a resource."
  syntax:
    content: "public Observable<ServiceResponse<GenericResourceInner>> updateWithServiceResponseAsync(String resourceGroupName, String resourceProviderNamespace, String parentResourcePath, String resourceType, String resourceName, String apiVersion, GenericResourceInner parameters)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group for the resource. The name is case insensitive."
    - id: "resourceProviderNamespace"
      type: "java.lang.String"
      description: "The namespace of the resource provider."
    - id: "parentResourcePath"
      type: "java.lang.String"
      description: "The parent resource identity."
    - id: "resourceType"
      type: "java.lang.String"
      description: "The resource type of the resource to update."
    - id: "resourceName"
      type: "java.lang.String"
      description: "The name of the resource to update."
    - id: "apiVersion"
      type: "java.lang.String"
      description: "The API version to use for the operation."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
      description: "Parameters for updating the resource."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "validateMoveResources(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResources*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public void validateMoveResources(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "validateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public Observable<Void> validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the observable for the request"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "validateMoveResourcesAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  nameWithType: "ResourcesInner.validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public ServiceFuture<Void> validateMoveResourcesAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  id: "validateMoveResourcesWithServiceResponseAsync(java.lang.String,com.microsoft.azure.management.resources.ResourcesMoveInfo)"
  parent: "com.microsoft.azure.management.resources.implementation.ResourcesInner"
  langs:
  - "java"
  name: "validateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  nameWithType: "ResourcesInner.validateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
  overload: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.resources.implementation"
  summary: "Validates whether resources can be moved from one resource group to another resource group. This operation checks whether the specified resources can be moved to the target. The resources to move must be in the same source resource group. The target resource group may be in a different subscription. If validation succeeds, it returns HTTP response code 204 (no content). If validation fails, it returns HTTP response code 409 (Conflict) with an error message. Retrieve the URL in the Location header value to check the result of the long-running operation."
  syntax:
    content: "public Observable<ServiceResponse<Void>> validateMoveResourcesWithServiceResponseAsync(String sourceResourceGroupName, ResourcesMoveInfo parameters)"
    parameters:
    - id: "sourceResourceGroupName"
      type: "java.lang.String"
      description: "The name of the resource group containing the resources to validate for move."
    - id: "parameters"
      type: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
      description: "Parameters for moving resources."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the observable for the request"
references:
- uid: "retrofit2.Retrofit"
  spec.java:
  - uid: "retrofit2.Retrofit"
    name: "Retrofit"
    fullName: "retrofit2.Retrofit"
- uid: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
  name: "ResourceManagementClientImpl"
  nameWithType: "ResourceManagementClientImpl"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourceManagementClientImpl"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesInner*"
  name: "ResourcesInner"
  nameWithType: "ResourcesInner.ResourcesInner"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesInner"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.PagedList<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
  spec.java:
  - uid: "com.microsoft.azure.PagedList"
    name: "PagedList"
    fullName: "com.microsoft.azure.PagedList"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup*"
  name: "listByResourceGroup"
  nameWithType: "ResourcesInner.listByResourceGroup"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroup"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.ListOperationCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
  spec.java:
  - uid: "com.microsoft.azure.ListOperationCallback"
    name: "ListOperationCallback"
    fullName: "com.microsoft.azure.ListOperationCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.util.List<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync*"
  name: "listByResourceGroupAsync"
  nameWithType: "ResourcesInner.listByResourceGroupAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.Page<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.Page"
    name: "Page"
    fullName: "com.microsoft.azure.Page"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync*"
  name: "listByResourceGroupWithServiceResponseAsync"
  nameWithType: "ResourcesInner.listByResourceGroupWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync*"
  name: "listByResourceGroupSinglePageAsync"
  nameWithType: "ResourcesInner.listByResourceGroupSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
  name: "ResourcesMoveInfo"
  nameWithType: "ResourcesMoveInfo"
  fullName: "com.microsoft.azure.management.resources.ResourcesMoveInfo"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResources*"
  name: "moveResources"
  nameWithType: "ResourcesInner.moveResources"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResources"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync*"
  name: "moveResourcesAsync"
  nameWithType: "ResourcesInner.moveResourcesAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<java.lang.Void>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesWithServiceResponseAsync*"
  name: "moveResourcesWithServiceResponseAsync"
  nameWithType: "ResourcesInner.moveResourcesWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.moveResourcesWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResources*"
  name: "beginMoveResources"
  nameWithType: "ResourcesInner.beginMoveResources"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResources"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync*"
  name: "beginMoveResourcesAsync"
  nameWithType: "ResourcesInner.beginMoveResourcesAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesWithServiceResponseAsync*"
  name: "beginMoveResourcesWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginMoveResourcesWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginMoveResourcesWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResources*"
  name: "validateMoveResources"
  nameWithType: "ResourcesInner.validateMoveResources"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResources"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync*"
  name: "validateMoveResourcesAsync"
  nameWithType: "ResourcesInner.validateMoveResourcesAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesWithServiceResponseAsync*"
  name: "validateMoveResourcesWithServiceResponseAsync"
  nameWithType: "ResourcesInner.validateMoveResourcesWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.validateMoveResourcesWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResources*"
  name: "beginValidateMoveResources"
  nameWithType: "ResourcesInner.beginValidateMoveResources"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResources"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync*"
  name: "beginValidateMoveResourcesAsync"
  nameWithType: "ResourcesInner.beginValidateMoveResourcesAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync*"
  name: "beginValidateMoveResourcesWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginValidateMoveResourcesWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list*"
  name: "list"
  nameWithType: "ResourcesInner.list"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.list"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync*"
  name: "listAsync"
  nameWithType: "ResourcesInner.listAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync*"
  name: "listWithServiceResponseAsync"
  nameWithType: "ResourcesInner.listWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync*"
  name: "listSinglePageAsync"
  nameWithType: "ResourcesInner.listSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistence*"
  name: "checkExistence"
  nameWithType: "ResourcesInner.checkExistence"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistence"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<java.lang.Boolean>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.lang.Boolean>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync*"
  name: "checkExistenceAsync"
  nameWithType: "ResourcesInner.checkExistenceAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<java.lang.Boolean>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Boolean>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceWithServiceResponseAsync*"
  name: "checkExistenceWithServiceResponseAsync"
  nameWithType: "ResourcesInner.checkExistenceWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.delete*"
  name: "delete"
  nameWithType: "ResourcesInner.delete"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.delete"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync*"
  name: "deleteAsync"
  nameWithType: "ResourcesInner.deleteAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteWithServiceResponseAsync*"
  name: "deleteWithServiceResponseAsync"
  nameWithType: "ResourcesInner.deleteWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDelete*"
  name: "beginDelete"
  nameWithType: "ResourcesInner.beginDelete"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDelete"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync*"
  name: "beginDeleteAsync"
  nameWithType: "ResourcesInner.beginDeleteAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteWithServiceResponseAsync*"
  name: "beginDeleteWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginDeleteWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  name: "GenericResourceInner"
  nameWithType: "GenericResourceInner"
  fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdate*"
  name: "createOrUpdate"
  nameWithType: "ResourcesInner.createOrUpdate"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdate"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync*"
  name: "createOrUpdateAsync"
  nameWithType: "ResourcesInner.createOrUpdateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<com.microsoft.azure.management.resources.implementation.GenericResourceInner>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
    name: "GenericResourceInner"
    fullName: "com.microsoft.azure.management.resources.implementation.GenericResourceInner"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateWithServiceResponseAsync*"
  name: "createOrUpdateWithServiceResponseAsync"
  nameWithType: "ResourcesInner.createOrUpdateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdate*"
  name: "beginCreateOrUpdate"
  nameWithType: "ResourcesInner.beginCreateOrUpdate"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdate"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync*"
  name: "beginCreateOrUpdateAsync"
  nameWithType: "ResourcesInner.beginCreateOrUpdateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync*"
  name: "beginCreateOrUpdateWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.update*"
  name: "update"
  nameWithType: "ResourcesInner.update"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.update"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync*"
  name: "updateAsync"
  nameWithType: "ResourcesInner.updateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateWithServiceResponseAsync*"
  name: "updateWithServiceResponseAsync"
  nameWithType: "ResourcesInner.updateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdate*"
  name: "beginUpdate"
  nameWithType: "ResourcesInner.beginUpdate"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdate"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync*"
  name: "beginUpdateAsync"
  nameWithType: "ResourcesInner.beginUpdateAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateWithServiceResponseAsync*"
  name: "beginUpdateWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginUpdateWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.get*"
  name: "get"
  nameWithType: "ResourcesInner.get"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.get"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync*"
  name: "getAsync"
  nameWithType: "ResourcesInner.getAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getWithServiceResponseAsync*"
  name: "getWithServiceResponseAsync"
  nameWithType: "ResourcesInner.getWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceById*"
  name: "checkExistenceById"
  nameWithType: "ResourcesInner.checkExistenceById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync*"
  name: "checkExistenceByIdAsync"
  nameWithType: "ResourcesInner.checkExistenceByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdWithServiceResponseAsync*"
  name: "checkExistenceByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.checkExistenceByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.checkExistenceByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteById*"
  name: "deleteById"
  nameWithType: "ResourcesInner.deleteById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync*"
  name: "deleteByIdAsync"
  nameWithType: "ResourcesInner.deleteByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdWithServiceResponseAsync*"
  name: "deleteByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.deleteByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.deleteByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteById*"
  name: "beginDeleteById"
  nameWithType: "ResourcesInner.beginDeleteById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync*"
  name: "beginDeleteByIdAsync"
  nameWithType: "ResourcesInner.beginDeleteByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdWithServiceResponseAsync*"
  name: "beginDeleteByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginDeleteByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginDeleteByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateById*"
  name: "createOrUpdateById"
  nameWithType: "ResourcesInner.createOrUpdateById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync*"
  name: "createOrUpdateByIdAsync"
  nameWithType: "ResourcesInner.createOrUpdateByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdWithServiceResponseAsync*"
  name: "createOrUpdateByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.createOrUpdateByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.createOrUpdateByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateById*"
  name: "beginCreateOrUpdateById"
  nameWithType: "ResourcesInner.beginCreateOrUpdateById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync*"
  name: "beginCreateOrUpdateByIdAsync"
  nameWithType: "ResourcesInner.beginCreateOrUpdateByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync*"
  name: "beginCreateOrUpdateByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginCreateOrUpdateByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateById*"
  name: "updateById"
  nameWithType: "ResourcesInner.updateById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync*"
  name: "updateByIdAsync"
  nameWithType: "ResourcesInner.updateByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdWithServiceResponseAsync*"
  name: "updateByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.updateByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.updateByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateById*"
  name: "beginUpdateById"
  nameWithType: "ResourcesInner.beginUpdateById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync*"
  name: "beginUpdateByIdAsync"
  nameWithType: "ResourcesInner.beginUpdateByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdWithServiceResponseAsync*"
  name: "beginUpdateByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.beginUpdateByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.beginUpdateByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getById*"
  name: "getById"
  nameWithType: "ResourcesInner.getById"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getById"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync*"
  name: "getByIdAsync"
  nameWithType: "ResourcesInner.getByIdAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdWithServiceResponseAsync*"
  name: "getByIdWithServiceResponseAsync"
  nameWithType: "ResourcesInner.getByIdWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.getByIdWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNext*"
  name: "listByResourceGroupNext"
  nameWithType: "ResourcesInner.listByResourceGroupNext"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync*"
  name: "listByResourceGroupNextAsync"
  nameWithType: "ResourcesInner.listByResourceGroupNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextWithServiceResponseAsync*"
  name: "listByResourceGroupNextWithServiceResponseAsync"
  nameWithType: "ResourcesInner.listByResourceGroupNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextSinglePageAsync*"
  name: "listByResourceGroupNextSinglePageAsync"
  nameWithType: "ResourcesInner.listByResourceGroupNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listByResourceGroupNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNext*"
  name: "listNext"
  nameWithType: "ResourcesInner.listNext"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNext"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync*"
  name: "listNextAsync"
  nameWithType: "ResourcesInner.listNextAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextWithServiceResponseAsync*"
  name: "listNextWithServiceResponseAsync"
  nameWithType: "ResourcesInner.listNextWithServiceResponseAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextWithServiceResponseAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextSinglePageAsync*"
  name: "listNextSinglePageAsync"
  nameWithType: "ResourcesInner.listNextSinglePageAsync"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.listNextSinglePageAsync"
  package: "com.microsoft.azure.management.resources.implementation"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
  name: "InnerSupportsListing<GenericResourceInner>"
  nameWithType: "InnerSupportsListing<GenericResourceInner>"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing<com.microsoft.azure.management.resources.implementation.GenericResourceInner>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesService"
  name: "ResourcesInner.ResourcesService"
  nameWithType: "ResourcesInner.ResourcesService"
  fullName: "com.microsoft.azure.management.resources.implementation.ResourcesInner.ResourcesService"
- uid: "com.microsoft.azure.PagedList"
  name: "PagedList"
  nameWithType: "PagedList"
  fullName: "com.microsoft.azure.PagedList"
- uid: "com.microsoft.azure.ListOperationCallback"
  name: "ListOperationCallback"
  nameWithType: "ListOperationCallback"
  fullName: "com.microsoft.azure.ListOperationCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.Page"
  name: "Page"
  nameWithType: "Page"
  fullName: "com.microsoft.azure.Page"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "java.lang.Boolean"
  name: "Boolean"
  nameWithType: "Boolean"
  fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing"
  name: "InnerSupportsListing"
  nameWithType: "InnerSupportsListing"
  fullName: "com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing"
