### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromDisk(Disk sourceDisk)
  name: withLinuxFromDisk(Disk sourceDisk)
  nameWithType: Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromDisk(Disk sourceDisk)
  parameters:
  - description: <p>a source managed disk </p>
    name: sourceDisk
    type: <xref href="com.microsoft.azure.management.compute.Disk?alt=com.microsoft.azure.management.compute.Disk&text=Disk" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the source Linux OS managed disk.</p>

    <p></p>
  syntax: public WithCreate withLinuxFromDisk(Disk sourceDisk)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromDisk(Disk)
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromDisk(String sourceDiskId)
  name: withLinuxFromDisk(String sourceDiskId)
  nameWithType: Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromDisk(String sourceDiskId)
  parameters:
  - description: <p>a source managed disk resource ID </p>
    name: sourceDiskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the source Linux OS managed disk.</p>

    <p></p>
  syntax: public WithCreate withLinuxFromDisk(String sourceDiskId)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromDisk(String)
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromSnapshot(Snapshot sourceSnapshot)
  name: withLinuxFromSnapshot(Snapshot sourceSnapshot)
  nameWithType: Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromSnapshot(Snapshot sourceSnapshot)
  parameters:
  - description: <p>a source snapshot </p>
    name: sourceSnapshot
    type: <xref href="com.microsoft.azure.management.compute.Snapshot?alt=com.microsoft.azure.management.compute.Snapshot&text=Snapshot" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the source Linux OS managed snapshot.</p>

    <p></p>
  syntax: public WithCreate withLinuxFromSnapshot(Snapshot sourceSnapshot)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromSnapshot(Snapshot)
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromSnapshot(String sourceSnapshotId)
  name: withLinuxFromSnapshot(String sourceSnapshotId)
  nameWithType: Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromSnapshot(String sourceSnapshotId)
  parameters:
  - description: <p>a snapshot resource ID </p>
    name: sourceSnapshotId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the source Linux OS managed snapshot.</p>

    <p></p>
  syntax: public WithCreate withLinuxFromSnapshot(String sourceSnapshotId)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromSnapshot(String)
- fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromVhd(String vhdUrl)
  name: withLinuxFromVhd(String vhdUrl)
  nameWithType: Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromVhd(String vhdUrl)
  parameters:
  - description: <p>the source VHD URL </p>
    name: vhdUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithCreate&text=Snapshot.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies the source specialized or generalized Linux OS VHD.</p>

    <p></p>
  syntax: public WithCreate withLinuxFromVhd(String vhdUrl)
  uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource.withLinuxFromVhd(String)
nameWithType: Snapshot.DefinitionStages.WithLinuxSnapshotSource
syntax: public interface WithLinuxSnapshotSource
type: interface
uid: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource
fullName: com.microsoft.azure.management.compute.Snapshot.DefinitionStages.WithLinuxSnapshotSource
name: Snapshot.DefinitionStages.WithLinuxSnapshotSource
package: com.microsoft.azure.management.compute
summary: <p>The stage of the managed snapshot definition allowing to choose a Linux OS source. </p>
metadata: {}
