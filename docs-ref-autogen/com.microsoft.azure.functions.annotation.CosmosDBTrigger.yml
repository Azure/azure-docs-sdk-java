### YamlMime:JavaType
uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger"
fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger"
name: "CosmosDBTrigger"
nameWithType: "CosmosDBTrigger"
summary: "Place this on a parameter whose value would come from CosmosDB, and causing the method to run when CosmosDB data is changed."
syntax: "public interface CosmosDBTrigger implements Annotation"
methods:
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.checkpointDocumentCount()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.checkpointDocumentCount()"
  name: "checkpointDocumentCount()"
  nameWithType: "CosmosDBTrigger.checkpointDocumentCount()"
  summary: "Customizes the amount of documents between lease checkpoints."
  modifiers:
  - "abstract"
  syntax: "public abstract int checkpointDocumentCount()"
  desc: "Customizes the amount of documents between lease checkpoints. Default is always after a Function call."
  returns:
    description: "CheckpointDocumentCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.checkpointInterval()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.checkpointInterval()"
  name: "checkpointInterval()"
  nameWithType: "CosmosDBTrigger.checkpointInterval()"
  summary: "Customizes the amount of milliseconds between lease checkpoints."
  modifiers:
  - "abstract"
  syntax: "public abstract int checkpointInterval()"
  desc: "Customizes the amount of milliseconds between lease checkpoints. Default is always after a Function call."
  returns:
    description: "checkpointInterval"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.collectionName()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.collectionName()"
  name: "collectionName()"
  nameWithType: "CosmosDBTrigger.collectionName()"
  summary: "Defines the collection name of the CosmosDB to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String collectionName()"
  desc: "Defines the collection name of the CosmosDB to which to bind."
  returns:
    description: "The collection name string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.connectionStringSetting()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.connectionStringSetting()"
  name: "connectionStringSetting()"
  nameWithType: "CosmosDBTrigger.connectionStringSetting()"
  summary: "Defines the app setting name that contains the CosmosDB connection string."
  modifiers:
  - "abstract"
  syntax: "public abstract String connectionStringSetting()"
  desc: "Defines the app setting name that contains the CosmosDB connection string."
  returns:
    description: "The app setting name of the connection string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.createLeaseCollectionIfNotExists()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.createLeaseCollectionIfNotExists()"
  name: "createLeaseCollectionIfNotExists()"
  nameWithType: "CosmosDBTrigger.createLeaseCollectionIfNotExists()"
  summary: "Defines whether to create a new lease collection if not exists."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean createLeaseCollectionIfNotExists()"
  desc: "Defines whether to create a new lease collection if not exists."
  returns:
    description: "configuration whether to create a new lease collection if not exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.dataType()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.dataType()"
  name: "dataType()"
  nameWithType: "CosmosDBTrigger.dataType()"
  summary: "Defines how Functions runtime should treat the parameter value."
  modifiers:
  - "abstract"
  syntax: "public abstract String dataType()"
  desc: "Defines how Functions runtime should treat the parameter value. Possible values are:\n\n *  \"\": get the value as a string, and try to deserialize to actual parameter type like POJO\n *  string: always get the value as a string\n *  binary: get the value as a binary data, and try to deserialize to actual parameter type byte\\[\\]"
  returns:
    description: "The dataType which will be used by the Functions runtime."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.databaseName()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.databaseName()"
  name: "databaseName()"
  nameWithType: "CosmosDBTrigger.databaseName()"
  summary: "Defines the database name of the CosmosDB to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String databaseName()"
  desc: "Defines the database name of the CosmosDB to which to bind."
  returns:
    description: "The database name string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.feedPollDelay()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.feedPollDelay()"
  name: "feedPollDelay()"
  nameWithType: "CosmosDBTrigger.feedPollDelay()"
  summary: "Customizes the delay in milliseconds in between polling a partition for new changes on the feed, after all current changes are drained."
  modifiers:
  - "abstract"
  syntax: "public abstract int feedPollDelay()"
  desc: "Customizes the delay in milliseconds in between polling a partition for new changes on the feed, after all current changes are drained. Default is 5000 (5 seconds)."
  returns:
    description: "feedPollDelay"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseAcquireInterval()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseAcquireInterval()"
  name: "leaseAcquireInterval()"
  nameWithType: "CosmosDBTrigger.leaseAcquireInterval()"
  summary: "Customizes the interval in milliseconds to kick off a task to compute if partitions are distributed evenly among known host instances."
  modifiers:
  - "abstract"
  syntax: "public abstract int leaseAcquireInterval()"
  desc: "Customizes the interval in milliseconds to kick off a task to compute if partitions are distributed evenly among known host instances. Default is 13000 (13 seconds)."
  returns:
    description: "interval in milliseconds"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseCollectionName()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseCollectionName()"
  name: "leaseCollectionName()"
  nameWithType: "CosmosDBTrigger.leaseCollectionName()"
  summary: "Defines the lease collection name of the CosmosDB to which to bind."
  modifiers:
  - "abstract"
  syntax: "public abstract String leaseCollectionName()"
  desc: "Defines the lease collection name of the CosmosDB to which to bind."
  returns:
    description: "The lease collection name string."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseCollectionPrefix()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseCollectionPrefix()"
  name: "leaseCollectionPrefix()"
  nameWithType: "CosmosDBTrigger.leaseCollectionPrefix()"
  summary: "Defines a prefix to be used within a Leases collection for this Trigger."
  modifiers:
  - "abstract"
  syntax: "public abstract String leaseCollectionPrefix()"
  desc: "Defines a prefix to be used within a Leases collection for this Trigger. Useful when sharing the same Lease collection among multiple Triggers."
  returns:
    description: "LeaseCollectionPrefix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseConnectionStringSetting()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseConnectionStringSetting()"
  name: "leaseConnectionStringSetting()"
  nameWithType: "CosmosDBTrigger.leaseConnectionStringSetting()"
  summary: "Defines Connection string for the service containing the lease collection."
  modifiers:
  - "abstract"
  syntax: "public abstract String leaseConnectionStringSetting()"
  desc: "Defines Connection string for the service containing the lease collection."
  returns:
    description: "Connection string for the lease collection."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseDatabaseName()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseDatabaseName()"
  name: "leaseDatabaseName()"
  nameWithType: "CosmosDBTrigger.leaseDatabaseName()"
  summary: "Defines Name of the database containing the lease collection."
  modifiers:
  - "abstract"
  syntax: "public abstract String leaseDatabaseName()"
  desc: "Defines Name of the database containing the lease collection."
  returns:
    description: "Name of the database for lease collection."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseExpirationInterval()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseExpirationInterval()"
  name: "leaseExpirationInterval()"
  nameWithType: "CosmosDBTrigger.leaseExpirationInterval()"
  summary: "Customizes the interval in milliseconds for which the lease is taken on a lease representing a partition."
  modifiers:
  - "abstract"
  syntax: "public abstract int leaseExpirationInterval()"
  desc: "Customizes the interval in milliseconds for which the lease is taken on a lease representing a partition. If the lease is not renewed within this interval, it will cause it to expire and ownership of the partition will move to another Trigger instance. Default is 60000 (60 seconds)."
  returns:
    description: "interval in milliseconds for which the lease is taken"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseRenewInterval()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leaseRenewInterval()"
  name: "leaseRenewInterval()"
  nameWithType: "CosmosDBTrigger.leaseRenewInterval()"
  summary: "Customizes the renew interval in milliseconds for all leases for partitions currently held by the Trigger."
  modifiers:
  - "abstract"
  syntax: "public abstract int leaseRenewInterval()"
  desc: "Customizes the renew interval in milliseconds for all leases for partitions currently held by the Trigger. Default is 17000 (17 seconds)."
  returns:
    description: "renew interval in milliseconds for all leases"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leasesCollectionThroughput()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.leasesCollectionThroughput()"
  name: "leasesCollectionThroughput()"
  nameWithType: "CosmosDBTrigger.leasesCollectionThroughput()"
  summary: "defines the throughput of the created collection.."
  modifiers:
  - "abstract"
  syntax: "public abstract int leasesCollectionThroughput()"
  desc: "defines the throughput of the created collection.."
  returns:
    description: "throughput"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.maxItemsPerInvocation()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.maxItemsPerInvocation()"
  name: "maxItemsPerInvocation()"
  nameWithType: "CosmosDBTrigger.maxItemsPerInvocation()"
  summary: "Customizes the maximum amount of items received in an invocation"
  modifiers:
  - "abstract"
  syntax: "public abstract int maxItemsPerInvocation()"
  desc: "Customizes the maximum amount of items received in an invocation"
  returns:
    description: "maximum amount of items received"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.name()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.name()"
  name: "name()"
  nameWithType: "CosmosDBTrigger.name()"
  summary: "The variable name used in function.<wbr>json."
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  desc: "The variable name used in function.json."
  returns:
    description: "The variable name used in function.json."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.preferredLocations()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.preferredLocations()"
  name: "preferredLocations()"
  nameWithType: "CosmosDBTrigger.preferredLocations()"
  summary: "Defines preferred locations (regions) for geo-replicated database accounts in the Azure Cosmos DB service."
  modifiers:
  - "abstract"
  syntax: "public abstract String preferredLocations()"
  desc: "Defines preferred locations (regions) for geo-replicated database accounts in the Azure Cosmos DB service. Values should be comma-separated. example, PreferredLocations = \"East US,South Central US,North Europe\""
  returns:
    description: "preferred locations (regions) for geo-replicated database accounts"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.startFromBeginning()"
  fullName: "com.microsoft.azure.functions.annotation.CosmosDBTrigger.startFromBeginning()"
  name: "startFromBeginning()"
  nameWithType: "CosmosDBTrigger.startFromBeginning()"
  summary: "Gets or sets whether change feed in the Azure Cosmos DB service should start from beginning (true) or from current (false)."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean startFromBeginning()"
  desc: "Gets or sets whether change feed in the Azure Cosmos DB service should start from beginning (true) or from current (false). By default it's start from current (false)."
  returns:
    description: "Configuration whether change feed should start from beginning"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Place this on a parameter whose value would come from CosmosDB, and causing the method to run when CosmosDB data is changed. The parameter type can be one of the following:\n\n *  Some native Java types such as String\n *  Nullable values using Optional<T>\n *  Any POJO type\n\nThe following example shows a Java function that is invoked when there are inserts or updates in the specified database and collection.\n\n```java\n@FunctionName(\"cosmosDBMonitor\")\n public void cosmosDbLog(\n    @CosmosDBTrigger(name = \"database\",\n                      databaseName = \"ToDoList\",\n                      collectionName = \"Items\",\n                      leaseCollectionName = \"leases\",\n                      createLeaseCollectionIfNotExists = true,\n                      connectionStringSetting = \"AzureCosmosDBConnection\") \n                      List<Map<String, String>> items,\n     final ExecutionContext context\n ) {\n     context.getLogger().info(items.size() + \" item(s) is/are inserted.\");\n     if (!items.isEmpty()) {\n         context.getLogger().info(\"The ID of the first item is: \" + items.get(0).get(\"id\"));\n     }\n }\n```"
implements:
- "<xref href=\"java.lang.annotation.Annotation?alt=java.lang.annotation.Annotation&text=Annotation\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.functions.annotation"
artifact: com.microsoft.azure.functions:azure-functions-java-library:1.3.1
