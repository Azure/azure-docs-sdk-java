### YamlMime:JavaType
uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner"
fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner"
name: "ServerInner"
nameWithType: "ServerInner"
summary: "Represents a server."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ServerInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.ServerInner()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.ServerInner()"
  name: "ServerInner()"
  nameWithType: "ServerInner.ServerInner()"
  syntax: "public ServerInner()"
methods:
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.administratorLogin()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.administratorLogin()"
  name: "administratorLogin()"
  nameWithType: "ServerInner.administratorLogin()"
  summary: "Get the administrator<wbr>Login property: The administrator's login name of a server."
  syntax: "public String administratorLogin()"
  desc: "Get the administratorLogin property: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
  returns:
    description: "the administratorLogin value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.byokEnforcement()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.byokEnforcement()"
  name: "byokEnforcement()"
  nameWithType: "ServerInner.byokEnforcement()"
  summary: "Get the byok<wbr>Enforcement property: Status showing whether the server data encryption is enabled with customer-managed keys."
  syntax: "public String byokEnforcement()"
  desc: "Get the byokEnforcement property: Status showing whether the server data encryption is enabled with customer-managed keys."
  returns:
    description: "the byokEnforcement value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.earliestRestoreDate()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.earliestRestoreDate()"
  name: "earliestRestoreDate()"
  nameWithType: "ServerInner.earliestRestoreDate()"
  summary: "Get the earliest<wbr>Restore<wbr>Date property: Earliest restore point creation time (ISO8601 format)."
  syntax: "public OffsetDateTime earliestRestoreDate()"
  desc: "Get the earliestRestoreDate property: Earliest restore point creation time (ISO8601 format)."
  returns:
    description: "the earliestRestoreDate value."
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.fullyQualifiedDomainName()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.fullyQualifiedDomainName()"
  name: "fullyQualifiedDomainName()"
  nameWithType: "ServerInner.fullyQualifiedDomainName()"
  summary: "Get the fully<wbr>Qualified<wbr>Domain<wbr>Name property: The fully qualified domain name of a server."
  syntax: "public String fullyQualifiedDomainName()"
  desc: "Get the fullyQualifiedDomainName property: The fully qualified domain name of a server."
  returns:
    description: "the fullyQualifiedDomainName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.identity()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.identity()"
  name: "identity()"
  nameWithType: "ServerInner.identity()"
  summary: "Get the identity property: The Azure Active Directory identity of the server."
  syntax: "public ResourceIdentity identity()"
  desc: "Get the identity property: The Azure Active Directory identity of the server."
  returns:
    description: "the identity value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ResourceIdentity?alt=com.azure.resourcemanager.postgresql.models.ResourceIdentity&text=ResourceIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.infrastructureEncryption()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.infrastructureEncryption()"
  name: "infrastructureEncryption()"
  nameWithType: "ServerInner.infrastructureEncryption()"
  summary: "Get the infrastructure<wbr>Encryption property: Status showing whether the server enabled infrastructure encryption."
  syntax: "public InfrastructureEncryption infrastructureEncryption()"
  desc: "Get the infrastructureEncryption property: Status showing whether the server enabled infrastructure encryption."
  returns:
    description: "the infrastructureEncryption value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.InfrastructureEncryption?alt=com.azure.resourcemanager.postgresql.models.InfrastructureEncryption&text=InfrastructureEncryption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.masterServerId()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.masterServerId()"
  name: "masterServerId()"
  nameWithType: "ServerInner.masterServerId()"
  summary: "Get the master<wbr>Server<wbr>Id property: The master server id of a replica server."
  syntax: "public String masterServerId()"
  desc: "Get the masterServerId property: The master server id of a replica server."
  returns:
    description: "the masterServerId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.minimalTlsVersion()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.minimalTlsVersion()"
  name: "minimalTlsVersion()"
  nameWithType: "ServerInner.minimalTlsVersion()"
  summary: "Get the minimal<wbr>Tls<wbr>Version property: Enforce a minimal Tls version for the server."
  syntax: "public MinimalTlsVersionEnum minimalTlsVersion()"
  desc: "Get the minimalTlsVersion property: Enforce a minimal Tls version for the server."
  returns:
    description: "the minimalTlsVersion value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum?alt=com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum&text=MinimalTlsVersionEnum\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.privateEndpointConnections()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.privateEndpointConnections()"
  name: "privateEndpointConnections()"
  nameWithType: "ServerInner.privateEndpointConnections()"
  summary: "Get the private<wbr>Endpoint<wbr>Connections property: List of private endpoint connections on a server."
  syntax: "public List<ServerPrivateEndpointConnection> privateEndpointConnections()"
  desc: "Get the privateEndpointConnections property: List of private endpoint connections on a server."
  returns:
    description: "the privateEndpointConnections value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.postgresql.models.ServerPrivateEndpointConnection?alt=com.azure.resourcemanager.postgresql.models.ServerPrivateEndpointConnection&text=ServerPrivateEndpointConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.publicNetworkAccess()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.publicNetworkAccess()"
  name: "publicNetworkAccess()"
  nameWithType: "ServerInner.publicNetworkAccess()"
  summary: "Get the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for this server."
  syntax: "public PublicNetworkAccessEnum publicNetworkAccess()"
  desc: "Get the publicNetworkAccess property: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
  returns:
    description: "the publicNetworkAccess value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum?alt=com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum&text=PublicNetworkAccessEnum\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.replicaCapacity()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.replicaCapacity()"
  name: "replicaCapacity()"
  nameWithType: "ServerInner.replicaCapacity()"
  summary: "Get the replica<wbr>Capacity property: The maximum number of replicas that a master server can have."
  syntax: "public Integer replicaCapacity()"
  desc: "Get the replicaCapacity property: The maximum number of replicas that a master server can have."
  returns:
    description: "the replicaCapacity value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.replicationRole()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.replicationRole()"
  name: "replicationRole()"
  nameWithType: "ServerInner.replicationRole()"
  summary: "Get the replication<wbr>Role property: The replication role of the server."
  syntax: "public String replicationRole()"
  desc: "Get the replicationRole property: The replication role of the server."
  returns:
    description: "the replicationRole value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.sku()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.sku()"
  name: "sku()"
  nameWithType: "ServerInner.sku()"
  summary: "Get the sku property: The SKU (pricing tier) of the server."
  syntax: "public Sku sku()"
  desc: "Get the sku property: The SKU (pricing tier) of the server."
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.Sku?alt=com.azure.resourcemanager.postgresql.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.sslEnforcement()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.sslEnforcement()"
  name: "sslEnforcement()"
  nameWithType: "ServerInner.sslEnforcement()"
  summary: "Get the ssl<wbr>Enforcement property: Enable ssl enforcement or not when connect to server."
  syntax: "public SslEnforcementEnum sslEnforcement()"
  desc: "Get the sslEnforcement property: Enable ssl enforcement or not when connect to server."
  returns:
    description: "the sslEnforcement value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.SslEnforcementEnum?alt=com.azure.resourcemanager.postgresql.models.SslEnforcementEnum&text=SslEnforcementEnum\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.storageProfile()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.storageProfile()"
  name: "storageProfile()"
  nameWithType: "ServerInner.storageProfile()"
  summary: "Get the storage<wbr>Profile property: Storage profile of a server."
  syntax: "public StorageProfile storageProfile()"
  desc: "Get the storageProfile property: Storage profile of a server."
  returns:
    description: "the storageProfile value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.StorageProfile?alt=com.azure.resourcemanager.postgresql.models.StorageProfile&text=StorageProfile\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.userVisibleState()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.userVisibleState()"
  name: "userVisibleState()"
  nameWithType: "ServerInner.userVisibleState()"
  summary: "Get the user<wbr>Visible<wbr>State property: A state of a server that is visible to user."
  syntax: "public ServerState userVisibleState()"
  desc: "Get the userVisibleState property: A state of a server that is visible to user."
  returns:
    description: "the userVisibleState value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerState?alt=com.azure.resourcemanager.postgresql.models.ServerState&text=ServerState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.validate()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.validate()"
  name: "validate()"
  nameWithType: "ServerInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.version()"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.version()"
  name: "version()"
  nameWithType: "ServerInner.version()"
  summary: "Get the version property: Server version."
  syntax: "public ServerVersion version()"
  desc: "Get the version property: Server version."
  returns:
    description: "the version value."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerVersion?alt=com.azure.resourcemanager.postgresql.models.ServerVersion&text=ServerVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withAdministratorLogin(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withAdministratorLogin(String administratorLogin)"
  name: "withAdministratorLogin(String administratorLogin)"
  nameWithType: "ServerInner.withAdministratorLogin(String administratorLogin)"
  summary: "Set the administrator<wbr>Login property: The administrator's login name of a server."
  parameters:
  - description: "the administratorLogin value to set."
    name: "administratorLogin"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withAdministratorLogin(String administratorLogin)"
  desc: "Set the administratorLogin property: The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation)."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withEarliestRestoreDate(java.time.OffsetDateTime)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  name: "withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  nameWithType: "ServerInner.withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  summary: "Set the earliest<wbr>Restore<wbr>Date property: Earliest restore point creation time (ISO8601 format)."
  parameters:
  - description: "the earliestRestoreDate value to set."
    name: "earliestRestoreDate"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withEarliestRestoreDate(OffsetDateTime earliestRestoreDate)"
  desc: "Set the earliestRestoreDate property: Earliest restore point creation time (ISO8601 format)."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withFullyQualifiedDomainName(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  name: "withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  nameWithType: "ServerInner.withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  summary: "Set the fully<wbr>Qualified<wbr>Domain<wbr>Name property: The fully qualified domain name of a server."
  parameters:
  - description: "the fullyQualifiedDomainName value to set."
    name: "fullyQualifiedDomainName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withFullyQualifiedDomainName(String fullyQualifiedDomainName)"
  desc: "Set the fullyQualifiedDomainName property: The fully qualified domain name of a server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withIdentity(com.azure.resourcemanager.postgresql.models.ResourceIdentity)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withIdentity(ResourceIdentity identity)"
  name: "withIdentity(ResourceIdentity identity)"
  nameWithType: "ServerInner.withIdentity(ResourceIdentity identity)"
  summary: "Set the identity property: The Azure Active Directory identity of the server."
  parameters:
  - description: "the identity value to set."
    name: "identity"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ResourceIdentity?alt=com.azure.resourcemanager.postgresql.models.ResourceIdentity&text=ResourceIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withIdentity(ResourceIdentity identity)"
  desc: "Set the identity property: The Azure Active Directory identity of the server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withInfrastructureEncryption(com.azure.resourcemanager.postgresql.models.InfrastructureEncryption)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  name: "withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  nameWithType: "ServerInner.withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  summary: "Set the infrastructure<wbr>Encryption property: Status showing whether the server enabled infrastructure encryption."
  parameters:
  - description: "the infrastructureEncryption value to set."
    name: "infrastructureEncryption"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.InfrastructureEncryption?alt=com.azure.resourcemanager.postgresql.models.InfrastructureEncryption&text=InfrastructureEncryption\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withInfrastructureEncryption(InfrastructureEncryption infrastructureEncryption)"
  desc: "Set the infrastructureEncryption property: Status showing whether the server enabled infrastructure encryption."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ServerInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withMasterServerId(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withMasterServerId(String masterServerId)"
  name: "withMasterServerId(String masterServerId)"
  nameWithType: "ServerInner.withMasterServerId(String masterServerId)"
  summary: "Set the master<wbr>Server<wbr>Id property: The master server id of a replica server."
  parameters:
  - description: "the masterServerId value to set."
    name: "masterServerId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withMasterServerId(String masterServerId)"
  desc: "Set the masterServerId property: The master server id of a replica server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withMinimalTlsVersion(com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  name: "withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  nameWithType: "ServerInner.withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  summary: "Set the minimal<wbr>Tls<wbr>Version property: Enforce a minimal Tls version for the server."
  parameters:
  - description: "the minimalTlsVersion value to set."
    name: "minimalTlsVersion"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum?alt=com.azure.resourcemanager.postgresql.models.MinimalTlsVersionEnum&text=MinimalTlsVersionEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withMinimalTlsVersion(MinimalTlsVersionEnum minimalTlsVersion)"
  desc: "Set the minimalTlsVersion property: Enforce a minimal Tls version for the server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withPublicNetworkAccess(com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  nameWithType: "ServerInner.withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  summary: "Set the public<wbr>Network<wbr>Access property: Whether or not public network access is allowed for this server."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum?alt=com.azure.resourcemanager.postgresql.models.PublicNetworkAccessEnum&text=PublicNetworkAccessEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withPublicNetworkAccess(PublicNetworkAccessEnum publicNetworkAccess)"
  desc: "Set the publicNetworkAccess property: Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withReplicaCapacity(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withReplicaCapacity(Integer replicaCapacity)"
  name: "withReplicaCapacity(Integer replicaCapacity)"
  nameWithType: "ServerInner.withReplicaCapacity(Integer replicaCapacity)"
  summary: "Set the replica<wbr>Capacity property: The maximum number of replicas that a master server can have."
  parameters:
  - description: "the replicaCapacity value to set."
    name: "replicaCapacity"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withReplicaCapacity(Integer replicaCapacity)"
  desc: "Set the replicaCapacity property: The maximum number of replicas that a master server can have."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withReplicationRole(java.lang.String)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withReplicationRole(String replicationRole)"
  name: "withReplicationRole(String replicationRole)"
  nameWithType: "ServerInner.withReplicationRole(String replicationRole)"
  summary: "Set the replication<wbr>Role property: The replication role of the server."
  parameters:
  - description: "the replicationRole value to set."
    name: "replicationRole"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withReplicationRole(String replicationRole)"
  desc: "Set the replicationRole property: The replication role of the server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withSku(com.azure.resourcemanager.postgresql.models.Sku)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "ServerInner.withSku(Sku sku)"
  summary: "Set the sku property: The SKU (pricing tier) of the server."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.Sku?alt=com.azure.resourcemanager.postgresql.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withSku(Sku sku)"
  desc: "Set the sku property: The SKU (pricing tier) of the server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withSslEnforcement(com.azure.resourcemanager.postgresql.models.SslEnforcementEnum)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  name: "withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  nameWithType: "ServerInner.withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  summary: "Set the ssl<wbr>Enforcement property: Enable ssl enforcement or not when connect to server."
  parameters:
  - description: "the sslEnforcement value to set."
    name: "sslEnforcement"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.SslEnforcementEnum?alt=com.azure.resourcemanager.postgresql.models.SslEnforcementEnum&text=SslEnforcementEnum\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withSslEnforcement(SslEnforcementEnum sslEnforcement)"
  desc: "Set the sslEnforcement property: Enable ssl enforcement or not when connect to server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withStorageProfile(com.azure.resourcemanager.postgresql.models.StorageProfile)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withStorageProfile(StorageProfile storageProfile)"
  name: "withStorageProfile(StorageProfile storageProfile)"
  nameWithType: "ServerInner.withStorageProfile(StorageProfile storageProfile)"
  summary: "Set the storage<wbr>Profile property: Storage profile of a server."
  parameters:
  - description: "the storageProfile value to set."
    name: "storageProfile"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.StorageProfile?alt=com.azure.resourcemanager.postgresql.models.StorageProfile&text=StorageProfile\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withStorageProfile(StorageProfile storageProfile)"
  desc: "Set the storageProfile property: Storage profile of a server."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ServerInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ServerInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withUserVisibleState(com.azure.resourcemanager.postgresql.models.ServerState)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withUserVisibleState(ServerState userVisibleState)"
  name: "withUserVisibleState(ServerState userVisibleState)"
  nameWithType: "ServerInner.withUserVisibleState(ServerState userVisibleState)"
  summary: "Set the user<wbr>Visible<wbr>State property: A state of a server that is visible to user."
  parameters:
  - description: "the userVisibleState value to set."
    name: "userVisibleState"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerState?alt=com.azure.resourcemanager.postgresql.models.ServerState&text=ServerState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withUserVisibleState(ServerState userVisibleState)"
  desc: "Set the userVisibleState property: A state of a server that is visible to user."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withVersion(com.azure.resourcemanager.postgresql.models.ServerVersion)"
  fullName: "com.azure.resourcemanager.postgresql.fluent.models.ServerInner.withVersion(ServerVersion version)"
  name: "withVersion(ServerVersion version)"
  nameWithType: "ServerInner.withVersion(ServerVersion version)"
  summary: "Set the version property: Server version."
  parameters:
  - description: "the version value to set."
    name: "version"
    type: "<xref href=\"com.azure.resourcemanager.postgresql.models.ServerVersion?alt=com.azure.resourcemanager.postgresql.models.ServerVersion&text=ServerVersion\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ServerInner withVersion(ServerVersion version)"
  desc: "Set the version property: Server version."
  returns:
    description: "the ServerInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.postgresql.fluent.models.ServerInner?alt=com.azure.resourcemanager.postgresql.fluent.models.ServerInner&text=ServerInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a server."
metadata: {}
package: "com.azure.resourcemanager.postgresql.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-postgresql:1.0.2
