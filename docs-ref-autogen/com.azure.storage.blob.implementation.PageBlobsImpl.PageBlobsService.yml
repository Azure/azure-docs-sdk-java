### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  id: "PageBlobsService"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.clearPages(java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.copyIncremental(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.create(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,long,com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,long,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRanges(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRangesDiff(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.net.URL,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.resize(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.updateSequenceNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPages(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPagesFromURL(java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "PageBlobsImpl.PageBlobsService"
  nameWithType: "PageBlobsImpl.PageBlobsService"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  type: "Interface"
  package: "com.azure.storage.blob.implementation"
  summary: "The interface defining all the services for AzureBlobStoragePageBlobs to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface PageBlobsImpl.PageBlobsService"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.clearPages(java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "clearPages(java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "clearPages(String containerName, String blob, String url, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.clearPages(String containerName, String blob, String url, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.clearPages(String containerName, String blob, String url, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.clearPages*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsClearPagesResponse> clearPages(String containerName, String blob, String url, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "contentLength"
      type: "long"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "range"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifSequenceNumberLessThanOrEqualTo"
      type: "java.lang.Long"
    - id: "ifSequenceNumberLessThan"
      type: "java.lang.Long"
    - id: "ifSequenceNumberEqualTo"
      type: "java.lang.Long"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "pageWrite"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.copyIncremental(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "copyIncremental(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "copyIncremental(String containerName, String blob, String url, Integer timeout, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String version, String requestId, String comp, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.copyIncremental(String containerName, String blob, String url, Integer timeout, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.copyIncremental(String containerName, String blob, String url, Integer timeout, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.copyIncremental*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsCopyIncrementalResponse> copyIncremental(String containerName, String blob, String url, Integer timeout, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, URL copySource, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "copySource"
      type: "java.net.URL"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.create(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,long,com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,long,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "create(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,long,com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier,java.util.Map<java.lang.String,java.lang.String>,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,long,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "create(String containerName, String blob, String url, Integer timeout, long contentLength, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, Long blobSequenceNumber, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.create(String containerName, String blob, String url, Integer timeout, long contentLength, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, Long blobSequenceNumber, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.create(String containerName, String blob, String url, Integer timeout, long contentLength, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, Long blobSequenceNumber, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.create*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsCreateResponse> create(String containerName, String blob, String url, Integer timeout, long contentLength, PremiumPageBlobAccessTier tier, Map<String,String> metadata, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, Long blobSequenceNumber, String version, String requestId, String blobType, String contentType, String contentEncoding, String contentLanguage, String contentMd5, String cacheControl, String contentDisposition, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "contentLength"
      type: "long"
    - id: "tier"
      type: "com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "blobContentLength"
      type: "long"
    - id: "blobSequenceNumber"
      type: "java.lang.Long"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "blobType"
      type: "java.lang.String"
    - id: "contentType"
      type: "java.lang.String"
    - id: "contentEncoding"
      type: "java.lang.String"
    - id: "contentLanguage"
      type: "java.lang.String"
    - id: "contentMd5"
      type: "java.lang.String"
    - id: "cacheControl"
      type: "java.lang.String"
    - id: "contentDisposition"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCreateResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRanges(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPageRanges(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "getPageRanges(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.getPageRanges(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRanges(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRanges*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsGetPageRangesResponse> getPageRanges(String containerName, String blob, String url, String snapshot, Integer timeout, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "snapshot"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "range"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRangesDiff(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.net.URL,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getPageRangesDiff(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.net.URL,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "getPageRangesDiff(String containerName, String blob, String url, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.getPageRangesDiff(String containerName, String blob, String url, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRangesDiff(String containerName, String blob, String url, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRangesDiff*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsGetPageRangesDiffResponse> getPageRangesDiff(String containerName, String blob, String url, String snapshot, Integer timeout, String prevsnapshot, URL prevSnapshotUrl, String range, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "snapshot"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "prevsnapshot"
      type: "java.lang.String"
    - id: "prevSnapshotUrl"
      type: "java.net.URL"
    - id: "range"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.resize(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "resize(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "resize(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.resize(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.resize(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.resize*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsResizeResponse> resize(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, long blobContentLength, String version, String requestId, String comp, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "blobContentLength"
      type: "long"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsResizeResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.updateSequenceNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "updateSequenceNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.storage.blob.models.SequenceNumberActionType,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "updateSequenceNumber(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, SequenceNumberActionType sequenceNumberAction, Long blobSequenceNumber, String version, String requestId, String comp, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.updateSequenceNumber(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, SequenceNumberActionType sequenceNumberAction, Long blobSequenceNumber, String version, String requestId, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.updateSequenceNumber(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, SequenceNumberActionType sequenceNumberAction, Long blobSequenceNumber, String version, String requestId, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.updateSequenceNumber*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsUpdateSequenceNumberResponse> updateSequenceNumber(String containerName, String blob, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, SequenceNumberActionType sequenceNumberAction, Long blobSequenceNumber, String version, String requestId, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "sequenceNumberAction"
      type: "com.azure.storage.blob.models.SequenceNumberActionType"
    - id: "blobSequenceNumber"
      type: "java.lang.Long"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPages(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "uploadPages(java.lang.String,java.lang.String,java.lang.String,reactor.core.publisher.Flux<java.nio.ByteBuffer>,long,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "uploadPages(String containerName, String blob, String url, Flux<ByteBuffer> body, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.uploadPages(String containerName, String blob, String url, Flux<ByteBuffer> body, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPages(String containerName, String blob, String url, Flux<ByteBuffer> body, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPages*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsUploadPagesResponse> uploadPages(String containerName, String blob, String url, Flux<ByteBuffer> body, long contentLength, String transactionalContentMD5, String transactionalContentCrc64, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "body"
      type: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
    - id: "contentLength"
      type: "long"
    - id: "transactionalContentMD5"
      type: "java.lang.String"
    - id: "transactionalContentCrc64"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "range"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifSequenceNumberLessThanOrEqualTo"
      type: "java.lang.Long"
    - id: "ifSequenceNumberLessThan"
      type: "java.lang.Long"
    - id: "ifSequenceNumberEqualTo"
      type: "java.lang.Long"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "pageWrite"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse>"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPagesFromURL(java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  id: "uploadPagesFromURL(java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String,long,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long,java.lang.Long,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.storage.blob.models.EncryptionAlgorithmType,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService"
  langs:
  - "java"
  name: "uploadPagesFromURL(String containerName, String blob, String url, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  nameWithType: "PageBlobsImpl.PageBlobsService.uploadPagesFromURL(String containerName, String blob, String url, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPagesFromURL(String containerName, String blob, String url, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
  overload: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPagesFromURL*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<PageBlobsUploadPagesFromURLResponse> uploadPagesFromURL(String containerName, String blob, String url, URL copySource, String sourceRange, String sourceContentMD5, String sourceContentcrc64, long contentLength, Integer timeout, String range, String leaseId, Long ifSequenceNumberLessThanOrEqualTo, Long ifSequenceNumberLessThan, Long ifSequenceNumberEqualTo, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String ifMatch, String ifNoneMatch, DateTimeRfc1123 sourceIfModifiedSince, DateTimeRfc1123 sourceIfUnmodifiedSince, String sourceIfMatch, String sourceIfNoneMatch, String version, String requestId, String comp, String pageWrite, String encryptionKey, String encryptionKeySha256, EncryptionAlgorithmType encryptionAlgorithm, String encryptionScope, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "blob"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "copySource"
      type: "java.net.URL"
    - id: "sourceRange"
      type: "java.lang.String"
    - id: "sourceContentMD5"
      type: "java.lang.String"
    - id: "sourceContentcrc64"
      type: "java.lang.String"
    - id: "contentLength"
      type: "long"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "range"
      type: "java.lang.String"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifSequenceNumberLessThanOrEqualTo"
      type: "java.lang.Long"
    - id: "ifSequenceNumberLessThan"
      type: "java.lang.Long"
    - id: "ifSequenceNumberEqualTo"
      type: "java.lang.Long"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifMatch"
      type: "java.lang.String"
    - id: "ifNoneMatch"
      type: "java.lang.String"
    - id: "sourceIfModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "sourceIfMatch"
      type: "java.lang.String"
    - id: "sourceIfNoneMatch"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "pageWrite"
      type: "java.lang.String"
    - id: "encryptionKey"
      type: "java.lang.String"
    - id: "encryptionKeySha256"
      type: "java.lang.String"
    - id: "encryptionAlgorithm"
      type: "com.azure.storage.blob.models.EncryptionAlgorithmType"
    - id: "encryptionScope"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier"
  name: "PremiumPageBlobAccessTier"
  nameWithType: "PremiumPageBlobAccessTier"
  fullName: "com.azure.storage.blob.implementation.models.PremiumPageBlobAccessTier"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.DateTimeRfc1123"
  spec.java:
  - uid: "com.azure.core.util.DateTimeRfc1123"
    name: "DateTimeRfc1123"
    fullName: "com.azure.core.util.DateTimeRfc1123"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.storage.blob.models.EncryptionAlgorithmType"
  name: "EncryptionAlgorithmType"
  nameWithType: "EncryptionAlgorithmType"
  fullName: "com.azure.storage.blob.models.EncryptionAlgorithmType"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
    name: "PageBlobsCreateResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.create*"
  name: "create"
  nameWithType: "PageBlobsImpl.PageBlobsService.create"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.create"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Flux<java.nio.ByteBuffer>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
  - name: ">"
    fullName: ">"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
    name: "PageBlobsUploadPagesResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPages*"
  name: "uploadPages"
  nameWithType: "PageBlobsImpl.PageBlobsService.uploadPages"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPages"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
    name: "PageBlobsClearPagesResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.clearPages*"
  name: "clearPages"
  nameWithType: "PageBlobsImpl.PageBlobsService.clearPages"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.clearPages"
  package: "com.azure.storage.blob.implementation"
- uid: "java.net.URL"
  spec.java:
  - uid: "java.net.URL"
    name: "URL"
    fullName: "java.net.URL"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
    name: "PageBlobsUploadPagesFromURLResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPagesFromURL*"
  name: "uploadPagesFromURL"
  nameWithType: "PageBlobsImpl.PageBlobsService.uploadPagesFromURL"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.uploadPagesFromURL"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
    name: "PageBlobsGetPageRangesResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRanges*"
  name: "getPageRanges"
  nameWithType: "PageBlobsImpl.PageBlobsService.getPageRanges"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRanges"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
    name: "PageBlobsGetPageRangesDiffResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRangesDiff*"
  name: "getPageRangesDiff"
  nameWithType: "PageBlobsImpl.PageBlobsService.getPageRangesDiff"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.getPageRangesDiff"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsResizeResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
    name: "PageBlobsResizeResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.resize*"
  name: "resize"
  nameWithType: "PageBlobsImpl.PageBlobsService.resize"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.resize"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.models.SequenceNumberActionType"
  name: "SequenceNumberActionType"
  nameWithType: "SequenceNumberActionType"
  fullName: "com.azure.storage.blob.models.SequenceNumberActionType"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
    name: "PageBlobsUpdateSequenceNumberResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.updateSequenceNumber*"
  name: "updateSequenceNumber"
  nameWithType: "PageBlobsImpl.PageBlobsService.updateSequenceNumber"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.updateSequenceNumber"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
    name: "PageBlobsCopyIncrementalResponse"
    fullName: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.copyIncremental*"
  name: "copyIncremental"
  nameWithType: "PageBlobsImpl.PageBlobsService.copyIncremental"
  fullName: "com.azure.storage.blob.implementation.PageBlobsImpl.PageBlobsService.copyIncremental"
  package: "com.azure.storage.blob.implementation"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
  name: "PageBlobsCreateResponse"
  nameWithType: "PageBlobsCreateResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsCreateResponse"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "java.nio.ByteBuffer"
  name: "ByteBuffer"
  nameWithType: "ByteBuffer"
  fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
  name: "PageBlobsUploadPagesResponse"
  nameWithType: "PageBlobsUploadPagesResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
  name: "PageBlobsClearPagesResponse"
  nameWithType: "PageBlobsClearPagesResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsClearPagesResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
  name: "PageBlobsUploadPagesFromURLResponse"
  nameWithType: "PageBlobsUploadPagesFromURLResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsUploadPagesFromURLResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
  name: "PageBlobsGetPageRangesResponse"
  nameWithType: "PageBlobsGetPageRangesResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
  name: "PageBlobsGetPageRangesDiffResponse"
  nameWithType: "PageBlobsGetPageRangesDiffResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsGetPageRangesDiffResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
  name: "PageBlobsResizeResponse"
  nameWithType: "PageBlobsResizeResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsResizeResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
  name: "PageBlobsUpdateSequenceNumberResponse"
  nameWithType: "PageBlobsUpdateSequenceNumberResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsUpdateSequenceNumberResponse"
- uid: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
  name: "PageBlobsCopyIncrementalResponse"
  nameWithType: "PageBlobsCopyIncrementalResponse"
  fullName: "com.azure.storage.blob.implementation.models.PageBlobsCopyIncrementalResponse"
