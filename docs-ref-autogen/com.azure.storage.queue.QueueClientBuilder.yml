### YamlMime:ManagedReference
items:
- uid: com.azure.storage.queue.QueueClientBuilder
  id: QueueClientBuilder
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue
  children:
  - com.azure.storage.queue.QueueClientBuilder.QueueClientBuilder()
  - com.azure.storage.queue.QueueClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  - com.azure.storage.queue.QueueClientBuilder.buildAsyncClient()
  - com.azure.storage.queue.QueueClientBuilder.buildClient()
  - com.azure.storage.queue.QueueClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.storage.queue.QueueClientBuilder.connectionString(java.lang.String)
  - com.azure.storage.queue.QueueClientBuilder.credential(com.azure.core.credential.TokenCredential)
  - com.azure.storage.queue.QueueClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)
  - com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)
  - com.azure.storage.queue.QueueClientBuilder.getDefaultHttpLogOptions()
  - com.azure.storage.queue.QueueClientBuilder.httpClient(com.azure.core.http.HttpClient)
  - com.azure.storage.queue.QueueClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  - com.azure.storage.queue.QueueClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  - com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)
  - com.azure.storage.queue.QueueClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  - com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)
  - com.azure.storage.queue.QueueClientBuilder.serviceVersion(com.azure.storage.queue.QueueServiceVersion)
  langs:
  - java
  name: QueueClientBuilder
  nameWithType: QueueClientBuilder
  fullName: com.azure.storage.queue.QueueClientBuilder
  type: Class
  package: com.azure.storage.queue
  summary: >-
    This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid="com.azure.storage.queue.QueueClient" data-throw-if-not-resolved="false">QueueClients</xref> and <xref uid="com.azure.storage.queue.QueueAsyncClient" data-throw-if-not-resolved="false">QueueAsyncClients</xref>, calling <xref uid="com.azure.storage.queue.QueueClientBuilder.buildClient()" data-throw-if-not-resolved="false">buildClient</xref> constructs an instance of QueueClient and calling <xref uid="com.azure.storage.queue.QueueClientBuilder.buildAsyncClient()" data-throw-if-not-resolved="false">buildAsyncClient</xref> constructs an instance of QueueAsyncClient.


    The client needs the endpoint of the Azure Storage Queue service, name of the queue, and authorization credentials. <xref uid="com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref> gives the builder the endpoint and may give the builder the <xref uid="com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)" data-throw-if-not-resolved="false">queueName</xref> and a <xref uid="com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)" data-throw-if-not-resolved="false">SAS token</xref> that authorizes the client.


    **Instantiating a synchronous Queue Client with SAS token**


    ```java

    QueueClient client = new QueueClientBuilder()
         .endpoint("https://${accountName}.queue.core.windows.net?${SASToken}")
         .buildClient();
    ```


    **Instantiating an Asynchronous Queue Client with SAS token**


    ```java

    QueueAsyncClient queueAsyncClient = new QueueClientBuilder()
         .endpoint("https://{accountName}.queue.core.windows.net?{SASToken}")
         .buildAsyncClient();
    ```


    If the `endpoint` doesn't contain the queue name or `SAS token` they may be set using <xref uid="com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)" data-throw-if-not-resolved="false">queueName</xref> and <xref uid="com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)" data-throw-if-not-resolved="false">SAS token</xref>.


    **Instantiating a synchronous Queue Client with credential**


    ```java

    QueueClient client = new QueueClientBuilder()
         .endpoint("https://${accountName}.queue.core.windows.net")
         .queueName("myqueue")
         .sasToken("{SASTokenQueryParams}")
         .buildClient();
    ```


    **Instantiating an Asynchronous Queue Client with credential**


    ```java

    QueueAsyncClient queueAsyncClient = new QueueClientBuilder()
         .endpoint("https://{accountName}.queue.core.windows.net")
         .queueName("myqueue")
         .sasToken("{SASTokenQueryParams}")
         .buildAsyncClient();
    ```


    Another way to authenticate the client is using a <xref uid="com.azure.storage.common.StorageSharedKeyCredential" data-throw-if-not-resolved="false">StorageSharedKeyCredential</xref>. To create a StorageSharedKeyCredential a connection string from the Storage Queue service must be used. Set the StorageSharedKeyCredential with <xref uid="com.azure.storage.queue.QueueClientBuilder.connectionString(java.lang.String)" data-throw-if-not-resolved="false">connectionString</xref>. If the builder has both a SAS token and StorageSharedKeyCredential the StorageSharedKeyCredential will be preferred when authorizing requests sent to the service.


    **Instantiating a synchronous Queue Client with connection string.**


    ```java

    String connectionString = "DefaultEndpointsProtocol=https;AccountName={name};"
         + "AccountKey={key};EndpointSuffix={core.windows.net}";
     QueueClient client = new QueueClientBuilder()
         .connectionString(connectionString)
         .buildClient();
    ```


    **Instantiating an Asynchronous Queue Client with connection string.**


    ```java

    String connectionString = "DefaultEndpointsProtocol=https;AccountName={name};"
         + "AccountKey={key};EndpointSuffix={core.windows.net}";
     QueueAsyncClient queueAsyncClient = new QueueClientBuilder()
         .connectionString(connectionString)
         .buildAsyncClient();
    ```
  syntax:
    content: public final class QueueClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.queue.QueueClientBuilder.QueueClientBuilder()
  id: QueueClientBuilder()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: QueueClientBuilder()
  nameWithType: QueueClientBuilder.QueueClientBuilder()
  fullName: com.azure.storage.queue.QueueClientBuilder.QueueClientBuilder()
  overload: com.azure.storage.queue.QueueClientBuilder.QueueClientBuilder*
  type: Constructor
  package: com.azure.storage.queue
  summary: Creates a builder instance that is able to configure and construct <xref uid="com.azure.storage.queue.QueueClient" data-throw-if-not-resolved="false">QueueClients</xref> and <xref uid="com.azure.storage.queue.QueueAsyncClient" data-throw-if-not-resolved="false">QueueAsyncClients</xref>.
  syntax:
    content: public QueueClientBuilder()
- uid: com.azure.storage.queue.QueueClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  id: addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy pipelinePolicy)
  nameWithType: QueueClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  fullName: com.azure.storage.queue.QueueClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  overload: com.azure.storage.queue.QueueClientBuilder.addPolicy*
  type: Method
  package: com.azure.storage.queue
  summary: Adds a pipeline policy to apply on each request sent. The policy will be added after the retry policy. If the method is called multiple times, all policies will be added and their order preserved.
  syntax:
    content: public QueueClientBuilder addPolicy(HttpPipelinePolicy pipelinePolicy)
    parameters:
    - id: pipelinePolicy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: a pipeline policy
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.buildAsyncClient()
  id: buildAsyncClient()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: buildAsyncClient()
  nameWithType: QueueClientBuilder.buildAsyncClient()
  fullName: com.azure.storage.queue.QueueClientBuilder.buildAsyncClient()
  overload: com.azure.storage.queue.QueueClientBuilder.buildAsyncClient*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Creates a <xref uid="com.azure.storage.queue.QueueAsyncClient" data-throw-if-not-resolved="false">QueueAsyncClient</xref> based on options set in the builder. Every time `buildAsyncClient()` is called a new instance of <xref uid="com.azure.storage.queue.QueueAsyncClient" data-throw-if-not-resolved="false">QueueAsyncClient</xref> is created.


    If <xref uid="com.azure.storage.queue.QueueClientBuilder.pipeline(com.azure.core.http.HttpPipeline)" data-throw-if-not-resolved="false">pipeline</xref> is set, then the `pipeline`, <xref uid="com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref>, and <xref uid="com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)" data-throw-if-not-resolved="false">queueName</xref> are used to create the <xref uid="com.azure.storage.queue.QueueAsyncClient" data-throw-if-not-resolved="false">client</xref>. All other builder settings are ignored.
  syntax:
    content: public QueueAsyncClient buildAsyncClient()
    return:
      type: com.azure.storage.queue.QueueAsyncClient
      description: A QueueAsyncClient with the options set from the builder.
- uid: com.azure.storage.queue.QueueClientBuilder.buildClient()
  id: buildClient()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: buildClient()
  nameWithType: QueueClientBuilder.buildClient()
  fullName: com.azure.storage.queue.QueueClientBuilder.buildClient()
  overload: com.azure.storage.queue.QueueClientBuilder.buildClient*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Creates a <xref uid="com.azure.storage.queue.QueueClient" data-throw-if-not-resolved="false">QueueClient</xref> based on options set in the builder. Every time `buildClient()` is called a new instance of <xref uid="com.azure.storage.queue.QueueClient" data-throw-if-not-resolved="false">QueueClient</xref> is created.


    If <xref uid="com.azure.storage.queue.QueueClientBuilder.pipeline(com.azure.core.http.HttpPipeline)" data-throw-if-not-resolved="false">pipeline</xref> is set, then the `pipeline`, <xref uid="com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref>, and <xref uid="com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)" data-throw-if-not-resolved="false">queueName</xref> are used to create the <xref uid="com.azure.storage.queue.QueueAsyncClient" data-throw-if-not-resolved="false">client</xref>. All other builder settings are ignored.
  syntax:
    content: public QueueClient buildClient()
    return:
      type: com.azure.storage.queue.QueueClient
      description: A QueueClient with the options set from the builder.
- uid: com.azure.storage.queue.QueueClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: QueueClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.storage.queue.QueueClientBuilder.configuration(Configuration configuration)
  overload: com.azure.storage.queue.QueueClientBuilder.configuration*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the configuration object used to retrieve environment configuration values during building of the client.
  syntax:
    content: public QueueClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: Configuration store used to retrieve environment configurations.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.connectionString(java.lang.String)
  id: connectionString(java.lang.String)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: connectionString(String connectionString)
  nameWithType: QueueClientBuilder.connectionString(String connectionString)
  fullName: com.azure.storage.queue.QueueClientBuilder.connectionString(String connectionString)
  overload: com.azure.storage.queue.QueueClientBuilder.connectionString*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the connection string to connect to the service.
  syntax:
    content: public QueueClientBuilder connectionString(String connectionString)
    parameters:
    - id: connectionString
      type: java.lang.String
      description: Connection string of the storage account.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder
- uid: com.azure.storage.queue.QueueClientBuilder.credential(com.azure.core.credential.TokenCredential)
  id: credential(com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: credential(TokenCredential credential)
  nameWithType: QueueClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.storage.queue.QueueClientBuilder.credential(TokenCredential credential)
  overload: com.azure.storage.queue.QueueClientBuilder.credential*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref> used to authorize requests sent to the service.
  syntax:
    content: public QueueClientBuilder credential(TokenCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credential.TokenCredential
      description: <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref>.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder
- uid: com.azure.storage.queue.QueueClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)
  id: credential(com.azure.storage.common.StorageSharedKeyCredential)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: credential(StorageSharedKeyCredential credential)
  nameWithType: QueueClientBuilder.credential(StorageSharedKeyCredential credential)
  fullName: com.azure.storage.queue.QueueClientBuilder.credential(StorageSharedKeyCredential credential)
  overload: com.azure.storage.queue.QueueClientBuilder.credential*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the <xref uid="com.azure.storage.common.StorageSharedKeyCredential" data-throw-if-not-resolved="false">StorageSharedKeyCredential</xref> used to authorize requests sent to the service.
  syntax:
    content: public QueueClientBuilder credential(StorageSharedKeyCredential credential)
    parameters:
    - id: credential
      type: com.azure.storage.common.StorageSharedKeyCredential
      description: <xref uid="com.azure.storage.common.StorageSharedKeyCredential" data-throw-if-not-resolved="false">StorageSharedKeyCredential</xref>.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder
- uid: com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)
  id: endpoint(java.lang.String)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: endpoint(String endpoint)
  nameWithType: QueueClientBuilder.endpoint(String endpoint)
  fullName: com.azure.storage.queue.QueueClientBuilder.endpoint(String endpoint)
  overload: com.azure.storage.queue.QueueClientBuilder.endpoint*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Sets the endpoint for the Azure Storage Queue instance that the client will interact with.


    The first path segment, if the endpoint contains path segments, will be assumed to be the name of the queue that the client will interact with.


    Query parameters of the endpoint will be parsed in an attempt to generate a <xref uid="com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)" data-throw-if-not-resolved="false">SAS token</xref> to authenticate requests sent to the service.
  syntax:
    content: public QueueClientBuilder endpoint(String endpoint)
    parameters:
    - id: endpoint
      type: java.lang.String
      description: >-
        The URL of the Azure Storage Queue instance to send service requests to and receive responses
         from.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.getDefaultHttpLogOptions()
  id: getDefaultHttpLogOptions()
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: getDefaultHttpLogOptions()
  nameWithType: QueueClientBuilder.getDefaultHttpLogOptions()
  fullName: com.azure.storage.queue.QueueClientBuilder.getDefaultHttpLogOptions()
  overload: com.azure.storage.queue.QueueClientBuilder.getDefaultHttpLogOptions*
  type: Method
  package: com.azure.storage.queue
  summary: Gets the default Storage whitelist log headers and query parameters.
  syntax:
    content: public static HttpLogOptions getDefaultHttpLogOptions()
    return:
      type: com.azure.core.http.policy.HttpLogOptions
      description: the default http log options.
- uid: com.azure.storage.queue.QueueClientBuilder.httpClient(com.azure.core.http.HttpClient)
  id: httpClient(com.azure.core.http.HttpClient)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: httpClient(HttpClient httpClient)
  nameWithType: QueueClientBuilder.httpClient(HttpClient httpClient)
  fullName: com.azure.storage.queue.QueueClientBuilder.httpClient(HttpClient httpClient)
  overload: com.azure.storage.queue.QueueClientBuilder.httpClient*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">HttpClient</xref> to use for sending a receiving requests to and from the service.
  syntax:
    content: public QueueClientBuilder httpClient(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: com.azure.core.http.HttpClient
      description: HttpClient to use for requests.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  id: httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: httpLogOptions(HttpLogOptions logOptions)
  nameWithType: QueueClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  fullName: com.azure.storage.queue.QueueClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  overload: com.azure.storage.queue.QueueClientBuilder.httpLogOptions*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the <xref uid="com.azure.core.http.policy.HttpLogOptions" data-throw-if-not-resolved="false">HttpLogOptions</xref> for service requests.
  syntax:
    content: public QueueClientBuilder httpLogOptions(HttpLogOptions logOptions)
    parameters:
    - id: logOptions
      type: com.azure.core.http.policy.HttpLogOptions
      description: The logging configuration to use when sending and receiving HTTP requests/responses.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  id: pipeline(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: pipeline(HttpPipeline httpPipeline)
  nameWithType: QueueClientBuilder.pipeline(HttpPipeline httpPipeline)
  fullName: com.azure.storage.queue.QueueClientBuilder.pipeline(HttpPipeline httpPipeline)
  overload: com.azure.storage.queue.QueueClientBuilder.pipeline*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> to use for the service client. If `pipeline` is set, all other settings are ignored, aside from <xref uid="com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref>.
  syntax:
    content: public QueueClientBuilder pipeline(HttpPipeline httpPipeline)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: HttpPipeline to use for sending service requests and receiving responses.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)
  id: queueName(java.lang.String)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: queueName(String queueName)
  nameWithType: QueueClientBuilder.queueName(String queueName)
  fullName: com.azure.storage.queue.QueueClientBuilder.queueName(String queueName)
  overload: com.azure.storage.queue.QueueClientBuilder.queueName*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the name of the queue that the client will interact with.
  syntax:
    content: public QueueClientBuilder queueName(String queueName)
    parameters:
    - id: queueName
      type: java.lang.String
      description: Name of the queue
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  id: retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: retryOptions(RequestRetryOptions retryOptions)
  nameWithType: QueueClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  fullName: com.azure.storage.queue.QueueClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  overload: com.azure.storage.queue.QueueClientBuilder.retryOptions*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the request retry options for all the requests made through the client.
  syntax:
    content: public QueueClientBuilder retryOptions(RequestRetryOptions retryOptions)
    parameters:
    - id: retryOptions
      type: com.azure.storage.common.policy.RequestRetryOptions
      description: <xref uid="com.azure.storage.common.policy.RequestRetryOptions" data-throw-if-not-resolved="false">RequestRetryOptions</xref>.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
- uid: com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)
  id: sasToken(java.lang.String)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: sasToken(String sasToken)
  nameWithType: QueueClientBuilder.sasToken(String sasToken)
  fullName: com.azure.storage.queue.QueueClientBuilder.sasToken(String sasToken)
  overload: com.azure.storage.queue.QueueClientBuilder.sasToken*
  type: Method
  package: com.azure.storage.queue
  summary: Sets the SAS token used to authorize requests sent to the service.
  syntax:
    content: public QueueClientBuilder sasToken(String sasToken)
    parameters:
    - id: sasToken
      type: java.lang.String
      description: The SAS token to use for authenticating requests.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder
- uid: com.azure.storage.queue.QueueClientBuilder.serviceVersion(com.azure.storage.queue.QueueServiceVersion)
  id: serviceVersion(com.azure.storage.queue.QueueServiceVersion)
  artifact: com.azure:azure-storage-queue:12.6.0
  parent: com.azure.storage.queue.QueueClientBuilder
  langs:
  - java
  name: serviceVersion(QueueServiceVersion version)
  nameWithType: QueueClientBuilder.serviceVersion(QueueServiceVersion version)
  fullName: com.azure.storage.queue.QueueClientBuilder.serviceVersion(QueueServiceVersion version)
  overload: com.azure.storage.queue.QueueClientBuilder.serviceVersion*
  type: Method
  package: com.azure.storage.queue
  summary: >-
    Sets the <xref uid="com.azure.storage.queue.QueueServiceVersion" data-throw-if-not-resolved="false">QueueServiceVersion</xref> that is used when making API requests.


    If a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version.


    Targeting a specific service version may also mean that the service will return an error for newer APIs.
  syntax:
    content: public QueueClientBuilder serviceVersion(QueueServiceVersion version)
    parameters:
    - id: version
      type: com.azure.storage.queue.QueueServiceVersion
      description: <xref uid="com.azure.storage.queue.QueueServiceVersion" data-throw-if-not-resolved="false">QueueServiceVersion</xref> of the service to be used when making requests.
    return:
      type: com.azure.storage.queue.QueueClientBuilder
      description: the updated QueueClientBuilder object
references:
- uid: com.azure.storage.queue.QueueClientBuilder.QueueClientBuilder*
  name: QueueClientBuilder
  nameWithType: QueueClientBuilder.QueueClientBuilder
  fullName: com.azure.storage.queue.QueueClientBuilder.QueueClientBuilder
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueClient
  name: QueueClient
  nameWithType: QueueClient
  fullName: com.azure.storage.queue.QueueClient
- uid: com.azure.storage.queue.QueueClientBuilder.buildClient*
  name: buildClient
  nameWithType: QueueClientBuilder.buildClient
  fullName: com.azure.storage.queue.QueueClientBuilder.buildClient
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueAsyncClient
  name: QueueAsyncClient
  nameWithType: QueueAsyncClient
  fullName: com.azure.storage.queue.QueueAsyncClient
- uid: com.azure.storage.queue.QueueClientBuilder.buildAsyncClient*
  name: buildAsyncClient
  nameWithType: QueueClientBuilder.buildAsyncClient
  fullName: com.azure.storage.queue.QueueClientBuilder.buildAsyncClient
  package: com.azure.storage.queue
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.queue.QueueClientBuilder.endpoint*
  name: endpoint
  nameWithType: QueueClientBuilder.endpoint
  fullName: com.azure.storage.queue.QueueClientBuilder.endpoint
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueClientBuilder.queueName*
  name: queueName
  nameWithType: QueueClientBuilder.queueName
  fullName: com.azure.storage.queue.QueueClientBuilder.queueName
  package: com.azure.storage.queue
- uid: com.azure.storage.common.StorageSharedKeyCredential
  spec.java:
  - uid: com.azure.storage.common.StorageSharedKeyCredential
    name: StorageSharedKeyCredential
    fullName: com.azure.storage.common.StorageSharedKeyCredential
- uid: com.azure.storage.queue.QueueClientBuilder.credential*
  name: credential
  nameWithType: QueueClientBuilder.credential
  fullName: com.azure.storage.queue.QueueClientBuilder.credential
  package: com.azure.storage.queue
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: com.azure.storage.queue.QueueClientBuilder.sasToken*
  name: sasToken
  nameWithType: QueueClientBuilder.sasToken
  fullName: com.azure.storage.queue.QueueClientBuilder.sasToken
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueClientBuilder.connectionString*
  name: connectionString
  nameWithType: QueueClientBuilder.connectionString
  fullName: com.azure.storage.queue.QueueClientBuilder.connectionString
  package: com.azure.storage.queue
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.storage.queue.QueueClientBuilder.httpClient*
  name: httpClient
  nameWithType: QueueClientBuilder.httpClient
  fullName: com.azure.storage.queue.QueueClientBuilder.httpClient
  package: com.azure.storage.queue
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.storage.queue.QueueClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: QueueClientBuilder.addPolicy
  fullName: com.azure.storage.queue.QueueClientBuilder.addPolicy
  package: com.azure.storage.queue
- uid: com.azure.core.http.policy.HttpLogOptions
  spec.java:
  - uid: com.azure.core.http.policy.HttpLogOptions
    name: HttpLogOptions
    fullName: com.azure.core.http.policy.HttpLogOptions
- uid: com.azure.storage.queue.QueueClientBuilder.httpLogOptions*
  name: httpLogOptions
  nameWithType: QueueClientBuilder.httpLogOptions
  fullName: com.azure.storage.queue.QueueClientBuilder.httpLogOptions
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueClientBuilder.getDefaultHttpLogOptions*
  name: getDefaultHttpLogOptions
  nameWithType: QueueClientBuilder.getDefaultHttpLogOptions
  fullName: com.azure.storage.queue.QueueClientBuilder.getDefaultHttpLogOptions
  package: com.azure.storage.queue
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.storage.queue.QueueClientBuilder.configuration*
  name: configuration
  nameWithType: QueueClientBuilder.configuration
  fullName: com.azure.storage.queue.QueueClientBuilder.configuration
  package: com.azure.storage.queue
- uid: com.azure.storage.common.policy.RequestRetryOptions
  spec.java:
  - uid: com.azure.storage.common.policy.RequestRetryOptions
    name: RequestRetryOptions
    fullName: com.azure.storage.common.policy.RequestRetryOptions
- uid: com.azure.storage.queue.QueueClientBuilder.retryOptions*
  name: retryOptions
  nameWithType: QueueClientBuilder.retryOptions
  fullName: com.azure.storage.queue.QueueClientBuilder.retryOptions
  package: com.azure.storage.queue
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.storage.queue.QueueClientBuilder.pipeline*
  name: pipeline
  nameWithType: QueueClientBuilder.pipeline
  fullName: com.azure.storage.queue.QueueClientBuilder.pipeline
  package: com.azure.storage.queue
- uid: com.azure.storage.queue.QueueServiceVersion
  name: QueueServiceVersion
  nameWithType: QueueServiceVersion
  fullName: com.azure.storage.queue.QueueServiceVersion
- uid: com.azure.storage.queue.QueueClientBuilder.serviceVersion*
  name: serviceVersion
  nameWithType: QueueClientBuilder.serviceVersion
  fullName: com.azure.storage.queue.QueueClientBuilder.serviceVersion
  package: com.azure.storage.queue
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
