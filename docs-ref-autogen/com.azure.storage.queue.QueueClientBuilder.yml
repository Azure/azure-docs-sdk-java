### YamlMime:JavaType
uid: "com.azure.storage.queue.QueueClientBuilder"
fullName: "com.azure.storage.queue.QueueClientBuilder"
name: "QueueClientBuilder"
nameWithType: "QueueClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.storage.queue.QueueClient\" data-throw-if-not-resolved=\"false\">QueueClients</xref> and <xref uid=\"com.azure.storage.queue.QueueAsyncClient\" data-throw-if-not-resolved=\"false\">QueueAsyncClients</xref>, calling <xref uid=\"com.azure.storage.queue.QueueClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> constructs an instance of QueueClient and calling <xref uid=\"com.azure.storage.queue.QueueClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> constructs an instance of QueueAsyncClient.\n\nThe client needs the endpoint of the Azure Storage Queue service, name of the queue, and authorization credentials. <xref uid=\"com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> gives the builder the endpoint and may give the builder the <xref uid=\"com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)\" data-throw-if-not-resolved=\"false\">queueName</xref> and a <xref uid=\"com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\">SAS token</xref> that authorizes the client.\n\n**Instantiating a synchronous Queue Client with SAS token**\n\n```java\nQueueClient client = new QueueClientBuilder()\n     .endpoint(\"https://${accountName}.queue.core.windows.net?${SASToken}\")\n     .buildClient();\n```\n\n**Instantiating an Asynchronous Queue Client with SAS token**\n\n```java\nQueueAsyncClient queueAsyncClient = new QueueClientBuilder()\n     .endpoint(\"https://{accountName}.queue.core.windows.net?{SASToken}\")\n     .buildAsyncClient();\n```\n\nIf the `endpoint` doesn't contain the queue name or `SAS token` they may be set using <xref uid=\"com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)\" data-throw-if-not-resolved=\"false\">queueName</xref> and <xref uid=\"com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\">SAS token</xref>.\n\n**Instantiating a synchronous Queue Client with credential**\n\n```java\nQueueClient client = new QueueClientBuilder()\n     .endpoint(\"https://${accountName}.queue.core.windows.net\")\n     .queueName(\"myqueue\")\n     .sasToken(\"{SASTokenQueryParams}\")\n     .buildClient();\n```\n\n**Instantiating an Asynchronous Queue Client with credential**\n\n```java\nQueueAsyncClient queueAsyncClient = new QueueClientBuilder()\n     .endpoint(\"https://{accountName}.queue.core.windows.net\")\n     .queueName(\"myqueue\")\n     .sasToken(\"{SASTokenQueryParams}\")\n     .buildAsyncClient();\n```\n\nAnother way to authenticate the client is using a <xref uid=\"com.azure.storage.common.StorageSharedKeyCredential\" data-throw-if-not-resolved=\"false\">StorageSharedKeyCredential</xref>. To create a StorageSharedKeyCredential a connection string from the Storage Queue service must be used. Set the StorageSharedKeyCredential with <xref uid=\"com.azure.storage.queue.QueueClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\">connectionString</xref>. If the builder has both a SAS token and StorageSharedKeyCredential the StorageSharedKeyCredential will be preferred when authorizing requests sent to the service.\n\n**Instantiating a synchronous Queue Client with connection string.**\n\n```java\nString connectionString = \"DefaultEndpointsProtocol=https;AccountName={name};\"\n     + \"AccountKey={key};EndpointSuffix={core.windows.net}\";\n QueueClient client = new QueueClientBuilder()\n     .connectionString(connectionString)\n     .buildClient();\n```\n\n**Instantiating an Asynchronous Queue Client with connection string.**\n\n```java\nString connectionString = \"DefaultEndpointsProtocol=https;AccountName={name};\"\n     + \"AccountKey={key};EndpointSuffix={core.windows.net}\";\n QueueAsyncClient queueAsyncClient = new QueueClientBuilder()\n     .connectionString(connectionString)\n     .buildAsyncClient();\n```"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class QueueClientBuilder"
constructors:
- "com.azure.storage.queue.QueueClientBuilder.QueueClientBuilder()"
methods:
- "com.azure.storage.queue.QueueClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.storage.queue.QueueClientBuilder.buildAsyncClient()"
- "com.azure.storage.queue.QueueClientBuilder.buildClient()"
- "com.azure.storage.queue.QueueClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.storage.queue.QueueClientBuilder.connectionString(java.lang.String)"
- "com.azure.storage.queue.QueueClientBuilder.credential(com.azure.core.credential.TokenCredential)"
- "com.azure.storage.queue.QueueClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)"
- "com.azure.storage.queue.QueueClientBuilder.endpoint(java.lang.String)"
- "com.azure.storage.queue.QueueClientBuilder.getDefaultHttpLogOptions()"
- "com.azure.storage.queue.QueueClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.storage.queue.QueueClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.storage.queue.QueueClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.storage.queue.QueueClientBuilder.queueName(java.lang.String)"
- "com.azure.storage.queue.QueueClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
- "com.azure.storage.queue.QueueClientBuilder.sasToken(java.lang.String)"
- "com.azure.storage.queue.QueueClientBuilder.serviceVersion(com.azure.storage.queue.QueueServiceVersion)"
type: "class"
metadata: {}
package: "com.azure.storage.queue"
artifact: com.azure:azure-storage-queue:12.6.0
