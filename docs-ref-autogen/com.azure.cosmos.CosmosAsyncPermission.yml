### YamlMime:JavaType
uid: "com.azure.cosmos.CosmosAsyncPermission"
fullName: "com.azure.cosmos.CosmosAsyncPermission"
name: "CosmosAsyncPermission"
nameWithType: "CosmosAsyncPermission"
summary: "Has methods to operate on a per-User Permission to access a specific resource"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CosmosAsyncPermission"
methods:
- uid: "com.azure.cosmos.CosmosAsyncPermission.delete(com.azure.cosmos.models.CosmosPermissionRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncPermission.delete(CosmosPermissionRequestOptions options)"
  name: "delete(CosmosPermissionRequestOptions options)"
  nameWithType: "CosmosAsyncPermission.delete(CosmosPermissionRequestOptions options)"
  summary: "Deletes a permission."
  parameters:
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionRequestOptions?alt=com.azure.cosmos.models.CosmosPermissionRequestOptions&text=CosmosPermissionRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosPermissionResponse> delete(CosmosPermissionRequestOptions options)"
  desc: "Deletes a permission.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response for the deleted permission. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  returns:
    description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response for the deleted permission or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionResponse?alt=com.azure.cosmos.models.CosmosPermissionResponse&text=CosmosPermissionResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncPermission.getId()"
  fullName: "com.azure.cosmos.CosmosAsyncPermission.getId()"
  name: "getId()"
  nameWithType: "CosmosAsyncPermission.getId()"
  summary: "Get the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncPermission\"></xref>"
  syntax: "public String getId()"
  desc: "Get the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncPermission\"></xref>"
  returns:
    description: "the id of the <xref uid=\"com.azure.cosmos.CosmosAsyncPermission\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosAsyncPermission\"></xref>"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.CosmosAsyncPermission.read(com.azure.cosmos.models.CosmosPermissionRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncPermission.read(CosmosPermissionRequestOptions options)"
  name: "read(CosmosPermissionRequestOptions options)"
  nameWithType: "CosmosAsyncPermission.read(CosmosPermissionRequestOptions options)"
  summary: "Reads a permission."
  parameters:
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionRequestOptions?alt=com.azure.cosmos.models.CosmosPermissionRequestOptions&text=CosmosPermissionRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosPermissionResponse> read(CosmosPermissionRequestOptions options)"
  desc: "Reads a permission.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response with the read permission. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  returns:
    description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the read permission or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionResponse?alt=com.azure.cosmos.models.CosmosPermissionResponse&text=CosmosPermissionResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.CosmosAsyncPermission.replace(com.azure.cosmos.models.CosmosPermissionProperties,com.azure.cosmos.models.CosmosPermissionRequestOptions)"
  fullName: "com.azure.cosmos.CosmosAsyncPermission.replace(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  name: "replace(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  nameWithType: "CosmosAsyncPermission.replace(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  summary: "Replaces a permission."
  parameters:
  - description: "the permission properties to use."
    name: "permissionProperties"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionProperties?alt=com.azure.cosmos.models.CosmosPermissionProperties&text=CosmosPermissionProperties\" data-throw-if-not-resolved=\"False\" />"
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPermissionRequestOptions?alt=com.azure.cosmos.models.CosmosPermissionRequestOptions&text=CosmosPermissionRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<CosmosPermissionResponse> replace(CosmosPermissionProperties permissionProperties, CosmosPermissionRequestOptions options)"
  desc: "Replaces a permission.\n\nAfter subscription the operation will be performed. The <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon successful completion will contain a single resource response with the replaced permission. In case of failure the <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> will error."
  returns:
    description: "an <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> containing the single resource response with the replaced permission or an error."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosPermissionResponse?alt=com.azure.cosmos.models.CosmosPermissionResponse&text=CosmosPermissionResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Has methods to operate on a per-User Permission to access a specific resource"
metadata: {}
package: "com.azure.cosmos"
artifact: com.azure:azure-cosmos:4.34.0
