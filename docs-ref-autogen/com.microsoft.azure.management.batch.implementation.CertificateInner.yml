### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="ProxyResource" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.deleteCertificateError()
  name: deleteCertificateError()
  nameWithType: CertificateInner.deleteCertificateError()
  returns:
    description: <p>the deleteCertificateError value </p>
    type: <xref href="com.microsoft.azure.management.batch.DeleteCertificateError?alt=com.microsoft.azure.management.batch.DeleteCertificateError&text=DeleteCertificateError" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is only returned when the certificate provisioningState is 'Failed'.</p>

    <p></p>
  syntax: public DeleteCertificateError deleteCertificateError()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.deleteCertificateError()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.etag()
  name: etag()
  nameWithType: CertificateInner.etag()
  returns:
    description: <p>the etag value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ETag of the resource, used for concurrency statements.</p>

    <p></p>
  syntax: public String etag()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.etag()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.format()
  name: format()
  nameWithType: CertificateInner.format()
  returns:
    description: <p>the format value </p>
    type: <xref href="com.microsoft.azure.management.batch.CertificateFormat?alt=com.microsoft.azure.management.batch.CertificateFormat&text=CertificateFormat" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the format of the certificate - either Pfx or Cer. If omitted, the default is Pfx. Possible values include: 'Pfx', 'Cer'.</p>

    <p></p>
  syntax: public CertificateFormat format()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.format()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.previousProvisioningState()
  name: previousProvisioningState()
  nameWithType: CertificateInner.previousProvisioningState()
  returns:
    description: <p>the previousProvisioningState value </p>
    type: <xref href="com.microsoft.azure.management.batch.CertificateProvisioningState?alt=com.microsoft.azure.management.batch.CertificateProvisioningState&text=CertificateProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the previous provisioned state of the resource. Possible values include: 'Succeeded', 'Deleting', 'Failed'.</p>

    <p></p>
  syntax: public CertificateProvisioningState previousProvisioningState()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.previousProvisioningState()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.previousProvisioningStateTransitionTime()
  name: previousProvisioningStateTransitionTime()
  nameWithType: CertificateInner.previousProvisioningStateTransitionTime()
  returns:
    description: <p>the previousProvisioningStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the previousProvisioningStateTransitionTime value.</p>

    <p></p>
  syntax: public DateTime previousProvisioningStateTransitionTime()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.previousProvisioningStateTransitionTime()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.provisioningState()
  name: provisioningState()
  nameWithType: CertificateInner.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.batch.CertificateProvisioningState?alt=com.microsoft.azure.management.batch.CertificateProvisioningState&text=CertificateProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'Succeeded', 'Deleting', 'Failed'.</p>

    <p></p>
  syntax: public CertificateProvisioningState provisioningState()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.provisioningState()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.provisioningStateTransitionTime()
  name: provisioningStateTransitionTime()
  nameWithType: CertificateInner.provisioningStateTransitionTime()
  returns:
    description: <p>the provisioningStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the provisioningStateTransitionTime value.</p>

    <p></p>
  syntax: public DateTime provisioningStateTransitionTime()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.provisioningStateTransitionTime()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.publicData()
  name: publicData()
  nameWithType: CertificateInner.publicData()
  returns:
    description: <p>the publicData value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the public key of the certificate.</p>

    <p></p>
  syntax: public String publicData()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.publicData()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.thumbprint()
  name: thumbprint()
  nameWithType: CertificateInner.thumbprint()
  returns:
    description: <p>the thumbprint value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this must match the thumbprint from the name.</p>

    <p></p>
  syntax: public String thumbprint()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.thumbprint()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.thumbprintAlgorithm()
  name: thumbprintAlgorithm()
  nameWithType: CertificateInner.thumbprintAlgorithm()
  returns:
    description: <p>the thumbprintAlgorithm value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this must match the first portion of the certificate name. Currently required to be 'SHA1'.</p>

    <p></p>
  syntax: public String thumbprintAlgorithm()
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.thumbprintAlgorithm()
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.withFormat(CertificateFormat format)
  name: withFormat(CertificateFormat format)
  nameWithType: CertificateInner.withFormat(CertificateFormat format)
  parameters:
  - description: <p>the format value to set </p>
    name: format
    type: <xref href="com.microsoft.azure.management.batch.CertificateFormat?alt=com.microsoft.azure.management.batch.CertificateFormat&text=CertificateFormat" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.CertificateInner?alt=com.microsoft.azure.management.batch.implementation.CertificateInner&text=CertificateInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the format of the certificate - either Pfx or Cer. If omitted, the default is Pfx. Possible values include: 'Pfx', 'Cer'.</p>

    <p></p>
  syntax: public CertificateInner withFormat(CertificateFormat format)
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.withFormat(CertificateFormat)
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.withThumbprint(String thumbprint)
  name: withThumbprint(String thumbprint)
  nameWithType: CertificateInner.withThumbprint(String thumbprint)
  parameters:
  - description: <p>the thumbprint value to set </p>
    name: thumbprint
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.CertificateInner?alt=com.microsoft.azure.management.batch.implementation.CertificateInner&text=CertificateInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this must match the thumbprint from the name.</p>

    <p></p>
  syntax: public CertificateInner withThumbprint(String thumbprint)
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.withThumbprint(String)
- fullName: com.microsoft.azure.management.batch.implementation.CertificateInner.withThumbprintAlgorithm(String thumbprintAlgorithm)
  name: withThumbprintAlgorithm(String thumbprintAlgorithm)
  nameWithType: CertificateInner.withThumbprintAlgorithm(String thumbprintAlgorithm)
  parameters:
  - description: <p>the thumbprintAlgorithm value to set </p>
    name: thumbprintAlgorithm
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.CertificateInner?alt=com.microsoft.azure.management.batch.implementation.CertificateInner&text=CertificateInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this must match the first portion of the certificate name. Currently required to be 'SHA1'.</p>

    <p></p>
  syntax: public CertificateInner withThumbprintAlgorithm(String thumbprintAlgorithm)
  uid: com.microsoft.azure.management.batch.implementation.CertificateInner.withThumbprintAlgorithm(String)
nameWithType: CertificateInner
syntax: public class CertificateInner
type: class
uid: com.microsoft.azure.management.batch.implementation.CertificateInner
fullName: com.microsoft.azure.management.batch.implementation.CertificateInner
name: CertificateInner
package: com.microsoft.azure.management.batch.implementation
summary: <p>Contains information about a certificate. </p>
metadata: {}
