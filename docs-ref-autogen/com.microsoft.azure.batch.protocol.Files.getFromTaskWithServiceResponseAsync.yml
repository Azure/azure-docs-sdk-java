### YamlMime:JavaMember
nameWithType: Files.getFromTaskWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  name: getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  nameWithType: Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  parameters:
  - description: <p>The ID of the job that contains the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task whose file you want to retrieve. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the task file that you want to get the content of. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the InputStream object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;InputStream, <xref href="com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders&text=FileGetFromTaskHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
  uid: com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  name: getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  nameWithType: Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  parameters:
  - description: <p>The ID of the job that contains the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task whose file you want to retrieve. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the task file that you want to get the content of. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileGetFromTaskOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions?alt=com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions&text=FileGetFromTaskOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the InputStream object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;InputStream, <xref href="com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders&text=FileGetFromTaskHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<InputStream, FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)
  uid: com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String,String,String,FileGetFromTaskOptions)
uid: com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
name: getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)
package: com.microsoft.azure.batch.protocol
metadata: {}
