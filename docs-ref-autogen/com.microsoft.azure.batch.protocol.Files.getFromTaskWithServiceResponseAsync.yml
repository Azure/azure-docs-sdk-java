### YamlMime:JavaMember
uid: "com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync*"
fullName: "com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync"
name: "getFromTaskWithServiceResponseAsync"
nameWithType: "Files.getFromTaskWithServiceResponseAsync"
members:
- uid: "com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  name: "getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  nameWithType: "Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  summary: "Returns the content of the specified Task file."
  parameters:
  - description: "The ID of the Job that contains the Task."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task whose file you want to retrieve."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path to the Task file that you want to get the content of."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<InputStream,FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath)"
  returns:
    description: "the observable to the InputStream object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders&text=FileGetFromTaskHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions)"
  fullName: "com.microsoft.azure.batch.protocol.Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)"
  name: "getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)"
  nameWithType: "Files.getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)"
  summary: "Returns the content of the specified Task file."
  parameters:
  - description: "The ID of the Job that contains the Task."
    name: "jobId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The ID of the Task whose file you want to retrieve."
    name: "taskId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The path to the Task file that you want to get the content of."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional parameters for the operation"
    name: "fileGetFromTaskOptions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions?alt=com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions&text=FileGetFromTaskOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<ServiceResponseWithHeaders<InputStream,FileGetFromTaskHeaders>> getFromTaskWithServiceResponseAsync(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions)"
  returns:
    description: "the observable to the InputStream object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.rest.ServiceResponseWithHeaders?alt=com.microsoft.rest.ServiceResponseWithHeaders&text=ServiceResponseWithHeaders\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders?alt=com.microsoft.azure.batch.protocol.models.FileGetFromTaskHeaders&text=FileGetFromTaskHeaders\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "method"
metadata: {}
package: "com.microsoft.azure.batch.protocol"
artifact: com.microsoft.azure:azure-batch:8.0.0
