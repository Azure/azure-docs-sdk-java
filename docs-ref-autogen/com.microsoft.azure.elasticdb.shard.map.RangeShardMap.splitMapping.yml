### YamlMime:JavaMember
nameWithType: RangeShardMap<KeyT>.splitMapping
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.map.RangeShardMap<KeyT>.splitMapping(RangeMapping existingMapping, KeyT splitAt)
  name: splitMapping(RangeMapping existingMapping, KeyT splitAt)
  nameWithType: RangeShardMap<KeyT>.splitMapping(RangeMapping existingMapping, KeyT splitAt)
  parameters:
  - description: <p>Existing mapping. </p>
    name: existingMapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.RangeMapping?alt=com.microsoft.azure.elasticdb.shard.base.RangeMapping&text=RangeMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Split point. </p>
    name: splitAt
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Read-only collection of two new mappings that were created. </p>
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.RangeMapping?alt=com.microsoft.azure.elasticdb.shard.base.RangeMapping&text=RangeMapping" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Splits the specified mapping into two new mappings using the specified key as boundary. The new mappings point to the same shard as the existing mapping.</p>

    <p></p>
  syntax: public List<RangeMapping> splitMapping(RangeMapping existingMapping, KeyT splitAt)
  uid: com.microsoft.azure.elasticdb.shard.map.RangeShardMap.splitMapping(RangeMapping,KeyT)
- fullName: com.microsoft.azure.elasticdb.shard.map.RangeShardMap<KeyT>.splitMapping(RangeMapping existingMapping, KeyT splitAt, MappingLockToken mappingLockToken)
  name: splitMapping(RangeMapping existingMapping, KeyT splitAt, MappingLockToken mappingLockToken)
  nameWithType: RangeShardMap<KeyT>.splitMapping(RangeMapping existingMapping, KeyT splitAt, MappingLockToken mappingLockToken)
  parameters:
  - description: <p>Existing mapping. </p>
    name: existingMapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.RangeMapping?alt=com.microsoft.azure.elasticdb.shard.base.RangeMapping&text=RangeMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Split point. </p>
    name: splitAt
    type: <xref href="KeyT?alt=KeyT&text=KeyT" data-throw-if-not-resolved="False"/>
  - description: <p>An instance of MappingLockToken </p>
    name: mappingLockToken
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.MappingLockToken?alt=com.microsoft.azure.elasticdb.shard.base.MappingLockToken&text=MappingLockToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Read-only collection of two new mappings that were created. </p>
    type: List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.RangeMapping?alt=com.microsoft.azure.elasticdb.shard.base.RangeMapping&text=RangeMapping" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Splits the specified mapping into two new mappings using the specified key as boundary. The new mappings point to the same shard as the existing mapping.</p>

    <p></p>
  syntax: public List<RangeMapping> splitMapping(RangeMapping existingMapping, KeyT splitAt, MappingLockToken mappingLockToken)
  uid: com.microsoft.azure.elasticdb.shard.map.RangeShardMap.splitMapping(RangeMapping,KeyT,MappingLockToken)
uid: com.microsoft.azure.elasticdb.shard.map.RangeShardMap.splitMapping*
fullName: com.microsoft.azure.elasticdb.shard.map.RangeShardMap<KeyT>.splitMapping(RangeMapping existingMapping, KeyT splitAt)
name: splitMapping(RangeMapping existingMapping, KeyT splitAt)
package: com.microsoft.azure.elasticdb.shard.map
metadata: {}
