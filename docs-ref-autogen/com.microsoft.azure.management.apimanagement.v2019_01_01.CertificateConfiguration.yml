### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration"
name: "CertificateConfiguration"
nameWithType: "CertificateConfiguration"
summary: "Certificate configuration which consist of non-trusted intermediates and root certificates."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class CertificateConfiguration"
constructors:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.CertificateConfiguration()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.CertificateConfiguration()"
  name: "CertificateConfiguration()"
  nameWithType: "CertificateConfiguration.CertificateConfiguration()"
  syntax: "public CertificateConfiguration()"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.certificate()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.certificate()"
  name: "certificate()"
  nameWithType: "CertificateConfiguration.certificate()"
  summary: "Get certificate information."
  syntax: "public CertificateInformation certificate()"
  desc: "Get certificate information."
  returns:
    description: "the certificate value"
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateInformation?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateInformation&text=CertificateInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.certificatePassword()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.certificatePassword()"
  name: "certificatePassword()"
  nameWithType: "CertificateConfiguration.certificatePassword()"
  summary: "Get certificate Password."
  syntax: "public String certificatePassword()"
  desc: "Get certificate Password."
  returns:
    description: "the certificatePassword value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.encodedCertificate()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.encodedCertificate()"
  name: "encodedCertificate()"
  nameWithType: "CertificateConfiguration.encodedCertificate()"
  summary: "Get base64 Encoded certificate."
  syntax: "public String encodedCertificate()"
  desc: "Get base64 Encoded certificate."
  returns:
    description: "the encodedCertificate value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.storeName()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.storeName()"
  name: "storeName()"
  nameWithType: "CertificateConfiguration.storeName()"
  summary: "Get the System.<wbr>Security.<wbr>Cryptography.<wbr>x509certificates.<wbr>Store<wbr>Name certificate store location."
  syntax: "public String storeName()"
  desc: "Get the System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations. Possible values include: 'CertificateAuthority', 'Root'."
  returns:
    description: "the storeName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withCertificate(com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateInformation)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withCertificate(CertificateInformation certificate)"
  name: "withCertificate(CertificateInformation certificate)"
  nameWithType: "CertificateConfiguration.withCertificate(CertificateInformation certificate)"
  summary: "Set certificate information."
  parameters:
  - description: "the certificate value to set"
    name: "certificate"
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateInformation?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateInformation&text=CertificateInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateConfiguration withCertificate(CertificateInformation certificate)"
  desc: "Set certificate information."
  returns:
    description: "the CertificateConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration&text=CertificateConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withCertificatePassword(java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withCertificatePassword(String certificatePassword)"
  name: "withCertificatePassword(String certificatePassword)"
  nameWithType: "CertificateConfiguration.withCertificatePassword(String certificatePassword)"
  summary: "Set certificate Password."
  parameters:
  - description: "the certificatePassword value to set"
    name: "certificatePassword"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateConfiguration withCertificatePassword(String certificatePassword)"
  desc: "Set certificate Password."
  returns:
    description: "the CertificateConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration&text=CertificateConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withEncodedCertificate(java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withEncodedCertificate(String encodedCertificate)"
  name: "withEncodedCertificate(String encodedCertificate)"
  nameWithType: "CertificateConfiguration.withEncodedCertificate(String encodedCertificate)"
  summary: "Set base64 Encoded certificate."
  parameters:
  - description: "the encodedCertificate value to set"
    name: "encodedCertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateConfiguration withEncodedCertificate(String encodedCertificate)"
  desc: "Set base64 Encoded certificate."
  returns:
    description: "the CertificateConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration&text=CertificateConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withStoreName(java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration.withStoreName(String storeName)"
  name: "withStoreName(String storeName)"
  nameWithType: "CertificateConfiguration.withStoreName(String storeName)"
  summary: "Set the System.<wbr>Security.<wbr>Cryptography.<wbr>x509certificates.<wbr>Store<wbr>Name certificate store location."
  parameters:
  - description: "the storeName value to set"
    name: "storeName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CertificateConfiguration withStoreName(String storeName)"
  desc: "Set the System.Security.Cryptography.x509certificates.StoreName certificate store location. Only Root and CertificateAuthority are valid locations. Possible values include: 'CertificateAuthority', 'Root'."
  returns:
    description: "the CertificateConfiguration object itself."
    type: "<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.CertificateConfiguration&text=CertificateConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Certificate configuration which consist of non-trusted intermediates and root certificates."
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
