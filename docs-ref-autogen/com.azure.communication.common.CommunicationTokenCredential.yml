### YamlMime:JavaType
uid: "com.azure.communication.common.CommunicationTokenCredential"
fullName: "com.azure.communication.common.CommunicationTokenCredential"
name: "CommunicationTokenCredential"
nameWithType: "CommunicationTokenCredential"
summary: "Provide user credential for Communication service user"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CommunicationTokenCredential implements AutoCloseable"
constructors:
- uid: "com.azure.communication.common.CommunicationTokenCredential.CommunicationTokenCredential(com.azure.communication.common.CommunicationTokenRefreshOptions)"
  fullName: "com.azure.communication.common.CommunicationTokenCredential.CommunicationTokenCredential(CommunicationTokenRefreshOptions tokenRefreshOptions)"
  name: "CommunicationTokenCredential(CommunicationTokenRefreshOptions tokenRefreshOptions)"
  nameWithType: "CommunicationTokenCredential.CommunicationTokenCredential(CommunicationTokenRefreshOptions tokenRefreshOptions)"
  summary: "Create with token<wbr>Refresh<wbr>Options, which includes a token supplier and optional serialized JWT token."
  parameters:
  - description: "implementation to supply fresh token when reqested"
    name: "tokenRefreshOptions"
    type: "<xref href=\"com.azure.communication.common.CommunicationTokenRefreshOptions?alt=com.azure.communication.common.CommunicationTokenRefreshOptions&text=CommunicationTokenRefreshOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationTokenCredential(CommunicationTokenRefreshOptions tokenRefreshOptions)"
  desc: "Create with tokenRefreshOptions, which includes a token supplier and optional serialized JWT token. If refresh proactively is true, callback function tokenRefresher will be called ahead of the token expiry by the number of minutes specified by CallbackOffsetMinutes defaulted to ten minutes."
- uid: "com.azure.communication.common.CommunicationTokenCredential.CommunicationTokenCredential(java.lang.String)"
  fullName: "com.azure.communication.common.CommunicationTokenCredential.CommunicationTokenCredential(String token)"
  name: "CommunicationTokenCredential(String token)"
  nameWithType: "CommunicationTokenCredential.CommunicationTokenCredential(String token)"
  summary: "Create with serialized JWT token"
  parameters:
  - description: "serialized JWT token"
    name: "token"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationTokenCredential(String token)"
  desc: "Create with serialized JWT token"
methods:
- uid: "com.azure.communication.common.CommunicationTokenCredential.close()"
  fullName: "com.azure.communication.common.CommunicationTokenCredential.close()"
  name: "close()"
  nameWithType: "CommunicationTokenCredential.close()"
  syntax: "public void close()"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.common.CommunicationTokenCredential.getToken()"
  fullName: "com.azure.communication.common.CommunicationTokenCredential.getToken()"
  name: "getToken()"
  nameWithType: "CommunicationTokenCredential.getToken()"
  summary: "Get Azure core access token from credential"
  syntax: "public Mono<AccessToken> getToken()"
  desc: "Get Azure core access token from credential"
  returns:
    description: "Asynchronous call to fetch actual token"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Provide user credential for Communication service user"
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.communication.common"
artifact: com.azure:azure-communication-common:1.2.0
