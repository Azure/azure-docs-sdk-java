### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.LabeledResultSet(MultiShardException exception, ShardLocation shardLocation, Statement statement)
  name: LabeledResultSet(MultiShardException exception, ShardLocation shardLocation, Statement statement)
  nameWithType: LabeledResultSet.LabeledResultSet(MultiShardException exception, ShardLocation shardLocation, Statement statement)
  parameters:
  - name: exception
    type: <xref href="com.microsoft.azure.elasticdb.query.exception.MultiShardException?alt=com.microsoft.azure.elasticdb.query.exception.MultiShardException&text=MultiShardException" data-throw-if-not-resolved="False"/>
  - description: <p>The Shard this reader belongs to </p>
    name: shardLocation
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  - description: <p>The statement object that produced the reader. </p>
    name: statement
    type: <xref href="Statement?alt=Statement&text=Statement" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If either of the arguments is null. </p>
  summary: >-
    <p>Simple constructor to set up an immutable LabeledResultSet object.</p>

    <p></p>
  syntax: public LabeledResultSet(MultiShardException exception, ShardLocation shardLocation, Statement statement)
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.LabeledResultSet(MultiShardException,ShardLocation,Statement)
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.LabeledResultSet(ResultSet resultSet, ShardLocation shardLocation, Statement statement)
  name: LabeledResultSet(ResultSet resultSet, ShardLocation shardLocation, Statement statement)
  nameWithType: LabeledResultSet.LabeledResultSet(ResultSet resultSet, ShardLocation shardLocation, Statement statement)
  parameters:
  - name: resultSet
    type: <xref href="ResultSet?alt=ResultSet&text=ResultSet" data-throw-if-not-resolved="False"/>
  - description: <p>The Shard this reader belongs to </p>
    name: shardLocation
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  - description: <p>The statement object that produced the reader. </p>
    name: statement
    type: <xref href="Statement?alt=Statement&text=Statement" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If either of the arguments is null. </p>
  summary: >-
    <p>Simple constructor to set up an immutable LabeledResultSet object.</p>

    <p></p>
  syntax: public LabeledResultSet(ResultSet resultSet, ShardLocation shardLocation, Statement statement)
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.LabeledResultSet(ResultSet,ShardLocation,Statement)
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.LabeledResultSet(ShardLocation shardLocation, Statement statement)
  name: LabeledResultSet(ShardLocation shardLocation, Statement statement)
  nameWithType: LabeledResultSet.LabeledResultSet(ShardLocation shardLocation, Statement statement)
  parameters:
  - description: <p>The Shard this reader belongs to </p>
    name: shardLocation
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  - description: <p>The statement object that produced the reader. </p>
    name: statement
    type: <xref href="Statement?alt=Statement&text=Statement" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If either of the arguments is null. </p>
  summary: >-
    <p>Simple constructor to set up an immutable LabeledResultSet object.</p>

    <p></p>
  syntax: public LabeledResultSet(ShardLocation shardLocation, Statement statement)
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.LabeledResultSet(ShardLocation,Statement)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.close()
  name: close()
  nameWithType: LabeledResultSet.close()
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: <p>AutoClosable Implementation. </p>
  syntax: public final void close()
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.close()
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getConnection()
  name: getConnection()
  nameWithType: LabeledResultSet.getConnection()
  returns:
    type: <xref href="final+Connection?alt=final+Connection&text=final+Connection" data-throw-if-not-resolved="False"/>
  summary: <p>The Connection associated with this reader. </p>
  syntax: public final Connection getConnection()
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getConnection()
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getException()
  name: getException()
  nameWithType: LabeledResultSet.getException()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.query.exception.MultiShardException?alt=com.microsoft.azure.elasticdb.query.exception.MultiShardException&text=MultiShardException" data-throw-if-not-resolved="False"/>
  syntax: public final MultiShardException getException()
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getException()
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getResultSet()
  name: getResultSet()
  nameWithType: LabeledResultSet.getResultSet()
  returns:
    type: <xref href="final+ResultSet?alt=final+ResultSet&text=final+ResultSet" data-throw-if-not-resolved="False"/>
  syntax: public final ResultSet getResultSet()
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getResultSet()
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getShardLabel()
  name: getShardLabel()
  nameWithType: LabeledResultSet.getShardLabel()
  returns:
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  syntax: public final String getShardLabel()
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getShardLabel()
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getShardLocation()
  name: getShardLocation()
  nameWithType: LabeledResultSet.getShardLocation()
  returns:
    type: final <xref href="com.microsoft.azure.elasticdb.shard.base.ShardLocation?alt=com.microsoft.azure.elasticdb.shard.base.ShardLocation&text=ShardLocation" data-throw-if-not-resolved="False"/>
  syntax: public final ShardLocation getShardLocation()
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getShardLocation()
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getStatement()
  name: getStatement()
  nameWithType: LabeledResultSet.getStatement()
  returns:
    type: <xref href="final+Statement?alt=final+Statement&text=final+Statement" data-throw-if-not-resolved="False"/>
  syntax: public final Statement getStatement()
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.getStatement()
- fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.setShardLabel(String value)
  name: setShardLabel(String value)
  nameWithType: LabeledResultSet.setShardLabel(String value)
  parameters:
  - name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  syntax: public final void setShardLabel(String value)
  uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet.setShardLabel(String)
nameWithType: LabeledResultSet
syntax: public class LabeledResultSet
type: class
uid: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet
fullName: com.microsoft.azure.elasticdb.query.multishard.LabeledResultSet
name: LabeledResultSet
package: com.microsoft.azure.elasticdb.query.multishard
summary: '<p>Simple, immutable class for affiliating a ResultSet with additional information related to the reader (e.g. Statement, shard, exceptions encountered etc) Useful when grabbing ResultSets asynchronously. Purpose: Convenience class that holds a ResultSet along with a string label for the shard that the data underlying the ResultSet came from. Notes: This is useful for keeping the ResultSet and the label together when executing asynchronously. </p>'
metadata: {}
