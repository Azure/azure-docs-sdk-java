### YamlMime:ManagedReference
items:
- uid: com.microsoft.cognitiveservices.speech.util._contracts
  id: _contracts
  parent: com.microsoft.cognitiveservices.speech.util
  children:
  - com.microsoft.cognitiveservices.speech.util._contracts.throwIfDirectoryDoesNotExist(String,String)
  - com.microsoft.cognitiveservices.speech.util._contracts.throwIfFileDoesNotExist(String,String)
  - com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalLanguage(String,String)
  - com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalSubscriptionKey(String,String)
  - com.microsoft.cognitiveservices.speech.util._contracts.throwIfNull(Object,String)
  - com.microsoft.cognitiveservices.speech.util._contracts.throwIfNullOrWhitespace(String,String)
  href: com.microsoft.cognitiveservices.speech.util._contracts.yml
  langs:
  - java
  name: Contracts
  nameWithType: Contracts
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts
  type: Class
  source:
    remote: &o0
      path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
      branch: javadocs201809
      repo: https://msasg.visualstudio.com/DefaultCollection/Skyman/_git/Carbon
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
    startLine: 9
  package: com.microsoft.cognitiveservices.speech.util
  summary: "<p>Contract helper </p>"
  syntax:
    content: public class Contracts
  inheritance:
  - java.lang.Object
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfDirectoryDoesNotExist(String,String)
  id: throwIfDirectoryDoesNotExist(String,String)
  parent: com.microsoft.cognitiveservices.speech.util._contracts
  href: com.microsoft.cognitiveservices.speech.util._contracts.yml
  langs:
  - java
  name: throwIfDirectoryDoesNotExist(String directory, String message)
  nameWithType: Contracts.throwIfDirectoryDoesNotExist(String directory, String message)
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfDirectoryDoesNotExist(String directory, String message)
  overload: com.microsoft.cognitiveservices.speech.util._contracts.throwIfDirectoryDoesNotExist*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
    startLine: 79
  package: com.microsoft.cognitiveservices.speech.util
  summary: "<p>Checks if the directory exists. </p>"
  syntax:
    content: public static void throwIfDirectoryDoesNotExist(String directory, String message)
    parameters:
    - id: directory
      type: "26831127"
      description: <p>The directory to test </p>
    - id: message
      type: "26831127"
      description: <p>The error message in case directory does not exist. </p>
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfFileDoesNotExist(String,String)
  id: throwIfFileDoesNotExist(String,String)
  parent: com.microsoft.cognitiveservices.speech.util._contracts
  href: com.microsoft.cognitiveservices.speech.util._contracts.yml
  langs:
  - java
  name: throwIfFileDoesNotExist(String filename, String message)
  nameWithType: Contracts.throwIfFileDoesNotExist(String filename, String message)
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfFileDoesNotExist(String filename, String message)
  overload: com.microsoft.cognitiveservices.speech.util._contracts.throwIfFileDoesNotExist*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
    startLine: 64
  package: com.microsoft.cognitiveservices.speech.util
  summary: "<p>Checks if the filename exists. </p>"
  syntax:
    content: public static void throwIfFileDoesNotExist(String filename, String message)
    parameters:
    - id: filename
      type: "26831127"
      description: <p>The filename to test </p>
    - id: message
      type: "26831127"
      description: <p>The error message in case filename does not exist. </p>
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalLanguage(String,String)
  id: throwIfIllegalLanguage(String,String)
  parent: com.microsoft.cognitiveservices.speech.util._contracts
  href: com.microsoft.cognitiveservices.speech.util._contracts.yml
  langs:
  - java
  name: throwIfIllegalLanguage(String language, String message)
  nameWithType: Contracts.throwIfIllegalLanguage(String language, String message)
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfIllegalLanguage(String language, String message)
  overload: com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalLanguage*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
    startLine: 42
  package: com.microsoft.cognitiveservices.speech.util
  summary: "<p>Checks if the language is a valid identifier. </p>"
  syntax:
    content: public static void throwIfIllegalLanguage(String language, String message)
    parameters:
    - id: language
      type: "26831127"
      description: <p>The language identifier to test, e.g. "en-US" </p>
    - id: message
      type: "26831127"
      description: <p>The error message in case obj is null. </p>
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalSubscriptionKey(String,String)
  id: throwIfIllegalSubscriptionKey(String,String)
  parent: com.microsoft.cognitiveservices.speech.util._contracts
  href: com.microsoft.cognitiveservices.speech.util._contracts.yml
  langs:
  - java
  name: throwIfIllegalSubscriptionKey(String subscription, String message)
  nameWithType: Contracts.throwIfIllegalSubscriptionKey(String subscription, String message)
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfIllegalSubscriptionKey(String subscription, String message)
  overload: com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalSubscriptionKey*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
    startLine: 53
  package: com.microsoft.cognitiveservices.speech.util
  summary: "<p>Checks if the subscription is a valid identifier. </p>"
  syntax:
    content: public static void throwIfIllegalSubscriptionKey(String subscription, String message)
    parameters:
    - id: subscription
      type: "26831127"
      description: <p>The subscription key to test, usually in the form of a guid </p>
    - id: message
      type: "26831127"
      description: <p>The error message in case obj is null. </p>
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfNull(Object,String)
  id: throwIfNull(Object,String)
  parent: com.microsoft.cognitiveservices.speech.util._contracts
  href: com.microsoft.cognitiveservices.speech.util._contracts.yml
  langs:
  - java
  name: throwIfNull(Object obj, String message)
  nameWithType: Contracts.throwIfNull(Object obj, String message)
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfNull(Object obj, String message)
  overload: com.microsoft.cognitiveservices.speech.util._contracts.throwIfNull*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
    startLine: 15
  package: com.microsoft.cognitiveservices.speech.util
  summary: "<p>Checks if the argument is null, if yes, throws a NullPointerException </p>"
  syntax:
    content: public static void throwIfNull(Object obj, String message)
    parameters:
    - id: obj
      type: "79317049"
      description: <p>The object to test for null. </p>
    - id: message
      type: "26831127"
      description: <p>The error message in case obj is null. </p>
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfNullOrWhitespace(String,String)
  id: throwIfNullOrWhitespace(String,String)
  parent: com.microsoft.cognitiveservices.speech.util._contracts
  href: com.microsoft.cognitiveservices.speech.util._contracts.yml
  langs:
  - java
  name: throwIfNullOrWhitespace(String obj, String message)
  nameWithType: Contracts.throwIfNullOrWhitespace(String obj, String message)
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfNullOrWhitespace(String obj, String message)
  overload: com.microsoft.cognitiveservices.speech.util._contracts.throwIfNullOrWhitespace*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/util/Contracts.java
    startLine: 27
  package: com.microsoft.cognitiveservices.speech.util
  summary: "<p>Checks if the argument is null or whitespace, if yes, throws a IllegalArgumentException or NullPointerException. </p>"
  syntax:
    content: public static void throwIfNullOrWhitespace(String obj, String message)
    parameters:
    - id: obj
      type: "26831127"
      description: <p>The object to test for null. </p>
    - id: message
      type: "26831127"
      description: <p>The error message in case obj is null. </p>
references:
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfNull*
  name: throwIfNull
  nameWithType: Contracts.throwIfNull
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfNull
  package: com.microsoft.cognitiveservices.speech.util
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfNullOrWhitespace*
  name: throwIfNullOrWhitespace
  nameWithType: Contracts.throwIfNullOrWhitespace
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfNullOrWhitespace
  package: com.microsoft.cognitiveservices.speech.util
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalLanguage*
  name: throwIfIllegalLanguage
  nameWithType: Contracts.throwIfIllegalLanguage
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfIllegalLanguage
  package: com.microsoft.cognitiveservices.speech.util
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfIllegalSubscriptionKey*
  name: throwIfIllegalSubscriptionKey
  nameWithType: Contracts.throwIfIllegalSubscriptionKey
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfIllegalSubscriptionKey
  package: com.microsoft.cognitiveservices.speech.util
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfFileDoesNotExist*
  name: throwIfFileDoesNotExist
  nameWithType: Contracts.throwIfFileDoesNotExist
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfFileDoesNotExist
  package: com.microsoft.cognitiveservices.speech.util
- uid: com.microsoft.cognitiveservices.speech.util._contracts.throwIfDirectoryDoesNotExist*
  name: throwIfDirectoryDoesNotExist
  nameWithType: Contracts.throwIfDirectoryDoesNotExist
  fullName: com.microsoft.cognitiveservices.speech.util.Contracts.throwIfDirectoryDoesNotExist
  package: com.microsoft.cognitiveservices.speech.util
