### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus.security.TokenProvider
  id: TokenProvider
  parent: com.microsoft.azure.servicebus.security
  children:
  - com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider(String,String,String)
  - com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider(String,String,String,String)
  - com.microsoft.azure.servicebus.security.TokenProvider.createManagedServiceIdentityTokenProvider()
  - com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String,String)
  - com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String,Instant)
  - com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(String)
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  langs:
  - java
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: com.microsoft.azure.servicebus.security.TokenProvider
  type: Class
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
    startLine: 16
  package: com.microsoft.azure.servicebus.security
  summary: "<p>This abstract class defines the contract of a token provider. All token providers should inherit from this class. An instance of token provider is used to obtain a security token for a given audience. </p>"
  syntax: &o1
    content: public class TokenProvider
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider(String,String,String)
  id: createAzureActiveDirectoryTokenProvider(String,String,String)
  parent: com.microsoft.azure.servicebus.security.TokenProvider
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  langs:
  - java
  name: createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String clientSecret)
  nameWithType: TokenProvider.createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String clientSecret)
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String clientSecret)
  overload: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
    startLine: 74
  package: com.microsoft.azure.servicebus.security
  summary: "<p>Creates an Azure Active Directory token provider that acquires a token from the given active directory instance using the given clientId and client secret. This is a utility method. </p>"
  syntax:
    content: public static TokenProvider createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String clientSecret)
    parameters:
    - id: authorityUrl
      type: "26831127"
      description: <p>URL of the Azure Active Directory instance </p>
    - id: clientId
      type: "26831127"
      description: <p>client id of the application </p>
    - id: clientSecret
      type: "26831127"
      description: <p>client secret of the application </p>
    return:
      type: com.microsoft.azure.servicebus.security.TokenProvider
      description: <p>an instance of Azure Active Directory token provider </p>
  exceptions:
  - type: 7f45ead7
    description: <p>if the authority URL is not well formed </p>
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider(String,String,String,String)
  id: createAzureActiveDirectoryTokenProvider(String,String,String,String)
  parent: com.microsoft.azure.servicebus.security.TokenProvider
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  langs:
  - java
  name: createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String userName, String password)
  nameWithType: TokenProvider.createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String userName, String password)
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String userName, String password)
  overload: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
    startLine: 59
  package: com.microsoft.azure.servicebus.security
  summary: "<p>Creates an Azure Active Directory token provider that acquires a token from the given active directory instance using the given clientId, username and password. This is a utility method. </p>"
  syntax:
    content: public static TokenProvider createAzureActiveDirectoryTokenProvider(String authorityUrl, String clientId, String userName, String password)
    parameters:
    - id: authorityUrl
      type: "26831127"
      description: <p>URL of the Azure Active Directory instance </p>
    - id: clientId
      type: "26831127"
      description: <p>client id of the application </p>
    - id: userName
      type: "26831127"
      description: <p>user name </p>
    - id: password
      type: "26831127"
      description: <p>password </p>
    return:
      type: com.microsoft.azure.servicebus.security.TokenProvider
      description: <p>an instance of Azure Active Directory token provider </p>
  exceptions:
  - type: 7f45ead7
    description: <p>if the authority URL is not well formed </p>
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createManagedServiceIdentityTokenProvider()
  id: createManagedServiceIdentityTokenProvider()
  parent: com.microsoft.azure.servicebus.security.TokenProvider
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  langs:
  - java
  name: createManagedServiceIdentityTokenProvider()
  nameWithType: TokenProvider.createManagedServiceIdentityTokenProvider()
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createManagedServiceIdentityTokenProvider()
  overload: com.microsoft.azure.servicebus.security.TokenProvider.createManagedServiceIdentityTokenProvider*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
    startLine: 84
  package: com.microsoft.azure.servicebus.security
  summary: "<p>Creates a Managed Service Identity token provider. This is a utility method. </p>"
  syntax:
    content: public static TokenProvider createManagedServiceIdentityTokenProvider()
    return:
      type: com.microsoft.azure.servicebus.security.TokenProvider
      description: <p>an instance of Managed Service Identity token provider </p>
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String,String)
  id: createSharedAccessSignatureTokenProvider(String,String)
  parent: com.microsoft.azure.servicebus.security.TokenProvider
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  langs:
  - java
  name: createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
  nameWithType: TokenProvider.createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
  overload: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
    startLine: 33
  package: com.microsoft.azure.servicebus.security
  summary: "<p>Creates a Shared Access Signature token provider with the given key name and key value. Returned token provider creates tokens with validity of 20 minutes. This is a utility method. </p>"
  syntax:
    content: public static TokenProvider createSharedAccessSignatureTokenProvider(String sasKeyName, String sasKey)
    parameters:
    - id: sasKeyName
      type: "26831127"
      description: <p>SAS key name </p>
    - id: sasKey
      type: "26831127"
      description: <p>SAS key value </p>
    return:
      type: com.microsoft.azure.servicebus.security.TokenProvider
      description: <p>an instance of Shared Access Signature token provider with the given key name, key value. </p>
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String,Instant)
  id: createSharedAccessSignatureTokenProvider(String,Instant)
  parent: com.microsoft.azure.servicebus.security.TokenProvider
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  langs:
  - java
  name: createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
  nameWithType: TokenProvider.createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
  overload: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
    startLine: 44
  package: com.microsoft.azure.servicebus.security
  summary: "<p>Creates a Shared Access Signature token provider that always returns an already created token. This is a utility method. </p>"
  syntax:
    content: public static TokenProvider createSharedAccessSignatureTokenProvider(String sasToken, Instant sasTokenValidUntil)
    parameters:
    - id: sasToken
      type: "26831127"
      description: <p>Already created Shared Access Signature token to be returned by <xref uid="com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(String)" data-throw-if-not-resolved="false" data-raw-source="getSecurityTokenAsync(String)"></xref> method. </p>
    - id: sasTokenValidUntil
      type: 328f8254
      description: <p>Instant when the token expires </p>
    return:
      type: com.microsoft.azure.servicebus.security.TokenProvider
      description: <p>an instance of Shared Access Signature token provider that always returns an already created token. </p>
- uid: com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(String)
  id: getSecurityTokenAsync(String)
  parent: com.microsoft.azure.servicebus.security.TokenProvider
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  langs:
  - java
  name: getSecurityTokenAsync(String audience)
  nameWithType: TokenProvider.getSecurityTokenAsync(String audience)
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(String audience)
  overload: com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/security/TokenProvider.java
    startLine: 24
  package: com.microsoft.azure.servicebus.security
  summary: "<p>Asynchronously gets a security token for the given audience. Implementations of this method may choose to create a new token for every call or return a cached token. But the token returned must be valid. </p>"
  syntax: &o2
    content: public abstract CompletableFuture<SecurityToken> getSecurityTokenAsync(String audience)
    parameters:
    - id: audience
      type: "26831127"
      description: <p>path of the entity for which this security token is to be presented </p>
    return:
      type: e4cf4b1ccom.microsoft.azure.servicebus.security.SecurityTokena08ddfce
      description: <p>an instance of CompletableFuture which returns a <xref uid="com.microsoft.azure.servicebus.security.SecurityToken" data-throw-if-not-resolved="false" data-raw-source="SecurityToken"></xref> on completion. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: e4cf4b1ccom.microsoft.azure.servicebus.security.SecurityTokena08ddfce
  spec.java:
  - name: abstract CompletableFuture<
    fullName: abstract CompletableFuture<
  - uid: com.microsoft.azure.servicebus.security.SecurityToken
    name: SecurityToken
    fullName: com.microsoft.azure.servicebus.security.SecurityToken
    href: com.microsoft.azure.servicebus.security.SecurityToken.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync*
  name: getSecurityTokenAsync
  nameWithType: TokenProvider.getSecurityTokenAsync
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync
  package: com.microsoft.azure.servicebus.security
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider*
  name: createSharedAccessSignatureTokenProvider
  nameWithType: TokenProvider.createSharedAccessSignatureTokenProvider
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createSharedAccessSignatureTokenProvider
  package: com.microsoft.azure.servicebus.security
- uid: 328f8254
  spec.java:
  - name: Instant
    fullName: Instant
- uid: 7f45ead7
  spec.java:
  - name: MalformedURLException
    fullName: MalformedURLException
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider*
  name: createAzureActiveDirectoryTokenProvider
  nameWithType: TokenProvider.createAzureActiveDirectoryTokenProvider
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createAzureActiveDirectoryTokenProvider
  package: com.microsoft.azure.servicebus.security
- uid: com.microsoft.azure.servicebus.security.TokenProvider.createManagedServiceIdentityTokenProvider*
  name: createManagedServiceIdentityTokenProvider
  nameWithType: TokenProvider.createManagedServiceIdentityTokenProvider
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.createManagedServiceIdentityTokenProvider
  package: com.microsoft.azure.servicebus.security
- uid: com.microsoft.azure.servicebus.security.AzureActiveDirectoryTokenProvider
  parent: com.microsoft.azure.servicebus.security
  href: com.microsoft.azure.servicebus.security.AzureActiveDirectoryTokenProvider.yml
  name: AzureActiveDirectoryTokenProvider
  nameWithType: AzureActiveDirectoryTokenProvider
  fullName: com.microsoft.azure.servicebus.security.AzureActiveDirectoryTokenProvider
  type: Class
  summary: "<p>This is a token provider that obtains tokens from Azure Active Directory. It supports multiple modes of authentication with active directory to obtain tokens. </p>"
  syntax:
    content: public class AzureActiveDirectoryTokenProvider extends TokenProvider
- uid: com.microsoft.azure.servicebus.security.ManagedServiceIdentityTokenProvider
  parent: com.microsoft.azure.servicebus.security
  href: com.microsoft.azure.servicebus.security.ManagedServiceIdentityTokenProvider.yml
  name: ManagedServiceIdentityTokenProvider
  nameWithType: ManagedServiceIdentityTokenProvider
  fullName: com.microsoft.azure.servicebus.security.ManagedServiceIdentityTokenProvider
  type: Class
  summary: "<p>This is a token provider that obtains token using Managed Service Identity(MSI). This token provider automatically detects MSI settings. </p>"
  syntax:
    content: public class ManagedServiceIdentityTokenProvider extends TokenProvider
- uid: com.microsoft.azure.servicebus.security.SharedAccessSignatureTokenProvider
  parent: com.microsoft.azure.servicebus.security
  href: com.microsoft.azure.servicebus.security.SharedAccessSignatureTokenProvider.yml
  name: SharedAccessSignatureTokenProvider
  nameWithType: SharedAccessSignatureTokenProvider
  fullName: com.microsoft.azure.servicebus.security.SharedAccessSignatureTokenProvider
  type: Class
  summary: "<p>This is a token provider that generates Shared Access Signature(SAS) tokens or reuses an already generated SAS token. </p>"
  syntax:
    content: public class SharedAccessSignatureTokenProvider extends TokenProvider
- uid: com.microsoft.azure.servicebus.security.SecurityToken
  parent: com.microsoft.azure.servicebus.security
  href: com.microsoft.azure.servicebus.security.SecurityToken.yml
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: com.microsoft.azure.servicebus.security.SecurityToken
  type: Class
  summary: "<p>This class encapsulates the details of a security token.</p>\r\n<p></p>"
  syntax:
    content: public class SecurityToken
- uid: com.microsoft.azure.servicebus.security.TokenProvider
  parent: com.microsoft.azure.servicebus.security
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  name: TokenProvider
  nameWithType: TokenProvider
  fullName: com.microsoft.azure.servicebus.security.TokenProvider
  type: Class
  summary: "<p>This abstract class defines the contract of a token provider. All token providers should inherit from this class. An instance of token provider is used to obtain a security token for a given audience. </p>"
  syntax: *o1
- uid: com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(String)
  parent: com.microsoft.azure.servicebus.security.TokenProvider
  href: com.microsoft.azure.servicebus.security.TokenProvider.yml
  name: getSecurityTokenAsync(String audience)
  nameWithType: TokenProvider.getSecurityTokenAsync(String audience)
  fullName: com.microsoft.azure.servicebus.security.TokenProvider.getSecurityTokenAsync(String audience)
  type: Method
  summary: "<p>Asynchronously gets a security token for the given audience. Implementations of this method may choose to create a new token for every call or return a cached token. But the token returned must be valid. </p>"
  syntax: *o2
- uid: com.microsoft.aad.adal4j.AuthenticationContext
  parent: com.microsoft.aad.adal4j
  href: com.microsoft.aad.adal4j.AuthenticationContext.yml
  name: AuthenticationContext
  nameWithType: AuthenticationContext
  fullName: com.microsoft.aad.adal4j.AuthenticationContext
  type: Class
  summary: "<p>The main class representing the authority issuing tokens for resources. It provides several ways to request access token, namely via Authorization Code, Confidential Client and Client Certificate. </p>"
  syntax:
    content: public class AuthenticationContext
