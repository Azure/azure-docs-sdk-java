### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.returnOrConvertException*"
fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException"
name: "<T>returnOrConvertException"
nameWithType: "DataLakeImplUtils.<T>returnOrConvertException"
members:
- uid: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException(java.util.function.Supplier<T>,com.azure.core.util.logging.ClientLogger)"
  fullName: "com.azure.storage.file.datalake.implementation.util.DataLakeImplUtils.<T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
  name: "<T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
  nameWithType: "DataLakeImplUtils.<T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
  parameters:
  - name: "supplier"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "logger"
    type: "<xref href=\"com.azure.core.util.logging.ClientLogger?alt=com.azure.core.util.logging.ClientLogger&text=ClientLogger\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static T <T>returnOrConvertException(Supplier<T> supplier, ClientLogger logger)"
  returns:
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake.implementation.util"
artifact: com.azure:azure-storage-file-datalake:12.4.1
