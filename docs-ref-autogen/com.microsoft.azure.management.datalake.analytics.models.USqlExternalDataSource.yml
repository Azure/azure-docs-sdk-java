### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.datalake.analytics.models.CatalogItem?alt=com.microsoft.azure.management.datalake.analytics.models.CatalogItem&text=CatalogItem" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.computeAccountName()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.version()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withComputeAccountName(String)
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withVersion(UUID)
methods:
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.databaseName()
  name: databaseName()
  nameWithType: USqlExternalDataSource.databaseName()
  returns:
    description: <p>the databaseName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the databaseName value.</p>

    <p></p>
  syntax: public String databaseName()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.databaseName()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.name()
  name: name()
  nameWithType: USqlExternalDataSource.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.name()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.provider()
  name: provider()
  nameWithType: USqlExternalDataSource.provider()
  returns:
    description: <p>the provider value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the provider value.</p>

    <p></p>
  syntax: public String provider()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.provider()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.providerString()
  name: providerString()
  nameWithType: USqlExternalDataSource.providerString()
  returns:
    description: <p>the providerString value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the providerString value.</p>

    <p></p>
  syntax: public String providerString()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.providerString()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.pushdownTypes()
  name: pushdownTypes()
  nameWithType: USqlExternalDataSource.pushdownTypes()
  returns:
    description: <p>the pushdownTypes value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the pushdownTypes value.</p>

    <p></p>
  syntax: public List<String> pushdownTypes()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.pushdownTypes()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withDatabaseName(String databaseName)
  name: withDatabaseName(String databaseName)
  nameWithType: USqlExternalDataSource.withDatabaseName(String databaseName)
  parameters:
  - description: <p>the databaseName value to set </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlExternalDataSource object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource?alt=com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource&text=USqlExternalDataSource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the databaseName value.</p>

    <p></p>
  syntax: public USqlExternalDataSource withDatabaseName(String databaseName)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withDatabaseName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withName(String name)
  name: withName(String name)
  nameWithType: USqlExternalDataSource.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlExternalDataSource object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource?alt=com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource&text=USqlExternalDataSource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public USqlExternalDataSource withName(String name)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withProvider(String provider)
  name: withProvider(String provider)
  nameWithType: USqlExternalDataSource.withProvider(String provider)
  parameters:
  - description: <p>the provider value to set </p>
    name: provider
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlExternalDataSource object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource?alt=com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource&text=USqlExternalDataSource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the provider value.</p>

    <p></p>
  syntax: public USqlExternalDataSource withProvider(String provider)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withProvider(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withProviderString(String providerString)
  name: withProviderString(String providerString)
  nameWithType: USqlExternalDataSource.withProviderString(String providerString)
  parameters:
  - description: <p>the providerString value to set </p>
    name: providerString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlExternalDataSource object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource?alt=com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource&text=USqlExternalDataSource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the providerString value.</p>

    <p></p>
  syntax: public USqlExternalDataSource withProviderString(String providerString)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withProviderString(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withPushdownTypes(List<String> pushdownTypes)
  name: withPushdownTypes(List<String> pushdownTypes)
  nameWithType: USqlExternalDataSource.withPushdownTypes(List<String> pushdownTypes)
  parameters:
  - description: <p>the pushdownTypes value to set </p>
    name: pushdownTypes
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlExternalDataSource object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource?alt=com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource&text=USqlExternalDataSource" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the pushdownTypes value.</p>

    <p></p>
  syntax: public USqlExternalDataSource withPushdownTypes(List<String> pushdownTypes)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource.withPushdownTypes(List<String>)
nameWithType: USqlExternalDataSource
syntax: public class USqlExternalDataSource extends CatalogItem
type: class
uid: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource
fullName: com.microsoft.azure.management.datalake.analytics.models.USqlExternalDataSource
name: USqlExternalDataSource
package: com.microsoft.azure.management.datalake.analytics.models
summary: <p>A Data Lake Analytics catalog U-SQL external datasource item. </p>
metadata: {}
