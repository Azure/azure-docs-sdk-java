### YamlMime:JavaType
uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder"
fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder"
name: "EncryptedBlobClientBuilder"
nameWithType: "EncryptedBlobClientBuilder"
summary: "This class provides a fluent builder API to help aid the configuration and instantiation of Storage Blob clients.\n\nThe following information must be provided on this builder:\n\n *  Endpoint set through <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">#endpoint(String)</xref>, including the container name and blob name, in the format of `https://{accountName}.blob.core.windows.net/{containerName}/{blobName}`.\n *  Container and blob name if not specified in the <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">#endpoint(String)</xref>, set through <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName(java.lang.String)\" data-throw-if-not-resolved=\"false\">#containerName(String)</xref> and <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName(java.lang.String)\" data-throw-if-not-resolved=\"false\">#blobName(String)</xref> respectively.\n *  Credential set through <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)\" data-throw-if-not-resolved=\"false\">#credential(StorageSharedKeyCredential)</xref> , <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken(java.lang.String)\" data-throw-if-not-resolved=\"false\">#sasToken(String)</xref>, or <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString(java.lang.String)\" data-throw-if-not-resolved=\"false\">#connectionString(String)</xref> if the container is not publicly accessible.\n *  Key and key wrapping algorithm (for encryption) and/or key resolver (for decryption) must be specified through <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key(com.azure.core.cryptography.AsyncKeyEncryptionKey,java.lang.String)\" data-throw-if-not-resolved=\"false\">#key(AsyncKeyEncryptionKey, String)</xref> and <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver(com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver)\" data-throw-if-not-resolved=\"false\">#keyResolver(AsyncKeyEncryptionKeyResolver)</xref>\n\nOnce all the configurations are set on this builder use the following mapping to construct the given client:\n\n *  <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient()\" data-throw-if-not-resolved=\"false\">EncryptedBlobClientBuilder#buildEncryptedBlobClient()</xref> \\- <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient\" data-throw-if-not-resolved=\"false\">EncryptedBlobClient</xref>\n *  <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient()\" data-throw-if-not-resolved=\"false\">EncryptedBlobClientBuilder#buildEncryptedBlobAsyncClient()</xref> \\- <xref uid=\"com.azure.storage.blob.specialized.cryptography.EncryptedBlobAsyncClient\" data-throw-if-not-resolved=\"false\">EncryptedBlobAsyncClient</xref>"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class EncryptedBlobClientBuilder"
constructors:
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.EncryptedBlobClientBuilder()"
methods:
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobAsyncClient(com.azure.storage.blob.BlobAsyncClient)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobClient(com.azure.storage.blob.BlobClient)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.blobName(java.lang.String)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobAsyncClient()"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.buildEncryptedBlobClient()"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.configuration(com.azure.core.util.Configuration)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.connectionString(java.lang.String)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.containerName(java.lang.String)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.core.credential.TokenCredential)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.customerProvidedKey(com.azure.storage.blob.models.CustomerProvidedKey)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.endpoint(java.lang.String)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.getDefaultHttpLogOptions()"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.key(com.azure.core.cryptography.AsyncKeyEncryptionKey,java.lang.String)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.keyResolver(com.azure.core.cryptography.AsyncKeyEncryptionKeyResolver)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.sasToken(java.lang.String)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.serviceVersion(com.azure.storage.blob.BlobServiceVersion)"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.setAnonymousAccess()"
- "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClientBuilder.snapshot(java.lang.String)"
type: "class"
metadata: {}
package: "com.azure.storage.blob.specialized.cryptography"
artifact: com.azure:azure-storage-blob-cryptography:12.7.0
