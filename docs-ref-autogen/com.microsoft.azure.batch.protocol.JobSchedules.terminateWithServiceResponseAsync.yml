### YamlMime:JavaMember
nameWithType: JobSchedules.terminateWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId)
  name: terminateWithServiceResponseAsync(String jobScheduleId)
  nameWithType: JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId)
  parameters:
  - description: <p>The ID of the job schedule to terminates. </p>
    name: jobScheduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders&text=JobScheduleTerminateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Terminates a job schedule.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, JobScheduleTerminateHeaders>> terminateWithServiceResponseAsync(String jobScheduleId)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  name: terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  nameWithType: JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  parameters:
  - description: <p>The ID of the job schedule to terminates. </p>
    name: jobScheduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobScheduleTerminateOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions?alt=com.microsoft.azure.batch.protocol.models.JobScheduleTerminateOptions&text=JobScheduleTerminateOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceResponseWithHeaders</xref> object if successful. </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;Void, <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders?alt=com.microsoft.azure.batch.protocol.models.JobScheduleTerminateHeaders&text=JobScheduleTerminateHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Terminates a job schedule.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<Void, JobScheduleTerminateHeaders>> terminateWithServiceResponseAsync(String jobScheduleId, JobScheduleTerminateOptions jobScheduleTerminateOptions)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(String,JobScheduleTerminateOptions)
uid: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.JobSchedules.terminateWithServiceResponseAsync(String jobScheduleId)
name: terminateWithServiceResponseAsync(String jobScheduleId)
package: com.microsoft.azure.batch.protocol
metadata: {}
