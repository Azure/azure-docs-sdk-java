### YamlMime:JavaMember
uid: "com.azure.monitor.query.MetricsQueryAsyncClient.listMetricNamespaces*"
fullName: "com.azure.monitor.query.MetricsQueryAsyncClient.listMetricNamespaces"
name: "listMetricNamespaces"
nameWithType: "MetricsQueryAsyncClient.listMetricNamespaces"
members:
- uid: "com.azure.monitor.query.MetricsQueryAsyncClient.listMetricNamespaces(java.lang.String,java.time.OffsetDateTime)"
  fullName: "com.azure.monitor.query.MetricsQueryAsyncClient.listMetricNamespaces(String resourceUri, OffsetDateTime startTime)"
  name: "listMetricNamespaces(String resourceUri, OffsetDateTime startTime)"
  nameWithType: "MetricsQueryAsyncClient.listMetricNamespaces(String resourceUri, OffsetDateTime startTime)"
  summary: "Lists all the metrics namespaces created for the resource URI."
  parameters:
  - description: "The resource URI for which the metrics namespaces are listed."
    name: "resourceUri"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The returned list of metrics namespaces are created after the specified start time."
    name: "startTime"
    type: "<xref href=\"java.time.OffsetDateTime?alt=java.time.OffsetDateTime&text=OffsetDateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedFlux<MetricNamespace> listMetricNamespaces(String resourceUri, OffsetDateTime startTime)"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"paged collection\"></xref> of metrics namespaces."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.monitor.query.models.MetricNamespace?alt=com.azure.monitor.query.models.MetricNamespace&text=MetricNamespace\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.monitor.query"
artifact: com.azure:azure-monitor-query:1.0.4
