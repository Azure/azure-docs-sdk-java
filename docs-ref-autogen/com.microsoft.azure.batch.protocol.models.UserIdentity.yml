### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.UserIdentity.autoUser()
  name: autoUser()
  nameWithType: UserIdentity.autoUser()
  returns:
    description: <p>the autoUser value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.AutoUserSpecification?alt=com.microsoft.azure.batch.protocol.models.AutoUserSpecification&text=AutoUserSpecification" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the userName and autoUser properties are mutually exclusive; you must specify one but not both.</p>

    <p></p>
  syntax: public AutoUserSpecification autoUser()
  uid: com.microsoft.azure.batch.protocol.models.UserIdentity.autoUser()
- fullName: com.microsoft.azure.batch.protocol.models.UserIdentity.userName()
  name: userName()
  nameWithType: UserIdentity.userName()
  returns:
    description: <p>the userName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the userName and autoUser properties are mutually exclusive; you must specify one but not both.</p>

    <p></p>
  syntax: public String userName()
  uid: com.microsoft.azure.batch.protocol.models.UserIdentity.userName()
- fullName: com.microsoft.azure.batch.protocol.models.UserIdentity.withAutoUser(AutoUserSpecification autoUser)
  name: withAutoUser(AutoUserSpecification autoUser)
  nameWithType: UserIdentity.withAutoUser(AutoUserSpecification autoUser)
  parameters:
  - description: <p>the autoUser value to set </p>
    name: autoUser
    type: <xref href="com.microsoft.azure.batch.protocol.models.AutoUserSpecification?alt=com.microsoft.azure.batch.protocol.models.AutoUserSpecification&text=AutoUserSpecification" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the UserIdentity object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.UserIdentity?alt=com.microsoft.azure.batch.protocol.models.UserIdentity&text=UserIdentity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userName and autoUser properties are mutually exclusive; you must specify one but not both.</p>

    <p></p>
  syntax: public UserIdentity withAutoUser(AutoUserSpecification autoUser)
  uid: com.microsoft.azure.batch.protocol.models.UserIdentity.withAutoUser(AutoUserSpecification)
- fullName: com.microsoft.azure.batch.protocol.models.UserIdentity.withUserName(String userName)
  name: withUserName(String userName)
  nameWithType: UserIdentity.withUserName(String userName)
  parameters:
  - description: <p>the userName value to set </p>
    name: userName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the UserIdentity object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.UserIdentity?alt=com.microsoft.azure.batch.protocol.models.UserIdentity&text=UserIdentity" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userName and autoUser properties are mutually exclusive; you must specify one but not both.</p>

    <p></p>
  syntax: public UserIdentity withUserName(String userName)
  uid: com.microsoft.azure.batch.protocol.models.UserIdentity.withUserName(String)
nameWithType: UserIdentity
syntax: public class UserIdentity
type: class
uid: com.microsoft.azure.batch.protocol.models.UserIdentity
fullName: com.microsoft.azure.batch.protocol.models.UserIdentity
name: UserIdentity
package: com.microsoft.azure.batch.protocol.models
summary: <p>The definition of the user identity under which the task is run. Specify either the userName or autoUser property, but not both. </p>
metadata: {}
