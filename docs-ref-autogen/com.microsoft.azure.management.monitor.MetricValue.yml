### YamlMime:JavaType
uid: "com.microsoft.azure.management.monitor.MetricValue"
fullName: "com.microsoft.azure.management.monitor.MetricValue"
name: "MetricValue"
nameWithType: "MetricValue"
summary: "Represents a metric value."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class MetricValue"
constructors:
- uid: "com.microsoft.azure.management.monitor.MetricValue.MetricValue()"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.MetricValue()"
  name: "MetricValue()"
  nameWithType: "MetricValue.MetricValue()"
  syntax: "public MetricValue()"
methods:
- uid: "com.microsoft.azure.management.monitor.MetricValue.average()"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.average()"
  name: "average()"
  nameWithType: "MetricValue.average()"
  summary: "Get the average value in the time range."
  syntax: "public Double average()"
  desc: "Get the average value in the time range."
  returns:
    description: "the average value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.count()"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.count()"
  name: "count()"
  nameWithType: "MetricValue.count()"
  summary: "Get the number of samples in the time range."
  syntax: "public Double count()"
  desc: "Get the number of samples in the time range. Can be used to determine the number of values that contributed to the average value."
  returns:
    description: "the count value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.maximum()"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.maximum()"
  name: "maximum()"
  nameWithType: "MetricValue.maximum()"
  summary: "Get the greatest value in the time range."
  syntax: "public Double maximum()"
  desc: "Get the greatest value in the time range."
  returns:
    description: "the maximum value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.minimum()"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.minimum()"
  name: "minimum()"
  nameWithType: "MetricValue.minimum()"
  summary: "Get the least value in the time range."
  syntax: "public Double minimum()"
  desc: "Get the least value in the time range."
  returns:
    description: "the minimum value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.timeStamp()"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.timeStamp()"
  name: "timeStamp()"
  nameWithType: "MetricValue.timeStamp()"
  summary: "Get the timestamp for the metric value in ISO 8601 format."
  syntax: "public DateTime timeStamp()"
  desc: "Get the timestamp for the metric value in ISO 8601 format."
  returns:
    description: "the timeStamp value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.total()"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.total()"
  name: "total()"
  nameWithType: "MetricValue.total()"
  summary: "Get the sum of all of the values in the time range."
  syntax: "public Double total()"
  desc: "Get the sum of all of the values in the time range."
  returns:
    description: "the total value"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.withAverage(java.lang.Double)"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.withAverage(Double average)"
  name: "withAverage(Double average)"
  nameWithType: "MetricValue.withAverage(Double average)"
  summary: "Set the average value in the time range."
  parameters:
  - description: "the average value to set"
    name: "average"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricValue withAverage(Double average)"
  desc: "Set the average value in the time range."
  returns:
    description: "the MetricValue object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.withCount(java.lang.Double)"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.withCount(Double count)"
  name: "withCount(Double count)"
  nameWithType: "MetricValue.withCount(Double count)"
  summary: "Set the number of samples in the time range."
  parameters:
  - description: "the count value to set"
    name: "count"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricValue withCount(Double count)"
  desc: "Set the number of samples in the time range. Can be used to determine the number of values that contributed to the average value."
  returns:
    description: "the MetricValue object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.withMaximum(java.lang.Double)"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.withMaximum(Double maximum)"
  name: "withMaximum(Double maximum)"
  nameWithType: "MetricValue.withMaximum(Double maximum)"
  summary: "Set the greatest value in the time range."
  parameters:
  - description: "the maximum value to set"
    name: "maximum"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricValue withMaximum(Double maximum)"
  desc: "Set the greatest value in the time range."
  returns:
    description: "the MetricValue object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.withMinimum(java.lang.Double)"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.withMinimum(Double minimum)"
  name: "withMinimum(Double minimum)"
  nameWithType: "MetricValue.withMinimum(Double minimum)"
  summary: "Set the least value in the time range."
  parameters:
  - description: "the minimum value to set"
    name: "minimum"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricValue withMinimum(Double minimum)"
  desc: "Set the least value in the time range."
  returns:
    description: "the MetricValue object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.withTimeStamp(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.withTimeStamp(DateTime timeStamp)"
  name: "withTimeStamp(DateTime timeStamp)"
  nameWithType: "MetricValue.withTimeStamp(DateTime timeStamp)"
  summary: "Set the timestamp for the metric value in ISO 8601 format."
  parameters:
  - description: "the timeStamp value to set"
    name: "timeStamp"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricValue withTimeStamp(DateTime timeStamp)"
  desc: "Set the timestamp for the metric value in ISO 8601 format."
  returns:
    description: "the MetricValue object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.monitor.MetricValue.withTotal(java.lang.Double)"
  fullName: "com.microsoft.azure.management.monitor.MetricValue.withTotal(Double total)"
  name: "withTotal(Double total)"
  nameWithType: "MetricValue.withTotal(Double total)"
  summary: "Set the sum of all of the values in the time range."
  parameters:
  - description: "the total value to set"
    name: "total"
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public MetricValue withTotal(Double total)"
  desc: "Set the sum of all of the values in the time range."
  returns:
    description: "the MetricValue object itself."
    type: "<xref href=\"com.microsoft.azure.management.monitor.MetricValue?alt=com.microsoft.azure.management.monitor.MetricValue&text=MetricValue\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Represents a metric value."
metadata: {}
package: "com.microsoft.azure.management.monitor"
artifact: com.microsoft.azure:azure-mgmt-monitor:1.41.4
