### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.IMessageBrowser"
fullName: "com.microsoft.azure.servicebus.IMessageBrowser"
name: "IMessageBrowser"
nameWithType: "IMessageBrowser"
summary: "Represents a message browser that can browse messages from Azure Service Bus."
syntax: "public interface IMessageBrowser"
methods:
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peek()"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peek()"
  name: "peek()"
  nameWithType: "IMessageBrowser.peek()"
  summary: "reads next the active message without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  syntax: "public abstract IMessage peek()"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "reads next the active message without changing the state of the receiver or the message source. The first call to <xref uid=\"com.microsoft.azure.servicebus.IMessageBrowser.peek()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IMessageBrowser#peek()\"></xref> fetches the first active message for this receiver. Each subsequent call fetches the subsequent message in the entity."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peek(long)"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peek(long fromSequenceNumber)"
  name: "peek(long fromSequenceNumber)"
  nameWithType: "IMessageBrowser.peek(long fromSequenceNumber)"
  summary: "Reads next the active message without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  parameters:
  - description: "The sequence number from where to read the message."
    name: "fromSequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract IMessage peek(long fromSequenceNumber)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads next the active message without changing the state of the receiver or the message source."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked"
    type: "<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peekAsync()"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peekAsync()"
  name: "peekAsync()"
  nameWithType: "IMessageBrowser.peekAsync()"
  summary: "Asynchronously reads the active messages without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  syntax: "public abstract CompletableFuture<IMessage> peekAsync()"
  desc: "Asynchronously reads the active messages without changing the state of the receiver or the message source."
  returns:
    description: "<xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked"
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peekAsync(long)"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peekAsync(long fromSequenceNumber)"
  name: "peekAsync(long fromSequenceNumber)"
  nameWithType: "IMessageBrowser.peekAsync(long fromSequenceNumber)"
  summary: "Asynchronously reads next the active message without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  parameters:
  - description: "The sequence number from where to read the message."
    name: "fromSequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<IMessage> peekAsync(long fromSequenceNumber)"
  desc: "Asynchronously reads next the active message without changing the state of the receiver or the message source."
  returns:
    description: "CompletableFuture that returns <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int)"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(int messageCount)"
  name: "peekBatch(int messageCount)"
  nameWithType: "IMessageBrowser.peekBatch(int messageCount)"
  summary: "Reads next batch of the active messages without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  parameters:
  - description: "The number of messages."
    name: "messageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Collection<IMessage> peekBatch(int messageCount)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads next batch of the active messages without changing the state of the receiver or the message source."
  returns:
    description: "Batch of <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(long,int)"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)"
  name: "peekBatch(long fromSequenceNumber, int messageCount)"
  nameWithType: "IMessageBrowser.peekBatch(long fromSequenceNumber, int messageCount)"
  summary: "Reads next batch of the active messages without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  parameters:
  - description: "The sequence number from where to read the message."
    name: "fromSequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of messages."
    name: "messageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Collection<IMessage> peekBatch(long fromSequenceNumber, int messageCount)"
  exceptions:
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"java.lang.InterruptedException?alt=java.lang.InterruptedException&text=InterruptedException\" data-throw-if-not-resolved=\"False\" />"
  - description: "if the current thread was interrupted while waiting"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.ServiceBusException?alt=com.microsoft.azure.servicebus.primitives.ServiceBusException&text=ServiceBusException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads next batch of the active messages without changing the state of the receiver or the message source."
  returns:
    description: "Batch of <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(int)"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(int messageCount)"
  name: "peekBatchAsync(int messageCount)"
  nameWithType: "IMessageBrowser.peekBatchAsync(int messageCount)"
  summary: "Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  parameters:
  - description: "The number of messages."
    name: "messageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Collection<IMessage>> peekBatchAsync(int messageCount)"
  desc: "Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source."
  returns:
    description: "CompletableFuture that returns batch of <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(long,int)"
  fullName: "com.microsoft.azure.servicebus.IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)"
  name: "peekBatchAsync(long fromSequenceNumber, int messageCount)"
  nameWithType: "IMessageBrowser.peekBatchAsync(long fromSequenceNumber, int messageCount)"
  summary: "Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source."
  modifiers:
  - "abstract"
  parameters:
  - description: "The sequence number from where to read the message."
    name: "fromSequenceNumber"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  - description: "The number of messages."
    name: "messageCount"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract CompletableFuture<Collection<IMessage>> peekBatchAsync(long fromSequenceNumber, int messageCount)"
  desc: "Asynchronously reads the next batch of active messages without changing the state of the receiver or the message source."
  returns:
    description: "CompletableFuture that returns batch of <xref uid=\"com.microsoft.azure.servicebus.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref> peeked."
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
desc: "Represents a message browser that can browse messages from Azure Service Bus."
metadata: {}
package: "com.microsoft.azure.servicebus"
artifact: com.microsoft.azure:azure-servicebus:3.6.6
