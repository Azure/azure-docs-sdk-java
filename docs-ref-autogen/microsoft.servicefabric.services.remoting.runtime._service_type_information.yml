### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information
  id: _service_type_information
  parent: microsoft.servicefabric.services.remoting.runtime
  children:
  - microsoft.servicefabric.services.remoting.runtime._service_type_information.get(Class<?>)
  - microsoft.servicefabric.services.remoting.runtime._service_type_information.getImplementationType()
  - microsoft.servicefabric.services.remoting.runtime._service_type_information.getInterfaceTypes()
  - microsoft.servicefabric.services.remoting.runtime._service_type_information.isAbstract()
  - microsoft.servicefabric.services.remoting.runtime._service_type_information.tryGet(Class<?>)
  href: microsoft.servicefabric.services.remoting.runtime._service_type_information.yml
  langs:
  - java
  name: ServiceTypeInformation
  nameWithType: ServiceTypeInformation
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceTypeInformation.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceTypeInformation.java
    startLine: 13
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Specifies the class used by the ServiceRemoting to lookup the interfaces implemented by the service. </p>"
  syntax: &o1
    content: public class ServiceTypeInformation
  inheritance:
  - java.lang.Object
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.get(Class<?>)
  id: get(Class<?>)
  parent: microsoft.servicefabric.services.remoting.runtime._service_type_information
  href: microsoft.servicefabric.services.remoting.runtime._service_type_information.yml
  langs:
  - java
  name: get(Class<?> serviceType)
  nameWithType: ServiceTypeInformation.get(Class<?> serviceType)
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.get(Class<?> serviceType)
  overload: microsoft.servicefabric.services.remoting.runtime._service_type_information.get*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceTypeInformation.java
    startLine: 38
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Factory method that constructs a ServiceTypeInformation object from the given type </p>"
  syntax:
    content: public static ServiceTypeInformation get(Class<?> serviceType)
    parameters:
    - id: serviceType
      type: a19781f8
      description: <p>to examine </p>
    return:
      type: microsoft.servicefabric.services.remoting.runtime._service_type_information
      description: <p>ServiceTypeInformation </p>
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.getImplementationType()
  id: getImplementationType()
  parent: microsoft.servicefabric.services.remoting.runtime._service_type_information
  href: microsoft.servicefabric.services.remoting.runtime._service_type_information.yml
  langs:
  - java
  name: getImplementationType()
  nameWithType: ServiceTypeInformation.getImplementationType()
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.getImplementationType()
  overload: microsoft.servicefabric.services.remoting.runtime._service_type_information.getImplementationType*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceTypeInformation.java
    startLine: 65
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Gets type of the class implementing the service interface. </p>"
  syntax:
    content: public Class<?> getImplementationType()
    return:
      type: a19781f8
      description: <p>Type of the class implementing the service interface. </p>
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.getInterfaceTypes()
  id: getInterfaceTypes()
  parent: microsoft.servicefabric.services.remoting.runtime._service_type_information
  href: microsoft.servicefabric.services.remoting.runtime._service_type_information.yml
  langs:
  - java
  name: getInterfaceTypes()
  nameWithType: ServiceTypeInformation.getInterfaceTypes()
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.getInterfaceTypes()
  overload: microsoft.servicefabric.services.remoting.runtime._service_type_information.getInterfaceTypes*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceTypeInformation.java
    startLine: 58
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>The interface types implemented </p>"
  syntax:
    content: public List<Class<?>> getInterfaceTypes()
    return:
      type: 0e0b5418
      description: <p>List of interface types </p>
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.isAbstract()
  id: isAbstract()
  parent: microsoft.servicefabric.services.remoting.runtime._service_type_information
  href: microsoft.servicefabric.services.remoting.runtime._service_type_information.yml
  langs:
  - java
  name: isAbstract()
  nameWithType: ServiceTypeInformation.isAbstract()
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.isAbstract()
  overload: microsoft.servicefabric.services.remoting.runtime._service_type_information.isAbstract*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceTypeInformation.java
    startLine: 73
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Gets if class implementing service interface is abstract. </p>"
  syntax:
    content: public boolean isAbstract()
    return:
      type: 4fc6e284
      description: <p>true if class implementing service interface is abstract, otherwise false. </p>
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.tryGet(Class<?>)
  id: tryGet(Class<?>)
  parent: microsoft.servicefabric.services.remoting.runtime._service_type_information
  href: microsoft.servicefabric.services.remoting.runtime._service_type_information.yml
  langs:
  - java
  name: tryGet(Class<?> serviceType)
  nameWithType: ServiceTypeInformation.tryGet(Class<?> serviceType)
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.tryGet(Class<?> serviceType)
  overload: microsoft.servicefabric.services.remoting.runtime._service_type_information.tryGet*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/runtime/ServiceTypeInformation.java
    startLine: 25
  package: microsoft.servicefabric.services.remoting.runtime
  summary: "<p>Gets the Factory method that constructs a ServiceTypeInformation object from the given type. </p>"
  syntax:
    content: public static ServiceTypeInformation tryGet(Class<?> serviceType)
    parameters:
    - id: serviceType
      type: a19781f8
      description: <p>Type to examine </p>
    return:
      type: microsoft.servicefabric.services.remoting.runtime._service_type_information
      description: <p>ServiceTypeInformation </p>
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.tryGet*
  name: tryGet
  nameWithType: ServiceTypeInformation.tryGet
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.tryGet
  package: microsoft.servicefabric.services.remoting.runtime
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.get*
  name: get
  nameWithType: ServiceTypeInformation.get
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.get
  package: microsoft.servicefabric.services.remoting.runtime
- uid: 0e0b5418
  spec.java:
  - name: List<Class<?>>
    fullName: List<Class<?>>
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.getInterfaceTypes*
  name: getInterfaceTypes
  nameWithType: ServiceTypeInformation.getInterfaceTypes
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.getInterfaceTypes
  package: microsoft.servicefabric.services.remoting.runtime
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.getImplementationType*
  name: getImplementationType
  nameWithType: ServiceTypeInformation.getImplementationType
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.getImplementationType
  package: microsoft.servicefabric.services.remoting.runtime
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information.isAbstract*
  name: isAbstract
  nameWithType: ServiceTypeInformation.isAbstract
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation.isAbstract
  package: microsoft.servicefabric.services.remoting.runtime
- uid: microsoft.servicefabric.services.remoting.runtime._service_type_information
  parent: microsoft.servicefabric.services.remoting.runtime
  href: microsoft.servicefabric.services.remoting.runtime._service_type_information.yml
  name: ServiceTypeInformation
  nameWithType: ServiceTypeInformation
  fullName: microsoft.servicefabric.services.remoting.runtime.ServiceTypeInformation
  type: Class
  summary: <p>Specifies the class used by the ServiceRemoting to lookup the interfaces implemented by the service. </p>
  syntax: *o1
