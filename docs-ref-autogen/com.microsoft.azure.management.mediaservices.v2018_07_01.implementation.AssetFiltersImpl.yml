### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  id: "AssetFiltersImpl"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  children:
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.AssetFiltersImpl(com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.define(java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.listAsync(java.lang.String,java.lang.String,java.lang.String)"
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.manager()"
  langs:
  - "java"
  name: "AssetFiltersImpl"
  nameWithType: "AssetFiltersImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  type: "Class"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: " class AssetFiltersImpl extends WrapperImpl<AssetFiltersInner> implements AssetFilters"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.arm.model.implementation.WrapperImpl"
  implements:
  - "com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilters"
  inheritedMembers:
  - "com.microsoft.azure.arm.model.implementation.WrapperImpl.inner()"
  - "com.microsoft.azure.arm.model.implementation.WrapperImpl.setInner(InnerT)"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.AssetFiltersImpl(com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  id: "AssetFiltersImpl(com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  langs:
  - "java"
  name: "AssetFiltersImpl(MediaManager manager)"
  nameWithType: "AssetFiltersImpl.AssetFiltersImpl(MediaManager manager)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.AssetFiltersImpl(MediaManager manager)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.AssetFiltersImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: " AssetFiltersImpl(MediaManager manager)"
    parameters:
    - id: "manager"
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.define(java.lang.String)"
  id: "define(java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  langs:
  - "java"
  name: "define(String name)"
  nameWithType: "AssetFiltersImpl.define(String name)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.define(String name)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.define*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public AssetFilterImpl define(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFilterImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  langs:
  - "java"
  name: "deleteAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
  nameWithType: "AssetFiltersImpl.deleteAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.deleteAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.deleteAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public Completable deleteAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "accountName"
      type: "java.lang.String"
    - id: "assetName"
      type: "java.lang.String"
    - id: "filterName"
      type: "java.lang.String"
    return:
      type: "rx.Completable"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  id: "getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  langs:
  - "java"
  name: "getAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
  nameWithType: "AssetFiltersImpl.getAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.getAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.getAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public Observable<AssetFilter> getAsync(String resourceGroupName, String accountName, String assetName, String filterName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "accountName"
      type: "java.lang.String"
    - id: "assetName"
      type: "java.lang.String"
    - id: "filterName"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilter>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.listAsync(java.lang.String,java.lang.String,java.lang.String)"
  id: "listAsync(java.lang.String,java.lang.String,java.lang.String)"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  langs:
  - "java"
  name: "listAsync(String resourceGroupName, String accountName, String assetName)"
  nameWithType: "AssetFiltersImpl.listAsync(String resourceGroupName, String accountName, String assetName)"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.listAsync(String resourceGroupName, String accountName, String assetName)"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.listAsync*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public Observable<AssetFilter> listAsync(String resourceGroupName, String accountName, String assetName)"
    parameters:
    - id: "resourceGroupName"
      type: "java.lang.String"
    - id: "accountName"
      type: "java.lang.String"
    - id: "assetName"
      type: "java.lang.String"
    return:
      type: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilter>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.manager()"
  id: "manager()"
  parent: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl"
  langs:
  - "java"
  name: "manager()"
  nameWithType: "AssetFiltersImpl.manager()"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.manager()"
  overload: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.manager*"
  type: "Method"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
  syntax:
    content: "public MediaManager manager()"
    return:
      type: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
references:
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
  name: "MediaManager"
  nameWithType: "MediaManager"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.MediaManager"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.AssetFiltersImpl*"
  name: "AssetFiltersImpl"
  nameWithType: "AssetFiltersImpl.AssetFiltersImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.AssetFiltersImpl"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.manager*"
  name: "manager"
  nameWithType: "AssetFiltersImpl.manager"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.manager"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFilterImpl"
  name: "AssetFilterImpl"
  nameWithType: "AssetFilterImpl"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFilterImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.define*"
  name: "define"
  nameWithType: "AssetFiltersImpl.define"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.define"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Observable<com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilter>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilter"
    name: "AssetFilter"
    fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilter"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.listAsync*"
  name: "listAsync"
  nameWithType: "AssetFiltersImpl.listAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.listAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.getAsync*"
  name: "getAsync"
  nameWithType: "AssetFiltersImpl.getAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.getAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "rx.Completable"
  spec.java:
  - uid: "rx.Completable"
    name: "Completable"
    fullName: "rx.Completable"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.deleteAsync*"
  name: "deleteAsync"
  nameWithType: "AssetFiltersImpl.deleteAsync"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersImpl.deleteAsync"
  package: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation"
- uid: "com.microsoft.azure.arm.model.implementation.WrapperImpl<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersInner>"
  name: "WrapperImpl<AssetFiltersInner>"
  nameWithType: "WrapperImpl<AssetFiltersInner>"
  fullName: "com.microsoft.azure.arm.model.implementation.WrapperImpl<com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersInner>"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilters"
  name: "AssetFilters"
  nameWithType: "AssetFilters"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilters"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.arm.model.implementation.WrapperImpl.inner()"
  name: "WrapperImpl.inner()"
  nameWithType: "WrapperImpl.inner()"
  fullName: "com.microsoft.azure.arm.model.implementation.WrapperImpl.inner()"
- uid: "com.microsoft.azure.arm.model.implementation.WrapperImpl.setInner(InnerT)"
  name: "WrapperImpl.setInner(InnerT)"
  nameWithType: "WrapperImpl.setInner(InnerT)"
  fullName: "com.microsoft.azure.arm.model.implementation.WrapperImpl.setInner(InnerT)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilter"
  name: "AssetFilter"
  nameWithType: "AssetFilter"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.AssetFilter"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.azure.arm.model.implementation.WrapperImpl"
  name: "WrapperImpl"
  nameWithType: "WrapperImpl"
  fullName: "com.microsoft.azure.arm.model.implementation.WrapperImpl"
- uid: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersInner"
  name: "AssetFiltersInner"
  nameWithType: "AssetFiltersInner"
  fullName: "com.microsoft.azure.management.mediaservices.v2018_07_01.implementation.AssetFiltersInner"
