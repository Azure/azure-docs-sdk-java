### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview"
fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview"
name: "LiveEventPreview"
nameWithType: "LiveEventPreview"
summary: "Live event preview settings."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LiveEventPreview"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.LiveEventPreview()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.LiveEventPreview()"
  name: "LiveEventPreview()"
  nameWithType: "LiveEventPreview.LiveEventPreview()"
  syntax: "public LiveEventPreview()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.accessControl()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.accessControl()"
  name: "accessControl()"
  nameWithType: "LiveEventPreview.accessControl()"
  summary: "Get the access<wbr>Control property: The access control for live event preview."
  syntax: "public LiveEventPreviewAccessControl accessControl()"
  desc: "Get the accessControl property: The access control for live event preview."
  returns:
    description: "the accessControl value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreviewAccessControl?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreviewAccessControl&text=LiveEventPreviewAccessControl\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.alternativeMediaId()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.alternativeMediaId()"
  name: "alternativeMediaId()"
  nameWithType: "LiveEventPreview.alternativeMediaId()"
  summary: "Get the alternative<wbr>Media<wbr>Id property: An alternative media identifier associated with the streaming locator created for the preview."
  syntax: "public String alternativeMediaId()"
  desc: "Get the alternativeMediaId property: An alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field."
  returns:
    description: "the alternativeMediaId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.endpoints()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.endpoints()"
  name: "endpoints()"
  nameWithType: "LiveEventPreview.endpoints()"
  summary: "Get the endpoints property: The endpoints for preview."
  syntax: "public List<LiveEventEndpoint> endpoints()"
  desc: "Get the endpoints property: The endpoints for preview. Do not share the preview URL with the live event audience."
  returns:
    description: "the endpoints value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventEndpoint?alt=com.azure.resourcemanager.mediaservices.models.LiveEventEndpoint&text=LiveEventEndpoint\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.previewLocator()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.previewLocator()"
  name: "previewLocator()"
  nameWithType: "LiveEventPreview.previewLocator()"
  summary: "Get the preview<wbr>Locator property: The identifier of the preview locator in Guid format."
  syntax: "public String previewLocator()"
  desc: "Get the previewLocator property: The identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created."
  returns:
    description: "the previewLocator value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.streamingPolicyName()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.streamingPolicyName()"
  name: "streamingPolicyName()"
  nameWithType: "LiveEventPreview.streamingPolicyName()"
  summary: "Get the streaming<wbr>Policy<wbr>Name property: The name of streaming policy used for the live event preview."
  syntax: "public String streamingPolicyName()"
  desc: "Get the streamingPolicyName property: The name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated."
  returns:
    description: "the streamingPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.validate()"
  name: "validate()"
  nameWithType: "LiveEventPreview.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withAccessControl(com.azure.resourcemanager.mediaservices.models.LiveEventPreviewAccessControl)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withAccessControl(LiveEventPreviewAccessControl accessControl)"
  name: "withAccessControl(LiveEventPreviewAccessControl accessControl)"
  nameWithType: "LiveEventPreview.withAccessControl(LiveEventPreviewAccessControl accessControl)"
  summary: "Set the access<wbr>Control property: The access control for live event preview."
  parameters:
  - description: "the accessControl value to set."
    name: "accessControl"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreviewAccessControl?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreviewAccessControl&text=LiveEventPreviewAccessControl\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LiveEventPreview withAccessControl(LiveEventPreviewAccessControl accessControl)"
  desc: "Set the accessControl property: The access control for live event preview."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreview?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withAlternativeMediaId(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withAlternativeMediaId(String alternativeMediaId)"
  name: "withAlternativeMediaId(String alternativeMediaId)"
  nameWithType: "LiveEventPreview.withAlternativeMediaId(String alternativeMediaId)"
  summary: "Set the alternative<wbr>Media<wbr>Id property: An alternative media identifier associated with the streaming locator created for the preview."
  parameters:
  - description: "the alternativeMediaId value to set."
    name: "alternativeMediaId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LiveEventPreview withAlternativeMediaId(String alternativeMediaId)"
  desc: "Set the alternativeMediaId property: An alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreview?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withEndpoints(java.util.List<com.azure.resourcemanager.mediaservices.models.LiveEventEndpoint>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withEndpoints(List<LiveEventEndpoint> endpoints)"
  name: "withEndpoints(List<LiveEventEndpoint> endpoints)"
  nameWithType: "LiveEventPreview.withEndpoints(List<LiveEventEndpoint> endpoints)"
  summary: "Set the endpoints property: The endpoints for preview."
  parameters:
  - description: "the endpoints value to set."
    name: "endpoints"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventEndpoint?alt=com.azure.resourcemanager.mediaservices.models.LiveEventEndpoint&text=LiveEventEndpoint\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public LiveEventPreview withEndpoints(List<LiveEventEndpoint> endpoints)"
  desc: "Set the endpoints property: The endpoints for preview. Do not share the preview URL with the live event audience."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreview?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withPreviewLocator(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withPreviewLocator(String previewLocator)"
  name: "withPreviewLocator(String previewLocator)"
  nameWithType: "LiveEventPreview.withPreviewLocator(String previewLocator)"
  summary: "Set the preview<wbr>Locator property: The identifier of the preview locator in Guid format."
  parameters:
  - description: "the previewLocator value to set."
    name: "previewLocator"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LiveEventPreview withPreviewLocator(String previewLocator)"
  desc: "Set the previewLocator property: The identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreview?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withStreamingPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.LiveEventPreview.withStreamingPolicyName(String streamingPolicyName)"
  name: "withStreamingPolicyName(String streamingPolicyName)"
  nameWithType: "LiveEventPreview.withStreamingPolicyName(String streamingPolicyName)"
  summary: "Set the streaming<wbr>Policy<wbr>Name property: The name of streaming policy used for the live event preview."
  parameters:
  - description: "the streamingPolicyName value to set."
    name: "streamingPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LiveEventPreview withStreamingPolicyName(String streamingPolicyName)"
  desc: "Set the streamingPolicyName property: The name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated."
  returns:
    description: "the LiveEventPreview object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.LiveEventPreview?alt=com.azure.resourcemanager.mediaservices.models.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Live event preview settings."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
