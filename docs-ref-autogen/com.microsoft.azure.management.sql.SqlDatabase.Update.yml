### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlDatabase.Update
  id: Update
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.Update.yml
  langs:
  - java
  name: SqlDatabase.Update
  nameWithType: SqlDatabase.Update
  fullName: com.microsoft.azure.management.sql.SqlDatabase.Update
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 986
  package: com.microsoft.azure.management.sql
  summary: "<p>The template for a SqlDatabase update operation, containing all the settings that can be modified.</p>\r\n<p>The template for a SQLDatabase modifyState operation, containing all the settings that can be modified. </p>"
  syntax:
    content: public interface Update extends SqlDatabase.UpdateStages.WithEdition,SqlDatabase.UpdateStages.WithElasticPoolName,SqlDatabase.UpdateStages.WithMaxSizeBytes,SqlDatabase.UpdateStages.WithServiceObjective,Appliable<SqlDatabase>,SqlDatabase.UpdateStages.WithEdition,SqlDatabase.UpdateStages.WithElasticPoolName,SqlDatabase.UpdateStages.WithMaxSizeBytes,SqlDatabase.UpdateStages.WithServiceObjective,Resource.UpdateWithTags<SqlDatabase.Update>,Appliable<SqlDatabase>
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
  - com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition()
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEdition)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool>)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective)
  - com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.apply()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: apply()
  nameWithType: Appliable<T>.apply()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.apply()
  type: Method
  summary: "<p>Execute the update request.</p>\r\n<p></p>"
  syntax:
    content: public T apply()
    return:
      type: 8ce1ecb9
      description: <p>the updated resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: applyAsync()
  nameWithType: Appliable<T>.applyAsync()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync()
  type: Method
  summary: "<p>Execute the update request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public Observable<T> applyAsync()
    return:
      type: c4094ba1
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable.applyAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: applyAsync(final ServiceCallback<T> callback)
  nameWithType: Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>.applyAsync(final ServiceCallback<T> callback)
  type: Method
  summary: "<p>Execute the update request asynchronously.</p>\r\n<p></p>"
  syntax:
    content: public ServiceFuture<T> applyAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback for success and failure </p>
    return:
      type: c0371a4e
      description: <p>the handle to the REST call </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Indexable
  href: com.microsoft.azure.management.resources.fluentcore.model.Indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition()
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withBasicEdition()
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withBasicEdition()
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition()
  type: Method
  summary: "<p>Sets a \"Basic\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withBasicEdition()
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
  type: Method
  summary: "<p>Sets a \"Basic\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)
    parameters:
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabaseBasicStorage
      description: <p>the max storage capacity </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEdition)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withEdition(DatabaseEdition edition)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEdition edition)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEdition edition)
  type: Method
  summary: "<p>Sets the edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withEdition(DatabaseEdition edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql.DatabaseEdition
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withEdition(DatabaseEditions edition)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions edition)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withEdition(DatabaseEditions edition)
  type: Method
  summary: "<p>Sets the edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withEdition(DatabaseEditions edition)
    parameters:
    - id: edition
      type: com.microsoft.azure.management.sql.DatabaseEditions
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.yml
  name: withExistingElasticPool(String elasticPoolName)
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(String elasticPoolName)
  type: Method
  summary: "<p>Sets the existing elastic pool for the SQLDatabase.</p>\r\n<p></p>"
  syntax:
    content: public Update withExistingElasticPool(String elasticPoolName)
    parameters:
    - id: elasticPoolName
      type: "26831127"
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.yml
  name: withExistingElasticPool(SqlElasticPool sqlElasticPool)
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withExistingElasticPool(SqlElasticPool sqlElasticPool)
  type: Method
  summary: "<p>Sets the existing elastic pool for the SQLDatabase.</p>\r\n<p></p>"
  syntax:
    content: public Update withExistingElasticPool(SqlElasticPool sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.sql.SqlElasticPool
      description: <p>for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: "<p>Sets the max size in bytes for SQL Database. </p>"
  syntax:
    content: public Update withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the Azure SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB … 150 GB | 200 GB … 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool>)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.yml
  name: withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
  type: Method
  summary: "<p>Sets the new elastic pool for the SQLDatabase, this will create a new elastic pool while creating database.</p>\r\n<p></p>"
  syntax:
    content: public Update withNewElasticPool(Creatable<SqlElasticPool> sqlElasticPool)
    parameters:
    - id: sqlElasticPool
      type: com.microsoft.azure.management.resources.fluentcore.model.Creatable78504a52com.microsoft.azure.management.sql.SqlElasticPoola08ddfce
      description: <p>creatable definition for new elastic pool to be created for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.yml
  name: withoutElasticPool()
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.withoutElasticPool()
  type: Method
  summary: "<p>Removes database from it's elastic pool.</p>\r\n<p></p>"
  syntax:
    content: public WithEdition withoutElasticPool()
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withoutTag(String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withoutTag(String key)
  nameWithType: Resource.UpdateWithTags<T>.withoutTag(String key)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withoutTag(String key)
  type: Method
  summary: "<p>Removes a tag from the resource. </p>"
  syntax:
    content: public T withoutTag(String key)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key of the tag to remove </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
  type: Method
  summary: "<p>Sets a \"Premium\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective,SqlDatabasePremiumStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
  type: Method
  summary: "<p>Sets a \"Premium\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumServiceObjective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabasePremiumStorage
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective.yml
  name: withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  nameWithType: SqlDatabase.UpdateStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective.withServiceObjective(ServiceObjectiveName serviceLevelObjective)
  type: Method
  summary: "<p>Sets the service level objective for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withServiceObjective(ServiceObjectiveName serviceLevelObjective)
    parameters:
    - id: serviceLevelObjective
      type: com.microsoft.azure.management.sql.ServiceObjectiveName
      description: <p>service level objected for the SQL Database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the update. </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
  type: Method
  summary: "<p>Sets a \"Standard\" edition for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective,SqlDatabaseStandardStorage)
  parent: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  nameWithType: SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
  type: Method
  summary: "<p>Sets a \"Standard\" edition and maximum storage capacity for the SQL Database.</p>\r\n<p></p>"
  syntax:
    content: public Update withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)
    parameters:
    - id: serviceObjective
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardServiceObjective
      description: <p>edition to be set for database </p>
    - id: maxStorageCapacity
      type: com.microsoft.azure.management.sql.SqlDatabaseStandardStorage
      description: <p>edition to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql.SqlDatabase.Update
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withTag(String key, String value)
  nameWithType: Resource.UpdateWithTags<T>.withTag(String key, String value)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withTag(String key, String value)
  type: Method
  summary: "<p>Adds a tag to the resource. </p>"
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.UpdateWithTags<T>.withTags(Map<String, String> tags)
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: "<p>Specifies tags for the resource as a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>. </p>"
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the resource update </p>
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition.yml
  name: SqlDatabase.UpdateStages.WithEdition
  nameWithType: SqlDatabase.UpdateStages.WithEdition
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithEdition
  type: Interface
  summary: "<p>The SQL Database definition to set the edition for database. </p>"
  syntax:
    content: public interface WithEdition
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName.yml
  name: SqlDatabase.UpdateStages.WithElasticPoolName
  nameWithType: SqlDatabase.UpdateStages.WithElasticPoolName
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithElasticPoolName
  type: Interface
  summary: "<p>The SQL Database definition to set the elastic pool for database. </p>"
  syntax:
    content: public interface WithElasticPoolName
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes.yml
  name: SqlDatabase.UpdateStages.WithMaxSizeBytes
  nameWithType: SqlDatabase.UpdateStages.WithMaxSizeBytes
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithMaxSizeBytes
  type: Interface
  summary: "<p>The SQL Database definition to set the Max Size in Bytes for database. </p>"
  syntax:
    content: public interface WithMaxSizeBytes
- uid: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective.yml
  name: SqlDatabase.UpdateStages.WithServiceObjective
  nameWithType: SqlDatabase.UpdateStages.WithServiceObjective
  fullName: com.microsoft.azure.management.sql.SqlDatabase.UpdateStages.WithServiceObjective
  type: Interface
  summary: "<p>The SQL Database definition to set the service level objective. </p>"
  syntax:
    content: public interface WithServiceObjective
- uid: com.microsoft.azure.management.resources.fluentcore.model.Appliable
  parent: com.microsoft.azure.management.resources.fluentcore.model
  href: com.microsoft.azure.management.resources.fluentcore.model.Appliable.yml
  name: Appliable<T>
  nameWithType: Appliable<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Appliable<T>
  type: Interface
  summary: "<p>The base interface for all template interfaces that support update operations.</p>\r\n<p></p>"
  syntax:
    content: public interface Appliable<T> extends Indexable
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the type of the resource returned from the update. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags.yml
  name: Resource.UpdateWithTags<T>
  nameWithType: Resource.UpdateWithTags<T>
  fullName: com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.UpdateWithTags<T>
  type: Interface
  summary: "<p>An update allowing tags to be modified for the resource.</p>\r\n<p></p>"
  syntax:
    content: public interface UpdateWithTags<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>the type of the next stage resource update </p>
