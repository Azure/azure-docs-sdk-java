### YamlMime:JavaType
uid: "com.microsoft.azure.management.keyvault.Vault"
fullName: "com.microsoft.azure.management.keyvault.Vault"
name: "Vault"
nameWithType: "Vault"
summary: "An immutable client-side representation of an Azure Key Vault."
syntax: "public interface Vault extends GroupableResource<KeyVaultManager,VaultInner>, Refreshable<Vault>, Updatable<Vault.Update>"
methods:
- uid: "com.microsoft.azure.management.keyvault.Vault.accessPolicies()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.accessPolicies()"
  name: "accessPolicies()"
  nameWithType: "Vault.accessPolicies()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<AccessPolicy> accessPolicies()"
  returns:
    description: "an array of 0 to 16 identities that have access to the key vault. All\n identities in the array must use the same tenant ID as the key vault's\n tenant ID."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.AccessPolicy?alt=com.microsoft.azure.management.keyvault.AccessPolicy&text=AccessPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.keyvault.Vault.client()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.client()"
  name: "client()"
  nameWithType: "Vault.client()"
  modifiers:
  - "abstract"
  syntax: "public abstract KeyVaultClient client()"
  returns:
    description: "an authenticated Key Vault data client"
    type: "<xref href=\"com.microsoft.azure.keyvault.KeyVaultClient?alt=com.microsoft.azure.keyvault.KeyVaultClient&text=KeyVaultClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.createMode()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.createMode()"
  name: "createMode()"
  nameWithType: "Vault.createMode()"
  summary: "Get the create<wbr>Mode value."
  modifiers:
  - "abstract"
  syntax: "public abstract CreateMode createMode()"
  desc: "Get the createMode value."
  returns:
    description: "the createMode value"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.CreateMode?alt=com.microsoft.azure.management.keyvault.CreateMode&text=CreateMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.enabledForDeployment()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.enabledForDeployment()"
  name: "enabledForDeployment()"
  nameWithType: "Vault.enabledForDeployment()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean enabledForDeployment()"
  returns:
    description: "whether Azure Virtual Machines are permitted to\n retrieve certificates stored as secrets from the key vault."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.enabledForDiskEncryption()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.enabledForDiskEncryption()"
  name: "enabledForDiskEncryption()"
  nameWithType: "Vault.enabledForDiskEncryption()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean enabledForDiskEncryption()"
  returns:
    description: "whether Azure Disk Encryption is permitted to\n retrieve secrets from the vault and unwrap keys."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.enabledForTemplateDeployment()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.enabledForTemplateDeployment()"
  name: "enabledForTemplateDeployment()"
  nameWithType: "Vault.enabledForTemplateDeployment()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean enabledForTemplateDeployment()"
  returns:
    description: "whether Azure Resource Manager is permitted to\n retrieve secrets from the key vault."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.keys()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.keys()"
  name: "keys()"
  nameWithType: "Vault.keys()"
  modifiers:
  - "abstract"
  syntax: "public abstract Keys keys()"
  returns:
    description: "the Key Vault key API entry point"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.Keys?alt=com.microsoft.azure.management.keyvault.Keys&text=Keys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.networkRuleSet()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.networkRuleSet()"
  name: "networkRuleSet()"
  nameWithType: "Vault.networkRuleSet()"
  summary: "Get the network<wbr>Acls value."
  modifiers:
  - "abstract"
  syntax: "public abstract NetworkRuleSet networkRuleSet()"
  desc: "Get the networkAcls value."
  returns:
    description: "the networkAcls value"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.NetworkRuleSet?alt=com.microsoft.azure.management.keyvault.NetworkRuleSet&text=NetworkRuleSet\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.purgeProtectionEnabled()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.purgeProtectionEnabled()"
  name: "purgeProtectionEnabled()"
  nameWithType: "Vault.purgeProtectionEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean purgeProtectionEnabled()"
  returns:
    description: "whether purge protection is enabled for this key vault.\n Purge protection can only be enabled if soft delete is enabled."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.secrets()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.secrets()"
  name: "secrets()"
  nameWithType: "Vault.secrets()"
  modifiers:
  - "abstract"
  syntax: "public abstract Secrets secrets()"
  returns:
    description: "the Key Vault secret API entry point"
    type: "<xref href=\"com.microsoft.azure.management.keyvault.Secrets?alt=com.microsoft.azure.management.keyvault.Secrets&text=Secrets\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.sku()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.sku()"
  name: "sku()"
  nameWithType: "Vault.sku()"
  modifiers:
  - "abstract"
  syntax: "public abstract Sku sku()"
  returns:
    description: "SKU details."
    type: "<xref href=\"com.microsoft.azure.management.keyvault.Sku?alt=com.microsoft.azure.management.keyvault.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.softDeleteEnabled()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.softDeleteEnabled()"
  name: "softDeleteEnabled()"
  nameWithType: "Vault.softDeleteEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean softDeleteEnabled()"
  returns:
    description: "whether soft delete is enabled for this key vault."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.tenantId()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.tenantId()"
  name: "tenantId()"
  nameWithType: "Vault.tenantId()"
  modifiers:
  - "abstract"
  syntax: "public abstract String tenantId()"
  returns:
    description: "the Azure Active Directory tenant ID that should be used for\n authenticating requests to the key vault."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.keyvault.Vault.vaultUri()"
  fullName: "com.microsoft.azure.management.keyvault.Vault.vaultUri()"
  name: "vaultUri()"
  nameWithType: "Vault.vaultUri()"
  modifiers:
  - "abstract"
  syntax: "public abstract String vaultUri()"
  returns:
    description: "the URI of the vault for performing operations on keys and secrets."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "An immutable client-side representation of an Azure Key Vault."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.implementation.KeyVaultManager?alt=com.microsoft.azure.management.keyvault.implementation.KeyVaultManager&text=KeyVaultManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.keyvault.implementation.VaultInner?alt=com.microsoft.azure.management.keyvault.implementation.VaultInner&text=VaultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.Vault?alt=com.microsoft.azure.management.keyvault.Vault&text=Vault\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.keyvault.Vault.Update?alt=com.microsoft.azure.management.keyvault.Vault.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.keyvault"
artifact: com.microsoft.azure:azure-mgmt-keyvault:1.41.4
