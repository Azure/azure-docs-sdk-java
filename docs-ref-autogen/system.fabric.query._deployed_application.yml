### YamlMime:ManagedReference
items:
- uid: system.fabric.query._deployed_application
  id: _deployed_application
  parent: system.fabric.query
  children:
  - system.fabric.query._deployed_application.getApplicationName()
  - system.fabric.query._deployed_application.getApplicationTypeName()
  - system.fabric.query._deployed_application.getDeploymentStatus()
  - system.fabric.query._deployed_application.getLogDir()
  - system.fabric.query._deployed_application.getTmpDir()
  - system.fabric.query._deployed_application.getWorkDir()
  - system.fabric.query._deployed_application.toString()
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: DeployedApplication
  nameWithType: DeployedApplication
  fullName: system.fabric.query.DeployedApplication
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 11
  package: system.fabric.query
  summary: <p>Describes an instance of an applicationâ€™s service host running on a <xref uid="system.fabric.query._service" data-throw-if-not-resolved="false">Service</xref> Fabric <xref uid="system.fabric.query._node" data-throw-if-not-resolved="false">Node</xref>. </p>
  syntax:
    content: public class DeployedApplication
  inheritance:
  - java.lang.Object
- uid: system.fabric.query._deployed_application.getApplicationName()
  id: getApplicationName()
  parent: system.fabric.query._deployed_application
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: getApplicationName()
  nameWithType: DeployedApplication.getApplicationName()
  fullName: URI system.fabric.query.DeployedApplication.getApplicationName()
  overload: system.fabric.query._deployed_application.getApplicationName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 47
  package: system.fabric.query
  summary: >-
    <p>Gets the application name.</p>

    <p></p>
  syntax:
    content: public URI getApplicationName()
    return:
      type: "62304784"
      description: <p>The application name. </p>
- uid: system.fabric.query._deployed_application.getApplicationTypeName()
  id: getApplicationTypeName()
  parent: system.fabric.query._deployed_application
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: getApplicationTypeName()
  nameWithType: DeployedApplication.getApplicationTypeName()
  fullName: String system.fabric.query.DeployedApplication.getApplicationTypeName()
  overload: system.fabric.query._deployed_application.getApplicationTypeName*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 56
  package: system.fabric.query
  summary: >-
    <p>Gets the application type name.</p>

    <p></p>
  syntax:
    content: public String getApplicationTypeName()
    return:
      type: "26831127"
      description: <p>The application type name. </p>
- uid: system.fabric.query._deployed_application.getDeploymentStatus()
  id: getDeploymentStatus()
  parent: system.fabric.query._deployed_application
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: getDeploymentStatus()
  nameWithType: DeployedApplication.getDeploymentStatus()
  fullName: DeploymentStatus system.fabric.query.DeployedApplication.getDeploymentStatus()
  overload: system.fabric.query._deployed_application.getDeploymentStatus*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 65
  package: system.fabric.query
  summary: >-
    <p>Gets the status of the deployed application instance.</p>

    <p></p>
  syntax:
    content: public DeploymentStatus getDeploymentStatus()
    return:
      type: system.fabric._deployment_status
      description: <p>The status of the deployed application instance. </p>
- uid: system.fabric.query._deployed_application.getLogDir()
  id: getLogDir()
  parent: system.fabric.query._deployed_application
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: getLogDir()
  nameWithType: DeployedApplication.getLogDir()
  fullName: String system.fabric.query.DeployedApplication.getLogDir()
  overload: system.fabric.query._deployed_application.getLogDir*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 83
  package: system.fabric.query
  summary: >-
    <p>Gets the log directory path used by the deployed application instance.</p>

    <p></p>
  syntax:
    content: public String getLogDir()
    return:
      type: "26831127"
      description: <p>The log directory path used by the deployed application instance. </p>
- uid: system.fabric.query._deployed_application.getTmpDir()
  id: getTmpDir()
  parent: system.fabric.query._deployed_application
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: getTmpDir()
  nameWithType: DeployedApplication.getTmpDir()
  fullName: String system.fabric.query.DeployedApplication.getTmpDir()
  overload: system.fabric.query._deployed_application.getTmpDir*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 92
  package: system.fabric.query
  summary: >-
    <p>Gets the temp directory path used by the deployed application instance.</p>

    <p></p>
  syntax:
    content: public String getTmpDir()
    return:
      type: "26831127"
      description: <p>The temp directory path used by the deployed application instance. </p>
- uid: system.fabric.query._deployed_application.getWorkDir()
  id: getWorkDir()
  parent: system.fabric.query._deployed_application
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: getWorkDir()
  nameWithType: DeployedApplication.getWorkDir()
  fullName: String system.fabric.query.DeployedApplication.getWorkDir()
  overload: system.fabric.query._deployed_application.getWorkDir*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 74
  package: system.fabric.query
  summary: >-
    <p>Gets the work directory path used by the deployed application instance.</p>

    <p></p>
  syntax:
    content: public String getWorkDir()
    return:
      type: "26831127"
      description: <p>The work directory path used by the deployed application instance. </p>
- uid: system.fabric.query._deployed_application.toString()
  id: toString()
  parent: system.fabric.query._deployed_application
  href: system.fabric.query._deployed_application.yml
  langs:
  - java
  name: toString()
  nameWithType: DeployedApplication.toString()
  fullName: String system.fabric.query.DeployedApplication.toString()
  overload: system.fabric.query._deployed_application.toString*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/query/DeployedApplication.java
    startLine: 97
  package: system.fabric.query
  syntax:
    content: public String toString()
    return:
      type: "26831127"
references:
- uid: "62304784"
  spec.java:
  - name: URI
    fullName: URI
- uid: system.fabric.query._deployed_application.getApplicationName*
  name: getApplicationName
  nameWithType: DeployedApplication.getApplicationName
  fullName: URI system.fabric.query.DeployedApplication.getApplicationName
  package: system.fabric.query
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: system.fabric.query._deployed_application.getApplicationTypeName*
  name: getApplicationTypeName
  nameWithType: DeployedApplication.getApplicationTypeName
  fullName: String system.fabric.query.DeployedApplication.getApplicationTypeName
  package: system.fabric.query
- uid: system.fabric.query._deployed_application.getDeploymentStatus*
  name: getDeploymentStatus
  nameWithType: DeployedApplication.getDeploymentStatus
  fullName: DeploymentStatus system.fabric.query.DeployedApplication.getDeploymentStatus
  package: system.fabric.query
- uid: system.fabric.query._deployed_application.getWorkDir*
  name: getWorkDir
  nameWithType: DeployedApplication.getWorkDir
  fullName: String system.fabric.query.DeployedApplication.getWorkDir
  package: system.fabric.query
- uid: system.fabric.query._deployed_application.getLogDir*
  name: getLogDir
  nameWithType: DeployedApplication.getLogDir
  fullName: String system.fabric.query.DeployedApplication.getLogDir
  package: system.fabric.query
- uid: system.fabric.query._deployed_application.getTmpDir*
  name: getTmpDir
  nameWithType: DeployedApplication.getTmpDir
  fullName: String system.fabric.query.DeployedApplication.getTmpDir
  package: system.fabric.query
- uid: system.fabric.query._deployed_application.toString*
  name: toString
  nameWithType: DeployedApplication.toString
  fullName: String system.fabric.query.DeployedApplication.toString
  package: system.fabric.query
- uid: system.fabric._deployment_status
  parent: system.fabric
  href: system.fabric._deployment_status.yml
  name: DeploymentStatus
  nameWithType: DeploymentStatus
  fullName: system.fabric.DeploymentStatus
  type: Enum
  summary: <p>Specifies the status of the package on the node </p>
  syntax:
    content: public enum DeploymentStatus
- uid: system.fabric.query._service
  parent: system.fabric.query
  href: system.fabric.query._service.yml
  name: Service
  nameWithType: Service
  fullName: system.fabric.query.Service
  type: Class
  summary: <p>Represents a service. </p>
  syntax:
    content: public class Service
- uid: system.fabric.query._node
  parent: system.fabric.query
  href: system.fabric.query._node.yml
  name: Node
  nameWithType: Node
  fullName: system.fabric.query.Node
  type: Class
  summary: >-
    <p>This class contains the details of a <xref uid="system.fabric.query._node" data-throw-if-not-resolved="false">Node</xref>. These details include - name, ip, node-type, code-version, config-version, node-status, node uptime, health-state, if it is a seed-node, upgrade domain, fault domain, nodeId, node instance-id and node de-activation result.</p>

    <p></p>
  syntax:
    content: public class Node
