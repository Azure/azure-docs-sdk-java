### YamlMime:JavaMember
uid: "com.azure.storage.file.share.ShareFileClient.uploadRangeWithResponse*"
fullName: "com.azure.storage.file.share.ShareFileClient.uploadRangeWithResponse"
name: "uploadRangeWithResponse"
nameWithType: "ShareFileClient.uploadRangeWithResponse"
members:
- uid: "com.azure.storage.file.share.ShareFileClient.uploadRangeWithResponse(com.azure.storage.file.share.models.ShareFileUploadRangeOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareFileClient.uploadRangeWithResponse(ShareFileUploadRangeOptions options, Duration timeout, Context context)"
  name: "uploadRangeWithResponse(ShareFileUploadRangeOptions options, Duration timeout, Context context)"
  nameWithType: "ShareFileClient.uploadRangeWithResponse(ShareFileUploadRangeOptions options, Duration timeout, Context context)"
  summary: "Uploads a range of bytes to the specified offset of a file in storage file service. Upload operations perform an in-place write on the specified file.\n\n**Code Samples**\n\nUpload data \"default\" to the file in Storage File Service.\n\n```java\nInputStream uploadData = new ByteArrayInputStream(data);\n Response<ShareFileUploadInfo> response = shareFileClient.uploadRangeWithResponse(\n     new ShareFileUploadRangeOptions(uploadData, data.length), Duration.ofSeconds(30), null);\n System.out.printf(\"Completed uploading the data with response %d%n.\", response.getStatusCode());\n System.out.printf(\"ETag of the file is %s%n\", response.getValue().getETag());\n```\n\nThis method does a single Put Range operation. For more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-range"
  parameters:
  - description: "Argument collection for the upload operation."
    name: "options"
    type: "<xref href=\"com.azure.storage.file.share.models.ShareFileUploadRangeOptions?alt=com.azure.storage.file.share.models.ShareFileUploadRangeOptions&text=ShareFileUploadRangeOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ShareFileUploadInfo> uploadRangeWithResponse(ShareFileUploadRangeOptions options, Duration timeout, Context context)"
  returns:
    description: "The <xref uid=\"com.azure.storage.file.share.models.ShareFileUploadInfo\" data-throw-if-not-resolved=\"false\" data-raw-source=\"file upload info\"></xref>"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareFileUploadInfo?alt=com.azure.storage.file.share.models.ShareFileUploadInfo&text=ShareFileUploadInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.12.0
