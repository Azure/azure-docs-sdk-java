### YamlMime:JavaMember
nameWithType: TableServiceEntity.readEntity
type: method
members:
- fullName: com.microsoft.azure.storage.table.TableServiceEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  name: readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  nameWithType: TableServiceEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  overridden: com.microsoft.azure.storage.table.TableEntity.readEntity(HashMap<String, EntityProperty>,OperationContext)
  parameters:
  - description: <p>The <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false">EntityProperty</xref> data values to deserialize and store in this table entity instance. </p>
    name: properties
    type: final HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation. </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs during the deserialization. </p>
  summary: >-
    <p>Populates this table entity instance using the map of property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values. </p>

    <p>This method invokes <xref uid="com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object,final HashMap&lt;String, EntityProperty&gt;,final OperationContext)" data-throw-if-not-resolved="false">TableServiceEntity#readEntityWithReflection</xref> to populate the table entity instance the method is called on using reflection. Table entity classes that extend <xref uid="com.microsoft.azure.storage.table.TableServiceEntity" data-throw-if-not-resolved="false">TableServiceEntity</xref> can take advantage of this behavior by implementing getter and setter methods for the particular properties of the table entity in Microsoft Azure storage the class represents. </p>

    <p>Override this method in classes that extend <xref uid="com.microsoft.azure.storage.table.TableServiceEntity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to invoke custom serialization code.</p>

    <p></p>
  syntax: public void readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.TableServiceEntity.readEntity(final HashMap<String, EntityProperty>,final OperationContext)
uid: com.microsoft.azure.storage.table.TableServiceEntity.readEntity*
fullName: com.microsoft.azure.storage.table.TableServiceEntity.readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
name: readEntity(final HashMap<String, EntityProperty> properties, final OperationContext opContext)
package: com.microsoft.azure.storage.table
metadata: {}
