### YamlMime:JavaMember
uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionResource.assignableScopes*"
fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionResource.assignableScopes"
name: "assignableScopes"
nameWithType: "SqlRoleDefinitionResource.assignableScopes"
members:
- uid: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionResource.assignableScopes()"
  fullName: "com.azure.resourcemanager.cosmos.fluent.models.SqlRoleDefinitionResource.assignableScopes()"
  name: "assignableScopes()"
  nameWithType: "SqlRoleDefinitionResource.assignableScopes()"
  summary: "Get the assignableScopes property: A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
  syntax: "public List<String> assignableScopes()"
  returns:
    description: "the assignableScopes value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.cosmos.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.13.0
