### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  id: SubtaskInformation
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.id()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.result()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.state()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime()
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo(com.microsoft.azure.batch.protocol.models.ComputeNodeInformation)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState(com.microsoft.azure.batch.protocol.models.SubtaskState)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime(org.joda.time.DateTime)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState(com.microsoft.azure.batch.protocol.models.SubtaskState)
  - com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime(org.joda.time.DateTime)
  langs:
  - java
  name: SubtaskInformation
  nameWithType: SubtaskInformation
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Information about an Azure Batch subtask.
  syntax:
    content: public class SubtaskInformation
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation()
  id: SubtaskInformation()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: SubtaskInformation()
  nameWithType: SubtaskInformation.SubtaskInformation()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public SubtaskInformation()
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo()
  id: containerInfo()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: containerInfo()
  nameWithType: SubtaskInformation.containerInfo()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Task runs in a container context.
  syntax:
    content: public TaskContainerExecutionInformation containerInfo()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
      description: the containerInfo value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime()
  id: endTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: endTime()
  nameWithType: SubtaskInformation.endTime()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the subtask is in the Completed state.
  syntax:
    content: public DateTime endTime()
    return:
      type: org.joda.time.DateTime
      description: the endTime value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode()
  id: exitCode()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: exitCode()
  nameWithType: SubtaskInformation.exitCode()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the subtask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the subtask (due to timeout, or user termination via the API) you may see an operating system-defined exit code.
  syntax:
    content: public Integer exitCode()
    return:
      type: java.lang.Integer
      description: the exitCode value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo()
  id: failureInfo()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: failureInfo()
  nameWithType: SubtaskInformation.failureInfo()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is set only if the Task is in the completed state and encountered a failure.
  syntax:
    content: public TaskFailureInformation failureInfo()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
      description: the failureInfo value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.id()
  id: id()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: id()
  nameWithType: SubtaskInformation.id()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.id()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.id*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the id value.
  syntax:
    content: public Integer id()
    return:
      type: java.lang.Integer
      description: the id value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo()
  id: nodeInfo()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: nodeInfo()
  nameWithType: SubtaskInformation.nodeInfo()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the nodeInfo value.
  syntax:
    content: public ComputeNodeInformation nodeInfo()
    return:
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeInformation
      description: the nodeInfo value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState()
  id: previousState()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: previousState()
  nameWithType: SubtaskInformation.previousState()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get this property is not set if the subtask is in its initial running state. Possible values include: 'preparing', 'running', 'completed'."
  syntax:
    content: public SubtaskState previousState()
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
      description: the previousState value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime()
  id: previousStateTransitionTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: previousStateTransitionTime()
  nameWithType: SubtaskInformation.previousStateTransitionTime()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property is not set if the subtask is in its initial running state.
  syntax:
    content: public DateTime previousStateTransitionTime()
    return:
      type: org.joda.time.DateTime
      description: the previousStateTransitionTime value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.result()
  id: result()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: result()
  nameWithType: SubtaskInformation.result()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.result()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.result*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  syntax:
    content: public TaskExecutionResult result()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
      description: the result value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime()
  id: startTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: startTime()
  nameWithType: SubtaskInformation.startTime()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the startTime value.
  syntax:
    content: public DateTime startTime()
    return:
      type: org.joda.time.DateTime
      description: the startTime value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.state()
  id: state()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: state()
  nameWithType: SubtaskInformation.state()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.state()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.state*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get possible values include: 'preparing', 'running', 'completed'."
  syntax:
    content: public SubtaskState state()
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
      description: the state value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime()
  id: stateTransitionTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: stateTransitionTime()
  nameWithType: SubtaskInformation.stateTransitionTime()
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime()
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the stateTransitionTime value.
  syntax:
    content: public DateTime stateTransitionTime()
    return:
      type: org.joda.time.DateTime
      description: the stateTransitionTime value
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)
  id: withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withContainerInfo(TaskContainerExecutionInformation containerInfo)
  nameWithType: SubtaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Task runs in a container context.
  syntax:
    content: public SubtaskInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)
    parameters:
    - id: containerInfo
      type: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
      description: the containerInfo value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime(org.joda.time.DateTime)
  id: withEndTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withEndTime(DateTime endTime)
  nameWithType: SubtaskInformation.withEndTime(DateTime endTime)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime(DateTime endTime)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the subtask is in the Completed state.
  syntax:
    content: public SubtaskInformation withEndTime(DateTime endTime)
    parameters:
    - id: endTime
      type: org.joda.time.DateTime
      description: the endTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode(java.lang.Integer)
  id: withExitCode(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withExitCode(Integer exitCode)
  nameWithType: SubtaskInformation.withExitCode(Integer exitCode)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode(Integer exitCode)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the subtask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the subtask (due to timeout, or user termination via the API) you may see an operating system-defined exit code.
  syntax:
    content: public SubtaskInformation withExitCode(Integer exitCode)
    parameters:
    - id: exitCode
      type: java.lang.Integer
      description: the exitCode value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)
  id: withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withFailureInfo(TaskFailureInformation failureInfo)
  nameWithType: SubtaskInformation.withFailureInfo(TaskFailureInformation failureInfo)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo(TaskFailureInformation failureInfo)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is set only if the Task is in the completed state and encountered a failure.
  syntax:
    content: public SubtaskInformation withFailureInfo(TaskFailureInformation failureInfo)
    parameters:
    - id: failureInfo
      type: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
      description: the failureInfo value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId(java.lang.Integer)
  id: withId(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withId(Integer id)
  nameWithType: SubtaskInformation.withId(Integer id)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId(Integer id)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the id value.
  syntax:
    content: public SubtaskInformation withId(Integer id)
    parameters:
    - id: id
      type: java.lang.Integer
      description: the id value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo(com.microsoft.azure.batch.protocol.models.ComputeNodeInformation)
  id: withNodeInfo(com.microsoft.azure.batch.protocol.models.ComputeNodeInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withNodeInfo(ComputeNodeInformation nodeInfo)
  nameWithType: SubtaskInformation.withNodeInfo(ComputeNodeInformation nodeInfo)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo(ComputeNodeInformation nodeInfo)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the nodeInfo value.
  syntax:
    content: public SubtaskInformation withNodeInfo(ComputeNodeInformation nodeInfo)
    parameters:
    - id: nodeInfo
      type: com.microsoft.azure.batch.protocol.models.ComputeNodeInformation
      description: the nodeInfo value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState(com.microsoft.azure.batch.protocol.models.SubtaskState)
  id: withPreviousState(com.microsoft.azure.batch.protocol.models.SubtaskState)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withPreviousState(SubtaskState previousState)
  nameWithType: SubtaskInformation.withPreviousState(SubtaskState previousState)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState(SubtaskState previousState)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set this property is not set if the subtask is in its initial running state. Possible values include: 'preparing', 'running', 'completed'."
  syntax:
    content: public SubtaskInformation withPreviousState(SubtaskState previousState)
    parameters:
    - id: previousState
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
      description: the previousState value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime(org.joda.time.DateTime)
  id: withPreviousStateTransitionTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
  nameWithType: SubtaskInformation.withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property is not set if the subtask is in its initial running state.
  syntax:
    content: public SubtaskInformation withPreviousStateTransitionTime(DateTime previousStateTransitionTime)
    parameters:
    - id: previousStateTransitionTime
      type: org.joda.time.DateTime
      description: the previousStateTransitionTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)
  id: withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withResult(TaskExecutionResult result)
  nameWithType: SubtaskInformation.withResult(TaskExecutionResult result)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult(TaskExecutionResult result)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  syntax:
    content: public SubtaskInformation withResult(TaskExecutionResult result)
    parameters:
    - id: result
      type: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
      description: the result value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime(org.joda.time.DateTime)
  id: withStartTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withStartTime(DateTime startTime)
  nameWithType: SubtaskInformation.withStartTime(DateTime startTime)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime(DateTime startTime)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the startTime value.
  syntax:
    content: public SubtaskInformation withStartTime(DateTime startTime)
    parameters:
    - id: startTime
      type: org.joda.time.DateTime
      description: the startTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState(com.microsoft.azure.batch.protocol.models.SubtaskState)
  id: withState(com.microsoft.azure.batch.protocol.models.SubtaskState)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withState(SubtaskState state)
  nameWithType: SubtaskInformation.withState(SubtaskState state)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState(SubtaskState state)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set possible values include: 'preparing', 'running', 'completed'."
  syntax:
    content: public SubtaskInformation withState(SubtaskState state)
    parameters:
    - id: state
      type: com.microsoft.azure.batch.protocol.models.SubtaskState
      description: the state value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime(org.joda.time.DateTime)
  id: withStateTransitionTime(org.joda.time.DateTime)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.SubtaskInformation
  langs:
  - java
  name: withStateTransitionTime(DateTime stateTransitionTime)
  nameWithType: SubtaskInformation.withStateTransitionTime(DateTime stateTransitionTime)
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime(DateTime stateTransitionTime)
  overload: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the stateTransitionTime value.
  syntax:
    content: public SubtaskInformation withStateTransitionTime(DateTime stateTransitionTime)
    parameters:
    - id: stateTransitionTime
      type: org.joda.time.DateTime
      description: the stateTransitionTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.SubtaskInformation
      description: the SubtaskInformation object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation*
  name: SubtaskInformation
  nameWithType: SubtaskInformation.SubtaskInformation
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.id*
  name: id
  nameWithType: SubtaskInformation.id
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.id
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId*
  name: withId
  nameWithType: SubtaskInformation.withId
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ComputeNodeInformation
  name: ComputeNodeInformation
  nameWithType: ComputeNodeInformation
  fullName: com.microsoft.azure.batch.protocol.models.ComputeNodeInformation
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo*
  name: nodeInfo
  nameWithType: SubtaskInformation.nodeInfo
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo*
  name: withNodeInfo
  nameWithType: SubtaskInformation.withNodeInfo
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.DateTime
  spec.java:
  - uid: org.joda.time.DateTime
    name: DateTime
    fullName: org.joda.time.DateTime
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime*
  name: startTime
  nameWithType: SubtaskInformation.startTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime*
  name: withStartTime
  nameWithType: SubtaskInformation.withStartTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime*
  name: endTime
  nameWithType: SubtaskInformation.endTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime*
  name: withEndTime
  nameWithType: SubtaskInformation.withEndTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode*
  name: exitCode
  nameWithType: SubtaskInformation.exitCode
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode*
  name: withExitCode
  nameWithType: SubtaskInformation.withExitCode
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
  name: TaskContainerExecutionInformation
  nameWithType: TaskContainerExecutionInformation
  fullName: com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo*
  name: containerInfo
  nameWithType: SubtaskInformation.containerInfo
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo*
  name: withContainerInfo
  nameWithType: SubtaskInformation.withContainerInfo
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
  name: TaskFailureInformation
  nameWithType: TaskFailureInformation
  fullName: com.microsoft.azure.batch.protocol.models.TaskFailureInformation
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo*
  name: failureInfo
  nameWithType: SubtaskInformation.failureInfo
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo*
  name: withFailureInfo
  nameWithType: SubtaskInformation.withFailureInfo
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskState
  name: SubtaskState
  nameWithType: SubtaskState
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskState
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.state*
  name: state
  nameWithType: SubtaskInformation.state
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.state
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState*
  name: withState
  nameWithType: SubtaskInformation.withState
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime*
  name: stateTransitionTime
  nameWithType: SubtaskInformation.stateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime*
  name: withStateTransitionTime
  nameWithType: SubtaskInformation.withStateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState*
  name: previousState
  nameWithType: SubtaskInformation.previousState
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState*
  name: withPreviousState
  nameWithType: SubtaskInformation.withPreviousState
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime*
  name: previousStateTransitionTime
  nameWithType: SubtaskInformation.previousStateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime*
  name: withPreviousStateTransitionTime
  nameWithType: SubtaskInformation.withPreviousStateTransitionTime
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
  name: TaskExecutionResult
  nameWithType: TaskExecutionResult
  fullName: com.microsoft.azure.batch.protocol.models.TaskExecutionResult
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.result*
  name: result
  nameWithType: SubtaskInformation.result
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.result
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult*
  name: withResult
  nameWithType: SubtaskInformation.withResult
  fullName: com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
