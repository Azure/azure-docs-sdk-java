### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation"
fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation"
name: "SubtaskInformation"
nameWithType: "SubtaskInformation"
summary: "Information about an Azure Batch subtask."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class SubtaskInformation"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.SubtaskInformation()"
  name: "SubtaskInformation()"
  nameWithType: "SubtaskInformation.SubtaskInformation()"
  syntax: "public SubtaskInformation()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.containerInfo()"
  name: "containerInfo()"
  nameWithType: "SubtaskInformation.containerInfo()"
  summary: "Get this property is set only if the Task runs in a container context."
  syntax: "public TaskContainerExecutionInformation containerInfo()"
  desc: "Get this property is set only if the Task runs in a container context."
  returns:
    description: "the containerInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.endTime()"
  name: "endTime()"
  nameWithType: "SubtaskInformation.endTime()"
  summary: "Get this property is set only if the subtask is in the Completed state."
  syntax: "public DateTime endTime()"
  desc: "Get this property is set only if the subtask is in the Completed state."
  returns:
    description: "the endTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.exitCode()"
  name: "exitCode()"
  nameWithType: "SubtaskInformation.exitCode()"
  summary: "Get this property is set only if the subtask is in the completed state."
  syntax: "public Integer exitCode()"
  desc: "Get this property is set only if the subtask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the subtask (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
  returns:
    description: "the exitCode value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.failureInfo()"
  name: "failureInfo()"
  nameWithType: "SubtaskInformation.failureInfo()"
  summary: "Get this property is set only if the Task is in the completed state and encountered a failure."
  syntax: "public TaskFailureInformation failureInfo()"
  desc: "Get this property is set only if the Task is in the completed state and encountered a failure."
  returns:
    description: "the failureInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.id()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.id()"
  name: "id()"
  nameWithType: "SubtaskInformation.id()"
  summary: "Get the id value."
  syntax: "public Integer id()"
  desc: "Get the id value."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.nodeInfo()"
  name: "nodeInfo()"
  nameWithType: "SubtaskInformation.nodeInfo()"
  summary: "Get the node<wbr>Info value."
  syntax: "public ComputeNodeInformation nodeInfo()"
  desc: "Get the nodeInfo value."
  returns:
    description: "the nodeInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeInformation?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeInformation&text=ComputeNodeInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousState()"
  name: "previousState()"
  nameWithType: "SubtaskInformation.previousState()"
  summary: "Get this property is not set if the subtask is in its initial running state."
  syntax: "public SubtaskState previousState()"
  desc: "Get this property is not set if the subtask is in its initial running state. Possible values include: 'preparing', 'running', 'completed'."
  returns:
    description: "the previousState value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskState?alt=com.microsoft.azure.batch.protocol.models.SubtaskState&text=SubtaskState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.previousStateTransitionTime()"
  name: "previousStateTransitionTime()"
  nameWithType: "SubtaskInformation.previousStateTransitionTime()"
  summary: "Get this property is not set if the subtask is in its initial running state."
  syntax: "public DateTime previousStateTransitionTime()"
  desc: "Get this property is not set if the subtask is in its initial running state."
  returns:
    description: "the previousStateTransitionTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.result()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.result()"
  name: "result()"
  nameWithType: "SubtaskInformation.result()"
  summary: "Get if the value is 'failed', then the details of the failure can be found in the failure<wbr>Info property."
  syntax: "public TaskExecutionResult result()"
  desc: "Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  returns:
    description: "the result value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.startTime()"
  name: "startTime()"
  nameWithType: "SubtaskInformation.startTime()"
  summary: "Get the start<wbr>Time value."
  syntax: "public DateTime startTime()"
  desc: "Get the startTime value."
  returns:
    description: "the startTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.state()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.state()"
  name: "state()"
  nameWithType: "SubtaskInformation.state()"
  summary: "Get possible values include: 'preparing', 'running', 'completed'."
  syntax: "public SubtaskState state()"
  desc: "Get possible values include: 'preparing', 'running', 'completed'."
  returns:
    description: "the state value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskState?alt=com.microsoft.azure.batch.protocol.models.SubtaskState&text=SubtaskState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime()"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.stateTransitionTime()"
  name: "stateTransitionTime()"
  nameWithType: "SubtaskInformation.stateTransitionTime()"
  summary: "Get the state<wbr>Transition<wbr>Time value."
  syntax: "public DateTime stateTransitionTime()"
  desc: "Get the stateTransitionTime value."
  returns:
    description: "the stateTransitionTime value"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo(com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  name: "withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  nameWithType: "SubtaskInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  summary: "Set this property is set only if the Task runs in a container context."
  parameters:
  - description: "the containerInfo value to set"
    name: "containerInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)"
  desc: "Set this property is set only if the Task runs in a container context."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withEndTime(DateTime endTime)"
  name: "withEndTime(DateTime endTime)"
  nameWithType: "SubtaskInformation.withEndTime(DateTime endTime)"
  summary: "Set this property is set only if the subtask is in the Completed state."
  parameters:
  - description: "the endTime value to set"
    name: "endTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withEndTime(DateTime endTime)"
  desc: "Set this property is set only if the subtask is in the Completed state."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withExitCode(Integer exitCode)"
  name: "withExitCode(Integer exitCode)"
  nameWithType: "SubtaskInformation.withExitCode(Integer exitCode)"
  summary: "Set this property is set only if the subtask is in the completed state."
  parameters:
  - description: "the exitCode value to set"
    name: "exitCode"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withExitCode(Integer exitCode)"
  desc: "Set this property is set only if the subtask is in the completed state. In general, the exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. However, if the Batch service terminates the subtask (due to timeout, or user termination via the API) you may see an operating system-defined exit code."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo(com.microsoft.azure.batch.protocol.models.TaskFailureInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  name: "withFailureInfo(TaskFailureInformation failureInfo)"
  nameWithType: "SubtaskInformation.withFailureInfo(TaskFailureInformation failureInfo)"
  summary: "Set this property is set only if the Task is in the completed state and encountered a failure."
  parameters:
  - description: "the failureInfo value to set"
    name: "failureInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withFailureInfo(TaskFailureInformation failureInfo)"
  desc: "Set this property is set only if the Task is in the completed state and encountered a failure."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withId(Integer id)"
  name: "withId(Integer id)"
  nameWithType: "SubtaskInformation.withId(Integer id)"
  summary: "Set the id value."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withId(Integer id)"
  desc: "Set the id value."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo(com.microsoft.azure.batch.protocol.models.ComputeNodeInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withNodeInfo(ComputeNodeInformation nodeInfo)"
  name: "withNodeInfo(ComputeNodeInformation nodeInfo)"
  nameWithType: "SubtaskInformation.withNodeInfo(ComputeNodeInformation nodeInfo)"
  summary: "Set the node<wbr>Info value."
  parameters:
  - description: "the nodeInfo value to set"
    name: "nodeInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ComputeNodeInformation?alt=com.microsoft.azure.batch.protocol.models.ComputeNodeInformation&text=ComputeNodeInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withNodeInfo(ComputeNodeInformation nodeInfo)"
  desc: "Set the nodeInfo value."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState(com.microsoft.azure.batch.protocol.models.SubtaskState)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousState(SubtaskState previousState)"
  name: "withPreviousState(SubtaskState previousState)"
  nameWithType: "SubtaskInformation.withPreviousState(SubtaskState previousState)"
  summary: "Set this property is not set if the subtask is in its initial running state."
  parameters:
  - description: "the previousState value to set"
    name: "previousState"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskState?alt=com.microsoft.azure.batch.protocol.models.SubtaskState&text=SubtaskState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withPreviousState(SubtaskState previousState)"
  desc: "Set this property is not set if the subtask is in its initial running state. Possible values include: 'preparing', 'running', 'completed'."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withPreviousStateTransitionTime(DateTime previousStateTransitionTime)"
  name: "withPreviousStateTransitionTime(DateTime previousStateTransitionTime)"
  nameWithType: "SubtaskInformation.withPreviousStateTransitionTime(DateTime previousStateTransitionTime)"
  summary: "Set this property is not set if the subtask is in its initial running state."
  parameters:
  - description: "the previousStateTransitionTime value to set"
    name: "previousStateTransitionTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withPreviousStateTransitionTime(DateTime previousStateTransitionTime)"
  desc: "Set this property is not set if the subtask is in its initial running state."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult(com.microsoft.azure.batch.protocol.models.TaskExecutionResult)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withResult(TaskExecutionResult result)"
  name: "withResult(TaskExecutionResult result)"
  nameWithType: "SubtaskInformation.withResult(TaskExecutionResult result)"
  summary: "Set if the value is 'failed', then the details of the failure can be found in the failure<wbr>Info property."
  parameters:
  - description: "the result value to set"
    name: "result"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withResult(TaskExecutionResult result)"
  desc: "Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStartTime(DateTime startTime)"
  name: "withStartTime(DateTime startTime)"
  nameWithType: "SubtaskInformation.withStartTime(DateTime startTime)"
  summary: "Set the start<wbr>Time value."
  parameters:
  - description: "the startTime value to set"
    name: "startTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withStartTime(DateTime startTime)"
  desc: "Set the startTime value."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState(com.microsoft.azure.batch.protocol.models.SubtaskState)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withState(SubtaskState state)"
  name: "withState(SubtaskState state)"
  nameWithType: "SubtaskInformation.withState(SubtaskState state)"
  summary: "Set possible values include: 'preparing', 'running', 'completed'."
  parameters:
  - description: "the state value to set"
    name: "state"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskState?alt=com.microsoft.azure.batch.protocol.models.SubtaskState&text=SubtaskState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withState(SubtaskState state)"
  desc: "Set possible values include: 'preparing', 'running', 'completed'."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime(org.joda.time.DateTime)"
  fullName: "com.microsoft.azure.batch.protocol.models.SubtaskInformation.withStateTransitionTime(DateTime stateTransitionTime)"
  name: "withStateTransitionTime(DateTime stateTransitionTime)"
  nameWithType: "SubtaskInformation.withStateTransitionTime(DateTime stateTransitionTime)"
  summary: "Set the state<wbr>Transition<wbr>Time value."
  parameters:
  - description: "the stateTransitionTime value to set"
    name: "stateTransitionTime"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SubtaskInformation withStateTransitionTime(DateTime stateTransitionTime)"
  desc: "Set the stateTransitionTime value."
  returns:
    description: "the SubtaskInformation object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Information about an Azure Batch subtask."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
