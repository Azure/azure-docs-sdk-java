### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.models.PolicyExemptionProperties.withExemptionCategory*"
fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyExemptionProperties.withExemptionCategory"
name: "withExemptionCategory"
nameWithType: "PolicyExemptionProperties.withExemptionCategory"
members:
- uid: "com.azure.resourcemanager.resources.fluent.models.PolicyExemptionProperties.withExemptionCategory(com.azure.resourcemanager.resources.models.ExemptionCategory)"
  fullName: "com.azure.resourcemanager.resources.fluent.models.PolicyExemptionProperties.withExemptionCategory(ExemptionCategory exemptionCategory)"
  name: "withExemptionCategory(ExemptionCategory exemptionCategory)"
  nameWithType: "PolicyExemptionProperties.withExemptionCategory(ExemptionCategory exemptionCategory)"
  summary: "Set the exemptionCategory property: The policy exemption category. Possible values are Waiver and Mitigated."
  parameters:
  - description: "the exemptionCategory value to set."
    name: "exemptionCategory"
    type: "<xref href=\"com.azure.resourcemanager.resources.models.ExemptionCategory?alt=com.azure.resourcemanager.resources.models.ExemptionCategory&text=ExemptionCategory\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PolicyExemptionProperties withExemptionCategory(ExemptionCategory exemptionCategory)"
  returns:
    description: "the PolicyExemptionProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyExemptionProperties?alt=com.azure.resourcemanager.resources.fluent.models.PolicyExemptionProperties&text=PolicyExemptionProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
