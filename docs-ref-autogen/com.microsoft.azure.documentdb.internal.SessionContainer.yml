### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer"
  id: "SessionContainer"
  parent: "com.microsoft.azure.documentdb.internal"
  children:
  - "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer(java.lang.String,com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache,com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache)"
  - "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer(java.lang.String,com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache,com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache,java.util.concurrent.ConcurrentHashMap<java.lang.String,java.lang.Long>,java.util.concurrent.ConcurrentHashMap<java.lang.Long,java.util.concurrent.ConcurrentHashMap<java.lang.String,com.microsoft.azure.documentdb.internal.VectorSessionToken>>)"
  - "com.microsoft.azure.documentdb.internal.SessionContainer.clearToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  - "com.microsoft.azure.documentdb.internal.SessionContainer.getHostName()"
  - "com.microsoft.azure.documentdb.internal.SessionContainer.resolveGlobalSessionToken(java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.SessionContainer.resolvePartitionLocalSessionToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest,java.lang.String)"
  - "com.microsoft.azure.documentdb.internal.SessionContainer.resolveSessionToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  - "com.microsoft.azure.documentdb.internal.SessionContainer.setSessionToken(com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  langs:
  - "java"
  name: "SessionContainer"
  nameWithType: "SessionContainer"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer"
  type: "Class"
  package: "com.microsoft.azure.documentdb.internal"
  summary: "Used internally to cache the collections' session tokens in the Azure Cosmos DB database service."
  syntax:
    content: "public final class SessionContainer"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer(java.lang.String,com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache,com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache)"
  id: "SessionContainer(java.lang.String,com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache,com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache)"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache)"
  nameWithType: "SessionContainer.SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache)"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache)"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer*"
  type: "Constructor"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache)"
    parameters:
    - id: "hostName"
      type: "java.lang.String"
    - id: "collectionCache"
      type: "com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache"
    - id: "partitionKeyRangeCache"
      type: "com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer(java.lang.String,com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache,com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache,java.util.concurrent.ConcurrentHashMap<java.lang.String,java.lang.Long>,java.util.concurrent.ConcurrentHashMap<java.lang.Long,java.util.concurrent.ConcurrentHashMap<java.lang.String,com.microsoft.azure.documentdb.internal.VectorSessionToken>>)"
  id: "SessionContainer(java.lang.String,com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache,com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache,java.util.concurrent.ConcurrentHashMap<java.lang.String,java.lang.Long>,java.util.concurrent.ConcurrentHashMap<java.lang.Long,java.util.concurrent.ConcurrentHashMap<java.lang.String,com.microsoft.azure.documentdb.internal.VectorSessionToken>>)"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache, ConcurrentHashMap<String,Long> nameToRidMap, ConcurrentHashMap<Long,ConcurrentHashMap<String,VectorSessionToken>> ridToTokensMap)"
  nameWithType: "SessionContainer.SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache, ConcurrentHashMap<String,Long> nameToRidMap, ConcurrentHashMap<Long,ConcurrentHashMap<String,VectorSessionToken>> ridToTokensMap)"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache, ConcurrentHashMap<String,Long> nameToRidMap, ConcurrentHashMap<Long,ConcurrentHashMap<String,VectorSessionToken>> ridToTokensMap)"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer*"
  type: "Constructor"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public SessionContainer(String hostName, ClientCollectionCache collectionCache, PartitionKeyRangeCache partitionKeyRangeCache, ConcurrentHashMap<String,Long> nameToRidMap, ConcurrentHashMap<Long,ConcurrentHashMap<String,VectorSessionToken>> ridToTokensMap)"
    parameters:
    - id: "hostName"
      type: "java.lang.String"
    - id: "collectionCache"
      type: "com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache"
    - id: "partitionKeyRangeCache"
      type: "com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache"
    - id: "nameToRidMap"
      type: "java.util.concurrent.ConcurrentHashMap<java.lang.String,java.lang.Long>"
    - id: "ridToTokensMap"
      type: "java.util.concurrent.ConcurrentHashMap<java.lang.Long,java.util.concurrent.ConcurrentHashMap<java.lang.String,com.microsoft.azure.documentdb.internal.VectorSessionToken>>"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.clearToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  id: "clearToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "clearToken(DocumentServiceRequest request)"
  nameWithType: "SessionContainer.clearToken(DocumentServiceRequest request)"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.clearToken(DocumentServiceRequest request)"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.clearToken*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public void clearToken(DocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.getHostName()"
  id: "getHostName()"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "getHostName()"
  nameWithType: "SessionContainer.getHostName()"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.getHostName()"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.getHostName*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public String getHostName()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveGlobalSessionToken(java.lang.String)"
  id: "resolveGlobalSessionToken(java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "resolveGlobalSessionToken(String collectionLink)"
  nameWithType: "SessionContainer.resolveGlobalSessionToken(String collectionLink)"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveGlobalSessionToken(String collectionLink)"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveGlobalSessionToken*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: "public String resolveGlobalSessionToken(String collectionLink)"
    parameters:
    - id: "collectionLink"
      type: "java.lang.String"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.resolvePartitionLocalSessionToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest,java.lang.String)"
  id: "resolvePartitionLocalSessionToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest,java.lang.String)"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "resolvePartitionLocalSessionToken(DocumentServiceRequest request, String partitionKeyRangeId)"
  nameWithType: "SessionContainer.resolvePartitionLocalSessionToken(DocumentServiceRequest request, String partitionKeyRangeId)"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.resolvePartitionLocalSessionToken(DocumentServiceRequest request, String partitionKeyRangeId)"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.resolvePartitionLocalSessionToken*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  syntax:
    content: " VectorSessionToken resolvePartitionLocalSessionToken(DocumentServiceRequest request, String partitionKeyRangeId)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
    - id: "partitionKeyRangeId"
      type: "java.lang.String"
    return:
      type: "com.microsoft.azure.documentdb.internal.VectorSessionToken"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveSessionToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  id: "resolveSessionToken(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "resolveSessionToken(DocumentServiceRequest request)"
  nameWithType: "SessionContainer.resolveSessionToken(DocumentServiceRequest request)"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveSessionToken(DocumentServiceRequest request)"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveSessionToken*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  summary: "Resolves a session token for request. This should be invoked for read only requests which require a session token in session consistency. It attempts to resolve the target partition key range. 1) If partition key range is resolved: it will find the local session token for the given partition or if not found uses parent partition session token. 2) If partition key range is not resolved: it passes the global session token."
  syntax:
    content: "public String resolveSessionToken(DocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "com.microsoft.azure.documentdb.DocumentClientException"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.setSessionToken(com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  id: "setSessionToken(com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.microsoft.azure.documentdb.internal.SessionContainer"
  langs:
  - "java"
  name: "setSessionToken(AbstractDocumentServiceRequest request, Map<String,String> responseHeaders)"
  nameWithType: "SessionContainer.setSessionToken(AbstractDocumentServiceRequest request, Map<String,String> responseHeaders)"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.setSessionToken(AbstractDocumentServiceRequest request, Map<String,String> responseHeaders)"
  overload: "com.microsoft.azure.documentdb.internal.SessionContainer.setSessionToken*"
  type: "Method"
  package: "com.microsoft.azure.documentdb.internal"
  summary: "Updates the session cache with the new session token from response. Also if partition key range cache is stale, it refreshes the partition key range cache"
  syntax:
    content: "public void setSessionToken(AbstractDocumentServiceRequest request, Map<String,String> responseHeaders)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest"
    - id: "responseHeaders"
      type: "java.util.Map<java.lang.String,java.lang.String>"
  exceptions:
  - type: "com.microsoft.azure.documentdb.DocumentClientException"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache"
  name: "ClientCollectionCache"
  nameWithType: "ClientCollectionCache"
  fullName: "com.microsoft.azure.documentdb.internal.routing.ClientCollectionCache"
- uid: "com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache"
  name: "PartitionKeyRangeCache"
  nameWithType: "PartitionKeyRangeCache"
  fullName: "com.microsoft.azure.documentdb.internal.routing.PartitionKeyRangeCache"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer*"
  name: "SessionContainer"
  nameWithType: "SessionContainer.SessionContainer"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.SessionContainer"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "java.util.concurrent.ConcurrentHashMap<java.lang.String,java.lang.Long>"
  spec.java:
  - uid: "java.util.concurrent.ConcurrentHashMap"
    name: "ConcurrentHashMap"
    fullName: "java.util.concurrent.ConcurrentHashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ">"
    fullName: ">"
- uid: "java.util.concurrent.ConcurrentHashMap<java.lang.Long,java.util.concurrent.ConcurrentHashMap<java.lang.String,com.microsoft.azure.documentdb.internal.VectorSessionToken>>"
  spec.java:
  - uid: "java.util.concurrent.ConcurrentHashMap"
    name: "ConcurrentHashMap"
    fullName: "java.util.concurrent.ConcurrentHashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
  - name: ","
    fullName: ","
  - uid: "java.util.concurrent.ConcurrentHashMap"
    name: "ConcurrentHashMap"
    fullName: "java.util.concurrent.ConcurrentHashMap"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "com.microsoft.azure.documentdb.internal.VectorSessionToken"
    name: "VectorSessionToken"
    fullName: "com.microsoft.azure.documentdb.internal.VectorSessionToken"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.getHostName*"
  name: "getHostName"
  nameWithType: "SessionContainer.getHostName"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.getHostName"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.DocumentClientException"
  name: "DocumentClientException"
  nameWithType: "DocumentClientException"
  fullName: "com.microsoft.azure.documentdb.DocumentClientException"
- uid: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
  name: "DocumentServiceRequest"
  nameWithType: "DocumentServiceRequest"
  fullName: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveSessionToken*"
  name: "resolveSessionToken"
  nameWithType: "SessionContainer.resolveSessionToken"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveSessionToken"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveGlobalSessionToken*"
  name: "resolveGlobalSessionToken"
  nameWithType: "SessionContainer.resolveGlobalSessionToken"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.resolveGlobalSessionToken"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.clearToken*"
  name: "clearToken"
  nameWithType: "SessionContainer.clearToken"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.clearToken"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest"
  name: "AbstractDocumentServiceRequest"
  nameWithType: "AbstractDocumentServiceRequest"
  fullName: "com.microsoft.azure.documentdb.internal.AbstractDocumentServiceRequest"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.setSessionToken*"
  name: "setSessionToken"
  nameWithType: "SessionContainer.setSessionToken"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.setSessionToken"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "com.microsoft.azure.documentdb.internal.VectorSessionToken"
  name: "VectorSessionToken"
  nameWithType: "VectorSessionToken"
  fullName: "com.microsoft.azure.documentdb.internal.VectorSessionToken"
- uid: "com.microsoft.azure.documentdb.internal.SessionContainer.resolvePartitionLocalSessionToken*"
  name: "resolvePartitionLocalSessionToken"
  nameWithType: "SessionContainer.resolvePartitionLocalSessionToken"
  fullName: "com.microsoft.azure.documentdb.internal.SessionContainer.resolvePartitionLocalSessionToken"
  package: "com.microsoft.azure.documentdb.internal"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.String,java.lang.Long"
  name: "String,Long"
  nameWithType: "String,Long"
  fullName: "java.lang.String,java.lang.Long"
- uid: "java.util.concurrent.ConcurrentHashMap"
  name: "ConcurrentHashMap"
  nameWithType: "ConcurrentHashMap"
  fullName: "java.util.concurrent.ConcurrentHashMap"
- uid: "java.lang.Long,java.util.concurrent.ConcurrentHashMap"
  name: "Long,ConcurrentHashMap"
  nameWithType: "Long,ConcurrentHashMap"
  fullName: "java.lang.Long,java.util.concurrent.ConcurrentHashMap"
- uid: "java.lang.String,com.microsoft.azure.documentdb.internal.VectorSessionToken"
  name: "String,VectorSessionToken"
  nameWithType: "String,VectorSessionToken"
  fullName: "java.lang.String,com.microsoft.azure.documentdb.internal.VectorSessionToken"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
