### YamlMime:JavaType
uid: "com.azure.core.util.CoreUtils"
fullName: "com.azure.core.util.CoreUtils"
name: "CoreUtils"
nameWithType: "CoreUtils"
summary: "This class contains utility methods useful for building client libraries."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **CoreUtils**"
methods:
- uid: "com.azure.core.util.CoreUtils.<T>arrayToString(T[],java.util.function.Function<T,java.lang.String>)"
  fullName: "com.azure.core.util.CoreUtils.arrayToString(T[] array, Function<T,String> mapper)"
  name: "arrayToString(T[] array, Function<T,String> mapper)"
  nameWithType: "CoreUtils.arrayToString(T[] array, Function<T,String> mapper)"
  summary: "Turns an array into a string mapping each element to a string and delimits them using a coma."
  modifiers:
  - "static"
  parameters:
  - description: "Array being formatted to a string."
    name: "array"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "Function that maps each element to a string."
    name: "mapper"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html\">Function</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public static String <T>arrayToString(T[] array, Function<T,String> mapper)"
  desc: "Turns an array into a string mapping each element to a string and delimits them using a coma."
  returns:
    description: "Array with each element mapped and delimited, otherwise null if the array is empty or null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.util.CoreUtils.<T>clone(T[])"
  fullName: "com.azure.core.util.CoreUtils.clone(T[] source)"
  name: "clone(T[] source)"
  nameWithType: "CoreUtils.clone(T[] source)"
  summary: "Creates a copy of the source array."
  modifiers:
  - "static"
  parameters:
  - description: "Array being copied."
    name: "source"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static T[] <T>clone(T[] source)"
  desc: "Creates a copy of the source array."
  returns:
    description: "A copy of the array or null if source was null."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.core.util.CoreUtils.<T>extractAndFetch(com.azure.core.http.rest.PagedResponse<T>,com.azure.core.util.Context,java.util.function.BiFunction<java.lang.String,com.azure.core.util.Context,org.reactivestreams.Publisher<T>>)"
  fullName: "com.azure.core.util.CoreUtils.extractAndFetch(PagedResponse<T> page, Context context, BiFunction<String,Context,Publisher<T>> content)"
  name: "extractAndFetch(PagedResponse<T> page, Context context, BiFunction<String,Context,Publisher<T>> content)"
  nameWithType: "CoreUtils.extractAndFetch(PagedResponse<T> page, Context context, BiFunction<String,Context,Publisher<T>> content)"
  summary: "Extracts and combines the generic items from all the pages linked together."
  deprecatedTag: "Use localized implementation."
  modifiers:
  - "static"
  parameters:
  - description: "The paged response from server holding generic items."
    name: "page"
    type: "<xref href=\"com.azure.core.http.rest.PagedResponse?alt=com.azure.core.http.rest.PagedResponse&text=PagedResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Metadata that is passed into the function that fetches the items from the next page."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  - description: "The function which fetches items from the next page."
    name: "content"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/function/BiFunction.html\">BiFunction</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />,<xref href=\"org.reactivestreams.Publisher?alt=org.reactivestreams.Publisher&text=Publisher\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  syntax: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Deprecated.html\">@Deprecated</a></br>public static Publisher<T> <T>extractAndFetch(PagedResponse<T> page, Context context, BiFunction<String,Context,Publisher<T>> content)"
  desc: "Extracts and combines the generic items from all the pages linked together."
  hasDeprecatedTag: true
  returns:
    description: "The publisher holding all the generic items combined."
    type: "<xref href=\"org.reactivestreams.Publisher?alt=org.reactivestreams.Publisher&text=Publisher\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.core.util.CoreUtils.<T>findFirstOfType(java.lang.Object[],java.lang.Class<T>)"
  fullName: "com.azure.core.util.CoreUtils.findFirstOfType(Object[] args, Class<T> clazz)"
  name: "findFirstOfType(Object[] args, Class<T> clazz)"
  nameWithType: "CoreUtils.findFirstOfType(Object[] args, Class<T> clazz)"
  summary: "Returns the first instance of the given class from an array of Objects."
  modifiers:
  - "static"
  parameters:
  - description: "Array of objects to search through to find the first instance of the given `clazz` type."
    name: "args"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>[]"
  - description: "The type trying to be found."
    name: "clazz"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Class.html\">Class</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public static T <T>findFirstOfType(Object[] args, Class<T> clazz)"
  desc: "Returns the first instance of the given class from an array of Objects."
  returns:
    description: "The first object of the desired type, otherwise null."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.<T>getResultWithTimeout(java.util.concurrent.Future<T>,java.time.Duration)"
  fullName: "com.azure.core.util.CoreUtils.getResultWithTimeout(Future<T> future, Duration timeout)"
  name: "getResultWithTimeout(Future<T> future, Duration timeout)"
  nameWithType: "CoreUtils.getResultWithTimeout(Future<T> future, Duration timeout)"
  summary: "Calls <xref uid=\"java.util.concurrent.Future.get*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Future#get(long, TimeUnit)\"></xref> and returns the value if the `future` completes before the timeout is triggered."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"java.util.concurrent.Future\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Future\"></xref> to get the value from."
    name: "future"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html\">Future</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The timeout value. If the timeout is <xref uid=\"java.time.Duration.isZero*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration#isZero()\"></xref> or is <xref uid=\"java.time.Duration.isNegative*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration#isNegative()\"></xref>\n then the timeout will be ignored and an infinite timeout will be used."
    name: "timeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public static T <T>getResultWithTimeout(Future<T> future, Duration timeout)"
  exceptions:
  - description: "If <code>future</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/InterruptedException.html\">InterruptedException</a>"
  - description: "If <code>future</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutionException.html\">ExecutionException</a>"
  - description: "If <code>future</code> is null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeoutException.html\">TimeoutException</a>"
  desc: "Calls <xref uid=\"java.util.concurrent.Future.get*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Future#get(long, TimeUnit)\"></xref> and returns the value if the `future` completes before the timeout is triggered. If the timeout is triggered, the `future` is <xref uid=\"java.util.concurrent.Future.cancel*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"cancelled\"></xref> interrupting the execution of the task that the <xref uid=\"java.util.concurrent.Future\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Future\"></xref> represented.\n\nIf the timeout is <xref uid=\"java.time.Duration.isZero*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration#isZero()\"></xref> or is <xref uid=\"java.time.Duration.isNegative*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration#isNegative()\"></xref> then the timeout will be ignored and an infinite timeout will be used."
  returns:
    description: "The value from the <code>future</code>."
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.addShutdownHookSafely(java.lang.Thread)"
  fullName: "com.azure.core.util.CoreUtils.addShutdownHookSafely(Thread shutdownThread)"
  name: "addShutdownHookSafely(Thread shutdownThread)"
  nameWithType: "CoreUtils.addShutdownHookSafely(Thread shutdownThread)"
  summary: "Helper method that safely adds a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Runtime#addShutdownHook(Thread)\"></xref> to the JVM that will run when the JVM is shutting down."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"java.lang.Thread\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Thread\"></xref> that will be added as a\n <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"shutdown hook\"></xref>."
    name: "shutdownThread"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html\">Thread</a>"
  syntax: "public static Thread addShutdownHookSafely(Thread shutdownThread)"
  desc: "Helper method that safely adds a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Runtime#addShutdownHook(Thread)\"></xref> to the JVM that will run when the JVM is shutting down.\n\n<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Runtime#addShutdownHook(Thread)\"></xref> checks for security privileges and will throw an exception if the proper security isn't available. So, if running with a security manager, setting `AZURE_ENABLE_SHUTDOWN_HOOK_WITH_PRIVILEGE` to true will have this method use access controller to add the shutdown hook with privileged permissions.\n\nIf `shutdownThread` is null, no shutdown hook will be added and this method will return null."
  returns:
    description: "The <xref uid=\"java.lang.Thread\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Thread\"></xref> that was passed in."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html\">Thread</a>"
- uid: "com.azure.core.util.CoreUtils.addShutdownHookSafely(java.util.concurrent.ExecutorService,java.time.Duration)"
  fullName: "com.azure.core.util.CoreUtils.addShutdownHookSafely(ExecutorService executorService, Duration shutdownTimeout)"
  name: "addShutdownHookSafely(ExecutorService executorService, Duration shutdownTimeout)"
  nameWithType: "CoreUtils.addShutdownHookSafely(ExecutorService executorService, Duration shutdownTimeout)"
  summary: "Helper method that safely adds a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Runtime#addShutdownHook(Thread)\"></xref> to the JVM that will close the `executorService` when the JVM is shutting down."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"java.util.concurrent.ExecutorService\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ExecutorService\"></xref> to shutdown when the JVM is shutting down."
    name: "executorService"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html\">ExecutorService</a>"
  - description: "The amount of time to wait for the <code>executorService</code> to shutdown."
    name: "shutdownTimeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public static ExecutorService addShutdownHookSafely(ExecutorService executorService, Duration shutdownTimeout)"
  desc: "Helper method that safely adds a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Runtime#addShutdownHook(Thread)\"></xref> to the JVM that will close the `executorService` when the JVM is shutting down.\n\n<xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Runtime#addShutdownHook(Thread)\"></xref> checks for security privileges and will throw an exception if the proper security isn't available. So, if running with a security manager, setting `AZURE_ENABLE_SHUTDOWN_HOOK_WITH_PRIVILEGE` to true will have this method use access controller to add the shutdown hook with privileged permissions.\n\nIf `executorService` is null, no shutdown hook will be added and this method will return null.\n\nThe `shutdownTimeout` is the amount of time to wait for the `executorService` to shutdown. If the `executorService` doesn't shutdown within half the timeout, it will be forcefully shutdown."
  returns:
    description: "The <code>executorService</code> that was passed in."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html\">ExecutorService</a>"
- uid: "com.azure.core.util.CoreUtils.bomAwareToString(byte[],java.lang.String)"
  fullName: "com.azure.core.util.CoreUtils.bomAwareToString(byte[] bytes, String contentType)"
  name: "bomAwareToString(byte[] bytes, String contentType)"
  nameWithType: "CoreUtils.bomAwareToString(byte[] bytes, String contentType)"
  summary: "Attempts to convert a byte stream into the properly encoded String."
  modifiers:
  - "static"
  parameters:
  - description: "Byte array."
    name: "bytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "<code>Content-Type</code> header value."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static String bomAwareToString(byte[] bytes, String contentType)"
  desc: "Attempts to convert a byte stream into the properly encoded String.\n\nThis utility method will attempt to find the encoding for the String in this order.\n\n1.  Find the byte order mark in the byte array.\n2.  Find the `charset` in the `Content-Type` header.\n3.  Default to `UTF-8`."
  returns:
    description: "A string representation of the byte array encoded to the found encoding."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.util.CoreUtils.bytesToHexString(byte[])"
  fullName: "com.azure.core.util.CoreUtils.bytesToHexString(byte[] bytes)"
  name: "bytesToHexString(byte[] bytes)"
  nameWithType: "CoreUtils.bytesToHexString(byte[] bytes)"
  summary: "Converts a byte array into a hex string."
  modifiers:
  - "static"
  parameters:
  - description: "The byte array to convert into a hex string."
    name: "bytes"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static String bytesToHexString(byte[] bytes)"
  desc: "Converts a byte array into a hex string.\n\nThe hex string returned uses characters `0123456789abcdef`, if uppercase `ABCDEF` is required the returned string will need to be <xref uid=\"java.lang.String.toUpperCase*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"uppercased\"></xref>.\n\nIf `bytes` is null, null will be returned. If `bytes` was an empty array an empty string is returned."
  returns:
    description: "A hex string representing the <code>bytes</code> that were passed, or null if <code>bytes</code> were null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.util.CoreUtils.clone(byte[])"
  fullName: "com.azure.core.util.CoreUtils.clone(byte[] source)"
  name: "clone(byte[] source)"
  nameWithType: "CoreUtils.clone(byte[] source)"
  summary: "Creates a copy of the source byte array."
  modifiers:
  - "static"
  parameters:
  - description: "Array to make copy of"
    name: "source"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static byte[] clone(byte[] source)"
  desc: "Creates a copy of the source byte array."
  returns:
    description: "A copy of the array, or null if source was null."
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.core.util.CoreUtils.clone(int[])"
  fullName: "com.azure.core.util.CoreUtils.clone(int[] source)"
  name: "clone(int[] source)"
  nameWithType: "CoreUtils.clone(int[] source)"
  summary: "Creates a copy of the source int array."
  modifiers:
  - "static"
  parameters:
  - description: "Array to make copy of"
    name: "source"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static int[] clone(int[] source)"
  desc: "Creates a copy of the source int array."
  returns:
    description: "A copy of the array, or null if source was null."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.azure.core.util.CoreUtils.createHttpHeadersFromClientOptions(com.azure.core.util.ClientOptions)"
  fullName: "com.azure.core.util.CoreUtils.createHttpHeadersFromClientOptions(ClientOptions clientOptions)"
  name: "createHttpHeadersFromClientOptions(ClientOptions clientOptions)"
  nameWithType: "CoreUtils.createHttpHeadersFromClientOptions(ClientOptions clientOptions)"
  summary: "Creates <xref uid=\"com.azure.core.http.HttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpHeaders\"></xref> from the provided <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> used to create the <xref uid=\"com.azure.core.http.HttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpHeaders\"></xref>."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static HttpHeaders createHttpHeadersFromClientOptions(ClientOptions clientOptions)"
  desc: "Creates <xref uid=\"com.azure.core.http.HttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpHeaders\"></xref> from the provided <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref>.\n\nIf `clientOptions` is null or <xref uid=\"com.azure.core.util.ClientOptions.getHeaders()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions#getHeaders()\"></xref> doesn't return any <xref uid=\"com.azure.core.util.Header\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Header\"></xref> values null will be returned."
  returns:
    description: "<xref uid=\"com.azure.core.http.HttpHeaders\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpHeaders\"></xref> containing the <xref uid=\"com.azure.core.util.Header\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Header\"></xref> values from <xref uid=\"com.azure.core.util.ClientOptions.getHeaders()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions#getHeaders()\"></xref> if\n <code>clientOptions</code> isn't null and contains <xref uid=\"com.azure.core.util.Header\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Header\"></xref> values, otherwise null."
    type: "<xref href=\"com.azure.core.http.HttpHeaders?alt=com.azure.core.http.HttpHeaders&text=HttpHeaders\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.durationToStringWithDays(java.time.Duration)"
  fullName: "com.azure.core.util.CoreUtils.durationToStringWithDays(Duration duration)"
  name: "durationToStringWithDays(Duration duration)"
  nameWithType: "CoreUtils.durationToStringWithDays(Duration duration)"
  summary: "Converts a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> to a string in ISO-8601 format with support for a day component."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> to convert."
    name: "duration"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  syntax: "public static String durationToStringWithDays(Duration duration)"
  desc: "Converts a <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> to a string in ISO-8601 format with support for a day component.\n\n<xref uid=\"java.time.Duration.toString*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration#toString()\"></xref> doesn't use a day component, so if the duration is greater than 24 hours it would return an ISO-8601 duration string like `PT48H`. This method returns an ISO-8601 duration string with a day component if the duration is greater than 24 hours, such as `P2D` instead of `PT48H`."
  returns:
    description: "The <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> as a string in ISO-8601 format with support for a day component, or null if the\n provided <xref uid=\"java.time.Duration\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration\"></xref> was null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.util.CoreUtils.extractSizeFromContentRange(java.lang.String)"
  fullName: "com.azure.core.util.CoreUtils.extractSizeFromContentRange(String contentRange)"
  name: "extractSizeFromContentRange(String contentRange)"
  nameWithType: "CoreUtils.extractSizeFromContentRange(String contentRange)"
  summary: "Extracts the size from a `Content-Range` header."
  modifiers:
  - "static"
  parameters:
  - description: "The <code>Content-Range</code> header to extract the size from."
    name: "contentRange"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static long extractSizeFromContentRange(String contentRange)"
  desc: "Extracts the size from a `Content-Range` header.\n\nThe `Content-Range` header can take the following forms:\n\n *  `-/`\n *  `-/`\\*\n *  ``\\*`/`\n\nIf the `` is represented by \\* this method will return -1.\n\nIf `contentRange` is null a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"NullPointerException\"></xref> will be thrown, if it doesn't contain a size segment (`/` or /\\*) an <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IllegalArgumentException\"></xref> will be thrown."
  returns:
    description: "The size contained in the <code>Content-Range</code>, or -1 if the size was &#42;."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.getApplicationId(com.azure.core.util.ClientOptions,com.azure.core.http.policy.HttpLogOptions)"
  fullName: "com.azure.core.util.CoreUtils.getApplicationId(ClientOptions clientOptions, HttpLogOptions logOptions)"
  name: "getApplicationId(ClientOptions clientOptions, HttpLogOptions logOptions)"
  nameWithType: "CoreUtils.getApplicationId(ClientOptions clientOptions, HttpLogOptions logOptions)"
  summary: "Retrieves the application ID from either a <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> or <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref>."
    name: "clientOptions"
    type: "<xref href=\"com.azure.core.util.ClientOptions?alt=com.azure.core.util.ClientOptions&text=ClientOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "The <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions\"></xref>."
    name: "logOptions"
    type: "<xref href=\"com.azure.core.http.policy.HttpLogOptions?alt=com.azure.core.http.policy.HttpLogOptions&text=HttpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static String getApplicationId(ClientOptions clientOptions, HttpLogOptions logOptions)"
  desc: "Retrieves the application ID from either a <xref uid=\"com.azure.core.util.ClientOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientOptions\"></xref> or <xref uid=\"com.azure.core.http.policy.HttpLogOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HttpLogOptions\"></xref>.\n\nThis method first checks `clientOptions` for having an application ID then `logOptions`, finally returning null if neither are set.\n\n`clientOptions` is checked first as `logOptions` application ID is deprecated."
  returns:
    description: "The application ID from either <code>clientOptions</code> or <code>logOptions</code>, if neither are set null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.core.util.CoreUtils.getDefaultTimeoutFromEnvironment(com.azure.core.util.Configuration,java.lang.String,java.time.Duration,com.azure.core.util.logging.ClientLogger)"
  fullName: "com.azure.core.util.CoreUtils.getDefaultTimeoutFromEnvironment(Configuration configuration, String timeoutPropertyName, Duration defaultTimeout, ClientLogger logger)"
  name: "getDefaultTimeoutFromEnvironment(Configuration configuration, String timeoutPropertyName, Duration defaultTimeout, ClientLogger logger)"
  nameWithType: "CoreUtils.getDefaultTimeoutFromEnvironment(Configuration configuration, String timeoutPropertyName, Duration defaultTimeout, ClientLogger logger)"
  summary: "Attempts to load an environment configured default timeout."
  modifiers:
  - "static"
  parameters:
  - description: "The environment configurations."
    name: "configuration"
    type: "<xref href=\"com.azure.core.util.Configuration?alt=com.azure.core.util.Configuration&text=Configuration\" data-throw-if-not-resolved=\"False\" />"
  - description: "The default timeout property name."
    name: "timeoutPropertyName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The fallback timeout to be used."
    name: "defaultTimeout"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
  - description: "A <xref uid=\"com.azure.core.util.logging.ClientLogger\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ClientLogger\"></xref> to log exceptions."
    name: "logger"
    type: "<xref href=\"com.azure.core.util.logging.ClientLogger?alt=com.azure.core.util.logging.ClientLogger&text=ClientLogger\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Duration getDefaultTimeoutFromEnvironment(Configuration configuration, String timeoutPropertyName, Duration defaultTimeout, ClientLogger logger)"
  desc: "Attempts to load an environment configured default timeout.\n\nIf the environment default timeout isn't configured, `defaultTimeout` will be returned. If the environment default timeout is a string that isn't parseable by <xref uid=\"java.lang.Long.parseLong*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Long#parseLong(String)\"></xref>, `defaultTimeout` will be returned. If the environment default timeout is less than 0, <xref uid=\"java.time.Duration.ZERO\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Duration#ZERO\"></xref> will be returned indicated that there is no timeout period."
  returns:
    description: "Either the environment configured default timeout, <code>defaultTimeoutMillis</code>, or 0."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html\">Duration</a>"
- uid: "com.azure.core.util.CoreUtils.getProperties(java.lang.String)"
  fullName: "com.azure.core.util.CoreUtils.getProperties(String propertiesFileName)"
  name: "getProperties(String propertiesFileName)"
  nameWithType: "CoreUtils.getProperties(String propertiesFileName)"
  summary: "Helper method that returns an immutable <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref> of properties defined in `propertiesFileName`."
  modifiers:
  - "static"
  parameters:
  - description: "The file name defining the properties."
    name: "propertiesFileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static Map<String,String> getProperties(String propertiesFileName)"
  desc: "Helper method that returns an immutable <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref> of properties defined in `propertiesFileName`."
  returns:
    description: "an immutable <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map\"></xref>."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.core.util.CoreUtils.isNullOrEmpty(java.lang.CharSequence)"
  fullName: "com.azure.core.util.CoreUtils.isNullOrEmpty(CharSequence charSequence)"
  name: "isNullOrEmpty(CharSequence charSequence)"
  nameWithType: "CoreUtils.isNullOrEmpty(CharSequence charSequence)"
  summary: "Checks if the character sequence is null or empty."
  modifiers:
  - "static"
  parameters:
  - description: "Character sequence being checked for nullness or emptiness."
    name: "charSequence"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/CharSequence.html\">CharSequence</a>"
  syntax: "public static boolean isNullOrEmpty(CharSequence charSequence)"
  desc: "Checks if the character sequence is null or empty."
  returns:
    description: "True if the character sequence is null or empty, false otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.isNullOrEmpty(java.lang.Object[])"
  fullName: "com.azure.core.util.CoreUtils.isNullOrEmpty(Object[] array)"
  name: "isNullOrEmpty(Object[] array)"
  nameWithType: "CoreUtils.isNullOrEmpty(Object[] array)"
  summary: "Checks if the array is null or empty."
  modifiers:
  - "static"
  parameters:
  - description: "Array being checked for nullness or emptiness."
    name: "array"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>[]"
  syntax: "public static boolean isNullOrEmpty(Object[] array)"
  desc: "Checks if the array is null or empty."
  returns:
    description: "True if the array is null or empty, false otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.isNullOrEmpty(java.util.Collection<?>)"
  fullName: "com.azure.core.util.CoreUtils.isNullOrEmpty(Collection<?> collection)"
  name: "isNullOrEmpty(Collection<?> collection)"
  nameWithType: "CoreUtils.isNullOrEmpty(Collection<?> collection)"
  summary: "Checks if the collection is null or empty."
  modifiers:
  - "static"
  parameters:
  - description: "Collection being checked for nullness or emptiness."
    name: "collection"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html\">Collection</a>&lt;?&gt;"
  syntax: "public static boolean isNullOrEmpty(Collection<?> collection)"
  desc: "Checks if the collection is null or empty."
  returns:
    description: "True if the collection is null or empty, false otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.isNullOrEmpty(java.util.Map<?,?>)"
  fullName: "com.azure.core.util.CoreUtils.isNullOrEmpty(Map<?,?> map)"
  name: "isNullOrEmpty(Map<?,?> map)"
  nameWithType: "CoreUtils.isNullOrEmpty(Map<?,?> map)"
  summary: "Checks if the map is null or empty."
  modifiers:
  - "static"
  parameters:
  - description: "Map being checked for nullness or emptiness."
    name: "map"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Map.html\">Map</a>&lt;?,?&gt;"
  syntax: "public static boolean isNullOrEmpty(Map<?,?> map)"
  desc: "Checks if the map is null or empty."
  returns:
    description: "True if the map is null or empty, false otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.mergeContexts(com.azure.core.util.Context,com.azure.core.util.Context)"
  fullName: "com.azure.core.util.CoreUtils.mergeContexts(Context into, Context from)"
  name: "mergeContexts(Context into, Context from)"
  nameWithType: "CoreUtils.mergeContexts(Context into, Context from)"
  summary: "Merges two <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Contexts\"></xref> into a new <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "Context being merged into."
    name: "into"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  - description: "Context being merged."
    name: "from"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Context mergeContexts(Context into, Context from)"
  desc: "Merges two <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Contexts\"></xref> into a new <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Context\"></xref>."
  returns:
    description: "A new Context that is the merged Contexts."
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.CoreUtils.parseBestOffsetDateTime(java.lang.String)"
  fullName: "com.azure.core.util.CoreUtils.parseBestOffsetDateTime(String dateString)"
  name: "parseBestOffsetDateTime(String dateString)"
  nameWithType: "CoreUtils.parseBestOffsetDateTime(String dateString)"
  summary: "Parses a string into an <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref>."
  modifiers:
  - "static"
  parameters:
  - description: "The string to parse into an <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref>."
    name: "dateString"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static OffsetDateTime parseBestOffsetDateTime(String dateString)"
  desc: "Parses a string into an <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref>.\n\nIf `dateString` is null, null will be returned.\n\nThis method attempts to parse the `dateString` using <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DateTimeFormatter#parseBest(CharSequence, TemporalQuery[])\"></xref>. This will use <xref uid=\"java.time.OffsetDateTime.from*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime#from(TemporalAccessor)\"></xref> as the first attempt and will fall back to <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"LocalDateTime#from(TemporalAccessor)\"></xref> with setting the offset as <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ZoneOffset#UTC\"></xref>."
  returns:
    description: "The parsed <xref uid=\"java.time.OffsetDateTime\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OffsetDateTime\"></xref>, or null if <code>dateString</code> was null."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
- uid: "com.azure.core.util.CoreUtils.parseQueryParameters(java.lang.String)"
  fullName: "com.azure.core.util.CoreUtils.parseQueryParameters(String queryParameters)"
  name: "parseQueryParameters(String queryParameters)"
  nameWithType: "CoreUtils.parseQueryParameters(String queryParameters)"
  summary: "Utility method for parsing query parameters one-by-one without the use of string splitting."
  modifiers:
  - "static"
  parameters:
  - description: "The query parameter string."
    name: "queryParameters"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public static Iterator<Map.Entry<String,String>> parseQueryParameters(String queryParameters)"
  desc: "Utility method for parsing query parameters one-by-one without the use of string splitting.\n\nThis method provides an optimization over parsing query parameters with <xref uid=\"java.lang.String.split*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String#split(String)\"></xref> or a [Pattern][] as it doesn't allocate any arrays to maintain values, instead it parses the query parameters linearly.\n\nQuery parameter parsing works the following way, `key=value` will turn into an immutable <xref uid=\"java.util.Map.Entry\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map.Entry\"></xref> where the <xref uid=\"java.util.Map.Entry.getKey*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map.Entry#getKey()\"></xref> is `key` and the <xref uid=\"java.util.Map.Entry.getValue*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Map.Entry#getValue()\"></xref> is `value`. For query parameters without a value, `key=` or just `key`, the value will be an empty string.\n\n\n[Pattern]: https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"
  returns:
    description: "An <xref uid=\"java.util.Iterator\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Iterator\"></xref> over the query parameter key-value pairs."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html\">Iterator</a>&lt;<xref href=\"java.util.Map.Entry?alt=java.util.Map.Entry&text=Entry\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>,<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;&gt;"
- uid: "com.azure.core.util.CoreUtils.randomUuid()"
  fullName: "com.azure.core.util.CoreUtils.randomUuid()"
  name: "randomUuid()"
  nameWithType: "CoreUtils.randomUuid()"
  summary: "Creates a type 4 (pseudo randomly generated) UUID."
  modifiers:
  - "static"
  syntax: "public static UUID randomUuid()"
  desc: "Creates a type 4 (pseudo randomly generated) UUID.\n\nThe <xref uid=\"java.util.UUID\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUID\"></xref> is generated using a non-cryptographically strong pseudo random number generator."
  returns:
    description: "A randomly generated <xref uid=\"java.util.UUID\" data-throw-if-not-resolved=\"false\" data-raw-source=\"UUID\"></xref>."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">UUID</a>"
- uid: "com.azure.core.util.CoreUtils.stringJoin(java.lang.String,java.util.List<java.lang.String>)"
  fullName: "com.azure.core.util.CoreUtils.stringJoin(String delimiter, List<String> values)"
  name: "stringJoin(String delimiter, List<String> values)"
  nameWithType: "CoreUtils.stringJoin(String delimiter, List<String> values)"
  summary: "Optimized version of <xref uid=\"java.lang.String.join*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String#join(CharSequence, Iterable)\"></xref> when the `values` has a small set of object."
  modifiers:
  - "static"
  parameters:
  - description: "Delimiter between the values."
    name: "delimiter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The values to join."
    name: "values"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public static String stringJoin(String delimiter, List<String> values)"
  desc: "Optimized version of <xref uid=\"java.lang.String.join*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String#join(CharSequence, Iterable)\"></xref> when the `values` has a small set of object."
  returns:
    description: "The <code>values</code> joined delimited by the <code>delimiter</code>."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
type: "class"
desc: "This class contains utility methods useful for building client libraries."
metadata: {}
package: "com.azure.core.util"
artifact: com.azure:azure-core:1.54.0
