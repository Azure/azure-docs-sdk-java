### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device._device_client
  id: _device_client
  parent: com.microsoft.azure.sdk.iot.device
  children:
  - com.microsoft.azure.sdk.iot.device._device_client.close()
  - com.microsoft.azure.sdk.iot.device._device_client.closeNow()
  - com.microsoft.azure.sdk.iot.device._device_client.CONNECTION_STRING_CHARSET
  - com.microsoft.azure.sdk.iot.device._device_client.createFromSecurityProvider(String,String,SecurityProvider,IotHubClientProtocol)
  - com.microsoft.azure.sdk.iot.device._device_client.DEVICE_ID_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device._device_client.DeviceClient()
  - com.microsoft.azure.sdk.iot.device._device_client.DeviceClient(String,IotHubClientProtocol)
  - com.microsoft.azure.sdk.iot.device._device_client.DeviceClient(String,IotHubClientProtocol,String,boolean,String,boolean)
  - com.microsoft.azure.sdk.iot.device._device_client.DeviceClient(String,TransportClient)
  - com.microsoft.azure.sdk.iot.device._device_client.getConfig()
  - com.microsoft.azure.sdk.iot.device._device_client.HOSTNAME_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device._device_client.open()
  - com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS
  - com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS_AMQPS
  - com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS_HTTPS
  - com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS_MQTT
  - com.microsoft.azure.sdk.iot.device._device_client.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)
  - com.microsoft.azure.sdk.iot.device._device_client.SEND_PERIOD_MILLIS
  - com.microsoft.azure.sdk.iot.device._device_client.sendEventAsync(Message,IotHubEventCallback,Object)
  - com.microsoft.azure.sdk.iot.device._device_client.sendReportedProperties(Set<Property>)
  - com.microsoft.azure.sdk.iot.device._device_client.setMessageCallback(MessageCallback,Object)
  - com.microsoft.azure.sdk.iot.device._device_client.setOption(String,Object)
  - com.microsoft.azure.sdk.iot.device._device_client.SHARED_ACCESS_KEY_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device._device_client.SHARED_ACCESS_TOKEN_ATTRIBUTE
  - com.microsoft.azure.sdk.iot.device._device_client.startDeviceTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
  - com.microsoft.azure.sdk.iot.device._device_client.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>>)
  - com.microsoft.azure.sdk.iot.device._device_client.subscribeToDeviceMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  - com.microsoft.azure.sdk.iot.device._device_client.uploadToBlobAsync(String,InputStream,long,IotHubEventCallback,Object)
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  source:
    remote: &o0
      path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 39
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax: &o3
    content: public class DeviceClient
  inheritance:
  - java.lang.Object
  - Closeable
- uid: com.microsoft.azure.sdk.iot.device._device_client.close()
  id: close()
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: close()
  nameWithType: DeviceClient.close()
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.close()
  overload: com.microsoft.azure.sdk.iot.device._device_client.close*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 380
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Completes all current outstanding requests and closes the IoT Hub client. Must be called to terminate the background thread that is sending data to IoT Hub. After<code>closeNow() 

        </code> is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing. <xrefsect id="deprecated_1_deprecated000009"><xreftitle>Deprecated</xreftitle><xrefdescription><p>: As of release 1.1.25 this call is replaced by <xref uid="com.microsoft.azure.sdk.iot.device._device_client.closeNow()" data-throw-if-not-resolved="false">closeNow()</xref></p></xrefdescription></xrefsect></p>

    <p></p>
  syntax:
    content: public void close()
  exceptions:
  - type: cbf33bbe
    description: <p>if the connection to an IoT Hub cannot be closed. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.closeNow()
  id: closeNow()
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: closeNow()
  nameWithType: DeviceClient.closeNow()
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow()
  overload: com.microsoft.azure.sdk.iot.device._device_client.closeNow*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 423
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Closes the IoT Hub client by releasing any resources held by client. When closeNow is called all the messages that were in transit or pending to be sent will be informed to the user in the callbacks and any existing connection to IotHub will be closed. Must be called to terminate the background thread that is sending data to IoT Hub. After<code>closeNow() 

        </code> is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing.</p>

    <p></p>
  syntax: &o2
    content: public void closeNow()
  exceptions:
  - type: cbf33bbe
    description: <p>if the connection to an IoT Hub cannot be closed. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.CONNECTION_STRING_CHARSET
  id: CONNECTION_STRING_CHARSET
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: CONNECTION_STRING_CHARSET
  nameWithType: DeviceClient.CONNECTION_STRING_CHARSET
  fullName: final Charset com.microsoft.azure.sdk.iot.device.DeviceClient.CONNECTION_STRING_CHARSET
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 96
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000008">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>as of release 1.2.27 this value is deprecated and will not be replaced. The charset used for URL-encoding the device ID in the connection string. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public static final Charset CONNECTION_STRING_CHARSET= StandardCharsets.UTF_8
    return:
      type: d07b5f81
- uid: com.microsoft.azure.sdk.iot.device._device_client.createFromSecurityProvider(String,String,SecurityProvider,IotHubClientProtocol)
  id: createFromSecurityProvider(String,String,SecurityProvider,IotHubClientProtocol)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  nameWithType: DeviceClient.createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  fullName: static DeviceClient com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
  overload: com.microsoft.azure.sdk.iot.device._device_client.createFromSecurityProvider*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 240
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Creates a device client that uses the provided security client for authentication.</p>

    <p></p>
  syntax:
    content: public static DeviceClient createFromSecurityProvider(String uri, String deviceId, SecurityProvider securityProvider, IotHubClientProtocol protocol)
    parameters:
    - id: uri
      type: "26831127"
      description: '<p>The connection string for iot hub to connect to (format: "yourHubName.azure-devices.net") </p>'
    - id: deviceId
      type: "26831127"
      description: <p>The id for the device to use </p>
    - id: securityProvider
      type: com.microsoft.azure.sdk.iot.provisioning.security._security_provider
      description: <p>The security client for the device </p>
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
      description: <p>The protocol the device shall use for communication to the IoT Hub </p>
    return:
      type: com.microsoft.azure.sdk.iot.device._device_client
      description: <p>The created device client instance </p>
  exceptions:
  - type: "44102508"
    description: <p>If the provided connString could not be parsed. </p>
  - type: cbf33bbe
    description: <p>If the SecurityProvider throws any exception while authenticating </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.DEVICE_ID_ATTRIBUTE
  id: DEVICE_ID_ATTRIBUTE
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: DEVICE_ID_ATTRIBUTE
  nameWithType: DeviceClient.DEVICE_ID_ATTRIBUTE
  fullName: final String com.microsoft.azure.sdk.iot.device.DeviceClient.DEVICE_ID_ATTRIBUTE
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 76
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000005">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>as of release 1.2.27 this value is deprecated and will not be replaced. The device ID attribute name in a connection string. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public static final String DEVICE_ID_ATTRIBUTE= "DeviceId="
    return:
      type: 3d93591e
- uid: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient()
  id: DeviceClient()
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: DeviceClient()
  nameWithType: DeviceClient.DeviceClient()
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient()
  overload: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 730
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: protected DeviceClient()
- uid: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient(String,IotHubClientProtocol)
  id: DeviceClient(String,IotHubClientProtocol)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: DeviceClient(String connString, IotHubClientProtocol protocol)
  nameWithType: DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol)
  overload: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 184
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Constructor that takes a connection string as an argument.</p>

    <p></p>
  syntax:
    content: public DeviceClient(String connString, IotHubClientProtocol protocol)
    parameters:
    - id: connString
      type: "26831127"
      description: >-
        <p>the connection string. The connection string is a set of key-value pairs that are separated by ';', with the keys and values separated by '='. It should contain values for the following keys: <code>HostName 

            </code> ,<code>DeviceId 

            </code> , and<code>SharedAccessKey 

            </code> . </p>
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
      description: <p>the communication protocol used (i.e. HTTPS).</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if any of<code>connString 

          </code> or <code>protocol 

          </code> are<code>null 

          </code> ; or if<code>connString 

          </code> is missing one of the following attributes:<code>HostName 

          </code> ,<code>DeviceId 

          </code> , or <code>SharedAccessKey 

          </code> or if the IoT hub hostname does not conform to RFC 3986 or if the provided<code>connString 

          </code> is for an x509 authenticated device </p>
  - type: "44102508"
    description: <p>if the hostname in the connection string is not a valid URI </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient(String,IotHubClientProtocol,String,boolean,String,boolean)
  id: DeviceClient(String,IotHubClientProtocol,String,boolean,String,boolean)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  nameWithType: DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  overload: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 212
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Constructor that uses x509 authentication for communicating with IotHub</p>

    <p></p>
  syntax:
    content: public DeviceClient(String connString, IotHubClientProtocol protocol, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
    parameters:
    - id: connString
      type: "26831127"
      description: '<p>the connection string for the x509 device to connect as (format: "HostName=...;DeviceId=...;x509=true") </p>'
    - id: protocol
      type: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
      description: <p>the protocol to use when communicating with IotHub </p>
    - id: publicKeyCertificate
      type: "26831127"
      description: <p>the PEM formatted public key certificate or the path to a PEM formatted public key certificate file </p>
    - id: isCertificatePath
      type: 4fc6e284
      description: <p>if the provided publicKeyCertificate is a path to a file containing the PEM formatted public key certificate </p>
    - id: privateKey
      type: "26831127"
      description: <p>the PEM formatted private key or the path to a PEM formatted private key file </p>
    - id: isPrivateKeyPath
      type: 4fc6e284
      description: <p>if the provided privateKey is a path to a file containing the PEM formatted private key </p>
  exceptions:
  - type: "44102508"
    description: <p>if the hostname in the connection string is not a valid URI </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient(String,TransportClient)
  id: DeviceClient(String,TransportClient)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: DeviceClient(String connString, TransportClient transportClient)
  nameWithType: DeviceClient.DeviceClient(String connString, TransportClient transportClient)
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient(String connString, TransportClient transportClient)
  overload: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient*
  type: Constructor
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 134
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Constructor that takes a connection string and a transport client as an argument.</p>

    <p></p>
  syntax:
    content: public DeviceClient(String connString, TransportClient transportClient)
    parameters:
    - id: connString
      type: "26831127"
      description: >-
        <p>the connection string. The connection string is a set of key-value pairs that are separated by ';', with the keys and values separated by '='. It should contain values for the following keys: <code>HostName 

            </code> ,<code>DeviceId 

            </code> , and<code>SharedAccessKey 

            </code> .</p>
    - id: transportClient
      type: com.microsoft.azure.sdk.iot.device._transport_client
      description: <p>the transport client to use by the device client.</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if<code>connString 

          </code> or if<code>connString 

          </code> is missing one of the following attributes:<code>HostName 

          </code> ,<code>DeviceId 

          </code> , or <code>SharedAccessKey 

          </code> or if the IoT hub hostname does not conform to RFC 3986 or if the provided<code>connString 

          </code> is for an x509 authenticated device </p>
  - type: "44102508"
    description: <p>if the hostname in the connection string is not a valid URI </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.getConfig()
  id: getConfig()
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: getConfig()
  nameWithType: DeviceClient.getConfig()
  fullName: DeviceClientConfig com.microsoft.azure.sdk.iot.device.DeviceClient.getConfig()
  overload: com.microsoft.azure.sdk.iot.device._device_client.getConfig*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 1090
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Getter for the device client config.</p>

    <p></p>
  syntax:
    content: public DeviceClientConfig getConfig()
    return:
      type: com.microsoft.azure.sdk.iot.device._device_client_config
      description: <p>the value of the config. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.HOSTNAME_ATTRIBUTE
  id: HOSTNAME_ATTRIBUTE
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: HOSTNAME_ATTRIBUTE
  nameWithType: DeviceClient.HOSTNAME_ATTRIBUTE
  fullName: final String com.microsoft.azure.sdk.iot.device.DeviceClient.HOSTNAME_ATTRIBUTE
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 70
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000004">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>as of release 1.2.27 this value is deprecated and will not be replaced. The hostname attribute name in a connection string. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public static final String HOSTNAME_ATTRIBUTE= "HostName="
    return:
      type: 3d93591e
- uid: com.microsoft.azure.sdk.iot.device._device_client.open()
  id: open()
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: open()
  nameWithType: DeviceClient.open()
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.open()
  overload: com.microsoft.azure.sdk.iot.device._device_client.open*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 339
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Starts asynchronously sending and receiving messages from an IoT Hub. If the client is already open, the function shall do nothing.</p>

    <p></p>
  syntax:
    content: public void open()
  exceptions:
  - type: cbf33bbe
    description: <p>if a connection to an IoT Hub cannot be established. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS
  id: RECEIVE_PERIOD_MILLIS
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS
  fullName: long com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 110
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: protected long RECEIVE_PERIOD_MILLIS
    return:
      type: 0364520f
- uid: com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS_AMQPS
  id: RECEIVE_PERIOD_MILLIS_AMQPS
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS_AMQPS
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS_AMQPS
  fullName: long com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_AMQPS
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 59
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000003">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>as of release 1.2.27 these value is deprecated and replaced by <xref uid="com.microsoft.azure.sdk.iot.device._device_client.setOption(String,Object)" data-throw-if-not-resolved="false">setOption(String, Object)</xref><b>SetMinimumPollingInterval</b> to change it.</p>

        </xrefdescription>

      </xrefsect>

    </p>

    <p>The number of milliseconds the transport will wait between polling for messages. </p>
  syntax:
    content: public static long RECEIVE_PERIOD_MILLIS_AMQPS= 10L
    return:
      type: 0364520f
- uid: com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS_HTTPS
  id: RECEIVE_PERIOD_MILLIS_HTTPS
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS_HTTPS
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS_HTTPS
  fullName: long com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_HTTPS
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 63
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static long RECEIVE_PERIOD_MILLIS_HTTPS= 25*60*1000
    return:
      type: 0364520f
- uid: com.microsoft.azure.sdk.iot.device._device_client.RECEIVE_PERIOD_MILLIS_MQTT
  id: RECEIVE_PERIOD_MILLIS_MQTT
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: RECEIVE_PERIOD_MILLIS_MQTT
  nameWithType: DeviceClient.RECEIVE_PERIOD_MILLIS_MQTT
  fullName: long com.microsoft.azure.sdk.iot.device.DeviceClient.RECEIVE_PERIOD_MILLIS_MQTT
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 61
  package: com.microsoft.azure.sdk.iot.device
  syntax:
    content: public static long RECEIVE_PERIOD_MILLIS_MQTT= 10L
    return:
      type: 0364520f
- uid: com.microsoft.azure.sdk.iot.device._device_client.registerConnectionStateCallback(IotHubConnectionStateCallback,Object)
  id: registerConnectionStateCallback(IotHubConnectionStateCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  nameWithType: DeviceClient.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device._device_client.registerConnectionStateCallback*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 1059
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Registers a callback to be executed whenever the connection to the device is lost or established.</p>

    <p></p>
  syntax:
    content: public void registerConnectionStateCallback(IotHubConnectionStateCallback callback, Object callbackContext)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
      description: <p>the callback to be called. </p>
    - id: callbackContext
      type: "79317049"
      description: >-
        <p>a context to be passed to the callback. Can be <code>null 

            </code> if no callback is provided. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.SEND_PERIOD_MILLIS
  id: SEND_PERIOD_MILLIS
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: SEND_PERIOD_MILLIS
  nameWithType: DeviceClient.SEND_PERIOD_MILLIS
  fullName: long com.microsoft.azure.sdk.iot.device.DeviceClient.SEND_PERIOD_MILLIS
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 49
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000002">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>as of release 1.2.27 this value is deprecated and replaced by <xref uid="com.microsoft.azure.sdk.iot.device._device_client.setOption(String,Object)" data-throw-if-not-resolved="false">setOption(String, Object)</xref><b>SetSendInterval</b> to change it.</p>

        </xrefdescription>

      </xrefsect>

    </p>

    <p>The number of milliseconds the transport will wait between sending out messages. </p>
  syntax:
    content: public static long SEND_PERIOD_MILLIS= 10L
    return:
      type: 0364520f
- uid: com.microsoft.azure.sdk.iot.device._device_client.sendEventAsync(Message,IotHubEventCallback,Object)
  id: sendEventAsync(Message,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
  nameWithType: DeviceClient.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device._device_client.sendEventAsync*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 464
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Asynchronously sends an event message to the IoT Hub.</p>

    <p></p>
  syntax:
    content: public void sendEventAsync(Message message, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: message
      type: com.microsoft.azure.sdk.iot.device._message
      description: <p>the message to be sent. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: >-
        <p>the callback to be invoked when a response is received. Can be<code>null 

            </code> . </p>
    - id: callbackContext
      type: "79317049"
      description: >-
        <p>a context to be passed to the callback. Can be <code>null 

            </code> if no callback is provided.</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if the message provided is<code>null 

          </code> . </p>
  - type: 12fe80de
    description: <p>if the client has not been opened yet or is already closed. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.sendReportedProperties(Set<Property>)
  id: sendReportedProperties(Set<Property>)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: sendReportedProperties(Set<Property> reportedProperties)
  nameWithType: DeviceClient.sendReportedProperties(Set<Property> reportedProperties)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.sendReportedProperties(Set<Property> reportedProperties)
  overload: com.microsoft.azure.sdk.iot.device._device_client.sendReportedProperties*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 592
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Sends reported properties</p>

    <p></p>
  syntax:
    content: public void sendReportedProperties(Set<Property> reportedProperties)
    parameters:
    - id: reportedProperties
      type: b398a0f1com.microsoft.azure.sdk.iot.device._device_twin._propertya08ddfce
      description: >-
        <p>the Set for desired properties and their corresponding callback and context. Cannot be<code>null 

            </code> .</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if called when client is not opened or called before starting twin. </p>
  - type: 3c87bd19
    description: <p>if reportedProperties is null or empty. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.setMessageCallback(MessageCallback,Object)
  id: setMessageCallback(MessageCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: setMessageCallback(MessageCallback callback, Object context)
  nameWithType: DeviceClient.setMessageCallback(MessageCallback callback, Object context)
  fullName: DeviceClient com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback(MessageCallback callback, Object context)
  overload: com.microsoft.azure.sdk.iot.device._device_client.setMessageCallback*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 487
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Sets the message callback.</p>

    <p></p>
  syntax:
    content: public DeviceClient setMessageCallback(MessageCallback callback, Object context)
    parameters:
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._message_callback
      description: >-
        <p>the message callback. Can be<code>null 

            </code> . </p>
    - id: context
      type: "79317049"
      description: >-
        <p>the context to be passed to the callback. Can be<code>null 

            </code> .</p>
    return:
      type: com.microsoft.azure.sdk.iot.device._device_client
      description: <p>itself, for fluent setting.</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if the callback is<code>null 

          </code> but a context is passed in. </p>
  - type: 12fe80de
    description: <p>if the callback is set after the client is closed. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.setOption(String,Object)
  id: setOption(String,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: setOption(String optionName, Object value)
  nameWithType: DeviceClient.setOption(String optionName, Object value)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.setOption(String optionName, Object value)
  overload: com.microsoft.azure.sdk.iot.device._device_client.setOption*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 914
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Sets a runtime option identified by parameter<code>optionName 

        </code> to<code>value 

        </code> .</p>

    <p>The options that can be set via this API are:<itemizedlist><listitem><p><b>SetMinimumPollingInterval</b> - this option is applicable only when the transport configured with this client is HTTP. This option specifies the interval in milliseconds between calls to the service checking for availability of new messages. The value is expected to be of type<code>long 

        </code> .</p></listitem><listitem><p><b>SetCertificatePath</b> - this option is applicable only when the transport configured with this client is AMQP. This option specifies the path to the certificate used to verify peer. The value is expected to be of type<code>String 

        </code> .</p></listitem><listitem><p><b>SetSASTokenExpiryTime</b> - this option is applicable for HTTP/ AMQP/MQTT. This option specifies the interval in seconds after which SASToken expires. If the transport is already open then setting this option will restart the transport with the updated expiry time. The value is expected to be of type<code>long 

        </code> .</p></listitem></itemizedlist></p>

    <p></p>
  syntax: &o1
    content: public void setOption(String optionName, Object value)
    parameters:
    - id: optionName
      type: "26831127"
      description: <p>the option name to modify </p>
    - id: value
      type: "79317049"
      description: <p>an object of the appropriate type for the option's value </p>
  exceptions:
  - type: 3c87bd19
    description: <p>if the provided optionName is null </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.SHARED_ACCESS_KEY_ATTRIBUTE
  id: SHARED_ACCESS_KEY_ATTRIBUTE
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: SHARED_ACCESS_KEY_ATTRIBUTE
  nameWithType: DeviceClient.SHARED_ACCESS_KEY_ATTRIBUTE
  fullName: final String com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_KEY_ATTRIBUTE
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 82
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000006">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>as of release 1.2.27 this value is deprecated and will not be replaced. The shared access key attribute name in a connection string. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public static final String SHARED_ACCESS_KEY_ATTRIBUTE= "SharedAccessKey="
    return:
      type: 3d93591e
- uid: com.microsoft.azure.sdk.iot.device._device_client.SHARED_ACCESS_TOKEN_ATTRIBUTE
  id: SHARED_ACCESS_TOKEN_ATTRIBUTE
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: SHARED_ACCESS_TOKEN_ATTRIBUTE
  nameWithType: DeviceClient.SHARED_ACCESS_TOKEN_ATTRIBUTE
  fullName: final String com.microsoft.azure.sdk.iot.device.DeviceClient.SHARED_ACCESS_TOKEN_ATTRIBUTE
  type: Field
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 88
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>

      <xrefsect id="deprecated_1_deprecated000007">

        <xreftitle>Deprecated</xreftitle>

        <xrefdescription>

          <p>as of release 1.2.27 this value is deprecated and will not be replaced. The shared access signature attribute name in a connection string. </p>

        </xrefdescription>

      </xrefsect>

    </p>
  syntax:
    content: public static final String SHARED_ACCESS_TOKEN_ATTRIBUTE= "SharedAccessSignature="
    return:
      type: 3d93591e
- uid: com.microsoft.azure.sdk.iot.device._device_client.startDeviceTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
  id: startDeviceTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  nameWithType: DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
  overload: com.microsoft.azure.sdk.iot.device._device_client.startDeviceTwin*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 515
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Starts the device twin.</p>

    <p></p>
  syntax:
    content: public void startDeviceTwin(IotHubEventCallback deviceTwinStatusCallback, Object deviceTwinStatusCallbackContext, PropertyCallBack genericPropertyCallBack, Object genericPropertyCallBackContext)
    parameters:
    - id: deviceTwinStatusCallback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: >-
        <p>the <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback" data-throw-if-not-resolved="false">IotHubEventCallback</xref> callback for providing the status of Device Twin operations. Cannot be<code>null 

            </code> . </p>
    - id: deviceTwinStatusCallbackContext
      type: "79317049"
      description: >-
        <p>the context to be passed to the status callback. Can be<code>null 

            </code> . </p>
    - id: genericPropertyCallBack
      type: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back
      description: >-
        <p>the PropertyCallBack callback for providing any changes in desired properties. Cannot be<code>null 

            </code> . </p>
    - id: genericPropertyCallBackContext
      type: "79317049"
      description: >-
        <p>the context to be passed to the property callback. Can be<code>null 

            </code> . *</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if the callback is<code>null 

          </code></p>
  - type: b1c38b44
    description: <p>if called more than once on the same device </p>
  - type: cbf33bbe
    description: <p>if called when client is not opened </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>>)
  id: subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>>)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
  nameWithType: DeviceClient.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
  overload: com.microsoft.azure.sdk.iot.device._device_client.subscribeToDesiredProperties*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 559
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Subscribes to desired properties</p>

    <p></p>
  syntax:
    content: public void subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>> onDesiredPropertyChange)
    parameters:
    - id: onDesiredPropertyChange
      type: 6110eba5com.microsoft.azure.sdk.iot.device._device_twin._propertyb33c76fccom.microsoft.azure.sdk.iot.device._device_twin._pair78504a52com.microsoft.azure.sdk.iot.device._device_twin._property_call_back0a3cd938
      description: >-
        <p>the Map for desired properties and their corresponding callback and context. Can be<code>null 

            </code> .</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if called when client is not opened or called before starting twin. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.subscribeToDeviceMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  id: subscribeToDeviceMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: subscribeToDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  nameWithType: DeviceClient.subscribeToDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
  overload: com.microsoft.azure.sdk.iot.device._device_client.subscribeToDeviceMethod*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 636
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Subscribes to device methods</p>

    <p></p>
  syntax:
    content: public void subscribeToDeviceMethod(DeviceMethodCallback deviceMethodCallback, Object deviceMethodCallbackContext, IotHubEventCallback deviceMethodStatusCallback, Object deviceMethodStatusCallbackContext)
    parameters:
    - id: deviceMethodCallback
      type: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback
      description: >-
        <p>Callback on which device methods shall be invoked. Cannot be<code>null 

            </code> . </p>
    - id: deviceMethodCallbackContext
      type: "79317049"
      description: >-
        <p>Context for device method callback. Can be<code>null 

            </code> . </p>
    - id: deviceMethodStatusCallback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: >-
        <p>Callback for providing IotHub status for device methods. Cannot be<code>null 

            </code> . </p>
    - id: deviceMethodStatusCallbackContext
      type: "79317049"
      description: >-
        <p>Context for device method status callback. Can be<code>null 

            </code> .</p>
  exceptions:
  - type: cbf33bbe
    description: <p>if called when client is not opened. </p>
  - type: 3c87bd19
    description: <p>if either callback are null. </p>
- uid: com.microsoft.azure.sdk.iot.device._device_client.uploadToBlobAsync(String,InputStream,long,IotHubEventCallback,Object)
  id: uploadToBlobAsync(String,InputStream,long,IotHubEventCallback,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  langs:
  - java
  name: uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
  nameWithType: DeviceClient.uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
  overload: com.microsoft.azure.sdk.iot.device._device_client.uploadToBlobAsync*
  type: Method
  source:
    remote: *o0
    path: device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/DeviceClient.java
    startLine: 684
  package: com.microsoft.azure.sdk.iot.device
  summary: >-
    <p>Asynchronously upload a stream to the IoT Hub.</p>

    <p></p>
  syntax:
    content: public void uploadToBlobAsync(String destinationBlobName, InputStream inputStream, long streamLength, IotHubEventCallback callback, Object callbackContext)
    parameters:
    - id: destinationBlobName
      type: "26831127"
      description: <p>is a string with the name of the file in the storage. </p>
    - id: inputStream
      type: 76fcb9b7
      description: <p>is a InputStream with the stream to upload in the blob. </p>
    - id: streamLength
      type: 0364520f
      description: <p>is a long with the number of bytes in the stream to upload. </p>
    - id: callback
      type: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
      description: <p>the callback to be invoked when a file is uploaded. </p>
    - id: callbackContext
      type: "79317049"
      description: >-
        <p>a context to be passed to the callback. Can be<code>null 

            </code> .</p>
  exceptions:
  - type: 3c87bd19
    description: >-
      <p>if the provided blob name, or the file path is<code>null 

          </code> , empty or not valid, or if the callback is<code>null 

          </code> . </p>
  - type: cbf33bbe
    description: <p>if the client cannot create a instance of the FileUpload or the transport. </p>
  - type: b1c38b44
    description: <p>if this method is called when using x509 authentication </p>
references:
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: d07b5f81
  spec.java:
  - name: final Charset
    fullName: final Charset
- uid: 3c87bd19
  spec.java:
  - name: IllegalArgumentException
    fullName: IllegalArgumentException
- uid: "44102508"
  spec.java:
  - name: URISyntaxException
    fullName: URISyntaxException
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.sdk.iot.device._device_client.DeviceClient*
  name: DeviceClient
  nameWithType: DeviceClient.DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.DeviceClient
  package: com.microsoft.azure.sdk.iot.device
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: cbf33bbe
  spec.java:
  - name: IOException
    fullName: IOException
- uid: com.microsoft.azure.sdk.iot.device._device_client.open*
  name: open
  nameWithType: DeviceClient.open
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.open
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.close*
  name: close
  nameWithType: DeviceClient.close
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.close
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.closeNow*
  name: closeNow
  nameWithType: DeviceClient.closeNow
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow
  package: com.microsoft.azure.sdk.iot.device
- uid: 12fe80de
  spec.java:
  - name: IllegalStateException
    fullName: IllegalStateException
- uid: "79317049"
  spec.java:
  - name: Object
    fullName: Object
- uid: com.microsoft.azure.sdk.iot.device._device_client.sendEventAsync*
  name: sendEventAsync
  nameWithType: DeviceClient.sendEventAsync
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.sendEventAsync
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.setMessageCallback*
  name: setMessageCallback
  nameWithType: DeviceClient.setMessageCallback
  fullName: DeviceClient com.microsoft.azure.sdk.iot.device.DeviceClient.setMessageCallback
  package: com.microsoft.azure.sdk.iot.device
- uid: b1c38b44
  spec.java:
  - name: UnsupportedOperationException
    fullName: UnsupportedOperationException
- uid: com.microsoft.azure.sdk.iot.device._device_client.startDeviceTwin*
  name: startDeviceTwin
  nameWithType: DeviceClient.startDeviceTwin
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.startDeviceTwin
  package: com.microsoft.azure.sdk.iot.device
- uid: 6110eba5com.microsoft.azure.sdk.iot.device._device_twin._propertyb33c76fccom.microsoft.azure.sdk.iot.device._device_twin._pair78504a52com.microsoft.azure.sdk.iot.device._device_twin._property_call_back0a3cd938
  spec.java:
  - name: Map<
    fullName: Map<
  - uid: com.microsoft.azure.sdk.iot.device._device_twin._property
    name: Property
    fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property
    href: com.microsoft.azure.sdk.iot.device._device_twin._property.yml
  - name: ', '
    fullName: ', '
  - uid: com.microsoft.azure.sdk.iot.device._device_twin._pair
    name: Pair
    fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair
    href: com.microsoft.azure.sdk.iot.device._device_twin._pair.yml
  - name: <
    fullName: <
  - uid: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back
    name: PropertyCallBack
    fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack
    href: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back.yml
  - name: <String, Object>, Object>>
    fullName: <String, Object>, Object>>
- uid: com.microsoft.azure.sdk.iot.device._device_client.subscribeToDesiredProperties*
  name: subscribeToDesiredProperties
  nameWithType: DeviceClient.subscribeToDesiredProperties
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDesiredProperties
  package: com.microsoft.azure.sdk.iot.device
- uid: b398a0f1com.microsoft.azure.sdk.iot.device._device_twin._propertya08ddfce
  spec.java:
  - name: Set<
    fullName: Set<
  - uid: com.microsoft.azure.sdk.iot.device._device_twin._property
    name: Property
    fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property
    href: com.microsoft.azure.sdk.iot.device._device_twin._property.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.device._device_client.sendReportedProperties*
  name: sendReportedProperties
  nameWithType: DeviceClient.sendReportedProperties
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.sendReportedProperties
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.subscribeToDeviceMethod*
  name: subscribeToDeviceMethod
  nameWithType: DeviceClient.subscribeToDeviceMethod
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.subscribeToDeviceMethod
  package: com.microsoft.azure.sdk.iot.device
- uid: 76fcb9b7
  spec.java:
  - name: InputStream
    fullName: InputStream
- uid: com.microsoft.azure.sdk.iot.device._device_client.uploadToBlobAsync*
  name: uploadToBlobAsync
  nameWithType: DeviceClient.uploadToBlobAsync
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.uploadToBlobAsync
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.setOption*
  name: setOption
  nameWithType: DeviceClient.setOption
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.setOption
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.registerConnectionStateCallback*
  name: registerConnectionStateCallback
  nameWithType: DeviceClient.registerConnectionStateCallback
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.registerConnectionStateCallback
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.getConfig*
  name: getConfig
  nameWithType: DeviceClient.getConfig
  fullName: DeviceClientConfig com.microsoft.azure.sdk.iot.device.DeviceClient.getConfig
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.createFromSecurityProvider*
  name: createFromSecurityProvider
  nameWithType: DeviceClient.createFromSecurityProvider
  fullName: static DeviceClient com.microsoft.azure.sdk.iot.device.DeviceClient.createFromSecurityProvider
  package: com.microsoft.azure.sdk.iot.device
- uid: com.microsoft.azure.sdk.iot.device._device_client.setOption(String,Object)
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: setOption(String optionName, Object value)
  nameWithType: DeviceClient.setOption(String optionName, Object value)
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.setOption(String optionName, Object value)
  type: Method
  summary: >-
    <p>Sets a runtime option identified by parameter<code>optionName 

        </code> to<code>value 

        </code> .</p>

    <p>The options that can be set via this API are:<itemizedlist><listitem><p><b>SetMinimumPollingInterval</b> - this option is applicable only when the transport configured with this client is HTTP. This option specifies the interval in milliseconds between calls to the service checking for availability of new messages. The value is expected to be of type<code>long 

        </code> .</p></listitem><listitem><p><b>SetCertificatePath</b> - this option is applicable only when the transport configured with this client is AMQP. This option specifies the path to the certificate used to verify peer. The value is expected to be of type<code>String 

        </code> .</p></listitem><listitem><p><b>SetSASTokenExpiryTime</b> - this option is applicable for HTTP/ AMQP/MQTT. This option specifies the interval in seconds after which SASToken expires. If the transport is already open then setting this option will restart the transport with the updated expiry time. The value is expected to be of type<code>long 

        </code> .</p></listitem></itemizedlist></p>

    <p></p>
  syntax: *o1
- uid: com.microsoft.azure.sdk.iot.device._device_client_config
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client_config.yml
  name: DeviceClientConfig
  nameWithType: DeviceClientConfig
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClientConfig
  type: Class
  summary: <p>Configuration settings for an IoT Hub client. Validates all user-defined settings. </p>
  syntax:
    content: public class DeviceClientConfig
- uid: com.microsoft.azure.sdk.iot.device._device_i_o
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_i_o.yml
  name: DeviceIO
  nameWithType: DeviceIO
  fullName: com.microsoft.azure.sdk.iot.device.DeviceIO
  type: Class
  summary: >-
    <p>Implement the standard I/O interface with the IoTHub. <verbatim>+-------------------------------------+                  +-----------------------------------+

    |                                     |                  |                                   |

    |             DeviceClient            |------------------+        DeviceClientConfig         |

    |                                     |                  |                                   |

    +-------------------------------------+                  +-----------------------------------+

       |                        |

       |                       \/

       |  +---------------------------------------------------------------------------------------------+

       |  | Services                                                                                    |

       |  |  +-----------+    +------------+    +--------------+                        +------------+  |

       |  |  | Telemetry |    | DeviceTwin |    | DeviceMethod |                        | FileUpload |  |

       |  |  +-----------+    +------------+    +--------------+                        +---------+--+  |

       |  +---------------------------------------------------------------------------------------|-----+

       |                                    |                                                     |

      \/                                   \/                                                     |

    #####################################################################################         |

    # DeviceIO                                                                          #         |

    #  +----------------+    +-------------------------------------+    +------------+  #         |

    #  |                |    |                open                 |    |            |  #         |

    #  | sendEventAsync |    |                   +---------------+ |    |   close    |  #         |

    #  |                |    |                   | taskScheduler | |    |            |  #         |

    #  +--------+-------+    +--+----------------+--+---------+--+-+    +--------+---+  #         |

    ############|###############|###################|#########|##################|#######         |

                |               |                   |         |                  |                |

                |               |                  \/        \/                  |                |

                |               |    +----------------+   +-------------------+  |                |

                |               |    | IoTHubSendTask |   | IoTHubReceiveTask |  |                |

                |               |    |   +--------+   |   |    +---------+    |  |                |

                |               |    |   |   Run  |   |   |    |   Run   |    |  |                |

                |               |    +---+---+----+---+   +----+----+----+----+  |                |

    </verbatim> IotHubTransport | | | | | | +------<mdash></mdash>|------------<mdash></mdash>|---------<mdash></mdash>|-------------------<mdash></mdash>|---------<mdash></mdash>|-----<mdash></mdash>+ +-------------------------------------------<mdash></mdash>+ | \/ \/ \/ \/ \/ | | IoTHubTransportManager | | +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash>+ | | +---<mdash></mdash>+ +----<mdash></mdash>+ +---<mdash></mdash>+ +------<mdash></mdash>+ | | | addMessage | | Open | | sendMessages | | handleMessage | | Close | | | | Open | | Close | | send | | receive | | | +---------<mdash></mdash>+ +---------<mdash></mdash>+ +-----------<mdash></mdash>+ +------------<mdash></mdash>+ +------<mdash></mdash>+ | | +---<mdash></mdash>+ +----<mdash></mdash>+ +---<mdash></mdash>+ +------<mdash></mdash>+ | +-------<mdash></mdash>+-----------------------------<mdash></mdash>+----------------------<mdash></mdash>+----------<mdash></mdash>+ +<mdash></mdash>+---------------------------------------<mdash></mdash>+ | | | | \/ \/ \/ \/ +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +---------------<mdash></mdash>+ +--------------------<mdash></mdash>+ | AmqpsTransport | | MqttTransport | | HttpsTransport | | HttpsTransportManager | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ | AmqpsIotHubConnection | | MqttIotHubConnection | | HttpsIotHubConnection | +----------------------<mdash></mdash>+ +----------------------<mdash></mdash>+ +------------------------------------------<mdash></mdash>+ </p>
  syntax:
    content: public class DeviceIO
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_twin
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_twin.yml
  name: DeviceTwin
  nameWithType: DeviceTwin
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceTwin
  type: Class
  syntax:
    content: public class DeviceTwin
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_method
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_method.yml
  name: DeviceMethod
  nameWithType: DeviceMethod
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethod
  type: Class
  syntax:
    content: public class DeviceMethod
- uid: com.microsoft.azure.sdk.iot.device.fileupload._file_upload
  parent: com.microsoft.azure.sdk.iot.device.fileupload
  href: com.microsoft.azure.sdk.iot.device.fileupload._file_upload.yml
  name: FileUpload
  nameWithType: FileUpload
  fullName: com.microsoft.azure.sdk.iot.device.fileupload.FileUpload
  type: Class
  summary: <p>Provide means to upload file in the Azure Storage using the IoTHub. </p>
  syntax:
    content: public class FileUpload
- uid: com.microsoft.azure.sdk.iot.device._custom_logger
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._custom_logger.yml
  name: CustomLogger
  nameWithType: CustomLogger
  fullName: com.microsoft.azure.sdk.iot.device.CustomLogger
  type: Class
  syntax:
    content: public class CustomLogger
- uid: com.microsoft.azure.sdk.iot.device.transport.amqps._io_t_hub_connection_type
  parent: com.microsoft.azure.sdk.iot.device.transport.amqps
  href: com.microsoft.azure.sdk.iot.device.transport.amqps._io_t_hub_connection_type.yml
  name: IoTHubConnectionType
  nameWithType: IoTHubConnectionType
  fullName: com.microsoft.azure.sdk.iot.device.transport.amqps.IoTHubConnectionType
  type: Enum
  summary: <p>Type of the connection </p>
  syntax:
    content: public enum IoTHubConnectionType
- uid: com.microsoft.azure.sdk.iot.device._transport_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._transport_client.yml
  name: TransportClient
  nameWithType: TransportClient
  fullName: com.microsoft.azure.sdk.iot.device.TransportClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows user to create a transport client abstracton object to use it for multiple devices to connect to an IoT Hub using the same connection (multiplexing). Handle to register devices to transport client and open / closeNow the connection. </p>

    <p>The multiplexed connection is supported with AMQPS / AMQPS_WS protocols. </p>
  syntax:
    content: public class TransportClient
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_client_protocol.yml
  name: IotHubClientProtocol
  nameWithType: IotHubClientProtocol
  fullName: com.microsoft.azure.sdk.iot.device.IotHubClientProtocol
  type: Enum
  summary: <p>The application-layer protocol used by the client to communicate with an IoT Hub. </p>
  syntax:
    content: public enum IotHubClientProtocol
- uid: com.microsoft.azure.sdk.iot.device._device_client.closeNow()
  parent: com.microsoft.azure.sdk.iot.device._device_client
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: closeNow()
  nameWithType: DeviceClient.closeNow()
  fullName: void com.microsoft.azure.sdk.iot.device.DeviceClient.closeNow()
  type: Method
  summary: >-
    <p>Closes the IoT Hub client by releasing any resources held by client. When closeNow is called all the messages that were in transit or pending to be sent will be informed to the user in the callbacks and any existing connection to IotHub will be closed. Must be called to terminate the background thread that is sending data to IoT Hub. After<code>closeNow() 

        </code> is called, the IoT Hub client is no longer usable. If the client is already closed, the function shall do nothing.</p>

    <p></p>
  syntax: *o2
- uid: com.microsoft.azure.sdk.iot.device._message
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message.yml
  name: Message
  nameWithType: Message
  fullName: com.microsoft.azure.sdk.iot.device.Message
  type: Class
  syntax:
    content: public class Message
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.yml
  name: IotHubEventCallback
  nameWithType: IotHubEventCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubEventCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub event callback.</p>

    <p>Developers are expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._iot_hub_event_callback.execute(IotHubStatusCode,Object)" data-throw-if-not-resolved="false">IotHubEventCallback#execute(IotHubStatusCode, Object)</xref> upon receiving a response from an IoT Hub. </p>
  syntax:
    content: public interface IotHubEventCallback
- uid: com.microsoft.azure.sdk.iot.device._device_client
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._device_client.yml
  name: DeviceClient
  nameWithType: DeviceClient
  fullName: com.microsoft.azure.sdk.iot.device.DeviceClient
  type: Class
  summary: >-
    <p>The public-facing API. Allows a single logical or physical device to connect to an IoT Hub. The IoT Hub client supports sending events to and receiving messages from an IoT Hub. </p>

    <p>To support these workflows, the client library will provide the following abstractions: a message, with its payload and associated properties; and a client, which sends and receives messages. </p>

    <p>The client buffers messages while the network is down, and re-sends them when the network comes back online. It also batches messages to improve communication efficiency (HTTPS only). </p>

    <p>The client supports HTTPS 1.1 and AMQPS 1.0 transports. </p>
  syntax: *o3
- uid: com.microsoft.azure.sdk.iot.device._message_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._message_callback.yml
  name: MessageCallback
  nameWithType: MessageCallback
  fullName: com.microsoft.azure.sdk.iot.device.MessageCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub message callback. </p>

    <p>The developer is expected to create an implementation of this interface, and the transport will call <xref uid="com.microsoft.azure.sdk.iot.device._message_callback.execute(Message,Object)" data-throw-if-not-resolved="false">MessageCallback#execute(Message, Object)</xref> upon receiving a message from an IoT Hub. </p>
  syntax:
    content: public interface MessageCallback
- uid: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._property_call_back.yml
  name: PropertyCallBack<Type1,Type2>
  nameWithType: PropertyCallBack<Type1,Type2>
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.PropertyCallBack<Type1,Type2>
  type: Interface
  syntax:
    content: public interface PropertyCallBack<Type1,Type2>
    typeParameters:
    - type: 5f35c83f
    - type: be713184
- uid: com.microsoft.azure.sdk.iot.device._device_twin._property
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._property.yml
  name: Property
  nameWithType: Property
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Property
  type: Class
  syntax:
    content: public class Property
- uid: com.microsoft.azure.sdk.iot.device._device_twin._pair
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._pair.yml
  name: Pair<Type1,Type2>
  nameWithType: Pair<Type1,Type2>
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.Pair<Type1,Type2>
  type: Class
  syntax:
    content: public class Pair<Type1,Type2>
    typeParameters:
    - type: 5f35c83f
    - type: be713184
- uid: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback
  parent: com.microsoft.azure.sdk.iot.device._device_twin
  href: com.microsoft.azure.sdk.iot.device._device_twin._device_method_callback.yml
  name: DeviceMethodCallback
  nameWithType: DeviceMethodCallback
  fullName: com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceMethodCallback
  type: Interface
  syntax:
    content: public interface DeviceMethodCallback
- uid: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback
  parent: com.microsoft.azure.sdk.iot.device
  href: com.microsoft.azure.sdk.iot.device._iot_hub_connection_state_callback.yml
  name: IotHubConnectionStateCallback
  nameWithType: IotHubConnectionStateCallback
  fullName: com.microsoft.azure.sdk.iot.device.IotHubConnectionStateCallback
  type: Interface
  summary: >-
    <p>An interface for an IoT Hub connection state callback.</p>

    <p>Developers are expected to create an implementation of this interface, and the transport will call <xref uid="" data-throw-if-not-resolved="false">IotHubConnectionStateCallback#execute(IotHubConnectionState, Object)</xref> passing in the connection status (down, success, etc.). </p>
  syntax:
    content: public interface IotHubConnectionStateCallback
- uid: com.microsoft.azure.sdk.iot.provisioning.security._security_provider
  parent: com.microsoft.azure.sdk.iot.provisioning.security
  href: com.microsoft.azure.sdk.iot.provisioning.security._security_provider.yml
  name: SecurityProvider
  nameWithType: SecurityProvider
  fullName: com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider
  type: Class
  syntax:
    content: public class SecurityProvider
