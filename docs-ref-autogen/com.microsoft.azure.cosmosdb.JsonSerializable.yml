### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
  name: JsonSerializable()
  nameWithType: JsonSerializable.JsonSerializable()
  syntax: protected JsonSerializable()
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable()
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String jsonString)
  name: JsonSerializable(String jsonString)
  nameWithType: JsonSerializable.JsonSerializable(String jsonString)
  parameters:
  - description: <p>the json string that represents the JsonSerializable. </p>
    name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: protected JsonSerializable(String jsonString)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String jsonString, ObjectMapper objectMapper)
  name: JsonSerializable(String jsonString, ObjectMapper objectMapper)
  nameWithType: JsonSerializable.JsonSerializable(String jsonString, ObjectMapper objectMapper)
  parameters:
  - description: <p>the json string that represents the JsonSerializable. </p>
    name: jsonString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the custom object mapper </p>
    name: objectMapper
    type: <xref href="ObjectMapper?alt=ObjectMapper&text=ObjectMapper" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor.</p>

    <p></p>
  syntax: protected JsonSerializable(String jsonString, ObjectMapper objectMapper)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.JsonSerializable(String,ObjectMapper)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.get(String propertyName)
  name: get(String propertyName)
  nameWithType: JsonSerializable.get(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the value of the property. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a property value as Object.</p>

    <p></p>
  syntax: public Object get(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.get(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String propertyName)
  name: getBoolean(String propertyName)
  nameWithType: JsonSerializable.getBoolean(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the boolean value. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a boolean value.</p>

    <p></p>
  syntax: public Boolean getBoolean(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getBoolean(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String propertyName)
  name: getCollection(String propertyName)
  nameWithType: JsonSerializable.getCollection(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JSONObject collection. </p>
    type: <xref href="Collection%3CObjectNode%3E?alt=Collection%3CObjectNode%3E&text=Collection%3CObjectNode%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a JSONObject collection.</p>

    <p></p>
  syntax: public Collection<ObjectNode> getCollection(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String propertyName, Class<T> c)
  name: getCollection(String propertyName, Class<T> c)
  nameWithType: JsonSerializable.getCollection(String propertyName, Class<T> c)
  parameters:
  - description: <p>the property to get </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the class of the object. If c is a POJO class, it must be a member (and not an anonymous or local) and a static one. </p>
    name: c
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the object collection. </p>
    type: <xref href="%3CT%3E+Collection%3CT%3E?alt=%3CT%3E+Collection%3CT%3E&text=%3CT%3E+Collection%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an object collection.</p>

    <p></p>
  syntax: public <T> Collection<T> getCollection(String propertyName, Class<T> c)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getCollection(String,Class<T>)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String propertyName)
  name: getDouble(String propertyName)
  nameWithType: JsonSerializable.getDouble(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the double value. </p>
    type: <xref href="Double?alt=Double&text=Double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a double value.</p>

    <p></p>
  syntax: public Double getDouble(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getDouble(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
  name: getHashMap()
  nameWithType: JsonSerializable.getHashMap()
  returns:
    description: <p>the HashMap. </p>
    type: <xref href="HashMap%3CString%2C+Object%3E?alt=HashMap%3CString%2C+Object%3E&text=HashMap%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the propertybag(JSONObject) in a hashMap</p>

    <p></p>
  syntax: public HashMap<String, Object> getHashMap()
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getHashMap()
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String propertyName)
  name: getInt(String propertyName)
  nameWithType: JsonSerializable.getInt(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the boolean value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an integer value.</p>

    <p></p>
  syntax: public Integer getInt(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getInt(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getList(String propertyName, Class<T> c)
  name: getList(String propertyName, Class<T> c)
  nameWithType: JsonSerializable.getList(String propertyName, Class<T> c)
  parameters:
  - description: <p>the property to get </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the class of the object. If c is a POJO class, it must be a member (and not an anonymous or local) and a static one. </p>
    name: c
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the object collection. </p>
    type: <xref href="%3CT%3E+List%3CT%3E?alt=%3CT%3E+List%3CT%3E&text=%3CT%3E+List%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an object List.</p>

    <p></p>
  syntax: public <T> List<T> getList(String propertyName, Class<T> c)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getList(String,Class<T>)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
  name: getLogger()
  nameWithType: JsonSerializable.getLogger()
  returns:
    type: <xref href="Logger?alt=Logger&text=Logger" data-throw-if-not-resolved="False"/>
  syntax: protected Logger getLogger()
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getLogger()
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String propertyName)
  name: getLong(String propertyName)
  nameWithType: JsonSerializable.getLong(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the long value </p>
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a long value.</p>

    <p></p>
  syntax: public Long getLong(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getLong(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
  name: getMapper()
  nameWithType: JsonSerializable.getMapper()
  returns:
    type: <xref href="ObjectMapper?alt=ObjectMapper&text=ObjectMapper" data-throw-if-not-resolved="False"/>
  syntax: protected ObjectMapper getMapper()
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getMapper()
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String propertyName)
  name: getObject(String propertyName)
  nameWithType: JsonSerializable.getObject(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JSONObject. </p>
    type: <xref href="ObjectNode?alt=ObjectNode&text=ObjectNode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a JSONObject.</p>

    <p></p>
  syntax: public ObjectNode getObject(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String propertyName, Class<T> c)
  name: getObject(String propertyName, Class<T> c)
  nameWithType: JsonSerializable.getObject(String propertyName, Class<T> c)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the class of the object. If c is a POJO class, it must be a member (and not an anonymous or local) and a static one. </p>
    name: c
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the object value. </p>
    type: <xref href="%3CT%3E+T?alt=%3CT%3E+T&text=%3CT%3E+T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an object value.</p>

    <p></p>
  syntax: public <T> T getObject(String propertyName, Class<T> c)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getObject(String,Class<T>)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String> propertyNames)
  name: getObjectByPath(List<String> propertyNames)
  nameWithType: JsonSerializable.getObjectByPath(List<String> propertyNames)
  parameters:
  - description: <p>that form the path to the property to get. </p>
    name: propertyNames
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the value of the property. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of a property identified by an array of property names that forms the path.</p>

    <p></p>
  syntax: public Object getObjectByPath(List<String> propertyNames)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getObjectByPath(List<String>)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.getString(String propertyName)
  name: getString(String propertyName)
  nameWithType: JsonSerializable.getString(String propertyName)
  parameters:
  - description: <p>the property to get. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the string value. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a string value.</p>

    <p></p>
  syntax: public String getString(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.getString(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.has(String propertyName)
  name: has(String propertyName)
  nameWithType: JsonSerializable.has(String propertyName)
  parameters:
  - description: <p>the property to look up. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>true if the property exists. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Checks whether a property exists.</p>

    <p></p>
  syntax: public boolean has(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.has(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.remove(String propertyName)
  name: remove(String propertyName)
  nameWithType: JsonSerializable.remove(String propertyName)
  parameters:
  - description: <p>the property to remove. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes a value by propertyName.</p>

    <p></p>
  syntax: public void remove(String propertyName)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.remove(String)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.set(String propertyName, T value)
  name: set(String propertyName, T value)
  nameWithType: JsonSerializable.set(String propertyName, T value)
  parameters:
  - description: <p>the property to set. </p>
    name: propertyName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the value of the property. </p>
    name: value
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="%3CT%3E+void?alt=%3CT%3E+void&text=%3CT%3E+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the value of a property.</p>

    <p></p>
  syntax: public <T> void set(String propertyName, T value)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.set(String,T)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
  name: toJson()
  nameWithType: JsonSerializable.toJson()
  returns:
    description: <p>the JSON string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts to a JSON string.</p>

    <p></p>
  syntax: public String toJson()
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.toJson()
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy formattingPolicy)
  name: toJson(SerializationFormattingPolicy formattingPolicy)
  nameWithType: JsonSerializable.toJson(SerializationFormattingPolicy formattingPolicy)
  parameters:
  - description: <p>the formatting policy to be used. </p>
    name: formattingPolicy
    type: <xref href="com.microsoft.azure.cosmosdb.SerializationFormattingPolicy?alt=com.microsoft.azure.cosmosdb.SerializationFormattingPolicy&text=SerializationFormattingPolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JSON string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts to a JSON string.</p>

    <p></p>
  syntax: public String toJson(SerializationFormattingPolicy formattingPolicy)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.toJson(SerializationFormattingPolicy)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.toObject(Class<T> c)
  name: toObject(Class<T> c)
  nameWithType: JsonSerializable.toObject(Class<T> c)
  parameters:
  - description: <p>the class of the object, either a POJO class or JSONObject. If c is a POJO class, it must be a member (and not an anonymous or local) and a static one. </p>
    name: c
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the POJO. </p>
    type: <xref href="%3CT%3E+T?alt=%3CT%3E+T&text=%3CT%3E+T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Converts to an Object (only POJOs and JSONObject are supported).</p>

    <p></p>
  syntax: public <T> T toObject(Class<T> c)
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.toObject(Class<T>)
- fullName: com.microsoft.azure.cosmosdb.JsonSerializable.toString()
  name: toString()
  nameWithType: JsonSerializable.toString()
  returns:
    description: <p>string representation of property bag. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets Simple String representation of property bag.</p>

    <p>For proper conversion to json and inclusion of the default values use <xref uid="com.microsoft.azure.cosmosdb.JsonSerializable.toJson()" data-throw-if-not-resolved="false" data-raw-source="toJson()"></xref>.</p>

    <p></p>
  syntax: public String toString()
  uid: com.microsoft.azure.cosmosdb.JsonSerializable.toString()
nameWithType: JsonSerializable
syntax: public class JsonSerializable
type: class
uid: com.microsoft.azure.cosmosdb.JsonSerializable
fullName: com.microsoft.azure.cosmosdb.JsonSerializable
name: JsonSerializable
package: com.microsoft.azure.cosmosdb
summary: <p>Represents a base resource that can be serialized to JSON in the Azure Cosmos DB database service. </p>
metadata: {}
