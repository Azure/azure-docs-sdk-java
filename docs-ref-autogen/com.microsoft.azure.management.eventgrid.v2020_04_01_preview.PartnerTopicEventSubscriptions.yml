### YamlMime:JavaType
uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions"
fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions"
name: "PartnerTopicEventSubscriptions"
nameWithType: "PartnerTopicEventSubscriptions"
summary: "Type representing Partner<wbr>Topic<wbr>Event<wbr>Subscriptions."
syntax: "public interface PartnerTopicEventSubscriptions extends SupportsCreating<PartnerTopicEventSubscription.DefinitionStages.Blank>, HasInner<PartnerTopicEventSubscriptionsInner>"
methods:
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.deleteAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.deleteAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  name: "deleteAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  nameWithType: "PartnerTopicEventSubscriptions.deleteAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  summary: "Delete an event subscription of a partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."
    name: "eventSubscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  desc: "Delete an event subscription of a partner topic. Delete an event subscription of a partner topic."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.getAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  name: "getAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  nameWithType: "PartnerTopicEventSubscriptions.getAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  summary: "Get an event subscription of a partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the event subscription to be found. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."
    name: "eventSubscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<PartnerTopicEventSubscription> getAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  desc: "Get an event subscription of a partner topic. Get an event subscription of a partner topic."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscription&text=PartnerTopicEventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.getFullUrlAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.getFullUrlAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  name: "getFullUrlAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  nameWithType: "PartnerTopicEventSubscriptions.getFullUrlAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  summary: "Get full URL of an event subscription of a partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."
    name: "eventSubscriptionName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<EventSubscriptionFullUrl> getFullUrlAsync(String resourceGroupName, String partnerTopicName, String eventSubscriptionName)"
  desc: "Get full URL of an event subscription of a partner topic. Get the full endpoint URL for an event subscription of a partner topic."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptionFullUrl?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.EventSubscriptionFullUrl&text=EventSubscriptionFullUrl\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.listByPartnerTopicAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscriptions.listByPartnerTopicAsync(String resourceGroupName, String partnerTopicName)"
  name: "listByPartnerTopicAsync(String resourceGroupName, String partnerTopicName)"
  nameWithType: "PartnerTopicEventSubscriptions.listByPartnerTopicAsync(String resourceGroupName, String partnerTopicName)"
  summary: "List event subscriptions of a partner topic."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Name of the partner topic."
    name: "partnerTopicName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<PartnerTopicEventSubscription> listByPartnerTopicAsync(String resourceGroupName, String partnerTopicName)"
  desc: "List event subscriptions of a partner topic. List event subscriptions that belong to a specific partner topic."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscription?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscription&text=PartnerTopicEventSubscription\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing PartnerTopicEventSubscriptions."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscription.DefinitionStages.Blank?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.PartnerTopicEventSubscription.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.PartnerTopicEventSubscriptionsInner?alt=com.microsoft.azure.management.eventgrid.v2020_04_01_preview.implementation.PartnerTopicEventSubscriptionsInner&text=PartnerTopicEventSubscriptionsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.eventgrid.v2020_04_01_preview"
artifact: com.microsoft.azure.eventgrid.v2020_04_01_preview:azure-mgmt-eventgrid:1.0.0-beta-3
