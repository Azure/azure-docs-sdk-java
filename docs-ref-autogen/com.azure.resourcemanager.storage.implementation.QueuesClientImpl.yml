### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  id: QueuesClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation
  children:
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.create(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.update(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  langs:
  - java
  name: QueuesClientImpl
  nameWithType: QueuesClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  type: Class
  package: com.azure.resourcemanager.storage.implementation
  summary: An instance of this class provides access to all the operations defined in QueuesClient.
  syntax:
    content: public final class QueuesClientImpl implements QueuesClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.storage.fluent.QueuesClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.QueuesClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  id: QueuesClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: QueuesClientImpl(StorageManagementClientImpl client)
  nameWithType: QueuesClientImpl.QueuesClientImpl(StorageManagementClientImpl client)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.QueuesClientImpl(StorageManagementClientImpl client)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.QueuesClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.storage.implementation
  summary: Initializes an instance of QueuesClientImpl.
  syntax:
    content: " QueuesClientImpl(StorageManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.create(java.lang.String,java.lang.String,java.lang.String)
  id: create(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.create(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.create(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public StorageQueueInner create(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: createAsync(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.createAsync(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Mono<StorageQueueInner> createAsync(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: createAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: createAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  nameWithType: QueuesClientImpl.createAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Mono<StorageQueueInner> createAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: A name-value pair that represents queue metadata.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: createWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: createWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
  nameWithType: QueuesClientImpl.createWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Response<StorageQueueInner> createWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: A name-value pair that represents queue metadata.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: createWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  nameWithType: QueuesClientImpl.createWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Mono<Response<StorageQueueInner>> createWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: A name-value pair that represents queue metadata.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.delete(java.lang.String,java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.delete(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.delete(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public void delete(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.deleteAsync(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteAsync(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
  nameWithType: QueuesClientImpl.deleteWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public Response<Void> deleteWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.deleteWithResponseAsync(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponseAsync(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.get(java.lang.String,java.lang.String,java.lang.String)
  id: get(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: get(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.get(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.get(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.get*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public StorageQueueInner get(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
      description: the queue with the specified queue name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: getAsync(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.getAsync(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getAsync(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public Mono<StorageQueueInner> getAsync(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the queue with the specified queue name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: getWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
  nameWithType: QueuesClientImpl.getWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public Response<StorageQueueInner> getWithResponse(String resourceGroupName, String accountName, String queueName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the queue with the specified queue name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: getWithResponseAsync(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.getWithResponseAsync(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponseAsync(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets the queue with the specified queue name, under the specified account if it exists.
  syntax:
    content: public Mono<Response<StorageQueueInner>> getWithResponseAsync(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>>
      description: the queue with the specified queue name, under the specified account if it exists.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list(java.lang.String,java.lang.String)
  id: list(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String accountName)
  nameWithType: QueuesClientImpl.list(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets a list of all the queues under the specified storage account.
  syntax:
    content: public PagedIterable<ListQueueInner> list(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.ListQueueInner>
      description: a list of all the queues under the specified storage account.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: list(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: list(String resourceGroupName, String accountName, String maxpagesize, String filter, Context context)
  nameWithType: QueuesClientImpl.list(String resourceGroupName, String accountName, String maxpagesize, String filter, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list(String resourceGroupName, String accountName, String maxpagesize, String filter, Context context)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets a list of all the queues under the specified storage account.
  syntax:
    content: public PagedIterable<ListQueueInner> list(String resourceGroupName, String accountName, String maxpagesize, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: maxpagesize
      type: java.lang.String
      description: Optional, a maximum number of queues that should be included in a list queue response.
    - id: filter
      type: java.lang.String
      description: >-
        Optional, When specified, only the queues with a name starting with the given filter will be
             listed.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.ListQueueInner>
      description: a list of all the queues under the specified storage account.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync(java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String accountName)
  nameWithType: QueuesClientImpl.listAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets a list of all the queues under the specified storage account.
  syntax:
    content: public PagedFlux<ListQueueInner> listAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.ListQueueInner>
      description: a list of all the queues under the specified storage account.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter)
  nameWithType: QueuesClientImpl.listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Gets a list of all the queues under the specified storage account.
  syntax:
    content: public PagedFlux<ListQueueInner> listAsync(String resourceGroupName, String accountName, String maxpagesize, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: maxpagesize
      type: java.lang.String
      description: Optional, a maximum number of queues that should be included in a list queue response.
    - id: filter
      type: java.lang.String
      description: >-
        Optional, When specified, only the queues with a name starting with the given filter will be
             listed.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.ListQueueInner>
      description: a list of all the queues under the specified storage account.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.update(java.lang.String,java.lang.String,java.lang.String)
  id: update(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.update(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.update(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public StorageQueueInner update(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String accountName, String queueName)
  nameWithType: QueuesClientImpl.updateAsync(String resourceGroupName, String accountName, String queueName)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync(String resourceGroupName, String accountName, String queueName)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Mono<StorageQueueInner> updateAsync(String resourceGroupName, String accountName, String queueName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  nameWithType: QueuesClientImpl.updateAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Mono<StorageQueueInner> updateAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: A name-value pair that represents queue metadata.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: updateWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
  nameWithType: QueuesClientImpl.updateWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Response<StorageQueueInner> updateWithResponse(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: A name-value pair that represents queue metadata.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.1.0
  parent: com.azure.resourcemanager.storage.implementation.QueuesClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  nameWithType: QueuesClientImpl.updateWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
  overload: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Creates a new queue with the specified queue name, under the specified account.
  syntax:
    content: public Mono<Response<StorageQueueInner>> updateWithResponseAsync(String resourceGroupName, String accountName, String queueName, Map<String,String> metadata)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: queueName
      type: java.lang.String
      description: >-
        A queue name must be unique within a storage account and must be between 3 and 63 characters.The
             name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an
             alphanumeric character and it cannot have two consecutive dash(-) characters.
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: A name-value pair that represents queue metadata.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>>
      description: the response.
references:
- uid: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
  name: StorageManagementClientImpl
  nameWithType: StorageManagementClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.QueuesClientImpl*
  name: QueuesClientImpl
  nameWithType: QueuesClientImpl.QueuesClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.QueuesClientImpl
  package: com.azure.resourcemanager.storage.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
    name: StorageQueueInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: QueuesClientImpl.createWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
    name: StorageQueueInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync*
  name: createAsync
  nameWithType: QueuesClientImpl.createAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
  name: StorageQueueInner
  nameWithType: StorageQueueInner
  fullName: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.create*
  name: create
  nameWithType: QueuesClientImpl.create
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.create
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageQueueInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
    name: StorageQueueInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageQueueInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponse*
  name: createWithResponse
  nameWithType: QueuesClientImpl.createWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.createWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: QueuesClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync*
  name: updateAsync
  nameWithType: QueuesClientImpl.updateAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.update*
  name: update
  nameWithType: QueuesClientImpl.update
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.update
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponse*
  name: updateWithResponse
  nameWithType: QueuesClientImpl.updateWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.updateWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponseAsync*
  name: getWithResponseAsync
  nameWithType: QueuesClientImpl.getWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getAsync*
  name: getAsync
  nameWithType: QueuesClientImpl.getAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.get*
  name: get
  nameWithType: QueuesClientImpl.get
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.get
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponse*
  name: getWithResponse
  nameWithType: QueuesClientImpl.getWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.getWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: QueuesClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: QueuesClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.delete*
  name: delete
  nameWithType: QueuesClientImpl.delete
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.delete
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: QueuesClientImpl.deleteWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.deleteWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.ListQueueInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListQueueInner
    name: ListQueueInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListQueueInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync*
  name: listAsync
  nameWithType: QueuesClientImpl.listAsync
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.listAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.ListQueueInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListQueueInner
    name: ListQueueInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListQueueInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list*
  name: list
  nameWithType: QueuesClientImpl.list
  fullName: com.azure.resourcemanager.storage.implementation.QueuesClientImpl.list
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.QueuesClient
  name: QueuesClient
  nameWithType: QueuesClient
  fullName: com.azure.resourcemanager.storage.fluent.QueuesClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.resourcemanager.storage.fluent.models.ListQueueInner
  name: ListQueueInner
  nameWithType: ListQueueInner
  fullName: com.azure.resourcemanager.storage.fluent.models.ListQueueInner
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
