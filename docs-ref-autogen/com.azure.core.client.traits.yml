### YamlMime:JavaPackage
uid: "com.azure.core.client.traits"
fullName: "com.azure.core.client.traits"
name: "com.azure.core.client.traits"
summary: "This package contains interfaces that represent common cross-cutting aspects of functionality offered by libraries\n in the Azure SDK for Java."
interfaces:
- "com.azure.core.client.traits.AzureKeyCredentialTrait"
- "com.azure.core.client.traits.AzureNamedKeyCredentialTrait"
- "com.azure.core.client.traits.AzureSasCredentialTrait"
- "com.azure.core.client.traits.ConfigurationTrait"
- "com.azure.core.client.traits.ConnectionStringTrait"
- "com.azure.core.client.traits.EndpointTrait"
- "com.azure.core.client.traits.HttpTrait"
- "com.azure.core.client.traits.TokenCredentialTrait"
desc: "This package contains interfaces that represent common cross-cutting aspects of functionality offered by libraries\n in the Azure SDK for Java. Each interface is referred to as a 'trait', and classes that implement the interface are\n said to have that trait. There are additional traits related to AMQP use cases in the\n <code>com.azure.core.amqp.client.traits</code> package.\n\n <p>The particular focus of traits in the Azure SDK for Java is to enable higher-level\n libraries the ability to more abstractly configure client libraries as part of their builders, prior to the client\n itself being instantiated. By doing this, these high-level libraries are able to reason about functionality more\n simply. It is important to appreciate that despite the availability of these cross-cutting traits, there is no\n promise that configuration of each builder can simply be a matter of providing the same arguments for all builders!\n Each builder must be configured appropriately for its requirements, or else runtime failures may occur when the\n builder is asked to create the associated client.</p>"
metadata: {}
package: "com.azure.core.client.traits"
artifact: com.azure:azure-core:1.34.0
