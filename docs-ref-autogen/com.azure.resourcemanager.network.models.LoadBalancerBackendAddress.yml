### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress"
fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress"
name: "LoadBalancerBackendAddress"
nameWithType: "LoadBalancerBackendAddress"
summary: "Load balancer backend addresses."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LoadBalancerBackendAddress"
constructors:
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.LoadBalancerBackendAddress()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.LoadBalancerBackendAddress()"
  name: "LoadBalancerBackendAddress()"
  nameWithType: "LoadBalancerBackendAddress.LoadBalancerBackendAddress()"
  syntax: "public LoadBalancerBackendAddress()"
methods:
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.inboundNatRulesPortMapping()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.inboundNatRulesPortMapping()"
  name: "inboundNatRulesPortMapping()"
  nameWithType: "LoadBalancerBackendAddress.inboundNatRulesPortMapping()"
  summary: "Get the inboundNatRulesPortMapping property: Collection of inbound NAT rule port mappings."
  syntax: "public List<NatRulePortMapping> inboundNatRulesPortMapping()"
  returns:
    description: "the inboundNatRulesPortMapping value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.NatRulePortMapping?alt=com.azure.resourcemanager.network.models.NatRulePortMapping&text=NatRulePortMapping\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.ipAddress()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.ipAddress()"
  name: "ipAddress()"
  nameWithType: "LoadBalancerBackendAddress.ipAddress()"
  summary: "Get the ipAddress property: IP Address belonging to the referenced virtual network."
  syntax: "public String ipAddress()"
  returns:
    description: "the ipAddress value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.loadBalancerFrontendIpConfiguration()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.loadBalancerFrontendIpConfiguration()"
  name: "loadBalancerFrontendIpConfiguration()"
  nameWithType: "LoadBalancerBackendAddress.loadBalancerFrontendIpConfiguration()"
  summary: "Get the loadBalancerFrontendIpConfiguration property: Reference to the frontend ip address configuration defined in regional loadbalancer."
  syntax: "public SubResource loadBalancerFrontendIpConfiguration()"
  returns:
    description: "the loadBalancerFrontendIpConfiguration value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.name()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.name()"
  name: "name()"
  nameWithType: "LoadBalancerBackendAddress.name()"
  summary: "Get the name property: Name of the backend address."
  syntax: "public String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.networkInterfaceIpConfiguration()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.networkInterfaceIpConfiguration()"
  name: "networkInterfaceIpConfiguration()"
  nameWithType: "LoadBalancerBackendAddress.networkInterfaceIpConfiguration()"
  summary: "Get the networkInterfaceIpConfiguration property: Reference to IP address defined in network interfaces."
  syntax: "public SubResource networkInterfaceIpConfiguration()"
  returns:
    description: "the networkInterfaceIpConfiguration value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.subnet()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.subnet()"
  name: "subnet()"
  nameWithType: "LoadBalancerBackendAddress.subnet()"
  summary: "Get the subnet property: Reference to an existing subnet."
  syntax: "public SubResource subnet()"
  returns:
    description: "the subnet value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.validate()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.validate()"
  name: "validate()"
  nameWithType: "LoadBalancerBackendAddress.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.virtualNetwork()"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.virtualNetwork()"
  name: "virtualNetwork()"
  nameWithType: "LoadBalancerBackendAddress.virtualNetwork()"
  summary: "Get the virtualNetwork property: Reference to an existing virtual network."
  syntax: "public SubResource virtualNetwork()"
  returns:
    description: "the virtualNetwork value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withIpAddress(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withIpAddress(String ipAddress)"
  name: "withIpAddress(String ipAddress)"
  nameWithType: "LoadBalancerBackendAddress.withIpAddress(String ipAddress)"
  summary: "Set the ipAddress property: IP Address belonging to the referenced virtual network."
  parameters:
  - description: "the ipAddress value to set."
    name: "ipAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoadBalancerBackendAddress withIpAddress(String ipAddress)"
  returns:
    description: "the LoadBalancerBackendAddress object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerBackendAddress?alt=com.azure.resourcemanager.network.models.LoadBalancerBackendAddress&text=LoadBalancerBackendAddress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withLoadBalancerFrontendIpConfiguration(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withLoadBalancerFrontendIpConfiguration(SubResource loadBalancerFrontendIpConfiguration)"
  name: "withLoadBalancerFrontendIpConfiguration(SubResource loadBalancerFrontendIpConfiguration)"
  nameWithType: "LoadBalancerBackendAddress.withLoadBalancerFrontendIpConfiguration(SubResource loadBalancerFrontendIpConfiguration)"
  summary: "Set the loadBalancerFrontendIpConfiguration property: Reference to the frontend ip address configuration defined in regional loadbalancer."
  parameters:
  - description: "the loadBalancerFrontendIpConfiguration value to set."
    name: "loadBalancerFrontendIpConfiguration"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoadBalancerBackendAddress withLoadBalancerFrontendIpConfiguration(SubResource loadBalancerFrontendIpConfiguration)"
  returns:
    description: "the LoadBalancerBackendAddress object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerBackendAddress?alt=com.azure.resourcemanager.network.models.LoadBalancerBackendAddress&text=LoadBalancerBackendAddress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withName(String name)"
  name: "withName(String name)"
  nameWithType: "LoadBalancerBackendAddress.withName(String name)"
  summary: "Set the name property: Name of the backend address."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoadBalancerBackendAddress withName(String name)"
  returns:
    description: "the LoadBalancerBackendAddress object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerBackendAddress?alt=com.azure.resourcemanager.network.models.LoadBalancerBackendAddress&text=LoadBalancerBackendAddress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withSubnet(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withSubnet(SubResource subnet)"
  name: "withSubnet(SubResource subnet)"
  nameWithType: "LoadBalancerBackendAddress.withSubnet(SubResource subnet)"
  summary: "Set the subnet property: Reference to an existing subnet."
  parameters:
  - description: "the subnet value to set."
    name: "subnet"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoadBalancerBackendAddress withSubnet(SubResource subnet)"
  returns:
    description: "the LoadBalancerBackendAddress object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerBackendAddress?alt=com.azure.resourcemanager.network.models.LoadBalancerBackendAddress&text=LoadBalancerBackendAddress\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withVirtualNetwork(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.network.models.LoadBalancerBackendAddress.withVirtualNetwork(SubResource virtualNetwork)"
  name: "withVirtualNetwork(SubResource virtualNetwork)"
  nameWithType: "LoadBalancerBackendAddress.withVirtualNetwork(SubResource virtualNetwork)"
  summary: "Set the virtualNetwork property: Reference to an existing virtual network."
  parameters:
  - description: "the virtualNetwork value to set."
    name: "virtualNetwork"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LoadBalancerBackendAddress withVirtualNetwork(SubResource virtualNetwork)"
  returns:
    description: "the LoadBalancerBackendAddress object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.LoadBalancerBackendAddress?alt=com.azure.resourcemanager.network.models.LoadBalancerBackendAddress&text=LoadBalancerBackendAddress\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.14.0
