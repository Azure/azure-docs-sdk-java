### YamlMime:JavaMember
nameWithType: CloudBlockBlob.commitBlockList
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList)
  name: commitBlockList(final Iterable<BlockEntry> blockList)
  nameWithType: CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList)
  parameters:
  - description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false">BlockEntry</xref> objects that represents the list block items being committed. The <code>size</code> field is ignored.</p>
    name: blockList
    type: final Iterable&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Commits a block list to the storage service. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation.</p>

    <p></p>
  syntax: public void commitBlockList(final Iterable<BlockEntry> blockList)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry>)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false">BlockEntry</xref> objects that represents the list block items being committed. The size field is ignored. </p>
    name: blockList
    type: final Iterable&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false">CloudBlobClient</xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Commits a block list to the storage service using the specified lease ID, request options, and operation context. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation.</p>

    <p></p>
  syntax: public void commitBlockList(final Iterable<BlockEntry> blockList, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry>,final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An enumerable collection of <xref uid="com.microsoft.azure.storage.blob.BlockEntry" data-throw-if-not-resolved="false">BlockEntry</xref> objects that represents the list block items being committed. The size field is ignored. </p>
    name: blockList
    type: final Iterable&lt;<xref href="com.microsoft.azure.storage.blob.BlockEntry?alt=com.microsoft.azure.storage.blob.BlockEntry&text=BlockEntry" data-throw-if-not-resolved="False"/>&gt;
  - name: standardBlobTier
    type: <xref href="com.microsoft.azure.storage.blob.StandardBlobTier?alt=com.microsoft.azure.storage.blob.StandardBlobTier&text=StandardBlobTier" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false">AccessCondition</xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false">BlobRequestOptions</xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false">CloudBlobClient</xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  summary: >-
    <p>Commits a block list to the storage service using the specified lease ID, request options, and operation context. In order to be written as part of a blob, a block must have been successfully written to the server in a prior uploadBlock operation.</p>

    <p></p>
  syntax: public void commitBlockList(final Iterable<BlockEntry> blockList, StandardBlobTier standardBlobTier, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry>,StandardBlobTier,final AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList*
fullName: com.microsoft.azure.storage.blob.CloudBlockBlob.commitBlockList(final Iterable<BlockEntry> blockList)
name: commitBlockList(final Iterable<BlockEntry> blockList)
package: com.microsoft.azure.storage.blob
metadata: {}
