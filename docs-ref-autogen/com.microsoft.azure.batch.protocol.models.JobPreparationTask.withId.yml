### YamlMime:JavaMember
nameWithType: JobPreparationTask.withId
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withId(String id)
  name: withId(String id)
  nameWithType: JobPreparationTask.withId(String id)
  parameters:
  - description: <p>the id value to set </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobPreparationTask object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobPreparationTask?alt=com.microsoft.azure.batch.protocol.models.JobPreparationTask&text=JobPreparationTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ID can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters. If you do not specify this property, the Batch service assigns a default value of 'jobpreparation'. No other task in the job can have the same ID as the Job Preparation task. If you try to submit a task with the same id, the Batch service rejects the request with error code TaskIdSameAsJobPreparationTask; if you are calling the REST API directly, the HTTP status code is 409 (Conflict).</p>

    <p></p>
  syntax: public JobPreparationTask withId(String id)
  uid: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withId(String)
uid: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withId*
fullName: com.microsoft.azure.batch.protocol.models.JobPreparationTask.withId(String id)
name: withId(String id)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
