### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.implementation.Manager&lt;MonitorManager, MonitorManagementClientImpl&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.actionGroups()
  name: actionGroups()
  nameWithType: MonitorManager.actionGroups()
  returns:
    description: <p>the Azure Action Groups API entry point </p>
    type: <xref href="com.microsoft.azure.management.monitor.ActionGroups?alt=com.microsoft.azure.management.monitor.ActionGroups&text=ActionGroups" data-throw-if-not-resolved="False"/>
  syntax: public ActionGroups actionGroups()
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.actionGroups()
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.activityLogs()
  name: activityLogs()
  nameWithType: MonitorManager.activityLogs()
  returns:
    description: <p>the Azure Activity Logs API entry point </p>
    type: <xref href="com.microsoft.azure.management.monitor.ActivityLogs?alt=com.microsoft.azure.management.monitor.ActivityLogs&text=ActivityLogs" data-throw-if-not-resolved="False"/>
  syntax: public ActivityLogs activityLogs()
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.activityLogs()
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.alertRules()
  name: alertRules()
  nameWithType: MonitorManager.alertRules()
  returns:
    description: <p>the Azure AlertRules API entry point </p>
    type: <xref href="com.microsoft.azure.management.monitor.AlertRules?alt=com.microsoft.azure.management.monitor.AlertRules&text=AlertRules" data-throw-if-not-resolved="False"/>
  syntax: public AlertRules alertRules()
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.alertRules()
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  name: authenticate(AzureTokenCredentials credentials, String subscriptionId)
  nameWithType: MonitorManager.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  parameters:
  - description: <p>the credentials to use </p>
    name: credentials
    type: <xref href="AzureTokenCredentials?alt=AzureTokenCredentials&text=AzureTokenCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription UUID </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorManager </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManager?alt=com.microsoft.azure.management.monitor.implementation.MonitorManager&text=MonitorManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of MonitorManager that exposes Monitor API entry points.</p>

    <p></p>
  syntax: public static MonitorManager authenticate(AzureTokenCredentials credentials, String subscriptionId)
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.authenticate(AzureTokenCredentials,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.authenticate(RestClient restClient, String subscriptionId)
  name: authenticate(RestClient restClient, String subscriptionId)
  nameWithType: MonitorManager.authenticate(RestClient restClient, String subscriptionId)
  parameters:
  - description: <p>the RestClient to be used for API calls. </p>
    name: restClient
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription UUID </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the MonitorManager </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManager?alt=com.microsoft.azure.management.monitor.implementation.MonitorManager&text=MonitorManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of MonitorManager that exposes Monitor API entry points.</p>

    <p></p>
  syntax: public static MonitorManager authenticate(RestClient restClient, String subscriptionId)
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.authenticate(RestClient,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.autoscaleSettings()
  name: autoscaleSettings()
  nameWithType: MonitorManager.autoscaleSettings()
  returns:
    description: <p>the Azure AutoscaleSettings API entry point </p>
    type: <xref href="com.microsoft.azure.management.monitor.AutoscaleSettings?alt=com.microsoft.azure.management.monitor.AutoscaleSettings&text=AutoscaleSettings" data-throw-if-not-resolved="False"/>
  syntax: public AutoscaleSettings autoscaleSettings()
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.autoscaleSettings()
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.configure()
  name: configure()
  nameWithType: MonitorManager.configure()
  returns:
    description: <p>the instance allowing configurations </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManager.Configurable?alt=com.microsoft.azure.management.monitor.implementation.MonitorManager.Configurable&text=MonitorManager.Configurable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a Configurable instance that can be used to create MonitorManager with optional configuration.</p>

    <p></p>
  syntax: public static Configurable configure()
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.configure()
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.diagnosticSettings()
  name: diagnosticSettings()
  nameWithType: MonitorManager.diagnosticSettings()
  returns:
    description: <p>the Azure Diagnostic Settings API entry point </p>
    type: <xref href="com.microsoft.azure.management.monitor.DiagnosticSettings?alt=com.microsoft.azure.management.monitor.DiagnosticSettings&text=DiagnosticSettings" data-throw-if-not-resolved="False"/>
  syntax: public DiagnosticSettings diagnosticSettings()
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.diagnosticSettings()
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.metricDefinitions()
  name: metricDefinitions()
  nameWithType: MonitorManager.metricDefinitions()
  returns:
    description: <p>the Azure Metric Definitions API entry point </p>
    type: <xref href="com.microsoft.azure.management.monitor.MetricDefinitions?alt=com.microsoft.azure.management.monitor.MetricDefinitions&text=MetricDefinitions" data-throw-if-not-resolved="False"/>
  syntax: public MetricDefinitions metricDefinitions()
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.metricDefinitions()
nameWithType: MonitorManager
syntax: public class MonitorManager
type: class
uid: com.microsoft.azure.management.monitor.implementation.MonitorManager
fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager
name: MonitorManager
package: com.microsoft.azure.management.monitor.implementation
summary: <p>Entry point to Azure Monitor. </p>
metadata: {}
