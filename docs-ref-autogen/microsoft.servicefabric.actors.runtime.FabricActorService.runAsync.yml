### YamlMime:JavaMember
nameWithType: FabricActorService.runAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.FabricActorService.runAsync(CancellationToken cancellationToken)
  name: runAsync(CancellationToken cancellationToken)
  nameWithType: FabricActorService.runAsync(CancellationToken cancellationToken)
  parameters:
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous operation of loading reminders when the replica becomes primary. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Overrides <xref uid="microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken)" data-throw-if-not-resolved="false">StatefulServiceBase#runAsync(system.fabric.CancellationToken)</xref></p>
  syntax: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
  uid: microsoft.servicefabric.actors.runtime.FabricActorService.runAsync(CancellationToken)
uid: microsoft.servicefabric.actors.runtime.FabricActorService.runAsync*
fullName: microsoft.servicefabric.actors.runtime.FabricActorService.runAsync(CancellationToken cancellationToken)
name: runAsync(CancellationToken cancellationToken)
package: microsoft.servicefabric.actors.runtime
metadata: {}
