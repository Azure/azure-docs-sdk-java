### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.datalake.implementation.ServicesImpl"
  id: "ServicesImpl"
  parent: "com.azure.storage.file.datalake.implementation"
  children:
  - "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesImpl(com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl)"
  - "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync(com.azure.core.util.Context)"
  - "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "ServicesImpl"
  nameWithType: "ServicesImpl"
  fullName: "com.azure.storage.file.datalake.implementation.ServicesImpl"
  type: "Class"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "An instance of this class provides access to all the operations defined in Services."
  syntax:
    content: "public final class ServicesImpl"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesImpl(com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl)"
  id: "ServicesImpl(com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl)"
  parent: "com.azure.storage.file.datalake.implementation.ServicesImpl"
  langs:
  - "java"
  name: "ServicesImpl(DataLakeStorageClientImpl client)"
  nameWithType: "ServicesImpl.ServicesImpl(DataLakeStorageClientImpl client)"
  fullName: "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesImpl(DataLakeStorageClientImpl client)"
  overload: "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesImpl*"
  type: "Constructor"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "Initializes an instance of ServicesImpl."
  syntax:
    content: "public ServicesImpl(DataLakeStorageClientImpl client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl"
      description: "the instance of the service client containing this operation class."
- uid: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync(com.azure.core.util.Context)"
  id: "listFileSystemsWithRestResponseAsync(com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.ServicesImpl"
  langs:
  - "java"
  name: "listFileSystemsWithRestResponseAsync(Context context)"
  nameWithType: "ServicesImpl.listFileSystemsWithRestResponseAsync(Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync(Context context)"
  overload: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "List FileSystems List filesystems and their properties in given account."
  syntax:
    content: "public Mono<ServicesListFileSystemsResponse> listFileSystemsWithRestResponseAsync(Context context)"
    parameters:
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.ServicesListFileSystemsResponse>"
      description: "a Mono which performs the network request upon subscription."
- uid: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  id: "listFileSystemsWithRestResponseAsync(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.datalake.implementation.ServicesImpl"
  langs:
  - "java"
  name: "listFileSystemsWithRestResponseAsync(String prefix, String continuation, Integer maxResults, String requestId, Integer timeout, Context context)"
  nameWithType: "ServicesImpl.listFileSystemsWithRestResponseAsync(String prefix, String continuation, Integer maxResults, String requestId, Integer timeout, Context context)"
  fullName: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync(String prefix, String continuation, Integer maxResults, String requestId, Integer timeout, Context context)"
  overload: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync*"
  type: "Method"
  package: "com.azure.storage.file.datalake.implementation"
  summary: "List FileSystems List filesystems and their properties in given account."
  syntax:
    content: "public Mono<ServicesListFileSystemsResponse> listFileSystemsWithRestResponseAsync(String prefix, String continuation, Integer maxResults, String requestId, Integer timeout, Context context)"
    parameters:
    - id: "prefix"
      type: "java.lang.String"
      description: "Filters results to filesystems within the specified prefix."
    - id: "continuation"
      type: "java.lang.String"
      description: "Optional.  When deleting a directory, the number of paths that are deleted with each invocation is limited.  If the number of paths to be deleted exceeds this limit, a continuation token is returned in this response header.  When a continuation token is returned in the response, it must be specified in a subsequent invocation of the delete operation to continue deleting the directory."
    - id: "maxResults"
      type: "java.lang.Integer"
      description: "An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items."
    - id: "requestId"
      type: "java.lang.String"
      description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    - id: "timeout"
      type: "java.lang.Integer"
      description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\"&gt;Setting Timeouts for Blob Service Operations.&lt;/a&gt;."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "The context to associate with this operation."
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.ServicesListFileSystemsResponse>"
      description: "a Mono which performs the network request upon subscription."
references:
- uid: "com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl"
  name: "DataLakeStorageClientImpl"
  nameWithType: "DataLakeStorageClientImpl"
  fullName: "com.azure.storage.file.datalake.implementation.DataLakeStorageClientImpl"
- uid: "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesImpl*"
  name: "ServicesImpl"
  nameWithType: "ServicesImpl.ServicesImpl"
  fullName: "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesImpl"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.file.datalake.implementation.models.ServicesListFileSystemsResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.datalake.implementation.models.ServicesListFileSystemsResponse"
    name: "ServicesListFileSystemsResponse"
    fullName: "com.azure.storage.file.datalake.implementation.models.ServicesListFileSystemsResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync*"
  name: "listFileSystemsWithRestResponseAsync"
  nameWithType: "ServicesImpl.listFileSystemsWithRestResponseAsync"
  fullName: "com.azure.storage.file.datalake.implementation.ServicesImpl.listFileSystemsWithRestResponseAsync"
  package: "com.azure.storage.file.datalake.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesService"
  name: "ServicesImpl.ServicesService"
  nameWithType: "ServicesImpl.ServicesService"
  fullName: "com.azure.storage.file.datalake.implementation.ServicesImpl.ServicesService"
- uid: "com.azure.storage.file.datalake.implementation.models.ServicesListFileSystemsResponse"
  name: "ServicesListFileSystemsResponse"
  nameWithType: "ServicesListFileSystemsResponse"
  fullName: "com.azure.storage.file.datalake.implementation.models.ServicesListFileSystemsResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
