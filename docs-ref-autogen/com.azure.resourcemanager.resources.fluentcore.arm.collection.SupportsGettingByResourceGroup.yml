### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup"
fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>"
name: "SupportsGettingByResourceGroup<T>"
nameWithType: "SupportsGettingByResourceGroup<T>"
summary: "Provides access to getting a specific Azure resource based on its name and resource group."
syntax: "public interface SupportsGettingByResourceGroup<T>"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroup(String resourceGroupName, String name)"
  name: "getByResourceGroup(String resourceGroupName, String name)"
  nameWithType: "SupportsGettingByResourceGroup<T>.getByResourceGroup(String resourceGroupName, String name)"
  summary: "Gets the information about a resource from Azure based on the resource name and the name of its resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the resource group the resource is in"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the name of the resource. (Note, this is not the ID)"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract T getByResourceGroup(String resourceGroupName, String name)"
  desc: "Gets the information about a resource from Azure based on the resource name and the name of its resource group."
  returns:
    description: "an immutable representation of the resource"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name)"
  name: "getByResourceGroupAsync(String resourceGroupName, String name)"
  nameWithType: "SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name)"
  summary: "Gets the information about a resource from Azure based on the resource name and the name of its resource group."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the resource group the resource is in"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the name of the resource. (Note, this is not the ID)"
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<T> getByResourceGroupAsync(String resourceGroupName, String name)"
  desc: "Gets the information about a resource from Azure based on the resource name and the name of its resource group."
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> that emits the found resource asynchronously."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
typeParameters:
- description: "the type of the resource to get."
  name: "T"
desc: "Provides access to getting a specific Azure resource based on its name and resource group.\n\n(Note this interface is not intended to be implemented by user code.)"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.arm.collection"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
