### YamlMime:ManagedReference
items:
- uid: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext
  id: DistinctDocumentQueryExecutionContext
  artifact: com.azure:azure-cosmos:4.0.1
  parent: com.azure.cosmos.implementation.query
  children:
  - com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.<T>createAsync(java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,com.azure.cosmos.implementation.query.DistinctQueryType,java.lang.String)
  - com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.drainAsync(int)
  langs:
  - java
  name: DistinctDocumentQueryExecutionContext<T>
  nameWithType: DistinctDocumentQueryExecutionContext<T>
  fullName: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext<T>
  type: Class
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public class DistinctDocumentQueryExecutionContext<T> implements IDocumentQueryExecutionComponent<T>
    typeParameters:
    - id: T
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.<T>createAsync(java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,com.azure.cosmos.implementation.query.DistinctQueryType,java.lang.String)
  id: <T>createAsync(java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>,com.azure.cosmos.implementation.query.DistinctQueryType,java.lang.String)
  artifact: com.azure:azure-cosmos:4.0.1
  parent: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext
  langs:
  - java
  name: <T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, DistinctQueryType distinctQueryType, String continuationToken)
  nameWithType: DistinctDocumentQueryExecutionContext<T>.<T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, DistinctQueryType distinctQueryType, String continuationToken)
  fullName: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext<T>.<T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, DistinctQueryType distinctQueryType, String continuationToken)
  overload: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.createAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public static Flux<IDocumentQueryExecutionComponent<T>> <T>createAsync(Function<String,Flux<IDocumentQueryExecutionComponent<T>>> createSourceComponentFunction, DistinctQueryType distinctQueryType, String continuationToken)
    parameters:
    - id: createSourceComponentFunction
      type: java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>
    - id: distinctQueryType
      type: com.azure.cosmos.implementation.query.DistinctQueryType
    - id: continuationToken
      type: java.lang.String
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>
- uid: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.DistinctDocumentQueryExecutionContext(com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>,com.azure.cosmos.implementation.query.DistinctQueryType,java.lang.String)
  id: DistinctDocumentQueryExecutionContext(com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>,com.azure.cosmos.implementation.query.DistinctQueryType,java.lang.String)
  artifact: com.azure:azure-cosmos:4.0.1
  parent: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext
  langs:
  - java
  name: DistinctDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, DistinctQueryType distinctQueryType, String previousHash)
  nameWithType: DistinctDocumentQueryExecutionContext<T>.DistinctDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, DistinctQueryType distinctQueryType, String previousHash)
  fullName: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext<T>.DistinctDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, DistinctQueryType distinctQueryType, String previousHash)
  overload: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.DistinctDocumentQueryExecutionContext*
  type: Constructor
  package: com.azure.cosmos.implementation.query
  syntax:
    content: private DistinctDocumentQueryExecutionContext(IDocumentQueryExecutionComponent<T> component, DistinctQueryType distinctQueryType, String previousHash)
    parameters:
    - id: component
      type: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>
    - id: distinctQueryType
      type: com.azure.cosmos.implementation.query.DistinctQueryType
    - id: previousHash
      type: java.lang.String
- uid: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.drainAsync(int)
  id: drainAsync(int)
  artifact: com.azure:azure-cosmos:4.0.1
  parent: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext
  langs:
  - java
  name: drainAsync(int maxPageSize)
  nameWithType: DistinctDocumentQueryExecutionContext<T>.drainAsync(int maxPageSize)
  fullName: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext<T>.drainAsync(int maxPageSize)
  overload: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.drainAsync*
  type: Method
  package: com.azure.cosmos.implementation.query
  syntax:
    content: public Flux<FeedResponse<T>> drainAsync(int maxPageSize)
    parameters:
    - id: maxPageSize
      type: int
    return:
      type: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
references:
- uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>
  spec.java:
  - uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
    name: IDocumentQueryExecutionComponent
    fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DistinctQueryType
  name: DistinctQueryType
  nameWithType: DistinctQueryType
  fullName: com.azure.cosmos.implementation.query.DistinctQueryType
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.DistinctDocumentQueryExecutionContext*
  name: DistinctDocumentQueryExecutionContext
  nameWithType: DistinctDocumentQueryExecutionContext<T>.DistinctDocumentQueryExecutionContext
  fullName: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext<T>.DistinctDocumentQueryExecutionContext
  package: com.azure.cosmos.implementation.query
- uid: java.util.function.Function<java.lang.String,reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>>
  spec.java:
  - uid: java.util.function.Function
    name: Function
    fullName: java.util.function.Function
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
    name: IDocumentQueryExecutionComponent
    fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: reactor.core.publisher.Flux<com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
    name: IDocumentQueryExecutionComponent
    fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.createAsync*
  name: <T>createAsync
  nameWithType: DistinctDocumentQueryExecutionContext<T>.<T>createAsync
  fullName: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext<T>.<T>createAsync
  package: com.azure.cosmos.implementation.query
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: reactor.core.publisher.Flux<com.azure.cosmos.models.FeedResponse<T>>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: com.azure.cosmos.models.FeedResponse
    name: FeedResponse
    fullName: com.azure.cosmos.models.FeedResponse
  - name: <
    fullName: <
  - uid: T
    name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext.drainAsync*
  name: drainAsync
  nameWithType: DistinctDocumentQueryExecutionContext<T>.drainAsync
  fullName: com.azure.cosmos.implementation.query.DistinctDocumentQueryExecutionContext<T>.drainAsync
  package: com.azure.cosmos.implementation.query
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
  name: IDocumentQueryExecutionComponent
  nameWithType: IDocumentQueryExecutionComponent
  fullName: com.azure.cosmos.implementation.query.IDocumentQueryExecutionComponent
- uid: java.lang.String,reactor.core.publisher.Flux
  name: String,Flux
  nameWithType: String,Flux
  fullName: java.lang.String,reactor.core.publisher.Flux
- uid: java.util.function.Function
  name: Function
  nameWithType: Function
  fullName: java.util.function.Function
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: com.azure.cosmos.models.FeedResponse
  name: FeedResponse
  nameWithType: FeedResponse
  fullName: com.azure.cosmos.models.FeedResponse
