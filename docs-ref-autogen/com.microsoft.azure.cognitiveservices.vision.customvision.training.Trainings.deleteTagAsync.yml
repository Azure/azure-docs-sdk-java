### YamlMime:JavaMember
nameWithType: Trainings.deleteTagAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync(UUID projectId, UUID tagId)
  name: deleteTagAsync(UUID projectId, UUID tagId)
  nameWithType: Trainings.deleteTagAsync(UUID projectId, UUID tagId)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the tag to be deleted. </p>
    name: tagId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>a representation of the deferred computation of this call if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Delete a tag from the project.</p>

    <p></p>
  syntax: public Observable<Void> deleteTagAsync(UUID projectId, UUID tagId)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync(UUID,UUID)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.deleteTagAsync
name: deleteTagAsync(UUID projectId, UUID tagId)
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
