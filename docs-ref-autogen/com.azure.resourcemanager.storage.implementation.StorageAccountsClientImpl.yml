### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  id: StorageAccountsClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation
  children:
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailoverAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRangesAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailability(java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityAsync(java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list()
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list(com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSas(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAsync()
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeys(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSas(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKey(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeys(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  langs:
  - java
  name: StorageAccountsClientImpl
  nameWithType: StorageAccountsClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  type: Class
  package: com.azure.resourcemanager.storage.implementation
  summary: An instance of this class provides access to all the operations defined in StorageAccountsClient.
  syntax:
    content: public final class StorageAccountsClientImpl implements InnerSupportsGet<StorageAccountInner>, InnerSupportsListing<StorageAccountInner>, InnerSupportsDelete<Void>, StorageAccountsClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  - com.azure.resourcemanager.storage.fluent.StorageAccountsClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.StorageAccountsClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  id: StorageAccountsClientImpl(com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: StorageAccountsClientImpl(StorageManagementClientImpl client)
  nameWithType: StorageAccountsClientImpl.StorageAccountsClientImpl(StorageManagementClientImpl client)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.StorageAccountsClientImpl(StorageManagementClientImpl client)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.StorageAccountsClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.storage.implementation
  summary: Initializes an instance of StorageAccountsClientImpl.
  syntax:
    content: " StorageAccountsClientImpl(StorageManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  id: beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  nameWithType: StorageAccountsClientImpl.beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
  syntax:
    content: public SyncPoller<PollResult<StorageAccountInner>,StorageAccountInner> beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
      description: The parameters used when creating a storage account.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>,com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters,com.azure.core.util.Context)
  id: beginCreate(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
  nameWithType: StorageAccountsClientImpl.beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
  syntax:
    content: public SyncPoller<PollResult<StorageAccountInner>,StorageAccountInner> beginCreate(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
      description: The parameters used when creating a storage account.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>,com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  id: beginCreateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginCreateAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  nameWithType: StorageAccountsClientImpl.beginCreateAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreateAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreateAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
  syntax:
    content: public PollerFlux<PollResult<StorageAccountInner>,StorageAccountInner> beginCreateAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
      description: The parameters used when creating a storage account.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>,com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover(java.lang.String,java.lang.String)
  id: beginFailover(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginFailover(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.beginFailover(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginFailover(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginFailover(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginFailover(String resourceGroupName, String accountName, Context context)
  nameWithType: StorageAccountsClientImpl.beginFailover(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginFailover(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailoverAsync(java.lang.String,java.lang.String)
  id: beginFailoverAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginFailoverAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.beginFailoverAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailoverAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailoverAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginFailoverAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  id: beginRestoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  nameWithType: StorageAccountsClientImpl.beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Restore blobs in the specified blob ranges.
  syntax:
    content: public SyncPoller<PollResult<BlobRestoreStatusInner>,BlobRestoreStatusInner> beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: timeToRestore
      type: java.time.OffsetDateTime
      description: Restore blob to the specified time.
    - id: blobRanges
      type: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
      description: Blob ranges to restore.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>,com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>
      description: blob restore status.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>,com.azure.core.util.Context)
  id: beginRestoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
  nameWithType: StorageAccountsClientImpl.beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Restore blobs in the specified blob ranges.
  syntax:
    content: public SyncPoller<PollResult<BlobRestoreStatusInner>,BlobRestoreStatusInner> beginRestoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: timeToRestore
      type: java.time.OffsetDateTime
      description: Restore blob to the specified time.
    - id: blobRanges
      type: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
      description: Blob ranges to restore.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>,com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>
      description: blob restore status.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRangesAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  id: beginRestoreBlobRangesAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: beginRestoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  nameWithType: StorageAccountsClientImpl.beginRestoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRangesAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Restore blobs in the specified blob ranges.
  syntax:
    content: public PollerFlux<PollResult<BlobRestoreStatusInner>,BlobRestoreStatusInner> beginRestoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: timeToRestore
      type: java.time.OffsetDateTime
      description: Restore blob to the specified time.
    - id: blobRanges
      type: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
      description: Blob ranges to restore.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>,com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>
      description: blob restore status.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailability(java.lang.String)
  id: checkNameAvailability(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: checkNameAvailability(String name)
  nameWithType: StorageAccountsClientImpl.checkNameAvailability(String name)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailability(String name)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailability*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Checks that the storage account name is valid and is not already in use.
  syntax:
    content: public CheckNameAvailabilityResultInner checkNameAvailability(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The storage account name.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityAsync(java.lang.String)
  id: checkNameAvailabilityAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: checkNameAvailabilityAsync(String name)
  nameWithType: StorageAccountsClientImpl.checkNameAvailabilityAsync(String name)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityAsync(String name)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Checks that the storage account name is valid and is not already in use.
  syntax:
    content: public Mono<CheckNameAvailabilityResultInner> checkNameAvailabilityAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The storage account name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  id: checkNameAvailabilityWithResponse(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponse(String name, Context context)
  nameWithType: StorageAccountsClientImpl.checkNameAvailabilityWithResponse(String name, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponse(String name, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Checks that the storage account name is valid and is not already in use.
  syntax:
    content: public Response<CheckNameAvailabilityResultInner> checkNameAvailabilityWithResponse(String name, Context context)
    parameters:
    - id: name
      type: java.lang.String
      description: The storage account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync(java.lang.String)
  id: checkNameAvailabilityWithResponseAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: checkNameAvailabilityWithResponseAsync(String name)
  nameWithType: StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync(String name)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync(String name)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Checks that the storage account name is valid and is not already in use.
  syntax:
    content: public Mono<Response<CheckNameAvailabilityResultInner>> checkNameAvailabilityWithResponseAsync(String name)
    parameters:
    - id: name
      type: java.lang.String
      description: The storage account name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner>>
      description: the CheckNameAvailability operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  nameWithType: StorageAccountsClientImpl.create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
  syntax:
    content: public StorageAccountInner create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
      description: The parameters used when creating a storage account.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters,com.azure.core.util.Context)
  id: create(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
  nameWithType: StorageAccountsClientImpl.create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
  syntax:
    content: public StorageAccountInner create(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
      description: The parameters used when creating a storage account.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  id: createAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: createAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  nameWithType: StorageAccountsClientImpl.createAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
  syntax:
    content: public Mono<StorageAccountInner> createAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
      description: The parameters used when creating a storage account.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  id: createWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountCreateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: createWithResponseAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  nameWithType: StorageAccountsClientImpl.createWithResponseAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createWithResponseAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createWithResponseAsync(String resourceGroupName, String accountName, StorageAccountCreateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
      description: The parameters used when creating a storage account.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: delete(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.delete(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.delete(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.delete*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes a storage account in Microsoft Azure.
  syntax:
    content: public void delete(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.deleteAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes a storage account in Microsoft Azure.
  syntax:
    content: public Mono<Void> deleteAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String accountName, Context context)
  nameWithType: StorageAccountsClientImpl.deleteWithResponse(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponse(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes a storage account in Microsoft Azure.
  syntax:
    content: public Response<Void> deleteWithResponse(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.deleteWithResponseAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponseAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Deletes a storage account in Microsoft Azure.
  syntax:
    content: public Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover(java.lang.String,java.lang.String)
  id: failover(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: failover(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.failover(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.
  syntax:
    content: public void failover(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: failover(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: failover(String resourceGroupName, String accountName, Context context)
  nameWithType: StorageAccountsClientImpl.failover(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.
  syntax:
    content: public void failover(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverAsync(java.lang.String,java.lang.String)
  id: failoverAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: failoverAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.failoverAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.
  syntax:
    content: public Mono<Void> failoverAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverWithResponseAsync(java.lang.String,java.lang.String)
  id: failoverWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: failoverWithResponseAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.failoverWithResponseAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverWithResponseAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> failoverWithResponseAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.getByResourceGroup(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroup(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
  syntax:
    content: public StorageAccountInner getByResourceGroup(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.getByResourceGroupAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
  syntax:
    content: public Mono<StorageAccountInner> getByResourceGroupAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
  nameWithType: StorageAccountsClientImpl.getByResourceGroupAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
  syntax:
    content: public Mono<StorageAccountInner> getByResourceGroupAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: expand
      type: com.azure.resourcemanager.storage.models.StorageAccountExpand
      description: >-
        May be used to expand the properties within account's properties. By default, data is not included
             when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String accountName, StorageAccountExpand expand, Context context)
  nameWithType: StorageAccountsClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String accountName, StorageAccountExpand expand, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponse(String resourceGroupName, String accountName, StorageAccountExpand expand, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
  syntax:
    content: public Response<StorageAccountInner> getByResourceGroupWithResponse(String resourceGroupName, String accountName, StorageAccountExpand expand, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: expand
      type: com.azure.resourcemanager.storage.models.StorageAccountExpand
      description: >-
        May be used to expand the properties within account's properties. By default, data is not included
             when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountExpand)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
  nameWithType: StorageAccountsClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponseAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.
  syntax:
    content: public Mono<Response<StorageAccountInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String accountName, StorageAccountExpand expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: expand
      type: com.azure.resourcemanager.storage.models.StorageAccountExpand
      description: >-
        May be used to expand the properties within account's properties. By default, data is not included
             when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: list()
  nameWithType: StorageAccountsClientImpl.list()
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list()
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
  syntax:
    content: public PagedIterable<StorageAccountInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the response from the List Storage Accounts operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list(com.azure.core.util.Context)
  id: list(com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: list(Context context)
  nameWithType: StorageAccountsClientImpl.list(Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list(Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
  syntax:
    content: public PagedIterable<StorageAccountInner> list(Context context)
    parameters:
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the response from the List Storage Accounts operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSas(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  id: listAccountSas(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listAccountSas(String resourceGroupName, String accountName, AccountSasParameters parameters)
  nameWithType: StorageAccountsClientImpl.listAccountSas(String resourceGroupName, String accountName, AccountSasParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSas(String resourceGroupName, String accountName, AccountSasParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSas*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List SAS credentials of a storage account.
  syntax:
    content: public ListAccountSasResponseInner listAccountSas(String resourceGroupName, String accountName, AccountSasParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.AccountSasParameters
      description: The parameters to list SAS credentials of a storage account.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
      description: the List SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  id: listAccountSasAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listAccountSasAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
  nameWithType: StorageAccountsClientImpl.listAccountSasAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List SAS credentials of a storage account.
  syntax:
    content: public Mono<ListAccountSasResponseInner> listAccountSasAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.AccountSasParameters
      description: The parameters to list SAS credentials of a storage account.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner>
      description: the List SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters,com.azure.core.util.Context)
  id: listAccountSasWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listAccountSasWithResponse(String resourceGroupName, String accountName, AccountSasParameters parameters, Context context)
  nameWithType: StorageAccountsClientImpl.listAccountSasWithResponse(String resourceGroupName, String accountName, AccountSasParameters parameters, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponse(String resourceGroupName, String accountName, AccountSasParameters parameters, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List SAS credentials of a storage account.
  syntax:
    content: public Response<ListAccountSasResponseInner> listAccountSasWithResponse(String resourceGroupName, String accountName, AccountSasParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.AccountSasParameters
      description: The parameters to list SAS credentials of a storage account.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner>
      description: the List SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  id: listAccountSasWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.AccountSasParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listAccountSasWithResponseAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
  nameWithType: StorageAccountsClientImpl.listAccountSasWithResponseAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponseAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List SAS credentials of a storage account.
  syntax:
    content: public Mono<Response<ListAccountSasResponseInner>> listAccountSasWithResponseAsync(String resourceGroupName, String accountName, AccountSasParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.AccountSasParameters
      description: The parameters to list SAS credentials of a storage account.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner>>
      description: the List SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listAsync()
  nameWithType: StorageAccountsClientImpl.listAsync()
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAsync()
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
  syntax:
    content: public PagedFlux<StorageAccountInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the response from the List Storage Accounts operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: StorageAccountsClientImpl.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
  syntax:
    content: public PagedIterable<StorageAccountInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the response from the List Storage Accounts operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: StorageAccountsClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
  syntax:
    content: public PagedIterable<StorageAccountInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the response from the List Storage Accounts operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: StorageAccountsClientImpl.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
  syntax:
    content: public PagedFlux<StorageAccountInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the response from the List Storage Accounts operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeys(java.lang.String,java.lang.String)
  id: listKeys(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listKeys(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.listKeys(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeys(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeys*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
  syntax:
    content: public StorageAccountListKeysResultInner listKeys(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync(java.lang.String,java.lang.String)
  id: listKeysAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listKeysAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.listKeysAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
  syntax:
    content: public Mono<StorageAccountListKeysResultInner> listKeysAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand)
  id: listKeysAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listKeysAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
  nameWithType: StorageAccountsClientImpl.listKeysAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
  syntax:
    content: public Mono<StorageAccountListKeysResultInner> listKeysAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: expand
      type: com.azure.resourcemanager.storage.models.ListKeyExpand
      description: Specifies type of the key to be listed. Possible value is kerb.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand,com.azure.core.util.Context)
  id: listKeysWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listKeysWithResponse(String resourceGroupName, String accountName, ListKeyExpand expand, Context context)
  nameWithType: StorageAccountsClientImpl.listKeysWithResponse(String resourceGroupName, String accountName, ListKeyExpand expand, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponse(String resourceGroupName, String accountName, ListKeyExpand expand, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
  syntax:
    content: public Response<StorageAccountListKeysResultInner> listKeysWithResponse(String resourceGroupName, String accountName, ListKeyExpand expand, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: expand
      type: com.azure.resourcemanager.storage.models.ListKeyExpand
      description: Specifies type of the key to be listed. Possible value is kerb.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand)
  id: listKeysWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ListKeyExpand)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listKeysWithResponseAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
  nameWithType: StorageAccountsClientImpl.listKeysWithResponseAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponseAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.
  syntax:
    content: public Mono<Response<StorageAccountListKeysResultInner>> listKeysWithResponseAsync(String resourceGroupName, String accountName, ListKeyExpand expand)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: expand
      type: com.azure.resourcemanager.storage.models.ListKeyExpand
      description: Specifies type of the key to be listed. Possible value is kerb.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>>
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSas(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  id: listServiceSas(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listServiceSas(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  nameWithType: StorageAccountsClientImpl.listServiceSas(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSas(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSas*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List service SAS credentials of a specific resource.
  syntax:
    content: public ListServiceSasResponseInner listServiceSas(String resourceGroupName, String accountName, ServiceSasParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.ServiceSasParameters
      description: The parameters to list service SAS credentials of a specific resource.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
      description: the List service SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  id: listServiceSasAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listServiceSasAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  nameWithType: StorageAccountsClientImpl.listServiceSasAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List service SAS credentials of a specific resource.
  syntax:
    content: public Mono<ListServiceSasResponseInner> listServiceSasAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.ServiceSasParameters
      description: The parameters to list service SAS credentials of a specific resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner>
      description: the List service SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters,com.azure.core.util.Context)
  id: listServiceSasWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listServiceSasWithResponse(String resourceGroupName, String accountName, ServiceSasParameters parameters, Context context)
  nameWithType: StorageAccountsClientImpl.listServiceSasWithResponse(String resourceGroupName, String accountName, ServiceSasParameters parameters, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponse(String resourceGroupName, String accountName, ServiceSasParameters parameters, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List service SAS credentials of a specific resource.
  syntax:
    content: public Response<ListServiceSasResponseInner> listServiceSasWithResponse(String resourceGroupName, String accountName, ServiceSasParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.ServiceSasParameters
      description: The parameters to list service SAS credentials of a specific resource.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner>
      description: the List service SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  id: listServiceSasWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.ServiceSasParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: listServiceSasWithResponseAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  nameWithType: StorageAccountsClientImpl.listServiceSasWithResponseAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponseAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: List service SAS credentials of a specific resource.
  syntax:
    content: public Mono<Response<ListServiceSasResponseInner>> listServiceSasWithResponseAsync(String resourceGroupName, String accountName, ServiceSasParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.ServiceSasParameters
      description: The parameters to list service SAS credentials of a specific resource.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner>>
      description: the List service SAS credentials operation response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKey(java.lang.String,java.lang.String,java.lang.String)
  id: regenerateKey(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: regenerateKey(String resourceGroupName, String accountName, String keyName)
  nameWithType: StorageAccountsClientImpl.regenerateKey(String resourceGroupName, String accountName, String keyName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKey(String resourceGroupName, String accountName, String keyName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKey*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Regenerates one of the access keys or Kerberos keys for the specified storage account.
  syntax:
    content: public StorageAccountListKeysResultInner regenerateKey(String resourceGroupName, String accountName, String keyName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: keyName
      type: java.lang.String
      description: >-
        The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1,
             kerb2.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyAsync(java.lang.String,java.lang.String,java.lang.String)
  id: regenerateKeyAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: regenerateKeyAsync(String resourceGroupName, String accountName, String keyName)
  nameWithType: StorageAccountsClientImpl.regenerateKeyAsync(String resourceGroupName, String accountName, String keyName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyAsync(String resourceGroupName, String accountName, String keyName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Regenerates one of the access keys or Kerberos keys for the specified storage account.
  syntax:
    content: public Mono<StorageAccountListKeysResultInner> regenerateKeyAsync(String resourceGroupName, String accountName, String keyName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: keyName
      type: java.lang.String
      description: >-
        The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1,
             kerb2.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: regenerateKeyWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: regenerateKeyWithResponse(String resourceGroupName, String accountName, String keyName, Context context)
  nameWithType: StorageAccountsClientImpl.regenerateKeyWithResponse(String resourceGroupName, String accountName, String keyName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponse(String resourceGroupName, String accountName, String keyName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Regenerates one of the access keys or Kerberos keys for the specified storage account.
  syntax:
    content: public Response<StorageAccountListKeysResultInner> regenerateKeyWithResponse(String resourceGroupName, String accountName, String keyName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: keyName
      type: java.lang.String
      description: >-
        The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1,
             kerb2.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: regenerateKeyWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: regenerateKeyWithResponseAsync(String resourceGroupName, String accountName, String keyName)
  nameWithType: StorageAccountsClientImpl.regenerateKeyWithResponseAsync(String resourceGroupName, String accountName, String keyName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponseAsync(String resourceGroupName, String accountName, String keyName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Regenerates one of the access keys or Kerberos keys for the specified storage account.
  syntax:
    content: public Mono<Response<StorageAccountListKeysResultInner>> regenerateKeyWithResponseAsync(String resourceGroupName, String accountName, String keyName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: keyName
      type: java.lang.String
      description: >-
        The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1,
             kerb2.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>>
      description: the response from the ListKeys operation.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  id: restoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  nameWithType: StorageAccountsClientImpl.restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Restore blobs in the specified blob ranges.
  syntax:
    content: public BlobRestoreStatusInner restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: timeToRestore
      type: java.time.OffsetDateTime
      description: Restore blob to the specified time.
    - id: blobRanges
      type: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
      description: Blob ranges to restore.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
      description: blob restore status.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>,com.azure.core.util.Context)
  id: restoreBlobRanges(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
  nameWithType: StorageAccountsClientImpl.restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Restore blobs in the specified blob ranges.
  syntax:
    content: public BlobRestoreStatusInner restoreBlobRanges(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: timeToRestore
      type: java.time.OffsetDateTime
      description: Restore blob to the specified time.
    - id: blobRanges
      type: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
      description: Blob ranges to restore.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
      description: blob restore status.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  id: restoreBlobRangesAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: restoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  nameWithType: StorageAccountsClientImpl.restoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Restore blobs in the specified blob ranges.
  syntax:
    content: public Mono<BlobRestoreStatusInner> restoreBlobRangesAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: timeToRestore
      type: java.time.OffsetDateTime
      description: Restore blob to the specified time.
    - id: blobRanges
      type: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
      description: Blob ranges to restore.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>
      description: blob restore status.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  id: restoreBlobRangesWithResponseAsync(java.lang.String,java.lang.String,java.time.OffsetDateTime,java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: restoreBlobRangesWithResponseAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  nameWithType: StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Restore blobs in the specified blob ranges.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> restoreBlobRangesWithResponseAsync(String resourceGroupName, String accountName, OffsetDateTime timeToRestore, List<BlobRestoreRange> blobRanges)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: timeToRestore
      type: java.time.OffsetDateTime
      description: Restore blob to the specified time.
    - id: blobRanges
      type: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
      description: Blob ranges to restore.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: blob restore status.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeys(java.lang.String,java.lang.String)
  id: revokeUserDelegationKeys(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: revokeUserDelegationKeys(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeys(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeys(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeys*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Revoke user delegation keys.
  syntax:
    content: public void revokeUserDelegationKeys(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysAsync(java.lang.String,java.lang.String)
  id: revokeUserDelegationKeysAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: revokeUserDelegationKeysAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeysAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Revoke user delegation keys.
  syntax:
    content: public Mono<Void> revokeUserDelegationKeysAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: revokeUserDelegationKeysWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: revokeUserDelegationKeysWithResponse(String resourceGroupName, String accountName, Context context)
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Revoke user delegation keys.
  syntax:
    content: public Response<Void> revokeUserDelegationKeysWithResponse(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync(java.lang.String,java.lang.String)
  id: revokeUserDelegationKeysWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: revokeUserDelegationKeysWithResponseAsync(String resourceGroupName, String accountName)
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: Revoke user delegation keys.
  syntax:
    content: public Mono<Response<Void>> revokeUserDelegationKeysWithResponseAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.update(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: update(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  nameWithType: StorageAccountsClientImpl.update(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.update(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.update*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
  syntax:
    content: public StorageAccountInner update(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters
      description: The parameters that can be provided when updating the storage account properties.
    return:
      type: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: updateAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  nameWithType: StorageAccountsClientImpl.updateAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
  syntax:
    content: public Mono<StorageAccountInner> updateAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters
      description: The parameters that can be provided when updating the storage account properties.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: updateWithResponse(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters, Context context)
  nameWithType: StorageAccountsClientImpl.updateWithResponse(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters, Context context)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponse(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters, Context context)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
  syntax:
    content: public Response<StorageAccountInner> updateWithResponse(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters
      description: The parameters that can be provided when updating the storage account properties.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
      description: the storage account.
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.0.0
  parent: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  nameWithType: StorageAccountsClientImpl.updateWithResponseAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponseAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
  overload: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.storage.implementation
  summary: The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.
  syntax:
    content: public Mono<Response<StorageAccountInner>> updateWithResponseAsync(String resourceGroupName, String accountName, StorageAccountUpdateParameters parameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: >-
        The name of the resource group within the user's subscription. The name is case
             insensitive.
    - id: accountName
      type: java.lang.String
      description: >-
        The name of the storage account within the specified resource group. Storage account names
             must be between 3 and 24 characters in length and use numbers and lower-case letters only.
    - id: parameters
      type: com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters
      description: The parameters that can be provided when updating the storage account properties.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>>
      description: the storage account.
references:
- uid: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
  name: StorageManagementClientImpl
  nameWithType: StorageManagementClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.StorageManagementClientImpl
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.StorageAccountsClientImpl*
  name: StorageAccountsClientImpl
  nameWithType: StorageAccountsClientImpl.StorageAccountsClientImpl
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.StorageAccountsClientImpl
  package: com.azure.resourcemanager.storage.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync*
  name: checkNameAvailabilityWithResponseAsync
  nameWithType: StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityAsync*
  name: checkNameAvailabilityAsync
  nameWithType: StorageAccountsClientImpl.checkNameAvailabilityAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
  name: CheckNameAvailabilityResultInner
  nameWithType: CheckNameAvailabilityResultInner
  fullName: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailability*
  name: checkNameAvailability
  nameWithType: StorageAccountsClientImpl.checkNameAvailability
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailability
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
    name: CheckNameAvailabilityResultInner
    fullName: com.azure.resourcemanager.storage.fluent.models.CheckNameAvailabilityResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponse*
  name: checkNameAvailabilityWithResponse
  nameWithType: StorageAccountsClientImpl.checkNameAvailabilityWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.checkNameAvailabilityWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
  name: StorageAccountCreateParameters
  nameWithType: StorageAccountCreateParameters
  fullName: com.azure.resourcemanager.storage.models.StorageAccountCreateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createWithResponseAsync*
  name: createWithResponseAsync
  nameWithType: StorageAccountsClientImpl.createWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>,com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreateAsync*
  name: beginCreateAsync
  nameWithType: StorageAccountsClientImpl.beginCreateAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreateAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>,com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate*
  name: beginCreate
  nameWithType: StorageAccountsClientImpl.beginCreate
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginCreate
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createAsync*
  name: createAsync
  nameWithType: StorageAccountsClientImpl.createAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.createAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  name: StorageAccountInner
  nameWithType: StorageAccountInner
  fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create*
  name: create
  nameWithType: StorageAccountsClientImpl.create
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.create
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: StorageAccountsClientImpl.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteAsync*
  name: deleteAsync
  nameWithType: StorageAccountsClientImpl.deleteAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.delete*
  name: delete
  nameWithType: StorageAccountsClientImpl.delete
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.delete
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: StorageAccountsClientImpl.deleteWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.deleteWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.models.StorageAccountExpand
  name: StorageAccountExpand
  nameWithType: StorageAccountExpand
  fullName: com.azure.resourcemanager.storage.models.StorageAccountExpand
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: StorageAccountsClientImpl.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: StorageAccountsClientImpl.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: StorageAccountsClientImpl.getByResourceGroup
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroup
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: StorageAccountsClientImpl.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters
  name: StorageAccountUpdateParameters
  nameWithType: StorageAccountUpdateParameters
  fullName: com.azure.resourcemanager.storage.models.StorageAccountUpdateParameters
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: StorageAccountsClientImpl.updateWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateAsync*
  name: updateAsync
  nameWithType: StorageAccountsClientImpl.updateAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.update*
  name: update
  nameWithType: StorageAccountsClientImpl.update
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.update
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponse*
  name: updateWithResponse
  nameWithType: StorageAccountsClientImpl.updateWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.updateWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAsync*
  name: listAsync
  nameWithType: StorageAccountsClientImpl.listAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
    name: StorageAccountInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list*
  name: list
  nameWithType: StorageAccountsClientImpl.list
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.list
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: StorageAccountsClientImpl.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroupAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: StorageAccountsClientImpl.listByResourceGroup
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listByResourceGroup
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.models.ListKeyExpand
  name: ListKeyExpand
  nameWithType: ListKeyExpand
  fullName: com.azure.resourcemanager.storage.models.ListKeyExpand
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
    name: StorageAccountListKeysResultInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponseAsync*
  name: listKeysWithResponseAsync
  nameWithType: StorageAccountsClientImpl.listKeysWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
    name: StorageAccountListKeysResultInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync*
  name: listKeysAsync
  nameWithType: StorageAccountsClientImpl.listKeysAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
  name: StorageAccountListKeysResultInner
  nameWithType: StorageAccountListKeysResultInner
  fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeys*
  name: listKeys
  nameWithType: StorageAccountsClientImpl.listKeys
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeys
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
    name: StorageAccountListKeysResultInner
    fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountListKeysResultInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponse*
  name: listKeysWithResponse
  nameWithType: StorageAccountsClientImpl.listKeysWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listKeysWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponseAsync*
  name: regenerateKeyWithResponseAsync
  nameWithType: StorageAccountsClientImpl.regenerateKeyWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyAsync*
  name: regenerateKeyAsync
  nameWithType: StorageAccountsClientImpl.regenerateKeyAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKey*
  name: regenerateKey
  nameWithType: StorageAccountsClientImpl.regenerateKey
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKey
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponse*
  name: regenerateKeyWithResponse
  nameWithType: StorageAccountsClientImpl.regenerateKeyWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.regenerateKeyWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.models.AccountSasParameters
  name: AccountSasParameters
  nameWithType: AccountSasParameters
  fullName: com.azure.resourcemanager.storage.models.AccountSasParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
    name: ListAccountSasResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponseAsync*
  name: listAccountSasWithResponseAsync
  nameWithType: StorageAccountsClientImpl.listAccountSasWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
    name: ListAccountSasResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasAsync*
  name: listAccountSasAsync
  nameWithType: StorageAccountsClientImpl.listAccountSasAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
  name: ListAccountSasResponseInner
  nameWithType: ListAccountSasResponseInner
  fullName: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSas*
  name: listAccountSas
  nameWithType: StorageAccountsClientImpl.listAccountSas
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSas
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
    name: ListAccountSasResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListAccountSasResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponse*
  name: listAccountSasWithResponse
  nameWithType: StorageAccountsClientImpl.listAccountSasWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listAccountSasWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.models.ServiceSasParameters
  name: ServiceSasParameters
  nameWithType: ServiceSasParameters
  fullName: com.azure.resourcemanager.storage.models.ServiceSasParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
    name: ListServiceSasResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponseAsync*
  name: listServiceSasWithResponseAsync
  nameWithType: StorageAccountsClientImpl.listServiceSasWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
    name: ListServiceSasResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasAsync*
  name: listServiceSasAsync
  nameWithType: StorageAccountsClientImpl.listServiceSasAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
  name: ListServiceSasResponseInner
  nameWithType: ListServiceSasResponseInner
  fullName: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSas*
  name: listServiceSas
  nameWithType: StorageAccountsClientImpl.listServiceSas
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSas
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
    name: ListServiceSasResponseInner
    fullName: com.azure.resourcemanager.storage.fluent.models.ListServiceSasResponseInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponse*
  name: listServiceSasWithResponse
  nameWithType: StorageAccountsClientImpl.listServiceSasWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.listServiceSasWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverWithResponseAsync*
  name: failoverWithResponseAsync
  nameWithType: StorageAccountsClientImpl.failoverWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailoverAsync*
  name: beginFailoverAsync
  nameWithType: StorageAccountsClientImpl.beginFailoverAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailoverAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover*
  name: beginFailover
  nameWithType: StorageAccountsClientImpl.beginFailover
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginFailover
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverAsync*
  name: failoverAsync
  nameWithType: StorageAccountsClientImpl.failoverAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failoverAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover*
  name: failover
  nameWithType: StorageAccountsClientImpl.failover
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.failover
  package: com.azure.resourcemanager.storage.implementation
- uid: java.time.OffsetDateTime
  spec.java:
  - uid: java.time.OffsetDateTime
    name: OffsetDateTime
    fullName: java.time.OffsetDateTime
- uid: java.util.List<com.azure.resourcemanager.storage.models.BlobRestoreRange>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.models.BlobRestoreRange
    name: BlobRestoreRange
    fullName: com.azure.resourcemanager.storage.models.BlobRestoreRange
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync*
  name: restoreBlobRangesWithResponseAsync
  nameWithType: StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>,com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
    name: BlobRestoreStatusInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
    name: BlobRestoreStatusInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRangesAsync*
  name: beginRestoreBlobRangesAsync
  nameWithType: StorageAccountsClientImpl.beginRestoreBlobRangesAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRangesAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>,com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
    name: BlobRestoreStatusInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
    name: BlobRestoreStatusInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges*
  name: beginRestoreBlobRanges
  nameWithType: StorageAccountsClientImpl.beginRestoreBlobRanges
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.beginRestoreBlobRanges
  package: com.azure.resourcemanager.storage.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
    name: BlobRestoreStatusInner
    fullName: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesAsync*
  name: restoreBlobRangesAsync
  nameWithType: StorageAccountsClientImpl.restoreBlobRangesAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRangesAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
  name: BlobRestoreStatusInner
  nameWithType: BlobRestoreStatusInner
  fullName: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges*
  name: restoreBlobRanges
  nameWithType: StorageAccountsClientImpl.restoreBlobRanges
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.restoreBlobRanges
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync*
  name: revokeUserDelegationKeysWithResponseAsync
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponseAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysAsync*
  name: revokeUserDelegationKeysAsync
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeysAsync
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysAsync
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeys*
  name: revokeUserDelegationKeys
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeys
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeys
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse*
  name: revokeUserDelegationKeysWithResponse
  nameWithType: StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse
  fullName: com.azure.resourcemanager.storage.implementation.StorageAccountsClientImpl.revokeUserDelegationKeysWithResponse
  package: com.azure.resourcemanager.storage.implementation
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  name: InnerSupportsListing<StorageAccountInner>
  nameWithType: InnerSupportsListing<StorageAccountInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.storage.fluent.StorageAccountsClient
  name: StorageAccountsClient
  nameWithType: StorageAccountsClient
  fullName: com.azure.resourcemanager.storage.fluent.StorageAccountsClient
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
  name: InnerSupportsGet<StorageAccountInner>
  nameWithType: InnerSupportsGet<StorageAccountInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>,com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
  name: StorageAccountInner>,StorageAccountInner
  nameWithType: StorageAccountInner>,StorageAccountInner
  fullName: com.azure.resourcemanager.storage.fluent.models.StorageAccountInner>,com.azure.resourcemanager.storage.fluent.models.StorageAccountInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.storage.models.BlobRestoreRange
  name: BlobRestoreRange
  nameWithType: BlobRestoreRange
  fullName: com.azure.resourcemanager.storage.models.BlobRestoreRange
- uid: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>,com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
  name: BlobRestoreStatusInner>,BlobRestoreStatusInner
  nameWithType: BlobRestoreStatusInner>,BlobRestoreStatusInner
  fullName: com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner>,com.azure.resourcemanager.storage.fluent.models.BlobRestoreStatusInner
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
