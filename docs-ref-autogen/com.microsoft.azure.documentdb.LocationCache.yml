### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.documentdb.LocationCache"
  id: "LocationCache"
  parent: "com.microsoft.azure.documentdb"
  children:
  - "com.microsoft.azure.documentdb.LocationCache.CanRefreshInBackground"
  - "com.microsoft.azure.documentdb.LocationCache.LocationCache(java.util.Collection<java.lang.String>,java.net.URI,boolean,boolean,long)"
  - "com.microsoft.azure.documentdb.LocationCache.UpdatableList"
  - "com.microsoft.azure.documentdb.LocationCache.canUseMultipleWriteLocations(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  - "com.microsoft.azure.documentdb.LocationCache.getEndpointByLocation(java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,com.microsoft.azure.documentdb.LocationCache.UpdatableList)"
  - "com.microsoft.azure.documentdb.LocationCache.getOrderedReadEndpoints()"
  - "com.microsoft.azure.documentdb.LocationCache.getOrderedWriteEndpoints()"
  - "com.microsoft.azure.documentdb.LocationCache.getPreferredLocations()"
  - "com.microsoft.azure.documentdb.LocationCache.getReadEndpoint()"
  - "com.microsoft.azure.documentdb.LocationCache.getReadEndpoints()"
  - "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoint()"
  - "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoints()"
  - "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForRead(java.net.URI)"
  - "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForWrite(java.net.URI)"
  - "com.microsoft.azure.documentdb.LocationCache.onDatabaseAccountRead(com.microsoft.azure.documentdb.DatabaseAccount)"
  - "com.microsoft.azure.documentdb.LocationCache.resolveServiceEndpoint(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  - "com.microsoft.azure.documentdb.LocationCache.shouldRefreshEndpoints(com.microsoft.azure.documentdb.LocationCache.CanRefreshInBackground)"
  - "com.microsoft.azure.documentdb.LocationCache.updateLocationCache(java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,java.lang.Boolean)"
  langs:
  - "java"
  name: "LocationCache"
  nameWithType: "LocationCache"
  fullName: "com.microsoft.azure.documentdb.LocationCache"
  type: "Class"
  package: "com.microsoft.azure.documentdb"
  summary: "Implements the abstraction to resolve target location for geo-replicated DatabaseAccount with multiple writable and readable locations."
  syntax:
    content: "public class LocationCache"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.documentdb.LocationCache.LocationCache(java.util.Collection<java.lang.String>,java.net.URI,boolean,boolean,long)"
  id: "LocationCache(java.util.Collection<java.lang.String>,java.net.URI,boolean,boolean,long)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "LocationCache(Collection<String> preferredLocations, URI defaultEndpoint, boolean enableEndpointDiscovery, boolean useMultipleWriteLocations, long backgroundRefreshLocationTimeIntervalInMS)"
  nameWithType: "LocationCache.LocationCache(Collection<String> preferredLocations, URI defaultEndpoint, boolean enableEndpointDiscovery, boolean useMultipleWriteLocations, long backgroundRefreshLocationTimeIntervalInMS)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.LocationCache(Collection<String> preferredLocations, URI defaultEndpoint, boolean enableEndpointDiscovery, boolean useMultipleWriteLocations, long backgroundRefreshLocationTimeIntervalInMS)"
  overload: "com.microsoft.azure.documentdb.LocationCache.LocationCache*"
  type: "Constructor"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " LocationCache(Collection<String> preferredLocations, URI defaultEndpoint, boolean enableEndpointDiscovery, boolean useMultipleWriteLocations, long backgroundRefreshLocationTimeIntervalInMS)"
    parameters:
    - id: "preferredLocations"
      type: "java.util.Collection<java.lang.String>"
    - id: "defaultEndpoint"
      type: "java.net.URI"
    - id: "enableEndpointDiscovery"
      type: "boolean"
    - id: "useMultipleWriteLocations"
      type: "boolean"
    - id: "backgroundRefreshLocationTimeIntervalInMS"
      type: "long"
- uid: "com.microsoft.azure.documentdb.LocationCache.canUseMultipleWriteLocations(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  id: "canUseMultipleWriteLocations(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "canUseMultipleWriteLocations(DocumentServiceRequest request)"
  nameWithType: "LocationCache.canUseMultipleWriteLocations(DocumentServiceRequest request)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.canUseMultipleWriteLocations(DocumentServiceRequest request)"
  overload: "com.microsoft.azure.documentdb.LocationCache.canUseMultipleWriteLocations*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: "public boolean canUseMultipleWriteLocations(DocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.documentdb.LocationCache.getEndpointByLocation(java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,com.microsoft.azure.documentdb.LocationCache.UpdatableList)"
  id: "getEndpointByLocation(java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,com.microsoft.azure.documentdb.LocationCache.UpdatableList)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getEndpointByLocation(Iterable<DatabaseAccountLocation> locations, LocationCache.UpdatableList orderedLocations)"
  nameWithType: "LocationCache.getEndpointByLocation(Iterable<DatabaseAccountLocation> locations, LocationCache.UpdatableList orderedLocations)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getEndpointByLocation(Iterable<DatabaseAccountLocation> locations, LocationCache.UpdatableList orderedLocations)"
  overload: "com.microsoft.azure.documentdb.LocationCache.getEndpointByLocation*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " Map<String,URI> getEndpointByLocation(Iterable<DatabaseAccountLocation> locations, LocationCache.UpdatableList orderedLocations)"
    parameters:
    - id: "locations"
      type: "java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>"
    - id: "orderedLocations"
      type: "com.microsoft.azure.documentdb.LocationCache.UpdatableList"
    return:
      type: "java.util.Map<java.lang.String,java.net.URI>"
- uid: "com.microsoft.azure.documentdb.LocationCache.getOrderedReadEndpoints()"
  id: "getOrderedReadEndpoints()"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getOrderedReadEndpoints()"
  nameWithType: "LocationCache.getOrderedReadEndpoints()"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getOrderedReadEndpoints()"
  overload: "com.microsoft.azure.documentdb.LocationCache.getOrderedReadEndpoints*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " List<String> getOrderedReadEndpoints()"
    return:
      type: "java.util.List<java.lang.String>"
- uid: "com.microsoft.azure.documentdb.LocationCache.getOrderedWriteEndpoints()"
  id: "getOrderedWriteEndpoints()"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getOrderedWriteEndpoints()"
  nameWithType: "LocationCache.getOrderedWriteEndpoints()"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getOrderedWriteEndpoints()"
  overload: "com.microsoft.azure.documentdb.LocationCache.getOrderedWriteEndpoints*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " List<String> getOrderedWriteEndpoints()"
    return:
      type: "java.util.List<java.lang.String>"
- uid: "com.microsoft.azure.documentdb.LocationCache.getPreferredLocations()"
  id: "getPreferredLocations()"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getPreferredLocations()"
  nameWithType: "LocationCache.getPreferredLocations()"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getPreferredLocations()"
  overload: "com.microsoft.azure.documentdb.LocationCache.getPreferredLocations*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " Collection<String> getPreferredLocations()"
    return:
      type: "java.util.Collection<java.lang.String>"
- uid: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoint()"
  id: "getReadEndpoint()"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getReadEndpoint()"
  nameWithType: "LocationCache.getReadEndpoint()"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoint()"
  overload: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoint*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " URI getReadEndpoint()"
    return:
      type: "java.net.URI"
- uid: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoints()"
  id: "getReadEndpoints()"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getReadEndpoints()"
  nameWithType: "LocationCache.getReadEndpoints()"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoints()"
  overload: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoints*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  summary: "Gets list of read endpoints ordered by 1. Preferred location 2. Endpoint availability"
  syntax:
    content: " List<URI> getReadEndpoints()"
    return:
      type: "java.util.List<java.net.URI>"
- uid: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoint()"
  id: "getWriteEndpoint()"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getWriteEndpoint()"
  nameWithType: "LocationCache.getWriteEndpoint()"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoint()"
  overload: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoint*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " URI getWriteEndpoint()"
    return:
      type: "java.net.URI"
- uid: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoints()"
  id: "getWriteEndpoints()"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "getWriteEndpoints()"
  nameWithType: "LocationCache.getWriteEndpoints()"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoints()"
  overload: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoints*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  summary: "Gets list of write endpoints ordered by 1. Preferred location 2. Endpoint availability"
  syntax:
    content: " List<URI> getWriteEndpoints()"
    return:
      type: "java.util.List<java.net.URI>"
- uid: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForRead(java.net.URI)"
  id: "markCurrentLocationUnavailableForRead(java.net.URI)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "markCurrentLocationUnavailableForRead(URI endpoint)"
  nameWithType: "LocationCache.markCurrentLocationUnavailableForRead(URI endpoint)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForRead(URI endpoint)"
  overload: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForRead*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  summary: "Marks the current location unavailable for read"
  syntax:
    content: " void markCurrentLocationUnavailableForRead(URI endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.net.URI"
- uid: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForWrite(java.net.URI)"
  id: "markCurrentLocationUnavailableForWrite(java.net.URI)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "markCurrentLocationUnavailableForWrite(URI endpoint)"
  nameWithType: "LocationCache.markCurrentLocationUnavailableForWrite(URI endpoint)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForWrite(URI endpoint)"
  overload: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForWrite*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  summary: "Marks the current location unavailable for read"
  syntax:
    content: " void markCurrentLocationUnavailableForWrite(URI endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.net.URI"
- uid: "com.microsoft.azure.documentdb.LocationCache.onDatabaseAccountRead(com.microsoft.azure.documentdb.DatabaseAccount)"
  id: "onDatabaseAccountRead(com.microsoft.azure.documentdb.DatabaseAccount)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "onDatabaseAccountRead(DatabaseAccount databaseAccount)"
  nameWithType: "LocationCache.onDatabaseAccountRead(DatabaseAccount databaseAccount)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.onDatabaseAccountRead(DatabaseAccount databaseAccount)"
  overload: "com.microsoft.azure.documentdb.LocationCache.onDatabaseAccountRead*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  summary: "Invoked when <xref uid=\"com.microsoft.azure.documentdb.DatabaseAccount\" data-throw-if-not-resolved=\"false\">DatabaseAccount</xref> is read"
  syntax:
    content: "public void onDatabaseAccountRead(DatabaseAccount databaseAccount)"
    parameters:
    - id: "databaseAccount"
      type: "com.microsoft.azure.documentdb.DatabaseAccount"
      description: "Read DatabaseAccount"
- uid: "com.microsoft.azure.documentdb.LocationCache.resolveServiceEndpoint(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  id: "resolveServiceEndpoint(com.microsoft.azure.documentdb.internal.DocumentServiceRequest)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "resolveServiceEndpoint(DocumentServiceRequest request)"
  nameWithType: "LocationCache.resolveServiceEndpoint(DocumentServiceRequest request)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.resolveServiceEndpoint(DocumentServiceRequest request)"
  overload: "com.microsoft.azure.documentdb.LocationCache.resolveServiceEndpoint*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  summary: "Resolves request to service endpoint. 1. If this is a write request (a) If UseMultipleWriteLocations = true (i) For document writes, resolve to most preferred and available write endpoint. Once the endpoint is marked unavailable, it is moved to the end of available write endpoint. Current request will be retried on next preferred available write endpoint. (ii) For all other resources, always resolve to first/second (regardless of preferred locations) write endpoint in <xref uid=\"com.microsoft.azure.documentdb.DatabaseAccount.getWritableLocations()\" data-throw-if-not-resolved=\"false\">DatabaseAccount#getWritableLocations()</xref>. Endpoint of first write location in <xref uid=\"com.microsoft.azure.documentdb.DatabaseAccount.getWritableLocations()\" data-throw-if-not-resolved=\"false\">DatabaseAccount#getWritableLocations()</xref> is the only endpoint that supports write operation on all resource types (except during that region's failover). Only during manual failover, client would retry write on second write location in <xref uid=\"com.microsoft.azure.documentdb.DatabaseAccount.getWritableLocations()\" data-throw-if-not-resolved=\"false\">DatabaseAccount#getWritableLocations()</xref>. (b) Else resolve the request to first write endpoint in <xref uid=\"com.microsoft.azure.documentdb.DatabaseAccount.getWritableLocations()\" data-throw-if-not-resolved=\"false\">DatabaseAccount#getWritableLocations()</xref> OR second write endpoint in <xref uid=\"com.microsoft.azure.documentdb.DatabaseAccount.getWritableLocations()\" data-throw-if-not-resolved=\"false\">DatabaseAccount#getWritableLocations()</xref> in case of manual failover of that location. 2. Else resolve the request to most preferred available read endpoint (automatic failover for read requests)"
  syntax:
    content: " URI resolveServiceEndpoint(DocumentServiceRequest request)"
    parameters:
    - id: "request"
      type: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
      description: "Request for which endpoint is to be resolved"
    return:
      type: "java.net.URI"
      description: "Resolved endpoint"
- uid: "com.microsoft.azure.documentdb.LocationCache.shouldRefreshEndpoints(com.microsoft.azure.documentdb.LocationCache.CanRefreshInBackground)"
  id: "shouldRefreshEndpoints(com.microsoft.azure.documentdb.LocationCache.CanRefreshInBackground)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "shouldRefreshEndpoints(LocationCache.CanRefreshInBackground canRefreshInBackground)"
  nameWithType: "LocationCache.shouldRefreshEndpoints(LocationCache.CanRefreshInBackground canRefreshInBackground)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.shouldRefreshEndpoints(LocationCache.CanRefreshInBackground canRefreshInBackground)"
  overload: "com.microsoft.azure.documentdb.LocationCache.shouldRefreshEndpoints*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: " boolean shouldRefreshEndpoints(LocationCache.CanRefreshInBackground canRefreshInBackground)"
    parameters:
    - id: "canRefreshInBackground"
      type: "com.microsoft.azure.documentdb.LocationCache.CanRefreshInBackground"
    return:
      type: "boolean"
- uid: "com.microsoft.azure.documentdb.LocationCache.updateLocationCache(java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,java.lang.Boolean)"
  id: "updateLocationCache(java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>,java.lang.Boolean)"
  parent: "com.microsoft.azure.documentdb.LocationCache"
  langs:
  - "java"
  name: "updateLocationCache(Iterable<DatabaseAccountLocation> writeLocations, Iterable<DatabaseAccountLocation> readLocations, Boolean enableMultipleWritableLocations)"
  nameWithType: "LocationCache.updateLocationCache(Iterable<DatabaseAccountLocation> writeLocations, Iterable<DatabaseAccountLocation> readLocations, Boolean enableMultipleWritableLocations)"
  fullName: "com.microsoft.azure.documentdb.LocationCache.updateLocationCache(Iterable<DatabaseAccountLocation> writeLocations, Iterable<DatabaseAccountLocation> readLocations, Boolean enableMultipleWritableLocations)"
  overload: "com.microsoft.azure.documentdb.LocationCache.updateLocationCache*"
  type: "Method"
  package: "com.microsoft.azure.documentdb"
  syntax:
    content: "synchronized void updateLocationCache(Iterable<DatabaseAccountLocation> writeLocations, Iterable<DatabaseAccountLocation> readLocations, Boolean enableMultipleWritableLocations)"
    parameters:
    - id: "writeLocations"
      type: "java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>"
    - id: "readLocations"
      type: "java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>"
    - id: "enableMultipleWritableLocations"
      type: "java.lang.Boolean"
references:
- uid: "java.util.Collection<java.lang.String>"
  spec.java:
  - uid: "java.util.Collection"
    name: "Collection"
    fullName: "java.util.Collection"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.microsoft.azure.documentdb.LocationCache.LocationCache*"
  name: "LocationCache"
  nameWithType: "LocationCache.LocationCache"
  fullName: "com.microsoft.azure.documentdb.LocationCache.LocationCache"
  package: "com.microsoft.azure.documentdb"
- uid: "java.util.List<java.net.URI>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoints*"
  name: "getWriteEndpoints"
  nameWithType: "LocationCache.getWriteEndpoints"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoints"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoints*"
  name: "getReadEndpoints"
  nameWithType: "LocationCache.getReadEndpoints"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoints"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoint*"
  name: "getWriteEndpoint"
  nameWithType: "LocationCache.getWriteEndpoint"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getWriteEndpoint"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoint*"
  name: "getReadEndpoint"
  nameWithType: "LocationCache.getReadEndpoint"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getReadEndpoint"
  package: "com.microsoft.azure.documentdb"
- uid: "java.util.List<java.lang.String>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.documentdb.LocationCache.getOrderedWriteEndpoints*"
  name: "getOrderedWriteEndpoints"
  nameWithType: "LocationCache.getOrderedWriteEndpoints"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getOrderedWriteEndpoints"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.getOrderedReadEndpoints*"
  name: "getOrderedReadEndpoints"
  nameWithType: "LocationCache.getOrderedReadEndpoints"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getOrderedReadEndpoints"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForRead*"
  name: "markCurrentLocationUnavailableForRead"
  nameWithType: "LocationCache.markCurrentLocationUnavailableForRead"
  fullName: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForRead"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForWrite*"
  name: "markCurrentLocationUnavailableForWrite"
  nameWithType: "LocationCache.markCurrentLocationUnavailableForWrite"
  fullName: "com.microsoft.azure.documentdb.LocationCache.markCurrentLocationUnavailableForWrite"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.DatabaseAccount"
  name: "DatabaseAccount"
  nameWithType: "DatabaseAccount"
  fullName: "com.microsoft.azure.documentdb.DatabaseAccount"
- uid: "com.microsoft.azure.documentdb.LocationCache.onDatabaseAccountRead*"
  name: "onDatabaseAccountRead"
  nameWithType: "LocationCache.onDatabaseAccountRead"
  fullName: "com.microsoft.azure.documentdb.LocationCache.onDatabaseAccountRead"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
  name: "DocumentServiceRequest"
  nameWithType: "DocumentServiceRequest"
  fullName: "com.microsoft.azure.documentdb.internal.DocumentServiceRequest"
- uid: "com.microsoft.azure.documentdb.LocationCache.resolveServiceEndpoint*"
  name: "resolveServiceEndpoint"
  nameWithType: "LocationCache.resolveServiceEndpoint"
  fullName: "com.microsoft.azure.documentdb.LocationCache.resolveServiceEndpoint"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.CanRefreshInBackground"
  name: "LocationCache.CanRefreshInBackground"
  nameWithType: "LocationCache.CanRefreshInBackground"
  fullName: "com.microsoft.azure.documentdb.LocationCache.CanRefreshInBackground"
- uid: "com.microsoft.azure.documentdb.LocationCache.shouldRefreshEndpoints*"
  name: "shouldRefreshEndpoints"
  nameWithType: "LocationCache.shouldRefreshEndpoints"
  fullName: "com.microsoft.azure.documentdb.LocationCache.shouldRefreshEndpoints"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.getPreferredLocations*"
  name: "getPreferredLocations"
  nameWithType: "LocationCache.getPreferredLocations"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getPreferredLocations"
  package: "com.microsoft.azure.documentdb"
- uid: "java.lang.Iterable<com.microsoft.azure.documentdb.DatabaseAccountLocation>"
  spec.java:
  - uid: "java.lang.Iterable"
    name: "Iterable"
    fullName: "java.lang.Iterable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.documentdb.DatabaseAccountLocation"
    name: "DatabaseAccountLocation"
    fullName: "com.microsoft.azure.documentdb.DatabaseAccountLocation"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.microsoft.azure.documentdb.LocationCache.updateLocationCache*"
  name: "updateLocationCache"
  nameWithType: "LocationCache.updateLocationCache"
  fullName: "com.microsoft.azure.documentdb.LocationCache.updateLocationCache"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.UpdatableList"
  name: "LocationCache.UpdatableList"
  nameWithType: "LocationCache.UpdatableList"
  fullName: "com.microsoft.azure.documentdb.LocationCache.UpdatableList"
- uid: "java.util.Map<java.lang.String,java.net.URI>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.documentdb.LocationCache.getEndpointByLocation*"
  name: "getEndpointByLocation"
  nameWithType: "LocationCache.getEndpointByLocation"
  fullName: "com.microsoft.azure.documentdb.LocationCache.getEndpointByLocation"
  package: "com.microsoft.azure.documentdb"
- uid: "com.microsoft.azure.documentdb.LocationCache.canUseMultipleWriteLocations*"
  name: "canUseMultipleWriteLocations"
  nameWithType: "LocationCache.canUseMultipleWriteLocations"
  fullName: "com.microsoft.azure.documentdb.LocationCache.canUseMultipleWriteLocations"
  package: "com.microsoft.azure.documentdb"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.documentdb.LocationCache.EndpointOperationType"
  name: "LocationCache.EndpointOperationType"
  nameWithType: "LocationCache.EndpointOperationType"
  fullName: "com.microsoft.azure.documentdb.LocationCache.EndpointOperationType"
- uid: "com.microsoft.azure.documentdb.LocationCache.LocationUnavailabilityInfo"
  name: "LocationCache.LocationUnavailabilityInfo"
  nameWithType: "LocationCache.LocationUnavailabilityInfo"
  fullName: "com.microsoft.azure.documentdb.LocationCache.LocationUnavailabilityInfo"
- uid: "com.microsoft.azure.documentdb.LocationCache.DatabaseAccountLocationsInfo"
  name: "LocationCache.DatabaseAccountLocationsInfo"
  nameWithType: "LocationCache.DatabaseAccountLocationsInfo"
  fullName: "com.microsoft.azure.documentdb.LocationCache.DatabaseAccountLocationsInfo"
- uid: "java.util.Collection"
  name: "Collection"
  nameWithType: "Collection"
  fullName: "java.util.Collection"
- uid: "java.lang.String"
  name: "String"
  nameWithType: "String"
  fullName: "java.lang.String"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.documentdb.DatabaseAccountLocation"
  name: "DatabaseAccountLocation"
  nameWithType: "DatabaseAccountLocation"
  fullName: "com.microsoft.azure.documentdb.DatabaseAccountLocation"
- uid: "java.lang.Iterable"
  name: "Iterable"
  nameWithType: "Iterable"
  fullName: "java.lang.Iterable"
- uid: "java.lang.String,java.net.URI"
  name: "String,URI"
  nameWithType: "String,URI"
  fullName: "java.lang.String,java.net.URI"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
