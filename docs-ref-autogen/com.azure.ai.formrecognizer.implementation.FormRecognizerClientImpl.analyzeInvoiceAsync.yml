### YamlMime:JavaMember
uid: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeInvoiceAsync*"
fullName: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeInvoiceAsync"
name: "analyzeInvoiceAsync"
nameWithType: "FormRecognizerClientImpl.analyzeInvoiceAsync"
members:
- uid: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeInvoiceAsync(com.azure.ai.formrecognizer.implementation.models.ContentType,java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.Locale,java.util.List<java.lang.String>,reactor.core.publisher.Flux<java.nio.ByteBuffer>,java.lang.Long)"
  fullName: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeInvoiceAsync(ContentType contentType, Boolean includeTextDetails, Locale locale, List<String> pages, Flux<ByteBuffer> fileStream, Long contentLength)"
  name: "analyzeInvoiceAsync(ContentType contentType, Boolean includeTextDetails, Locale locale, List<String> pages, Flux<ByteBuffer> fileStream, Long contentLength)"
  nameWithType: "FormRecognizerClientImpl.analyzeInvoiceAsync(ContentType contentType, Boolean includeTextDetails, Locale locale, List<String> pages, Flux<ByteBuffer> fileStream, Long contentLength)"
  summary: "Extract field text and semantic values from a given invoice document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff' or 'image/bmp'. Alternatively, use 'application/json' type to specify the location (Uri) of the document to be analyzed."
  parameters:
  - description: "Upload file type."
    name: "contentType"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.ContentType?alt=com.azure.ai.formrecognizer.implementation.models.ContentType&text=ContentType\" data-throw-if-not-resolved=\"False\" />"
  - description: "Include text lines and element references in the result."
    name: "includeTextDetails"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Locale of the input document. Supported locales include: en-AU, en-CA, en-GB, en-IN,\n     en-US(default)."
    name: "locale"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.Locale?alt=com.azure.ai.formrecognizer.implementation.models.Locale&text=Locale\" data-throw-if-not-resolved=\"False\" />"
  - description: "Custom page numbers for multi-page documents(PDF/TIFF), input the number of the pages you want to\n     get OCR result. For a range of pages, use a hyphen. Separate each page or range with a comma."
    name: "pages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: ".json, .pdf, .jpg, .png, .tiff or .bmp type file stream."
    name: "fileStream"
    type: "<xref href=\"reactor.core.publisher.Flux?alt=reactor.core.publisher.Flux&text=Flux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.nio.ByteBuffer?alt=java.nio.ByteBuffer&text=ByteBuffer\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The contentLength parameter."
    name: "contentLength"
    type: "<xref href=\"java.lang.Long?alt=java.lang.Long&text=Long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void analyzeInvoiceAsync(ContentType contentType, Boolean includeTextDetails, Locale locale, List<String> pages, Flux<ByteBuffer> fileStream, Long contentLength)"
- uid: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeInvoiceAsync(java.lang.Boolean,com.azure.ai.formrecognizer.implementation.models.Locale,java.util.List<java.lang.String>,com.azure.ai.formrecognizer.implementation.models.SourcePath)"
  fullName: "com.azure.ai.formrecognizer.implementation.FormRecognizerClientImpl.analyzeInvoiceAsync(Boolean includeTextDetails, Locale locale, List<String> pages, SourcePath fileStream)"
  name: "analyzeInvoiceAsync(Boolean includeTextDetails, Locale locale, List<String> pages, SourcePath fileStream)"
  nameWithType: "FormRecognizerClientImpl.analyzeInvoiceAsync(Boolean includeTextDetails, Locale locale, List<String> pages, SourcePath fileStream)"
  summary: "Extract field text and semantic values from a given invoice document. The input document must be of one of the supported content types - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff' or 'image/bmp'. Alternatively, use 'application/json' type to specify the location (Uri) of the document to be analyzed."
  parameters:
  - description: "Include text lines and element references in the result."
    name: "includeTextDetails"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Locale of the input document. Supported locales include: en-AU, en-CA, en-GB, en-IN,\n     en-US(default)."
    name: "locale"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.Locale?alt=com.azure.ai.formrecognizer.implementation.models.Locale&text=Locale\" data-throw-if-not-resolved=\"False\" />"
  - description: "Custom page numbers for multi-page documents(PDF/TIFF), input the number of the pages you want to\n     get OCR result. For a range of pages, use a hyphen. Separate each page or range with a comma."
    name: "pages"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: ".json, .pdf, .jpg, .png, .tiff or .bmp type file stream."
    name: "fileStream"
    type: "<xref href=\"com.azure.ai.formrecognizer.implementation.models.SourcePath?alt=com.azure.ai.formrecognizer.implementation.models.SourcePath&text=SourcePath\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void analyzeInvoiceAsync(Boolean includeTextDetails, Locale locale, List<String> pages, SourcePath fileStream)"
type: "method"
metadata: {}
package: "com.azure.ai.formrecognizer.implementation"
artifact: com.azure:azure-ai-formrecognizer:3.1.6
