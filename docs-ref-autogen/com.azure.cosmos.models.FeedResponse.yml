### YamlMime:JavaType
uid: "com.azure.cosmos.models.FeedResponse"
fullName: "com.azure.cosmos.models.FeedResponse<T>"
name: "FeedResponse<T>"
nameWithType: "FeedResponse<T>"
summary: "The type Feed response."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class FeedResponse<T> implements ContinuablePage<String,T>"
methods:
- uid: "com.azure.cosmos.models.FeedResponse.getActivityId()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getActivityId()"
  name: "getActivityId()"
  nameWithType: "FeedResponse<T>.getActivityId()"
  summary: "Gets the activity ID for the request."
  syntax: "public String getActivityId()"
  desc: "Gets the activity ID for the request."
  returns:
    description: "the activity id."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getCollectionQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getCollectionQuota()"
  name: "getCollectionQuota()"
  nameWithType: "FeedResponse<T>.getCollectionQuota()"
  summary: "Gets the maximum quota for container resources within an account from the Azure Cosmos DB service."
  syntax: "public long getCollectionQuota()"
  desc: "Gets the maximum quota for container resources within an account from the Azure Cosmos DB service."
  returns:
    description: "The maximum quota for the account."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getCollectionSizeQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getCollectionSizeQuota()"
  name: "getCollectionSizeQuota()"
  nameWithType: "FeedResponse<T>.getCollectionSizeQuota()"
  summary: "Gets the maximum size of a container in kilobytes from the Azure Cosmos DB service."
  syntax: "public long getCollectionSizeQuota()"
  desc: "Gets the maximum size of a container in kilobytes from the Azure Cosmos DB service."
  returns:
    description: "The maximum quota in kilobytes."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getCollectionSizeUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getCollectionSizeUsage()"
  name: "getCollectionSizeUsage()"
  nameWithType: "FeedResponse<T>.getCollectionSizeUsage()"
  summary: "Gets the current size of a container in kilobytes from the Azure Cosmos DB service."
  syntax: "public long getCollectionSizeUsage()"
  desc: "Gets the current size of a container in kilobytes from the Azure Cosmos DB service."
  returns:
    description: "The current size of a container in kilobytes."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getCollectionUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getCollectionUsage()"
  name: "getCollectionUsage()"
  nameWithType: "FeedResponse<T>.getCollectionUsage()"
  summary: "Gets the current number of container resources within the account from the Azure Cosmos DB service."
  syntax: "public long getCollectionUsage()"
  desc: "Gets the current number of container resources within the account from the Azure Cosmos DB service."
  returns:
    description: "The current number of containers."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getContinuationToken()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getContinuationToken()"
  name: "getContinuationToken()"
  nameWithType: "FeedResponse<T>.getContinuationToken()"
  summary: "Gets the continuation token to be used for continuing the enumeration."
  syntax: "public String getContinuationToken()"
  desc: "Gets the continuation token to be used for continuing the enumeration."
  returns:
    description: "the response continuation."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getCorrelationActivityId()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getCorrelationActivityId()"
  name: "getCorrelationActivityId()"
  nameWithType: "FeedResponse<T>.getCorrelationActivityId()"
  summary: "Gets the correlation activity ID for the responses of a query operation or null if no correlation activity id is present"
  syntax: "public UUID getCorrelationActivityId()"
  desc: "Gets the correlation activity ID for the responses of a query operation or null if no correlation activity id is present"
  returns:
    description: "the correlation activity id or null if no correlation activity id is present."
    type: "<xref href=\"java.util.UUID?alt=java.util.UUID&text=UUID\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getCosmosDiagnostics()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getCosmosDiagnostics()"
  name: "getCosmosDiagnostics()"
  nameWithType: "FeedResponse<T>.getCosmosDiagnostics()"
  summary: "Gets the feed response diagnostics"
  syntax: "public CosmosDiagnostics getCosmosDiagnostics()"
  desc: "Gets the feed response diagnostics"
  returns:
    description: "Feed response diagnostics"
    type: "<xref href=\"com.azure.cosmos.CosmosDiagnostics?alt=com.azure.cosmos.CosmosDiagnostics&text=CosmosDiagnostics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getCurrentResourceQuotaUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getCurrentResourceQuotaUsage()"
  name: "getCurrentResourceQuotaUsage()"
  nameWithType: "FeedResponse<T>.getCurrentResourceQuotaUsage()"
  summary: "Gets the current size of this entity from the Azure Cosmos DB service."
  syntax: "public String getCurrentResourceQuotaUsage()"
  desc: "Gets the current size of this entity from the Azure Cosmos DB service."
  returns:
    description: "the current size for this entity. Measured in kilobytes for item resources\n and in counts for other resources."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getDatabaseQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getDatabaseQuota()"
  name: "getDatabaseQuota()"
  nameWithType: "FeedResponse<T>.getDatabaseQuota()"
  summary: "Gets the maximum quota for database resources within the account from the Azure Cosmos DB service."
  syntax: "public long getDatabaseQuota()"
  desc: "Gets the maximum quota for database resources within the account from the Azure Cosmos DB service."
  returns:
    description: "The maximum quota for the account."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getDatabaseUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getDatabaseUsage()"
  name: "getDatabaseUsage()"
  nameWithType: "FeedResponse<T>.getDatabaseUsage()"
  summary: "Gets the current number of database resources within the account from the Azure Cosmos DB service."
  syntax: "public long getDatabaseUsage()"
  desc: "Gets the current number of database resources within the account from the Azure Cosmos DB service."
  returns:
    description: "The current number of databases."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getDocumentCountUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getDocumentCountUsage()"
  name: "getDocumentCountUsage()"
  nameWithType: "FeedResponse<T>.getDocumentCountUsage()"
  summary: "Current document count usage."
  syntax: "public long getDocumentCountUsage()"
  desc: "Current document count usage."
  returns:
    description: "the document count usage."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getDocumentUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getDocumentUsage()"
  name: "getDocumentUsage()"
  nameWithType: "FeedResponse<T>.getDocumentUsage()"
  summary: "Gets the current size of the documents in a container in kilobytes from the Azure Cosmos DB service."
  syntax: "public long getDocumentUsage()"
  desc: "Gets the current size of the documents in a container in kilobytes from the Azure Cosmos DB service."
  returns:
    description: "The current size of a container in kilobytes."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getElements()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getElements()"
  name: "getElements()"
  nameWithType: "FeedResponse<T>.getElements()"
  syntax: "public IterableStream<T> getElements()"
  returns:
    type: "<xref href=\"com.azure.core.util.IterableStream?alt=com.azure.core.util.IterableStream&text=IterableStream\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.models.FeedResponse.getMaxResourceQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getMaxResourceQuota()"
  name: "getMaxResourceQuota()"
  nameWithType: "FeedResponse<T>.getMaxResourceQuota()"
  summary: "Gets the maximum size limit for this entity from the Azure Cosmos DB service."
  syntax: "public String getMaxResourceQuota()"
  desc: "Gets the maximum size limit for this entity from the Azure Cosmos DB service."
  returns:
    description: "the maximum size limit for this entity.\n Measured in kilobytes for item resources and in counts for other resources."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getPermissionQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getPermissionQuota()"
  name: "getPermissionQuota()"
  nameWithType: "FeedResponse<T>.getPermissionQuota()"
  summary: "Gets the maximum quota for permission resources within an account from the Azure Cosmos DB service."
  syntax: "public long getPermissionQuota()"
  desc: "Gets the maximum quota for permission resources within an account from the Azure Cosmos DB service."
  returns:
    description: "The maximum quota for the account."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getPermissionUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getPermissionUsage()"
  name: "getPermissionUsage()"
  nameWithType: "FeedResponse<T>.getPermissionUsage()"
  summary: "Gets the current number of permission resources within the account from the Azure Cosmos DB service."
  syntax: "public long getPermissionUsage()"
  desc: "Gets the current number of permission resources within the account from the Azure Cosmos DB service."
  returns:
    description: "The current number of permissions."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getRequestCharge()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getRequestCharge()"
  name: "getRequestCharge()"
  nameWithType: "FeedResponse<T>.getRequestCharge()"
  summary: "Gets the request charge as request units (RU) consumed by the operation."
  syntax: "public double getRequestCharge()"
  desc: "Gets the request charge as request units (RU) consumed by the operation.\n\nFor more information about the RU and factors that can impact the effective charges please visit [Request Units in Azure Cosmos DB][]\n\n\n[Request Units in Azure Cosmos DB]: https://docs.microsoft.com/en-us/azure/cosmos-db/request-units"
  returns:
    description: "the request charge."
    type: "<xref href=\"double?alt=double&text=double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getResponseHeaders()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getResponseHeaders()"
  name: "getResponseHeaders()"
  nameWithType: "FeedResponse<T>.getResponseHeaders()"
  summary: "Gets the response headers."
  syntax: "public Map<String,String> getResponseHeaders()"
  desc: "Gets the response headers."
  returns:
    description: "the response headers."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.models.FeedResponse.getResults()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getResults()"
  name: "getResults()"
  nameWithType: "FeedResponse<T>.getResults()"
  summary: "Results."
  syntax: "public List<T> getResults()"
  desc: "Results."
  returns:
    description: "the list of results."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.models.FeedResponse.getSessionToken()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getSessionToken()"
  name: "getSessionToken()"
  nameWithType: "FeedResponse<T>.getSessionToken()"
  summary: "Gets the session token for use in session consistency."
  syntax: "public String getSessionToken()"
  desc: "Gets the session token for use in session consistency."
  returns:
    description: "the session token."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getStoredProceduresQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getStoredProceduresQuota()"
  name: "getStoredProceduresQuota()"
  nameWithType: "FeedResponse<T>.getStoredProceduresQuota()"
  summary: "Gets the maximum quota of stored procedures for a container from the Azure Cosmos DB service."
  syntax: "public long getStoredProceduresQuota()"
  desc: "Gets the maximum quota of stored procedures for a container from the Azure Cosmos DB service."
  returns:
    description: "The maximum stored procedure quota."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getStoredProceduresUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getStoredProceduresUsage()"
  name: "getStoredProceduresUsage()"
  nameWithType: "FeedResponse<T>.getStoredProceduresUsage()"
  summary: "Gets the current number of stored procedures for a container from the Azure Cosmos DB service."
  syntax: "public long getStoredProceduresUsage()"
  desc: "Gets the current number of stored procedures for a container from the Azure Cosmos DB service."
  returns:
    description: "The current number of stored procedures."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getTriggersQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getTriggersQuota()"
  name: "getTriggersQuota()"
  nameWithType: "FeedResponse<T>.getTriggersQuota()"
  summary: "Gets the maximum quota of triggers for a container from the Azure Cosmos DB service."
  syntax: "public long getTriggersQuota()"
  desc: "Gets the maximum quota of triggers for a container from the Azure Cosmos DB service."
  returns:
    description: "The maximum triggers quota."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getTriggersUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getTriggersUsage()"
  name: "getTriggersUsage()"
  nameWithType: "FeedResponse<T>.getTriggersUsage()"
  summary: "Get the current number of triggers for a container from the Azure Cosmos DB service."
  syntax: "public long getTriggersUsage()"
  desc: "Get the current number of triggers for a container from the Azure Cosmos DB service."
  returns:
    description: "The current number of triggers."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getUserDefinedFunctionsQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getUserDefinedFunctionsQuota()"
  name: "getUserDefinedFunctionsQuota()"
  nameWithType: "FeedResponse<T>.getUserDefinedFunctionsQuota()"
  summary: "Gets the maximum quota of user defined functions for a container from the Azure Cosmos DB service."
  syntax: "public long getUserDefinedFunctionsQuota()"
  desc: "Gets the maximum quota of user defined functions for a container from the Azure Cosmos DB service."
  returns:
    description: "The maximum user defined functions quota."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getUserDefinedFunctionsUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getUserDefinedFunctionsUsage()"
  name: "getUserDefinedFunctionsUsage()"
  nameWithType: "FeedResponse<T>.getUserDefinedFunctionsUsage()"
  summary: "Gets the current number of user defined functions for a container from the Azure Cosmos DB service."
  syntax: "public long getUserDefinedFunctionsUsage()"
  desc: "Gets the current number of user defined functions for a container from the Azure Cosmos DB service."
  returns:
    description: "the current number of user defined functions."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getUserQuota()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getUserQuota()"
  name: "getUserQuota()"
  nameWithType: "FeedResponse<T>.getUserQuota()"
  summary: "Gets the maximum quota for user resources within an account from the Azure Cosmos DB service."
  syntax: "public long getUserQuota()"
  desc: "Gets the maximum quota for user resources within an account from the Azure Cosmos DB service."
  returns:
    description: "The maximum quota for the account."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.models.FeedResponse.getUserUsage()"
  fullName: "com.azure.cosmos.models.FeedResponse<T>.getUserUsage()"
  name: "getUserUsage()"
  nameWithType: "FeedResponse<T>.getUserUsage()"
  summary: "Gets the current number of user resources within the account from the Azure Cosmos DB service."
  syntax: "public long getUserUsage()"
  desc: "Gets the current number of user resources within the account from the Azure Cosmos DB service."
  returns:
    description: "The current number of users."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "class"
typeParameters:
- description: "the type parameter"
  name: "T"
desc: "The type Feed response."
implements:
- "<xref href=\"com.azure.core.util.paging.ContinuablePage?alt=com.azure.core.util.paging.ContinuablePage&text=ContinuablePage\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.35.0
