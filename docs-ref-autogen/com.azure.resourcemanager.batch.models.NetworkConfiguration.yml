### YamlMime:JavaType
uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration"
fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration"
name: "NetworkConfiguration"
nameWithType: "NetworkConfiguration"
summary: "The network configuration for a pool."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class NetworkConfiguration"
constructors:
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.NetworkConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.NetworkConfiguration()"
  name: "NetworkConfiguration()"
  nameWithType: "NetworkConfiguration.NetworkConfiguration()"
  syntax: "public NetworkConfiguration()"
methods:
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.dynamicVNetAssignmentScope()"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.dynamicVNetAssignmentScope()"
  name: "dynamicVNetAssignmentScope()"
  nameWithType: "NetworkConfiguration.dynamicVNetAssignmentScope()"
  summary: "Get the dynamic<wbr>VNet<wbr>Assignment<wbr>Scope property: The scope of dynamic vnet assignment."
  syntax: "public DynamicVNetAssignmentScope dynamicVNetAssignmentScope()"
  desc: "Get the dynamicVNetAssignmentScope property: The scope of dynamic vnet assignment."
  returns:
    description: "the dynamicVNetAssignmentScope value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DynamicVNetAssignmentScope?alt=com.azure.resourcemanager.batch.models.DynamicVNetAssignmentScope&text=DynamicVNetAssignmentScope\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.endpointConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.endpointConfiguration()"
  name: "endpointConfiguration()"
  nameWithType: "NetworkConfiguration.endpointConfiguration()"
  summary: "Get the endpoint<wbr>Configuration property: The endpoint configuration for a pool."
  syntax: "public PoolEndpointConfiguration endpointConfiguration()"
  desc: "Get the endpointConfiguration property: The endpoint configuration for a pool. Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property."
  returns:
    description: "the endpointConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.PoolEndpointConfiguration?alt=com.azure.resourcemanager.batch.models.PoolEndpointConfiguration&text=PoolEndpointConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.publicIpAddressConfiguration()"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.publicIpAddressConfiguration()"
  name: "publicIpAddressConfiguration()"
  nameWithType: "NetworkConfiguration.publicIpAddressConfiguration()"
  summary: "Get the public<wbr>IpAddress<wbr>Configuration property: This property is only supported on Pools with the virtual<wbr>Machine<wbr>Configuration property."
  syntax: "public PublicIpAddressConfiguration publicIpAddressConfiguration()"
  desc: "Get the publicIpAddressConfiguration property: This property is only supported on Pools with the virtualMachineConfiguration property."
  returns:
    description: "the publicIpAddressConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.PublicIpAddressConfiguration?alt=com.azure.resourcemanager.batch.models.PublicIpAddressConfiguration&text=PublicIpAddressConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.subnetId()"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.subnetId()"
  name: "subnetId()"
  nameWithType: "NetworkConfiguration.subnetId()"
  summary: "Get the subnet<wbr>Id property: The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join."
  syntax: "public String subnetId()"
  desc: "Get the subnetId property: The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/\\{subscription\\}/resourceGroups/\\{group\\}/providers/\\{provider\\}/virtualNetworks/\\{network\\}/subnets/\\{subnet\\}. The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For cloudServiceConfiguration pools, only 'classic' VNETs are supported. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics\\#virtual-network-vnet-and-firewall-configuration."
  returns:
    description: "the subnetId value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.validate()"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.validate()"
  name: "validate()"
  nameWithType: "NetworkConfiguration.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withDynamicVNetAssignmentScope(com.azure.resourcemanager.batch.models.DynamicVNetAssignmentScope)"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withDynamicVNetAssignmentScope(DynamicVNetAssignmentScope dynamicVNetAssignmentScope)"
  name: "withDynamicVNetAssignmentScope(DynamicVNetAssignmentScope dynamicVNetAssignmentScope)"
  nameWithType: "NetworkConfiguration.withDynamicVNetAssignmentScope(DynamicVNetAssignmentScope dynamicVNetAssignmentScope)"
  summary: "Set the dynamic<wbr>VNet<wbr>Assignment<wbr>Scope property: The scope of dynamic vnet assignment."
  parameters:
  - description: "the dynamicVNetAssignmentScope value to set."
    name: "dynamicVNetAssignmentScope"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.DynamicVNetAssignmentScope?alt=com.azure.resourcemanager.batch.models.DynamicVNetAssignmentScope&text=DynamicVNetAssignmentScope\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkConfiguration withDynamicVNetAssignmentScope(DynamicVNetAssignmentScope dynamicVNetAssignmentScope)"
  desc: "Set the dynamicVNetAssignmentScope property: The scope of dynamic vnet assignment."
  returns:
    description: "the NetworkConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withEndpointConfiguration(com.azure.resourcemanager.batch.models.PoolEndpointConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withEndpointConfiguration(PoolEndpointConfiguration endpointConfiguration)"
  name: "withEndpointConfiguration(PoolEndpointConfiguration endpointConfiguration)"
  nameWithType: "NetworkConfiguration.withEndpointConfiguration(PoolEndpointConfiguration endpointConfiguration)"
  summary: "Set the endpoint<wbr>Configuration property: The endpoint configuration for a pool."
  parameters:
  - description: "the endpointConfiguration value to set."
    name: "endpointConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.PoolEndpointConfiguration?alt=com.azure.resourcemanager.batch.models.PoolEndpointConfiguration&text=PoolEndpointConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkConfiguration withEndpointConfiguration(PoolEndpointConfiguration endpointConfiguration)"
  desc: "Set the endpointConfiguration property: The endpoint configuration for a pool. Pool endpoint configuration is only supported on pools with the virtualMachineConfiguration property."
  returns:
    description: "the NetworkConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withPublicIpAddressConfiguration(com.azure.resourcemanager.batch.models.PublicIpAddressConfiguration)"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withPublicIpAddressConfiguration(PublicIpAddressConfiguration publicIpAddressConfiguration)"
  name: "withPublicIpAddressConfiguration(PublicIpAddressConfiguration publicIpAddressConfiguration)"
  nameWithType: "NetworkConfiguration.withPublicIpAddressConfiguration(PublicIpAddressConfiguration publicIpAddressConfiguration)"
  summary: "Set the public<wbr>IpAddress<wbr>Configuration property: This property is only supported on Pools with the virtual<wbr>Machine<wbr>Configuration property."
  parameters:
  - description: "the publicIpAddressConfiguration value to set."
    name: "publicIpAddressConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.batch.models.PublicIpAddressConfiguration?alt=com.azure.resourcemanager.batch.models.PublicIpAddressConfiguration&text=PublicIpAddressConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkConfiguration withPublicIpAddressConfiguration(PublicIpAddressConfiguration publicIpAddressConfiguration)"
  desc: "Set the publicIpAddressConfiguration property: This property is only supported on Pools with the virtualMachineConfiguration property."
  returns:
    description: "the NetworkConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withSubnetId(java.lang.String)"
  fullName: "com.azure.resourcemanager.batch.models.NetworkConfiguration.withSubnetId(String subnetId)"
  name: "withSubnetId(String subnetId)"
  nameWithType: "NetworkConfiguration.withSubnetId(String subnetId)"
  summary: "Set the subnet<wbr>Id property: The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join."
  parameters:
  - description: "the subnetId value to set."
    name: "subnetId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public NetworkConfiguration withSubnetId(String subnetId)"
  desc: "Set the subnetId property: The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/\\{subscription\\}/resourceGroups/\\{group\\}/providers/\\{provider\\}/virtualNetworks/\\{network\\}/subnets/\\{subnet\\}. The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For cloudServiceConfiguration pools, only 'classic' VNETs are supported. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics\\#virtual-network-vnet-and-firewall-configuration."
  returns:
    description: "the NetworkConfiguration object itself."
    type: "<xref href=\"com.azure.resourcemanager.batch.models.NetworkConfiguration?alt=com.azure.resourcemanager.batch.models.NetworkConfiguration&text=NetworkConfiguration\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The network configuration for a pool."
metadata: {}
package: "com.azure.resourcemanager.batch.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-batch:1.0.0
