### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.Providers"
fullName: "com.microsoft.azure.management.resources.Providers"
name: "Providers"
nameWithType: "Providers"
summary: "Entry point to providers management API."
syntax: "public interface Providers extends SupportsListing<Provider>, SupportsGettingByName<Provider>"
methods:
- uid: "com.microsoft.azure.management.resources.Providers.getByNameAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.Providers.getByNameAsync(String name)"
  name: "getByNameAsync(String name)"
  nameWithType: "Providers.getByNameAsync(String name)"
  summary: "Gets the information about a provider from Azure based on the provider name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the name of the provider"
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Provider> getByNameAsync(String name)"
  desc: "Gets the information about a provider from Azure based on the provider name."
  returns:
    description: "a representation of the deferred computation of this call returning the found provider, if any"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Providers.register(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.Providers.register(String resourceProviderNamespace)"
  name: "register(String resourceProviderNamespace)"
  nameWithType: "Providers.register(String resourceProviderNamespace)"
  summary: "Registers provider to be used with a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "namespace of the resource provider"
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Provider register(String resourceProviderNamespace)"
  desc: "Registers provider to be used with a subscription."
  returns:
    description: "the registered provider"
    type: "<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Providers.registerAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.Providers.registerAsync(String resourceProviderNamespace)"
  name: "registerAsync(String resourceProviderNamespace)"
  nameWithType: "Providers.registerAsync(String resourceProviderNamespace)"
  summary: "Registers provider to be used with a subscription asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "Namespace of the resource provider"
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Provider> registerAsync(String resourceProviderNamespace)"
  desc: "Registers provider to be used with a subscription asynchronously."
  returns:
    description: "a representation of the deferred computation of this call returning the registered provider if successful"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Providers.registerAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  fullName: "com.microsoft.azure.management.resources.Providers.registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  name: "registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  nameWithType: "Providers.registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  summary: "Registers provider to be used with a subscription asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "Namespace of the resource provider"
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback to call on success or failure with the ProviderInner object wrapped as parameter if successful"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Provider> registerAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  desc: "Registers provider to be used with a subscription asynchronously."
  returns:
    description: "a handle to cancel the request"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Providers.unregister(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.Providers.unregister(String resourceProviderNamespace)"
  name: "unregister(String resourceProviderNamespace)"
  nameWithType: "Providers.unregister(String resourceProviderNamespace)"
  summary: "Unregisters provider from a subscription."
  modifiers:
  - "abstract"
  parameters:
  - description: "Namespace of the resource provider"
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Provider unregister(String resourceProviderNamespace)"
  desc: "Unregisters provider from a subscription."
  returns:
    description: "the ProviderInner object wrapped in <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ServiceResponse\"></xref> if successful"
    type: "<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.Providers.unregisterAsync(java.lang.String)"
  fullName: "com.microsoft.azure.management.resources.Providers.unregisterAsync(String resourceProviderNamespace)"
  name: "unregisterAsync(String resourceProviderNamespace)"
  nameWithType: "Providers.unregisterAsync(String resourceProviderNamespace)"
  summary: "Unregisters provider from a subscription asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "Namespace of the resource provider"
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Provider> unregisterAsync(String resourceProviderNamespace)"
  desc: "Unregisters provider from a subscription asynchronously."
  returns:
    description: "a representation of the deferred computation of this call returning the unregistered Provider if successful"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.Providers.unregisterAsync(java.lang.String,com.microsoft.rest.ServiceCallback<com.microsoft.azure.management.resources.Provider>)"
  fullName: "com.microsoft.azure.management.resources.Providers.unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  name: "unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  nameWithType: "Providers.unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  summary: "Unregisters provider from a subscription asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "namespace of the resource provider"
    name: "resourceProviderNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the callback to call on success or failure with the ProviderInner object wrapped as parameter if successful"
    name: "callback"
    type: "<xref href=\"com.microsoft.rest.ServiceCallback?alt=com.microsoft.rest.ServiceCallback&text=ServiceCallback\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public abstract ServiceFuture<Provider> unregisterAsync(String resourceProviderNamespace, ServiceCallback<Provider> callback)"
  desc: "Unregisters provider from a subscription asynchronously."
  returns:
    description: "a handle to cancel the request"
    type: "<xref href=\"com.microsoft.rest.ServiceFuture?alt=com.microsoft.rest.ServiceFuture&text=ServiceFuture\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point to providers management API."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByName?alt=com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByName&text=SupportsGettingByName\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing?alt=com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.resources"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
