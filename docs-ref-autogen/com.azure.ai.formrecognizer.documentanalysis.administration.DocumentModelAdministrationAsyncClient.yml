### YamlMime:JavaType
uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient"
fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient"
name: "DocumentModelAdministrationAsyncClient"
nameWithType: "DocumentModelAdministrationAsyncClient"
summary: "This class provides an asynchronous client that contains model management operations that apply to Azure Form Recognizer."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class DocumentModelAdministrationAsyncClient"
methods:
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginBuildDocumentModel(java.lang.String,com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode)"
  name: "beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode)"
  nameWithType: "DocumentModelAdministrationAsyncClient.beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode)"
  summary: "Builds a custom document analysis model."
  parameters:
  - description: "an Azure Storage blob container's SAS URI. A container URI (without SAS)\n can be used if the container is public or has a managed identity configured. For more information on\n setting up a training data set, see: <a href=\"https://aka.ms/azsdk/formrecognizer/buildcustommodel\">here</a>."
    name: "blobContainerUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the preferred technique for creating models. For faster training of models use\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode.TEMPLATE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelBuildMode#TEMPLATE\"></xref>. See <a href=\"https://aka.ms/azsdk/formrecognizer/buildmode\">here</a>\n for more information on building mode for custom documents."
    name: "buildMode"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode&text=DocumentModelBuildMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<OperationResult,DocumentModelDetails> beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode)"
  desc: "Builds a custom document analysis model. Models are built using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff', image/bmp. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\nSee [here][] for information on building your own administration data set.\n\n**Code sample**\n\n```java\nString blobContainerUrl = \"{SAS-URL-of-your-container-in-blob-storage}\";\n documentModelAdministrationAsyncClient.beginBuildDocumentModel(blobContainerUrl,\n         DocumentModelBuildMode.TEMPLATE\n     )\n     // if polling operation completed, retrieve the final result.\n     .flatMap(AsyncPollResponse::getFinalResult)\n     .subscribe(documentModel -> {\n         System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n         System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n         documentModel.getDocumentTypes().forEach((key, documentTypeDetails) -> {\n             documentTypeDetails.getFieldSchema().forEach((field, documentFieldSchema) -> {\n                 System.out.printf(\"Field: %s\", field);\n                 System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n                 System.out.printf(\"Field confidence: %.2f\", documentTypeDetails.getFieldConfidence().get(field));\n             });\n         });\n     });\n```\n\n\n[here]: https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the building model operation until it has completed, has failed, or has\n been cancelled. The completed operation returns the trained <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"custom document analysis model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails&text=DocumentModelDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginBuildDocumentModel(java.lang.String,com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode,java.lang.String,com.azure.ai.formrecognizer.documentanalysis.administration.models.BuildDocumentModelOptions)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode, String prefix, BuildDocumentModelOptions buildDocumentModelOptions)"
  name: "beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode, String prefix, BuildDocumentModelOptions buildDocumentModelOptions)"
  nameWithType: "DocumentModelAdministrationAsyncClient.beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode, String prefix, BuildDocumentModelOptions buildDocumentModelOptions)"
  summary: "Builds a custom document analysis model."
  parameters:
  - description: "an Azure Storage blob container's SAS URI. A container URI (without SAS)\n can be used if the container is public or has a managed identity configured. For more information on\n setting up a training data set, see: <a href=\"https://aka.ms/azsdk/formrecognizer/buildcustommodel\">here</a>."
    name: "blobContainerUrl"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the preferred technique for creating models. For faster training of models use\n <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode.TEMPLATE\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelBuildMode#TEMPLATE\"></xref>. See <a href=\"https://aka.ms/azsdk/formrecognizer/buildmode\">here</a>\n for more information on building mode for custom documents."
    name: "buildMode"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelBuildMode&text=DocumentModelBuildMode\" data-throw-if-not-resolved=\"False\" />"
  - description: "case-sensitive prefix blob name prefix to filter documents for training."
    name: "prefix"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The configurable <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.BuildDocumentModelOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass when\n building a custom document analysis model."
    name: "buildDocumentModelOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.BuildDocumentModelOptions?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.BuildDocumentModelOptions&text=BuildDocumentModelOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<OperationResult,DocumentModelDetails> beginBuildDocumentModel(String blobContainerUrl, DocumentModelBuildMode buildMode, String prefix, BuildDocumentModelOptions buildDocumentModelOptions)"
  desc: "Builds a custom document analysis model. Models are built using documents that are of the following content type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff', image/bmp. Other type of content is ignored.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\nSee [here][] for information on building your own administration data set.\n\n**Code sample**\n\n```java\nString blobContainerUrl = \"{SAS-URL-of-your-container-in-blob-storage}\";\n String modelId = \"model-id\";\n Map<String, String> attrs = new HashMap<String, String>();\n attrs.put(\"createdBy\", \"sample\");\n String prefix = \"Invoice\";\n\n documentModelAdministrationAsyncClient.beginBuildDocumentModel(blobContainerUrl,\n         DocumentModelBuildMode.TEMPLATE,\n         prefix,\n         new BuildDocumentModelOptions()\n             .setModelId(modelId)\n             .setDescription(\"model desc\")\n             .setTags(attrs))\n     // if polling operation completed, retrieve the final result.\n     .flatMap(AsyncPollResponse::getFinalResult)\n     .subscribe(documentModel -> {\n         System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n         System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n         System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n         System.out.printf(\"Model assigned tags: %s%n\", documentModel.getTags());\n         documentModel.getDocumentTypes().forEach((key, documentTypeDetails) -> {\n             documentTypeDetails.getFieldSchema().forEach((field, documentFieldSchema) -> {\n                 System.out.printf(\"Field: %s\", field);\n                 System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n                 System.out.printf(\"Field confidence: %.2f\", documentTypeDetails.getFieldConfidence().get(field));\n             });\n         });\n     });\n```\n\n\n[here]: https://docs.microsoft.com/azure/cognitive-services/form-recognizer/build-training-data-set#upload-your-training-data"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the building model operation until it has completed, has failed, or has\n been cancelled. The completed operation returns the trained <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"custom document analysis model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails&text=DocumentModelDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginComposeDocumentModel(java.util.List<java.lang.String>)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginComposeDocumentModel(List<String> componentModelIds)"
  name: "beginComposeDocumentModel(List<String> componentModelIds)"
  nameWithType: "DocumentModelAdministrationAsyncClient.beginComposeDocumentModel(List<String> componentModelIds)"
  summary: "Create a composed model from the provided list of existing models in the account."
  parameters:
  - description: "The list of component models to compose."
    name: "componentModelIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public PollerFlux<OperationResult,DocumentModelDetails> beginComposeDocumentModel(List<String> componentModelIds)"
  desc: "Create a composed model from the provided list of existing models in the account.\n\nThis operations fails if the list consists of an invalid, non-existing model Id or duplicate IDs.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString modelId1 = \"{model_Id_1}\";\n String modelId2 = \"{model_Id_2}\";\n documentModelAdministrationAsyncClient.beginComposeDocumentModel(Arrays.asList(modelId1, modelId2)\n     )\n     // if polling operation completed, retrieve the final result.\n     .flatMap(AsyncPollResponse::getFinalResult)\n     .subscribe(documentModel -> {\n         System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n         System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n         documentModel.getDocumentTypes().forEach((key, documentTypeDetails) -> {\n             documentTypeDetails.getFieldSchema().forEach((field, documentFieldSchema) -> {\n                 System.out.printf(\"Field: %s\", field);\n                 System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n                 System.out.printf(\"Field confidence: %.2f\", documentTypeDetails.getFieldConfidence().get(field));\n             });\n         });\n     });\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the create composed model operation until it has completed, has failed,\n or has been cancelled. The completed operation returns the created <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"composed model\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails&text=DocumentModelDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginComposeDocumentModel(java.util.List<java.lang.String>,com.azure.ai.formrecognizer.documentanalysis.administration.models.ComposeDocumentModelOptions)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginComposeDocumentModel(List<String> componentModelIds, ComposeDocumentModelOptions composeDocumentModelOptions)"
  name: "beginComposeDocumentModel(List<String> componentModelIds, ComposeDocumentModelOptions composeDocumentModelOptions)"
  nameWithType: "DocumentModelAdministrationAsyncClient.beginComposeDocumentModel(List<String> componentModelIds, ComposeDocumentModelOptions composeDocumentModelOptions)"
  summary: "Create a composed model from the provided list of existing models in the account."
  parameters:
  - description: "The list of component models to compose."
    name: "componentModelIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "The configurable <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.ComposeDocumentModelOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass when\n creating a composed model."
    name: "composeDocumentModelOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.ComposeDocumentModelOptions?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.ComposeDocumentModelOptions&text=ComposeDocumentModelOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<OperationResult,DocumentModelDetails> beginComposeDocumentModel(List<String> componentModelIds, ComposeDocumentModelOptions composeDocumentModelOptions)"
  desc: "Create a composed model from the provided list of existing models in the account.\n\nThis operations fails if the list consists of an invalid, non-existing model Id or duplicate IDs.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString modelId1 = \"{model_Id_1}\";\n String modelId2 = \"{model_Id_2}\";\n String modelId = \"my-composed-model\";\n Map<String, String> attrs = new HashMap<String, String>();\n attrs.put(\"createdBy\", \"sample\");\n\n documentModelAdministrationAsyncClient.beginComposeDocumentModel(Arrays.asList(modelId1, modelId2),\n         new ComposeDocumentModelOptions()\n             .setModelId(modelId)\n             .setDescription(\"model-desc\")\n             .setTags(attrs))\n     // if polling operation completed, retrieve the final result.\n     .flatMap(AsyncPollResponse::getFinalResult)\n     .subscribe(documentModel -> {\n         System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n         System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n         System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n         System.out.printf(\"Model assigned tags: %s%n\", documentModel.getTags());\n         documentModel.getDocumentTypes().forEach((key, documentTypeDetails) -> {\n             documentTypeDetails.getFieldSchema().forEach((field, documentFieldSchema) -> {\n                 System.out.printf(\"Field: %s\", field);\n                 System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n                 System.out.printf(\"Field confidence: %.2f\", documentTypeDetails.getFieldConfidence().get(field));\n             });\n         });\n     });\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the create composed model operation until it has completed, has failed,\n or has been cancelled. The completed operation returns the copied model <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelDetails\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails&text=DocumentModelDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginCopyDocumentModelTo(java.lang.String,com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginCopyDocumentModelTo(String sourceModelId, DocumentModelCopyAuthorization target)"
  name: "beginCopyDocumentModelTo(String sourceModelId, DocumentModelCopyAuthorization target)"
  nameWithType: "DocumentModelAdministrationAsyncClient.beginCopyDocumentModelTo(String sourceModelId, DocumentModelCopyAuthorization target)"
  summary: "Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource."
  parameters:
  - description: "Model identifier of the source model to copy to target resource."
    name: "sourceModelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the copy authorization to the target Form Recognizer resource. The copy authorization can be\n generated from the target resource's call to <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getCopyAuthorization()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationAsyncClient#getCopyAuthorization()\"></xref>"
    name: "target"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization&text=DocumentModelCopyAuthorization\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PollerFlux<OperationResult,DocumentModelDetails> beginCopyDocumentModelTo(String sourceModelId, DocumentModelCopyAuthorization target)"
  desc: "Copy a custom model stored in this resource (the source) to the user specified target Form Recognizer resource.\n\nThis should be called with the source Form Recognizer resource (with the model that is intended to be copied). The target parameter should be supplied from the target resource's output from <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getCopyAuthorization()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationAsyncClient#getCopyAuthorization()\"></xref> method.\n\nThe service does not support cancellation of the long running operation and returns with an error message indicating absence of cancellation support.\n\n**Code sample**\n\n```java\nString copyModelId = \"copy-model\";\n // Get authorization to copy the model to target resource\n documentModelAdministrationAsyncClient.getCopyAuthorization()\n     // Start copy operation from the source client\n     // The ID of the model that needs to be copied to the target resource\n     .subscribe(copyAuthorization -> documentModelAdministrationAsyncClient.beginCopyDocumentModelTo(copyModelId,\n             copyAuthorization)\n         .filter(pollResponse -> pollResponse.getStatus().isComplete())\n         .flatMap(AsyncPollResponse::getFinalResult)\n         .subscribe(documentModel ->\n             System.out.printf(\"Copied model has model ID: %s, was created on: %s.%n,\",\n                 documentModel.getModelId(),\n                 documentModel.getCreatedOn())));\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.PollerFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PollerFlux\"></xref> that polls the copy model operation until it has completed, has failed,\n or has been cancelled. The completed operation returns the copied model <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelDetails\"></xref>."
    type: "<xref href=\"com.azure.core.util.polling.PollerFlux?alt=com.azure.core.util.polling.PollerFlux&text=PollerFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.models.OperationResult?alt=com.azure.ai.formrecognizer.documentanalysis.models.OperationResult&text=OperationResult\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails&text=DocumentModelDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.deleteDocumentModel(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.deleteDocumentModel(String modelId)"
  name: "deleteDocumentModel(String modelId)"
  nameWithType: "DocumentModelAdministrationAsyncClient.deleteDocumentModel(String modelId)"
  summary: "Deletes the specified custom document analysis model."
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteDocumentModel(String modelId)"
  desc: "Deletes the specified custom document analysis model.\n\n**Code sample**\n\n```java\nString modelId = \"{model_id}\";\n documentModelAdministrationAsyncClient.deleteDocumentModel(modelId)\n     .subscribe(ignored -> System.out.printf(\"Model ID: %s is deleted%n\", modelId));\n```"
  returns:
    description: "An empty Mono."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.deleteDocumentModelWithResponse(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.deleteDocumentModelWithResponse(String modelId)"
  name: "deleteDocumentModelWithResponse(String modelId)"
  nameWithType: "DocumentModelAdministrationAsyncClient.deleteDocumentModelWithResponse(String modelId)"
  summary: "Deletes the specified custom document analysis model."
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteDocumentModelWithResponse(String modelId)"
  desc: "Deletes the specified custom document analysis model.\n\n**Code sample**\n\n```java\nString modelId = \"{model_id}\";\n documentModelAdministrationAsyncClient.deleteDocumentModelWithResponse(modelId)\n     .subscribe(response -> {\n         System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n         System.out.printf(\"Model ID: %s is deleted.%n\", modelId);\n     });\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the status code and HTTP headers."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getCopyAuthorization()"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getCopyAuthorization()"
  name: "getCopyAuthorization()"
  nameWithType: "DocumentModelAdministrationAsyncClient.getCopyAuthorization()"
  summary: "Generate authorization for copying a custom document analysis model into the target Form Recognizer resource."
  syntax: "public Mono<DocumentModelCopyAuthorization> getCopyAuthorization()"
  desc: "Generate authorization for copying a custom document analysis model into the target Form Recognizer resource.\n\nThis should be called by the target resource (where the model will be copied to) and the output can be passed as the target parameter into <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginCopyDocumentModelTo(java.lang.String,com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationAsyncClient#beginCopyDocumentModelTo(String, DocumentModelCopyAuthorization)\"></xref>."
  returns:
    description: "The <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelCopyAuthorization\"></xref> that could be used to authorize copying model between resources."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization&text=DocumentModelCopyAuthorization\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getCopyAuthorizationWithResponse(com.azure.ai.formrecognizer.documentanalysis.administration.models.CopyAuthorizationOptions)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions)"
  name: "getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions)"
  nameWithType: "DocumentModelAdministrationAsyncClient.getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions)"
  summary: "Generate authorization for copying a custom document analysis model into the target Form Recognizer resource."
  parameters:
  - description: "The configurable <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.CopyAuthorizationOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"options\"></xref> to pass when\n copying a model.\n\n <p><strong>Code sample</strong></p>\n <!-- src_embed com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdminAsyncClient.getCopyAuthorizationWithResponse#Options -->\n <pre>\n String modelId = &quot;my-copied-model&quot;;\n Map&lt;String, String&gt; attrs = new HashMap&lt;String, String&gt;&#40;&#41;;\n attrs.put&#40;&quot;createdBy&quot;, &quot;sample&quot;&#41;;\n\n documentModelAdministrationAsyncClient.getCopyAuthorizationWithResponse&#40;\n         new CopyAuthorizationOptions&#40;&#41;\n             .setModelId&#40;modelId&#41;\n             .setDescription&#40;&quot;model desc&quot;&#41;\n             .setTags&#40;attrs&#41;&#41;\n     .subscribe&#40;copyAuthorization -&gt;\n         System.out.printf&#40;&quot;Copy Authorization response status: %s, for model id: %s, access token: %s, &quot;\n                 + &quot;expiration time: %s, target resource ID; %s, target resource region: %s%n&quot;,\n             copyAuthorization.getStatusCode&#40;&#41;,\n             copyAuthorization.getValue&#40;&#41;.getTargetModelId&#40;&#41;,\n             copyAuthorization.getValue&#40;&#41;.getAccessToken&#40;&#41;,\n             copyAuthorization.getValue&#40;&#41;.getExpiresOn&#40;&#41;,\n             copyAuthorization.getValue&#40;&#41;.getTargetResourceId&#40;&#41;,\n             copyAuthorization.getValue&#40;&#41;.getTargetResourceRegion&#40;&#41;\n         &#41;&#41;;\n </pre>\n <!-- end com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdminAsyncClient.getCopyAuthorizationWithResponse#Options -->"
    name: "copyAuthorizationOptions"
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.CopyAuthorizationOptions?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.CopyAuthorizationOptions&text=CopyAuthorizationOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<Response<DocumentModelCopyAuthorization>> getCopyAuthorizationWithResponse(CopyAuthorizationOptions copyAuthorizationOptions)"
  desc: "Generate authorization for copying a custom document analysis model into the target Form Recognizer resource.\n\nThis should be called by the target resource (where the model will be copied to) and the output can be passed as the target parameter into <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.beginCopyDocumentModelTo(java.lang.String,com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelAdministrationAsyncClient#beginCopyDocumentModelTo(String, DocumentModelCopyAuthorization)\"></xref>."
  returns:
    description: "The <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelCopyAuthorization\"></xref> that could be used to authorize copying model between resources."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelCopyAuthorization&text=DocumentModelCopyAuthorization\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getDocumentAnalysisAsyncClient()"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getDocumentAnalysisAsyncClient()"
  name: "getDocumentAnalysisAsyncClient()"
  nameWithType: "DocumentModelAdministrationAsyncClient.getDocumentAnalysisAsyncClient()"
  summary: "Creates a new <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentAnalysisAsyncClient\"></xref> object."
  syntax: "public DocumentAnalysisAsyncClient getDocumentAnalysisAsyncClient()"
  desc: "Creates a new <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentAnalysisAsyncClient\"></xref> object. The new `DocumentTrainingAsyncClient` uses the same request policy pipeline as the `DocumentTrainingAsyncClient`."
  returns:
    description: "A new <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentAnalysisAsyncClient\"></xref> object."
    type: "<xref href=\"com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient?alt=com.azure.ai.formrecognizer.documentanalysis.DocumentAnalysisAsyncClient&text=DocumentAnalysisAsyncClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getDocumentModel(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getDocumentModel(String modelId)"
  name: "getDocumentModel(String modelId)"
  nameWithType: "DocumentModelAdministrationAsyncClient.getDocumentModel(String modelId)"
  summary: "Get detailed information for a specified model ID."
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<DocumentModelDetails> getDocumentModel(String modelId)"
  desc: "Get detailed information for a specified model ID.\n\n**Code sample**\n\n```java\nString modelId = \"{model_id}\";\n documentModelAdministrationAsyncClient.getDocumentModel(modelId).subscribe(documentModel -> {\n     System.out.printf(\"Model ID: %s%n\", documentModel.getModelId());\n     System.out.printf(\"Model Description: %s%n\", documentModel.getDescription());\n     System.out.printf(\"Model Created on: %s%n\", documentModel.getCreatedOn());\n     documentModel.getDocumentTypes().forEach((key, documentTypeDetails) -> {\n         documentTypeDetails.getFieldSchema().forEach((field, documentFieldSchema) -> {\n             System.out.printf(\"Field: %s\", field);\n             System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n             System.out.printf(\"Field confidence: %.2f\", documentTypeDetails.getFieldConfidence().get(field));\n         });\n     });\n });\n```"
  returns:
    description: "The detailed information for the specified model."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails&text=DocumentModelDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getDocumentModelWithResponse(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getDocumentModelWithResponse(String modelId)"
  name: "getDocumentModelWithResponse(String modelId)"
  nameWithType: "DocumentModelAdministrationAsyncClient.getDocumentModelWithResponse(String modelId)"
  summary: "Get detailed information for a specified model ID with Http response."
  parameters:
  - description: "The unique model identifier."
    name: "modelId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<DocumentModelDetails>> getDocumentModelWithResponse(String modelId)"
  desc: "Get detailed information for a specified model ID with Http response.\n\n**Code sample**\n\n```java\nString modelId = \"{model_id}\";\n documentModelAdministrationAsyncClient.getDocumentModelWithResponse(modelId).subscribe(response -> {\n     System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n     DocumentModelDetails documentModelDetails = response.getValue();\n     System.out.printf(\"Model ID: %s%n\", documentModelDetails.getModelId());\n     System.out.printf(\"Model Description: %s%n\", documentModelDetails.getDescription());\n     System.out.printf(\"Model Created on: %s%n\", documentModelDetails.getCreatedOn());\n     documentModelDetails.getDocumentTypes().forEach((key, documentTypeDetails) -> {\n         documentTypeDetails.getFieldSchema().forEach((field, documentFieldSchema) -> {\n             System.out.printf(\"Field: %s\", field);\n             System.out.printf(\"Field type: %s\", documentFieldSchema.getType());\n             System.out.printf(\"Field confidence: %.2f\", documentTypeDetails.getFieldConfidence().get(field));\n         });\n     });\n });\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the requested <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"model\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelDetails&text=DocumentModelDetails\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getOperation(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getOperation(String operationId)"
  name: "getOperation(String operationId)"
  nameWithType: "DocumentModelAdministrationAsyncClient.getOperation(String operationId)"
  summary: "Get detailed operation information for the specified ID."
  parameters:
  - description: "Unique operation ID."
    name: "operationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<OperationDetails> getOperation(String operationId)"
  desc: "Get detailed operation information for the specified ID.\n\nThis operations fails if the operation ID used is past 24 hours.\n\n**Code sample**\n\n```java\nString operationId = \"{operation_Id}\";\n documentModelAdministrationAsyncClient.getOperation(operationId).subscribe(operationDetails -> {\n     System.out.printf(\"Operation ID: %s%n\", operationDetails.getOperationId());\n     System.out.printf(\"Operation Kind: %s%n\", operationDetails.getKind());\n     System.out.printf(\"Operation Status: %s%n\", operationDetails.getStatus());\n     System.out.printf(\"Model ID created with this operation: %s%n\",\n         ((DocumentModelBuildOperationDetails) operationDetails).getResult().getModelId());\n     if (OperationStatus.FAILED.equals(operationDetails.getStatus())) {\n         System.out.printf(\"Operation fail error: %s%n\", operationDetails.getError().getMessage());\n     }\n });\n```"
  returns:
    description: "detailed operation information for the specified ID."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationDetails&text=OperationDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getOperationWithResponse(java.lang.String)"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getOperationWithResponse(String operationId)"
  name: "getOperationWithResponse(String operationId)"
  nameWithType: "DocumentModelAdministrationAsyncClient.getOperationWithResponse(String operationId)"
  summary: "Get detailed operation information for the specified ID with Http response."
  parameters:
  - description: "Unique operation ID."
    name: "operationId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<OperationDetails>> getOperationWithResponse(String operationId)"
  desc: "Get detailed operation information for the specified ID with Http response.\n\nThis operations fails if the operation ID used is past 24 hours.\n\n**Code sample**\n\n```java\nString operationId = \"{operation_Id}\";\n documentModelAdministrationAsyncClient.getOperationWithResponse(operationId).subscribe(response -> {\n     System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n     OperationDetails operationDetails = response.getValue();\n     System.out.printf(\"Operation ID: %s%n\", operationDetails.getOperationId());\n     System.out.printf(\"Operation Kind: %s%n\", operationDetails.getKind());\n     System.out.printf(\"Operation Status: %s%n\", operationDetails.getStatus());\n     System.out.printf(\"Model ID created with this operation: %s%n\",\n         ((DocumentModelBuildOperationDetails) operationDetails).getResult().getModelId());\n     if (OperationStatus.FAILED.equals(operationDetails.getStatus())) {\n         System.out.printf(\"Operation fail error: %s%n\", operationDetails.getError().getMessage());\n     }\n });\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the requested <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationDetails\"></xref>."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationDetails&text=OperationDetails\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getResourceDetails()"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getResourceDetails()"
  name: "getResourceDetails()"
  nameWithType: "DocumentModelAdministrationAsyncClient.getResourceDetails()"
  summary: "Get information about the current Form Recognizer resource."
  syntax: "public Mono<ResourceDetails> getResourceDetails()"
  desc: "Get information about the current Form Recognizer resource.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationAsyncClient.getResourceDetails()\n     .subscribe(resourceInfo -> {\n         System.out.printf(\"Max number of models that can be build for this account: %d%n\",\n             resourceInfo.getCustomDocumentModelLimit());\n         System.out.printf(\"Current count of built document analysis models: %d%n\",\n             resourceInfo.getCustomDocumentModelCount());\n     });\n```"
  returns:
    description: "The requested resource information details."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.ResourceDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.ResourceDetails&text=ResourceDetails\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getResourceDetailsWithResponse()"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.getResourceDetailsWithResponse()"
  name: "getResourceDetailsWithResponse()"
  nameWithType: "DocumentModelAdministrationAsyncClient.getResourceDetailsWithResponse()"
  summary: "Get the information about the current Form Recognizer resource with a Http response."
  syntax: "public Mono<Response<ResourceDetails>> getResourceDetailsWithResponse()"
  desc: "Get the information about the current Form Recognizer resource with a Http response.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationAsyncClient.getResourceDetailsWithResponse()\n     .subscribe(response -> {\n         System.out.printf(\"Response Status Code: %d.\", response.getStatusCode());\n         ResourceDetails resourceDetails = response.getValue();\n         System.out.printf(\"Max number of models that can be build for this account: %d%n\",\n             resourceDetails.getCustomDocumentModelLimit());\n         System.out.printf(\"Current count of built document analysis models: %d%n\",\n             resourceDetails.getCustomDocumentModelCount());\n     });\n```"
  returns:
    description: "A <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref> containing the requested resource information details."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.ResourceDetails?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.ResourceDetails&text=ResourceDetails\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.listDocumentModels()"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.listDocumentModels()"
  name: "listDocumentModels()"
  nameWithType: "DocumentModelAdministrationAsyncClient.listDocumentModels()"
  summary: "List information for each model on the Form Recognizer account that were built successfully."
  syntax: "public PagedFlux<DocumentModelSummary> listDocumentModels()"
  desc: "List information for each model on the Form Recognizer account that were built successfully.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationAsyncClient.listDocumentModels()\n     .subscribe(documentModelInfo ->\n         System.out.printf(\"Model ID: %s, Model description: %s, Created on: %s.%n\",\n             documentModelInfo.getModelId(),\n             documentModelInfo.getDescription(),\n             documentModelInfo.getCreatedOn()));\n```"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelSummary\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DocumentModelSummary\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelSummary?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.DocumentModelSummary&text=DocumentModelSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.listOperations()"
  fullName: "com.azure.ai.formrecognizer.documentanalysis.administration.DocumentModelAdministrationAsyncClient.listOperations()"
  name: "listOperations()"
  nameWithType: "DocumentModelAdministrationAsyncClient.listOperations()"
  summary: "List information for each model operation on the Form Recognizer account in the past 24 hours."
  syntax: "public PagedFlux<OperationSummary> listOperations()"
  desc: "List information for each model operation on the Form Recognizer account in the past 24 hours.\n\n**Code sample**\n\n```java\ndocumentModelAdministrationAsyncClient.listOperations()\n     .subscribe(modelOperationSummary -> {\n         System.out.printf(\"Operation ID: %s%n\", modelOperationSummary.getOperationId());\n         System.out.printf(\"Operation Status: %s%n\", modelOperationSummary.getStatus());\n         System.out.printf(\"Operation Created on: %s%n\", modelOperationSummary.getCreatedOn());\n         System.out.printf(\"Operation Percent completed: %d%n\", modelOperationSummary.getPercentCompleted());\n         System.out.printf(\"Operation Kind: %s%n\", modelOperationSummary.getKind());\n         System.out.printf(\"Operation Last updated on: %s%n\", modelOperationSummary.getLastUpdatedOn());\n         System.out.printf(\"Operation resource location: %s%n\", modelOperationSummary.getResourceLocation());\n     });\n```"
  returns:
    description: "<xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref> of <xref uid=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationDetails\" data-throw-if-not-resolved=\"false\" data-raw-source=\"OperationDetails\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationSummary?alt=com.azure.ai.formrecognizer.documentanalysis.administration.models.OperationSummary&text=OperationSummary\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "This class provides an asynchronous client that contains model management operations that apply to Azure Form Recognizer. Operations allowed by the client are creating, building of custom document analysis models, deleting models, listing models, copying a custom-built model to another Form Recognizer account, composing models from component models, getting operation information and getting resource details.\n\n**Instantiating an asynchronous Document Model Administration Client**\n\n```java\nDocumentModelAdministrationAsyncClient documentModelAdministrationAsyncClient =\n     new DocumentModelAdministrationClientBuilder().buildAsyncClient();\n```"
metadata: {}
package: "com.azure.ai.formrecognizer.documentanalysis.administration"
artifact: com.azure:azure-ai-formrecognizer:4.0.0
