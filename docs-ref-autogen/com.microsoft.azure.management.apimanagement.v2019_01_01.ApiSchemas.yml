### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas"
name: "ApiSchemas"
nameWithType: "ApiSchemas"
summary: "Type representing Api<wbr>Schemas."
syntax: "public interface ApiSchemas extends SupportsCreating<SchemaContract.DefinitionStages.Blank>, HasInner<ApiSchemasInner>"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.deleteAsync(String resourceGroupName, String serviceName, String apiId, String schemaId, String ifMatch)"
  name: "deleteAsync(String resourceGroupName, String serviceName, String apiId, String schemaId, String ifMatch)"
  nameWithType: "ApiSchemas.deleteAsync(String resourceGroupName, String serviceName, String apiId, String schemaId, String ifMatch)"
  summary: "Deletes the schema configuration at the Api."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Schema identifier within an API. Must be unique in the current API Management service instance."
    name: "schemaId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName, String apiId, String schemaId, String ifMatch)"
  desc: "Deletes the schema configuration at the Api."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.getAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.getAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  name: "getAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  nameWithType: "ApiSchemas.getAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  summary: "Get the schema configuration at the API level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Schema identifier within an API. Must be unique in the current API Management service instance."
    name: "schemaId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<SchemaContract> getAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  desc: "Get the schema configuration at the API level."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.SchemaContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.SchemaContract&text=SchemaContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  name: "getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  nameWithType: "ApiSchemas.getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  summary: "Gets the entity state (Etag) version of the schema specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Schema identifier within an API. Must be unique in the current API Management service instance."
    name: "schemaId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable getEntityTagAsync(String resourceGroupName, String serviceName, String apiId, String schemaId)"
  desc: "Gets the entity state (Etag) version of the schema specified by its identifier."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.listByApiAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.ApiSchemas.listByApiAsync(String resourceGroupName, String serviceName, String apiId)"
  name: "listByApiAsync(String resourceGroupName, String serviceName, String apiId)"
  nameWithType: "ApiSchemas.listByApiAsync(String resourceGroupName, String serviceName, String apiId)"
  summary: "Get the schema configuration at the API level."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number."
    name: "apiId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<SchemaContract> listByApiAsync(String resourceGroupName, String serviceName, String apiId)"
  desc: "Get the schema configuration at the API level."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.SchemaContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.SchemaContract&text=SchemaContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing ApiSchemas."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.SchemaContract.DefinitionStages.Blank?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.SchemaContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiSchemasInner?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.ApiSchemasInner&text=ApiSchemasInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
