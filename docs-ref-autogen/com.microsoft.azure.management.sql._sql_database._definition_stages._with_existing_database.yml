### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_existing_database
  id: _with_existing_database
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_existing_database.yml
  langs:
  - java
  name: SqlDatabase.DefinitionStages.WithExistingDatabase
  nameWithType: SqlDatabase.DefinitionStages.WithExistingDatabase
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithExistingDatabase
  type: Interface
  source:
    remote:
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
      branch: 880e2022bf46b71f481107effb7c878a9ae065dd
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlDatabase.java
    startLine: 227
  package: com.microsoft.azure.management.sql
  summary: <p>The stage to decide whether using existing database or not. </p>
  syntax:
    content: public interface WithExistingDatabase extends SqlDatabase.DefinitionStages.WithSourceDatabaseId,SqlDatabase.DefinitionStages.WithCreateWithElasticPoolOptions
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation.withCollation(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes.withMaxSizeBytes(long)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(String)
  - com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(SqlDatabase)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
references:
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: T com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: >-
    <p>Execute the create request.</p>

    <p></p>
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: ServiceFuture<T> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: Observable<Indexable> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model._indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model._indexable
  href: com.microsoft.azure.management.resources.fluentcore.model._indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: String com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name
  href: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.yml
  name: name()
  nameWithType: HasName.name()
  fullName: String com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation.withCollation(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_collation.yml
  name: withCollation(String collation)
  nameWithType: SqlDatabase.DefinitionStages.WithCollation.withCollation(String collation)
  fullName: WithCreateWithElasticPoolOptions com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCollation.withCollation(String collation)
  type: Method
  summary: >-
    <p>Sets the collation for the SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreateWithElasticPoolOptions withCollation(String collation)
    parameters:
    - id: collation
      type: "26831127"
      description: <p>collation to be set for database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_10bc4708abcb4329797609a637014aad4
      description: <p>The next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes.withMaxSizeBytes(long)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_max_size_bytes.yml
  name: withMaxSizeBytes(long maxSizeBytes)
  nameWithType: SqlDatabase.DefinitionStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  fullName: WithCreateWithElasticPoolOptions com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithMaxSizeBytes.withMaxSizeBytes(long maxSizeBytes)
  type: Method
  summary: >-
    <p>Sets the max size in bytes for SQL Database.</p>

    <p></p>
  syntax:
    content: public WithCreateWithElasticPoolOptions withMaxSizeBytes(long maxSizeBytes)
    parameters:
    - id: maxSizeBytes
      type: 0364520f
      description: '<p>max size of the <xref uid="com.microsoft.azure.management._azure" data-throw-if-not-resolved="false">Azure</xref> SQL Database expressed in bytes. Note: Only the following sizes are supported (in addition to limitations being placed on each edition): { 100 MB | 500 MB |1 GB | 5 GB | 10 GB | 20 GB | 30 GB â€¦ 150 GB | 200 GB â€¦ 500 GB } </p>'
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages_10bc4708abcb4329797609a637014aad4
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(String)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.yml
  name: withSourceDatabase(String sourceDatabaseId)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String sourceDatabaseId)
  fullName: WithCreateMode com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(String sourceDatabaseId)
  type: Method
  summary: >-
    <p>Sets the resource if of source database for the SQL Database. Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>

    <p></p>
  syntax:
    content: public WithCreateMode withSourceDatabase(String sourceDatabaseId)
    parameters:
    - id: sourceDatabaseId
      type: "26831127"
      description: <p>id of the source database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.withSourceDatabase(SqlDatabase)
  parent: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.yml
  name: withSourceDatabase(SqlDatabase sourceDatabase)
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase sourceDatabase)
  fullName: WithCreateMode com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId.withSourceDatabase(SqlDatabase sourceDatabase)
  type: Method
  summary: >-
    <p>Sets the resource if of source database for the SQL Database. Collation, Edition, and MaxSizeBytes must remain the same while the link is active. Values specified for these parameters will be ignored.</p>

    <p></p>
  syntax:
    content: public WithCreateMode withSourceDatabase(SqlDatabase sourceDatabase)
    parameters:
    - id: sourceDatabase
      type: com.microsoft.azure.management.sql._sql_database
      description: <p>instance of the source database </p>
    return:
      type: com.microsoft.azure.management.sql._sql_database._definition_stages._with_create_mode
      description: <p>The next stage of the definition. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: <p>Adds a tag to the resource. </p>
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: <p>Specifies tags for the resource as a <xref uid="" data-throw-if-not-resolved="false">Map</xref>. </p>
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false">Map</xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages._with_source_database_id.yml
  name: SqlDatabase.DefinitionStages.WithSourceDatabaseId
  nameWithType: SqlDatabase.DefinitionStages.WithSourceDatabaseId
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithSourceDatabaseId
  type: Interface
  summary: <p>The SQL Database definition to set the source database id for database. </p>
  syntax:
    content: public interface WithSourceDatabaseId
- uid: com.microsoft.azure.management.sql._sql_database._definition_stages_10bc4708abcb4329797609a637014aad4
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql._sql_database._definition_stages_10bc4708abcb4329797609a637014aad4.yml
  name: SqlDatabase.DefinitionStages.WithCreateWithElasticPoolOptions
  nameWithType: SqlDatabase.DefinitionStages.WithCreateWithElasticPoolOptions
  fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithCreateWithElasticPoolOptions
  type: Interface
  syntax:
    content: public interface WithCreateWithElasticPoolOptions extends SqlDatabase.DefinitionStages.WithCollation,SqlDatabase.DefinitionStages.WithMaxSizeBytes,SqlDatabase.DefinitionStages.WithCreateWithLessOptions
