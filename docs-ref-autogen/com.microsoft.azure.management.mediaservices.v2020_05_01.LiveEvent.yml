### YamlMime:JavaType
uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent"
fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent"
name: "LiveEvent"
nameWithType: "LiveEvent"
summary: "Type representing Live<wbr>Event."
syntax: "public interface LiveEvent extends HasInner<LiveEventInner>, Indexable, Refreshable<LiveEvent>, Updatable<LiveEvent.Update>, HasManager<MediaManager>"
methods:
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.created()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.created()"
  name: "created()"
  nameWithType: "LiveEvent.created()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime created()"
  returns:
    description: "the created value."
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.crossSiteAccessPolicies()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.crossSiteAccessPolicies()"
  name: "crossSiteAccessPolicies()"
  nameWithType: "LiveEvent.crossSiteAccessPolicies()"
  modifiers:
  - "abstract"
  syntax: "public abstract CrossSiteAccessPolicies crossSiteAccessPolicies()"
  returns:
    description: "the crossSiteAccessPolicies value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.CrossSiteAccessPolicies?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.CrossSiteAccessPolicies&text=CrossSiteAccessPolicies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.description()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.description()"
  name: "description()"
  nameWithType: "LiveEvent.description()"
  modifiers:
  - "abstract"
  syntax: "public abstract String description()"
  returns:
    description: "the description value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.encoding()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.encoding()"
  name: "encoding()"
  nameWithType: "LiveEvent.encoding()"
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventEncoding encoding()"
  returns:
    description: "the encoding value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventEncoding?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventEncoding&text=LiveEventEncoding\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.hostnamePrefix()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.hostnamePrefix()"
  name: "hostnamePrefix()"
  nameWithType: "LiveEvent.hostnamePrefix()"
  modifiers:
  - "abstract"
  syntax: "public abstract String hostnamePrefix()"
  returns:
    description: "the hostnamePrefix value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.id()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.id()"
  name: "id()"
  nameWithType: "LiveEvent.id()"
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.input()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.input()"
  name: "input()"
  nameWithType: "LiveEvent.input()"
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventInput input()"
  returns:
    description: "the input value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventInput?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventInput&text=LiveEventInput\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.lastModified()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.lastModified()"
  name: "lastModified()"
  nameWithType: "LiveEvent.lastModified()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime lastModified()"
  returns:
    description: "the lastModified value."
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.location()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.location()"
  name: "location()"
  nameWithType: "LiveEvent.location()"
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "the location value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.name()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.name()"
  name: "name()"
  nameWithType: "LiveEvent.name()"
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.preview()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.preview()"
  name: "preview()"
  nameWithType: "LiveEvent.preview()"
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventPreview preview()"
  returns:
    description: "the preview value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventPreview&text=LiveEventPreview\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.provisioningState()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.provisioningState()"
  name: "provisioningState()"
  nameWithType: "LiveEvent.provisioningState()"
  modifiers:
  - "abstract"
  syntax: "public abstract String provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.resourceState()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.resourceState()"
  name: "resourceState()"
  nameWithType: "LiveEvent.resourceState()"
  modifiers:
  - "abstract"
  syntax: "public abstract LiveEventResourceState resourceState()"
  returns:
    description: "the resourceState value."
    type: "<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventResourceState?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventResourceState&text=LiveEventResourceState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.streamOptions()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.streamOptions()"
  name: "streamOptions()"
  nameWithType: "LiveEvent.streamOptions()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<StreamOptionsFlag> streamOptions()"
  returns:
    description: "the streamOptions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.StreamOptionsFlag?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.StreamOptionsFlag&text=StreamOptionsFlag\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.tags()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.tags()"
  name: "tags()"
  nameWithType: "LiveEvent.tags()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "the tags value."
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.transcriptions()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.transcriptions()"
  name: "transcriptions()"
  nameWithType: "LiveEvent.transcriptions()"
  modifiers:
  - "abstract"
  syntax: "public abstract List<LiveEventTranscription> transcriptions()"
  returns:
    description: "the transcriptions value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventTranscription?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEventTranscription&text=LiveEventTranscription\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.type()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.type()"
  name: "type()"
  nameWithType: "LiveEvent.type()"
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.useStaticHostname()"
  fullName: "com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.useStaticHostname()"
  name: "useStaticHostname()"
  nameWithType: "LiveEvent.useStaticHostname()"
  modifiers:
  - "abstract"
  syntax: "public abstract Boolean useStaticHostname()"
  returns:
    description: "the useStaticHostname value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Type representing LiveEvent."
implements:
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.LiveEventInner&text=LiveEventInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.Indexable?alt=com.microsoft.azure.arm.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.arm.model.Refreshable?alt=com.microsoft.azure.arm.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent&text=LiveEvent\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.Updatable?alt=com.microsoft.azure.arm.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.Update?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.LiveEvent.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.resources.models.HasManager?alt=com.microsoft.azure.arm.resources.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.MediaManager?alt=com.microsoft.azure.management.mediaservices.v2020_05_01.implementation.MediaManager&text=MediaManager\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.mediaservices.v2020_05_01"
artifact: com.microsoft.azure.mediaservices.v2020_05_01:azure-mgmt-media:1.0.0-beta
