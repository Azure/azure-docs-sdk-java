### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse*"
fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse"
name: "uploadFromFileWithResponse"
nameWithType: "EncryptedBlobClient.uploadFromFileWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse(com.azure.storage.blob.options.BlobUploadFromFileOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.cryptography.EncryptedBlobClient.uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  name: "uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  nameWithType: "EncryptedBlobClient.uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  summary: "Creates a new block blob, or updates the content of an existing block blob.\n\n**Code Samples**\n\n```java\nBlobHttpHeaders headers = new BlobHttpHeaders()\n     .setContentMd5(\"data\".getBytes(StandardCharsets.UTF_8))\n     .setContentLanguage(\"en-US\")\n     .setContentType(\"binary\");\n \n Map<String, String> metadata = new HashMap<>(Collections.singletonMap(\"metadata\", \"value\"));\n Map<String, String> tags = new HashMap<>(Collections.singletonMap(\"tag\", \"value\"));\n BlobRequestConditions requestConditions = new BlobRequestConditions()\n     .setLeaseId(leaseId)\n     .setIfUnmodifiedSince(OffsetDateTime.now().minusDays(3));\n long blockSize = 100 * 1024 * 1024; // 100 MB;\n ParallelTransferOptions parallelTransferOptions = new ParallelTransferOptions().setBlockSizeLong(blockSize);\n \n try {\n     client.uploadFromFileWithResponse(new BlobUploadFromFileOptions(filePath)\n         .setParallelTransferOptions(parallelTransferOptions).setHeaders(headers).setMetadata(metadata)\n         .setTags(tags).setTier(AccessTier.HOT).setRequestConditions(requestConditions), timeout,\n         Context.NONE);\n     System.out.println(\"Upload from file succeeded\");\n } catch (UncheckedIOException ex) {\n     System.err.printf(\"Failed to upload from file %s%n\", ex.getMessage());\n }\n```"
  overridden: "com.azure.storage.blob.BlobClient.uploadFromFileWithResponse(com.azure.storage.blob.options.BlobUploadFromFileOptions,java.time.Duration,com.azure.core.util.Context)"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlobUploadFromFileOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlobUploadFromFileOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlobUploadFromFileOptions?alt=com.azure.storage.blob.options.BlobUploadFromFileOptions&text=BlobUploadFromFileOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlockBlobItem> uploadFromFileWithResponse(BlobUploadFromFileOptions options, Duration timeout, Context context)"
  exceptions:
  - description: "If an I/O error occurs"
    type: "<xref href=\"java.io.UncheckedIOException?alt=java.io.UncheckedIOException&text=UncheckedIOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "Information about the uploaded block blob."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockBlobItem?alt=com.azure.storage.blob.models.BlockBlobItem&text=BlockBlobItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized.cryptography"
artifact: com.azure:azure-storage-blob-cryptography:12.9.0
