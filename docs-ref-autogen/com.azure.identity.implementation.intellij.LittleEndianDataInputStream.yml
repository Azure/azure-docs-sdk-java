### YamlMime:JavaType
uid: "com.azure.identity.implementation.intellij.LittleEndianDataInputStream"
fullName: "com.azure.identity.implementation.intellij.LittleEndianDataInputStream"
name: "LittleEndianDataInputStream"
nameWithType: "LittleEndianDataInputStream"
summary: "An implementation of <xref uid=\"java.io.DataInput\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataInput\"></xref> that uses little-endian byte ordering for reading `short`, `int`, `float`, `double`, and `long` values.\n\n**Note:** This class intentionally violates the specification of its supertype `DataInput`, which explicitly requires big-endian byte order."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.InputStream\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.io.FilterInputStream\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.io.FilterInputStream.available()"
- "java.io.FilterInputStream.close()"
- "java.io.FilterInputStream.mark(int)"
- "java.io.FilterInputStream.markSupported()"
- "java.io.FilterInputStream.read()"
- "java.io.FilterInputStream.read(byte[])"
- "java.io.FilterInputStream.read(byte[],int,int)"
- "java.io.FilterInputStream.reset()"
- "java.io.FilterInputStream.skip(long)"
- "java.io.InputStream.nullInputStream()"
- "java.io.InputStream.readAllBytes()"
- "java.io.InputStream.readNBytes(byte[],int,int)"
- "java.io.InputStream.readNBytes(int)"
- "java.io.InputStream.transferTo(java.io.OutputStream)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LittleEndianDataInputStream extends FilterInputStream implements DataInput"
constructors:
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.LittleEndianDataInputStream(java.io.InputStream)"
methods:
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.bytesToLong(byte...)"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.read(java.io.InputStream,byte[],int,int)"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readBoolean()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readByte()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readChar()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readDouble()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readFloat()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readFully(byte[])"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readFully(byte[],int,int)"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readInt()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readLine()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readLong()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readShort()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readUTF()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readUnsignedByte()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readUnsignedShort()"
- "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.skipBytes(int)"
type: "class"
implements:
- "<xref href=\"java.io.DataInput?alt=java.io.DataInput&text=DataInput\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.azure.identity.implementation.intellij"
artifact: com.azure:azure-identity:1.4.1
