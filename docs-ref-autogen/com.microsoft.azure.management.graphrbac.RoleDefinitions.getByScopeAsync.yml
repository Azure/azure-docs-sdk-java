### YamlMime:JavaMember
nameWithType: RoleDefinitions.getByScopeAsync
type: method
members:
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(String scope, String name)
  name: getByScopeAsync(String scope, String name)
  nameWithType: RoleDefinitions.getByScopeAsync(String scope, String name)
  parameters:
  - description: <p>the scope of the role definition </p>
    name: scope
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the role definition </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the role definition </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the information about a role definition based on scope and name.</p>

    <p></p>
  syntax: public Observable<RoleDefinition> getByScopeAsync(String scope, String name)
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(String,String)
- fullName: com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)
  name: getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)
  nameWithType: RoleDefinitions.getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)
  parameters:
  - description: <p>the scope of the role definition </p>
    name: scope
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the role definition </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback when the operation finishes </p>
    name: callback
    type: ServiceCallback&lt;<xref href="com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>an immutable representation of the role definition </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.graphrbac.RoleDefinition?alt=com.microsoft.azure.management.graphrbac.RoleDefinition&text=RoleDefinition" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the information about a role definition based on scope and name.</p>

    <p></p>
  syntax: public ServiceFuture<RoleDefinition> getByScopeAsync(String scope, String name, ServiceCallback<RoleDefinition> callback)
  uid: com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(String,String,ServiceCallback<RoleDefinition>)
uid: com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync*
fullName: com.microsoft.azure.management.graphrbac.RoleDefinitions.getByScopeAsync(String scope, String name)
name: getByScopeAsync(String scope, String name)
package: com.microsoft.azure.management.graphrbac
metadata: {}
