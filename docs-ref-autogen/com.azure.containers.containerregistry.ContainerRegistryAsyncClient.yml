### YamlMime:JavaType
uid: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient"
fullName: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient"
name: "ContainerRegistryAsyncClient"
nameWithType: "ContainerRegistryAsyncClient"
summary: "This class provides a client that exposes operations to managing container images and artifacts."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **ContainerRegistryAsyncClient**"
methods:
- uid: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.deleteRepository(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.deleteRepository(String repositoryName)"
  name: "deleteRepository(String repositoryName)"
  nameWithType: "ContainerRegistryAsyncClient.deleteRepository(String repositoryName)"
  summary: "Delete the repository identified by `repositoryName`."
  parameters:
  - description: "Name of the image (including the namespace)."
    name: "repositoryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Void> deleteRepository(String repositoryName)"
  desc: "Delete the repository identified by `repositoryName`.\n\n**Delete a repository in the registry.**\n\n```java\nclient.deleteRepository(repositoryName).subscribe(response -> {\n     System.out.printf(\"Successfully initiated delete of the repository.\");\n }, error -> {\n     System.out.println(\"Failed to initiate a delete of the repository.\");\n });\n```"
  returns:
    description: "the completion stream."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.deleteRepositoryWithResponse(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.deleteRepositoryWithResponse(String repositoryName)"
  name: "deleteRepositoryWithResponse(String repositoryName)"
  nameWithType: "ContainerRegistryAsyncClient.deleteRepositoryWithResponse(String repositoryName)"
  summary: "Delete the repository identified by 'repository<wbr>Name'."
  parameters:
  - description: "Name of the repository (including the namespace)."
    name: "repositoryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Mono<Response<Void>> deleteRepositoryWithResponse(String repositoryName)"
  desc: "Delete the repository identified by 'repositoryName'.\n\n**Delete a repository in the registry.**\n\n```java\nclient.deleteRepositoryWithResponse(repositoryName).subscribe(response -> {\n     System.out.printf(\"Successfully initiated delete of the repository.\");\n }, error -> {\n     System.out.println(\"Failed to initiate a delete of the repository.\");\n });\n```"
  returns:
    description: "the completion."
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;&gt;"
- uid: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getArtifact(java.lang.String,java.lang.String)"
  fullName: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getArtifact(String repositoryName, String tagOrDigest)"
  name: "getArtifact(String repositoryName, String tagOrDigest)"
  nameWithType: "ContainerRegistryAsyncClient.getArtifact(String repositoryName, String tagOrDigest)"
  summary: "Creates a new instance of <xref uid=\"com.azure.containers.containerregistry.RegistryArtifactAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RegistryArtifactAsync\"></xref> object for the specified artifact."
  parameters:
  - description: "Name of the repository to reference."
    name: "repositoryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Either a tag or digest that uniquely identifies the artifact."
    name: "tagOrDigest"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public RegistryArtifactAsync getArtifact(String repositoryName, String tagOrDigest)"
  desc: "Creates a new instance of <xref uid=\"com.azure.containers.containerregistry.RegistryArtifactAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RegistryArtifactAsync\"></xref> object for the specified artifact.\n\n**Create an instance of RegistryArtifactAsync helper type**\n\n```java\nRegistryArtifactAsync registryArtifactAsync = client.getArtifact(repositoryName, tagOrDigest);\n registryArtifactAsync.getManifestProperties().subscribe(properties -> {\n     System.out.println(properties.getDigest());\n });\n```"
  returns:
    description: "A new <xref uid=\"com.azure.containers.containerregistry.RegistryArtifactAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RegistryArtifactAsync\"></xref> for the desired repository."
    type: "<xref href=\"com.azure.containers.containerregistry.RegistryArtifactAsync?alt=com.azure.containers.containerregistry.RegistryArtifactAsync&text=RegistryArtifactAsync\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getEndpoint()"
  fullName: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getEndpoint()"
  name: "getEndpoint()"
  nameWithType: "ContainerRegistryAsyncClient.getEndpoint()"
  summary: "This method returns the complete registry endpoint."
  syntax: "public String getEndpoint()"
  desc: "This method returns the complete registry endpoint."
  returns:
    description: "The registry endpoint including the authority."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getRepository(java.lang.String)"
  fullName: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getRepository(String repositoryName)"
  name: "getRepository(String repositoryName)"
  nameWithType: "ContainerRegistryAsyncClient.getRepository(String repositoryName)"
  summary: "Creates a new instance of <xref uid=\"com.azure.containers.containerregistry.ContainerRepositoryAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContainerRepositoryAsync\"></xref> object for the specified repository."
  parameters:
  - description: "Name of the repository to reference."
    name: "repositoryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public ContainerRepositoryAsync getRepository(String repositoryName)"
  desc: "Creates a new instance of <xref uid=\"com.azure.containers.containerregistry.ContainerRepositoryAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContainerRepositoryAsync\"></xref> object for the specified repository.\n\n**Create an instance of ContainerRepositoryAsync helper type**\n\n```java\nContainerRepositoryAsync repositoryAsync = client.getRepository(repositoryName);\n repositoryAsync.getProperties().subscribe(properties -> {\n     System.out.println(properties.getName());\n });\n```"
  returns:
    description: "A new <xref uid=\"com.azure.containers.containerregistry.ContainerRepositoryAsync\" data-throw-if-not-resolved=\"false\" data-raw-source=\"ContainerRepositoryAsync\"></xref> for the desired repository."
    type: "<xref href=\"com.azure.containers.containerregistry.ContainerRepositoryAsync?alt=com.azure.containers.containerregistry.ContainerRepositoryAsync&text=ContainerRepositoryAsync\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.listRepositoryNames()"
  fullName: "com.azure.containers.containerregistry.ContainerRegistryAsyncClient.listRepositoryNames()"
  name: "listRepositoryNames()"
  nameWithType: "ContainerRegistryAsyncClient.listRepositoryNames()"
  summary: "List all the repository names in this registry."
  syntax: "public PagedFlux<String> listRepositoryNames()"
  desc: "List all the repository names in this registry.\n\n**List repository names in the registry.**\n\n```java\nclient.listRepositoryNames().subscribe(name -> {\n     System.out.printf(\"Repository Name:%s,\", name);\n });\n```"
  returns:
    description: "list of repository names."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
type: "class"
desc: "This class provides a client that exposes operations to managing container images and artifacts. It exposes methods directly performed on the registry like listing the catalog. as well as helper types like <xref uid=\"com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getArtifact(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getArtifact\"></xref> and <xref uid=\"com.azure.containers.containerregistry.ContainerRegistryAsyncClient.getRepository(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"getRepository\"></xref> that can be used to perform operations on repository and artifacts directly.\n\n**Instantiating an asynchronous Container Registry client**\n\n```java\nContainerRegistryAsyncClient registryAsyncClient = new ContainerRegistryClientBuilder()\n     .endpoint(endpoint)\n     .credential(credential)\n     .audience(ContainerRegistryAudience.AZURE_RESOURCE_MANAGER_PUBLIC_CLOUD)\n     .buildAsyncClient();\n```\n\n**Instantiating an asynchronous Container Registry client using a custom pipeline**\n\n```java\nHttpPipeline pipeline = new HttpPipelineBuilder()\n     .policies(/* add policies */)\n     .build();\n\n ContainerRegistryAsyncClient registryAsyncClient = new ContainerRegistryClientBuilder()\n     .pipeline(pipeline)\n     .endpoint(endpoint)\n     .audience(ContainerRegistryAudience.AZURE_RESOURCE_MANAGER_PUBLIC_CLOUD)\n     .credential(credential)\n     .buildAsyncClient();\n```\n\nView <xref uid=\"com.azure.containers.containerregistry.ContainerRegistryClientBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"this\"></xref> for additional ways to construct the client."
metadata: {}
package: "com.azure.containers.containerregistry"
artifact: com.azure:azure-containers-containerregistry:1.0.14
