### YamlMime:JavaMember
nameWithType: SaslHandler.handleChallenge
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge(byte[] saslChallenge)
  name: handleChallenge(byte[] saslChallenge)
  nameWithType: SaslHandler.handleChallenge(byte[] saslChallenge)
  parameters:
  - description: <p>The bytes from the Sasl challenge received from the service </p>
    name: saslChallenge
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="Exception?alt=Exception&text=Exception" data-throw-if-not-resolved="False"/>
    description: <p>if sasl negotiation fails </p>
  returns:
    description: <p>the bytes to be sent in the payload of the Sasl response to the provided challenge </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Handles a given challenge and returns the bytes to be sent in the payload of the Sasl response message </p>
  syntax: public byte [] handleChallenge(byte[] saslChallenge)
  uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge(byte [])
uid: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge*
fullName: com.microsoft.azure.sdk.iot.deps.transport.amqp.SaslHandler.handleChallenge
name: handleChallenge(byte[] saslChallenge)
package: com.microsoft.azure.sdk.iot.deps.transport.amqp
metadata: {}
