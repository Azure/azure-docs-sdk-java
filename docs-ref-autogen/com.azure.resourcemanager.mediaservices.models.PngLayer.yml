### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.PngLayer"
fullName: "com.azure.resourcemanager.mediaservices.models.PngLayer"
name: "PngLayer"
nameWithType: "PngLayer"
summary: "Describes the settings to produce a PNG image from the input video."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.mediaservices.models.Layer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.resourcemanager.mediaservices.models.Layer.height()"
- "com.azure.resourcemanager.mediaservices.models.Layer.label()"
- "com.azure.resourcemanager.mediaservices.models.Layer.validate()"
- "com.azure.resourcemanager.mediaservices.models.Layer.width()"
- "com.azure.resourcemanager.mediaservices.models.Layer.withHeight(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Layer.withLabel(java.lang.String)"
- "com.azure.resourcemanager.mediaservices.models.Layer.withWidth(java.lang.String)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class PngLayer extends Layer"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.PngLayer.PngLayer()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PngLayer.PngLayer()"
  name: "PngLayer()"
  nameWithType: "PngLayer.PngLayer()"
  syntax: "public PngLayer()"
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.PngLayer.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.PngLayer.validate()"
  name: "validate()"
  nameWithType: "PngLayer.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.mediaservices.models.Layer.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.PngLayer.withHeight(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PngLayer.withHeight(String height)"
  name: "withHeight(String height)"
  nameWithType: "PngLayer.withHeight(String height)"
  summary: "Set the height property: The height of the output video for this layer."
  overridden: "com.azure.resourcemanager.mediaservices.models.Layer.withHeight(java.lang.String)"
  parameters:
  - name: "height"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PngLayer withHeight(String height)"
  desc: "Set the height property: The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PngLayer?alt=com.azure.resourcemanager.mediaservices.models.PngLayer&text=PngLayer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PngLayer.withLabel(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PngLayer.withLabel(String label)"
  name: "withLabel(String label)"
  nameWithType: "PngLayer.withLabel(String label)"
  summary: "Set the label property: The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
  overridden: "com.azure.resourcemanager.mediaservices.models.Layer.withLabel(java.lang.String)"
  parameters:
  - name: "label"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PngLayer withLabel(String label)"
  desc: "Set the label property: The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PngLayer?alt=com.azure.resourcemanager.mediaservices.models.PngLayer&text=PngLayer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.PngLayer.withWidth(java.lang.String)"
  fullName: "com.azure.resourcemanager.mediaservices.models.PngLayer.withWidth(String width)"
  name: "withWidth(String width)"
  nameWithType: "PngLayer.withWidth(String width)"
  summary: "Set the width property: The width of the output video for this layer."
  overridden: "com.azure.resourcemanager.mediaservices.models.Layer.withWidth(java.lang.String)"
  parameters:
  - name: "width"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PngLayer withWidth(String width)"
  desc: "Set the width property: The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.PngLayer?alt=com.azure.resourcemanager.mediaservices.models.PngLayer&text=PngLayer\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes the settings to produce a PNG image from the input video."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.1.0
