### YamlMime:JavaPackage
uid: "com.azure.data.schemaregistry.apacheavro"
fullName: "com.azure.data.schemaregistry.apacheavro"
name: "com.azure.data.schemaregistry.apacheavro"
summary: "<p>Microsoft Azure client library for Schema Registry Apache Avro Serializer provides support for serializing and\n deserializing Apache Avro objects with schemas stored in\n <a href=\"https://learn.microsoft.com/azure/event-hubs/schema-registry-overview\">Azure Schema Registry</a>."
classes:
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroException"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer"
- "com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializerBuilder"
desc: "<p>Microsoft Azure client library for Schema Registry Apache Avro Serializer provides support for serializing and\n deserializing Apache Avro objects with schemas stored in\n <a href=\"https://learn.microsoft.com/azure/event-hubs/schema-registry-overview\">Azure Schema Registry</a>.\n\n <h2>Key Concepts</h2>\n\n <ul>\n     <li><strong>Schema:</strong>  Text describing the how to deserialize and serialize an object.</li>\n     <li><strong>Schema Registry:</strong>  Centralized location for event producers and consumers to fetch schemas\n     used to serialize and deserialized structured data.</li>\n     <li><strong><a href=\"https://avro.apache.org/\">Apache Avro</a>:</strong>  Serialization format for data.</li>\n </ul>\n\n <h2>Getting Started</h2>\n\n <p>The starting point for creating clients is via builders.  The examples shown in this document use a credential\n object named DefaultAzureCredential for authentication, which is appropriate for most scenarios, including local\n development and production environments. Additionally, we recommend using\n <a href=\"https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\">managed identity</a>\n for authentication in production environments.  You can find more information on different ways of authenticating\n and their corresponding credential types in the\n <a href=\"https://learn.microsoft.com/java/api/overview/azure/identity-readme\">Azure Identity documentation\"</a>.</p>\n\n <p><strong>Sample: Construct the serializer</strong></p>\n\n <p>The following code demonstrates the creation of\n <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer\"></xref>. The credential used is\n <code>DefaultAzureCredential</code> because it combines commonly used credentials in deployment and development and\n chooses the credential to used based on its running environment.</p>\n\n <!-- src_embed com.azure.data.schemaregistry.apacheavro.schemaregistryapacheavroserializer.construct -->\n <pre>\n TokenCredential tokenCredential = new DefaultAzureCredentialBuilder&#40;&#41;.build&#40;&#41;;\n SchemaRegistryAsyncClient schemaRegistryAsyncClient = new SchemaRegistryClientBuilder&#40;&#41;\n     .credential&#40;tokenCredential&#41;\n     .fullyQualifiedNamespace&#40;&quot;&#123;schema-registry-endpoint&#125;&quot;&#41;\n     .buildAsyncClient&#40;&#41;;\n\n SchemaRegistryApacheAvroSerializer serializer = new SchemaRegistryApacheAvroSerializerBuilder&#40;&#41;\n     .schemaRegistryClient&#40;schemaRegistryAsyncClient&#41;\n     .schemaGroup&#40;&quot;&#123;schema-group&#125;&quot;&#41;\n     .buildSerializer&#40;&#41;;\n </pre>\n <!-- end com.azure.data.schemaregistry.apacheavro.schemaregistryapacheavroserializer.construct -->\n\n <p><strong>Sample: Serialize an object</strong></p>\n\n <p>The serializer can serialize objects into any class extending from <xref uid=\"com.azure.core.models.MessageContent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.models.MessageContent\"></xref>.\n <code>EventData</code> extends from <xref uid=\"com.azure.core.models.MessageContent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.models.MessageContent\"></xref>, so the object can be serialized\n seamlessly.</p>\n\n <p>The serializer assumes there is a no argument constructor used to instantiate the\n <xref uid=\"com.azure.core.models.MessageContent\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.core.models.MessageContent\"></xref> type.  If there is a different way to instantiate the concrete type,\n use the overload which takes a message factory function,\n <xref uid=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer#serialize(java.lang.Object, com.azure.core.util.serializer.TypeReference, java.util.function.Function)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.data.schemaregistry.apacheavro.SchemaRegistryApacheAvroSerializer#serialize(java.lang.Object, com.azure.core.util.serializer.TypeReference, java.util.function.Function)\"></xref>.\n </p>\n\n <!-- src_embed com.azure.data.schemaregistry.apacheavro.schemaregistryapacheavroserializer.serialize-eventdata -->\n <pre>\n &#47;&#47; The object to encode. The Avro schema is:\n &#47;&#47; &#123;\n &#47;&#47;     &quot;namespace&quot;: &quot;com.azure.data.schemaregistry.apacheavro.generatedtestsources&quot;,\n &#47;&#47;     &quot;type&quot;: &quot;record&quot;,\n &#47;&#47;     &quot;name&quot;: &quot;Person&quot;,\n &#47;&#47;     &quot;fields&quot;: [\n &#47;&#47;         &#123;&quot;name&quot;:&quot;name&quot;, &quot;type&quot;: &quot;string&quot;&#125;,\n &#47;&#47;         &#123;&quot;name&quot;:&quot;favourite_number&quot;, &quot;type&quot;: [&quot;int&quot;, &quot;null&quot;]&#125;,\n &#47;&#47;         &#123;&quot;name&quot;:&quot;favourite_colour&quot;, &quot;type&quot;: [&quot;string&quot;, &quot;null&quot;]&#125;\n &#47;&#47;   ]\n &#47;&#47; &#125;\n Person person = Person.newBuilder&#40;&#41;\n     .setName&#40;&quot;Chase&quot;&#41;\n     .setFavouriteColour&#40;&quot;Turquoise&quot;&#41;\n     .setFavouriteNumber&#40;3&#41;\n     .build&#40;&#41;;\n\n EventData eventData = serializer.serialize&#40;person, TypeReference.createInstance&#40;EventData.class&#41;&#41;;\n </pre>\n <!-- end com.azure.data.schemaregistry.apacheavro.schemaregistryapacheavroserializer.serialize-eventdata -->\n\n <p><strong>Sample: Deserialize an object</strong></p>\n\n <p>The serializer can deserialize messages that were created using any of the serialize methods.  In the sample,\n <code>EventData</code> is created by serializing the Avro-generated object, Person.</p>\n\n <!-- src_embed com.azure.data.schemaregistry.apacheavro.schemaregistryapacheavroserializer.deserialize-eventdata -->\n <pre>\n &#47;&#47; EventData created from the Avro generated object, person.\n EventData eventData = serializer.serialize&#40;person, TypeReference.createInstance&#40;EventData.class&#41;&#41;;\n\n Person deserialized = serializer.deserialize&#40;eventData, TypeReference.createInstance&#40;Person.class&#41;&#41;;\n\n System.out.printf&#40;&quot;Name: %s, Number: %s%n&quot;, deserialized.getName&#40;&#41;, deserialized.getFavouriteNumber&#40;&#41;&#41;;\n </pre>\n <!-- end com.azure.data.schemaregistry.apacheavro.schemaregistryapacheavroserializer.deserialize-eventdata -->"
metadata: {}
package: "com.azure.data.schemaregistry.apacheavro"
artifact: com.azure:azure-data-schemaregistry-apacheavro:1.1.11
