### YamlMime:JavaMember
uid: "com.azure.storage.file.share.ShareServiceClient.listShares*"
fullName: "com.azure.storage.file.share.ShareServiceClient.listShares"
name: "listShares"
nameWithType: "ShareServiceClient.listShares"
members:
- uid: "com.azure.storage.file.share.ShareServiceClient.listShares()"
  fullName: "com.azure.storage.file.share.ShareServiceClient.listShares()"
  name: "listShares()"
  nameWithType: "ShareServiceClient.listShares()"
  summary: "Lists all shares in the storage account without their metadata or snapshots.\n\n**Code Samples**\n\nList all shares in the account\n\n```java\nfileServiceClient.listShares().forEach(\n     shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName())\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares"
  syntax: "public PagedIterable<ShareItem> listShares()"
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shares\"></xref> in the storage account without their metadata or snapshots"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareItem?alt=com.azure.storage.file.share.models.ShareItem&text=ShareItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.ShareServiceClient.listShares(com.azure.storage.file.share.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.ShareServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)"
  name: "listShares(ListSharesOptions options, Duration timeout, Context context)"
  nameWithType: "ShareServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)"
  summary: "Lists the shares in the Storage account that pass the options filter.\n\nSet starts with name filter using <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setPrefix(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"prefix\"></xref> to filter shares that are listed.\n\nPass true to <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setIncludeMetadata(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"includeMetadata\"></xref> to have metadata returned for the shares.\n\nPass true to <xref uid=\"com.azure.storage.file.share.models.ListSharesOptions.setIncludeSnapshots(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"includeSnapshots\"></xref> to have snapshots of the shares listed.\n\n**Code Samples**\n\nList all shares that begin with \"azure\"\n\n```java\nfileServiceClient.listShares(new ListSharesOptions().setPrefix(\"azure\"), Duration.ofSeconds(1),\n     new Context(key1, value1)).forEach(\n         shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName())\n );\n```\n\nList all shares including their snapshots and metadata\n\n```java\nfileServiceClient.listShares(new ListSharesOptions().setIncludeMetadata(true)\n     .setIncludeSnapshots(true), Duration.ofSeconds(1), new Context(key1, value1)).forEach(\n         shareItem -> System.out.printf(\"Share %s exists in the account\", shareItem.getName())\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares"
  parameters:
  - description: "Options for listing shares"
    name: "options"
    type: "<xref href=\"com.azure.storage.file.share.models.ListSharesOptions?alt=com.azure.storage.file.share.models.ListSharesOptions&text=ListSharesOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<ShareItem> listShares(ListSharesOptions options, Duration timeout, Context context)"
  returns:
    description: "<xref uid=\"com.azure.storage.file.share.models.ShareItem\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Shares\"></xref> in the storage account that satisfy the filter requirements"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.models.ShareItem?alt=com.azure.storage.file.share.models.ShareItem&text=ShareItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share"
artifact: com.azure:azure-storage-file-share:12.8.0
