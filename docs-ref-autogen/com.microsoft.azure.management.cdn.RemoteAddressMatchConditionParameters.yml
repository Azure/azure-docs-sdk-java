### YamlMime:JavaType
uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters"
fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters"
name: "RemoteAddressMatchConditionParameters"
nameWithType: "RemoteAddressMatchConditionParameters"
summary: "Defines the parameters for Remote<wbr>Address match conditions."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class RemoteAddressMatchConditionParameters"
constructors:
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.RemoteAddressMatchConditionParameters()"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.RemoteAddressMatchConditionParameters()"
  name: "RemoteAddressMatchConditionParameters()"
  nameWithType: "RemoteAddressMatchConditionParameters.RemoteAddressMatchConditionParameters()"
  summary: "Creates an instance of Remote<wbr>Address<wbr>Match<wbr>Condition<wbr>Parameters class."
  syntax: "public RemoteAddressMatchConditionParameters()"
  desc: "Creates an instance of RemoteAddressMatchConditionParameters class."
methods:
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.matchValues()"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.matchValues()"
  name: "matchValues()"
  nameWithType: "RemoteAddressMatchConditionParameters.matchValues()"
  summary: "Get match values to match against."
  syntax: "public List<String> matchValues()"
  desc: "Get match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match."
  returns:
    description: "the matchValues value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.negateCondition()"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.negateCondition()"
  name: "negateCondition()"
  nameWithType: "RemoteAddressMatchConditionParameters.negateCondition()"
  summary: "Get describes if this is negate condition or not."
  syntax: "public Boolean negateCondition()"
  desc: "Get describes if this is negate condition or not."
  returns:
    description: "the negateCondition value"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.odatatype()"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.odatatype()"
  name: "odatatype()"
  nameWithType: "RemoteAddressMatchConditionParameters.odatatype()"
  summary: "Get the odatatype value."
  syntax: "public String odatatype()"
  desc: "Get the odatatype value."
  returns:
    description: "the odatatype value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.operator()"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.operator()"
  name: "operator()"
  nameWithType: "RemoteAddressMatchConditionParameters.operator()"
  summary: "Get describes operator to be matched."
  syntax: "public RemoteAddressOperator operator()"
  desc: "Get describes operator to be matched. Possible values include: 'Any', 'IPMatch', 'GeoMatch'."
  returns:
    description: "the operator value"
    type: "<xref href=\"com.microsoft.azure.management.cdn.RemoteAddressOperator?alt=com.microsoft.azure.management.cdn.RemoteAddressOperator&text=RemoteAddressOperator\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.transforms()"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.transforms()"
  name: "transforms()"
  nameWithType: "RemoteAddressMatchConditionParameters.transforms()"
  summary: "Get list of transforms."
  syntax: "public List<Transform> transforms()"
  desc: "Get list of transforms."
  returns:
    description: "the transforms value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.cdn.Transform?alt=com.microsoft.azure.management.cdn.Transform&text=Transform\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withMatchValues(java.util.List<java.lang.String>)"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withMatchValues(List<String> matchValues)"
  name: "withMatchValues(List<String> matchValues)"
  nameWithType: "RemoteAddressMatchConditionParameters.withMatchValues(List<String> matchValues)"
  summary: "Set match values to match against."
  parameters:
  - description: "the matchValues value to set"
    name: "matchValues"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RemoteAddressMatchConditionParameters withMatchValues(List<String> matchValues)"
  desc: "Set match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match."
  returns:
    description: "the RemoteAddressMatchConditionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters?alt=com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters&text=RemoteAddressMatchConditionParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withNegateCondition(java.lang.Boolean)"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withNegateCondition(Boolean negateCondition)"
  name: "withNegateCondition(Boolean negateCondition)"
  nameWithType: "RemoteAddressMatchConditionParameters.withNegateCondition(Boolean negateCondition)"
  summary: "Set describes if this is negate condition or not."
  parameters:
  - description: "the negateCondition value to set"
    name: "negateCondition"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RemoteAddressMatchConditionParameters withNegateCondition(Boolean negateCondition)"
  desc: "Set describes if this is negate condition or not."
  returns:
    description: "the RemoteAddressMatchConditionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters?alt=com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters&text=RemoteAddressMatchConditionParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withOdatatype(java.lang.String)"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withOdatatype(String odatatype)"
  name: "withOdatatype(String odatatype)"
  nameWithType: "RemoteAddressMatchConditionParameters.withOdatatype(String odatatype)"
  summary: "Set the odatatype value."
  parameters:
  - description: "the odatatype value to set"
    name: "odatatype"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RemoteAddressMatchConditionParameters withOdatatype(String odatatype)"
  desc: "Set the odatatype value."
  returns:
    description: "the RemoteAddressMatchConditionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters?alt=com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters&text=RemoteAddressMatchConditionParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withOperator(com.microsoft.azure.management.cdn.RemoteAddressOperator)"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withOperator(RemoteAddressOperator operator)"
  name: "withOperator(RemoteAddressOperator operator)"
  nameWithType: "RemoteAddressMatchConditionParameters.withOperator(RemoteAddressOperator operator)"
  summary: "Set describes operator to be matched."
  parameters:
  - description: "the operator value to set"
    name: "operator"
    type: "<xref href=\"com.microsoft.azure.management.cdn.RemoteAddressOperator?alt=com.microsoft.azure.management.cdn.RemoteAddressOperator&text=RemoteAddressOperator\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public RemoteAddressMatchConditionParameters withOperator(RemoteAddressOperator operator)"
  desc: "Set describes operator to be matched. Possible values include: 'Any', 'IPMatch', 'GeoMatch'."
  returns:
    description: "the RemoteAddressMatchConditionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters?alt=com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters&text=RemoteAddressMatchConditionParameters\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withTransforms(java.util.List<com.microsoft.azure.management.cdn.Transform>)"
  fullName: "com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters.withTransforms(List<Transform> transforms)"
  name: "withTransforms(List<Transform> transforms)"
  nameWithType: "RemoteAddressMatchConditionParameters.withTransforms(List<Transform> transforms)"
  summary: "Set list of transforms."
  parameters:
  - description: "the transforms value to set"
    name: "transforms"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.cdn.Transform?alt=com.microsoft.azure.management.cdn.Transform&text=Transform\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public RemoteAddressMatchConditionParameters withTransforms(List<Transform> transforms)"
  desc: "Set list of transforms."
  returns:
    description: "the RemoteAddressMatchConditionParameters object itself."
    type: "<xref href=\"com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters?alt=com.microsoft.azure.management.cdn.RemoteAddressMatchConditionParameters&text=RemoteAddressMatchConditionParameters\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the parameters for RemoteAddress match conditions."
metadata: {}
package: "com.microsoft.azure.management.cdn"
artifact: com.microsoft.azure:azure-mgmt-cdn:1.41.4
