### YamlMime:JavaType
uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups"
fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups"
name: "Groups"
nameWithType: "Groups"
summary: "Type representing Groups."
syntax: "public interface Groups extends SupportsCreating<GroupContract.DefinitionStages.Blank>, HasInner<GroupsInner>"
methods:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.deleteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.deleteAsync(String resourceGroupName, String serviceName, String groupId, String ifMatch)"
  name: "deleteAsync(String resourceGroupName, String serviceName, String groupId, String ifMatch)"
  nameWithType: "Groups.deleteAsync(String resourceGroupName, String serviceName, String groupId, String ifMatch)"
  summary: "Deletes specific group of the API Management service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Group identifier. Must be unique in the current API Management service instance."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update."
    name: "ifMatch"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable deleteAsync(String resourceGroupName, String serviceName, String groupId, String ifMatch)"
  desc: "Deletes specific group of the API Management service instance."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.getAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.getAsync(String resourceGroupName, String serviceName, String groupId)"
  name: "getAsync(String resourceGroupName, String serviceName, String groupId)"
  nameWithType: "Groups.getAsync(String resourceGroupName, String serviceName, String groupId)"
  summary: "Gets the details of the group specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Group identifier. Must be unique in the current API Management service instance."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<GroupContract> getAsync(String resourceGroupName, String serviceName, String groupId)"
  desc: "Gets the details of the group specified by its identifier."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.GroupContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.GroupContract&text=GroupContract\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.getEntityTagAsync(java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.getEntityTagAsync(String resourceGroupName, String serviceName, String groupId)"
  name: "getEntityTagAsync(String resourceGroupName, String serviceName, String groupId)"
  nameWithType: "Groups.getEntityTagAsync(String resourceGroupName, String serviceName, String groupId)"
  summary: "Gets the entity state (Etag) version of the group specified by its identifier."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Group identifier. Must be unique in the current API Management service instance."
    name: "groupId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Completable getEntityTagAsync(String resourceGroupName, String serviceName, String groupId)"
  desc: "Gets the entity state (Etag) version of the group specified by its identifier."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.listByServiceAsync(java.lang.String,java.lang.String)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.Groups.listByServiceAsync(String resourceGroupName, String serviceName)"
  name: "listByServiceAsync(String resourceGroupName, String serviceName)"
  nameWithType: "Groups.listByServiceAsync(String resourceGroupName, String serviceName)"
  summary: "Lists a collection of groups defined within a service instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group."
    name: "resourceGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the API Management service."
    name: "serviceName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<GroupContract> listByServiceAsync(String resourceGroupName, String serviceName)"
  desc: "Lists a collection of groups defined within a service instance."
  returns:
    description: "the observable for the request"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.GroupContract?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.GroupContract&text=GroupContract\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Type representing Groups."
implements:
- "<xref href=\"com.microsoft.azure.arm.collection.SupportsCreating?alt=com.microsoft.azure.arm.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.GroupContract.DefinitionStages.Blank?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.GroupContract.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.arm.model.HasInner?alt=com.microsoft.azure.arm.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.GroupsInner?alt=com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.GroupsInner&text=GroupsInner\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.apimanagement.v2019_01_01"
artifact: com.microsoft.azure.apimanagement.v2019_01_01:azure-mgmt-apimanagement:1.0.0-beta-1
