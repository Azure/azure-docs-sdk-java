### YamlMime:ManagedReference
items:
- uid: "com.azure.core.util.Context"
  id: "Context"
  parent: "com.azure.core.util"
  children:
  - "com.azure.core.util.Context.Context(java.lang.Object,java.lang.Object)"
  - "com.azure.core.util.Context.NONE"
  - "com.azure.core.util.Context.addData(java.lang.Object,java.lang.Object)"
  - "com.azure.core.util.Context.getData(java.lang.Object)"
  - "com.azure.core.util.Context.getValues()"
  - "com.azure.core.util.Context.of(java.util.Map<java.lang.Object,java.lang.Object>)"
  langs:
  - "java"
  name: "Context"
  nameWithType: "Context"
  fullName: "com.azure.core.util.Context"
  type: "Class"
  package: "com.azure.core.util"
  summary: "`Context` offers a means of passing arbitrary data (key-value pairs) to pipeline policies. Most applications do not need to pass arbitrary data to the pipeline and can pass `Context.NONE` or `null`.\n\nEach context object is immutable. The <xref uid=\"com.azure.core.util.Context.addData(java.lang.Object,java.lang.Object)\" data-throw-if-not-resolved=\"false\">#addData(Object, Object)</xref> method creates a new `Context` object that refers to its parent, forming a linked list."
  syntax:
    content: "public class Context"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.util.Context.Context(com.azure.core.util.Context,java.lang.Object,java.lang.Object)"
  id: "Context(com.azure.core.util.Context,java.lang.Object,java.lang.Object)"
  parent: "com.azure.core.util.Context"
  langs:
  - "java"
  name: "Context(Context parent, Object key, Object value)"
  nameWithType: "Context.Context(Context parent, Object key, Object value)"
  fullName: "com.azure.core.util.Context.Context(Context parent, Object key, Object value)"
  overload: "com.azure.core.util.Context.Context*"
  type: "Constructor"
  package: "com.azure.core.util"
  syntax:
    content: "private Context(Context parent, Object key, Object value)"
    parameters:
    - id: "parent"
      type: "com.azure.core.util.Context"
    - id: "key"
      type: "java.lang.Object"
    - id: "value"
      type: "java.lang.Object"
- uid: "com.azure.core.util.Context.Context(java.lang.Object,java.lang.Object)"
  id: "Context(java.lang.Object,java.lang.Object)"
  parent: "com.azure.core.util.Context"
  langs:
  - "java"
  name: "Context(Object key, Object value)"
  nameWithType: "Context.Context(Object key, Object value)"
  fullName: "com.azure.core.util.Context.Context(Object key, Object value)"
  overload: "com.azure.core.util.Context.Context*"
  type: "Constructor"
  package: "com.azure.core.util"
  summary: "Constructs a new <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object.\n\n**Code samples**\n\n\\{@codesnippet com.azure.core.util.context\\#object-object\\}"
  syntax:
    content: "public Context(Object key, Object value)"
    parameters:
    - id: "key"
      type: "java.lang.Object"
      description: "The key with which the specified value should be associated."
    - id: "value"
      type: "java.lang.Object"
      description: "The value to be associated with the specified key."
- uid: "com.azure.core.util.Context.NONE"
  id: "NONE"
  parent: "com.azure.core.util.Context"
  langs:
  - "java"
  name: "NONE"
  nameWithType: "Context.NONE"
  fullName: "com.azure.core.util.Context.NONE"
  type: "Field"
  package: "com.azure.core.util"
  summary: "Signifies that no data needs to be passed to the pipeline."
  syntax:
    content: "public static final Context NONE"
    return:
      type: "com.azure.core.util.Context"
- uid: "com.azure.core.util.Context.addData(java.lang.Object,java.lang.Object)"
  id: "addData(java.lang.Object,java.lang.Object)"
  parent: "com.azure.core.util.Context"
  langs:
  - "java"
  name: "addData(Object key, Object value)"
  nameWithType: "Context.addData(Object key, Object value)"
  fullName: "com.azure.core.util.Context.addData(Object key, Object value)"
  overload: "com.azure.core.util.Context.addData*"
  type: "Method"
  package: "com.azure.core.util"
  summary: "Adds a new immutable <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object with the specified key-value pair to the existing <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> chain.\n\n**Code samples**\n\n\\{@codesnippet com.azure.core.util.context.addData\\#object-object\\}"
  syntax:
    content: "public Context addData(Object key, Object value)"
    parameters:
    - id: "key"
      type: "java.lang.Object"
      description: "The key with which the specified value should be associated."
    - id: "value"
      type: "java.lang.Object"
      description: "The value to be associated with the specified key."
    return:
      type: "com.azure.core.util.Context"
      description: "the new <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object containing the specified pair added to the set of pairs."
- uid: "com.azure.core.util.Context.getData(java.lang.Object)"
  id: "getData(java.lang.Object)"
  parent: "com.azure.core.util.Context"
  langs:
  - "java"
  name: "getData(Object key)"
  nameWithType: "Context.getData(Object key)"
  fullName: "com.azure.core.util.Context.getData(Object key)"
  overload: "com.azure.core.util.Context.getData*"
  type: "Method"
  package: "com.azure.core.util"
  summary: "Scans the linked-list of <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> objects looking for one with the specified key. Note that the first key found, i.e. the most recently added, will be returned.\n\n**Code samples**\n\n\\{@codesnippet com.azure.core.util.context.getData\\#object\\}"
  syntax:
    content: "public Optional<Object> getData(Object key)"
    parameters:
    - id: "key"
      type: "java.lang.Object"
      description: "The key to search for."
    return:
      type: "java.util.Optional<java.lang.Object>"
      description: "The value of the specified key if it exists."
- uid: "com.azure.core.util.Context.getValues()"
  id: "getValues()"
  parent: "com.azure.core.util.Context"
  langs:
  - "java"
  name: "getValues()"
  nameWithType: "Context.getValues()"
  fullName: "com.azure.core.util.Context.getValues()"
  overload: "com.azure.core.util.Context.getValues*"
  type: "Method"
  package: "com.azure.core.util"
  summary: "Scans the linked-list of <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> objects populating a <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\">Map</xref> with the values of the context.\n\n**Code samples**\n\n\\{@codesnippet com.azure.core.util.Context.getValues\\}"
  syntax:
    content: "public Map<Object,Object> getValues()"
    return:
      type: "java.util.Map<java.lang.Object,java.lang.Object>"
      description: "A map containing all values of the context linked-list."
- uid: "com.azure.core.util.Context.of(java.util.Map<java.lang.Object,java.lang.Object>)"
  id: "of(java.util.Map<java.lang.Object,java.lang.Object>)"
  parent: "com.azure.core.util.Context"
  langs:
  - "java"
  name: "of(Map<Object,Object> keyValues)"
  nameWithType: "Context.of(Map<Object,Object> keyValues)"
  fullName: "com.azure.core.util.Context.of(Map<Object,Object> keyValues)"
  overload: "com.azure.core.util.Context.of*"
  type: "Method"
  package: "com.azure.core.util"
  summary: "Creates a new immutable <xref uid=\"com.azure.core.util.Context\" data-throw-if-not-resolved=\"false\">Context</xref> object with all the keys and values provided by the input <xref uid=\"java.util.Map\" data-throw-if-not-resolved=\"false\">Map</xref>.\n\n**Code samples**\n\n\\{@codesnippet com.azure.core.util.context.of\\#map\\}"
  syntax:
    content: "public static Context of(Map<Object,Object> keyValues)"
    parameters:
    - id: "keyValues"
      type: "java.util.Map<java.lang.Object,java.lang.Object>"
      description: "The input key value pairs that will be added to this context."
    return:
      type: "com.azure.core.util.Context"
      description: "Context object containing all the key-value pairs in the input map."
references:
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.core.util.Context.Context*"
  name: "Context"
  nameWithType: "Context.Context"
  fullName: "com.azure.core.util.Context.Context"
  package: "com.azure.core.util"
- uid: "com.azure.core.util.Context.addData*"
  name: "addData"
  nameWithType: "Context.addData"
  fullName: "com.azure.core.util.Context.addData"
  package: "com.azure.core.util"
- uid: "java.util.Map<java.lang.Object,java.lang.Object>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ","
    fullName: ","
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.Context.of*"
  name: "of"
  nameWithType: "Context.of"
  fullName: "com.azure.core.util.Context.of"
  package: "com.azure.core.util"
- uid: "java.util.Optional<java.lang.Object>"
  spec.java:
  - uid: "java.util.Optional"
    name: "Optional"
    fullName: "java.util.Optional"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.util.Context.getData*"
  name: "getData"
  nameWithType: "Context.getData"
  fullName: "com.azure.core.util.Context.getData"
  package: "com.azure.core.util"
- uid: "com.azure.core.util.Context.getValues*"
  name: "getValues"
  nameWithType: "Context.getValues"
  fullName: "com.azure.core.util.Context.getValues"
  package: "com.azure.core.util"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object,java.lang.Object"
  name: "Object,Object"
  nameWithType: "Object,Object"
  fullName: "java.lang.Object,java.lang.Object"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.util.Optional"
  name: "Optional"
  nameWithType: "Optional"
  fullName: "java.util.Optional"
