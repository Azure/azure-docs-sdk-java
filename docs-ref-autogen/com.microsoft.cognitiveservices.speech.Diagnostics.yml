### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.Diagnostics"
fullName: "com.microsoft.cognitiveservices.speech.Diagnostics"
name: "Diagnostics"
nameWithType: "Diagnostics"
summary: "Native logging and other diagnostics"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **Diagnostics**"
constructors:
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.Diagnostics()"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.Diagnostics()"
  name: "Diagnostics()"
  nameWithType: "Diagnostics.Diagnostics()"
  syntax: "public Diagnostics()"
methods:
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.dumpMemoryLog(java.lang.String,java.lang.String,boolean,boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.dumpMemoryLog(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  name: "dumpMemoryLog(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  nameWithType: "Diagnostics.dumpMemoryLog(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  summary: "Dumps the contents of the memory logger"
  modifiers:
  - "static"
  parameters:
  - description: "The name of the file to write to. Set this to an empty string if not needed"
    name: "filename"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The prefix to apply to each line of logged memory content, e.g. \"CRBN\""
    name: "linePrefix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the log should be emitted to standard output (for Android, logcat) in addition to any other targets"
    name: "emitToStdOut"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the log should be emitted to standard error (for Android, logcat) in addition to any other targets"
    name: "emitToStdErr"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void dumpMemoryLog(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  desc: "Dumps the contents of the memory logger"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.dumpMemoryLogOnExit(java.lang.String,java.lang.String,boolean,boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.dumpMemoryLogOnExit(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  name: "dumpMemoryLogOnExit(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  nameWithType: "Diagnostics.dumpMemoryLogOnExit(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  summary: "Dumps the contents of the memory logger on exit"
  modifiers:
  - "static"
  parameters:
  - description: "The name of the file to write to. Set this to an empty string if not needed"
    name: "filename"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The prefix to apply to each line of logged memory content, e.g. \"CRBN\""
    name: "linePrefix"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the log should be emitted to standard output (for Android, logcat) in addition to any other targets"
    name: "emitToStdOut"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether the log should be emitted to standard error (for Android, logcat) in addition to any other targets"
    name: "emitToStdErr"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void dumpMemoryLogOnExit(String filename, String linePrefix, boolean emitToStdOut, boolean emitToStdErr)"
  desc: "Dumps the contents of the memory logger on exit"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.startConsoleLogging()"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.startConsoleLogging()"
  name: "startConsoleLogging()"
  nameWithType: "Diagnostics.startConsoleLogging()"
  summary: "Starts console (for Android, logcat) logging"
  modifiers:
  - "static"
  syntax: "public static void startConsoleLogging()"
  desc: "Starts console (for Android, logcat) logging"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.startConsoleLogging(boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.startConsoleLogging(boolean logToStderr)"
  name: "startConsoleLogging(boolean logToStderr)"
  nameWithType: "Diagnostics.startConsoleLogging(boolean logToStderr)"
  summary: "Starts console (for Android, logcat) logging"
  modifiers:
  - "static"
  parameters:
  - description: "Whether the log should be emitted to standard error or standard out; has no effect on Android."
    name: "logToStderr"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void startConsoleLogging(boolean logToStderr)"
  desc: "Starts console (for Android, logcat) logging"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.startFileLogging(java.lang.String,boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.startFileLogging(String filename, boolean append)"
  name: "startFileLogging(String filename, boolean append)"
  nameWithType: "Diagnostics.startFileLogging(String filename, boolean append)"
  summary: "Enables the native file logger"
  modifiers:
  - "static"
  parameters:
  - description: "The name of resulting log file"
    name: "filename"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "If true will append to file (if already exists). Otherwise will create a new file"
    name: "append"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static void startFileLogging(String filename, boolean append)"
  desc: "Enables the native file logger"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.startMemoryLogging()"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.startMemoryLogging()"
  name: "startMemoryLogging()"
  nameWithType: "Diagnostics.startMemoryLogging()"
  summary: "Enables the native memory logger"
  modifiers:
  - "static"
  syntax: "public static void startMemoryLogging()"
  desc: "Enables the native memory logger"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.stopConsoleLogging()"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.stopConsoleLogging()"
  name: "stopConsoleLogging()"
  nameWithType: "Diagnostics.stopConsoleLogging()"
  summary: "Stops console logging"
  modifiers:
  - "static"
  syntax: "public static void stopConsoleLogging()"
  desc: "Stops console logging"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.stopFileLogging()"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.stopFileLogging()"
  name: "stopFileLogging()"
  nameWithType: "Diagnostics.stopFileLogging()"
  summary: "Stops the native file logger"
  modifiers:
  - "static"
  syntax: "public static void stopFileLogging()"
  desc: "Stops the native file logger"
- uid: "com.microsoft.cognitiveservices.speech.Diagnostics.stopMemoryLogging()"
  fullName: "com.microsoft.cognitiveservices.speech.Diagnostics.stopMemoryLogging()"
  name: "stopMemoryLogging()"
  nameWithType: "Diagnostics.stopMemoryLogging()"
  summary: "Stops the native memory logger"
  modifiers:
  - "static"
  syntax: "public static void stopMemoryLogging()"
  desc: "Stops the native memory logger"
type: "class"
desc: "Native logging and other diagnostics"
metadata: {}
package: "com.microsoft.cognitiveservices.speech"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
