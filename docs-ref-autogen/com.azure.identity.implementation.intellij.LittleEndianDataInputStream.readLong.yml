### YamlMime:JavaMember
uid: "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readLong*"
fullName: "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readLong"
name: "readLong"
nameWithType: "LittleEndianDataInputStream.readLong"
members:
- uid: "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readLong()"
  fullName: "com.azure.identity.implementation.intellij.LittleEndianDataInputStream.readLong()"
  name: "readLong()"
  nameWithType: "LittleEndianDataInputStream.readLong()"
  summary: "Reads a `long` as specified by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"DataInputStream#readLong()\"></xref>, except using little-endian byte order."
  syntax: "public long readLong()"
  exceptions:
  - description: "if an I/O error occurs"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    description: "the next eight bytes of the input stream, interpreted as a <code>long</code> in\n     little-endian byte order"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.identity.implementation.intellij"
artifact: com.azure:azure-identity:1.4.1
