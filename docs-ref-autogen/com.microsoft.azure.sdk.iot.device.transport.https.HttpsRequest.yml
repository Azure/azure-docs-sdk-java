### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  id: HttpsRequest
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https
  children:
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,byte[],java.lang.String)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,byte[],java.lang.String,com.microsoft.azure.sdk.iot.device.ProxySettings)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send()
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout(int)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField(java.lang.String,java.lang.String)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout(int)
  - com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext(javax.net.ssl.SSLContext)
  langs:
  - java
  name: HttpsRequest
  nameWithType: HttpsRequest
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  type: Class
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: An HTTPS request.
  syntax:
    content: public class HttpsRequest
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest()
  id: HttpsRequest()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: HttpsRequest()
  nameWithType: HttpsRequest.HttpsRequest()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: protected HttpsRequest()
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,byte[],java.lang.String)
  id: HttpsRequest(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,byte[],java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
  nameWithType: HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Constructor. Takes a URL as an argument and returns an HTTPS request that is ready to be sent.
  syntax:
    content: public HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString)
    parameters:
    - id: url
      type: java.net.URL
      description: the URL for the request.
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: the HTTPS request method (i.e. GET).
    - id: body
      type: byte[]
      description: >-
        the request body. Must be an array of size 0 if the request
         method is GET or DELETE.
    - id: userAgentString
      type: java.lang.String
      description: the user agent string to attach to all http communications
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,byte[],java.lang.String,com.microsoft.azure.sdk.iot.device.ProxySettings)
  id: HttpsRequest(java.net.URL,com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod,byte[],java.lang.String,com.microsoft.azure.sdk.iot.device.ProxySettings)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
  nameWithType: HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Constructor. Takes a URL as an argument and returns an HTTPS request that is ready to be sent.
  syntax:
    content: public HttpsRequest(URL url, HttpsMethod method, byte[] body, String userAgentString, ProxySettings proxySettings)
    parameters:
    - id: url
      type: java.net.URL
      description: the URL for the request.
    - id: method
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
      description: the HTTPS request method (i.e. GET).
    - id: body
      type: byte[]
      description: >-
        the request body. Must be an array of size 0 if the request
         method is GET or DELETE.
    - id: userAgentString
      type: java.lang.String
      description: the user agent string to attach to all http communications
    - id: proxySettings
      type: com.microsoft.azure.sdk.iot.device.ProxySettings
      description: The proxy settings to use when connecting. If null then no proxy will be used
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody()
  id: getBody()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: getBody()
  nameWithType: HttpsRequest.getBody()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: public byte[] getBody()
    return:
      type: byte[]
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod()
  id: getHttpMethod()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: getHttpMethod()
  nameWithType: HttpsRequest.getHttpMethod()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: public String getHttpMethod()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders()
  id: getRequestHeaders()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: getRequestHeaders()
  nameWithType: HttpsRequest.getRequestHeaders()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: public String getRequestHeaders()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl()
  id: getRequestUrl()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: getRequestUrl()
  nameWithType: HttpsRequest.getRequestUrl()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  syntax:
    content: public URL getRequestUrl()
    return:
      type: java.net.URL
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send()
  id: send()
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: send()
  nameWithType: HttpsRequest.send()
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send()
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Executes the HTTPS request.
  syntax:
    content: public HttpsResponse send()
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse
      description: an HTTPS response.
  exceptions:
  - type: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
    description: >-
      if the connection could not be established, or the
       input/output streams could not be accessed.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout(int)
  id: setConnectTimeout(int)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: setConnectTimeout(int timeout)
  nameWithType: HttpsRequest.setConnectTimeout(int timeout)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets the connect timeout, in milliseconds, for the request.
  syntax:
    content: public HttpsRequest setConnectTimeout(int timeout)
    parameters:
    - id: timeout
      type: int
      description: the connect timeout in milliseconds.
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
      description: itself, for fluent setting.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField(java.lang.String,java.lang.String)
  id: setHeaderField(java.lang.String,java.lang.String)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: setHeaderField(String field, String value)
  nameWithType: HttpsRequest.setHeaderField(String field, String value)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField(String field, String value)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets the header field to the given value.
  syntax:
    content: public HttpsRequest setHeaderField(String field, String value)
    parameters:
    - id: field
      type: java.lang.String
      description: the header field name.
    - id: value
      type: java.lang.String
      description: the header field value.
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
      description: itself, for fluent setting.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout(int)
  id: setReadTimeout(int)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: setReadTimeout(int timeout)
  nameWithType: HttpsRequest.setReadTimeout(int timeout)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout(int timeout)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets the read timeout, in milliseconds, for the request. The read timeout is the number of milliseconds after the server receives a request and before the server sends data back.
  syntax:
    content: public HttpsRequest setReadTimeout(int timeout)
    parameters:
    - id: timeout
      type: int
      description: the read timeout.
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
      description: itself, for fluent setting.
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext(javax.net.ssl.SSLContext)
  id: setSSLContext(javax.net.ssl.SSLContext)
  artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
  langs:
  - java
  name: setSSLContext(SSLContext sslContext)
  nameWithType: HttpsRequest.setSSLContext(SSLContext sslContext)
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext(SSLContext sslContext)
  overload: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext*
  type: Method
  package: com.microsoft.azure.sdk.iot.device.transport.https
  summary: Sets this object's SSL context
  syntax:
    content: public HttpsRequest setSSLContext(SSLContext sslContext)
    parameters:
    - id: sslContext
      type: javax.net.ssl.SSLContext
      description: the value to set this object's SSL context too
    return:
      type: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest
      description: itself, for fluent setting.
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: if sslContext is null
references:
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
  name: HttpsMethod
  nameWithType: HttpsMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsMethod
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest*
  name: HttpsRequest
  nameWithType: HttpsRequest.HttpsRequest
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.HttpsRequest
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.ProxySettings
  name: ProxySettings
  nameWithType: ProxySettings
  fullName: com.microsoft.azure.sdk.iot.device.ProxySettings
- uid: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
  name: TransportException
  nameWithType: TransportException
  fullName: com.microsoft.azure.sdk.iot.device.exceptions.TransportException
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse
  name: HttpsResponse
  nameWithType: HttpsResponse
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsResponse
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send*
  name: send
  nameWithType: HttpsRequest.send
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.send
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField*
  name: setHeaderField
  nameWithType: HttpsRequest.setHeaderField
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setHeaderField
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout*
  name: setReadTimeout
  nameWithType: HttpsRequest.setReadTimeout
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setReadTimeout
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout*
  name: setConnectTimeout
  nameWithType: HttpsRequest.setConnectTimeout
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setConnectTimeout
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: javax.net.ssl.SSLContext
  spec.java:
  - uid: javax.net.ssl.SSLContext
    name: SSLContext
    fullName: javax.net.ssl.SSLContext
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext*
  name: setSSLContext
  nameWithType: HttpsRequest.setSSLContext
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.setSSLContext
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody*
  name: getBody
  nameWithType: HttpsRequest.getBody
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getBody
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl*
  name: getRequestUrl
  nameWithType: HttpsRequest.getRequestUrl
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestUrl
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod*
  name: getHttpMethod
  nameWithType: HttpsRequest.getHttpMethod
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getHttpMethod
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders*
  name: getRequestHeaders
  nameWithType: HttpsRequest.getRequestHeaders
  fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsRequest.getRequestHeaders
  package: com.microsoft.azure.sdk.iot.device.transport.https
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
