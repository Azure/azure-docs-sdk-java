### YamlMime:ManagedReference
items:
- uid: system.fabric._repair_management_client
  id: _repair_management_client
  parent: system.fabric
  children:
  - system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean)
  - system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean,Duration)
  - system.fabric._repair_management_client.close()
  - system.fabric._repair_management_client.createRepairTaskAsync(RepairTask)
  - system.fabric._repair_management_client.createRepairTaskAsync(RepairTask,Duration)
  - system.fabric._repair_management_client.deleteRepairTaskAsync(String,long)
  - system.fabric._repair_management_client.deleteRepairTaskAsync(String,long,Duration)
  - system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long)
  - system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long,Duration)
  - system.fabric._repair_management_client.getRepairTaskListAsync()
  - system.fabric._repair_management_client.getRepairTaskListAsync(Duration)
  - system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String)
  - system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String,Duration)
  - system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask)
  - system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask,Duration)
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: RepairManagementClient
  nameWithType: RepairManagementClient
  fullName: system.fabric.RepairManagementClient
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 18
  package: system.fabric
  summary: <p>Provides methods for managing repair tasks. </p>
  syntax:
    content: public class RepairManagementClient
  inheritance:
  - java.lang.Object
  - AutoCloseable
- uid: system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean)
  id: cancelRepairTaskAsync(String,long,boolean)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)
  nameWithType: RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)
  overload: system.fabric._repair_management_client.cancelRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 126
  package: system.fabric
  summary: >-
    <p>Requests the cancellation of the given repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort)
    parameters:
    - id: repairTaskId
      type: "26831127"
      description: <p>The ID of the repair task to be cancelled. </p>
    - id: version
      type: 0364520f
      description: <p>The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed. </p>
    - id: requestAbort
      type: 4fc6e284
      description: <p>True if the repair should be stopped as soon as possible even if it has already started executing. False if the repair should be cancelled only if execution has not yet started. </p>
    return:
      type: 30822cb1
      description: <p>The new version number of the repair task. </p>
- uid: system.fabric._repair_management_client.cancelRepairTaskAsync(String,long,boolean,Duration)
  id: cancelRepairTaskAsync(String,long,boolean,Duration)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)
  nameWithType: RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)
  overload: system.fabric._repair_management_client.cancelRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 153
  package: system.fabric
  summary: >-
    <p>Requests the cancellation of the given repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> cancelRepairTaskAsync(String repairTaskId, long version, boolean requestAbort, Duration timeout)
    parameters:
    - id: repairTaskId
      type: "26831127"
      description: <p>The ID of the repair task to be cancelled. </p>
    - id: version
      type: 0364520f
      description: <p>The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed. </p>
    - id: requestAbort
      type: 4fc6e284
      description: <p>True if the repair should be stopped as soon as possible even if it has already started executing. False if the repair should be cancelled only if execution has not yet started. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>. </p>
    return:
      type: 30822cb1
      description: <p>The new version number of the repair task. </p>
- uid: system.fabric._repair_management_client.close()
  id: close()
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: close()
  nameWithType: RepairManagementClient.close()
  fullName: void system.fabric.RepairManagementClient.close()
  overload: system.fabric._repair_management_client.close*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 542
  package: system.fabric
  syntax:
    content: public void close()
- uid: system.fabric._repair_management_client.createRepairTaskAsync(RepairTask)
  id: createRepairTaskAsync(RepairTask)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: createRepairTaskAsync(RepairTask repairTask)
  nameWithType: RepairManagementClient.createRepairTaskAsync(RepairTask repairTask)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.createRepairTaskAsync(RepairTask repairTask)
  overload: system.fabric._repair_management_client.createRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 93
  package: system.fabric
  summary: >-
    <p>Creates a new repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> createRepairTaskAsync(RepairTask repairTask)
    parameters:
    - id: repairTask
      type: system.fabric._repair_task
      description: <p>The description of the repair task to be created. </p>
    return:
      type: 30822cb1
      description: <p>The version number of the newly-created repair task. </p>
- uid: system.fabric._repair_management_client.createRepairTaskAsync(RepairTask,Duration)
  id: createRepairTaskAsync(RepairTask,Duration)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: createRepairTaskAsync(RepairTask repairTask, Duration timeout)
  nameWithType: RepairManagementClient.createRepairTaskAsync(RepairTask repairTask, Duration timeout)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.createRepairTaskAsync(RepairTask repairTask, Duration timeout)
  overload: system.fabric._repair_management_client.createRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 107
  package: system.fabric
  summary: >-
    <p>Creates a new repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> createRepairTaskAsync(RepairTask repairTask, Duration timeout)
    parameters:
    - id: repairTask
      type: system.fabric._repair_task
      description: <p>The description of the repair task to be created. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>. </p>
    return:
      type: 30822cb1
      description: <p>The version number of the newly-created repair task. </p>
- uid: system.fabric._repair_management_client.deleteRepairTaskAsync(String,long)
  id: deleteRepairTaskAsync(String,long)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: deleteRepairTaskAsync(String repairTaskId, long version)
  nameWithType: RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version)
  fullName: CompletableFuture system.fabric.RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version)
  overload: system.fabric._repair_management_client.deleteRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 209
  package: system.fabric
  summary: >-
    <p>Deletes the given repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture deleteRepairTaskAsync(String repairTaskId, long version)
    parameters:
    - id: repairTaskId
      type: "26831127"
      description: <p>The ID of the completed repair task to be deleted. </p>
    - id: version
      type: 0364520f
      description: <p>The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed. </p>
    return:
      type: 5f2aaa64
      description: <p>A task representing the asynchronous operation. </p>
- uid: system.fabric._repair_management_client.deleteRepairTaskAsync(String,long,Duration)
  id: deleteRepairTaskAsync(String,long,Duration)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)
  nameWithType: RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)
  fullName: CompletableFuture system.fabric.RepairManagementClient.deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)
  overload: system.fabric._repair_management_client.deleteRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 231
  package: system.fabric
  summary: >-
    <p>Deletes the given repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture deleteRepairTaskAsync(String repairTaskId, long version, Duration timeout)
    parameters:
    - id: repairTaskId
      type: "26831127"
      description: <p>The ID of the completed repair task to be deleted. </p>
    - id: version
      type: 0364520f
      description: <p>The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>. </p>
    return:
      type: 5f2aaa64
      description: <p>A task representing the asynchronous operation. </p>
- uid: system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long)
  id: forceApproveRepairTaskAsync(String,long)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: forceApproveRepairTaskAsync(String repairTaskId, long version)
  nameWithType: RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version)
  overload: system.fabric._repair_management_client.forceApproveRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 172
  package: system.fabric
  summary: >-
    <p>Forces the approval of the given repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> forceApproveRepairTaskAsync(String repairTaskId, long version)
    parameters:
    - id: repairTaskId
      type: "26831127"
      description: <p>The ID of the repair task to be approved. </p>
    - id: version
      type: 0364520f
      description: <p>The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed. </p>
    return:
      type: 30822cb1
      description: <p>The new version number of the repair task. </p>
- uid: system.fabric._repair_management_client.forceApproveRepairTaskAsync(String,long,Duration)
  id: forceApproveRepairTaskAsync(String,long,Duration)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)
  nameWithType: RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)
  overload: system.fabric._repair_management_client.forceApproveRepairTaskAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 194
  package: system.fabric
  summary: >-
    <p>Forces the approval of the given repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> forceApproveRepairTaskAsync(String repairTaskId, long version, Duration timeout)
    parameters:
    - id: repairTaskId
      type: "26831127"
      description: <p>The ID of the repair task to be approved. </p>
    - id: version
      type: 0364520f
      description: <p>The current version number of the repair task. If non-zero, then the request will only succeed if this value matches the actual current value of the repair task. If zero, then no version check is performed. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>. </p>
    return:
      type: 30822cb1
      description: <p>The new version number of the repair task. </p>
- uid: system.fabric._repair_management_client.getRepairTaskListAsync()
  id: getRepairTaskListAsync()
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: getRepairTaskListAsync()
  nameWithType: RepairManagementClient.getRepairTaskListAsync()
  fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync()
  overload: system.fabric._repair_management_client.getRepairTaskListAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 265
  package: system.fabric
  summary: >-
    <p>Gets a list of all repair tasks.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<RepairTaskList> getRepairTaskListAsync()
    return:
      type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
      description: <p>The list of all repair tasks. </p>
- uid: system.fabric._repair_management_client.getRepairTaskListAsync(Duration)
  id: getRepairTaskListAsync(Duration)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: getRepairTaskListAsync(Duration timeout)
  nameWithType: RepairManagementClient.getRepairTaskListAsync(Duration timeout)
  fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync(Duration timeout)
  overload: system.fabric._repair_management_client.getRepairTaskListAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 279
  package: system.fabric
  summary: >-
    <p>Gets a list of all repair tasks.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<RepairTaskList> getRepairTaskListAsync(Duration timeout)
    parameters:
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>. </p>
    return:
      type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
      description: <p>The list of all repair tasks. </p>
- uid: system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String)
  id: getRepairTaskListAsync(String,RepairTaskStateFilter,String)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)
  nameWithType: RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)
  fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)
  overload: system.fabric._repair_management_client.getRepairTaskListAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 298
  package: system.fabric
  summary: >-
    <p>Gets a list of repair tasks matching all of the given filters.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<RepairTaskList> getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter)
    parameters:
    - id: taskIdFilter
      type: "26831127"
      description: <p>The repair task ID prefix to be matched. If null, no filter is applied to the task ID. </p>
    - id: stateFilter
      type: system.fabric.repair._repair_task_state_filter
      description: <p>A bitwise combination of state filter values that specify which task states should be included in the list. </p>
    - id: executorFilter
      type: "26831127"
      description: <p>The name of the repair executor whose claimed tasks should be included in the list. If null, no filter is applied to the executor name. </p>
    return:
      type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
      description: <p>The list of repair tasks matching all of the given filters. </p>
- uid: system.fabric._repair_management_client.getRepairTaskListAsync(String,RepairTaskStateFilter,String,Duration)
  id: getRepairTaskListAsync(String,RepairTaskStateFilter,String,Duration)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)
  nameWithType: RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)
  fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)
  overload: system.fabric._repair_management_client.getRepairTaskListAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 323
  package: system.fabric
  summary: >-
    <p>Gets a list of repair tasks matching all of the given filters.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<RepairTaskList> getRepairTaskListAsync(String taskIdFilter, RepairTaskStateFilter stateFilter, String executorFilter, Duration timeout)
    parameters:
    - id: taskIdFilter
      type: "26831127"
      description: <p>The repair task ID prefix to be matched. If null, no filter is applied to the task ID. </p>
    - id: stateFilter
      type: system.fabric.repair._repair_task_state_filter
      description: <p>A bitwise combination of state filter values that specify which task states should be included in the list. </p>
    - id: executorFilter
      type: "26831127"
      description: <p>The name of the repair executor whose claimed tasks should be included in the list. If null, no filter is applied to the executor name. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>. </p>
    return:
      type: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
      description: <p>The list of repair tasks matching all of the given filters. </p>
- uid: system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask)
  id: updateRepairExecutionStateAsync(RepairTask)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: updateRepairExecutionStateAsync(RepairTask repairTask)
  nameWithType: RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask)
  overload: system.fabric._repair_management_client.updateRepairExecutionStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 242
  package: system.fabric
  summary: >-
    <p>Updates a repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> updateRepairExecutionStateAsync(RepairTask repairTask)
    parameters:
    - id: repairTask
      type: system.fabric._repair_task
      description: <p>The modified repair task. </p>
    return:
      type: 30822cb1
      description: <p>The new version number of the repair task. </p>
- uid: system.fabric._repair_management_client.updateRepairExecutionStateAsync(RepairTask,Duration)
  id: updateRepairExecutionStateAsync(RepairTask,Duration)
  parent: system.fabric._repair_management_client
  href: system.fabric._repair_management_client.yml
  langs:
  - java
  name: updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)
  nameWithType: RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)
  overload: system.fabric._repair_management_client.updateRepairExecutionStateAsync*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/RepairManagementClient.java
    startLine: 256
  package: system.fabric
  summary: >-
    <p>Updates a repair task.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> updateRepairExecutionStateAsync(RepairTask repairTask, Duration timeout)
    parameters:
    - id: repairTask
      type: system.fabric._repair_task
      description: <p>The modified repair task. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The maximum amount of time Service Fabric will allow this operation to continue before returning a <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.TimeoutException</xref>. </p>
    return:
      type: 30822cb1
      description: <p>The new version number of the repair task. </p>
references:
- uid: 30822cb1
  spec.java:
  - name: CompletableFuture<Long>
    fullName: CompletableFuture<Long>
- uid: system.fabric._repair_management_client.createRepairTaskAsync*
  name: createRepairTaskAsync
  nameWithType: RepairManagementClient.createRepairTaskAsync
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.createRepairTaskAsync
  package: system.fabric
- uid: e02a2de0
  spec.java:
  - name: Duration
    fullName: Duration
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: system.fabric._repair_management_client.cancelRepairTaskAsync*
  name: cancelRepairTaskAsync
  nameWithType: RepairManagementClient.cancelRepairTaskAsync
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.cancelRepairTaskAsync
  package: system.fabric
- uid: system.fabric._repair_management_client.forceApproveRepairTaskAsync*
  name: forceApproveRepairTaskAsync
  nameWithType: RepairManagementClient.forceApproveRepairTaskAsync
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.forceApproveRepairTaskAsync
  package: system.fabric
- uid: 5f2aaa64
  spec.java:
  - name: CompletableFuture
    fullName: CompletableFuture
- uid: system.fabric._repair_management_client.deleteRepairTaskAsync*
  name: deleteRepairTaskAsync
  nameWithType: RepairManagementClient.deleteRepairTaskAsync
  fullName: CompletableFuture system.fabric.RepairManagementClient.deleteRepairTaskAsync
  package: system.fabric
- uid: system.fabric._repair_management_client.updateRepairExecutionStateAsync*
  name: updateRepairExecutionStateAsync
  nameWithType: RepairManagementClient.updateRepairExecutionStateAsync
  fullName: CompletableFuture<Long> system.fabric.RepairManagementClient.updateRepairExecutionStateAsync
  package: system.fabric
- uid: 9cdf14d0system.fabric.repair._repair_task_lista08ddfce
  spec.java:
  - name: CompletableFuture<
    fullName: CompletableFuture<
  - uid: system.fabric.repair._repair_task_list
    name: RepairTaskList
    fullName: system.fabric.repair.RepairTaskList
    href: system.fabric.repair._repair_task_list.yml
  - name: '>'
    fullName: '>'
- uid: system.fabric._repair_management_client.getRepairTaskListAsync*
  name: getRepairTaskListAsync
  nameWithType: RepairManagementClient.getRepairTaskListAsync
  fullName: CompletableFuture<RepairTaskList> system.fabric.RepairManagementClient.getRepairTaskListAsync
  package: system.fabric
- uid: system.fabric._repair_management_client.close*
  name: close
  nameWithType: RepairManagementClient.close
  fullName: void system.fabric.RepairManagementClient.close
  package: system.fabric
- uid: system.fabric._repair_scope_identifier
  parent: system.fabric
  href: system.fabric._repair_scope_identifier.yml
  name: RepairScopeIdentifier
  nameWithType: RepairScopeIdentifier
  fullName: system.fabric.RepairScopeIdentifier
  type: Class
  summary: <p>Describes the scope of a repair task. This class supports the Service Fabric platform; it is not meant to be called directly from your code. </p>
  syntax:
    content: public class RepairScopeIdentifier
- uid: system.fabric.interop._native_async_callback
  parent: system.fabric.interop
  href: system.fabric.interop._native_async_callback.yml
  name: NativeAsyncCallback
  nameWithType: NativeAsyncCallback
  fullName: system.fabric.interop.NativeAsyncCallback
  type: Interface
  syntax:
    content: public interface NativeAsyncCallback
- uid: system.fabric.repair._repair_task_list
  parent: system.fabric.repair
  href: system.fabric.repair._repair_task_list.yml
  name: RepairTaskList
  nameWithType: RepairTaskList
  fullName: system.fabric.repair.RepairTaskList
  type: Class
  summary: <p>Represents a list of <xref uid="system.fabric._repair_task" data-throw-if-not-resolved="false">system.fabric.RepairTask</xref> objects. This class supports the Service Fabric platform; it is not meant to be called directly from your code. </p>
  syntax:
    content: public class RepairTaskList
- uid: system.fabric._repair_task
  parent: system.fabric
  href: system.fabric._repair_task.yml
  name: RepairTask
  nameWithType: RepairTask
  fullName: system.fabric.RepairTask
  type: Class
  summary: <p>Represents a repair task, which includes information about what kind of repair was requested, what its progress is, and what its final result was. This class supports the Service Fabric platform; it is not meant to be called directly from your code. </p>
  syntax:
    content: public class RepairTask
- uid: system.fabric._pin_collection
  parent: system.fabric
  href: system.fabric._pin_collection.yml
  name: PinCollection
  nameWithType: PinCollection
  fullName: system.fabric.PinCollection
  type: Class
  syntax:
    content: public class PinCollection
- uid: system.fabric.repair._repair_task_state_filter
  parent: system.fabric.repair
  href: system.fabric.repair._repair_task_state_filter.yml
  name: RepairTaskStateFilter
  nameWithType: RepairTaskStateFilter
  fullName: system.fabric.repair.RepairTaskStateFilter
  type: Enum
  syntax:
    content: public enum RepairTaskStateFilter
