### YamlMime:JavaType
constructors:
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(FabricActorService actorService)
  name: FabricTransportActorServiceRemotingListener(FabricActorService actorService)
  nameWithType: FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(FabricActorService actorService)
  parameters:
  - description: <p>The implementation of the actor service. </p>
    name: actorService
    type: <xref href="microsoft.servicefabric.actors.runtime.FabricActorService?alt=microsoft.servicefabric.actors.runtime.FabricActorService&text=FabricActorService" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Construct a fabric TCP transport based service remoting listener for the specified actor service.</p>

    <p></p>
  syntax: public FabricTransportActorServiceRemotingListener(FabricActorService actorService)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(FabricActorService)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(FabricActorService actorService, FabricTransportRemotingListenerSettings listenerSettings)
  name: FabricTransportActorServiceRemotingListener(FabricActorService actorService, FabricTransportRemotingListenerSettings listenerSettings)
  nameWithType: FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(FabricActorService actorService, FabricTransportRemotingListenerSettings listenerSettings)
  parameters:
  - description: <p>The implementation of the actor service. </p>
    name: actorService
    type: <xref href="microsoft.servicefabric.actors.runtime.FabricActorService?alt=microsoft.servicefabric.actors.runtime.FabricActorService&text=FabricActorService" data-throw-if-not-resolved="False"/>
  - description: <p>The settings to use for the listener. </p>
    name: listenerSettings
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Construct a fabric TCP transport based service remoting listener for the specified actor service.</p>

    <p></p>
  syntax: public FabricTransportActorServiceRemotingListener(FabricActorService actorService, FabricTransportRemotingListenerSettings listenerSettings)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(FabricActorService,FabricTransportRemotingListenerSettings)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  name: FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  nameWithType: FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The handler for processing remoting messages. As the messages are received, the listener delivers them to this handler. </p>
    name: messageHandler
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler&text=ServiceRemotingMessageHandler" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Construct a fabric TCP transport based service remoting listener for the specified actor service.</p>

    <p></p>
  syntax: public FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler)
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  name: FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  nameWithType: FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The handler for processing remoting messages. As the messages are received, the listener delivers them to this handler. </p>
    name: messageHandler
    type: <xref href="microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler?alt=microsoft.servicefabric.services.remoting.ServiceRemotingMessageHandler&text=ServiceRemotingMessageHandler" data-throw-if-not-resolved="False"/>
  - description: <p>The settings to use for the listener. </p>
    name: listenerSettings
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Construct a fabric TCP transport based service remoting listener for the specified actor service.</p>

    <p></p>
  syntax: public FabricTransportActorServiceRemotingListener(ServiceContext serviceContext, ServiceRemotingMessageHandler messageHandler, FabricTransportRemotingListenerSettings listenerSettings)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.FabricTransportActorServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler,FabricTransportRemotingListenerSettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.communication.runtime.CommunicationListener" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener&text=ServiceRemotingListener" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener&text=FabricTransportServiceRemotingListener" data-throw-if-not-resolved="False"/>
inheritedMembers:
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.abort()
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.closeAsync(CancellationToken)
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,Service)
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,Service,String)
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,Service,FabricTransportRemotingListenerSettings)
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler)
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler,String)
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.FabricTransportServiceRemotingListener(ServiceContext,ServiceRemotingMessageHandler,FabricTransportRemotingListenerSettings)
- microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener.openAsync(CancellationToken)
methods:
- fullName: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.getActorListenerSettings(FabricActorService actorService)
  name: getActorListenerSettings(FabricActorService actorService)
  nameWithType: FabricTransportActorServiceRemotingListener.getActorListenerSettings(FabricActorService actorService)
  parameters:
  - description: <p>The implementation of the actor service. </p>
    name: actorService
    type: <xref href="microsoft.servicefabric.actors.runtime.FabricActorService?alt=microsoft.servicefabric.actors.runtime.FabricActorService&text=FabricActorService" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>An Object of the <xref uid="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings"></xref> class. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings?alt=microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportRemotingListenerSettings&text=FabricTransportRemotingListenerSettings" data-throw-if-not-resolved="False"/>
  summary: <p>Gets actor listener settings. </p>
  syntax: public static FabricTransportRemotingListenerSettings getActorListenerSettings(FabricActorService actorService)
  uid: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener.getActorListenerSettings(FabricActorService)
nameWithType: FabricTransportActorServiceRemotingListener
syntax: public class FabricTransportActorServiceRemotingListener extends FabricTransportServiceRemotingListener
type: class
uid: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener
fullName: microsoft.servicefabric.actors.remoting.fabrictransport.runtime.FabricTransportActorServiceRemotingListener
name: FabricTransportActorServiceRemotingListener
package: microsoft.servicefabric.actors.remoting.fabrictransport.runtime
summary: <p>An <xref uid="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener"></xref> that uses fabric TCP transport to provide remoting of actor and service interfaces for actor service. </p>
metadata: {}
