### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.actors.runtime._actor_call_type
  id: _actor_call_type
  parent: microsoft.servicefabric.actors.runtime
  children:
  - microsoft.servicefabric.actors.runtime._actor_call_type.ActorInterfaceMethod
  - microsoft.servicefabric.actors.runtime._actor_call_type.getValue()
  - microsoft.servicefabric.actors.runtime._actor_call_type.ReminderMethod
  - microsoft.servicefabric.actors.runtime._actor_call_type.TimerMethod
  href: microsoft.servicefabric.actors.runtime._actor_call_type.yml
  langs:
  - java
  name: ActorCallType
  nameWithType: ActorCallType
  fullName: microsoft.servicefabric.actors.runtime.ActorCallType
  type: Enum
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorCallType.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorCallType.java
    startLine: 10
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Represents the call-type associated with the method invoked by actor runtime. </p>\r\n<p>\r\n  <b>Remarks:</b>This is provided as part of <xref uid=\"microsoft.servicefabric.actors.runtime._actor_method_context\" data-throw-if-not-resolved=\"false\">ActorMethodContext</xref> which is passed as argument to <xref uid=\"microsoft.servicefabric.actors.runtime._actor_base.onPreActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid=\"microsoft.servicefabric.actors.runtime._actor_base.onPostActorMethodAsync(ActorMethodContext)\" data-throw-if-not-resolved=\"false\">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>. </p>"
  syntax:
    content: public enum ActorCallType
  inheritance:
  - java.lang.Object
  - java.lang.Enum<ActorCallType>
- uid: microsoft.servicefabric.actors.runtime._actor_call_type.ActorInterfaceMethod
  id: ActorInterfaceMethod
  parent: microsoft.servicefabric.actors.runtime._actor_call_type
  href: microsoft.servicefabric.actors.runtime._actor_call_type.yml
  langs:
  - java
  name: ActorInterfaceMethod
  nameWithType: ActorCallType.ActorInterfaceMethod
  fullName: microsoft.servicefabric.actors.runtime.ActorCallType.ActorInterfaceMethod
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorCallType.java
    startLine: 12
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>The method invoked is an actor interface method for a given client request. </p>"
  syntax:
    content: public ActorInterfaceMethod=(0)
- uid: microsoft.servicefabric.actors.runtime._actor_call_type.getValue()
  id: getValue()
  parent: microsoft.servicefabric.actors.runtime._actor_call_type
  href: microsoft.servicefabric.actors.runtime._actor_call_type.yml
  langs:
  - java
  name: getValue()
  nameWithType: ActorCallType.getValue()
  fullName: microsoft.servicefabric.actors.runtime.ActorCallType.getValue()
  overload: microsoft.servicefabric.actors.runtime._actor_call_type.getValue*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorCallType.java
    startLine: 29
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>Get the actor call type. </p>"
  syntax:
    content: public int getValue()
    return:
      type: f75371fa
      description: <p>An integer value indicating the actor call type. </p>
- uid: microsoft.servicefabric.actors.runtime._actor_call_type.ReminderMethod
  id: ReminderMethod
  parent: microsoft.servicefabric.actors.runtime._actor_call_type
  href: microsoft.servicefabric.actors.runtime._actor_call_type.yml
  langs:
  - java
  name: ReminderMethod
  nameWithType: ActorCallType.ReminderMethod
  fullName: microsoft.servicefabric.actors.runtime.ActorCallType.ReminderMethod
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorCallType.java
    startLine: 16
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>The method invoked on <xref uid=\"microsoft.servicefabric.actors.runtime._remindable\" data-throw-if-not-resolved=\"false\">Remindable</xref> interface when a reminder fires. </p>"
  syntax:
    content: public ReminderMethod=(2)
- uid: microsoft.servicefabric.actors.runtime._actor_call_type.TimerMethod
  id: TimerMethod
  parent: microsoft.servicefabric.actors.runtime._actor_call_type
  href: microsoft.servicefabric.actors.runtime._actor_call_type.yml
  langs:
  - java
  name: TimerMethod
  nameWithType: ActorCallType.TimerMethod
  fullName: microsoft.servicefabric.actors.runtime.ActorCallType.TimerMethod
  type: Field
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/runtime/ActorCallType.java
    startLine: 14
  package: microsoft.servicefabric.actors.runtime
  summary: "<p>The method invoked is a timer callback method. </p>"
  syntax:
    content: public TimerMethod=(1)
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: microsoft.servicefabric.actors.runtime._actor_call_type.getValue*
  name: getValue
  nameWithType: ActorCallType.getValue
  fullName: microsoft.servicefabric.actors.runtime.ActorCallType.getValue
  package: microsoft.servicefabric.actors.runtime
- uid: microsoft.servicefabric.actors.runtime._remindable
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._remindable.yml
  name: Remindable
  nameWithType: Remindable
  fullName: microsoft.servicefabric.actors.runtime.Remindable
  type: Interface
  summary: <p>Interface which actors that use reminders must implement. </p>
  syntax:
    content: public interface Remindable
- uid: microsoft.servicefabric.actors.runtime._actor_method_context
  parent: microsoft.servicefabric.actors.runtime
  href: microsoft.servicefabric.actors.runtime._actor_method_context.yml
  name: ActorMethodContext
  nameWithType: ActorMethodContext
  fullName: microsoft.servicefabric.actors.runtime.ActorMethodContext
  type: Class
  summary: <p>An <xref uid="microsoft.servicefabric.actors.runtime._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> contains information about the method that is invoked by actor runtime and is passed as an argument to <xref uid="microsoft.servicefabric.actors.runtime._actor_base.onPreActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPreActorMethodAsync(ActorMethodContext)</xref> and <xref uid="microsoft.servicefabric.actors.runtime._actor_base.onPostActorMethodAsync(ActorMethodContext)" data-throw-if-not-resolved="false">ActorBase#onPostActorMethodAsync(ActorMethodContext)</xref>. </p>
  syntax:
    content: public class ActorMethodContext
- uid: microsoft.servicefabric.actors.runtime._actor_base.onPreActorMethodAsync(ActorMethodContext)
  parent: microsoft.servicefabric.actors.runtime._actor_base
  href: microsoft.servicefabric.actors.runtime._actor_base.yml
  name: onPreActorMethodAsync(ActorMethodContext actorMethodContext)
  nameWithType: ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
  fullName: microsoft.servicefabric.actors.runtime.ActorBase.onPreActorMethodAsync(ActorMethodContext actorMethodContext)
  type: Method
  summary: >-
    <p>This method is invoked by actor runtime just before invoking an actor method. Override this method for performing any actions prior to an actor method is invoked.</p>

    <p>

      <b>Remarks:</b>This method is invoked by actor runtime prior to: <ul><li><p>Invoking an actor interface method when a client request comes. </p></li><li><p>Invoking a method on <xref uid="microsoft.servicefabric.actors.runtime._remindable" data-throw-if-not-resolved="false">Remindable</xref> interface when a reminder fires. </p></li><li><p>Invoking a timer callback when timer fires. </p></li></ul></p>
  syntax:
    content: protected CompletableFuture<?> onPreActorMethodAsync(ActorMethodContext actorMethodContext)
    parameters:
    - id: actorMethodContext
      type: microsoft.servicefabric.actors.runtime._actor_method_context
      description: <p>An <xref uid="microsoft.servicefabric.actors.runtime._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> describing the method that will be invoked by actor runtime after this method finishes. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> representing pre-actor-method operation.</p>
- uid: microsoft.servicefabric.actors.runtime._actor_base.onPostActorMethodAsync(ActorMethodContext)
  parent: microsoft.servicefabric.actors.runtime._actor_base
  href: microsoft.servicefabric.actors.runtime._actor_base.yml
  name: onPostActorMethodAsync(ActorMethodContext actorMethodContext)
  nameWithType: ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
  fullName: microsoft.servicefabric.actors.runtime.ActorBase.onPostActorMethodAsync(ActorMethodContext actorMethodContext)
  type: Method
  summary: >-
    <p>This method is invoked by actor runtime an actor method has finished execution. Override this method for performing any actions after an actor method has finished execution.</p>

    <p>

      <b>Remarks:</b> This method is invoked by actor runtime prior to: <ul><li><p>Invoking an actor interface method when a client request comes. </p></li><li><p>Invoking a method on <xref uid="microsoft.servicefabric.actors.runtime._remindable" data-throw-if-not-resolved="false">Remindable</xref> interface when a reminder fires. </p></li><li><p>Invoking a timer callback when timer fires. </p></li></ul></p>
  syntax:
    content: protected CompletableFuture<?> onPostActorMethodAsync(ActorMethodContext actorMethodContext)
    parameters:
    - id: actorMethodContext
      type: microsoft.servicefabric.actors.runtime._actor_method_context
      description: <p>An <xref uid="microsoft.servicefabric.actors.runtime._actor_method_context" data-throw-if-not-resolved="false">ActorMethodContext</xref> describing the method that was invoked by actor runtime prior to this method. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> representing post-actor-method operation.</p>
