### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.runtime.StatefulService
  id: StatefulService
  parent: microsoft.servicefabric.services.runtime
  children:
  - microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager()
  - microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext)
  - microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext,ReliableStateManagerReplica)
  href: microsoft.servicefabric.services.runtime.StatefulService.yml
  langs:
  - java
  name: StatefulService
  nameWithType: StatefulService
  fullName: microsoft.servicefabric.services.runtime.StatefulService
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
    startLine: 14
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Represents the base class for Microsoft Service Fabric based stateful reliable service which provides an <xref uid=\"microsoft.servicefabric.data.ReliableStateManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.data.ReliableStateManager\"></xref> to manager service's state Derive from this class to implement a Microsoft Service Fabric based stateful reliable service. </p>"
  syntax:
    content: public class StatefulService extends StatefulServiceBase
  inheritance:
  - java.lang.Object
  - microsoft.servicefabric.services.runtime.StatefulServiceBase
  inheritedMembers:
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription,Duration,CancellationToken)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.createServiceReplicaListeners()
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort()
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync(ReplicaRole,CancellationToken)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync(CancellationToken)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext,CancellationToken)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.onOpenAsync(ReplicaOpenMode,CancellationToken)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String>)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.setPartition(StatefulServicePartition)
  - microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
- uid: microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager()
  id: getReliableStateManager()
  parent: microsoft.servicefabric.services.runtime.StatefulService
  href: microsoft.servicefabric.services.runtime.StatefulService.yml
  langs:
  - java
  name: getReliableStateManager()
  nameWithType: StatefulService.getReliableStateManager()
  fullName: microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager()
  overload: microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
    startLine: 52
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Gets the replica's <xref uid=\"microsoft.servicefabric.data.ReliableStateManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.data.ReliableStateManager\"></xref></p>\r\n<p></p>"
  syntax:
    content: public ReliableStateManager getReliableStateManager()
    return:
      type: microsoft.servicefabric.data.ReliableStateManager
      description: <p>The <xref uid="microsoft.servicefabric.data.ReliableStateManager" data-throw-if-not-resolved="false" data-raw-source="microsoft.servicefabric.data.ReliableStateManager"></xref> of the replica </p>
- uid: microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext)
  id: StatefulService(StatefulServiceContext)
  parent: microsoft.servicefabric.services.runtime.StatefulService
  href: microsoft.servicefabric.services.runtime.StatefulService.yml
  langs:
  - java
  name: StatefulService(StatefulServiceContext serviceContext)
  nameWithType: StatefulService.StatefulService(StatefulServiceContext serviceContext)
  fullName: microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext serviceContext)
  overload: microsoft.servicefabric.services.runtime.StatefulService.StatefulService*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
    startLine: 41
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Creates a new stateful service with default <xref uid=\"microsoft.servicefabric.data.ReliableStateManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.data.ReliableStateManager\"></xref></p>\r\n<p></p>"
  syntax:
    content: protected StatefulService(StatefulServiceContext serviceContext)
    parameters:
    - id: serviceContext
      type: system.fabric.StatefulServiceContext
      description: <p>Describes the stateful service context, which provides information like replica ID, partition ID, service name. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext,ReliableStateManagerReplica)
  id: StatefulService(StatefulServiceContext,ReliableStateManagerReplica)
  parent: microsoft.servicefabric.services.runtime.StatefulService
  href: microsoft.servicefabric.services.runtime.StatefulService.yml
  langs:
  - java
  name: StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)
  nameWithType: StatefulService.StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)
  fullName: microsoft.servicefabric.services.runtime.StatefulService.StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)
  overload: microsoft.servicefabric.services.runtime.StatefulService.StatefulService*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/runtime/StatefulService.java
    startLine: 28
  package: microsoft.servicefabric.services.runtime
  summary: "<p>Creates a new stateful service with non-default <xref uid=\"microsoft.servicefabric.data.ReliableStateManager\" data-throw-if-not-resolved=\"false\" data-raw-source=\"microsoft.servicefabric.data.ReliableStateManager\"></xref></p>\r\n<p></p>"
  syntax:
    content: protected StatefulService(StatefulServiceContext serviceContext, ReliableStateManagerReplica stateManagerReplica)
    parameters:
    - id: serviceContext
      type: system.fabric.StatefulServiceContext
      description: <p>Describes the stateful service context, which provides information like replica ID, partition ID, service name. </p>
    - id: stateManagerReplica
      type: 347f4db2
      description: <p>Represents a reliable state provider replica. </p>
references:
- uid: 347f4db2
  spec.java:
  - name: ReliableStateManagerReplica
    fullName: ReliableStateManagerReplica
- uid: microsoft.servicefabric.services.runtime.StatefulService.StatefulService*
  name: StatefulService
  nameWithType: StatefulService.StatefulService
  fullName: microsoft.servicefabric.services.runtime.StatefulService.StatefulService
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager*
  name: getReliableStateManager
  nameWithType: StatefulService.getReliableStateManager
  fullName: microsoft.servicefabric.services.runtime.StatefulService.getReliableStateManager
  package: microsoft.servicefabric.services.runtime
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: backupAsync(BackupDescription backupDescription)
  nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription)
  type: Method
  summary: "<p>Performs a backup of all reliable state managed by this <xref uid=\"microsoft.servicefabric.services.runtime.StatefulServiceBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatefulServiceBase\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription)
    parameters:
    - id: backupDescription
      type: microsoft.servicefabric.data.BackupDescription
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="BackupDescription"></xref> describing the backup request. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription,Duration,CancellationToken)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
  type: Method
  summary: "<p>Performs a backup of all reliable state managed by this <xref uid=\"microsoft.servicefabric.services.runtime.StatefulServiceBase\" data-throw-if-not-resolved=\"false\" data-raw-source=\"StatefulServiceBase\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<?> backupAsync(BackupDescription backupDescription, Duration timeout, CancellationToken cancellationToken)
    parameters:
    - id: backupDescription
      type: microsoft.servicefabric.data.BackupDescription
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="BackupDescription"></xref> describing the backup request. </p>
    - id: timeout
      type: e02a2de0
      description: <p>The timeout for this operation. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: <p>The token to monitor for cancellation requests. </p>
    return:
      type: 16409f84
      description: <p>Task that represents the asynchronous backup operation. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.createServiceReplicaListeners()
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: createServiceReplicaListeners()
  nameWithType: StatefulServiceBase.createServiceReplicaListeners()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.createServiceReplicaListeners()
  type: Method
  summary: "<p>Override this method to supply the communication listeners for the service replica. The endpoints returned by the communication listener's are stored as a JSON string of ListenerName, Endpoint string pairs like {\"Endpoints\":{\"Listener1\":\"Endpoint1\",\"Listener2\":\"Endpoint2\" ...}}</p>\r\n<p></p>"
  syntax:
    content: protected List<ServiceReplicaListener> createServiceReplicaListeners()
    return:
      type: 5618da2dmicrosoft.servicefabric.services.communication.runtime.ServiceReplicaListenera08ddfce
      description: <p>List of ServiceReplicaListeners </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: getAddresses()
  nameWithType: StatefulServiceBase.getAddresses()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()
  type: Method
  summary: "<p>Gets list of all the addresses for this service replica as (ListenerName, Endpoint) key-value pair.</p>\r\n<p></p>"
  syntax:
    content: protected Map<String, String> getAddresses()
    return:
      type: 689c8cb5
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: getPartition()
  nameWithType: StatefulServiceBase.getPartition()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
  type: Method
  summary: "<p>Service partition to which current service replica belongs.</p>\r\n<p></p>"
  syntax:
    content: protected StatefulServicePartition getPartition()
    return:
      type: system.fabric.StatefulServicePartition
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="StatefulServicePartition"></xref> that represents the partition to which this service replica belongs. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: getServiceContext()
  nameWithType: StatefulServiceBase.getServiceContext()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
  type: Method
  summary: "<p>Gets the service context that this stateful service is operating under. It provides information like ReplicaId, PartitionId, ServiceName etc.</p>\r\n<p></p>"
  syntax:
    content: public StatefulServiceContext getServiceContext()
    return:
      type: system.fabric.StatefulServiceContext
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="StatefulServiceContext"></xref> that describes the service context. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: getStateProviderReplica()
  nameWithType: StatefulServiceBase.getStateProviderReplica()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
  type: Method
  syntax:
    content: protected StateProviderReplica getStateProviderReplica()
    return:
      type: microsoft.servicefabric.data.StateProviderReplica
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort()
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: onAbort()
  nameWithType: StatefulServiceBase.onAbort()
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onAbort()
  type: Method
  summary: "<p>Notification that the service is being aborted. RunAsync MAY be running concurrently with the execution of this method, as cancellation is not awaited on the abort path. </p>"
  syntax:
    content: protected void onAbort()
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync(ReplicaRole,CancellationToken)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This method is called as the final step before completing <xref uid=\"system.fabric.StatefulServiceReplica.changeRoleAsync(ReplicaRole,CancellationToken)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"system.fabric.StatefulServiceReplica#changeRoleAsync(ReplicaRole, CancellationToken)\"></xref> . Override this method to be notified that ChangeRole has completed for this replica's internal components.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> onChangeRoleAsync(ReplicaRole newRole, CancellationToken cancellationToken)
    parameters:
    - id: newRole
      type: system.fabric.ReplicaRole
      description: <p>for this service replica. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: onCloseAsync(CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onCloseAsync(CancellationToken cancellationToken)
  type: Method
  summary: "<p>This method is called as the final step of closing the service. Override this method to be notified that Close has completed for this replica's internal components.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> onCloseAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext,CancellationToken)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This method is called during suspected data loss. You can override this method to restore the service in case of data loss.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<Boolean> onDataLossAsync(RestoreContext context, CancellationToken cancellationToken)
    parameters:
    - id: context
      type: microsoft.servicefabric.data.RestoreContext
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="RestoreContext"></xref> to be used to restore the service. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 7e53ac82
      description: <p>A Task that represents the asynchronous restore operation. True indicates that the state has been restored. False indicates that the replica's state has not been modified. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.onOpenAsync(ReplicaOpenMode,CancellationToken)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
  type: Method
  summary: "<p>This method is called as the final step of opening the service. Override this method to be notified that Open has completed for this replica's internal components.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> onOpenAsync(ReplicaOpenMode openMode, CancellationToken cancellationToken)
    parameters:
    - id: openMode
      type: system.fabric.ReplicaOpenMode
      description: <p>for this service replica. </p>
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: runAsync(CancellationToken cancellationToken)
  nameWithType: StatefulServiceBase.runAsync(CancellationToken cancellationToken)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.runAsync(CancellationToken cancellationToken)
  type: Method
  summary: "<p>Services that want to implement a processing loop which runs when it is primary and has write status, just override this method with their logic.</p>\r\n<p></p>"
  syntax:
    content: protected CompletableFuture<?> runAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: system.fabric.CancellationToken
      description: >-
        <p>

          <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false" data-raw-source="system.fabric.CancellationToken"></xref> object to indicate the cancellation status of the operation. </p>
    return:
      type: 16409f84
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CompletableFuture"></xref> that represents outstanding operation. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String>)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: setAddresses(Map<String, String> addresses)
  nameWithType: StatefulServiceBase.setAddresses(Map<String, String> addresses)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String> addresses)
  type: Method
  summary: "<p>Sets list of all the addresses for this service replica as (ListenerName, Endpoint) key-value pair.</p>\r\n<p></p>"
  syntax:
    content: protected void setAddresses(Map<String, String> addresses)
    parameters:
    - id: addresses
      type: 689c8cb5
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Map"></xref> containing list of addresses as (ListenerName, Endpoint) key-value pair. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.setPartition(StatefulServicePartition)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: setPartition(StatefulServicePartition partition)
  nameWithType: StatefulServiceBase.setPartition(StatefulServicePartition partition)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.setPartition(StatefulServicePartition partition)
  type: Method
  summary: "<p>Service partition to which current service replica belongs.</p>\r\n<p></p>"
  syntax:
    content: protected void setPartition(StatefulServicePartition partition)
    parameters:
    - id: partition
      type: system.fabric.StatefulServicePartition
      description: <p>An <xref uid="" data-throw-if-not-resolved="false" data-raw-source="StatefulServicePartition"></xref> that represents the partition to which this service replica belongs. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
  parent: microsoft.servicefabric.services.runtime.StatefulServiceBase
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  nameWithType: StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
  type: Constructor
  summary: "<p>Creates a new StatefulService.</p>\r\n<p></p>"
  syntax:
    content: protected StatefulServiceBase(StatefulServiceContext serviceContext, StateProviderReplica stateProviderReplica)
    parameters:
    - id: serviceContext
      type: system.fabric.StatefulServiceContext
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="StatefulServiceContext"></xref> that describes the service context. </p>
    - id: stateProviderReplica
      type: microsoft.servicefabric.data.StateProviderReplica
      description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="StateProviderReplica"></xref> that represents a reliable state provider replica. </p>
- uid: microsoft.servicefabric.services.runtime.StatefulServiceBase
  parent: microsoft.servicefabric.services.runtime
  href: microsoft.servicefabric.services.runtime.StatefulServiceBase.yml
  name: StatefulServiceBase
  nameWithType: StatefulServiceBase
  fullName: microsoft.servicefabric.services.runtime.StatefulServiceBase
  type: Class
  summary: "<p>Represents base class for Microsoft Service Fabric based stateful reliable service. </p>"
  syntax:
    content: public class StatefulServiceBase
- uid: microsoft.servicefabric.data.ReliableStateManager
  parent: microsoft.servicefabric.data
  href: microsoft.servicefabric.data.ReliableStateManager.yml
  name: ReliableStateManager
  nameWithType: ReliableStateManager
  fullName: microsoft.servicefabric.data.ReliableStateManager
  type: Interface
  syntax:
    content: public interface ReliableStateManager
- uid: system.fabric.StatefulServiceContext
  parent: system.fabric
  href: system.fabric.StatefulServiceContext.yml
  name: StatefulServiceContext
  nameWithType: StatefulServiceContext
  fullName: system.fabric.StatefulServiceContext
  type: Class
  summary: "<p>Represents the service context that the stateful service is operating under. </p>"
  syntax:
    content: public class StatefulServiceContext
