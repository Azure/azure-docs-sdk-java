### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  id: "ContainersService"
  parent: "com.azure.storage.blob.implementation"
  children:
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.acquireLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.breakLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.changeLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.create(java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.delete(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccessPolicy(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getProperties(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobFlatSegment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobHierarchySegment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.releaseLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.renewLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setAccessPolicy(java.lang.String,java.lang.String,com.azure.storage.blob.implementation.SignedIdentifiersWrapper,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.PublicAccessType,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  - "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setMetadata(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "ContainersImpl.ContainersService"
  nameWithType: "ContainersImpl.ContainersService"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  type: "Interface"
  package: "com.azure.storage.blob.implementation"
  summary: "The interface defining all the services for AzureBlobStorageContainers to be used by the proxy service to perform REST calls."
  syntax:
    content: "private static interface ContainersImpl.ContainersService"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.acquireLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "acquireLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "acquireLease(String containerName, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  nameWithType: "ContainersImpl.ContainersService.acquireLease(String containerName, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.acquireLease(String containerName, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.acquireLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersAcquireLeaseResponse> acquireLease(String containerName, String url, Integer timeout, Integer duration, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "duration"
      type: "java.lang.Integer"
    - id: "proposedLeaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.breakLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "breakLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "breakLease(String containerName, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  nameWithType: "ContainersImpl.ContainersService.breakLease(String containerName, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.breakLease(String containerName, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.breakLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersBreakLeaseResponse> breakLease(String containerName, String url, Integer timeout, Integer breakPeriod, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "breakPeriod"
      type: "java.lang.Integer"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.changeLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "changeLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "changeLease(String containerName, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  nameWithType: "ContainersImpl.ContainersService.changeLease(String containerName, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.changeLease(String containerName, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.changeLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersChangeLeaseResponse> changeLease(String containerName, String url, Integer timeout, String leaseId, String proposedLeaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "proposedLeaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.create(java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  id: "create(java.lang.String,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>,com.azure.storage.blob.models.PublicAccessType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "create(String containerName, String url, Integer timeout, Map<String,String> metadata, PublicAccessType access, String version, String requestId, String restype, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Context context)"
  nameWithType: "ContainersImpl.ContainersService.create(String containerName, String url, Integer timeout, Map<String,String> metadata, PublicAccessType access, String version, String requestId, String restype, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.create(String containerName, String url, Integer timeout, Map<String,String> metadata, PublicAccessType access, String version, String requestId, String restype, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.create*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersCreateResponse> create(String containerName, String url, Integer timeout, Map<String,String> metadata, PublicAccessType access, String version, String requestId, String restype, String defaultEncryptionScope, Boolean encryptionScopeOverridePrevented, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "access"
      type: "com.azure.storage.blob.models.PublicAccessType"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "defaultEncryptionScope"
      type: "java.lang.String"
    - id: "encryptionScopeOverridePrevented"
      type: "java.lang.Boolean"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersCreateResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.delete(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "delete(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "delete(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, Context context)"
  nameWithType: "ContainersImpl.ContainersService.delete(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.delete(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.delete*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersDeleteResponse> delete(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersDeleteResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccessPolicy(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getAccessPolicy(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "getAccessPolicy(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ContainersImpl.ContainersService.getAccessPolicy(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccessPolicy(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccessPolicy*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersGetAccessPolicyResponse> getAccessPolicy(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getAccountInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "getAccountInfo(String containerName, String url, String version, String restype, String comp, Context context)"
  nameWithType: "ContainersImpl.ContainersService.getAccountInfo(String containerName, String url, String version, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccountInfo(String containerName, String url, String version, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccountInfo*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersGetAccountInfoResponse> getAccountInfo(String containerName, String url, String version, String restype, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getProperties(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "getProperties(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "getProperties(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, Context context)"
  nameWithType: "ContainersImpl.ContainersService.getProperties(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getProperties(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getProperties*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersGetPropertiesResponse> getProperties(String containerName, String url, Integer timeout, String leaseId, String version, String requestId, String restype, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobFlatSegment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listBlobFlatSegment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "listBlobFlatSegment(String containerName, String url, String prefix, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ContainersImpl.ContainersService.listBlobFlatSegment(String containerName, String url, String prefix, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobFlatSegment(String containerName, String url, String prefix, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobFlatSegment*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersListBlobFlatSegmentResponse> listBlobFlatSegment(String containerName, String url, String prefix, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "prefix"
      type: "java.lang.String"
    - id: "marker1"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "include"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobHierarchySegment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "listBlobHierarchySegment(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "listBlobHierarchySegment(String containerName, String url, String prefix, String delimiter, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ContainersImpl.ContainersService.listBlobHierarchySegment(String containerName, String url, String prefix, String delimiter, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobHierarchySegment(String containerName, String url, String prefix, String delimiter, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobHierarchySegment*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersListBlobHierarchySegmentResponse> listBlobHierarchySegment(String containerName, String url, String prefix, String delimiter, String marker1, Integer maxresults, String include, Integer timeout, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "prefix"
      type: "java.lang.String"
    - id: "delimiter"
      type: "java.lang.String"
    - id: "marker1"
      type: "java.lang.String"
    - id: "maxresults"
      type: "java.lang.Integer"
    - id: "include"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.releaseLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "releaseLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "releaseLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  nameWithType: "ContainersImpl.ContainersService.releaseLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.releaseLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.releaseLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersReleaseLeaseResponse> releaseLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.renewLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "renewLease(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "renewLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  nameWithType: "ContainersImpl.ContainersService.renewLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.renewLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.renewLease*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersRenewLeaseResponse> renewLease(String containerName, String url, Integer timeout, String leaseId, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String comp, String restype, String action, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "action"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setAccessPolicy(java.lang.String,java.lang.String,com.azure.storage.blob.implementation.SignedIdentifiersWrapper,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.PublicAccessType,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setAccessPolicy(java.lang.String,java.lang.String,com.azure.storage.blob.implementation.SignedIdentifiersWrapper,java.lang.Integer,java.lang.String,com.azure.storage.blob.models.PublicAccessType,com.azure.core.util.DateTimeRfc1123,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "setAccessPolicy(String containerName, String url, SignedIdentifiersWrapper containerAcl, Integer timeout, String leaseId, PublicAccessType access, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ContainersImpl.ContainersService.setAccessPolicy(String containerName, String url, SignedIdentifiersWrapper containerAcl, Integer timeout, String leaseId, PublicAccessType access, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setAccessPolicy(String containerName, String url, SignedIdentifiersWrapper containerAcl, Integer timeout, String leaseId, PublicAccessType access, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setAccessPolicy*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersSetAccessPolicyResponse> setAccessPolicy(String containerName, String url, SignedIdentifiersWrapper containerAcl, Integer timeout, String leaseId, PublicAccessType access, DateTimeRfc1123 ifModifiedSince, DateTimeRfc1123 ifUnmodifiedSince, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "containerAcl"
      type: "com.azure.storage.blob.implementation.SignedIdentifiersWrapper"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "access"
      type: "com.azure.storage.blob.models.PublicAccessType"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "ifUnmodifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse>"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setMetadata(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  id: "setMetadata(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,com.azure.core.util.DateTimeRfc1123,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  parent: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService"
  langs:
  - "java"
  name: "setMetadata(String containerName, String url, Integer timeout, String leaseId, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, String version, String requestId, String restype, String comp, Context context)"
  nameWithType: "ContainersImpl.ContainersService.setMetadata(String containerName, String url, Integer timeout, String leaseId, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, String version, String requestId, String restype, String comp, Context context)"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setMetadata(String containerName, String url, Integer timeout, String leaseId, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, String version, String requestId, String restype, String comp, Context context)"
  overload: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setMetadata*"
  type: "Method"
  package: "com.azure.storage.blob.implementation"
  syntax:
    content: "public abstract Mono<ContainersSetMetadataResponse> setMetadata(String containerName, String url, Integer timeout, String leaseId, Map<String,String> metadata, DateTimeRfc1123 ifModifiedSince, String version, String requestId, String restype, String comp, Context context)"
    parameters:
    - id: "containerName"
      type: "java.lang.String"
    - id: "url"
      type: "java.lang.String"
    - id: "timeout"
      type: "java.lang.Integer"
    - id: "leaseId"
      type: "java.lang.String"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
    - id: "ifModifiedSince"
      type: "com.azure.core.util.DateTimeRfc1123"
    - id: "version"
      type: "java.lang.String"
    - id: "requestId"
      type: "java.lang.String"
    - id: "restype"
      type: "java.lang.String"
    - id: "comp"
      type: "java.lang.String"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse>"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.models.PublicAccessType"
  name: "PublicAccessType"
  nameWithType: "PublicAccessType"
  fullName: "com.azure.storage.blob.models.PublicAccessType"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersCreateResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
    name: "ContainersCreateResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.create*"
  name: "create"
  nameWithType: "ContainersImpl.ContainersService.create"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.create"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
    name: "ContainersGetPropertiesResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getProperties*"
  name: "getProperties"
  nameWithType: "ContainersImpl.ContainersService.getProperties"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getProperties"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.core.util.DateTimeRfc1123"
  spec.java:
  - uid: "com.azure.core.util.DateTimeRfc1123"
    name: "DateTimeRfc1123"
    fullName: "com.azure.core.util.DateTimeRfc1123"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersDeleteResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
    name: "ContainersDeleteResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.delete*"
  name: "delete"
  nameWithType: "ContainersImpl.ContainersService.delete"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.delete"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
    name: "ContainersSetMetadataResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setMetadata*"
  name: "setMetadata"
  nameWithType: "ContainersImpl.ContainersService.setMetadata"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setMetadata"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
    name: "ContainersGetAccessPolicyResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccessPolicy*"
  name: "getAccessPolicy"
  nameWithType: "ContainersImpl.ContainersService.getAccessPolicy"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccessPolicy"
  package: "com.azure.storage.blob.implementation"
- uid: "com.azure.storage.blob.implementation.SignedIdentifiersWrapper"
  name: "SignedIdentifiersWrapper"
  nameWithType: "SignedIdentifiersWrapper"
  fullName: "com.azure.storage.blob.implementation.SignedIdentifiersWrapper"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
    name: "ContainersSetAccessPolicyResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setAccessPolicy*"
  name: "setAccessPolicy"
  nameWithType: "ContainersImpl.ContainersService.setAccessPolicy"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.setAccessPolicy"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
    name: "ContainersAcquireLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.acquireLease*"
  name: "acquireLease"
  nameWithType: "ContainersImpl.ContainersService.acquireLease"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.acquireLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
    name: "ContainersReleaseLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.releaseLease*"
  name: "releaseLease"
  nameWithType: "ContainersImpl.ContainersService.releaseLease"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.releaseLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
    name: "ContainersRenewLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.renewLease*"
  name: "renewLease"
  nameWithType: "ContainersImpl.ContainersService.renewLease"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.renewLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
    name: "ContainersBreakLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.breakLease*"
  name: "breakLease"
  nameWithType: "ContainersImpl.ContainersService.breakLease"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.breakLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
    name: "ContainersChangeLeaseResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.changeLease*"
  name: "changeLease"
  nameWithType: "ContainersImpl.ContainersService.changeLease"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.changeLease"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
    name: "ContainersListBlobFlatSegmentResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobFlatSegment*"
  name: "listBlobFlatSegment"
  nameWithType: "ContainersImpl.ContainersService.listBlobFlatSegment"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobFlatSegment"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
    name: "ContainersListBlobHierarchySegmentResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobHierarchySegment*"
  name: "listBlobHierarchySegment"
  nameWithType: "ContainersImpl.ContainersService.listBlobHierarchySegment"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.listBlobHierarchySegment"
  package: "com.azure.storage.blob.implementation"
- uid: "reactor.core.publisher.Mono<com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
    name: "ContainersGetAccountInfoResponse"
    fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccountInfo*"
  name: "getAccountInfo"
  nameWithType: "ContainersImpl.ContainersService.getAccountInfo"
  fullName: "com.azure.storage.blob.implementation.ContainersImpl.ContainersService.getAccountInfo"
  package: "com.azure.storage.blob.implementation"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
  name: "ContainersCreateResponse"
  nameWithType: "ContainersCreateResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersCreateResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
  name: "ContainersGetPropertiesResponse"
  nameWithType: "ContainersGetPropertiesResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersGetPropertiesResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
  name: "ContainersDeleteResponse"
  nameWithType: "ContainersDeleteResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersDeleteResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
  name: "ContainersSetMetadataResponse"
  nameWithType: "ContainersSetMetadataResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersSetMetadataResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
  name: "ContainersGetAccessPolicyResponse"
  nameWithType: "ContainersGetAccessPolicyResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccessPolicyResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
  name: "ContainersSetAccessPolicyResponse"
  nameWithType: "ContainersSetAccessPolicyResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersSetAccessPolicyResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
  name: "ContainersAcquireLeaseResponse"
  nameWithType: "ContainersAcquireLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersAcquireLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
  name: "ContainersReleaseLeaseResponse"
  nameWithType: "ContainersReleaseLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersReleaseLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
  name: "ContainersRenewLeaseResponse"
  nameWithType: "ContainersRenewLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersRenewLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
  name: "ContainersBreakLeaseResponse"
  nameWithType: "ContainersBreakLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersBreakLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
  name: "ContainersChangeLeaseResponse"
  nameWithType: "ContainersChangeLeaseResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersChangeLeaseResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
  name: "ContainersListBlobFlatSegmentResponse"
  nameWithType: "ContainersListBlobFlatSegmentResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobFlatSegmentResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
  name: "ContainersListBlobHierarchySegmentResponse"
  nameWithType: "ContainersListBlobHierarchySegmentResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersListBlobHierarchySegmentResponse"
- uid: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
  name: "ContainersGetAccountInfoResponse"
  nameWithType: "ContainersGetAccountInfoResponse"
  fullName: "com.azure.storage.blob.implementation.models.ContainersGetAccountInfoResponse"
