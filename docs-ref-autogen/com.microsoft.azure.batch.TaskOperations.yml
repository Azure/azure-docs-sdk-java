### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.TaskOperations.createTask(String jobId, TaskAddParameter taskToAdd)
  name: createTask(String jobId, TaskAddParameter taskToAdd)
  nameWithType: TaskOperations.createTask(String jobId, TaskAddParameter taskToAdd)
  parameters:
  - description: <p>The ID of the job to which to add the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="task"></xref> to add. </p>
    name: taskToAdd
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a single task to a job.</p>

    <p></p>
  syntax: public void createTask(String jobId, TaskAddParameter taskToAdd)
  uid: com.microsoft.azure.batch.TaskOperations.createTask(String,TaskAddParameter)
- fullName: com.microsoft.azure.batch.TaskOperations.createTask(String jobId, TaskAddParameter taskToAdd, Iterable<BatchClientBehavior> additionalBehaviors)
  name: createTask(String jobId, TaskAddParameter taskToAdd, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.createTask(String jobId, TaskAddParameter taskToAdd, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job to which to add the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="" data-throw-if-not-resolved="false" data-raw-source="task"></xref> to add. </p>
    name: taskToAdd
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Adds a single task to a job.</p>

    <p></p>
  syntax: public void createTask(String jobId, TaskAddParameter taskToAdd, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.createTask(String,TaskAddParameter,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList)
  name: createTasks(String jobId, List<TaskAddParameter> taskList)
  nameWithType: TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList)
  parameters:
  - description: <p>The ID of the job to which to add the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="tasks"></xref> to add. </p>
    name: taskList
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service or any network exception. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown if any thread has interrupted the current thread. </p>
  summary: >-
    <p>Adds multiple tasks to a job.</p>

    <p></p>
  syntax: public void createTasks(String jobId, List<TaskAddParameter> taskList)
  uid: com.microsoft.azure.batch.TaskOperations.createTasks(String,List<TaskAddParameter>)
- fullName: com.microsoft.azure.batch.TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  name: createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job to which to add the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="tasks"></xref> to add. </p>
    name: taskList
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service or any network exception. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown if any thread has interrupted the current thread. </p>
  summary: >-
    <p>Adds multiple tasks to a job.</p>

    <p></p>
  syntax: public void createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.createTasks(String,List<TaskAddParameter>,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.customBehaviors()
  name: customBehaviors()
  nameWithType: TaskOperations.customBehaviors()
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.customBehaviors()
  returns:
    description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public Collection<BatchClientBehavior> customBehaviors()
  uid: com.microsoft.azure.batch.TaskOperations.customBehaviors()
- fullName: com.microsoft.azure.batch.TaskOperations.deleteTask(String jobId, String taskId)
  name: deleteTask(String jobId, String taskId)
  nameWithType: TaskOperations.deleteTask(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified task.</p>

    <p></p>
  syntax: public void deleteTask(String jobId, String taskId)
  uid: com.microsoft.azure.batch.TaskOperations.deleteTask(String,String)
- fullName: com.microsoft.azure.batch.TaskOperations.deleteTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: deleteTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.deleteTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Deletes the specified task.</p>

    <p></p>
  syntax: public void deleteTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.deleteTask(String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.getTask(String jobId, String taskId)
  name: getTask(String jobId, String taskId)
  nameWithType: TaskOperations.getTask(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref> containing information about the specified Azure Batch task. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudTask?alt=com.microsoft.azure.batch.protocol.models.CloudTask&text=CloudTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref>.</p>

    <p></p>
  syntax: public CloudTask getTask(String jobId, String taskId)
  uid: com.microsoft.azure.batch.TaskOperations.getTask(String,String)
- fullName: com.microsoft.azure.batch.TaskOperations.getTask(String jobId, String taskId, DetailLevel detailLevel)
  name: getTask(String jobId, String taskId, DetailLevel detailLevel)
  nameWithType: TaskOperations.getTask(String jobId, String taskId, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref> containing information about the specified Azure Batch task. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudTask?alt=com.microsoft.azure.batch.protocol.models.CloudTask&text=CloudTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref>.</p>

    <p></p>
  syntax: public CloudTask getTask(String jobId, String taskId, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.TaskOperations.getTask(String,String,DetailLevel)
- fullName: com.microsoft.azure.batch.TaskOperations.getTask(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: getTask(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.getTask(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref> containing information about the specified Azure Batch task. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudTask?alt=com.microsoft.azure.batch.protocol.models.CloudTask&text=CloudTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the specified <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref>.</p>

    <p></p>
  syntax: public CloudTask getTask(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.getTask(String,String,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.listSubtasks(String jobId, String taskId)
  name: listSubtasks(String jobId, String taskId)
  nameWithType: TaskOperations.listSubtasks(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="SubtaskInformation"></xref> objects. </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="subtasks"></xref> of the specified task.</p>

    <p></p>
  syntax: public List<SubtaskInformation> listSubtasks(String jobId, String taskId)
  uid: com.microsoft.azure.batch.TaskOperations.listSubtasks(String,String)
- fullName: com.microsoft.azure.batch.TaskOperations.listSubtasks(String jobId, String taskId, DetailLevel detailLevel)
  name: listSubtasks(String jobId, String taskId, DetailLevel detailLevel)
  nameWithType: TaskOperations.listSubtasks(String jobId, String taskId, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="SubtaskInformation"></xref> objects. </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="subtasks"></xref> of the specified task.</p>

    <p></p>
  syntax: public List<SubtaskInformation> listSubtasks(String jobId, String taskId, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.TaskOperations.listSubtasks(String,String,DetailLevel)
- fullName: com.microsoft.azure.batch.TaskOperations.listSubtasks(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listSubtasks(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.listSubtasks(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="SubtaskInformation"></xref> objects. </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.SubtaskInformation?alt=com.microsoft.azure.batch.protocol.models.SubtaskInformation&text=SubtaskInformation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="subtasks"></xref> of the specified task.</p>

    <p></p>
  syntax: public List<SubtaskInformation> listSubtasks(String jobId, String taskId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.listSubtasks(String,String,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.listTasks(String jobId)
  name: listTasks(String jobId)
  nameWithType: TaskOperations.listTasks(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudTask?alt=com.microsoft.azure.batch.protocol.models.CloudTask&text=CloudTask" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="tasks"></xref> of the specified job.</p>

    <p></p>
  syntax: public PagedList<CloudTask> listTasks(String jobId)
  uid: com.microsoft.azure.batch.TaskOperations.listTasks(String)
- fullName: com.microsoft.azure.batch.TaskOperations.listTasks(String jobId, DetailLevel detailLevel)
  name: listTasks(String jobId, DetailLevel detailLevel)
  nameWithType: TaskOperations.listTasks(String jobId, DetailLevel detailLevel)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudTask?alt=com.microsoft.azure.batch.protocol.models.CloudTask&text=CloudTask" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="tasks"></xref> of the specified job.</p>

    <p></p>
  syntax: public PagedList<CloudTask> listTasks(String jobId, DetailLevel detailLevel)
  uid: com.microsoft.azure.batch.TaskOperations.listTasks(String,DetailLevel)
- fullName: com.microsoft.azure.batch.TaskOperations.listTasks(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  name: listTasks(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.listTasks(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.batch.DetailLevel" data-throw-if-not-resolved="false" data-raw-source="DetailLevel"></xref> used for filtering the list and for controlling which properties are retrieved from the service. </p>
    name: detailLevel
    type: <xref href="com.microsoft.azure.batch.DetailLevel?alt=com.microsoft.azure.batch.DetailLevel&text=DetailLevel" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  returns:
    description: <p>A list of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="CloudTask"></xref> objects. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudTask?alt=com.microsoft.azure.batch.protocol.models.CloudTask&text=CloudTask" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="tasks"></xref> of the specified job.</p>

    <p></p>
  syntax: public PagedList<CloudTask> listTasks(String jobId, DetailLevel detailLevel, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.listTasks(String,DetailLevel,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.reactivateTask(String jobId, String taskId)
  name: reactivateTask(String jobId, String taskId)
  nameWithType: TaskOperations.reactivateTask(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reactivates a task, allowing it to run again even if its retry count has been exhausted.</p>

    <p></p>
  syntax: public void reactivateTask(String jobId, String taskId)
  uid: com.microsoft.azure.batch.TaskOperations.reactivateTask(String,String)
- fullName: com.microsoft.azure.batch.TaskOperations.reactivateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: reactivateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.reactivateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Reactivates a task, allowing it to run again even if its retry count has been exhausted.</p>

    <p></p>
  syntax: public void reactivateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.reactivateTask(String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.terminateTask(String jobId, String taskId)
  name: terminateTask(String jobId, String taskId)
  nameWithType: TaskOperations.terminateTask(String jobId, String taskId)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Terminates the specified task.</p>

    <p></p>
  syntax: public void terminateTask(String jobId, String taskId)
  uid: com.microsoft.azure.batch.TaskOperations.terminateTask(String,String)
- fullName: com.microsoft.azure.batch.TaskOperations.terminateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  name: terminateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.terminateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Terminates the specified task.</p>

    <p></p>
  syntax: public void terminateTask(String jobId, String taskId, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.terminateTask(String,String,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.updateTask(String jobId, String taskId, TaskConstraints constraints)
  name: updateTask(String jobId, String taskId, TaskConstraints constraints)
  nameWithType: TaskOperations.updateTask(String jobId, String taskId, TaskConstraints constraints)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Constraints that apply to this task. If null, the task is given the default constraints. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified task.</p>

    <p></p>
  syntax: public void updateTask(String jobId, String taskId, TaskConstraints constraints)
  uid: com.microsoft.azure.batch.TaskOperations.updateTask(String,String,TaskConstraints)
- fullName: com.microsoft.azure.batch.TaskOperations.updateTask(String jobId, String taskId, TaskConstraints constraints, Iterable<BatchClientBehavior> additionalBehaviors)
  name: updateTask(String jobId, String taskId, TaskConstraints constraints, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.updateTask(String jobId, String taskId, TaskConstraints constraints, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job containing the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Constraints that apply to this task. If null, the task is given the default constraints. </p>
    name: constraints
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints" data-throw-if-not-resolved="False"/>
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when there is an error in serialization/deserialization of data sent to/received from the Batch service. </p>
  summary: >-
    <p>Updates the specified task.</p>

    <p></p>
  syntax: public void updateTask(String jobId, String taskId, TaskConstraints constraints, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.updateTask(String,String,TaskConstraints,Iterable<BatchClientBehavior>)
- fullName: com.microsoft.azure.batch.TaskOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  name: withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  nameWithType: TaskOperations.withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  overridden: com.microsoft.azure.batch.IInheritedBehaviors.withCustomBehaviors(Collection<BatchClientBehavior>)
  parameters:
  - description: <p>The collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false" data-raw-source="BatchClientBehavior"></xref> instances. </p>
    name: behaviors
    type: Collection&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>The current instance. </p>
    type: <xref href="com.microsoft.azure.batch.IInheritedBehaviors?alt=com.microsoft.azure.batch.IInheritedBehaviors&text=IInheritedBehaviors" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets a collection of behaviors that modify or customize requests to the Batch service.</p>

    <p></p>
  syntax: public IInheritedBehaviors withCustomBehaviors(Collection<BatchClientBehavior> behaviors)
  uid: com.microsoft.azure.batch.TaskOperations.withCustomBehaviors(Collection<BatchClientBehavior>)
nameWithType: TaskOperations
syntax: public class TaskOperations implements IInheritedBehaviors
type: class
uid: com.microsoft.azure.batch.TaskOperations
fullName: com.microsoft.azure.batch.TaskOperations
name: TaskOperations
package: com.microsoft.azure.batch
summary: <p>Performs task-related operations on an Azure Batch account. </p>
metadata: {}
