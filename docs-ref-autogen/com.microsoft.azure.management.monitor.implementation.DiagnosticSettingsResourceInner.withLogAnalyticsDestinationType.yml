### YamlMime:JavaMember
nameWithType: DiagnosticSettingsResourceInner.withLogAnalyticsDestinationType
type: method
members:
- fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner.withLogAnalyticsDestinationType(String logAnalyticsDestinationType)
  name: withLogAnalyticsDestinationType(String logAnalyticsDestinationType)
  nameWithType: DiagnosticSettingsResourceInner.withLogAnalyticsDestinationType(String logAnalyticsDestinationType)
  parameters:
  - description: <p>the logAnalyticsDestinationType value to set </p>
    name: logAnalyticsDestinationType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the DiagnosticSettingsResourceInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner?alt=com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner&text=DiagnosticSettingsResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set a string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: &lt;normalized service identity&gt;_&lt;normalized category name&gt;. Possible values are: Dedicated and null (null is default.).</p>

    <p></p>
  syntax: public DiagnosticSettingsResourceInner withLogAnalyticsDestinationType(String logAnalyticsDestinationType)
  uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner.withLogAnalyticsDestinationType(String)
uid: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner.withLogAnalyticsDestinationType*
fullName: com.microsoft.azure.management.monitor.implementation.DiagnosticSettingsResourceInner.withLogAnalyticsDestinationType(String logAnalyticsDestinationType)
name: withLogAnalyticsDestinationType(String logAnalyticsDestinationType)
package: com.microsoft.azure.management.monitor.implementation
metadata: {}
