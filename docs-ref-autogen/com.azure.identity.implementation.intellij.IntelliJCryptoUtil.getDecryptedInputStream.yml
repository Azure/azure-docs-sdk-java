### YamlMime:JavaMember
uid: "com.azure.identity.implementation.intellij.IntelliJCryptoUtil.getDecryptedInputStream*"
fullName: "com.azure.identity.implementation.intellij.IntelliJCryptoUtil.getDecryptedInputStream"
name: "getDecryptedInputStream"
nameWithType: "IntelliJCryptoUtil.getDecryptedInputStream"
members:
- uid: "com.azure.identity.implementation.intellij.IntelliJCryptoUtil.getDecryptedInputStream(java.io.InputStream,byte[],byte[])"
  fullName: "com.azure.identity.implementation.intellij.IntelliJCryptoUtil.getDecryptedInputStream(InputStream encryptedInputStream, byte[] keyData, byte[] ivData)"
  name: "getDecryptedInputStream(InputStream encryptedInputStream, byte[] keyData, byte[] ivData)"
  nameWithType: "IntelliJCryptoUtil.getDecryptedInputStream(InputStream encryptedInputStream, byte[] keyData, byte[] ivData)"
  parameters:
  - name: "encryptedInputStream"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - name: "keyData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "ivData"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static InputStream getDecryptedInputStream(InputStream encryptedInputStream, byte[] keyData, byte[] ivData)"
  returns:
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.identity.implementation.intellij"
artifact: com.azure:azure-identity:1.4.0
