### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
  id: _with_premium_sku_create
  parent: com.microsoft.azure.management.redis
  children:
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(DayOfWeek,int)
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(DayOfWeek,int,Period)
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(List<ScheduleEntry>)
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(ScheduleEntry)
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withShardCount(int)
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.yml
  langs:
  - java
  name: RedisCache.DefinitionStages.WithPremiumSkuCreate
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
      branch: 880e2022bf46b71f481107effb7c878a9ae065dd
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 267
  package: com.microsoft.azure.management.redis
  summary: <p>A Redis Cache definition with Premium <xref uid="com.microsoft.azure.management.redis._sku" data-throw-if-not-resolved="false">Sku</xref> specific functionality. </p>
  syntax: &o1
    content: public interface WithPremiumSkuCreate extends RedisCache.DefinitionStages.WithCreate
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  - com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  - com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  - com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withNonSslPort()
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withRedisConfiguration(Map<String, String>)
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withRedisConfiguration(String,String)
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withStaticIP(String)
  - com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withSubnet(HasId,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  - com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(DayOfWeek,int)
  id: withPatchSchedule(DayOfWeek,int)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.yml
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  fullName: WithPremiumSkuCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
  overload: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 284
  package: com.microsoft.azure.management.redis
  summary: >-
    <p>Patch schedule on a Premium Cluster Cache.</p>

    <p></p>
  syntax:
    content: public WithPremiumSkuCreate withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis._day_of_week
      description: <p>day of week when cache can be patched. </p>
    - id: startHourUtc
      type: f75371fa
      description: <p>start hour after which cache patching can start. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(DayOfWeek,int,Period)
  id: withPatchSchedule(DayOfWeek,int,Period)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.yml
  langs:
  - java
  name: withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  fullName: WithPremiumSkuCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
  overload: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 294
  package: com.microsoft.azure.management.redis
  summary: >-
    <p>Patch schedule on a Premium Cluster Cache.</p>

    <p></p>
  syntax:
    content: public WithPremiumSkuCreate withPatchSchedule(DayOfWeek dayOfWeek, int startHourUtc, Period maintenanceWindow)
    parameters:
    - id: dayOfWeek
      type: com.microsoft.azure.management.redis._day_of_week
      description: <p>day of week when cache can be patched. </p>
    - id: startHourUtc
      type: f75371fa
      description: <p>start hour after which cache patching can start. </p>
    - id: maintenanceWindow
      type: "6e600119"
      description: <p>ISO8601 timespan specifying how much time cache patching can take. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(List<ScheduleEntry>)
  id: withPatchSchedule(List<ScheduleEntry>)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.yml
  langs:
  - java
  name: withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  fullName: WithPremiumSkuCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(List<ScheduleEntry> scheduleEntry)
  overload: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 310
  package: com.microsoft.azure.management.redis
  summary: >-
    <p>Patch schedule on a Premium Cluster Cache.</p>

    <p></p>
  syntax:
    content: public WithPremiumSkuCreate withPatchSchedule(List<ScheduleEntry> scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: 5618da2dcom.microsoft.azure.management.redis._schedule_entrya08ddfce
      description: <p>List of patch schedule entries for Premium Redis Cache. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule(ScheduleEntry)
  id: withPatchSchedule(ScheduleEntry)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.yml
  langs:
  - java
  name: withPatchSchedule(ScheduleEntry scheduleEntry)
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(ScheduleEntry scheduleEntry)
  fullName: WithPremiumSkuCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule(ScheduleEntry scheduleEntry)
  overload: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 302
  package: com.microsoft.azure.management.redis
  summary: >-
    <p>Patch schedule on a Premium Cluster Cache.</p>

    <p></p>
  syntax:
    content: public WithPremiumSkuCreate withPatchSchedule(ScheduleEntry scheduleEntry)
    parameters:
    - id: scheduleEntry
      type: com.microsoft.azure.management.redis._schedule_entry
      description: <p>Patch schedule entry for Premium Redis Cache. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withShardCount(int)
  id: withShardCount(int)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.yml
  langs:
  - java
  name: withShardCount(int shardCount)
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate.withShardCount(int shardCount)
  fullName: WithPremiumSkuCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate.withShardCount(int shardCount)
  overload: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withShardCount*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-redis/src/main/java/com/microsoft/azure/management/redis/RedisCache.java
    startLine: 275
  package: com.microsoft.azure.management.redis
  summary: >-
    <p>The number of shards to be created on a Premium Cluster Cache.</p>

    <p></p>
  syntax:
    content: public WithPremiumSkuCreate withShardCount(int shardCount)
    parameters:
    - id: shardCount
      type: f75371fa
      description: <p>the shard count value to set. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
      description: <p>the next stage of Redis Cache with Premium SKU definition. </p>
references:
- uid: f75371fa
  spec.java:
  - name: int
    fullName: int
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withShardCount*
  name: withShardCount
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate.withShardCount
  fullName: WithPremiumSkuCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate.withShardCount
  package: com.microsoft.azure.management.redis
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.withPatchSchedule*
  name: withPatchSchedule
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule
  fullName: WithPremiumSkuCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate.withPatchSchedule
  package: com.microsoft.azure.management.redis
- uid: "6e600119"
  spec.java:
  - name: Period
    fullName: Period
- uid: 5618da2dcom.microsoft.azure.management.redis._schedule_entrya08ddfce
  spec.java:
  - name: List<
    fullName: List<
  - uid: com.microsoft.azure.management.redis._schedule_entry
    name: ScheduleEntry
    fullName: com.microsoft.azure.management.redis.ScheduleEntry
    href: com.microsoft.azure.management.redis._schedule_entry.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.create()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: create()
  nameWithType: Creatable<T>.create()
  fullName: T com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.create()
  type: Method
  summary: >-
    <p>Execute the create request.</p>

    <p></p>
  syntax:
    content: public T create()
    return:
      type: 8ce1ecb9
      description: <p>the create resource </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync(final ServiceCallback<T>)
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync(final ServiceCallback<T> callback)
  nameWithType: Creatable<T>.createAsync(final ServiceCallback<T> callback)
  fullName: ServiceFuture<T> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync(final ServiceCallback<T> callback)
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public ServiceFuture<T> createAsync(final ServiceCallback<T> callback)
    parameters:
    - id: callback
      type: fe95c2b0
      description: <p>the callback to handle success and failure </p>
    return:
      type: c0371a4e
      description: <p>a handle to cancel the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._creatable.createAsync()
  parent: com.microsoft.azure.management.resources.fluentcore.model._creatable
  href: com.microsoft.azure.management.resources.fluentcore.model._creatable.yml
  name: createAsync()
  nameWithType: Creatable<T>.createAsync()
  fullName: Observable<Indexable> com.microsoft.azure.management.resources.fluentcore.model.Creatable<T>.createAsync()
  type: Method
  summary: >-
    <p>Puts the request into the queue and allow the HTTP client to execute it when system resources are available.</p>

    <p></p>
  syntax:
    content: public Observable<Indexable> createAsync()
    return:
      type: c2d0e8c6com.microsoft.azure.management.resources.fluentcore.model._indexablea08ddfce
      description: <p>an observable of the request </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model._indexable.key()
  parent: com.microsoft.azure.management.resources.fluentcore.model._indexable
  href: com.microsoft.azure.management.resources.fluentcore.model._indexable.yml
  name: key()
  nameWithType: Indexable.key()
  fullName: String com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
  type: Method
  syntax:
    content: public String key()
    return:
      type: "26831127"
      description: <p>the index key. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.name()
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name
  href: com.microsoft.azure.management.resources.fluentcore.arm.models._has_name.yml
  name: name()
  nameWithType: HasName.name()
  fullName: String com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
  type: Method
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>the name of the resource </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withNonSslPort()
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.yml
  name: withNonSslPort()
  nameWithType: RedisCache.DefinitionStages.WithCreate.withNonSslPort()
  fullName: WithCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withNonSslPort()
  type: Method
  summary: >-
    <p>Enables non-ssl Redis server port (6379).</p>

    <p></p>
  syntax:
    content: public WithCreate withNonSslPort()
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
      description: <p>the next stage of Redis Cache definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withRedisConfiguration(Map<String, String>)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.yml
  name: withRedisConfiguration(Map<String, String> redisConfiguration)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(Map<String, String> redisConfiguration)
  fullName: WithCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(Map<String, String> redisConfiguration)
  type: Method
  summary: >-
    <p>All Redis Settings. Few possible keys: rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy, notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries, list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries, zset-max-ziplist-entries, zset-max-ziplist-value etc.</p>

    <p></p>
  syntax:
    content: public WithCreate withRedisConfiguration(Map<String, String> redisConfiguration)
    parameters:
    - id: redisConfiguration
      type: 689c8cb5
      description: <p>configuration of Redis Cache as a map indexed by configuration name </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
      description: <p>the next stage of Redis Cache definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withRedisConfiguration(String,String)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.yml
  name: withRedisConfiguration(String key, String value)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(String key, String value)
  fullName: WithCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withRedisConfiguration(String key, String value)
  type: Method
  summary: >-
    <p>Specifies Redis Setting. rdb-backup-enabled, rdb-storage-connection-string, rdb-backup-frequency, maxmemory-delta, maxmemory-policy, notify-keyspace-events, maxmemory-samples, slowlog-log-slower-than, slowlog-max-len, list-max-ziplist-entries, list-max-ziplist-value, hash-max-ziplist-entries, hash-max-ziplist-value, set -max-intset-entries, zset-max-ziplist-entries, zset-max-ziplist-value etc.</p>

    <p></p>
  syntax:
    content: public WithCreate withRedisConfiguration(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>Redis configuration name. </p>
    - id: value
      type: "26831127"
      description: <p>Redis configuration value. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
      description: <p>the next stage of Redis Cache definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withStaticIP(String)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.yml
  name: withStaticIP(String staticIP)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withStaticIP(String staticIP)
  fullName: WithCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withStaticIP(String staticIP)
  type: Method
  summary: >-
    <p>Sets Redis Cache static IP. Required when deploying a Redis Cache inside an existing <xref uid="com.microsoft.azure.management._azure" data-throw-if-not-resolved="false">Azure</xref> Virtual Network.</p>

    <p></p>
  syntax:
    content: public WithCreate withStaticIP(String staticIP)
    parameters:
    - id: staticIP
      type: "26831127"
      description: <p>the static IP value to set. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
      description: <p>the next stage of Redis Cache definition. </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.withSubnet(HasId,String)
  parent: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.yml
  name: withSubnet(HasId network, String subnetName)
  nameWithType: RedisCache.DefinitionStages.WithCreate.withSubnet(HasId network, String subnetName)
  fullName: WithCreate com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate.withSubnet(HasId network, String subnetName)
  type: Method
  summary: >-
    <p>Assigns the specified subnet to this instance of Redis Cache.</p>

    <p></p>
  syntax:
    content: public WithCreate withSubnet(HasId network, String subnetName)
    parameters:
    - id: network
      type: com.microsoft.azure.management.resources.fluentcore.arm.models._has_id
      description: <p>instance of Network object. </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of the subnet. </p>
    return:
      type: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
      description: <p>the next stage of Redis Cache definition. </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTag(String,String)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTag(String key, String value)
  nameWithType: Resource.DefinitionWithTags<T>.withTag(String key, String value)
  fullName: T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTag(String key, String value)
  type: Method
  summary: <p>Adds a tag to the resource. </p>
  syntax:
    content: public T withTag(String key, String value)
    parameters:
    - id: key
      type: "26831127"
      description: <p>the key for the tag </p>
    - id: value
      type: "26831127"
      description: <p>the value for the tag </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.withTags(Map<String, String>)
  parent: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09
  href: com.microsoft.azure.management.resources.fluentcore.arm.models.720b3efb4062edecc50de4ad58dc1c09.yml
  name: withTags(Map<String, String> tags)
  nameWithType: Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  fullName: T com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.DefinitionWithTags<T>.withTags(Map<String, String> tags)
  type: Method
  summary: <p>Specifies tags for the resource as a <xref uid="" data-throw-if-not-resolved="false">Map</xref>. </p>
  syntax:
    content: public T withTags(Map<String, String> tags)
    parameters:
    - id: tags
      type: 689c8cb5
      description: <p>a <xref uid="" data-throw-if-not-resolved="false">Map</xref> of tags </p>
    return:
      type: 8ce1ecb9
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_create.yml
  name: RedisCache.DefinitionStages.WithCreate
  nameWithType: RedisCache.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithCreate
  type: Interface
  summary: <p>A Redis Cache definition with sufficient inputs to create a new Redis Cache in the cloud, but exposing additional optional inputs to specify. </p>
  syntax:
    content: public interface WithCreate extends Creatable<RedisCache>,Resource.DefinitionWithTags<WithCreate>
- uid: com.microsoft.azure.management.redis._redis_cache._definition
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis._redis_cache._definition.yml
  name: RedisCache.Definition
  nameWithType: RedisCache.Definition
  fullName: com.microsoft.azure.management.redis.RedisCache.Definition
  type: Interface
  summary: <p>Container interface for all the definitions that need to be implemented. </p>
  syntax:
    content: public interface Definition extends RedisCache.DefinitionStages.Blank,RedisCache.DefinitionStages.WithGroup,RedisCache.DefinitionStages.WithSku,RedisCache.DefinitionStages.WithCreate,RedisCache.DefinitionStages.WithPremiumSkuCreate
- uid: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis._redis_cache._definition_stages._with_premium_sku_create.yml
  name: RedisCache.DefinitionStages.WithPremiumSkuCreate
  nameWithType: RedisCache.DefinitionStages.WithPremiumSkuCreate
  fullName: com.microsoft.azure.management.redis.RedisCache.DefinitionStages.WithPremiumSkuCreate
  type: Interface
  summary: <p>A Redis Cache definition with Premium <xref uid="com.microsoft.azure.management.redis._sku" data-throw-if-not-resolved="false">Sku</xref> specific functionality. </p>
  syntax: *o1
- uid: com.microsoft.azure.management.redis._day_of_week
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis._day_of_week.yml
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: com.microsoft.azure.management.redis.DayOfWeek
  type: Enum
  summary: <p>Defines values for <xref uid="com.microsoft.azure.management.redis._day_of_week" data-throw-if-not-resolved="false">DayOfWeek</xref>. </p>
  syntax:
    content: public enum DayOfWeek
- uid: com.microsoft.azure.management.redis._schedule_entry
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis._schedule_entry.yml
  name: ScheduleEntry
  nameWithType: ScheduleEntry
  fullName: com.microsoft.azure.management.redis.ScheduleEntry
  type: Class
  summary: <p>Patch schedule entry for a Premium Redis Cache. </p>
  syntax:
    content: public class ScheduleEntry
- uid: com.microsoft.azure.management.redis._sku
  parent: com.microsoft.azure.management.redis
  href: com.microsoft.azure.management.redis._sku.yml
  name: Sku
  nameWithType: Sku
  fullName: com.microsoft.azure.management.redis.Sku
  type: Class
  summary: <p>SKU parameters supplied to the create Redis operation. </p>
  syntax:
    content: public class Sku
