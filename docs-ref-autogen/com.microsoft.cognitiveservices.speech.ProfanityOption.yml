### YamlMime:JavaEnum
uid: "com.microsoft.cognitiveservices.speech.ProfanityOption"
fullName: "com.microsoft.cognitiveservices.speech.ProfanityOption"
name: "ProfanityOption"
nameWithType: "ProfanityOption"
summary: "Define profanity option for response result."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Enum?alt=java.lang.Enum&text=Enum\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)?alt=java.lang.Enum.<T>valueOf&text=<T>valueOf\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.clone()?alt=java.lang.Enum.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.compareTo(E)?alt=java.lang.Enum.compareTo&text=compareTo\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.equals(java.lang.Object)?alt=java.lang.Enum.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.finalize()?alt=java.lang.Enum.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.getDeclaringClass()?alt=java.lang.Enum.getDeclaringClass&text=getDeclaringClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.hashCode()?alt=java.lang.Enum.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.name()?alt=java.lang.Enum.name&text=name\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.ordinal()?alt=java.lang.Enum.ordinal&text=ordinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Enum.toString()?alt=java.lang.Enum.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public enum **ProfanityOption**</br> extends <xref href=\"java.lang.Enum?alt=java.lang.Enum&text=Enum\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.ProfanityOption?alt=com.microsoft.cognitiveservices.speech.ProfanityOption&text=ProfanityOption\" data-throw-if-not-resolved=\"False\" />&gt;"
fields:
- uid: "com.microsoft.cognitiveservices.speech.ProfanityOption.Masked"
  fullName: "com.microsoft.cognitiveservices.speech.ProfanityOption.Masked"
  name: "Masked"
  nameWithType: "ProfanityOption.Masked"
  summary: "Replaces profanity with asterisks."
  desc: "Replaces profanity with asterisks."
- uid: "com.microsoft.cognitiveservices.speech.ProfanityOption.Raw"
  fullName: "com.microsoft.cognitiveservices.speech.ProfanityOption.Raw"
  name: "Raw"
  nameWithType: "ProfanityOption.Raw"
  summary: "Includes the profanity in the result."
  desc: "Includes the profanity in the result."
- uid: "com.microsoft.cognitiveservices.speech.ProfanityOption.Removed"
  fullName: "com.microsoft.cognitiveservices.speech.ProfanityOption.Removed"
  name: "Removed"
  nameWithType: "ProfanityOption.Removed"
  summary: "Removes all profanity from the result."
  desc: "Removes all profanity from the result."
methods:
- uid: "com.microsoft.cognitiveservices.speech.ProfanityOption.getValue()"
  fullName: "com.microsoft.cognitiveservices.speech.ProfanityOption.getValue()"
  name: "getValue()"
  nameWithType: "ProfanityOption.getValue()"
  summary: "Returns the internal value of profanity option."
  syntax: "public int getValue()"
  desc: "Returns the internal value of profanity option."
  returns:
    description: "the internal profanity value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.ProfanityOption.valueOf(java.lang.String)"
  fullName: "com.microsoft.cognitiveservices.speech.ProfanityOption.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "ProfanityOption.valueOf(String name)"
  modifiers:
  - "static"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ProfanityOption valueOf(String name)"
  returns:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.ProfanityOption?alt=com.microsoft.cognitiveservices.speech.ProfanityOption&text=ProfanityOption\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.ProfanityOption.values()"
  fullName: "com.microsoft.cognitiveservices.speech.ProfanityOption.values()"
  name: "values()"
  nameWithType: "ProfanityOption.values()"
  modifiers:
  - "static"
  syntax: "public static ProfanityOption[] values()"
  returns:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.ProfanityOption?alt=com.microsoft.cognitiveservices.speech.ProfanityOption&text=ProfanityOption\" data-throw-if-not-resolved=\"False\" />[]"
desc: "Define profanity option for response result. Added in version 1.5.0."
metadata: {}
package: "com.microsoft.cognitiveservices.speech"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
