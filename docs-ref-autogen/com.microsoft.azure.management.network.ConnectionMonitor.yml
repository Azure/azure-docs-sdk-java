### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.ConnectionMonitor"
fullName: "com.microsoft.azure.management.network.ConnectionMonitor"
name: "ConnectionMonitor"
nameWithType: "ConnectionMonitor"
summary: "Client-side representation of Connection Monitor object, associated with Network Watcher."
syntax: "public interface ConnectionMonitor extends HasInner<ConnectionMonitorResultInner>, HasName, HasId, Indexable"
methods:
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.autoStart()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.autoStart()"
  name: "autoStart()"
  nameWithType: "ConnectionMonitor.autoStart()"
  summary: "Determines if the connection monitor will start automatically once created."
  modifiers:
  - "abstract"
  syntax: "public abstract boolean autoStart()"
  desc: "Determines if the connection monitor will start automatically once created."
  returns:
    description: "true if the connection monitor will start automatically once created, false otherwise"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.destination()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.destination()"
  name: "destination()"
  nameWithType: "ConnectionMonitor.destination()"
  modifiers:
  - "abstract"
  syntax: "public abstract ConnectionMonitorDestination destination()"
  returns:
    description: "the destination property"
    type: "<xref href=\"com.microsoft.azure.management.network.ConnectionMonitorDestination?alt=com.microsoft.azure.management.network.ConnectionMonitorDestination&text=ConnectionMonitorDestination\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.location()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.location()"
  name: "location()"
  nameWithType: "ConnectionMonitor.location()"
  modifiers:
  - "abstract"
  syntax: "public abstract String location()"
  returns:
    description: "connection monitor location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.monitoringIntervalInSeconds()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.monitoringIntervalInSeconds()"
  name: "monitoringIntervalInSeconds()"
  nameWithType: "ConnectionMonitor.monitoringIntervalInSeconds()"
  modifiers:
  - "abstract"
  syntax: "public abstract int monitoringIntervalInSeconds()"
  returns:
    description: "monitoring interval in seconds"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.monitoringStatus()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.monitoringStatus()"
  name: "monitoringStatus()"
  nameWithType: "ConnectionMonitor.monitoringStatus()"
  modifiers:
  - "abstract"
  syntax: "public abstract String monitoringStatus()"
  returns:
    description: "the monitoring status of the connection monitor"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.provisioningState()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ConnectionMonitor.provisioningState()"
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  returns:
    description: "the provisioning state of the connection monitor"
    type: "<xref href=\"com.microsoft.azure.management.network.ProvisioningState?alt=com.microsoft.azure.management.network.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.query()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.query()"
  name: "query()"
  nameWithType: "ConnectionMonitor.query()"
  summary: "Query a snapshot of the most recent connection state of a connection monitor."
  modifiers:
  - "abstract"
  syntax: "public abstract ConnectionMonitorQueryResult query()"
  desc: "Query a snapshot of the most recent connection state of a connection monitor."
  returns:
    description: "snapshot of the most recent connection state"
    type: "<xref href=\"com.microsoft.azure.management.network.ConnectionMonitorQueryResult?alt=com.microsoft.azure.management.network.ConnectionMonitorQueryResult&text=ConnectionMonitorQueryResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.queryAsync()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.queryAsync()"
  name: "queryAsync()"
  nameWithType: "ConnectionMonitor.queryAsync()"
  summary: "Query a snapshot of the most recent connection state of a connection monitor asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Observable<ConnectionMonitorQueryResult> queryAsync()"
  desc: "Query a snapshot of the most recent connection state of a connection monitor asynchronously."
  returns:
    description: "snapshot of the most recent connection state"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ConnectionMonitorQueryResult?alt=com.microsoft.azure.management.network.ConnectionMonitorQueryResult&text=ConnectionMonitorQueryResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.source()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.source()"
  name: "source()"
  nameWithType: "ConnectionMonitor.source()"
  modifiers:
  - "abstract"
  syntax: "public abstract ConnectionMonitorSource source()"
  returns:
    description: "the source property"
    type: "<xref href=\"com.microsoft.azure.management.network.ConnectionMonitorSource?alt=com.microsoft.azure.management.network.ConnectionMonitorSource&text=ConnectionMonitorSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.start()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.start()"
  name: "start()"
  nameWithType: "ConnectionMonitor.start()"
  summary: "Starts a specified connection monitor."
  modifiers:
  - "abstract"
  syntax: "public abstract void start()"
  desc: "Starts a specified connection monitor."
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.startAsync()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.startAsync()"
  name: "startAsync()"
  nameWithType: "ConnectionMonitor.startAsync()"
  summary: "Starts a specified connection monitor asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Completable startAsync()"
  desc: "Starts a specified connection monitor asynchronously."
  returns:
    description: "the handle to the REST call"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.startTime()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.startTime()"
  name: "startTime()"
  nameWithType: "ConnectionMonitor.startTime()"
  modifiers:
  - "abstract"
  syntax: "public abstract DateTime startTime()"
  returns:
    description: "the date and time when the connection monitor was started"
    type: "<xref href=\"org.joda.time.DateTime?alt=org.joda.time.DateTime&text=DateTime\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.stop()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.stop()"
  name: "stop()"
  nameWithType: "ConnectionMonitor.stop()"
  summary: "Stops a specified connection monitor."
  modifiers:
  - "abstract"
  syntax: "public abstract void stop()"
  desc: "Stops a specified connection monitor."
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.stopAsync()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.stopAsync()"
  name: "stopAsync()"
  nameWithType: "ConnectionMonitor.stopAsync()"
  summary: "Stops a specified connection monitor asynchronously."
  modifiers:
  - "abstract"
  syntax: "public abstract Completable stopAsync()"
  desc: "Stops a specified connection monitor asynchronously."
  returns:
    description: "the handle to the REST call"
    type: "<xref href=\"rx.Completable?alt=rx.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ConnectionMonitor.tags()"
  fullName: "com.microsoft.azure.management.network.ConnectionMonitor.tags()"
  name: "tags()"
  nameWithType: "ConnectionMonitor.tags()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,String> tags()"
  returns:
    description: "connection monitor tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Client-side representation of Connection Monitor object, associated with Network Watcher."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasId?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasId&text=HasId\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasName?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasName&text=HasName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.ConnectionMonitorResultInner?alt=com.microsoft.azure.management.network.implementation.ConnectionMonitorResultInner&text=ConnectionMonitorResultInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
