### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem"
name: "TaskItem"
nameWithType: "TaskItem"
summary: "Type representing a unit of work, upon invocation produces result of <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref> type."
syntax: "public interface TaskItem"
methods:
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.beforeGroupInvoke()"
  name: "beforeGroupInvoke()"
  nameWithType: "TaskItem.beforeGroupInvoke()"
  summary: "The method that gets called before invoking all the tasks in the <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup\"></xref> this task belongs to."
  modifiers:
  - "abstract"
  syntax: "public abstract void beforeGroupInvoke()"
  desc: "The method that gets called before invoking all the tasks in the <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup\"></xref> this task belongs to."
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync(boolean)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAfterPostRunAsync(boolean isGroupFaulted)"
  name: "invokeAfterPostRunAsync(boolean isGroupFaulted)"
  nameWithType: "TaskItem.invokeAfterPostRunAsync(boolean isGroupFaulted)"
  summary: "The method that gets called after invocation of \"post run\" task items depends on this Task<wbr>Item."
  modifiers:
  - "abstract"
  parameters:
  - description: "true if one or more tasks in the group this TaskItem belongs\n                       to are in faulted state."
    name: "isGroupFaulted"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Void> invokeAfterPostRunAsync(boolean isGroupFaulted)"
  desc: "The method that gets called after invocation of \"post run\" task items depends on this TaskItem.\n\nThis method will be invoked only if this TaskItem had \"post run\" dependents."
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Flux\"></xref> representing any asynchronous work initiated"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync(com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext)"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.invokeAsync(TaskGroup.InvocationContext context)"
  name: "invokeAsync(TaskGroup.InvocationContext context)"
  nameWithType: "TaskItem.invokeAsync(TaskGroup.InvocationContext context)"
  summary: "The method that gets called to perform the unit of work asynchronously."
  modifiers:
  - "abstract"
  parameters:
  - description: "the context shared across the the all task items in the group\n                this task item belongs to."
    name: "context"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext?alt=com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup.InvocationContext&text=InvocationContext\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Indexable> invokeAsync(TaskGroup.InvocationContext context)"
  desc: "The method that gets called to perform the unit of work asynchronously."
  returns:
    description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> upon subscription does the unit of work and produces\n result of type <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref>"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.isHot()"
  name: "isHot()"
  nameWithType: "TaskItem.isHot()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isHot()"
  returns:
    description: "true if the publisher returned by invokeAsync(cxt) is a hot observable,\n false if its a cold publisher."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result()"
  fullName: "com.azure.resourcemanager.resources.fluentcore.dag.TaskItem.result()"
  name: "result()"
  nameWithType: "TaskItem.result()"
  modifiers:
  - "abstract"
  syntax: "public abstract Indexable result()"
  returns:
    description: "the result of the task invocation"
    type: "<xref href=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable?alt=com.azure.resourcemanager.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Type representing a unit of work, upon invocation produces result of <xref uid=\"com.azure.resourcemanager.resources.fluentcore.model.Indexable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Indexable\"></xref> type.\n\nThe <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.TaskGroup\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TaskGroup\"></xref> holds a group of these TaskItems those depends on each other."
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.19.0
