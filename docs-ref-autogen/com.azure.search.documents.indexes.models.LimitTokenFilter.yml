### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.LimitTokenFilter"
fullName: "com.azure.search.documents.indexes.models.LimitTokenFilter"
name: "LimitTokenFilter"
nameWithType: "LimitTokenFilter"
summary: "Limits the number of tokens while indexing."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.TokenFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.TokenFilter.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class LimitTokenFilter extends TokenFilter"
constructors:
- uid: "com.azure.search.documents.indexes.models.LimitTokenFilter.LimitTokenFilter(java.lang.String)"
  fullName: "com.azure.search.documents.indexes.models.LimitTokenFilter.LimitTokenFilter(String name)"
  name: "LimitTokenFilter(String name)"
  nameWithType: "LimitTokenFilter.LimitTokenFilter(String name)"
  summary: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref>."
  parameters:
  - description: "The name of the token filter. It must only contain letters, digits,\n spaces, dashes or underscores, can only start and end with alphanumeric\n characters, and is limited to 128 characters."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LimitTokenFilter(String name)"
  desc: "Constructor of <xref uid=\"com.azure.search.documents.indexes.models.TokenFilter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TokenFilter\"></xref>."
methods:
- uid: "com.azure.search.documents.indexes.models.LimitTokenFilter.areAllTokensConsumed()"
  fullName: "com.azure.search.documents.indexes.models.LimitTokenFilter.areAllTokensConsumed()"
  name: "areAllTokensConsumed()"
  nameWithType: "LimitTokenFilter.areAllTokensConsumed()"
  summary: "Get the consume<wbr>All<wbr>Tokens property: A value indicating whether all tokens from the input must be consumed even if max<wbr>Token<wbr>Count is reached."
  syntax: "public Boolean areAllTokensConsumed()"
  desc: "Get the consumeAllTokens property: A value indicating whether all tokens from the input must be consumed even if maxTokenCount is reached. Default is false."
  returns:
    description: "the consumeAllTokens value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.LimitTokenFilter.getMaxTokenCount()"
  fullName: "com.azure.search.documents.indexes.models.LimitTokenFilter.getMaxTokenCount()"
  name: "getMaxTokenCount()"
  nameWithType: "LimitTokenFilter.getMaxTokenCount()"
  summary: "Get the max<wbr>Token<wbr>Count property: The maximum number of tokens to produce."
  syntax: "public Integer getMaxTokenCount()"
  desc: "Get the maxTokenCount property: The maximum number of tokens to produce. Default is 1."
  returns:
    description: "the maxTokenCount value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.LimitTokenFilter.setAllTokensConsumed(java.lang.Boolean)"
  fullName: "com.azure.search.documents.indexes.models.LimitTokenFilter.setAllTokensConsumed(Boolean allTokensConsumed)"
  name: "setAllTokensConsumed(Boolean allTokensConsumed)"
  nameWithType: "LimitTokenFilter.setAllTokensConsumed(Boolean allTokensConsumed)"
  summary: "Set the consume<wbr>All<wbr>Tokens property: A value indicating whether all tokens from the input must be consumed even if max<wbr>Token<wbr>Count is reached."
  parameters:
  - description: "the consumeAllTokens value to set."
    name: "allTokensConsumed"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LimitTokenFilter setAllTokensConsumed(Boolean allTokensConsumed)"
  desc: "Set the consumeAllTokens property: A value indicating whether all tokens from the input must be consumed even if maxTokenCount is reached. Default is false."
  returns:
    description: "the LimitTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.LimitTokenFilter?alt=com.azure.search.documents.indexes.models.LimitTokenFilter&text=LimitTokenFilter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.documents.indexes.models.LimitTokenFilter.setMaxTokenCount(java.lang.Integer)"
  fullName: "com.azure.search.documents.indexes.models.LimitTokenFilter.setMaxTokenCount(Integer maxTokenCount)"
  name: "setMaxTokenCount(Integer maxTokenCount)"
  nameWithType: "LimitTokenFilter.setMaxTokenCount(Integer maxTokenCount)"
  summary: "Set the max<wbr>Token<wbr>Count property: The maximum number of tokens to produce."
  parameters:
  - description: "the maxTokenCount value to set."
    name: "maxTokenCount"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LimitTokenFilter setMaxTokenCount(Integer maxTokenCount)"
  desc: "Set the maxTokenCount property: The maximum number of tokens to produce. Default is 1."
  returns:
    description: "the LimitTokenFilter object itself."
    type: "<xref href=\"com.azure.search.documents.indexes.models.LimitTokenFilter?alt=com.azure.search.documents.indexes.models.LimitTokenFilter&text=LimitTokenFilter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Limits the number of tokens while indexing. This token filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.4.13
