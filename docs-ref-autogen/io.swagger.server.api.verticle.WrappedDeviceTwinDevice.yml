### YamlMime:ManagedReference
items:
- uid: io.swagger.server.api.verticle.WrappedDeviceTwinDevice
  id: WrappedDeviceTwinDevice
  parent: io.swagger.server.api.verticle
  children:
  - io.swagger.server.api.verticle.WrappedDeviceTwinDevice.toJsonObject()
  - io.swagger.server.api.verticle.WrappedDeviceTwinDevice.WrappedDeviceTwinDevice(String,String)
  href: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.yml
  langs:
  - java
  name: WrappedDeviceTwinDevice
  nameWithType: WrappedDeviceTwinDevice
  fullName: io.swagger.server.api.verticle.WrappedDeviceTwinDevice
  type: Class
  source:
    remote: &o0
      path: edge-e2e/src/main/java/io/swagger/server/api/verticle/WrappedDeviceTwinDevice.java
      branch: master
      repo: https://github.com/Azure/azure-iot-sdk-java
    path: edge-e2e/src/main/java/io/swagger/server/api/verticle/WrappedDeviceTwinDevice.java
    startLine: 10
  package: io.swagger.server.api.verticle
  syntax:
    content: public class WrappedDeviceTwinDevice extends DeviceTwinDevice
  inheritance:
  - java.lang.Object
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  inheritedMembers:
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearDesiredProperties()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTags()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTwin()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.desiredPropertiesToString()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String,String)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getCapabilities()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getConfigurations()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredMap()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredProperties()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredPropertiesVersion()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDeviceId()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getETag()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getModuleId()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedMap()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedProperties()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedPropertiesVersion()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTags()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsMap()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsVersion()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getVersion()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.reportedPropertiesToString()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setCapabilities(DeviceCapabilities)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setConfigurations(Map<String, ConfigurationInfo>)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(Set<Pair>)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(TwinCollection)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setETag(String)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setReportedProperties(TwinCollection)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(Set<Pair>)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(TwinCollection)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.tagsToString()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.toString()
- uid: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.toJsonObject()
  id: toJsonObject()
  parent: io.swagger.server.api.verticle.WrappedDeviceTwinDevice
  href: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.yml
  langs:
  - java
  name: toJsonObject()
  nameWithType: WrappedDeviceTwinDevice.toJsonObject()
  fullName: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.toJsonObject()
  overload: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.toJsonObject*
  type: Method
  source:
    remote: *o0
    path: edge-e2e/src/main/java/io/swagger/server/api/verticle/WrappedDeviceTwinDevice.java
    startLine: 22
  package: io.swagger.server.api.verticle
  syntax:
    content: public JsonObject toJsonObject()
    return:
      type: bdcfe73e
- uid: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.WrappedDeviceTwinDevice(String,String)
  id: WrappedDeviceTwinDevice(String,String)
  parent: io.swagger.server.api.verticle.WrappedDeviceTwinDevice
  href: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.yml
  langs:
  - java
  name: WrappedDeviceTwinDevice(String deviceId, String moduleId)
  nameWithType: WrappedDeviceTwinDevice.WrappedDeviceTwinDevice(String deviceId, String moduleId)
  fullName: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.WrappedDeviceTwinDevice(String deviceId, String moduleId)
  overload: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.WrappedDeviceTwinDevice*
  type: Constructor
  source:
    remote: *o0
    path: edge-e2e/src/main/java/io/swagger/server/api/verticle/WrappedDeviceTwinDevice.java
    startLine: 12
  package: io.swagger.server.api.verticle
  syntax:
    content: public WrappedDeviceTwinDevice(String deviceId, String moduleId)
    parameters:
    - id: deviceId
      type: "26831127"
    - id: moduleId
      type: "26831127"
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.WrappedDeviceTwinDevice*
  name: WrappedDeviceTwinDevice
  nameWithType: WrappedDeviceTwinDevice.WrappedDeviceTwinDevice
  fullName: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.WrappedDeviceTwinDevice
  package: io.swagger.server.api.verticle
- uid: bdcfe73e
  spec.java:
  - name: JsonObject
    fullName: JsonObject
- uid: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.toJsonObject*
  name: toJsonObject
  nameWithType: WrappedDeviceTwinDevice.toJsonObject
  fullName: io.swagger.server.api.verticle.WrappedDeviceTwinDevice.toJsonObject
  package: io.swagger.server.api.verticle
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearDesiredProperties()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: clearDesiredProperties()
  nameWithType: DeviceTwinDevice.clearDesiredProperties()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearDesiredProperties()
  type: Method
  summary: "<p>Clear desired properties set so far </p>"
  syntax:
    content: public void clearDesiredProperties()
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTags()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: clearTags()
  nameWithType: DeviceTwinDevice.clearTags()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTags()
  type: Method
  summary: "<p>Clear tags set so far </p>"
  syntax:
    content: public void clearTags()
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTwin()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: clearTwin()
  nameWithType: DeviceTwinDevice.clearTwin()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.clearTwin()
  type: Method
  summary: "<p>Clear tags and desired properties set so far </p>"
  syntax:
    content: public void clearTwin()
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.desiredPropertiesToString()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: desiredPropertiesToString()
  nameWithType: DeviceTwinDevice.desiredPropertiesToString()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.desiredPropertiesToString()
  type: Method
  summary: "<p>String representation for this device containing desired properties </p>"
  syntax:
    content: public String desiredPropertiesToString()
    return:
      type: "26831127"
      description: <p>String representation for this device desired properties </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: DeviceTwinDevice()
  nameWithType: DeviceTwinDevice.DeviceTwinDevice()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice()
  type: Constructor
  summary: "<p>Constructor to create instance for a device </p>"
  syntax:
    content: public DeviceTwinDevice()
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: DeviceTwinDevice(String deviceId)
  nameWithType: DeviceTwinDevice.DeviceTwinDevice(String deviceId)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String deviceId)
  type: Constructor
  summary: "<p>Constructor to create instance for a device.</p>\r\n<p></p>"
  syntax:
    content: public DeviceTwinDevice(String deviceId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>Device ID for this device </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String,String)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: DeviceTwinDevice(String deviceId, String moduleId)
  nameWithType: DeviceTwinDevice.DeviceTwinDevice(String deviceId, String moduleId)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.DeviceTwinDevice(String deviceId, String moduleId)
  type: Constructor
  summary: "<p>Constructor to create instance for a module.</p>\r\n<p></p>"
  syntax:
    content: public DeviceTwinDevice(String deviceId, String moduleId)
    parameters:
    - id: deviceId
      type: "26831127"
      description: <p>Device ID for the device which this module belongs to </p>
    - id: moduleId
      type: "26831127"
      description: <p>Module ID for this module </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getCapabilities()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getCapabilities()
  nameWithType: DeviceTwinDevice.getCapabilities()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getCapabilities()
  type: Method
  summary: "<p>Getter for capabilities</p>\r\n<p></p>"
  syntax:
    content: public DeviceCapabilities getCapabilities()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities
      description: >-
        <p>the value of the capabilities. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getConfigurations()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getConfigurations()
  nameWithType: DeviceTwinDevice.getConfigurations()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getConfigurations()
  type: Method
  summary: "<p>Getter for the configuration properties</p>\r\n<p></p>"
  syntax:
    content: public Map<String, ConfigurationInfo> getConfigurations()
    return:
      type: 2108f1f4com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfoa08ddfce
      description: >-
        <p>the configuration properties. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredMap()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getDesiredMap()
  nameWithType: DeviceTwinDevice.getDesiredMap()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredMap()
  type: Method
  summary: "<p>Getter for the desired properties</p>\r\n<p></p>"
  syntax:
    content: protected TwinCollection getDesiredMap()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: <p>A map of validated key and value pairs for desired properties </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredProperties()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getDesiredProperties()
  nameWithType: DeviceTwinDevice.getDesiredProperties()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredProperties()
  type: Method
  summary: "<p>Getter to get Desired Properties set </p>"
  syntax:
    content: public Set<Pair> getDesiredProperties()
    return:
      type: b398a0f1com.microsoft.azure.sdk.iot.service.devicetwin.Paira08ddfce
      description: <p>A set of desired property pairs. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredPropertiesVersion()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getDesiredPropertiesVersion()
  nameWithType: DeviceTwinDevice.getDesiredPropertiesVersion()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDesiredPropertiesVersion()
  type: Method
  summary: "<p>Getter for the desired properties version.</p>\r\n<p></p>"
  syntax:
    content: public Integer getDesiredPropertiesVersion()
    return:
      type: 08effaa0
      description: >-
        <p>The<code>Integer 

            </code> with the Desired properties Collection version. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDeviceId()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getDeviceId()
  nameWithType: DeviceTwinDevice.getDeviceId()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getDeviceId()
  type: Method
  summary: "<p>Getter to get device ID </p>"
  syntax:
    content: public String getDeviceId()
    return:
      type: "26831127"
      description: <p>device id for this device </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getETag()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getETag()
  nameWithType: DeviceTwinDevice.getETag()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getETag()
  type: Method
  summary: "<p>Getter for the eTag</p>\r\n<p></p>"
  syntax:
    content: public String getETag()
    return:
      type: "26831127"
      description: >-
        <p>the stored eTag. It will be<code>null 

            </code> if not set. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getModuleId()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getModuleId()
  nameWithType: DeviceTwinDevice.getModuleId()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getModuleId()
  type: Method
  summary: "<p>Getter to get module ID </p>"
  syntax:
    content: public String getModuleId()
    return:
      type: "26831127"
      description: <p>device id for this device </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedMap()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getReportedMap()
  nameWithType: DeviceTwinDevice.getReportedMap()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedMap()
  type: Method
  summary: "<p>Getter for the reported properties</p>\r\n<p></p>"
  syntax:
    content: protected TwinCollection getReportedMap()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: <p>A map of validated key and value pairs for reported properties </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedProperties()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getReportedProperties()
  nameWithType: DeviceTwinDevice.getReportedProperties()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedProperties()
  type: Method
  summary: "<p>Getter to get Reported Properties Set </p>"
  syntax:
    content: public Set<Pair> getReportedProperties()
    return:
      type: b398a0f1com.microsoft.azure.sdk.iot.service.devicetwin.Paira08ddfce
      description: <p>A set of reported property pairs. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedPropertiesVersion()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getReportedPropertiesVersion()
  nameWithType: DeviceTwinDevice.getReportedPropertiesVersion()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getReportedPropertiesVersion()
  type: Method
  summary: "<p>Getter for the reported properties version.</p>\r\n<p></p>"
  syntax:
    content: public Integer getReportedPropertiesVersion()
    return:
      type: 08effaa0
      description: >-
        <p>The<code>Integer 

            </code> with the Desired properties Collection version. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTags()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getTags()
  nameWithType: DeviceTwinDevice.getTags()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTags()
  type: Method
  summary: "<p>Getter to get Tags Set </p>"
  syntax:
    content: public Set<Pair> getTags()
    return:
      type: b398a0f1com.microsoft.azure.sdk.iot.service.devicetwin.Paira08ddfce
      description: <p>A set of tag key value pairs. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsMap()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getTagsMap()
  nameWithType: DeviceTwinDevice.getTagsMap()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsMap()
  type: Method
  summary: "<p>Getter for the tags</p>\r\n<p></p>"
  syntax:
    content: protected TwinCollection getTagsMap()
    return:
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: <p>A map of validated key and value pairs for tag </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsVersion()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getTagsVersion()
  nameWithType: DeviceTwinDevice.getTagsVersion()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getTagsVersion()
  type: Method
  summary: "<p>Getter for the tag version.</p>\r\n<p></p>"
  syntax:
    content: public Integer getTagsVersion()
    return:
      type: 08effaa0
      description: >-
        <p>The<code>Integer 

            </code> with the Tags Collection version. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getVersion()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: getVersion()
  nameWithType: DeviceTwinDevice.getVersion()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.getVersion()
  type: Method
  summary: "<p>Getter for the Twin version</p>\r\n<p></p>"
  syntax:
    content: public Integer getVersion()
    return:
      type: 08effaa0
      description: >-
        <p>the stored version. It can be<code>null 

            </code> . </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.reportedPropertiesToString()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: reportedPropertiesToString()
  nameWithType: DeviceTwinDevice.reportedPropertiesToString()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.reportedPropertiesToString()
  type: Method
  summary: "<p>String representation for this device containing reported properties </p>"
  syntax:
    content: public String reportedPropertiesToString()
    return:
      type: "26831127"
      description: <p>String representation for this device reported properties </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setCapabilities(DeviceCapabilities)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setCapabilities(DeviceCapabilities capabilities)
  nameWithType: DeviceTwinDevice.setCapabilities(DeviceCapabilities capabilities)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setCapabilities(DeviceCapabilities capabilities)
  type: Method
  summary: "<p>Setter for capabilities</p>\r\n<p></p>"
  syntax:
    content: protected void setCapabilities(DeviceCapabilities capabilities)
    parameters:
    - id: capabilities
      type: com.microsoft.azure.sdk.iot.deps.twin.DeviceCapabilities
      description: <p>is the value of the capabilities </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setConfigurations(Map<String, ConfigurationInfo>)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setConfigurations(Map<String, ConfigurationInfo> configurations)
  nameWithType: DeviceTwinDevice.setConfigurations(Map<String, ConfigurationInfo> configurations)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setConfigurations(Map<String, ConfigurationInfo> configurations)
  type: Method
  summary: "<p>Setter for the configuration properties</p>\r\n<p></p>"
  syntax:
    content: protected void setConfigurations(Map<String, ConfigurationInfo> configurations)
    parameters:
    - id: configurations
      type: 2108f1f4com.microsoft.azure.sdk.iot.deps.twin.ConfigurationInfoa08ddfce
      description: <p>is the configuration properties. </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(Set<Pair>)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setDesiredProperties(Set<Pair> desiredProperties)
  nameWithType: DeviceTwinDevice.setDesiredProperties(Set<Pair> desiredProperties)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(Set<Pair> desiredProperties)
  type: Method
  summary: "<p>Setter for the desired properties</p>\r\n<p></p>"
  syntax:
    content: public void setDesiredProperties(Set<Pair> desiredProperties)
    parameters:
    - id: desiredProperties
      type: b398a0f1com.microsoft.azure.sdk.iot.service.devicetwin.Paira08ddfce
      description: <p>A set of key-value pairs for desired properties </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(TwinCollection)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setDesiredProperties(TwinCollection desiredProperties)
  nameWithType: DeviceTwinDevice.setDesiredProperties(TwinCollection desiredProperties)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setDesiredProperties(TwinCollection desiredProperties)
  type: Method
  summary: "<p>Setter for the desired properties</p>\r\n<p></p>"
  syntax:
    content: protected void setDesiredProperties(TwinCollection desiredProperties)
    parameters:
    - id: desiredProperties
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: <p>A map of validated key and value pairs for desired properties </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setETag(String)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setETag(String eTag)
  nameWithType: DeviceTwinDevice.setETag(String eTag)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setETag(String eTag)
  type: Method
  summary: "<p>Setter for ETag</p>\r\n<p></p>"
  syntax:
    content: public void setETag(String eTag)
    parameters:
    - id: eTag
      type: "26831127"
      description: <p>is the value of the etag </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setReportedProperties(TwinCollection)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setReportedProperties(TwinCollection reportedProperties)
  nameWithType: DeviceTwinDevice.setReportedProperties(TwinCollection reportedProperties)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setReportedProperties(TwinCollection reportedProperties)
  type: Method
  summary: "<p>Setter for the reported properties</p>\r\n<p></p>"
  syntax:
    content: protected void setReportedProperties(TwinCollection reportedProperties)
    parameters:
    - id: reportedProperties
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: <p>A map of validated key and value pairs for reported properties </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(Set<Pair>)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setTags(Set<Pair> tags)
  nameWithType: DeviceTwinDevice.setTags(Set<Pair> tags)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(Set<Pair> tags)
  type: Method
  summary: "<p>Setter for the tags</p>\r\n<p></p>"
  syntax:
    content: public void setTags(Set<Pair> tags)
    parameters:
    - id: tags
      type: b398a0f1com.microsoft.azure.sdk.iot.service.devicetwin.Paira08ddfce
      description: <p>A set of tag key-value pairs </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(TwinCollection)
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: setTags(TwinCollection tag)
  nameWithType: DeviceTwinDevice.setTags(TwinCollection tag)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.setTags(TwinCollection tag)
  type: Method
  summary: "<p>Setter for the tags</p>\r\n<p></p>"
  syntax:
    content: protected void setTags(TwinCollection tag)
    parameters:
    - id: tag
      type: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
      description: <p>A map of validated key and value pairs for tag </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.tagsToString()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: tagsToString()
  nameWithType: DeviceTwinDevice.tagsToString()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.tagsToString()
  type: Method
  summary: "<p>String representation for this device containing tags </p>"
  syntax:
    content: public String tagsToString()
    return:
      type: "26831127"
      description: <p>String representation for this device tags </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.toString()
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: toString()
  nameWithType: DeviceTwinDevice.toString()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.toString()
  type: Method
  summary: "<p>String representation for this device containing device id, tags, desired and reported properties </p>"
  syntax:
    content: public String toString()
    return:
      type: "26831127"
      description: <p>String representation for this device </p>
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  href: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice.yml
  name: DeviceTwinDevice
  nameWithType: DeviceTwinDevice
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceTwinDevice
  type: Class
  summary: "<p>The DeviceTwinDevice class represent the twin on iotHub. implementing constructors and serialization functionality. If object is a representation of the module twin if and only if the moduleId is set. </p>"
  syntax:
    content: public class DeviceTwinDevice
- uid: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
  parent: com.microsoft.azure.sdk.iot.deps.twin
  href: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.yml
  name: TwinCollection
  nameWithType: TwinCollection
  fullName: com.microsoft.azure.sdk.iot.deps.twin.TwinCollection
  type: Class
  summary: "<p>Representation of a single Twin collection.</p>\r\n<p>The TwinCollection is an extension of a<code>HashMap \r\n    </code> of<code>String \r\n    </code> and <code>Object \r\n    </code> that contain individual and general versioning mechanism.</p>\r\n<p>By the Twin definition, the<code>Object \r\n    </code> can contain types of<code>Boolean \r\n    </code> , <code>Number \r\n    </code> ,<code>String \r\n    </code> ,<code>Object \r\n    </code> , or a sub-TwinCollection, but it cannot be types defined by the user or arrays.</p>\r\n<p>A TwinCollection can contain up to 5 levels of sub TwinCollections. Once the TwinCollection is a extension of the<code>HashMap \r\n    </code> , both TwinCollection as well as its sub-TwinCollections can be casted to Map of String and Object.</p>\r\n<p>The collection will be represented in the rest API as a JSON in the body. It can or cannot contain the metadata (identified by the <b>$</b> character at the beginning of the key.</p>\r\n<p>Because of the Twin metadata, the character <b>$</b> is not allowed in the entry key.</p>\r\n<p>For instance, the following JSON is a valid TwinCollection with its metadata. <pre><code>{\r\n        \"Color\":\"White\",\r\n        \"MaxSpeed\":{\r\n            \"Value\":500,\r\n            \"NewValue\":300\r\n        },\r\n        \"$metadata\":{\r\n            \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n            \"$lastUpdatedVersion\":4,\r\n            \"Color\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n            },\r\n            \"MaxSpeed\":{\r\n                \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                \"$lastUpdatedVersion\":4,\r\n                \"Value\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                },\r\n                \"NewValue\":{\r\n                    \"$lastUpdated\":\"2017-09-21T02:07:44.238Z\",\r\n                    \"$lastUpdatedVersion\":4\r\n                }\r\n            }\r\n        },\r\n        \"$version\":4\r\n    }\r\n    </code></pre></p>\r\n<p>This class exposes the Twin collection with or without metadata as a Map here user can gat both the value and the metadata. For instance, in the above TwinCollection, <xref uid=\"\" data-throw-if-not-resolved=\"false\">get(Object)</xref> for <b>Color</b> will return <b>White</b> and the <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinCollection.getTwinMetadata(String)\" data-throw-if-not-resolved=\"false\">getTwinMetadata(String)</xref> for <b>Color</b> will return the Object TwinMetadata that contain <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata.getLastUpdated()\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdated()</xref> that will returns the<code>Date \r\n    </code><b>2017-09-21T02:07:44.238Z</b> and <xref uid=\"com.microsoft.azure.sdk.iot.deps.twin.TwinMetadata.getLastUpdatedVersion()\" data-throw-if-not-resolved=\"false\">TwinMetadata#getLastUpdatedVersion()</xref> that will returns the<code>Integer \r\n    </code><b>4</b>.</p>\r\n<p>For the nested TwinCollection, you can do the same, for instance, the following code will return the value and metadata of the <b>NewValue</b> nested in <b>MaxSpeed</b>: <pre><code>// Get the value of the MaxSpeed, which is a inner TwinCollection.\r\n    TwinCollection innerMaxSpeed = (TwinCollection) twinCollection.get(\"MaxSpeed\");\r\n    \r\n    // From the inner TwinCollection, get the value of the NewValue.\r\n    Long maxSpeedNewValue = innerMaxSpeed.get(\"NewValue\");\r\n    \r\n    // As in the root TwinCollection, the inner TwinCollection contain its own metadata.\r\n    // So, get the metadata information for the inner NewValue.\r\n    TwinMetadata maxSpeedNewValueMetadata = innerMaxSpeed.getTwinMetadata(\"NewValue\");\r\n    Date newValueLastUpdated = maxSpeedNewValueMetadata.getLastUpdated(); //Shall contain `2017-09-21T02:07:44.238Z`\r\n    Integer newValueLastUpdatedVersion = maxSpeedNewValueMetadata.getLastUpdatedVersion(); //Shall contain `4`\r\n    </code></pre></p>\r\n<p></p>"
  syntax:
    content: public class TwinCollection
