### YamlMime:JavaMember
nameWithType: IPublicClientApplication.acquireTokenWithDeviceCode
type: method
members:
- fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  name: acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  nameWithType: IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  parameters:
  - description: <p>the desired access scopes </p>
    name: scopes
    type: <xref href="%40NonNull+String+%5B%5D?alt=%40NonNull+String+%5B%5D&text=%40NonNull+String+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>callback object used to communicate with the API throughout the protocol </p>
    name: callback
    type: '@NonNull final <xref href="com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback?alt=com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback&text=IPublicClientApplication.DeviceCodeFlowCallback" data-throw-if-not-resolved="False"/>'
  summary: <p>Perform the Device Code Flow (DCF) protocol to allow a device without input capability to authenticate and get a new access token. Currently, flow is only supported in local MSAL. No Broker support. </p>
  syntax: public void acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
  uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode(@NonNull String [],@NonNull final DeviceCodeFlowCallback)
uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode*
fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenWithDeviceCode
name: acquireTokenWithDeviceCode(@NonNull String[] scopes, @NonNull final DeviceCodeFlowCallback callback)
package: com.microsoft.identity.client
metadata: {}
