### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String name)
  name: defineUnmanagedDataDisk(String name)
  nameWithType: VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String name)
  parameters:
  - description: <p>the name for the data disk </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of an unmanaged data disk definition </p>
    type: VirtualMachineUnmanagedDataDisk.DefinitionStages.Blank&lt;<xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedCreate&text=VirtualMachine.DefinitionStages.WithUnmanagedCreate" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Begins definition of an unmanaged data disk to be attached to the virtual machine.</p>

    <p></p>
  syntax: public VirtualMachineUnmanagedDataDisk.DefinitionStages.Blank<WithUnmanagedCreate> defineUnmanagedDataDisk(String name)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.defineUnmanagedDataDisk(String)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  name: withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  nameWithType: VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  parameters:
  - description: <p>a storage account name </p>
    name: storageAccountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the container holding the VHD file </p>
    name: containerName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name for the VHD file </p>
    name: vhdName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedCreate&text=VirtualMachine.DefinitionStages.WithUnmanagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Attaches an existing unmanaged VHD as a data disk to the virtual machine.</p>

    <p></p>
  syntax: public WithUnmanagedCreate withExistingUnmanagedDataDisk(String storageAccountName, String containerName, String vhdName)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.withExistingUnmanagedDataDisk(String,String,String)
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer sizeInGB)
  name: withNewUnmanagedDataDisk(Integer sizeInGB)
  nameWithType: VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer sizeInGB)
  parameters:
  - description: <p>the disk size in GB </p>
    name: sizeInGB
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedCreate&text=VirtualMachine.DefinitionStages.WithUnmanagedCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Attaches a new blank unmanaged data disk to the virtual machine.</p>

    <p></p>
  syntax: public WithUnmanagedCreate withNewUnmanagedDataDisk(Integer sizeInGB)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk.withNewUnmanagedDataDisk(Integer)
nameWithType: VirtualMachine.DefinitionStages.WithUnmanagedDataDisk
syntax: public interface WithUnmanagedDataDisk
type: interface
uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk
fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithUnmanagedDataDisk
name: VirtualMachine.DefinitionStages.WithUnmanagedDataDisk
package: com.microsoft.azure.management.compute
summary: <p>The stage of a virtual machine definition allowing to add an unmanaged data disk. </p>
metadata: {}
