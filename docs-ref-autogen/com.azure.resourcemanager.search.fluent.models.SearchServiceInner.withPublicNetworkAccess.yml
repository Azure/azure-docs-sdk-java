### YamlMime:JavaMember
uid: "com.azure.resourcemanager.search.fluent.models.SearchServiceInner.withPublicNetworkAccess*"
fullName: "com.azure.resourcemanager.search.fluent.models.SearchServiceInner.withPublicNetworkAccess"
name: "withPublicNetworkAccess"
nameWithType: "SearchServiceInner.withPublicNetworkAccess"
members:
- uid: "com.azure.resourcemanager.search.fluent.models.SearchServiceInner.withPublicNetworkAccess(com.azure.resourcemanager.search.models.PublicNetworkAccess)"
  fullName: "com.azure.resourcemanager.search.fluent.models.SearchServiceInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  name: "withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  nameWithType: "SearchServiceInner.withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  summary: "Set the publicNetworkAccess property: This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method."
  parameters:
  - description: "the publicNetworkAccess value to set."
    name: "publicNetworkAccess"
    type: "<xref href=\"com.azure.resourcemanager.search.models.PublicNetworkAccess?alt=com.azure.resourcemanager.search.models.PublicNetworkAccess&text=PublicNetworkAccess\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SearchServiceInner withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess)"
  returns:
    description: "the SearchServiceInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.search.fluent.models.SearchServiceInner?alt=com.azure.resourcemanager.search.fluent.models.SearchServiceInner&text=SearchServiceInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.search.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-search:2.3.0
