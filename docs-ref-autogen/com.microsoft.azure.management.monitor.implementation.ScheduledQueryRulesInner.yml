### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.ScheduledQueryRulesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: ScheduledQueryRulesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: ScheduledQueryRulesInner.ScheduledQueryRulesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of ScheduledQueryRulesInner.</p>

    <p></p>
  syntax: public ScheduledQueryRulesInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.ScheduledQueryRulesInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet%3CInnerT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String,ServiceCallback<InnerT>)
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdate(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  name: createOrUpdate(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  nameWithType: ScheduledQueryRulesInner.createOrUpdate(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the LogSearchRuleResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates or updates an log search rule.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner createOrUpdate(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdate(String,String,LogSearchRuleResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  name: createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  nameWithType: ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LogSearchRuleResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an log search rule.</p>

    <p></p>
  syntax: public Observable<LogSearchRuleResourceInner> createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String,String,LogSearchRuleResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  name: createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Creates or updates an log search rule.</p>

    <p></p>
  syntax: public ServiceFuture<LogSearchRuleResourceInner> createOrUpdateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateAsync(String,String,LogSearchRuleResourceInner,final ServiceCallback<LogSearchRuleResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  name: createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  nameWithType: ScheduledQueryRulesInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to create or update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LogSearchRuleResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Creates or updates an log search rule.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<LogSearchRuleResourceInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourceInner parameters)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.createOrUpdateWithServiceResponseAsync(String,String,LogSearchRuleResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.delete(String resourceGroupName, String ruleName)
  name: delete(String resourceGroupName, String ruleName)
  nameWithType: ScheduledQueryRulesInner.delete(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Deletes a Log Search rule.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.delete(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.deleteAsync(String resourceGroupName, String ruleName)
  name: deleteAsync(String resourceGroupName, String ruleName)
  nameWithType: ScheduledQueryRulesInner.deleteAsync(String resourceGroupName, String ruleName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Log Search rule.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Log Search rule.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String ruleName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  nameWithType: ScheduledQueryRulesInner.deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Log Search rule.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroup(String resourceGroupName, String ruleName)
  name: getByResourceGroup(String resourceGroupName, String ruleName)
  nameWithType: ScheduledQueryRulesInner.getByResourceGroup(String resourceGroupName, String ruleName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroup(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the LogSearchRuleResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets an Log Search rule.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner getByResourceGroup(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroupAsync(String resourceGroupName, String ruleName)
  name: getByResourceGroupAsync(String resourceGroupName, String ruleName)
  nameWithType: ScheduledQueryRulesInner.getByResourceGroupAsync(String resourceGroupName, String ruleName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LogSearchRuleResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an Log Search rule.</p>

    <p></p>
  syntax: public Observable<LogSearchRuleResourceInner> getByResourceGroupAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  name: getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets an Log Search rule.</p>

    <p></p>
  syntax: public ServiceFuture<LogSearchRuleResourceInner> getByResourceGroupAsync(String resourceGroupName, String ruleName, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroupAsync(String,String,final ServiceCallback<LogSearchRuleResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  name: getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  nameWithType: ScheduledQueryRulesInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LogSearchRuleResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets an Log Search rule.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<LogSearchRuleResourceInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String ruleName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.getByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.list()
  name: list()
  nameWithType: ScheduledQueryRulesInner.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.list()
  returns:
    description: <p>the PagedList&lt;LogSearchRuleResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public PagedList<LogSearchRuleResourceInner> list()
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.list()
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.list(String filter)
  name: list(String filter)
  nameWithType: ScheduledQueryRulesInner.list(String filter)
  parameters:
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PagedList&lt;LogSearchRuleResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public PagedList<LogSearchRuleResourceInner> list(String filter)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.list(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync()
  name: listAsync()
  nameWithType: ScheduledQueryRulesInner.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listAsync()
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public Observable<Page<LogSearchRuleResourceInner>> listAsync()
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync()
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync(final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  name: listAsync(final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.listAsync(final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public ServiceFuture<List<LogSearchRuleResourceInner>> listAsync(final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync(final ServiceCallback<List<LogSearchRuleResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync(String filter)
  name: listAsync(String filter)
  nameWithType: ScheduledQueryRulesInner.listAsync(String filter)
  parameters:
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public Observable<Page<LogSearchRuleResourceInner>> listAsync(String filter)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync(String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  name: listAsync(String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.listAsync(String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  parameters:
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public ServiceFuture<List<LogSearchRuleResourceInner>> listAsync(String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listAsync(String,final ServiceCallback<List<LogSearchRuleResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroup(String resourceGroupName)
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroup(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroup(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PagedList&lt;LogSearchRuleResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public PagedList<LogSearchRuleResourceInner> listByResourceGroup(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroup(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroup(String resourceGroupName, String filter)
  name: listByResourceGroup(String resourceGroupName, String filter)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroup(String resourceGroupName, String filter)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PagedList&lt;LogSearchRuleResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public PagedList<LogSearchRuleResourceInner> listByResourceGroup(String resourceGroupName, String filter)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName)
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroupAsync(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public Observable<Page<LogSearchRuleResourceInner>> listByResourceGroupAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  name: listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<LogSearchRuleResourceInner>> listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String,final ServiceCallback<List<LogSearchRuleResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName, String filter)
  name: listByResourceGroupAsync(String resourceGroupName, String filter)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName, String filter)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public Observable<Page<LogSearchRuleResourceInner>> listByResourceGroupAsync(String resourceGroupName, String filter)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName, String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  name: listByResourceGroupAsync(String resourceGroupName, String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroupAsync(String resourceGroupName, String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<LogSearchRuleResourceInner>> listByResourceGroupAsync(String resourceGroupName, String filter, final ServiceCallback<List<LogSearchRuleResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupAsync(String,String,final ServiceCallback<List<LogSearchRuleResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  name: listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<LogSearchRuleResourceInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter)
  name: listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter)
  nameWithType: ScheduledQueryRulesInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<LogSearchRuleResourceInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName, String filter)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: ScheduledQueryRulesInner.listWithServiceResponseAsync()
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<LogSearchRuleResourceInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listWithServiceResponseAsync()
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listWithServiceResponseAsync(String filter)
  name: listWithServiceResponseAsync(String filter)
  nameWithType: ScheduledQueryRulesInner.listWithServiceResponseAsync(String filter)
  parameters:
  - description: <p>The filter to apply on the operation. For more information please see <a href="https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx">https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx</a></p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;LogSearchRuleResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>List the Log Search rules within a subscription group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<LogSearchRuleResourceInner>>> listWithServiceResponseAsync(String filter)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.listWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.update(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  name: update(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  nameWithType: ScheduledQueryRulesInner.update(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch?alt=com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch&text=LogSearchRuleResourcePatch" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the LogSearchRuleResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Update log search Rule.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner update(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.update(String,String,LogSearchRuleResourcePatch)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  name: updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  nameWithType: ScheduledQueryRulesInner.updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch?alt=com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch&text=LogSearchRuleResourcePatch" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LogSearchRuleResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Update log search Rule.</p>

    <p></p>
  syntax: public Observable<LogSearchRuleResourceInner> updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.updateAsync(String,String,LogSearchRuleResourcePatch)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  nameWithType: ScheduledQueryRulesInner.updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch?alt=com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch&text=LogSearchRuleResourcePatch" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Update log search Rule.</p>

    <p></p>
  syntax: public ServiceFuture<LogSearchRuleResourceInner> updateAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters, final ServiceCallback<LogSearchRuleResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.updateAsync(String,String,LogSearchRuleResourcePatch,final ServiceCallback<LogSearchRuleResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.updateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  name: updateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  nameWithType: ScheduledQueryRulesInner.updateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the rule. </p>
    name: ruleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters of the rule to update. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch?alt=com.microsoft.azure.management.monitor.LogSearchRuleResourcePatch&text=LogSearchRuleResourcePatch" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the LogSearchRuleResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Update log search Rule.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<LogSearchRuleResourceInner>> updateWithServiceResponseAsync(String resourceGroupName, String ruleName, LogSearchRuleResourcePatch parameters)
  uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner.updateWithServiceResponseAsync(String,String,LogSearchRuleResourcePatch)
nameWithType: ScheduledQueryRulesInner
syntax: public class ScheduledQueryRulesInner implements InnerSupportsGet<LogSearchRuleResourceInner>,InnerSupportsDelete<Void>,InnerSupportsListing<LogSearchRuleResourceInner>
type: class
uid: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner
fullName: com.microsoft.azure.management.monitor.implementation.ScheduledQueryRulesInner
name: ScheduledQueryRulesInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in ScheduledQueryRules. </p>
metadata: {}
