### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  id: SqlResourcesClientImpl
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation
  children:
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabasesAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  - com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  langs:
  - java
  name: SqlResourcesClientImpl
  nameWithType: SqlResourcesClientImpl
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  type: Class
  package: com.azure.resourcemanager.cosmos.implementation
  summary: An instance of this class provides access to all the operations defined in SqlResourcesClient.
  syntax:
    content: public final class SqlResourcesClientImpl implements SqlResourcesClient
  inheritance:
  - java.lang.Object
  implements:
  - com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.SqlResourcesClientImpl(com.azure.resourcemanager.cosmos.implementation.CosmosDBManagementClientImpl)
  id: SqlResourcesClientImpl(com.azure.resourcemanager.cosmos.implementation.CosmosDBManagementClientImpl)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: SqlResourcesClientImpl(CosmosDBManagementClientImpl client)
  nameWithType: SqlResourcesClientImpl.SqlResourcesClientImpl(CosmosDBManagementClientImpl client)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.SqlResourcesClientImpl(CosmosDBManagementClientImpl client)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.SqlResourcesClientImpl*
  type: Constructor
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Initializes an instance of SqlResourcesClientImpl.
  syntax:
    content: " SqlResourcesClientImpl(CosmosDBManagementClientImpl client)"
    parameters:
    - id: client
      type: com.azure.resourcemanager.cosmos.implementation.CosmosDBManagementClientImpl
      description: the instance of the service client containing this operation class.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SyncPoller<PollResult<SqlContainerGetResultsInner>,SqlContainerGetResultsInner> beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SyncPoller<PollResult<SqlContainerGetResultsInner>,SqlContainerGetResultsInner> beginCreateUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: beginCreateUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<SqlContainerGetResultsInner>,SqlContainerGetResultsInner> beginCreateUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SyncPoller<PollResult<SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner> beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SyncPoller<PollResult<SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner> beginCreateUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: beginCreateUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner> beginCreateUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SyncPoller<PollResult<SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner> beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SyncPoller<PollResult<SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner> beginCreateUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: beginCreateUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public PollerFlux<PollResult<SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner> beginCreateUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SyncPoller<PollResult<SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner> beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SyncPoller<PollResult<SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner> beginCreateUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: beginCreateUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public PollerFlux<PollResult<SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner> beginCreateUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SyncPoller<PollResult<SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner> beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: beginCreateUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SyncPoller<PollResult<SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner> beginCreateUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: beginCreateUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginCreateUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public PollerFlux<PollResult<SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner> beginCreateUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: beginDeleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SyncPoller<PollResult<Void>,Void> beginDeleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: beginDeleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginDeleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public PollerFlux<PollResult<Void>,Void> beginDeleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public SyncPoller<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public SyncPoller<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginUpdateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public SyncPoller<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: beginUpdateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public SyncPoller<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: beginUpdateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: beginUpdateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public PollerFlux<PollResult<ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner> beginUpdateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SqlContainerGetResultsInner createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public SqlContainerGetResultsInner createUpdateSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: createUpdateSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> createUpdateSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  id: createUpdateSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, SqlContainerCreateUpdateParameters createUpdateSqlContainerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: createUpdateSqlContainerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB container.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB container.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SqlDatabaseGetResultsInner createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public SqlDatabaseGetResultsInner createUpdateSqlDatabase(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: createUpdateSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> createUpdateSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  id: createUpdateSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName, SqlDatabaseCreateUpdateParameters createUpdateSqlDatabaseParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: createUpdateSqlDatabaseParameters
      type: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
      description: Parameters to create and update Cosmos DB SQL database.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB SQL database.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SqlStoredProcedureGetResultsInner createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public SqlStoredProcedureGetResultsInner createUpdateSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: createUpdateSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> createUpdateSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  id: createUpdateSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, SqlStoredProcedureCreateUpdateParameters createUpdateSqlStoredProcedureParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: createUpdateSqlStoredProcedureParameters
      type: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
      description: Parameters to create and update Cosmos DB storedProcedure.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB storedProcedure.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SqlTriggerGetResultsInner createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public SqlTriggerGetResultsInner createUpdateSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: createUpdateSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> createUpdateSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  id: createUpdateSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, SqlTriggerCreateUpdateParameters createUpdateSqlTriggerParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: createUpdateSqlTriggerParameters
      type: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
      description: Parameters to create and update Cosmos DB trigger.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB trigger.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  id: createUpdateSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner createUpdateSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: createUpdateSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> createUpdateSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  id: createUpdateSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  nameWithType: SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Create or update an Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> createUpdateSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, SqlUserDefinedFunctionCreateUpdateParameters createUpdateSqlUserDefinedFunctionParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: createUpdateSqlUserDefinedFunctionParameters
      type: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
      description: >-
        Parameters to create and update Cosmos DB
             userDefinedFunction.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB userDefinedFunction.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public void deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClientImpl.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public void deleteSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Void> deleteSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public void deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlDatabase(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClientImpl.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public void deleteSqlDatabase(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Void> deleteSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public void deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClientImpl.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public void deleteSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Void> deleteSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL storedProcedure.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public void deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClientImpl.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public void deleteSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Void> deleteSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL trigger.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public void deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClientImpl.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public void deleteSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Void> deleteSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Deletes an existing Azure Cosmos DB SQL userDefinedFunction.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> deleteSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: the completion.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainer(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainer*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlContainerGetResultsInner getSqlContainer(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlContainerGetResultsInner> getSqlContainerAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public ThroughputSettingsGetResultsInner getSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainerThroughputWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainerThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponse*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Response<ThroughputSettingsGetResultsInner> getSqlContainerThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>>
      description: the RUs per second of the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlContainerWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClientImpl.getSqlContainerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponse*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Response<SqlContainerGetResultsInner> getSqlContainerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlContainerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlContainerGetResultsInner>> getSqlContainerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>>
      description: the SQL container under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabase(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabase*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public SqlDatabaseGetResultsInner getSqlDatabase(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<SqlDatabaseGetResultsInner> getSqlDatabaseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public ThroughputSettingsGetResultsInner getSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> getSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabaseThroughputWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabaseThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Response<ThroughputSettingsGetResultsInner> getSqlDatabaseThroughputWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<ThroughputSettingsGetResultsInner>> getSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>>
      description: >-
        the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the
             provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlDatabaseWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabaseWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponse*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Response<SqlDatabaseGetResultsInner> getSqlDatabaseWithResponse(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getSqlDatabaseWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.
  syntax:
    content: public Mono<Response<SqlDatabaseGetResultsInner>> getSqlDatabaseWithResponseAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>>
      description: the SQL database under an existing Azure Cosmos DB database account with the provided name.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlStoredProcedure(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedure*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlStoredProcedureGetResultsInner getSqlStoredProcedure(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlStoredProcedureAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlStoredProcedureGetResultsInner> getSqlStoredProcedureAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlStoredProcedureWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlStoredProcedureWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedureWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponse*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Response<SqlStoredProcedureGetResultsInner> getSqlStoredProcedureWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlStoredProcedureWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlStoredProcedureGetResultsInner>> getSqlStoredProcedureWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String storedProcedureName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: storedProcedureName
      type: java.lang.String
      description: Cosmos DB storedProcedure name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>>
      description: the SQL storedProcedure under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTrigger*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlTriggerGetResultsInner getSqlTrigger(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlTriggerAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlTriggerGetResultsInner> getSqlTriggerAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlTriggerWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlTriggerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  nameWithType: SqlResourcesClientImpl.getSqlTriggerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponse*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Response<SqlTriggerGetResultsInner> getSqlTriggerWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlTriggerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  nameWithType: SqlResourcesClientImpl.getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlTriggerGetResultsInner>> getSqlTriggerWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String triggerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: triggerName
      type: java.lang.String
      description: Cosmos DB trigger name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>>
      description: the SQL trigger under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlUserDefinedFunction(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunction*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public SqlUserDefinedFunctionGetResultsInner getSqlUserDefinedFunction(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlUserDefinedFunctionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<SqlUserDefinedFunctionGetResultsInner> getSqlUserDefinedFunctionAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getSqlUserDefinedFunctionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlUserDefinedFunctionWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Response<SqlUserDefinedFunctionGetResultsInner> getSqlUserDefinedFunctionWithResponse(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getSqlUserDefinedFunctionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public Mono<Response<SqlUserDefinedFunctionGetResultsInner>> getSqlUserDefinedFunctionWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, String userDefinedFunctionName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: userDefinedFunctionName
      type: java.lang.String
      description: Cosmos DB userDefinedFunction name.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>>
      description: the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers(java.lang.String,java.lang.String,java.lang.String)
  id: listSqlContainers(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlContainers(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.listSqlContainers(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlContainerGetResultsInner> listSqlContainers(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlContainers(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
  nameWithType: SqlResourcesClientImpl.listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlContainerGetResultsInner> listSqlContainers(String resourceGroupName, String accountName, String databaseName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listSqlContainersAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
  nameWithType: SqlResourcesClientImpl.listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainersAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL container under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlContainerGetResultsInner> listSqlContainersAsync(String resourceGroupName, String accountName, String databaseName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
      description: the List operation response, that contains the containers and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases(java.lang.String,java.lang.String)
  id: listSqlDatabases(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlDatabases(String resourceGroupName, String accountName)
  nameWithType: SqlResourcesClientImpl.listSqlDatabases(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlDatabaseGetResultsInner> listSqlDatabases(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlDatabases(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlDatabases(String resourceGroupName, String accountName, Context context)
  nameWithType: SqlResourcesClientImpl.listSqlDatabases(String resourceGroupName, String accountName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases(String resourceGroupName, String accountName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlDatabaseGetResultsInner> listSqlDatabases(String resourceGroupName, String accountName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabasesAsync(java.lang.String,java.lang.String)
  id: listSqlDatabasesAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlDatabasesAsync(String resourceGroupName, String accountName)
  nameWithType: SqlResourcesClientImpl.listSqlDatabasesAsync(String resourceGroupName, String accountName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabasesAsync(String resourceGroupName, String accountName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabasesAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL databases under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlDatabaseGetResultsInner> listSqlDatabasesAsync(String resourceGroupName, String accountName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
      description: the List operation response, that contains the SQL databases and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlStoredProcedureGetResultsInner> listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlStoredProcedures(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClientImpl.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlStoredProcedureGetResultsInner> listSqlStoredProcedures(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlStoredProceduresAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProceduresAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlStoredProcedureGetResultsInner> listSqlStoredProceduresAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
      description: the List operation response, that contains the storedProcedures and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlTriggerGetResultsInner> listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlTriggers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClientImpl.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlTriggerGetResultsInner> listSqlTriggers(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlTriggersAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggersAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL trigger under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlTriggerGetResultsInner> listSqlTriggersAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
      description: the List operation response, that contains the triggers and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlUserDefinedFunctionGetResultsInner> listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listSqlUserDefinedFunctions(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  nameWithType: SqlResourcesClientImpl.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedIterable<SqlUserDefinedFunctionGetResultsInner> listSqlUserDefinedFunctions(String resourceGroupName, String accountName, String databaseName, String containerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listSqlUserDefinedFunctionsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  nameWithType: SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.
  syntax:
    content: public PagedFlux<SqlUserDefinedFunctionGetResultsInner> listSqlUserDefinedFunctionsAsync(String resourceGroupName, String accountName, String databaseName, String containerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
      description: the List operation response, that contains the userDefinedFunctions and their properties.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlContainerThroughput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClientImpl.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlContainerThroughput(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlContainerThroughputAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateSqlContainerThroughputAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlContainerThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateSqlContainerThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, String containerName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: containerName
      type: java.lang.String
      description: Cosmos DB container name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  id: updateSqlDatabaseThroughput(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  nameWithType: SqlResourcesClientImpl.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public ThroughputSettingsGetResultsInner updateSqlDatabaseThroughput(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlDatabaseThroughputAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<ThroughputSettingsGetResultsInner> updateSqlDatabaseThroughputAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
      description: an Azure Cosmos DB resource throughput.
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  id: updateSqlDatabaseThroughputWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters)
  artifact: com.azure.resourcemanager:azure-resourcemanager-cosmos:2.0.0
  parent: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl
  langs:
  - java
  name: updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  nameWithType: SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
  overload: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.cosmos.implementation
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: public Mono<Response<Flux<ByteBuffer>>> updateSqlDatabaseThroughputWithResponseAsync(String resourceGroupName, String accountName, String databaseName, ThroughputSettingsUpdateParameters updateThroughputParameters)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of an Azure resource group.
    - id: accountName
      type: java.lang.String
      description: Cosmos DB database account name.
    - id: databaseName
      type: java.lang.String
      description: Cosmos DB database name.
    - id: updateThroughputParameters
      type: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
      description: Parameters to update Cosmos DB resource throughput.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: an Azure Cosmos DB resource throughput.
references:
- uid: com.azure.resourcemanager.cosmos.implementation.CosmosDBManagementClientImpl
  name: CosmosDBManagementClientImpl
  nameWithType: CosmosDBManagementClientImpl
  fullName: com.azure.resourcemanager.cosmos.implementation.CosmosDBManagementClientImpl
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.SqlResourcesClientImpl*
  name: SqlResourcesClientImpl
  nameWithType: SqlResourcesClientImpl.SqlResourcesClientImpl
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.SqlResourcesClientImpl
  package: com.azure.resourcemanager.cosmos.implementation
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabasesAsync*
  name: listSqlDatabasesAsync
  nameWithType: SqlResourcesClientImpl.listSqlDatabasesAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabasesAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases*
  name: listSqlDatabases
  nameWithType: SqlResourcesClientImpl.listSqlDatabases
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlDatabases
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync*
  name: getSqlDatabaseWithResponseAsync
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseAsync*
  name: getSqlDatabaseAsync
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  name: SqlDatabaseGetResultsInner
  nameWithType: SqlDatabaseGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabase*
  name: getSqlDatabase
  nameWithType: SqlResourcesClientImpl.getSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabase
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponse*
  name: getSqlDatabaseWithResponse
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseWithResponse
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseWithResponse
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
  name: SqlDatabaseCreateUpdateParameters
  nameWithType: SqlDatabaseCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlDatabaseCreateUpdateParameters
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync*
  name: createUpdateSqlDatabaseWithResponseAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync*
  name: beginCreateUpdateSqlDatabaseAsync
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
    name: SqlDatabaseGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase*
  name: beginCreateUpdateSqlDatabase
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlDatabase
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseAsync*
  name: createUpdateSqlDatabaseAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase*
  name: createUpdateSqlDatabase
  nameWithType: SqlResourcesClientImpl.createUpdateSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlDatabase
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync*
  name: deleteSqlDatabaseWithResponseAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync*
  name: beginDeleteSqlDatabaseAsync
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<java.lang.Void>,java.lang.Void>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase*
  name: beginDeleteSqlDatabase
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlDatabase
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseAsync*
  name: deleteSqlDatabaseAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlDatabaseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabaseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase*
  name: deleteSqlDatabase
  nameWithType: SqlResourcesClientImpl.deleteSqlDatabase
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlDatabase
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync*
  name: getSqlDatabaseThroughputWithResponseAsync
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputAsync*
  name: getSqlDatabaseThroughputAsync
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  name: ThroughputSettingsGetResultsInner
  nameWithType: ThroughputSettingsGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughput*
  name: getSqlDatabaseThroughput
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse*
  name: getSqlDatabaseThroughputWithResponse
  nameWithType: SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlDatabaseThroughputWithResponse
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
  name: ThroughputSettingsUpdateParameters
  nameWithType: ThroughputSettingsUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.ThroughputSettingsUpdateParameters
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync*
  name: updateSqlDatabaseThroughputWithResponseAsync
  nameWithType: SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync*
  name: beginUpdateSqlDatabaseThroughputAsync
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughputAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
    name: ThroughputSettingsGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput*
  name: beginUpdateSqlDatabaseThroughput
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync*
  name: updateSqlDatabaseThroughputAsync
  nameWithType: SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughputAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput*
  name: updateSqlDatabaseThroughput
  nameWithType: SqlResourcesClientImpl.updateSqlDatabaseThroughput
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlDatabaseThroughput
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainersAsync*
  name: listSqlContainersAsync
  nameWithType: SqlResourcesClientImpl.listSqlContainersAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainersAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers*
  name: listSqlContainers
  nameWithType: SqlResourcesClientImpl.listSqlContainers
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlContainers
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponseAsync*
  name: getSqlContainerWithResponseAsync
  nameWithType: SqlResourcesClientImpl.getSqlContainerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerAsync*
  name: getSqlContainerAsync
  nameWithType: SqlResourcesClientImpl.getSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  name: SqlContainerGetResultsInner
  nameWithType: SqlContainerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainer*
  name: getSqlContainer
  nameWithType: SqlResourcesClientImpl.getSqlContainer
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainer
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponse*
  name: getSqlContainerWithResponse
  nameWithType: SqlResourcesClientImpl.getSqlContainerWithResponse
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerWithResponse
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
  name: SqlContainerCreateUpdateParameters
  nameWithType: SqlContainerCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlContainerCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync*
  name: createUpdateSqlContainerWithResponseAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync*
  name: beginCreateUpdateSqlContainerAsync
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
    name: SqlContainerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer*
  name: beginCreateUpdateSqlContainer
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlContainer
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlContainer
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerAsync*
  name: createUpdateSqlContainerAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer*
  name: createUpdateSqlContainer
  nameWithType: SqlResourcesClientImpl.createUpdateSqlContainer
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlContainer
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync*
  name: deleteSqlContainerWithResponseAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainerAsync*
  name: beginDeleteSqlContainerAsync
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer*
  name: beginDeleteSqlContainer
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlContainer
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlContainer
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerAsync*
  name: deleteSqlContainerAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlContainerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer*
  name: deleteSqlContainer
  nameWithType: SqlResourcesClientImpl.deleteSqlContainer
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlContainer
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync*
  name: getSqlContainerThroughputWithResponseAsync
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputAsync*
  name: getSqlContainerThroughputAsync
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughput*
  name: getSqlContainerThroughput
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughput
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughput
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponse*
  name: getSqlContainerThroughputWithResponse
  nameWithType: SqlResourcesClientImpl.getSqlContainerThroughputWithResponse
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlContainerThroughputWithResponse
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync*
  name: updateSqlContainerThroughputWithResponseAsync
  nameWithType: SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync*
  name: beginUpdateSqlContainerThroughputAsync
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughputAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput*
  name: beginUpdateSqlContainerThroughput
  nameWithType: SqlResourcesClientImpl.beginUpdateSqlContainerThroughput
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginUpdateSqlContainerThroughput
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputAsync*
  name: updateSqlContainerThroughputAsync
  nameWithType: SqlResourcesClientImpl.updateSqlContainerThroughputAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughputAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput*
  name: updateSqlContainerThroughput
  nameWithType: SqlResourcesClientImpl.updateSqlContainerThroughput
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.updateSqlContainerThroughput
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProceduresAsync*
  name: listSqlStoredProceduresAsync
  nameWithType: SqlResourcesClientImpl.listSqlStoredProceduresAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProceduresAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures*
  name: listSqlStoredProcedures
  nameWithType: SqlResourcesClientImpl.listSqlStoredProcedures
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlStoredProcedures
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync*
  name: getSqlStoredProcedureWithResponseAsync
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureAsync*
  name: getSqlStoredProcedureAsync
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  name: SqlStoredProcedureGetResultsInner
  nameWithType: SqlStoredProcedureGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedure*
  name: getSqlStoredProcedure
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponse*
  name: getSqlStoredProcedureWithResponse
  nameWithType: SqlResourcesClientImpl.getSqlStoredProcedureWithResponse
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlStoredProcedureWithResponse
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
  name: SqlStoredProcedureCreateUpdateParameters
  nameWithType: SqlStoredProcedureCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlStoredProcedureCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync*
  name: createUpdateSqlStoredProcedureWithResponseAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync*
  name: beginCreateUpdateSqlStoredProcedureAsync
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
    name: SqlStoredProcedureGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure*
  name: beginCreateUpdateSqlStoredProcedure
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync*
  name: createUpdateSqlStoredProcedureAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure*
  name: createUpdateSqlStoredProcedure
  nameWithType: SqlResourcesClientImpl.createUpdateSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync*
  name: deleteSqlStoredProcedureWithResponseAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync*
  name: beginDeleteSqlStoredProcedureAsync
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure*
  name: beginDeleteSqlStoredProcedure
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureAsync*
  name: deleteSqlStoredProcedureAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlStoredProcedureAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedureAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure*
  name: deleteSqlStoredProcedure
  nameWithType: SqlResourcesClientImpl.deleteSqlStoredProcedure
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlStoredProcedure
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync*
  name: listSqlUserDefinedFunctionsAsync
  nameWithType: SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctionsAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions*
  name: listSqlUserDefinedFunctions
  nameWithType: SqlResourcesClientImpl.listSqlUserDefinedFunctions
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlUserDefinedFunctions
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync*
  name: getSqlUserDefinedFunctionWithResponseAsync
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync*
  name: getSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  name: SqlUserDefinedFunctionGetResultsInner
  nameWithType: SqlUserDefinedFunctionGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunction*
  name: getSqlUserDefinedFunction
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse*
  name: getSqlUserDefinedFunctionWithResponse
  nameWithType: SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlUserDefinedFunctionWithResponse
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
  name: SqlUserDefinedFunctionCreateUpdateParameters
  nameWithType: SqlUserDefinedFunctionCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlUserDefinedFunctionCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync*
  name: createUpdateSqlUserDefinedFunctionWithResponseAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync*
  name: beginCreateUpdateSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
    name: SqlUserDefinedFunctionGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction*
  name: beginCreateUpdateSqlUserDefinedFunction
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync*
  name: createUpdateSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction*
  name: createUpdateSqlUserDefinedFunction
  nameWithType: SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync*
  name: deleteSqlUserDefinedFunctionWithResponseAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync*
  name: beginDeleteSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction*
  name: beginDeleteSqlUserDefinedFunction
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync*
  name: deleteSqlUserDefinedFunctionAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunctionAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction*
  name: deleteSqlUserDefinedFunction
  nameWithType: SqlResourcesClientImpl.deleteSqlUserDefinedFunction
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlUserDefinedFunction
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggersAsync*
  name: listSqlTriggersAsync
  nameWithType: SqlResourcesClientImpl.listSqlTriggersAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggersAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers*
  name: listSqlTriggers
  nameWithType: SqlResourcesClientImpl.listSqlTriggers
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.listSqlTriggers
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponseAsync*
  name: getSqlTriggerWithResponseAsync
  nameWithType: SqlResourcesClientImpl.getSqlTriggerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerAsync*
  name: getSqlTriggerAsync
  nameWithType: SqlResourcesClientImpl.getSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  name: SqlTriggerGetResultsInner
  nameWithType: SqlTriggerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTrigger*
  name: getSqlTrigger
  nameWithType: SqlResourcesClientImpl.getSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTrigger
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponse*
  name: getSqlTriggerWithResponse
  nameWithType: SqlResourcesClientImpl.getSqlTriggerWithResponse
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.getSqlTriggerWithResponse
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
  name: SqlTriggerCreateUpdateParameters
  nameWithType: SqlTriggerCreateUpdateParameters
  fullName: com.azure.resourcemanager.cosmos.models.SqlTriggerCreateUpdateParameters
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync*
  name: createUpdateSqlTriggerWithResponseAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync*
  name: beginCreateUpdateSqlTriggerAsync
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
    name: SqlTriggerGetResultsInner
    fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger*
  name: beginCreateUpdateSqlTrigger
  nameWithType: SqlResourcesClientImpl.beginCreateUpdateSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginCreateUpdateSqlTrigger
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerAsync*
  name: createUpdateSqlTriggerAsync
  nameWithType: SqlResourcesClientImpl.createUpdateSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger*
  name: createUpdateSqlTrigger
  nameWithType: SqlResourcesClientImpl.createUpdateSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.createUpdateSqlTrigger
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync*
  name: deleteSqlTriggerWithResponseAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerWithResponseAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTriggerAsync*
  name: beginDeleteSqlTriggerAsync
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger*
  name: beginDeleteSqlTrigger
  nameWithType: SqlResourcesClientImpl.beginDeleteSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.beginDeleteSqlTrigger
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerAsync*
  name: deleteSqlTriggerAsync
  nameWithType: SqlResourcesClientImpl.deleteSqlTriggerAsync
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTriggerAsync
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger*
  name: deleteSqlTrigger
  nameWithType: SqlResourcesClientImpl.deleteSqlTrigger
  fullName: com.azure.resourcemanager.cosmos.implementation.SqlResourcesClientImpl.deleteSqlTrigger
  package: com.azure.resourcemanager.cosmos.implementation
- uid: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
  name: SqlResourcesClient
  nameWithType: SqlResourcesClient
  fullName: com.azure.resourcemanager.cosmos.fluent.SqlResourcesClient
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
  name: SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner
  nameWithType: SqlDatabaseGetResultsInner>,SqlDatabaseGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlDatabaseGetResultsInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void>,java.lang.Void
  name: Void>,Void
  nameWithType: Void>,Void
  fullName: java.lang.Void>,java.lang.Void
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
  name: ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner
  nameWithType: ThroughputSettingsGetResultsInner>,ThroughputSettingsGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.ThroughputSettingsGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
  name: SqlContainerGetResultsInner>,SqlContainerGetResultsInner
  nameWithType: SqlContainerGetResultsInner>,SqlContainerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlContainerGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
  name: SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner
  nameWithType: SqlStoredProcedureGetResultsInner>,SqlStoredProcedureGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlStoredProcedureGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
  name: SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner
  nameWithType: SqlUserDefinedFunctionGetResultsInner>,SqlUserDefinedFunctionGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlUserDefinedFunctionGetResultsInner
- uid: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
  name: SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner
  nameWithType: SqlTriggerGetResultsInner>,SqlTriggerGetResultsInner
  fullName: com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner>,com.azure.resourcemanager.cosmos.fluent.models.SqlTriggerGetResultsInner
