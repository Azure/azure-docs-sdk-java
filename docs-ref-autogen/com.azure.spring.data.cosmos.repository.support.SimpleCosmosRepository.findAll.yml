### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll*"
fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll"
name: "findAll"
nameWithType: "SimpleCosmosRepository<T,ID>.findAll"
members:
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll()"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll()"
  name: "findAll()"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll()"
  summary: "find all entities from one container without configuring partition key value"
  syntax: "public Iterable<T> findAll()"
  returns:
    description: "return Iterable of the found entities List"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll(PartitionKey partitionKey)"
  name: "findAll(PartitionKey partitionKey)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll(PartitionKey partitionKey)"
  summary: "Returns list of items in a specific partition"
  parameters:
  - name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Iterable<T> findAll(PartitionKey partitionKey)"
  returns:
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(org.springframework.data.domain.Pageable)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll(Pageable pageable)"
  name: "findAll(Pageable pageable)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll(Pageable pageable)"
  summary: "FindQuerySpecGenerator Returns a Page of entities meeting the paging restriction provided in the Pageable object."
  parameters:
  - description: "the Pageable object providing paging restriction"
    name: "pageable"
    type: "<xref href=\"org.springframework.data.domain.Pageable?alt=org.springframework.data.domain.Pageable&text=Pageable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Page<T> findAll(Pageable pageable)"
  returns:
    description: "a page of entities"
    type: "<xref href=\"org.springframework.data.domain.Page?alt=org.springframework.data.domain.Page&text=Page\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository.findAll(org.springframework.data.domain.Sort)"
  fullName: "com.azure.spring.data.cosmos.repository.support.SimpleCosmosRepository<T,ID>.findAll(Sort sort)"
  name: "findAll(Sort sort)"
  nameWithType: "SimpleCosmosRepository<T,ID>.findAll(Sort sort)"
  summary: "Returns all entities sorted by the given options."
  parameters:
  - description: "the Sort option for queries."
    name: "sort"
    type: "<xref href=\"org.springframework.data.domain.Sort?alt=org.springframework.data.domain.Sort&text=Sort\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Iterable<T> findAll(Sort sort)"
  returns:
    description: "all entities sorted by the given options"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
