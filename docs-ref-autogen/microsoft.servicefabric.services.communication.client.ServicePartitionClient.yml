### YamlMime:JavaType
methods:
- fullName: microsoft.servicefabric.services.communication.client.ServicePartitionClient<TCommunicationClient extends CommunicationClient>.getCommunicationClientFactory()
  name: getCommunicationClientFactory()
  nameWithType: ServicePartitionClient<TCommunicationClient>.getCommunicationClientFactory()
  returns:
    description: <p>Communication client factory </p>
    type: <xref href="microsoft.servicefabric.services.communication.client.CommunicationClientFactory?alt=microsoft.servicefabric.services.communication.client.CommunicationClientFactory&text=CommunicationClientFactory" data-throw-if-not-resolved="False"/>&lt;TCommunicationClient&gt;
  summary: >-
    <p>Gets the communication client factory</p>

    <p></p>
  syntax: public CommunicationClientFactory<TCommunicationClient> getCommunicationClientFactory()
  uid: microsoft.servicefabric.services.communication.client.ServicePartitionClient.getCommunicationClientFactory()
- fullName: microsoft.servicefabric.services.communication.client.ServicePartitionClient<TCommunicationClient extends CommunicationClient>.getLastResolvedServicePartition()
  name: getLastResolvedServicePartition()
  nameWithType: ServicePartitionClient<TCommunicationClient>.getLastResolvedServicePartition()
  returns:
    description: <p>true if a ResolvedServicePartition was set </p>
    type: <xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the resolved service partition that was set on the client.</p>

    <p></p>
  syntax: public ResolvedServicePartition getLastResolvedServicePartition()
  uid: microsoft.servicefabric.services.communication.client.ServicePartitionClient.getLastResolvedServicePartition()
- fullName: microsoft.servicefabric.services.communication.client.ServicePartitionClient<TCommunicationClient extends CommunicationClient>.getListenerName()
  name: getListenerName()
  nameWithType: ServicePartitionClient<TCommunicationClient>.getListenerName()
  returns:
    description: <p>Listener name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the name of the listener in the replica to which the client should connect to.</p>

    <p></p>
  syntax: public String getListenerName()
  uid: microsoft.servicefabric.services.communication.client.ServicePartitionClient.getListenerName()
- fullName: microsoft.servicefabric.services.communication.client.ServicePartitionClient<TCommunicationClient extends CommunicationClient>.getPartitionKey()
  name: getPartitionKey()
  nameWithType: ServicePartitionClient<TCommunicationClient>.getPartitionKey()
  returns:
    description: <p>Partition key </p>
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the key of the partition the client is communicating with.</p>

    <p></p>
  syntax: public ServicePartitionKey getPartitionKey()
  uid: microsoft.servicefabric.services.communication.client.ServicePartitionClient.getPartitionKey()
- fullName: microsoft.servicefabric.services.communication.client.ServicePartitionClient<TCommunicationClient extends CommunicationClient>.getServiceUri()
  name: getServiceUri()
  nameWithType: ServicePartitionClient<TCommunicationClient>.getServiceUri()
  returns:
    description: <p>Name of the service </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the name of the service</p>

    <p></p>
  syntax: public URI getServiceUri()
  uid: microsoft.servicefabric.services.communication.client.ServicePartitionClient.getServiceUri()
- fullName: microsoft.servicefabric.services.communication.client.ServicePartitionClient<TCommunicationClient extends CommunicationClient>.getTargetReplicaSelector()
  name: getTargetReplicaSelector()
  nameWithType: ServicePartitionClient<TCommunicationClient>.getTargetReplicaSelector()
  returns:
    description: <p>A <xref uid="microsoft.servicefabric.services.communication.client.TargetReplicaSelector" data-throw-if-not-resolved="false" data-raw-source="TargetReplicaSelector"></xref></p>
    type: <xref href="microsoft.servicefabric.services.communication.client.TargetReplicaSelector?alt=microsoft.servicefabric.services.communication.client.TargetReplicaSelector&text=TargetReplicaSelector" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about which replica in the partition the client should connect to.</p>

    <p></p>
  syntax: public TargetReplicaSelector getTargetReplicaSelector()
  uid: microsoft.servicefabric.services.communication.client.ServicePartitionClient.getTargetReplicaSelector()
nameWithType: ServicePartitionClient<TCommunicationClient>
syntax: public interface ServicePartitionClient<TCommunicationClient extends CommunicationClient>
type: interface
typeParameters:
- name: TCommunicationClient
uid: microsoft.servicefabric.services.communication.client.ServicePartitionClient
fullName: microsoft.servicefabric.services.communication.client.ServicePartitionClient<TCommunicationClient>
name: ServicePartitionClient<TCommunicationClient>
package: microsoft.servicefabric.services.communication.client
summary: <p>Specifies an instance of the communication client that can communicate with the replicas of a particular partition. </p>
metadata: {}
