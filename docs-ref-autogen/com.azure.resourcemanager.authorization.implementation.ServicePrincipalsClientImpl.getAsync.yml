### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.implementation.ServicePrincipalsClientImpl.getAsync*"
fullName: "com.azure.resourcemanager.authorization.implementation.ServicePrincipalsClientImpl.getAsync"
name: "getAsync"
nameWithType: "ServicePrincipalsClientImpl.getAsync"
members:
- uid: "com.azure.resourcemanager.authorization.implementation.ServicePrincipalsClientImpl.getAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.implementation.ServicePrincipalsClientImpl.getAsync(String objectId)"
  name: "getAsync(String objectId)"
  nameWithType: "ServicePrincipalsClientImpl.getAsync(String objectId)"
  summary: "Gets service principal information from the directory. Query by objectId or pass a filter to query by appId."
  parameters:
  - description: "The object ID of the service principal to get."
    name: "objectId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ServicePrincipalInner> getAsync(String objectId)"
  returns:
    description: "service principal information from the directory."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalInner?alt=com.azure.resourcemanager.authorization.fluent.models.ServicePrincipalInner&text=ServicePrincipalInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.1.0
