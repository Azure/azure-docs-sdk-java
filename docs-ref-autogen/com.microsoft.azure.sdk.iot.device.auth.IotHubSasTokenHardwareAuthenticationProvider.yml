### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider"
fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider"
name: "IotHubSasTokenHardwareAuthenticationProvider"
nameWithType: "IotHubSasTokenHardwareAuthenticationProvider"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getDeviceId()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getGatewayHostname()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getHostname()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getIotHubTrustedCert()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getModuleId()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getPathToIotHubTrustedCert()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setIotHubTrustedCert(java.lang.String)"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setPathToIotHubTrustedCert(java.lang.String)"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setSSLContext(javax.net.ssl.SSLContext)"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.canRefreshToken()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getMillisecondsBeforeProactiveRenewal()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getSasToken()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getTokenValidSecs()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isAuthenticationProviderRenewalNecessary()"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.setTokenValidSecs(long)"
- "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.shouldRefreshToken(boolean)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class IotHubSasTokenHardwareAuthenticationProvider extends IotHubSasTokenAuthenticationProvider"
constructors:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.IotHubSasTokenHardwareAuthenticationProvider(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
  name: "IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
  summary: "Creates a Sas Token based authentication object that uses the provided security provider to produce sas tokens."
  parameters:
  - description: "The host name of the hub to authenticate against"
    name: "hostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The gateway hostname to use, or null if connecting to an IotHub"
    name: "gatewayHostname"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The unique id of the device to authenticate"
    name: "deviceId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the module id. May be null if not using a module"
    name: "moduleId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the security provider to use for authentication"
    name: "securityProvider"
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProvider&text=SecurityProvider\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public IotHubSasTokenHardwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SecurityProvider securityProvider)"
  exceptions:
  - description: "if the provided securityProvider throws while retrieving a sas token or ssl context instance"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Creates a Sas Token based authentication object that uses the provided security provider to produce sas tokens."
fields:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.securityProvider"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.securityProvider"
  name: "securityProvider"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.securityProvider"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderTpm?alt=com.microsoft.azure.sdk.iot.provisioning.security.SecurityProviderTpm&text=SecurityProviderTpm\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected SecurityProviderTpm securityProvider"
methods:
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.canRefreshToken()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.canRefreshToken()"
  name: "canRefreshToken()"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.canRefreshToken()"
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.canRefreshToken()"
  syntax: "public boolean canRefreshToken()"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.getSSLContext()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.getSSLContext()"
  name: "getSSLContext()"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.getSSLContext()"
  summary: "Getter for SSLContext"
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.getSSLContext()"
  syntax: "public SSLContext getSSLContext()"
  exceptions:
  - description: "if an error occurs when generating the SSLContext"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Getter for SSLContext"
  returns:
    description: "The value of SSLContext"
    type: "<xref href=\"javax.net.ssl.SSLContext?alt=javax.net.ssl.SSLContext&text=SSLContext\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.getSasToken()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.getSasToken()"
  name: "getSasToken()"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.getSasToken()"
  summary: "Getter for Sas<wbr>Token."
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.getSasToken()"
  syntax: "public char[] getSasToken()"
  exceptions:
  - description: "if generating the sas token from the TPM fails"
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Getter for SasToken. If the saved token has expired, this method shall renew it if possible"
  returns:
    description: "The value of SasToken"
    type: "<xref href=\"char?alt=char&text=char\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()"
  name: "isAuthenticationProviderRenewalNecessary()"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.isAuthenticationProviderRenewalNecessary()"
  summary: "Returns true if the this authentication provider is no longer valid."
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenAuthenticationProvider.isAuthenticationProviderRenewalNecessary()"
  syntax: "public boolean isAuthenticationProviderRenewalNecessary()"
  desc: "Returns true if the this authentication provider is no longer valid. If true, users will need to create a new DeviceClient instance to get a new authentication provider. The most common case for this is if the user provides a SAS token, but no symmetric key, and that SAS token has expired. At that point, the user's client won't be able to authenticate anymore."
  returns:
    description: "always returns false as the hardware authentication mechanism will never need to be updated with a new key or token"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.setIotHubTrustedCert(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.setIotHubTrustedCert(String certificate)"
  name: "setIotHubTrustedCert(String certificate)"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.setIotHubTrustedCert(String certificate)"
  summary: "Setter for the user trusted certificate"
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setIotHubTrustedCert(java.lang.String)"
  parameters:
  - description: "valid user trusted certificate string"
    name: "certificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setIotHubTrustedCert(String certificate)"
  desc: "Setter for the user trusted certificate"
- uid: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.setPathToIotHubTrustedCert(java.lang.String)"
  fullName: "com.microsoft.azure.sdk.iot.device.auth.IotHubSasTokenHardwareAuthenticationProvider.setPathToIotHubTrustedCert(String pathToCertificate)"
  name: "setPathToIotHubTrustedCert(String pathToCertificate)"
  nameWithType: "IotHubSasTokenHardwareAuthenticationProvider.setPathToIotHubTrustedCert(String pathToCertificate)"
  summary: "Setter for the providing trusted certificate."
  overridden: "com.microsoft.azure.sdk.iot.device.auth.IotHubAuthenticationProvider.setPathToIotHubTrustedCert(java.lang.String)"
  parameters:
  - description: "path to the certificate for one way authentication."
    name: "pathToCertificate"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setPathToIotHubTrustedCert(String pathToCertificate)"
  desc: "Setter for the providing trusted certificate."
type: "class"
metadata: {}
package: "com.microsoft.azure.sdk.iot.device.auth"
artifact: com.microsoft.azure.sdk.iot:iot-device-client:1.30.1
