### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.datalake.analytics.models.CatalogItem?alt=com.microsoft.azure.management.datalake.analytics.models.CatalogItem&text=CatalogItem" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.computeAccountName()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.version()
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withComputeAccountName(String)
- com.microsoft.azure.management.datalake.analytics.models.CatalogItem.withVersion(UUID)
methods:
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.clrName()
  name: clrName()
  nameWithType: USqlAssembly.clrName()
  returns:
    description: <p>the clrName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the clrName value.</p>

    <p></p>
  syntax: public String clrName()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.clrName()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.databaseName()
  name: databaseName()
  nameWithType: USqlAssembly.databaseName()
  returns:
    description: <p>the databaseName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the databaseName value.</p>

    <p></p>
  syntax: public String databaseName()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.databaseName()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.dependencies()
  name: dependencies()
  nameWithType: USqlAssembly.dependencies()
  returns:
    description: <p>the dependencies value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyDependencyInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyDependencyInfo&text=USqlAssemblyDependencyInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the dependencies value.</p>

    <p></p>
  syntax: public List<USqlAssemblyDependencyInfo> dependencies()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.dependencies()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.files()
  name: files()
  nameWithType: USqlAssembly.files()
  returns:
    description: <p>the files value </p>
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyFileInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyFileInfo&text=USqlAssemblyFileInfo" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the files value.</p>

    <p></p>
  syntax: public List<USqlAssemblyFileInfo> files()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.files()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.isUserDefined()
  name: isUserDefined()
  nameWithType: USqlAssembly.isUserDefined()
  returns:
    description: <p>the isUserDefined value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the isUserDefined value.</p>

    <p></p>
  syntax: public Boolean isUserDefined()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.isUserDefined()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.isVisible()
  name: isVisible()
  nameWithType: USqlAssembly.isVisible()
  returns:
    description: <p>the isVisible value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the isVisible value.</p>

    <p></p>
  syntax: public Boolean isVisible()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.isVisible()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.name()
  name: name()
  nameWithType: USqlAssembly.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.name()
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withClrName(String clrName)
  name: withClrName(String clrName)
  nameWithType: USqlAssembly.withClrName(String clrName)
  parameters:
  - description: <p>the clrName value to set </p>
    name: clrName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlAssembly object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the clrName value.</p>

    <p></p>
  syntax: public USqlAssembly withClrName(String clrName)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withClrName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withDatabaseName(String databaseName)
  name: withDatabaseName(String databaseName)
  nameWithType: USqlAssembly.withDatabaseName(String databaseName)
  parameters:
  - description: <p>the databaseName value to set </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlAssembly object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the databaseName value.</p>

    <p></p>
  syntax: public USqlAssembly withDatabaseName(String databaseName)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withDatabaseName(String)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withDependencies(List<USqlAssemblyDependencyInfo> dependencies)
  name: withDependencies(List<USqlAssemblyDependencyInfo> dependencies)
  nameWithType: USqlAssembly.withDependencies(List<USqlAssemblyDependencyInfo> dependencies)
  parameters:
  - description: <p>the dependencies value to set </p>
    name: dependencies
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyDependencyInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyDependencyInfo&text=USqlAssemblyDependencyInfo" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the USqlAssembly object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the dependencies value.</p>

    <p></p>
  syntax: public USqlAssembly withDependencies(List<USqlAssemblyDependencyInfo> dependencies)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withDependencies(List<USqlAssemblyDependencyInfo>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withFiles(List<USqlAssemblyFileInfo> files)
  name: withFiles(List<USqlAssemblyFileInfo> files)
  nameWithType: USqlAssembly.withFiles(List<USqlAssemblyFileInfo> files)
  parameters:
  - description: <p>the files value to set </p>
    name: files
    type: List&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyFileInfo?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssemblyFileInfo&text=USqlAssemblyFileInfo" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the USqlAssembly object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the files value.</p>

    <p></p>
  syntax: public USqlAssembly withFiles(List<USqlAssemblyFileInfo> files)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withFiles(List<USqlAssemblyFileInfo>)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withIsUserDefined(Boolean isUserDefined)
  name: withIsUserDefined(Boolean isUserDefined)
  nameWithType: USqlAssembly.withIsUserDefined(Boolean isUserDefined)
  parameters:
  - description: <p>the isUserDefined value to set </p>
    name: isUserDefined
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlAssembly object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isUserDefined value.</p>

    <p></p>
  syntax: public USqlAssembly withIsUserDefined(Boolean isUserDefined)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withIsUserDefined(Boolean)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withIsVisible(Boolean isVisible)
  name: withIsVisible(Boolean isVisible)
  nameWithType: USqlAssembly.withIsVisible(Boolean isVisible)
  parameters:
  - description: <p>the isVisible value to set </p>
    name: isVisible
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlAssembly object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the isVisible value.</p>

    <p></p>
  syntax: public USqlAssembly withIsVisible(Boolean isVisible)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withIsVisible(Boolean)
- fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withName(String name)
  name: withName(String name)
  nameWithType: USqlAssembly.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the USqlAssembly object itself. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.USqlAssembly?alt=com.microsoft.azure.management.datalake.analytics.models.USqlAssembly&text=USqlAssembly" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public USqlAssembly withName(String name)
  uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly.withName(String)
nameWithType: USqlAssembly
syntax: public class USqlAssembly extends CatalogItem
type: class
uid: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly
fullName: com.microsoft.azure.management.datalake.analytics.models.USqlAssembly
name: USqlAssembly
package: com.microsoft.azure.management.datalake.analytics.models
summary: <p>A Data Lake Analytics catalog U-SQL Assembly. </p>
metadata: {}
