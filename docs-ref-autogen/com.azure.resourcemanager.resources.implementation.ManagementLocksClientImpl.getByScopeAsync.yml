### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getByScopeAsync*"
fullName: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getByScopeAsync"
name: "getByScopeAsync"
nameWithType: "ManagementLocksClientImpl.getByScopeAsync"
members:
- uid: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getByScopeAsync(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.resources.implementation.ManagementLocksClientImpl.getByScopeAsync(String scope, String lockName)"
  name: "getByScopeAsync(String scope, String lockName)"
  nameWithType: "ManagementLocksClientImpl.getByScopeAsync(String scope, String lockName)"
  summary: "Get a management lock by scope."
  parameters:
  - description: "The scope for the lock."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of lock."
    name: "lockName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<ManagementLockObjectInner> getByScopeAsync(String scope, String lockName)"
  returns:
    description: "a management lock by scope."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.ManagementLockObjectInner?alt=com.azure.resourcemanager.resources.fluent.models.ManagementLockObjectInner&text=ManagementLockObjectInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.implementation"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.3.0
