### YamlMime:JavaMember
nameWithType: StoreMapping.StoreMapping
type: constructor
members:
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping()
  name: StoreMapping()
  nameWithType: StoreMapping.StoreMapping()
  syntax: public StoreMapping()
  uid: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping()
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping(UUID id, Shard s, byte[] minValue, byte[] maxValue, int status)
  name: StoreMapping(UUID id, Shard s, byte[] minValue, byte[] maxValue, int status)
  nameWithType: StoreMapping.StoreMapping(UUID id, Shard s, byte[] minValue, byte[] maxValue, int status)
  parameters:
  - description: <p>Identify of mapping. </p>
    name: id
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Shard being converted. </p>
    name: s
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.Shard?alt=com.microsoft.azure.elasticdb.shard.base.Shard&text=Shard" data-throw-if-not-resolved="False"/>
  - description: <p>min key value. </p>
    name: minValue
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>max key value. </p>
    name: maxValue
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Mapping status. </p>
    name: status
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs the storage representation from client side objects.</p>

    <p></p>
  syntax: public StoreMapping(UUID id, Shard s, byte[] minValue, byte[] maxValue, int status)
  uid: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping(UUID,Shard,byte [],byte [],int)
- fullName: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping(UUID id, UUID shardMapId, byte[] minValue, byte[] maxValue, int status, UUID lockOwnerId, StoreShard storeShard)
  name: StoreMapping(UUID id, UUID shardMapId, byte[] minValue, byte[] maxValue, int status, UUID lockOwnerId, StoreShard storeShard)
  nameWithType: StoreMapping.StoreMapping(UUID id, UUID shardMapId, byte[] minValue, byte[] maxValue, int status, UUID lockOwnerId, StoreShard storeShard)
  parameters:
  - description: <p>Identify of mapping. </p>
    name: id
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Id of parent shardMap. </p>
    name: shardMapId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>min key value. </p>
    name: minValue
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>max key value. </p>
    name: maxValue
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Mapping status. </p>
    name: status
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id. </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>StoreShard </p>
    name: storeShard
    type: <xref href="com.microsoft.azure.elasticdb.shard.store.StoreShard?alt=com.microsoft.azure.elasticdb.shard.store.StoreShard&text=StoreShard" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs the storage representation from client side objects.</p>

    <p></p>
  syntax: public StoreMapping(UUID id, UUID shardMapId, byte[] minValue, byte[] maxValue, int status, UUID lockOwnerId, StoreShard storeShard)
  uid: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping(UUID,UUID,byte [],byte [],int,UUID,StoreShard)
uid: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping*
fullName: com.microsoft.azure.elasticdb.shard.store.StoreMapping.StoreMapping
name: StoreMapping
package: com.microsoft.azure.elasticdb.shard.store
metadata: {}
