### YamlMime:JavaMember
nameWithType: CodeBuilderBase.getOrBuildMethodDispatcher
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher(Class<?> interfaceType)
  name: getOrBuildMethodDispatcher(Class<?> interfaceType)
  nameWithType: CodeBuilderBase.getOrBuildMethodDispatcher(Class<?> interfaceType)
  overridden: microsoft.servicefabric.services.remoting.builder.CodeBuilder.getOrBuildMethodDispatcher(Class<?>)
  parameters:
  - description: <p>Type of the Interface. </p>
    name: interfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class<?>&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Method Dispatcher build result. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult?alt=microsoft.servicefabric.services.remoting.builder.MethodDispatcherBuildResult&text=MethodDispatcherBuildResult" data-throw-if-not-resolved="False"/>
  summary: <p>Get or Build Method Dispatcher. </p>
  syntax: public MethodDispatcherBuildResult getOrBuildMethodDispatcher(Class<?> interfaceType)
  uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher(Class<?>)
uid: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher*
fullName: microsoft.servicefabric.services.remoting.builder.CodeBuilderBase.getOrBuildMethodDispatcher(Class<?> interfaceType)
name: getOrBuildMethodDispatcher(Class<?> interfaceType)
package: microsoft.servicefabric.services.remoting.builder
metadata: {}
