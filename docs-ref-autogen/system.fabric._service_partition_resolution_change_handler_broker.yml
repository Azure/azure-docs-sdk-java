items:
- uid: system.fabric._service_partition_resolution_change_handler_broker
  id: _service_partition_resolution_change_handler_broker
  parent: system.fabric
  children:
  - system.fabric._service_partition_resolution_change_handler_broker.onChange(long,long,long)
  - system.fabric._service_partition_resolution_change_handler_broker.ServicePartitionResolutionChangeHandlerBroker(ServicePartitionResolutionChangeHandler,FabricClient)
  href: system.fabric._service_partition_resolution_change_handler_broker.yml
  langs:
  - java
  name: ServicePartitionResolutionChangeHandlerBroker
  nameWithType: ServicePartitionResolutionChangeHandlerBroker
  fullName: system.fabric.ServicePartitionResolutionChangeHandlerBroker
  type: Class
  source:
    remote: &o0
      path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionResolutionChangeHandlerBroker.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionResolutionChangeHandlerBroker.java
    startLine: 2
  package: system.fabric
  syntax:
    content: public class ServicePartitionResolutionChangeHandlerBroker
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - system.fabric._service_partition_resolution_change_handler_broker.fClient()
  - system.fabric._service_partition_resolution_change_handler_broker.sprcHandler()
- uid: system.fabric._service_partition_resolution_change_handler_broker.onChange(long,long,long)
  id: onChange(long,long,long)
  parent: system.fabric._service_partition_resolution_change_handler_broker
  href: system.fabric._service_partition_resolution_change_handler_broker.yml
  langs:
  - java
  name: onChange(long servMgmtClientPtr, long handlerId, long partitionPtr)
  nameWithType: ServicePartitionResolutionChangeHandlerBroker.onChange(long servMgmtClientPtr, long handlerId, long partitionPtr)
  fullName: void system.fabric.ServicePartitionResolutionChangeHandlerBroker.onChange(long servMgmtClientPtr, long handlerId, long partitionPtr)
  overload: system.fabric._service_partition_resolution_change_handler_broker.onChange*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionResolutionChangeHandlerBroker.java
    startLine: 13
  package: system.fabric
  syntax:
    content: public void onChange(long servMgmtClientPtr, long handlerId, long partitionPtr)
    parameters:
    - id: servMgmtClientPtr
      type: 0364520f
    - id: handlerId
      type: 0364520f
    - id: partitionPtr
      type: 0364520f
- uid: system.fabric._service_partition_resolution_change_handler_broker.ServicePartitionResolutionChangeHandlerBroker(ServicePartitionResolutionChangeHandler,FabricClient)
  id: ServicePartitionResolutionChangeHandlerBroker(ServicePartitionResolutionChangeHandler,FabricClient)
  parent: system.fabric._service_partition_resolution_change_handler_broker
  href: system.fabric._service_partition_resolution_change_handler_broker.yml
  langs:
  - java
  name: ServicePartitionResolutionChangeHandlerBroker(ServicePartitionResolutionChangeHandler sprcHandler, FabricClient fClient)
  nameWithType: ServicePartitionResolutionChangeHandlerBroker.ServicePartitionResolutionChangeHandlerBroker(ServicePartitionResolutionChangeHandler sprcHandler, FabricClient fClient)
  fullName: system.fabric.ServicePartitionResolutionChangeHandlerBroker.ServicePartitionResolutionChangeHandlerBroker(ServicePartitionResolutionChangeHandler sprcHandler, FabricClient fClient)
  overload: system.fabric._service_partition_resolution_change_handler_broker.ServicePartitionResolutionChangeHandlerBroker*
  type: Constructor
  source:
    remote: *o0
    path: src/prod/src/java/system.fabric/src/system/fabric/ServicePartitionResolutionChangeHandlerBroker.java
    startLine: 6
  package: system.fabric
  syntax:
    content: public ServicePartitionResolutionChangeHandlerBroker(ServicePartitionResolutionChangeHandler sprcHandler, FabricClient fClient)
    parameters:
    - id: sprcHandler
      type: system.fabric._service_partition_resolution_change_handler
    - id: fClient
      type: system.fabric._fabric_client
references:
- uid: system.fabric._service_partition_resolution_change_handler_broker.ServicePartitionResolutionChangeHandlerBroker*
  name: ServicePartitionResolutionChangeHandlerBroker
  nameWithType: ServicePartitionResolutionChangeHandlerBroker.ServicePartitionResolutionChangeHandlerBroker
  fullName: system.fabric.ServicePartitionResolutionChangeHandlerBroker.ServicePartitionResolutionChangeHandlerBroker
  package: system.fabric
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: system.fabric._service_partition_resolution_change_handler_broker.onChange*
  name: onChange
  nameWithType: ServicePartitionResolutionChangeHandlerBroker.onChange
  fullName: void system.fabric.ServicePartitionResolutionChangeHandlerBroker.onChange
  package: system.fabric
- uid: system.fabric._service_partition_resolution_change_handler_broker.fClient()
- uid: system.fabric._service_partition_resolution_change_handler_broker.sprcHandler()
- uid: system.fabric._service_partition_resolution_change_handler
  parent: system.fabric
  href: system.fabric._service_partition_resolution_change_handler.yml
  name: ServicePartitionResolutionChangeHandler
  nameWithType: ServicePartitionResolutionChangeHandler
  fullName: system.fabric.ServicePartitionResolutionChangeHandler
  type: Interface
  syntax:
    content: public interface ServicePartitionResolutionChangeHandler
- uid: system.fabric._fabric_client
  parent: system.fabric
  href: system.fabric._fabric_client.yml
  name: FabricClient
  nameWithType: FabricClient
  fullName: system.fabric.FabricClient
  type: Class
  summary: >-
    <p>Creates and manages Service Fabric services and other entities. </p>

    <p>

      <bold>Remarks:</bold>It is highly recommended that you share FabricClients as much as possible. This is because the <xref href="system.fabric._fabric_client" data-throw-if-not-resolved="false"></xref> has multiple optimizations such as caching and batching that you would not be able to fully utilize otherwise. </p>
  syntax:
    content: public class FabricClient
