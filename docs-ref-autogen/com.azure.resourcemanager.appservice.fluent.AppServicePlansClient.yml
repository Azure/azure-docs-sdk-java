### YamlMime:ManagedReference
items:
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  id: AppServicePlansClient
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent
  children:
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.delete(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroup(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimit(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnet(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkus(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarm(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGateway(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list()
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list(java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync()
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync(java.lang.Boolean)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup(java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroupAsync(java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilities(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionsAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnet(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnets(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponseAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorker(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebApps(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync(java.lang.String,java.lang.String)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync(java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponse(java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponseAsync(java.lang.String,java.lang.String,java.lang.Boolean)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGateway(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource,com.azure.core.util.Context)
  - com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  langs:
  - java
  name: AppServicePlansClient
  nameWithType: AppServicePlansClient
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  type: Interface
  package: com.azure.resourcemanager.appservice.fluent
  summary: An instance of this class provides access to all the operations defined in AppServicePlansClient.
  syntax:
    content: public interface AppServicePlansClient extends InnerSupportsGet<AppServicePlanInner>, InnerSupportsListing<AppServicePlanInner>, InnerSupportsDelete<Void>
  implements:
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  - com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  nameWithType: AppServicePlansClient.beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract SyncPoller<PollResult<AppServicePlanInner>,AppServicePlanInner> beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: App Service plan.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner,com.azure.core.util.Context)
  id: beginCreateOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
  nameWithType: AppServicePlansClient.beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract SyncPoller<PollResult<AppServicePlanInner>,AppServicePlanInner> beginCreateOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  id: beginCreateOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: beginCreateOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  nameWithType: AppServicePlansClient.beginCreateOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract PollerFlux<PollResult<AppServicePlanInner>,AppServicePlanInner> beginCreateOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: App Service plan.
    return:
      type: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  nameWithType: AppServicePlansClient.createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract AppServicePlanInner createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: App Service plan.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner,com.azure.core.util.Context)
  id: createOrUpdate(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
  nameWithType: AppServicePlansClient.createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract AppServicePlanInner createOrUpdate(String resourceGroupName, String name, AppServicePlanInner appServicePlan, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  id: createOrUpdateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  nameWithType: AppServicePlansClient.createOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract Mono<AppServicePlanInner> createOrUpdateAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  id: createOrUpdateVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  nameWithType: AppServicePlansClient.createOrUpdateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRoute*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract VnetRouteInner createOrUpdateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  id: createOrUpdateVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  nameWithType: AppServicePlansClient.createOrUpdateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<VnetRouteInner> createOrUpdateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner,com.azure.core.util.Context)
  id: createOrUpdateVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
  nameWithType: AppServicePlansClient.createOrUpdateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Response<VnetRouteInner> createOrUpdateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  id: createOrUpdateVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  nameWithType: AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<Response<VnetRouteInner>> createOrUpdateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  id: createOrUpdateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: createOrUpdateWithResponseAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  nameWithType: AppServicePlansClient.createOrUpdateWithResponseAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateWithResponseAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract Mono<Response<Flux<ByteBuffer>>> createOrUpdateWithResponseAsync(String resourceGroupName, String name, AppServicePlanInner appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.delete(java.lang.String,java.lang.String)
  id: delete(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: delete(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.delete(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.delete(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.delete*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete an App Service plan.
  syntax:
    content: public abstract void delete(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteAsync(java.lang.String,java.lang.String)
  id: deleteAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.deleteAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete an App Service plan.
  syntax:
    content: public abstract Mono<Void> deleteAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.deleteHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnection*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract void deleteHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.deleteHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract Mono<Void> deleteHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteHybridConnectionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  nameWithType: AppServicePlansClient.deleteHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract Response<Void> deleteHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteHybridConnectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.deleteHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract Mono<Response<Void>> deleteHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteVnetRoute(String resourceGroupName, String name, String vnetName, String routeName)
  nameWithType: AppServicePlansClient.deleteVnetRoute(String resourceGroupName, String name, String vnetName, String routeName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRoute(String resourceGroupName, String name, String vnetName, String routeName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRoute*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract void deleteVnetRoute(String resourceGroupName, String name, String vnetName, String routeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName)
  nameWithType: AppServicePlansClient.deleteVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<Void> deleteVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
  nameWithType: AppServicePlansClient.deleteVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Response<Void> deleteVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: deleteVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
  nameWithType: AppServicePlansClient.deleteVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<Response<Void>> deleteVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: deleteWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: AppServicePlansClient.deleteWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete an App Service plan.
  syntax:
    content: public abstract Response<Void> deleteWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponseAsync(java.lang.String,java.lang.String)
  id: deleteWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: deleteWithResponseAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.deleteWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Delete an App Service plan.
  syntax:
    content: public abstract Mono<Response<Void>> deleteWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroup(java.lang.String,java.lang.String)
  id: getByResourceGroup(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getByResourceGroup(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getByResourceGroup(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroup(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get an App Service plan.
  syntax:
    content: public abstract AppServicePlanInner getByResourceGroup(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getByResourceGroupAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getByResourceGroupAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get an App Service plan.
  syntax:
    content: public abstract Mono<AppServicePlanInner> getByResourceGroupAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getByResourceGroupWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: AppServicePlansClient.getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get an App Service plan.
  syntax:
    content: public abstract Response<AppServicePlanInner> getByResourceGroupWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  id: getByResourceGroupWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get an App Service plan.
  syntax:
    content: public abstract Mono<Response<AppServicePlanInner>> getByResourceGroupWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.getHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnection*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Retrieve a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract HybridConnectionInner getHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
      description: hybrid Connection contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.getHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Retrieve a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract Mono<HybridConnectionInner> getHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
      description: hybrid Connection contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimit(java.lang.String,java.lang.String)
  id: getHybridConnectionPlanLimit(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnectionPlanLimit(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimit(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimit(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimit*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the maximum number of Hybrid Connections allowed in an App Service plan.
  syntax:
    content: public abstract HybridConnectionLimitsInner getHybridConnectionPlanLimit(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
      description: hybrid Connection limits contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitAsync(java.lang.String,java.lang.String)
  id: getHybridConnectionPlanLimitAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnectionPlanLimitAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimitAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the maximum number of Hybrid Connections allowed in an App Service plan.
  syntax:
    content: public abstract Mono<HybridConnectionLimitsInner> getHybridConnectionPlanLimitAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner>
      description: hybrid Connection limits contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getHybridConnectionPlanLimitWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnectionPlanLimitWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimitWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the maximum number of Hybrid Connections allowed in an App Service plan.
  syntax:
    content: public abstract Response<HybridConnectionLimitsInner> getHybridConnectionPlanLimitWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner>
      description: hybrid Connection limits contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync(java.lang.String,java.lang.String)
  id: getHybridConnectionPlanLimitWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnectionPlanLimitWithResponseAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the maximum number of Hybrid Connections allowed in an App Service plan.
  syntax:
    content: public abstract Mono<Response<HybridConnectionLimitsInner>> getHybridConnectionPlanLimitWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner>>
      description: hybrid Connection limits contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getHybridConnectionWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  nameWithType: AppServicePlansClient.getHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Retrieve a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract Response<HybridConnectionInner> getHybridConnectionWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
      description: hybrid Connection contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getHybridConnectionWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.getHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Retrieve a Hybrid Connection in use in an App Service plan.
  syntax:
    content: public abstract Mono<Response<HybridConnectionInner>> getHybridConnectionWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Service Bus relay.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>>
      description: hybrid Connection contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnet(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getRouteForVnet(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getRouteForVnet(String resourceGroupName, String name, String vnetName, String routeName)
  nameWithType: AppServicePlansClient.getRouteForVnet(String resourceGroupName, String name, String vnetName, String routeName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnet(String resourceGroupName, String name, String vnetName, String routeName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnet*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract List<VnetRouteInner> getRouteForVnet(String resourceGroupName, String name, String vnetName, String routeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    return:
      type: java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getRouteForVnetAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getRouteForVnetAsync(String resourceGroupName, String name, String vnetName, String routeName)
  nameWithType: AppServicePlansClient.getRouteForVnetAsync(String resourceGroupName, String name, String vnetName, String routeName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetAsync(String resourceGroupName, String name, String vnetName, String routeName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<List<VnetRouteInner>> getRouteForVnetAsync(String resourceGroupName, String name, String vnetName, String routeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    return:
      type: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getRouteForVnetWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getRouteForVnetWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
  nameWithType: AppServicePlansClient.getRouteForVnetWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Response<List<VnetRouteInner>> getRouteForVnetWithResponse(String resourceGroupName, String name, String vnetName, String routeName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getRouteForVnetWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getRouteForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
  nameWithType: AppServicePlansClient.getRouteForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<Response<List<VnetRouteInner>>> getRouteForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkus(java.lang.String,java.lang.String)
  id: getServerFarmSkus(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getServerFarmSkus(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getServerFarmSkus(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkus(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkus*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets all selectable SKUs for a given App Service Plan.
  syntax:
    content: public abstract Object getServerFarmSkus(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    return:
      type: java.lang.Object
      description: any object.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusAsync(java.lang.String,java.lang.String)
  id: getServerFarmSkusAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getServerFarmSkusAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getServerFarmSkusAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets all selectable SKUs for a given App Service Plan.
  syntax:
    content: public abstract Mono<Object> getServerFarmSkusAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    return:
      type: reactor.core.publisher.Mono<java.lang.Object>
      description: any object.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getServerFarmSkusWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getServerFarmSkusWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: AppServicePlansClient.getServerFarmSkusWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets all selectable SKUs for a given App Service Plan.
  syntax:
    content: public abstract Response<Object> getServerFarmSkusWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Object>
      description: any object.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponseAsync(java.lang.String,java.lang.String)
  id: getServerFarmSkusWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getServerFarmSkusWithResponseAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.getServerFarmSkusWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets all selectable SKUs for a given App Service Plan.
  syntax:
    content: public abstract Mono<Response<Object>> getServerFarmSkusWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
      description: any object.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarm(java.lang.String,java.lang.String,java.lang.String)
  id: getVnetFromServerFarm(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetFromServerFarm(String resourceGroupName, String name, String vnetName)
  nameWithType: AppServicePlansClient.getVnetFromServerFarm(String resourceGroupName, String name, String vnetName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarm(String resourceGroupName, String name, String vnetName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarm*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network associated with an App Service plan.
  syntax:
    content: public abstract VnetInfoInner getVnetFromServerFarm(String resourceGroupName, String name, String vnetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
      description: virtual Network information contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getVnetFromServerFarmAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetFromServerFarmAsync(String resourceGroupName, String name, String vnetName)
  nameWithType: AppServicePlansClient.getVnetFromServerFarmAsync(String resourceGroupName, String name, String vnetName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmAsync(String resourceGroupName, String name, String vnetName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network associated with an App Service plan.
  syntax:
    content: public abstract Mono<VnetInfoInner> getVnetFromServerFarmAsync(String resourceGroupName, String name, String vnetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>
      description: virtual Network information contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getVnetFromServerFarmWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetFromServerFarmWithResponse(String resourceGroupName, String name, String vnetName, Context context)
  nameWithType: AppServicePlansClient.getVnetFromServerFarmWithResponse(String resourceGroupName, String name, String vnetName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponse(String resourceGroupName, String name, String vnetName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network associated with an App Service plan.
  syntax:
    content: public abstract Response<VnetInfoInner> getVnetFromServerFarmWithResponse(String resourceGroupName, String name, String vnetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>
      description: virtual Network information contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: getVnetFromServerFarmWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetFromServerFarmWithResponseAsync(String resourceGroupName, String name, String vnetName)
  nameWithType: AppServicePlansClient.getVnetFromServerFarmWithResponseAsync(String resourceGroupName, String name, String vnetName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponseAsync(String resourceGroupName, String name, String vnetName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network associated with an App Service plan.
  syntax:
    content: public abstract Mono<Response<VnetInfoInner>> getVnetFromServerFarmWithResponseAsync(String resourceGroupName, String name, String vnetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>
      description: virtual Network information contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGateway(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getVnetGateway(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName)
  nameWithType: AppServicePlansClient.getVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGateway*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network gateway.
  syntax:
    content: public abstract VnetGatewayInner getVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getVnetGatewayAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
  nameWithType: AppServicePlansClient.getVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network gateway.
  syntax:
    content: public abstract Mono<VnetGatewayInner> getVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: getVnetGatewayWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, Context context)
  nameWithType: AppServicePlansClient.getVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network gateway.
  syntax:
    content: public abstract Response<VnetGatewayInner> getVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: getVnetGatewayWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: getVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
  nameWithType: AppServicePlansClient.getVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get a Virtual Network gateway.
  syntax:
    content: public abstract Mono<Response<VnetGatewayInner>> getVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>>
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list()
  id: list()
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: list()
  nameWithType: AppServicePlansClient.list()
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list()
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all App Service plans for a subscription.
  syntax:
    content: public abstract PagedIterable<AppServicePlanInner> list()
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: collection of App Service plans.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list(java.lang.Boolean,com.azure.core.util.Context)
  id: list(java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: list(Boolean detailed, Context context)
  nameWithType: AppServicePlansClient.list(Boolean detailed, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list(Boolean detailed, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all App Service plans for a subscription.
  syntax:
    content: public abstract PagedIterable<AppServicePlanInner> list(Boolean detailed, Context context)
    parameters:
    - id: detailed
      type: java.lang.Boolean
      description: >-
        Specify &lt;code&gt;true&lt;/code&gt; to return all App Service plan properties. The default is
             &lt;code&gt;false&lt;/code&gt;, which returns a subset of the properties. Retrieval of all properties may
             increase the API latency.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: collection of App Service plans.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync()
  id: listAsync()
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listAsync()
  nameWithType: AppServicePlansClient.listAsync()
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync()
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all App Service plans for a subscription.
  syntax:
    content: public abstract PagedFlux<AppServicePlanInner> listAsync()
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: collection of App Service plans.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync(java.lang.Boolean)
  id: listAsync(java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listAsync(Boolean detailed)
  nameWithType: AppServicePlansClient.listAsync(Boolean detailed)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync(Boolean detailed)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all App Service plans for a subscription.
  syntax:
    content: public abstract PagedFlux<AppServicePlanInner> listAsync(Boolean detailed)
    parameters:
    - id: detailed
      type: java.lang.Boolean
      description: >-
        Specify &lt;code&gt;true&lt;/code&gt; to return all App Service plan properties. The default is
             &lt;code&gt;false&lt;/code&gt;, which returns a subset of the properties. Retrieval of all properties may
             increase the API latency.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: collection of App Service plans.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup(java.lang.String)
  id: listByResourceGroup(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: AppServicePlansClient.listByResourceGroup(String resourceGroupName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup(String resourceGroupName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all App Service plans in a resource group.
  syntax:
    content: public abstract PagedIterable<AppServicePlanInner> listByResourceGroup(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: collection of App Service plans.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  id: listByResourceGroup(java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listByResourceGroup(String resourceGroupName, Context context)
  nameWithType: AppServicePlansClient.listByResourceGroup(String resourceGroupName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup(String resourceGroupName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all App Service plans in a resource group.
  syntax:
    content: public abstract PagedIterable<AppServicePlanInner> listByResourceGroup(String resourceGroupName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: collection of App Service plans.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroupAsync(java.lang.String)
  id: listByResourceGroupAsync(java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: AppServicePlansClient.listByResourceGroupAsync(String resourceGroupName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroupAsync(String resourceGroupName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroupAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all App Service plans in a resource group.
  syntax:
    content: public abstract PagedFlux<AppServicePlanInner> listByResourceGroupAsync(String resourceGroupName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: collection of App Service plans.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilities(java.lang.String,java.lang.String)
  id: listCapabilities(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listCapabilities(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listCapabilities(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilities(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilities*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for List all capabilities of an App Service plan.
  syntax:
    content: public abstract List<CapabilityInner> listCapabilities(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>
      description: array of Capability.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesAsync(java.lang.String,java.lang.String)
  id: listCapabilitiesAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listCapabilitiesAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listCapabilitiesAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for List all capabilities of an App Service plan.
  syntax:
    content: public abstract Mono<List<CapabilityInner>> listCapabilitiesAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>>
      description: array of Capability.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listCapabilitiesWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listCapabilitiesWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: AppServicePlansClient.listCapabilitiesWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for List all capabilities of an App Service plan.
  syntax:
    content: public abstract Response<List<CapabilityInner>> listCapabilitiesWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>>
      description: array of Capability.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponseAsync(java.lang.String,java.lang.String)
  id: listCapabilitiesWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listCapabilitiesWithResponseAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listCapabilitiesWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for List all capabilities of an App Service plan.
  syntax:
    content: public abstract Mono<Response<List<CapabilityInner>>> listCapabilitiesWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>>>
      description: array of Capability.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listHybridConnectionKeys(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listHybridConnectionKeys(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.listHybridConnectionKeys(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeys(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeys*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the send key name and value of a Hybrid Connection.
  syntax:
    content: public abstract HybridConnectionKeyInner listHybridConnectionKeys(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: The name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: The name of the Service Bus relay.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
      description: hybrid Connection key contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listHybridConnectionKeysAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listHybridConnectionKeysAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.listHybridConnectionKeysAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the send key name and value of a Hybrid Connection.
  syntax:
    content: public abstract Mono<HybridConnectionKeyInner> listHybridConnectionKeysAsync(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: The name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: The name of the Service Bus relay.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner>
      description: hybrid Connection key contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listHybridConnectionKeysWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listHybridConnectionKeysWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  nameWithType: AppServicePlansClient.listHybridConnectionKeysWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the send key name and value of a Hybrid Connection.
  syntax:
    content: public abstract Response<HybridConnectionKeyInner> listHybridConnectionKeysWithResponse(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: The name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: The name of the Service Bus relay.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner>
      description: hybrid Connection key contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listHybridConnectionKeysWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listHybridConnectionKeysWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.listHybridConnectionKeysWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get the send key name and value of a Hybrid Connection.
  syntax:
    content: public abstract Mono<Response<HybridConnectionKeyInner>> listHybridConnectionKeysWithResponseAsync(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: The name of the Service Bus namespace.
    - id: relayName
      type: java.lang.String
      description: The name of the Service Bus relay.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner>>
      description: hybrid Connection key contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections(java.lang.String,java.lang.String)
  id: listHybridConnections(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listHybridConnections(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listHybridConnections(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Retrieve all Hybrid Connections in use in an App Service plan.
  syntax:
    content: public abstract PagedIterable<HybridConnectionInner> listHybridConnections(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
      description: collection of hostname bindings.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listHybridConnections(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listHybridConnections(String resourceGroupName, String name, Context context)
  nameWithType: AppServicePlansClient.listHybridConnections(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Retrieve all Hybrid Connections in use in an App Service plan.
  syntax:
    content: public abstract PagedIterable<HybridConnectionInner> listHybridConnections(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
      description: collection of hostname bindings.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionsAsync(java.lang.String,java.lang.String)
  id: listHybridConnectionsAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listHybridConnectionsAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listHybridConnectionsAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionsAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionsAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Retrieve all Hybrid Connections in use in an App Service plan.
  syntax:
    content: public abstract PagedFlux<HybridConnectionInner> listHybridConnectionsAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
      description: collection of hostname bindings.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnet(java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesForVnet(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listRoutesForVnet(String resourceGroupName, String name, String vnetName)
  nameWithType: AppServicePlansClient.listRoutesForVnet(String resourceGroupName, String name, String vnetName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnet(String resourceGroupName, String name, String vnetName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnet*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all routes that are associated with a Virtual Network in an App Service plan.
  syntax:
    content: public abstract List<VnetRouteInner> listRoutesForVnet(String resourceGroupName, String name, String vnetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    return:
      type: java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesForVnetAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listRoutesForVnetAsync(String resourceGroupName, String name, String vnetName)
  nameWithType: AppServicePlansClient.listRoutesForVnetAsync(String resourceGroupName, String name, String vnetName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetAsync(String resourceGroupName, String name, String vnetName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all routes that are associated with a Virtual Network in an App Service plan.
  syntax:
    content: public abstract Mono<List<VnetRouteInner>> listRoutesForVnetAsync(String resourceGroupName, String name, String vnetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    return:
      type: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listRoutesForVnetWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listRoutesForVnetWithResponse(String resourceGroupName, String name, String vnetName, Context context)
  nameWithType: AppServicePlansClient.listRoutesForVnetWithResponse(String resourceGroupName, String name, String vnetName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponse(String resourceGroupName, String name, String vnetName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all routes that are associated with a Virtual Network in an App Service plan.
  syntax:
    content: public abstract Response<List<VnetRouteInner>> listRoutesForVnetWithResponse(String resourceGroupName, String name, String vnetName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listRoutesForVnetWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listRoutesForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName)
  nameWithType: AppServicePlansClient.listRoutesForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all routes that are associated with a Virtual Network in an App Service plan.
  syntax:
    content: public abstract Mono<Response<List<VnetRouteInner>>> listRoutesForVnetWithResponseAsync(String resourceGroupName, String name, String vnetName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>>
      description: array of VnetRoute.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages(java.lang.String,java.lang.String)
  id: listUsages(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listUsages(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listUsages(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets server farm usage information.
  syntax:
    content: public abstract PagedIterable<CsmUsageQuotaInner> listUsages(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner>
      description: collection of CSM usage quotas.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listUsages(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listUsages(String resourceGroupName, String name, String filter, Context context)
  nameWithType: AppServicePlansClient.listUsages(String resourceGroupName, String name, String filter, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages(String resourceGroupName, String name, String filter, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets server farm usage information.
  syntax:
    content: public abstract PagedIterable<CsmUsageQuotaInner> listUsages(String resourceGroupName, String name, String filter, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    - id: filter
      type: java.lang.String
      description: >-
        Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
             $filter=(name.value eq 'Metric1' or name.value eq 'Metric2').
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner>
      description: collection of CSM usage quotas.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync(java.lang.String,java.lang.String)
  id: listUsagesAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listUsagesAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listUsagesAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets server farm usage information.
  syntax:
    content: public abstract PagedFlux<CsmUsageQuotaInner> listUsagesAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner>
      description: collection of CSM usage quotas.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync(java.lang.String,java.lang.String,java.lang.String)
  id: listUsagesAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listUsagesAsync(String resourceGroupName, String name, String filter)
  nameWithType: AppServicePlansClient.listUsagesAsync(String resourceGroupName, String name, String filter)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync(String resourceGroupName, String name, String filter)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Gets server farm usage information.
  syntax:
    content: public abstract PagedFlux<CsmUsageQuotaInner> listUsagesAsync(String resourceGroupName, String name, String filter)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of App Service Plan.
    - id: filter
      type: java.lang.String
      description: >-
        Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example:
             $filter=(name.value eq 'Metric1' or name.value eq 'Metric2').
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner>
      description: collection of CSM usage quotas.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnets(java.lang.String,java.lang.String)
  id: listVnets(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listVnets(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listVnets(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnets(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnets*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all Virtual Networks associated with an App Service plan.
  syntax:
    content: public abstract List<VnetInfoInner> listVnets(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>
      description: array of VnetInfo.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsAsync(java.lang.String,java.lang.String)
  id: listVnetsAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listVnetsAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listVnetsAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all Virtual Networks associated with an App Service plan.
  syntax:
    content: public abstract Mono<List<VnetInfoInner>> listVnetsAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>
      description: array of VnetInfo.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listVnetsWithResponse(java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listVnetsWithResponse(String resourceGroupName, String name, Context context)
  nameWithType: AppServicePlansClient.listVnetsWithResponse(String resourceGroupName, String name, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponse(String resourceGroupName, String name, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all Virtual Networks associated with an App Service plan.
  syntax:
    content: public abstract Response<List<VnetInfoInner>> listVnetsWithResponse(String resourceGroupName, String name, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>
      description: array of VnetInfo.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponseAsync(java.lang.String,java.lang.String)
  id: listVnetsWithResponseAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listVnetsWithResponseAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listVnetsWithResponseAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponseAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all Virtual Networks associated with an App Service plan.
  syntax:
    content: public abstract Mono<Response<List<VnetInfoInner>>> listVnetsWithResponseAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>>
      description: array of VnetInfo.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps(java.lang.String,java.lang.String)
  id: listWebApps(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listWebApps(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listWebApps(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all apps associated with an App Service plan.
  syntax:
    content: public abstract PagedIterable<SiteInner> listWebApps(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.SiteInner>
      description: collection of App Service apps.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listWebApps(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listWebApps(String resourceGroupName, String name, String skipToken, String filter, String top, Context context)
  nameWithType: AppServicePlansClient.listWebApps(String resourceGroupName, String name, String skipToken, String filter, String top, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps(String resourceGroupName, String name, String skipToken, String filter, String top, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all apps associated with an App Service plan.
  syntax:
    content: public abstract PagedIterable<SiteInner> listWebApps(String resourceGroupName, String name, String skipToken, String filter, String top, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: skipToken
      type: java.lang.String
      description: >-
        Skip to a web app in the list of webapps associated with app service plan. If specified, the
             resulting list will contain web apps starting from (including) the skipToken. Otherwise, the resulting list
             contains web apps from the start of the list.
    - id: filter
      type: java.lang.String
      description: 'Supported filter: $filter=state eq running. Returns only web apps that are currently running.'
    - id: top
      type: java.lang.String
      description: List page size. If specified, results are paged.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.SiteInner>
      description: collection of App Service apps.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync(java.lang.String,java.lang.String)
  id: listWebAppsAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listWebAppsAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.listWebAppsAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all apps associated with an App Service plan.
  syntax:
    content: public abstract PagedFlux<SiteInner> listWebAppsAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.SiteInner>
      description: collection of App Service apps.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listWebAppsAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listWebAppsAsync(String resourceGroupName, String name, String skipToken, String filter, String top)
  nameWithType: AppServicePlansClient.listWebAppsAsync(String resourceGroupName, String name, String skipToken, String filter, String top)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync(String resourceGroupName, String name, String skipToken, String filter, String top)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all apps associated with an App Service plan.
  syntax:
    content: public abstract PagedFlux<SiteInner> listWebAppsAsync(String resourceGroupName, String name, String skipToken, String filter, String top)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: skipToken
      type: java.lang.String
      description: >-
        Skip to a web app in the list of webapps associated with app service plan. If specified, the
             resulting list will contain web apps starting from (including) the skipToken. Otherwise, the resulting list
             contains web apps from the start of the list.
    - id: filter
      type: java.lang.String
      description: 'Supported filter: $filter=state eq running. Returns only web apps that are currently running.'
    - id: top
      type: java.lang.String
      description: List page size. If specified, results are paged.
    return:
      type: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.SiteInner>
      description: collection of App Service apps.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listWebAppsByHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all apps that use a Hybrid Connection in an App Service Plan.
  syntax:
    content: public abstract PagedIterable<String> listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Hybrid Connection namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Hybrid Connection relay.
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: collection of resources.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: listWebAppsByHybridConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  nameWithType: AppServicePlansClient.listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all apps that use a Hybrid Connection in an App Service Plan.
  syntax:
    content: public abstract PagedIterable<String> listWebAppsByHybridConnection(String resourceGroupName, String name, String namespaceName, String relayName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Hybrid Connection namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Hybrid Connection relay.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.PagedIterable<java.lang.String>
      description: collection of resources.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  id: listWebAppsByHybridConnectionAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: listWebAppsByHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  nameWithType: AppServicePlansClient.listWebAppsByHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnectionAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Get all apps that use a Hybrid Connection in an App Service Plan.
  syntax:
    content: public abstract PagedFlux<String> listWebAppsByHybridConnectionAsync(String resourceGroupName, String name, String namespaceName, String relayName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: namespaceName
      type: java.lang.String
      description: Name of the Hybrid Connection namespace.
    - id: relayName
      type: java.lang.String
      description: Name of the Hybrid Connection relay.
    return:
      type: com.azure.core.http.rest.PagedFlux<java.lang.String>
      description: collection of resources.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorker(java.lang.String,java.lang.String,java.lang.String)
  id: rebootWorker(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: rebootWorker(String resourceGroupName, String name, String workerName)
  nameWithType: AppServicePlansClient.rebootWorker(String resourceGroupName, String name, String workerName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorker(String resourceGroupName, String name, String workerName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorker*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Reboot a worker machine in an App Service plan.
  syntax:
    content: public abstract void rebootWorker(String resourceGroupName, String name, String workerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: workerName
      type: java.lang.String
      description: Name of worker machine, which typically starts with RD.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerAsync(java.lang.String,java.lang.String,java.lang.String)
  id: rebootWorkerAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: rebootWorkerAsync(String resourceGroupName, String name, String workerName)
  nameWithType: AppServicePlansClient.rebootWorkerAsync(String resourceGroupName, String name, String workerName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerAsync(String resourceGroupName, String name, String workerName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Reboot a worker machine in an App Service plan.
  syntax:
    content: public abstract Mono<Void> rebootWorkerAsync(String resourceGroupName, String name, String workerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: workerName
      type: java.lang.String
      description: Name of worker machine, which typically starts with RD.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  id: rebootWorkerWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: rebootWorkerWithResponse(String resourceGroupName, String name, String workerName, Context context)
  nameWithType: AppServicePlansClient.rebootWorkerWithResponse(String resourceGroupName, String name, String workerName, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponse(String resourceGroupName, String name, String workerName, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Reboot a worker machine in an App Service plan.
  syntax:
    content: public abstract Response<Void> rebootWorkerWithResponse(String resourceGroupName, String name, String workerName, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: workerName
      type: java.lang.String
      description: Name of worker machine, which typically starts with RD.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  id: rebootWorkerWithResponseAsync(java.lang.String,java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: rebootWorkerWithResponseAsync(String resourceGroupName, String name, String workerName)
  nameWithType: AppServicePlansClient.rebootWorkerWithResponseAsync(String resourceGroupName, String name, String workerName)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponseAsync(String resourceGroupName, String name, String workerName)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Reboot a worker machine in an App Service plan.
  syntax:
    content: public abstract Mono<Response<Void>> rebootWorkerWithResponseAsync(String resourceGroupName, String name, String workerName)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: workerName
      type: java.lang.String
      description: Name of worker machine, which typically starts with RD.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebApps(java.lang.String,java.lang.String)
  id: restartWebApps(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: restartWebApps(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.restartWebApps(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebApps(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebApps*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Restart all apps in an App Service plan.
  syntax:
    content: public abstract void restartWebApps(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync(java.lang.String,java.lang.String)
  id: restartWebAppsAsync(java.lang.String,java.lang.String)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: restartWebAppsAsync(String resourceGroupName, String name)
  nameWithType: AppServicePlansClient.restartWebAppsAsync(String resourceGroupName, String name)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync(String resourceGroupName, String name)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Restart all apps in an App Service plan.
  syntax:
    content: public abstract Mono<Void> restartWebAppsAsync(String resourceGroupName, String name)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync(java.lang.String,java.lang.String,java.lang.Boolean)
  id: restartWebAppsAsync(java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: restartWebAppsAsync(String resourceGroupName, String name, Boolean softRestart)
  nameWithType: AppServicePlansClient.restartWebAppsAsync(String resourceGroupName, String name, Boolean softRestart)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync(String resourceGroupName, String name, Boolean softRestart)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Restart all apps in an App Service plan.
  syntax:
    content: public abstract Mono<Void> restartWebAppsAsync(String resourceGroupName, String name, Boolean softRestart)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: softRestart
      type: java.lang.Boolean
      description: >-
        Specify &lt;code&gt;true&lt;/code&gt; to perform a soft restart, applies the configuration
             settings and restarts the apps if necessary. The default is &lt;code&gt;false&lt;/code&gt;, which always
             restarts and reprovisions the apps.
    return:
      type: reactor.core.publisher.Mono<java.lang.Void>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponse(java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  id: restartWebAppsWithResponse(java.lang.String,java.lang.String,java.lang.Boolean,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: restartWebAppsWithResponse(String resourceGroupName, String name, Boolean softRestart, Context context)
  nameWithType: AppServicePlansClient.restartWebAppsWithResponse(String resourceGroupName, String name, Boolean softRestart, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponse(String resourceGroupName, String name, Boolean softRestart, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Restart all apps in an App Service plan.
  syntax:
    content: public abstract Response<Void> restartWebAppsWithResponse(String resourceGroupName, String name, Boolean softRestart, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: softRestart
      type: java.lang.Boolean
      description: >-
        Specify &lt;code&gt;true&lt;/code&gt; to perform a soft restart, applies the configuration
             settings and restarts the apps if necessary. The default is &lt;code&gt;false&lt;/code&gt;, which always
             restarts and reprovisions the apps.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<java.lang.Void>
      description: the response.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponseAsync(java.lang.String,java.lang.String,java.lang.Boolean)
  id: restartWebAppsWithResponseAsync(java.lang.String,java.lang.String,java.lang.Boolean)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: restartWebAppsWithResponseAsync(String resourceGroupName, String name, Boolean softRestart)
  nameWithType: AppServicePlansClient.restartWebAppsWithResponseAsync(String resourceGroupName, String name, Boolean softRestart)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponseAsync(String resourceGroupName, String name, Boolean softRestart)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Restart all apps in an App Service plan.
  syntax:
    content: public abstract Mono<Response<Void>> restartWebAppsWithResponseAsync(String resourceGroupName, String name, Boolean softRestart)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: softRestart
      type: java.lang.Boolean
      description: >-
        Specify &lt;code&gt;true&lt;/code&gt; to perform a soft restart, applies the configuration
             settings and restarts the apps if necessary. The default is &lt;code&gt;false&lt;/code&gt;, which always
             restarts and reprovisions the apps.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
      description: the completion.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.update(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  id: update(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: update(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  nameWithType: AppServicePlansClient.update(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.update(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.update*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract AppServicePlanInner update(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource
      description: ARM resource for a app service plan.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  id: updateAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  nameWithType: AppServicePlansClient.updateAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract Mono<AppServicePlanInner> updateAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource
      description: ARM resource for a app service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGateway(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  id: updateVnetGateway(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  nameWithType: AppServicePlansClient.updateVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGateway*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Update a Virtual Network gateway.
  syntax:
    content: public abstract VnetGatewayInner updateVnetGateway(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    - id: connectionEnvelope
      type: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
      description: >-
        The Virtual Network gateway contract. This is used to give the Virtual Network gateway
             access to the VPN package.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  id: updateVnetGatewayAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  nameWithType: AppServicePlansClient.updateVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Update a Virtual Network gateway.
  syntax:
    content: public abstract Mono<VnetGatewayInner> updateVnetGatewayAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    - id: connectionEnvelope
      type: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
      description: >-
        The Virtual Network gateway contract. This is used to give the Virtual Network gateway
             access to the VPN package.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner,com.azure.core.util.Context)
  id: updateVnetGatewayWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope, Context context)
  nameWithType: AppServicePlansClient.updateVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Update a Virtual Network gateway.
  syntax:
    content: public abstract Response<VnetGatewayInner> updateVnetGatewayWithResponse(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    - id: connectionEnvelope
      type: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
      description: >-
        The Virtual Network gateway contract. This is used to give the Virtual Network gateway
             access to the VPN package.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  id: updateVnetGatewayWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  nameWithType: AppServicePlansClient.updateVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Update a Virtual Network gateway.
  syntax:
    content: public abstract Mono<Response<VnetGatewayInner>> updateVnetGatewayWithResponseAsync(String resourceGroupName, String name, String vnetName, String gatewayName, VnetGatewayInner connectionEnvelope)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: gatewayName
      type: java.lang.String
      description: Name of the gateway. Only the 'primary' gateway is supported.
    - id: connectionEnvelope
      type: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
      description: >-
        The Virtual Network gateway contract. This is used to give the Virtual Network gateway
             access to the VPN package.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>>
      description: the Virtual Network gateway contract.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  id: updateVnetRoute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  nameWithType: AppServicePlansClient.updateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRoute*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract VnetRouteInner updateVnetRoute(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    return:
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  id: updateVnetRouteAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  nameWithType: AppServicePlansClient.updateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<VnetRouteInner> updateVnetRouteAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    return:
      type: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner,com.azure.core.util.Context)
  id: updateVnetRouteWithResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
  nameWithType: AppServicePlansClient.updateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Response<VnetRouteInner> updateVnetRouteWithResponse(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  id: updateVnetRouteWithResponseAsync(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  nameWithType: AppServicePlansClient.updateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Create or update a Virtual Network route in an App Service plan.
  syntax:
    content: public abstract Mono<Response<VnetRouteInner>> updateVnetRouteWithResponseAsync(String resourceGroupName, String name, String vnetName, String routeName, VnetRouteInner route)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: vnetName
      type: java.lang.String
      description: Name of the Virtual Network.
    - id: routeName
      type: java.lang.String
      description: Name of the Virtual Network route.
    - id: route
      type: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
      description: Virtual Network route contract used to pass routing information for a Virtual Network.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
      description: virtual Network route contract used to pass routing information for a Virtual Network.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource,com.azure.core.util.Context)
  id: updateWithResponse(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource,com.azure.core.util.Context)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateWithResponse(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan, Context context)
  nameWithType: AppServicePlansClient.updateWithResponse(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan, Context context)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponse(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan, Context context)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponse*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract Response<AppServicePlanInner> updateWithResponse(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan, Context context)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource
      description: ARM resource for a app service plan.
    - id: context
      type: com.azure.core.util.Context
      description: The context to associate with this operation.
    return:
      type: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
      description: app Service plan.
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  id: updateWithResponseAsync(java.lang.String,java.lang.String,com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource)
  artifact: com.azure.resourcemanager:azure-resourcemanager-appservice:2.1.0
  parent: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient
  langs:
  - java
  name: updateWithResponseAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  nameWithType: AppServicePlansClient.updateWithResponseAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponseAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
  overload: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponseAsync*
  type: Method
  package: com.azure.resourcemanager.appservice.fluent
  summary: Description for Creates or updates an App Service Plan.
  syntax:
    content: public abstract Mono<Response<AppServicePlanInner>> updateWithResponseAsync(String resourceGroupName, String name, AppServicePlanPatchResource appServicePlan)
    parameters:
    - id: resourceGroupName
      type: java.lang.String
      description: Name of the resource group to which the resource belongs.
    - id: name
      type: java.lang.String
      description: Name of the App Service plan.
    - id: appServicePlan
      type: com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource
      description: ARM resource for a app service plan.
    return:
      type: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>>
      description: app Service plan.
references:
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync*
  name: listAsync
  nameWithType: AppServicePlansClient.listAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.util.Context
  spec.java:
  - uid: com.azure.core.util.Context
    name: Context
    fullName: com.azure.core.util.Context
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list*
  name: list
  nameWithType: AppServicePlansClient.list
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.list
  package: com.azure.resourcemanager.appservice.fluent
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroupAsync*
  name: listByResourceGroupAsync
  nameWithType: AppServicePlansClient.listByResourceGroupAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroupAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup*
  name: listByResourceGroup
  nameWithType: AppServicePlansClient.listByResourceGroup
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listByResourceGroup
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponseAsync*
  name: getByResourceGroupWithResponseAsync
  nameWithType: AppServicePlansClient.getByResourceGroupWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupAsync*
  name: getByResourceGroupAsync
  nameWithType: AppServicePlansClient.getByResourceGroupAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  name: AppServicePlanInner
  nameWithType: AppServicePlanInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroup*
  name: getByResourceGroup
  nameWithType: AppServicePlansClient.getByResourceGroup
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroup
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponse*
  name: getByResourceGroupWithResponse
  nameWithType: AppServicePlansClient.getByResourceGroupWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getByResourceGroupWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<reactor.core.publisher.Flux<java.nio.ByteBuffer>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateWithResponseAsync*
  name: createOrUpdateWithResponseAsync
  nameWithType: AppServicePlansClient.createOrUpdateWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.util.polling.PollerFlux<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  spec.java:
  - uid: com.azure.core.util.polling.PollerFlux
    name: PollerFlux
    fullName: com.azure.core.util.polling.PollerFlux
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdateAsync*
  name: beginCreateOrUpdateAsync
  nameWithType: AppServicePlansClient.beginCreateOrUpdateAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdateAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.util.polling.SyncPoller<com.azure.core.management.polling.PollResult<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  spec.java:
  - uid: com.azure.core.util.polling.SyncPoller
    name: SyncPoller
    fullName: com.azure.core.util.polling.SyncPoller
  - name: <
    fullName: <
  - uid: com.azure.core.management.polling.PollResult
    name: PollResult
    fullName: com.azure.core.management.polling.PollResult
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
  - name: ','
    fullName: ','
  - uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
    name: AppServicePlanInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate*
  name: beginCreateOrUpdate
  nameWithType: AppServicePlansClient.beginCreateOrUpdate
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.beginCreateOrUpdate
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateAsync*
  name: createOrUpdateAsync
  nameWithType: AppServicePlansClient.createOrUpdateAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate*
  name: createOrUpdate
  nameWithType: AppServicePlansClient.createOrUpdate
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdate
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Void>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponseAsync*
  name: deleteWithResponseAsync
  nameWithType: AppServicePlansClient.deleteWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<java.lang.Void>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteAsync*
  name: deleteAsync
  nameWithType: AppServicePlansClient.deleteAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.delete*
  name: delete
  nameWithType: AppServicePlansClient.delete
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.delete
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Void>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Void
    name: Void
    fullName: java.lang.Void
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponse*
  name: deleteWithResponse
  nameWithType: AppServicePlansClient.deleteWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource
  name: AppServicePlanPatchResource
  nameWithType: AppServicePlanPatchResource
  fullName: com.azure.resourcemanager.appservice.models.AppServicePlanPatchResource
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponseAsync*
  name: updateWithResponseAsync
  nameWithType: AppServicePlansClient.updateWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateAsync*
  name: updateAsync
  nameWithType: AppServicePlansClient.updateAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.update*
  name: update
  nameWithType: AppServicePlansClient.update
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.update
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponse*
  name: updateWithResponse
  nameWithType: AppServicePlansClient.updateWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
    name: CapabilityInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponseAsync*
  name: listCapabilitiesWithResponseAsync
  nameWithType: AppServicePlansClient.listCapabilitiesWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
    name: CapabilityInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesAsync*
  name: listCapabilitiesAsync
  nameWithType: AppServicePlansClient.listCapabilitiesAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
    name: CapabilityInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilities*
  name: listCapabilities
  nameWithType: AppServicePlansClient.listCapabilities
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilities
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.CapabilityInner>>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
    name: CapabilityInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponse*
  name: listCapabilitiesWithResponse
  nameWithType: AppServicePlansClient.listCapabilitiesWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listCapabilitiesWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
    name: HybridConnectionInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponseAsync*
  name: getHybridConnectionWithResponseAsync
  nameWithType: AppServicePlansClient.getHybridConnectionWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
    name: HybridConnectionInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionAsync*
  name: getHybridConnectionAsync
  nameWithType: AppServicePlansClient.getHybridConnectionAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
  name: HybridConnectionInner
  nameWithType: HybridConnectionInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnection*
  name: getHybridConnection
  nameWithType: AppServicePlansClient.getHybridConnection
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnection
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
    name: HybridConnectionInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponse*
  name: getHybridConnectionWithResponse
  nameWithType: AppServicePlansClient.getHybridConnectionWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponseAsync*
  name: deleteHybridConnectionWithResponseAsync
  nameWithType: AppServicePlansClient.deleteHybridConnectionWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionAsync*
  name: deleteHybridConnectionAsync
  nameWithType: AppServicePlansClient.deleteHybridConnectionAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnection*
  name: deleteHybridConnection
  nameWithType: AppServicePlansClient.deleteHybridConnection
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnection
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponse*
  name: deleteHybridConnectionWithResponse
  nameWithType: AppServicePlansClient.deleteHybridConnectionWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteHybridConnectionWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
    name: HybridConnectionKeyInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponseAsync*
  name: listHybridConnectionKeysWithResponseAsync
  nameWithType: AppServicePlansClient.listHybridConnectionKeysWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
    name: HybridConnectionKeyInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysAsync*
  name: listHybridConnectionKeysAsync
  nameWithType: AppServicePlansClient.listHybridConnectionKeysAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
  name: HybridConnectionKeyInner
  nameWithType: HybridConnectionKeyInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeys*
  name: listHybridConnectionKeys
  nameWithType: AppServicePlansClient.listHybridConnectionKeys
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeys
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
    name: HybridConnectionKeyInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionKeyInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponse*
  name: listHybridConnectionKeysWithResponse
  nameWithType: AppServicePlansClient.listHybridConnectionKeysWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionKeysWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedFlux<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnectionAsync*
  name: listWebAppsByHybridConnectionAsync
  nameWithType: AppServicePlansClient.listWebAppsByHybridConnectionAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnectionAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedIterable<java.lang.String>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection*
  name: listWebAppsByHybridConnection
  nameWithType: AppServicePlansClient.listWebAppsByHybridConnection
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsByHybridConnection
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
    name: HybridConnectionLimitsInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync*
  name: getHybridConnectionPlanLimitWithResponseAsync
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
    name: HybridConnectionLimitsInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitAsync*
  name: getHybridConnectionPlanLimitAsync
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimitAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
  name: HybridConnectionLimitsInner
  nameWithType: HybridConnectionLimitsInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimit*
  name: getHybridConnectionPlanLimit
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimit
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimit
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
    name: HybridConnectionLimitsInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionLimitsInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponse*
  name: getHybridConnectionPlanLimitWithResponse
  nameWithType: AppServicePlansClient.getHybridConnectionPlanLimitWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getHybridConnectionPlanLimitWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
    name: HybridConnectionInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionsAsync*
  name: listHybridConnectionsAsync
  nameWithType: AppServicePlansClient.listHybridConnectionsAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnectionsAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
    name: HybridConnectionInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.HybridConnectionInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections*
  name: listHybridConnections
  nameWithType: AppServicePlansClient.listHybridConnections
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listHybridConnections
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponseAsync*
  name: restartWebAppsWithResponseAsync
  nameWithType: AppServicePlansClient.restartWebAppsWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync*
  name: restartWebAppsAsync
  nameWithType: AppServicePlansClient.restartWebAppsAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebApps*
  name: restartWebApps
  nameWithType: AppServicePlansClient.restartWebApps
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebApps
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponse*
  name: restartWebAppsWithResponse
  nameWithType: AppServicePlansClient.restartWebAppsWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.restartWebAppsWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.SiteInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.SiteInner
    name: SiteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.SiteInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync*
  name: listWebAppsAsync
  nameWithType: AppServicePlansClient.listWebAppsAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebAppsAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.SiteInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.SiteInner
    name: SiteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.SiteInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps*
  name: listWebApps
  nameWithType: AppServicePlansClient.listWebApps
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listWebApps
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.lang.Object>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponseAsync*
  name: getServerFarmSkusWithResponseAsync
  nameWithType: AppServicePlansClient.getServerFarmSkusWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<java.lang.Object>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusAsync*
  name: getServerFarmSkusAsync
  nameWithType: AppServicePlansClient.getServerFarmSkusAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: java.lang.Object
  spec.java:
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkus*
  name: getServerFarmSkus
  nameWithType: AppServicePlansClient.getServerFarmSkus
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkus
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<java.lang.Object>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.lang.Object
    name: Object
    fullName: java.lang.Object
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponse*
  name: getServerFarmSkusWithResponse
  nameWithType: AppServicePlansClient.getServerFarmSkusWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getServerFarmSkusWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedFlux
    name: PagedFlux
    fullName: com.azure.core.http.rest.PagedFlux
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner
    name: CsmUsageQuotaInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync*
  name: listUsagesAsync
  nameWithType: AppServicePlansClient.listUsagesAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsagesAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.PagedIterable<com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner>
  spec.java:
  - uid: com.azure.core.http.rest.PagedIterable
    name: PagedIterable
    fullName: com.azure.core.http.rest.PagedIterable
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner
    name: CsmUsageQuotaInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages*
  name: listUsages
  nameWithType: AppServicePlansClient.listUsages
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listUsages
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
    name: VnetInfoInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponseAsync*
  name: listVnetsWithResponseAsync
  nameWithType: AppServicePlansClient.listVnetsWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
    name: VnetInfoInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsAsync*
  name: listVnetsAsync
  nameWithType: AppServicePlansClient.listVnetsAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
    name: VnetInfoInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnets*
  name: listVnets
  nameWithType: AppServicePlansClient.listVnets
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnets
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
    name: VnetInfoInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponse*
  name: listVnetsWithResponse
  nameWithType: AppServicePlansClient.listVnetsWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listVnetsWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
    name: VnetInfoInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponseAsync*
  name: getVnetFromServerFarmWithResponseAsync
  nameWithType: AppServicePlansClient.getVnetFromServerFarmWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
    name: VnetInfoInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmAsync*
  name: getVnetFromServerFarmAsync
  nameWithType: AppServicePlansClient.getVnetFromServerFarmAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  name: VnetInfoInner
  nameWithType: VnetInfoInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarm*
  name: getVnetFromServerFarm
  nameWithType: AppServicePlansClient.getVnetFromServerFarm
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarm
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
    name: VnetInfoInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetInfoInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponse*
  name: getVnetFromServerFarmWithResponse
  nameWithType: AppServicePlansClient.getVnetFromServerFarmWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetFromServerFarmWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
    name: VnetGatewayInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponseAsync*
  name: getVnetGatewayWithResponseAsync
  nameWithType: AppServicePlansClient.getVnetGatewayWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
    name: VnetGatewayInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayAsync*
  name: getVnetGatewayAsync
  nameWithType: AppServicePlansClient.getVnetGatewayAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
  name: VnetGatewayInner
  nameWithType: VnetGatewayInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGateway*
  name: getVnetGateway
  nameWithType: AppServicePlansClient.getVnetGateway
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGateway
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
    name: VnetGatewayInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetGatewayInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponse*
  name: getVnetGatewayWithResponse
  nameWithType: AppServicePlansClient.getVnetGatewayWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getVnetGatewayWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponseAsync*
  name: updateVnetGatewayWithResponseAsync
  nameWithType: AppServicePlansClient.updateVnetGatewayWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayAsync*
  name: updateVnetGatewayAsync
  nameWithType: AppServicePlansClient.updateVnetGatewayAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGateway*
  name: updateVnetGateway
  nameWithType: AppServicePlansClient.updateVnetGateway
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGateway
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponse*
  name: updateVnetGatewayWithResponse
  nameWithType: AppServicePlansClient.updateVnetGatewayWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetGatewayWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
    name: VnetRouteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponseAsync*
  name: listRoutesForVnetWithResponseAsync
  nameWithType: AppServicePlansClient.listRoutesForVnetWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
    name: VnetRouteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetAsync*
  name: listRoutesForVnetAsync
  nameWithType: AppServicePlansClient.listRoutesForVnetAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
    name: VnetRouteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnet*
  name: listRoutesForVnet
  nameWithType: AppServicePlansClient.listRoutesForVnet
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnet
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<java.util.List<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
    name: VnetRouteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponse*
  name: listRoutesForVnetWithResponse
  nameWithType: AppServicePlansClient.listRoutesForVnetWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.listRoutesForVnetWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponseAsync*
  name: getRouteForVnetWithResponseAsync
  nameWithType: AppServicePlansClient.getRouteForVnetWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetAsync*
  name: getRouteForVnetAsync
  nameWithType: AppServicePlansClient.getRouteForVnetAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnet*
  name: getRouteForVnet
  nameWithType: AppServicePlansClient.getRouteForVnet
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnet
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponse*
  name: getRouteForVnetWithResponse
  nameWithType: AppServicePlansClient.getRouteForVnetWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.getRouteForVnetWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  name: VnetRouteInner
  nameWithType: VnetRouteInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
- uid: reactor.core.publisher.Mono<com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
    name: VnetRouteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync*
  name: createOrUpdateVnetRouteWithResponseAsync
  nameWithType: AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: reactor.core.publisher.Mono<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
  spec.java:
  - uid: reactor.core.publisher.Mono
    name: Mono
    fullName: reactor.core.publisher.Mono
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
    name: VnetRouteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteAsync*
  name: createOrUpdateVnetRouteAsync
  nameWithType: AppServicePlansClient.createOrUpdateVnetRouteAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRoute*
  name: createOrUpdateVnetRoute
  nameWithType: AppServicePlansClient.createOrUpdateVnetRoute
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRoute
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.core.http.rest.Response<com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner>
  spec.java:
  - uid: com.azure.core.http.rest.Response
    name: Response
    fullName: com.azure.core.http.rest.Response
  - name: <
    fullName: <
  - uid: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
    name: VnetRouteInner
    fullName: com.azure.resourcemanager.appservice.fluent.models.VnetRouteInner
  - name: '>'
    fullName: '>'
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponse*
  name: createOrUpdateVnetRouteWithResponse
  nameWithType: AppServicePlansClient.createOrUpdateVnetRouteWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.createOrUpdateVnetRouteWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponseAsync*
  name: deleteVnetRouteWithResponseAsync
  nameWithType: AppServicePlansClient.deleteVnetRouteWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteAsync*
  name: deleteVnetRouteAsync
  nameWithType: AppServicePlansClient.deleteVnetRouteAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRoute*
  name: deleteVnetRoute
  nameWithType: AppServicePlansClient.deleteVnetRoute
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRoute
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponse*
  name: deleteVnetRouteWithResponse
  nameWithType: AppServicePlansClient.deleteVnetRouteWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.deleteVnetRouteWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponseAsync*
  name: updateVnetRouteWithResponseAsync
  nameWithType: AppServicePlansClient.updateVnetRouteWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteAsync*
  name: updateVnetRouteAsync
  nameWithType: AppServicePlansClient.updateVnetRouteAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRoute*
  name: updateVnetRoute
  nameWithType: AppServicePlansClient.updateVnetRoute
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRoute
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponse*
  name: updateVnetRouteWithResponse
  nameWithType: AppServicePlansClient.updateVnetRouteWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.updateVnetRouteWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponseAsync*
  name: rebootWorkerWithResponseAsync
  nameWithType: AppServicePlansClient.rebootWorkerWithResponseAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponseAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerAsync*
  name: rebootWorkerAsync
  nameWithType: AppServicePlansClient.rebootWorkerAsync
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerAsync
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorker*
  name: rebootWorker
  nameWithType: AppServicePlansClient.rebootWorker
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorker
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponse*
  name: rebootWorkerWithResponse
  nameWithType: AppServicePlansClient.rebootWorkerWithResponse
  fullName: com.azure.resourcemanager.appservice.fluent.AppServicePlansClient.rebootWorkerWithResponse
  package: com.azure.resourcemanager.appservice.fluent
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
  name: InnerSupportsDelete<Void>
  nameWithType: InnerSupportsDelete<Void>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete<java.lang.Void>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  name: InnerSupportsListing<AppServicePlanInner>
  nameWithType: InnerSupportsListing<AppServicePlanInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
  name: InnerSupportsGet<AppServicePlanInner>
  nameWithType: InnerSupportsGet<AppServicePlanInner>
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet<com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>
- uid: com.azure.core.http.rest.PagedFlux
  name: PagedFlux
  nameWithType: PagedFlux
  fullName: com.azure.core.http.rest.PagedFlux
- uid: com.azure.core.http.rest.PagedIterable
  name: PagedIterable
  nameWithType: PagedIterable
  fullName: com.azure.core.http.rest.PagedIterable
- uid: reactor.core.publisher.Mono
  name: Mono
  nameWithType: Mono
  fullName: reactor.core.publisher.Mono
- uid: com.azure.core.http.rest.Response
  name: Response
  nameWithType: Response
  fullName: com.azure.core.http.rest.Response
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
  name: AppServicePlanInner>,AppServicePlanInner
  nameWithType: AppServicePlanInner>,AppServicePlanInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner>,com.azure.resourcemanager.appservice.fluent.models.AppServicePlanInner
- uid: com.azure.core.management.polling.PollResult
  name: PollResult
  nameWithType: PollResult
  fullName: com.azure.core.management.polling.PollResult
- uid: com.azure.core.util.polling.PollerFlux
  name: PollerFlux
  nameWithType: PollerFlux
  fullName: com.azure.core.util.polling.PollerFlux
- uid: com.azure.core.util.polling.SyncPoller
  name: SyncPoller
  nameWithType: SyncPoller
  fullName: com.azure.core.util.polling.SyncPoller
- uid: java.lang.Void
  name: Void
  nameWithType: Void
  fullName: java.lang.Void
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
  name: CapabilityInner
  nameWithType: CapabilityInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.CapabilityInner
- uid: com.azure.resourcemanager.appservice.fluent.models.SiteInner
  name: SiteInner
  nameWithType: SiteInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.SiteInner
- uid: com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner
  name: CsmUsageQuotaInner
  nameWithType: CsmUsageQuotaInner
  fullName: com.azure.resourcemanager.appservice.fluent.models.CsmUsageQuotaInner
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
  name: InnerSupportsDelete
  nameWithType: InnerSupportsDelete
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsDelete
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
  name: InnerSupportsListing
  nameWithType: InnerSupportsListing
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsListing
- uid: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
  name: InnerSupportsGet
  nameWithType: InnerSupportsGet
  fullName: com.azure.resourcemanager.resources.fluentcore.collection.InnerSupportsGet
