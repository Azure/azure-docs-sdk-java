### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner"
fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner"
name: "ExpressRouteCircuitInner"
nameWithType: "ExpressRouteCircuitInner"
summary: "ExpressRouteCircuit resource."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.ProxyResource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.core.management.Resource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.core.management.ProxyResource.id()"
- "com.azure.core.management.ProxyResource.name()"
- "com.azure.core.management.ProxyResource.type()"
- "com.azure.core.management.Resource.location()"
- "com.azure.core.management.Resource.tags()"
- "com.azure.core.management.Resource.withLocation(java.lang.String)"
- "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ExpressRouteCircuitInner extends Resource"
constructors:
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.ExpressRouteCircuitInner()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.ExpressRouteCircuitInner()"
  name: "ExpressRouteCircuitInner()"
  nameWithType: "ExpressRouteCircuitInner.ExpressRouteCircuitInner()"
  syntax: "public ExpressRouteCircuitInner()"
methods:
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.allowClassicOperations()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.allowClassicOperations()"
  name: "allowClassicOperations()"
  nameWithType: "ExpressRouteCircuitInner.allowClassicOperations()"
  summary: "Get the allowClassicOperations property: Allow classic operations."
  syntax: "public Boolean allowClassicOperations()"
  returns:
    description: "the allowClassicOperations value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.authorizations()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.authorizations()"
  name: "authorizations()"
  nameWithType: "ExpressRouteCircuitInner.authorizations()"
  summary: "Get the authorizations property: The list of authorizations."
  syntax: "public List<ExpressRouteCircuitAuthorizationInner> authorizations()"
  returns:
    description: "the authorizations value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitAuthorizationInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitAuthorizationInner&text=ExpressRouteCircuitAuthorizationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.bandwidthInGbps()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.bandwidthInGbps()"
  name: "bandwidthInGbps()"
  nameWithType: "ExpressRouteCircuitInner.bandwidthInGbps()"
  summary: "Get the bandwidthInGbps property: The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource."
  syntax: "public Float bandwidthInGbps()"
  returns:
    description: "the bandwidthInGbps value."
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.circuitProvisioningState()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.circuitProvisioningState()"
  name: "circuitProvisioningState()"
  nameWithType: "ExpressRouteCircuitInner.circuitProvisioningState()"
  summary: "Get the circuitProvisioningState property: The CircuitProvisioningState state of the resource."
  syntax: "public String circuitProvisioningState()"
  returns:
    description: "the circuitProvisioningState value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.etag()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.etag()"
  name: "etag()"
  nameWithType: "ExpressRouteCircuitInner.etag()"
  summary: "Get the etag property: A unique read-only string that changes whenever the resource is updated."
  syntax: "public String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.expressRoutePort()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.expressRoutePort()"
  name: "expressRoutePort()"
  nameWithType: "ExpressRouteCircuitInner.expressRoutePort()"
  summary: "Get the expressRoutePort property: The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource."
  syntax: "public SubResource expressRoutePort()"
  returns:
    description: "the expressRoutePort value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.gatewayManagerEtag()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.gatewayManagerEtag()"
  name: "gatewayManagerEtag()"
  nameWithType: "ExpressRouteCircuitInner.gatewayManagerEtag()"
  summary: "Get the gatewayManagerEtag property: The GatewayManager Etag."
  syntax: "public String gatewayManagerEtag()"
  returns:
    description: "the gatewayManagerEtag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.globalReachEnabled()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.globalReachEnabled()"
  name: "globalReachEnabled()"
  nameWithType: "ExpressRouteCircuitInner.globalReachEnabled()"
  summary: "Get the globalReachEnabled property: Flag denoting global reach status."
  syntax: "public Boolean globalReachEnabled()"
  returns:
    description: "the globalReachEnabled value."
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.id()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.id()"
  name: "id()"
  nameWithType: "ExpressRouteCircuitInner.id()"
  summary: "Get the id property: Resource ID."
  overridden: "com.azure.core.management.ProxyResource.id()"
  syntax: "public String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.peerings()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.peerings()"
  name: "peerings()"
  nameWithType: "ExpressRouteCircuitInner.peerings()"
  summary: "Get the peerings property: The list of peerings."
  syntax: "public List<ExpressRouteCircuitPeeringInner> peerings()"
  returns:
    description: "the peerings value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.provisioningState()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ExpressRouteCircuitInner.provisioningState()"
  summary: "Get the provisioningState property: The provisioning state of the express route circuit resource."
  syntax: "public ProvisioningState provisioningState()"
  returns:
    description: "the provisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ProvisioningState?alt=com.azure.resourcemanager.network.models.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceKey()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceKey()"
  name: "serviceKey()"
  nameWithType: "ExpressRouteCircuitInner.serviceKey()"
  summary: "Get the serviceKey property: The ServiceKey."
  syntax: "public String serviceKey()"
  returns:
    description: "the serviceKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceProviderNotes()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceProviderNotes()"
  name: "serviceProviderNotes()"
  nameWithType: "ExpressRouteCircuitInner.serviceProviderNotes()"
  summary: "Get the serviceProviderNotes property: The ServiceProviderNotes."
  syntax: "public String serviceProviderNotes()"
  returns:
    description: "the serviceProviderNotes value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceProviderProperties()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceProviderProperties()"
  name: "serviceProviderProperties()"
  nameWithType: "ExpressRouteCircuitInner.serviceProviderProperties()"
  summary: "Get the serviceProviderProperties property: The ServiceProviderProperties."
  syntax: "public ExpressRouteCircuitServiceProviderProperties serviceProviderProperties()"
  returns:
    description: "the serviceProviderProperties value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ExpressRouteCircuitServiceProviderProperties?alt=com.azure.resourcemanager.network.models.ExpressRouteCircuitServiceProviderProperties&text=ExpressRouteCircuitServiceProviderProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceProviderProvisioningState()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.serviceProviderProvisioningState()"
  name: "serviceProviderProvisioningState()"
  nameWithType: "ExpressRouteCircuitInner.serviceProviderProvisioningState()"
  summary: "Get the serviceProviderProvisioningState property: The ServiceProviderProvisioningState state of the resource."
  syntax: "public ServiceProviderProvisioningState serviceProviderProvisioningState()"
  returns:
    description: "the serviceProviderProvisioningState value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ServiceProviderProvisioningState?alt=com.azure.resourcemanager.network.models.ServiceProviderProvisioningState&text=ServiceProviderProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.sku()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.sku()"
  name: "sku()"
  nameWithType: "ExpressRouteCircuitInner.sku()"
  summary: "Get the sku property: The SKU."
  syntax: "public ExpressRouteCircuitSku sku()"
  returns:
    description: "the sku value."
    type: "<xref href=\"com.azure.resourcemanager.network.models.ExpressRouteCircuitSku?alt=com.azure.resourcemanager.network.models.ExpressRouteCircuitSku&text=ExpressRouteCircuitSku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.stag()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.stag()"
  name: "stag()"
  nameWithType: "ExpressRouteCircuitInner.stag()"
  summary: "Get the stag property: The identifier of the circuit traffic. Outer tag for QinQ encapsulation."
  syntax: "public Integer stag()"
  returns:
    description: "the stag value."
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.validate()"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.validate()"
  name: "validate()"
  nameWithType: "ExpressRouteCircuitInner.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withAllowClassicOperations(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withAllowClassicOperations(Boolean allowClassicOperations)"
  name: "withAllowClassicOperations(Boolean allowClassicOperations)"
  nameWithType: "ExpressRouteCircuitInner.withAllowClassicOperations(Boolean allowClassicOperations)"
  summary: "Set the allowClassicOperations property: Allow classic operations."
  parameters:
  - description: "the allowClassicOperations value to set."
    name: "allowClassicOperations"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withAllowClassicOperations(Boolean allowClassicOperations)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withAuthorizations(java.util.List<com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitAuthorizationInner>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withAuthorizations(List<ExpressRouteCircuitAuthorizationInner> authorizations)"
  name: "withAuthorizations(List<ExpressRouteCircuitAuthorizationInner> authorizations)"
  nameWithType: "ExpressRouteCircuitInner.withAuthorizations(List<ExpressRouteCircuitAuthorizationInner> authorizations)"
  summary: "Set the authorizations property: The list of authorizations."
  parameters:
  - description: "the authorizations value to set."
    name: "authorizations"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitAuthorizationInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitAuthorizationInner&text=ExpressRouteCircuitAuthorizationInner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExpressRouteCircuitInner withAuthorizations(List<ExpressRouteCircuitAuthorizationInner> authorizations)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withBandwidthInGbps(java.lang.Float)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withBandwidthInGbps(Float bandwidthInGbps)"
  name: "withBandwidthInGbps(Float bandwidthInGbps)"
  nameWithType: "ExpressRouteCircuitInner.withBandwidthInGbps(Float bandwidthInGbps)"
  summary: "Set the bandwidthInGbps property: The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource."
  parameters:
  - description: "the bandwidthInGbps value to set."
    name: "bandwidthInGbps"
    type: "<xref href=\"java.lang.Float?alt=java.lang.Float&text=Float\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withBandwidthInGbps(Float bandwidthInGbps)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withCircuitProvisioningState(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withCircuitProvisioningState(String circuitProvisioningState)"
  name: "withCircuitProvisioningState(String circuitProvisioningState)"
  nameWithType: "ExpressRouteCircuitInner.withCircuitProvisioningState(String circuitProvisioningState)"
  summary: "Set the circuitProvisioningState property: The CircuitProvisioningState state of the resource."
  parameters:
  - description: "the circuitProvisioningState value to set."
    name: "circuitProvisioningState"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withCircuitProvisioningState(String circuitProvisioningState)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withExpressRoutePort(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withExpressRoutePort(SubResource expressRoutePort)"
  name: "withExpressRoutePort(SubResource expressRoutePort)"
  nameWithType: "ExpressRouteCircuitInner.withExpressRoutePort(SubResource expressRoutePort)"
  summary: "Set the expressRoutePort property: The reference to the ExpressRoutePort resource when the circuit is provisioned on an ExpressRoutePort resource."
  parameters:
  - description: "the expressRoutePort value to set."
    name: "expressRoutePort"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withExpressRoutePort(SubResource expressRoutePort)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withGatewayManagerEtag(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withGatewayManagerEtag(String gatewayManagerEtag)"
  name: "withGatewayManagerEtag(String gatewayManagerEtag)"
  nameWithType: "ExpressRouteCircuitInner.withGatewayManagerEtag(String gatewayManagerEtag)"
  summary: "Set the gatewayManagerEtag property: The GatewayManager Etag."
  parameters:
  - description: "the gatewayManagerEtag value to set."
    name: "gatewayManagerEtag"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withGatewayManagerEtag(String gatewayManagerEtag)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withGlobalReachEnabled(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withGlobalReachEnabled(Boolean globalReachEnabled)"
  name: "withGlobalReachEnabled(Boolean globalReachEnabled)"
  nameWithType: "ExpressRouteCircuitInner.withGlobalReachEnabled(Boolean globalReachEnabled)"
  summary: "Set the globalReachEnabled property: Flag denoting global reach status."
  parameters:
  - description: "the globalReachEnabled value to set."
    name: "globalReachEnabled"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withGlobalReachEnabled(Boolean globalReachEnabled)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withId(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withId(String id)"
  name: "withId(String id)"
  nameWithType: "ExpressRouteCircuitInner.withId(String id)"
  summary: "Set the id property: Resource ID."
  parameters:
  - description: "the id value to set."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withId(String id)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withLocation(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withLocation(String location)"
  name: "withLocation(String location)"
  nameWithType: "ExpressRouteCircuitInner.withLocation(String location)"
  overridden: "com.azure.core.management.Resource.withLocation(java.lang.String)"
  parameters:
  - name: "location"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withLocation(String location)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withPeerings(java.util.List<com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  name: "withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  nameWithType: "ExpressRouteCircuitInner.withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  summary: "Set the peerings property: The list of peerings."
  parameters:
  - description: "the peerings value to set."
    name: "peerings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitPeeringInner&text=ExpressRouteCircuitPeeringInner\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExpressRouteCircuitInner withPeerings(List<ExpressRouteCircuitPeeringInner> peerings)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceKey(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceKey(String serviceKey)"
  name: "withServiceKey(String serviceKey)"
  nameWithType: "ExpressRouteCircuitInner.withServiceKey(String serviceKey)"
  summary: "Set the serviceKey property: The ServiceKey."
  parameters:
  - description: "the serviceKey value to set."
    name: "serviceKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withServiceKey(String serviceKey)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceProviderNotes(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceProviderNotes(String serviceProviderNotes)"
  name: "withServiceProviderNotes(String serviceProviderNotes)"
  nameWithType: "ExpressRouteCircuitInner.withServiceProviderNotes(String serviceProviderNotes)"
  summary: "Set the serviceProviderNotes property: The ServiceProviderNotes."
  parameters:
  - description: "the serviceProviderNotes value to set."
    name: "serviceProviderNotes"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withServiceProviderNotes(String serviceProviderNotes)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceProviderProperties(com.azure.resourcemanager.network.models.ExpressRouteCircuitServiceProviderProperties)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceProviderProperties(ExpressRouteCircuitServiceProviderProperties serviceProviderProperties)"
  name: "withServiceProviderProperties(ExpressRouteCircuitServiceProviderProperties serviceProviderProperties)"
  nameWithType: "ExpressRouteCircuitInner.withServiceProviderProperties(ExpressRouteCircuitServiceProviderProperties serviceProviderProperties)"
  summary: "Set the serviceProviderProperties property: The ServiceProviderProperties."
  parameters:
  - description: "the serviceProviderProperties value to set."
    name: "serviceProviderProperties"
    type: "<xref href=\"com.azure.resourcemanager.network.models.ExpressRouteCircuitServiceProviderProperties?alt=com.azure.resourcemanager.network.models.ExpressRouteCircuitServiceProviderProperties&text=ExpressRouteCircuitServiceProviderProperties\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withServiceProviderProperties(ExpressRouteCircuitServiceProviderProperties serviceProviderProperties)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceProviderProvisioningState(com.azure.resourcemanager.network.models.ServiceProviderProvisioningState)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withServiceProviderProvisioningState(ServiceProviderProvisioningState serviceProviderProvisioningState)"
  name: "withServiceProviderProvisioningState(ServiceProviderProvisioningState serviceProviderProvisioningState)"
  nameWithType: "ExpressRouteCircuitInner.withServiceProviderProvisioningState(ServiceProviderProvisioningState serviceProviderProvisioningState)"
  summary: "Set the serviceProviderProvisioningState property: The ServiceProviderProvisioningState state of the resource."
  parameters:
  - description: "the serviceProviderProvisioningState value to set."
    name: "serviceProviderProvisioningState"
    type: "<xref href=\"com.azure.resourcemanager.network.models.ServiceProviderProvisioningState?alt=com.azure.resourcemanager.network.models.ServiceProviderProvisioningState&text=ServiceProviderProvisioningState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withServiceProviderProvisioningState(ServiceProviderProvisioningState serviceProviderProvisioningState)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withSku(com.azure.resourcemanager.network.models.ExpressRouteCircuitSku)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withSku(ExpressRouteCircuitSku sku)"
  name: "withSku(ExpressRouteCircuitSku sku)"
  nameWithType: "ExpressRouteCircuitInner.withSku(ExpressRouteCircuitSku sku)"
  summary: "Set the sku property: The SKU."
  parameters:
  - description: "the sku value to set."
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.network.models.ExpressRouteCircuitSku?alt=com.azure.resourcemanager.network.models.ExpressRouteCircuitSku&text=ExpressRouteCircuitSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ExpressRouteCircuitInner withSku(ExpressRouteCircuitSku sku)"
  returns:
    description: "the ExpressRouteCircuitInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  fullName: "com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner.withTags(Map<String,String> tags)"
  name: "withTags(Map<String,String> tags)"
  nameWithType: "ExpressRouteCircuitInner.withTags(Map<String,String> tags)"
  overridden: "com.azure.core.management.Resource.withTags(java.util.Map<java.lang.String,java.lang.String>)"
  parameters:
  - name: "tags"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public ExpressRouteCircuitInner withTags(Map<String,String> tags)"
  returns:
    type: "<xref href=\"com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner?alt=com.azure.resourcemanager.network.fluent.models.ExpressRouteCircuitInner&text=ExpressRouteCircuitInner\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.14.0
