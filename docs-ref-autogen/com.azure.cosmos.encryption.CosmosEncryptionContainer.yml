### YamlMime:JavaType
uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer"
fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer"
name: "CosmosEncryptionContainer"
nameWithType: "CosmosEncryptionContainer"
summary: "Cosmos<wbr>Container with encryption capabilities."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CosmosEncryptionContainer"
methods:
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>createItem(T)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>createItem(T item)"
  name: "<T>createItem(T item)"
  nameWithType: "CosmosEncryptionContainer.<T>createItem(T item)"
  summary: "Creates a new item synchronously and returns its respective Cosmos item response."
  parameters:
  - description: "the item"
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<T> <T>createItem(T item)"
  desc: "Creates a new item synchronously and returns its respective Cosmos item response."
  returns:
    description: "the Cosmos item response"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>createItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>createItem(T item, CosmosItemRequestOptions options)"
  name: "<T>createItem(T item, CosmosItemRequestOptions options)"
  nameWithType: "CosmosEncryptionContainer.<T>createItem(T item, CosmosItemRequestOptions options)"
  summary: "Creates a new item synchronously and returns its respective Cosmos item response while specifying additional options."
  parameters:
  - description: "the item."
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<T> <T>createItem(T item, CosmosItemRequestOptions options)"
  desc: "Creates a new item synchronously and returns its respective Cosmos item response while specifying additional options.\n\nThe partition key value will be automatically extracted from the item's content."
  returns:
    description: "the cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>createItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  name: "<T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  nameWithType: "CosmosEncryptionContainer.<T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  summary: "Creates a new item synchronously and returns its respective Cosmos item response while specifying additional options."
  parameters:
  - description: "the item."
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<T> <T>createItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  desc: "Creates a new item synchronously and returns its respective Cosmos item response while specifying additional options."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>deleteItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>deleteItem(T item, CosmosItemRequestOptions options)"
  name: "<T>deleteItem(T item, CosmosItemRequestOptions options)"
  nameWithType: "CosmosEncryptionContainer.<T>deleteItem(T item, CosmosItemRequestOptions options)"
  summary: "Deletes an item in the current container."
  parameters:
  - description: "the item to be deleted."
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<Object> <T>deleteItem(T item, CosmosItemRequestOptions options)"
  desc: "Deletes an item in the current container."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>patchItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosPatchOperations,com.azure.cosmos.models.CosmosPatchItemRequestOptions,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>patchItem(String itemId, PartitionKey partitionKey, CosmosPatchOperations cosmosPatchOperations, CosmosPatchItemRequestOptions options, Class<T> itemType)"
  name: "<T>patchItem(String itemId, PartitionKey partitionKey, CosmosPatchOperations cosmosPatchOperations, CosmosPatchItemRequestOptions options, Class<T> itemType)"
  nameWithType: "CosmosEncryptionContainer.<T>patchItem(String itemId, PartitionKey partitionKey, CosmosPatchOperations cosmosPatchOperations, CosmosPatchItemRequestOptions options, Class<T> itemType)"
  summary: "Run patch operations on an Item."
  parameters:
  - description: "the item id."
    name: "itemId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "Represents a container having list of operations to be sequentially applied to the referred Cosmos item."
    name: "cosmosPatchOperations"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchOperations?alt=com.azure.cosmos.models.CosmosPatchOperations&text=CosmosPatchOperations\" data-throw-if-not-resolved=\"False\" />"
  - description: "the request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosPatchItemRequestOptions?alt=com.azure.cosmos.models.CosmosPatchItemRequestOptions&text=CosmosPatchItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the item type."
    name: "itemType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosItemResponse<T> <T>patchItem(String itemId, PartitionKey partitionKey, CosmosPatchOperations cosmosPatchOperations, CosmosPatchItemRequestOptions options, Class<T> itemType)"
  desc: "Run patch operations on an Item."
  returns:
    description: "the Cosmos item resource response with the patched item or an exception."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>queryItems(com.azure.cosmos.models.SqlQuerySpec,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>queryItems(SqlQuerySpec query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  name: "<T>queryItems(SqlQuerySpec query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  nameWithType: "CosmosEncryptionContainer.<T>queryItems(SqlQuerySpec query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  summary: "Query items in the current container returning the results as <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query spec."
    name: "query"
    type: "<xref href=\"com.azure.cosmos.models.SqlQuerySpec?alt=com.azure.cosmos.models.SqlQuerySpec&text=SqlQuerySpec\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedIterable<T> <T>queryItems(SqlQuerySpec query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  desc: "Query items in the current container returning the results as <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>queryItems(java.lang.String,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>queryItems(String query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  name: "<T>queryItems(String query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  nameWithType: "CosmosEncryptionContainer.<T>queryItems(String query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  summary: "Query items in the current container returning the results as <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  parameters:
  - description: "the query."
    name: "query"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedIterable<T> <T>queryItems(String query, CosmosQueryRequestOptions requestOptions, Class<T> classType)"
  desc: "Query items in the current container returning the results as <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
  returns:
    description: "the <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>queryItemsOnEncryptedProperties(com.azure.cosmos.encryption.models.SqlQuerySpecWithEncryption,com.azure.cosmos.models.CosmosQueryRequestOptions,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>queryItemsOnEncryptedProperties(SqlQuerySpecWithEncryption sqlQuerySpecWithEncryption, CosmosQueryRequestOptions options, Class<T> classType)"
  name: "<T>queryItemsOnEncryptedProperties(SqlQuerySpecWithEncryption sqlQuerySpecWithEncryption, CosmosQueryRequestOptions options, Class<T> classType)"
  nameWithType: "CosmosEncryptionContainer.<T>queryItemsOnEncryptedProperties(SqlQuerySpecWithEncryption sqlQuerySpecWithEncryption, CosmosQueryRequestOptions options, Class<T> classType)"
  summary: "Query for items in the current container using a <xref uid=\"com.azure.cosmos.encryption.models.SqlQuerySpecWithEncryption\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SqlQuerySpecWithEncryption\"></xref>."
  parameters:
  - description: "the sqlQuerySpecWithEncryption."
    name: "sqlQuerySpecWithEncryption"
    type: "<xref href=\"com.azure.cosmos.encryption.models.SqlQuerySpecWithEncryption?alt=com.azure.cosmos.encryption.models.SqlQuerySpecWithEncryption&text=SqlQuerySpecWithEncryption\" data-throw-if-not-resolved=\"False\" />"
  - description: "the query request options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosPagedIterable<T> <T>queryItemsOnEncryptedProperties(SqlQuerySpecWithEncryption sqlQuerySpecWithEncryption, CosmosQueryRequestOptions options, Class<T> classType)"
  desc: "Query for items in the current container using a <xref uid=\"com.azure.cosmos.encryption.models.SqlQuerySpecWithEncryption\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SqlQuerySpecWithEncryption\"></xref>."
  returns:
    description: "a <xref uid=\"com.azure.cosmos.util.CosmosPagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosPagedIterable\"></xref>."
    type: "<xref href=\"com.azure.cosmos.util.CosmosPagedIterable?alt=com.azure.cosmos.util.CosmosPagedIterable&text=CosmosPagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>readItem(String id, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions, Class<T> classType)"
  name: "<T>readItem(String id, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions, Class<T> classType)"
  nameWithType: "CosmosEncryptionContainer.<T>readItem(String id, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions, Class<T> classType)"
  summary: "Reads an item in the current container while specifying additional options."
  parameters:
  - description: "the item id."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type of item."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosItemResponse<T> <T>readItem(String id, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions, Class<T> classType)"
  desc: "Reads an item in the current container while specifying additional options."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>readItem(java.lang.String,com.azure.cosmos.models.PartitionKey,java.lang.Class<T>)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>readItem(String id, PartitionKey partitionKey, Class<T> classType)"
  name: "<T>readItem(String id, PartitionKey partitionKey, Class<T> classType)"
  nameWithType: "CosmosEncryptionContainer.<T>readItem(String id, PartitionKey partitionKey, Class<T> classType)"
  summary: "Reads an item in the current container."
  parameters:
  - description: "the item id."
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the class type of item."
    name: "classType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CosmosItemResponse<T> <T>readItem(String id, PartitionKey partitionKey, Class<T> classType)"
  desc: "Reads an item in the current container."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>replaceItem(T,java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  name: "<T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  nameWithType: "CosmosEncryptionContainer.<T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  summary: "Replaces an item in the current container."
  parameters:
  - description: "the item."
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the item id."
    name: "itemId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<T> <T>replaceItem(T item, String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  desc: "Replaces an item in the current container."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>upsertItem(T)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>upsertItem(T item)"
  name: "<T>upsertItem(T item)"
  nameWithType: "CosmosEncryptionContainer.<T>upsertItem(T item)"
  summary: "Upserts an Cosmos item in the current container."
  parameters:
  - description: "the item."
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<T> <T>upsertItem(T item)"
  desc: "Upserts an Cosmos item in the current container."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>upsertItem(T,com.azure.cosmos.models.CosmosItemRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>upsertItem(T item, CosmosItemRequestOptions options)"
  name: "<T>upsertItem(T item, CosmosItemRequestOptions options)"
  nameWithType: "CosmosEncryptionContainer.<T>upsertItem(T item, CosmosItemRequestOptions options)"
  summary: "Upserts a item Cosmos sync item while specifying additional options."
  parameters:
  - description: "the item."
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "options"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<T> <T>upsertItem(T item, CosmosItemRequestOptions options)"
  desc: "Upserts a item Cosmos sync item while specifying additional options."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>upsertItem(T,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  name: "<T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  nameWithType: "CosmosEncryptionContainer.<T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  summary: "Upserts a item Cosmos sync item while specifying additional options."
  parameters:
  - description: "the item."
    name: "item"
    type: "<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partitionKey."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<T> <T>upsertItem(T item, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  desc: "Upserts a item Cosmos sync item while specifying additional options."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<TContext>executeBulkOperations(java.lang.Iterable<com.azure.cosmos.models.CosmosItemOperation>)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations)"
  name: "<TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations)"
  nameWithType: "CosmosEncryptionContainer.<TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations)"
  summary: "Executes list of operations in Bulk."
  parameters:
  - description: "list of operation which will be executed by this container."
    name: "operations"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosItemOperation?alt=com.azure.cosmos.models.CosmosItemOperation&text=CosmosItemOperation\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Iterable<CosmosBulkOperationResponse<TContext>> <TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations)"
  desc: "Executes list of operations in Bulk."
  returns:
    description: "An Iterable of <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse\"></xref> which contains operation and it's response or exception.\n <p>\n     To create a operation which can be executed here, use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkOperations\"></xref>. For eg.\n     for a upsert operation use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkOperations#getUpsertItemOperation(Object, PartitionKey)\"></xref>\n </p>\n <p>\n     We can get the corresponding operation using <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse.getOperation*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getOperation()\"></xref> and\n     it's response using <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse.getResponse*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getResponse()\"></xref>. If the operation was executed\n     successfully, the value returned by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkItemResponse#isSuccessStatusCode()\"></xref> will be true. To get\n     actual status use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkItemResponse#getStatusCode()\"></xref>.\n </p>\n To check if the operation had any exception, use <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse.getException*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getException()\"></xref> to\n get the exception."
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosBulkOperationResponse?alt=com.azure.cosmos.models.CosmosBulkOperationResponse&text=CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TContext?alt=TContext&text=TContext\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<TContext>executeBulkOperations(java.lang.Iterable<com.azure.cosmos.models.CosmosItemOperation>,com.azure.cosmos.models.CosmosBulkExecutionOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.<TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations, CosmosBulkExecutionOptions bulkOptions)"
  name: "<TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations, CosmosBulkExecutionOptions bulkOptions)"
  nameWithType: "CosmosEncryptionContainer.<TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations, CosmosBulkExecutionOptions bulkOptions)"
  summary: "Executes list of operations in Bulk."
  parameters:
  - description: "list of operation which will be executed by this container."
    name: "operations"
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosItemOperation?alt=com.azure.cosmos.models.CosmosItemOperation&text=CosmosItemOperation\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "Options that apply for this Bulk request which specifies options regarding execution like\n                    concurrency, batching size, interval and context."
    name: "bulkOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosBulkExecutionOptions?alt=com.azure.cosmos.models.CosmosBulkExecutionOptions&text=CosmosBulkExecutionOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Iterable<CosmosBulkOperationResponse<TContext>> <TContext>executeBulkOperations(Iterable<CosmosItemOperation> operations, CosmosBulkExecutionOptions bulkOptions)"
  desc: "Executes list of operations in Bulk."
  returns:
    description: "An Iterable of <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse\"></xref> which contains operation and it's response or exception.\n <p>\n     To create a operation which can be executed here, use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkOperations\"></xref>. For eg.\n     for a upsert operation use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkOperations#getUpsertItemOperation(Object, PartitionKey)\"></xref>\n </p>\n <p>\n     We can get the corresponding operation using <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse.getOperation*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getOperation()\"></xref> and\n     it's response using <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse.getResponse*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getResponse()\"></xref>. If the operation was executed\n     successfully, the value returned by <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkItemResponse#isSuccessStatusCode()\"></xref> will be true. To get\n     actual status use <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.cosmos.models.CosmosBulkItemResponse#getStatusCode()\"></xref>.\n </p>\n To check if the operation had any exception, use <xref uid=\"com.azure.cosmos.models.CosmosBulkOperationResponse.getException*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBulkOperationResponse#getException()\"></xref> to\n get the exception."
    type: "<xref href=\"java.lang.Iterable?alt=java.lang.Iterable&text=Iterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.cosmos.models.CosmosBulkOperationResponse?alt=com.azure.cosmos.models.CosmosBulkOperationResponse&text=CosmosBulkOperationResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"TContext?alt=TContext&text=TContext\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.deleteItem(java.lang.String,com.azure.cosmos.models.PartitionKey,com.azure.cosmos.models.CosmosItemRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  name: "deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  nameWithType: "CosmosEncryptionContainer.deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  summary: "Deletes an item in the current container."
  parameters:
  - description: "the item id."
    name: "itemId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the partition key."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  - description: "the options."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemRequestOptions?alt=com.azure.cosmos.models.CosmosItemRequestOptions&text=CosmosItemRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosItemResponse<Object> deleteItem(String itemId, PartitionKey partitionKey, CosmosItemRequestOptions requestOptions)"
  desc: "Deletes an item in the current container."
  returns:
    description: "the Cosmos item response."
    type: "<xref href=\"com.azure.cosmos.models.CosmosItemResponse?alt=com.azure.cosmos.models.CosmosItemResponse&text=CosmosItemResponse\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.executeCosmosBatch(com.azure.cosmos.models.CosmosBatch)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.executeCosmosBatch(CosmosBatch cosmosBatch)"
  name: "executeCosmosBatch(CosmosBatch cosmosBatch)"
  nameWithType: "CosmosEncryptionContainer.executeCosmosBatch(CosmosBatch cosmosBatch)"
  summary: "Executes the encrypted transactional batch."
  parameters:
  - description: "Batch having list of operation and partition key which will be executed by this container."
    name: "cosmosBatch"
    type: "<xref href=\"com.azure.cosmos.models.CosmosBatch?alt=com.azure.cosmos.models.CosmosBatch&text=CosmosBatch\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosBatchResponse executeCosmosBatch(CosmosBatch cosmosBatch)"
  desc: "Executes the encrypted transactional batch."
  returns:
    description: "A CosmosBatchResponse which contains details of execution of the transactional batch.\n <p>\n If the transactional batch executes successfully, the value returned by <xref uid=\"com.azure.cosmos.models.CosmosBatchResponse.getStatusCode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchResponse#getStatusCode\"></xref> on the response returned will be set to 200}.\n <p>\n If an operation within the transactional batch fails during execution, no changes from the batch will be\n committed and the status of the failing operation is made available by <xref uid=\"com.azure.cosmos.models.CosmosBatchResponse.getStatusCode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchResponse#getStatusCode\"></xref> or by the exception. To obtain information about the operations\n that failed in case of some user error like conflict, not found etc, the response can be enumerated.\n This returns <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchOperationResult\"></xref> instances corresponding to each operation in the\n transactional batch in the order they were added to the transactional batch.\n For a result corresponding to an operation within the transactional batch, use\n <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchOperationResult#getStatusCode\"></xref>\n to access the status of the operation. If the operation was not executed or it was aborted due to the failure of\n another operation within the transactional batch, the value of this field will be 424;\n for the operation that caused the batch to abort, the value of this field\n will indicate the cause of failure.\n <p>\n If there are issues such as request timeouts, Gone, session not available, network failure\n or if the service somehow returns 5xx then this will throw an exception instead of returning a CosmosBatchResponse.\n <p>\n Use <xref uid=\"com.azure.cosmos.models.CosmosBatchResponse.isSuccessStatusCode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchResponse#isSuccessStatusCode\"></xref> on the response returned to ensure that the\n transactional batch succeeded."
    type: "<xref href=\"com.azure.cosmos.models.CosmosBatchResponse?alt=com.azure.cosmos.models.CosmosBatchResponse&text=CosmosBatchResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.executeCosmosBatch(com.azure.cosmos.models.CosmosBatch,com.azure.cosmos.models.CosmosBatchRequestOptions)"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.executeCosmosBatch(CosmosBatch cosmosBatch, CosmosBatchRequestOptions requestOptions)"
  name: "executeCosmosBatch(CosmosBatch cosmosBatch, CosmosBatchRequestOptions requestOptions)"
  nameWithType: "CosmosEncryptionContainer.executeCosmosBatch(CosmosBatch cosmosBatch, CosmosBatchRequestOptions requestOptions)"
  summary: "Executes the encrypted transactional batch."
  parameters:
  - description: "Batch having list of operation and partition key which will be executed by this container."
    name: "cosmosBatch"
    type: "<xref href=\"com.azure.cosmos.models.CosmosBatch?alt=com.azure.cosmos.models.CosmosBatch&text=CosmosBatch\" data-throw-if-not-resolved=\"False\" />"
  - description: "Options that apply specifically to batch request."
    name: "requestOptions"
    type: "<xref href=\"com.azure.cosmos.models.CosmosBatchRequestOptions?alt=com.azure.cosmos.models.CosmosBatchRequestOptions&text=CosmosBatchRequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosBatchResponse executeCosmosBatch(CosmosBatch cosmosBatch, CosmosBatchRequestOptions requestOptions)"
  desc: "Executes the encrypted transactional batch."
  returns:
    description: "A CosmosBatchResponse which contains details of execution of the transactional batch.\n <p>\n If the transactional batch executes successfully, the value returned by <xref uid=\"com.azure.cosmos.models.CosmosBatchResponse.getStatusCode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchResponse#getStatusCode\"></xref> on the response returned will be set to 200}.\n <p>\n If an operation within the transactional batch fails during execution, no changes from the batch will be\n committed and the status of the failing operation is made available by <xref uid=\"com.azure.cosmos.models.CosmosBatchResponse.getStatusCode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchResponse#getStatusCode\"></xref> or by the exception. To obtain information about the operations\n that failed in case of some user error like conflict, not found etc, the response can be enumerated.\n This returns <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchOperationResult\"></xref> instances corresponding to each operation in the\n transactional batch in the order they were added to the transactional batch.\n For a result corresponding to an operation within the transactional batch, use\n <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchOperationResult#getStatusCode\"></xref>\n to access the status of the operation. If the operation was not executed or it was aborted due to the failure of\n another operation within the transactional batch, the value of this field will be 424;\n for the operation that caused the batch to abort, the value of this field\n will indicate the cause of failure.\n <p>\n If there are issues such as request timeouts, Gone, session not available, network failure\n or if the service somehow returns 5xx then this will throw an exception instead of returning a CosmosBatchResponse.\n <p>\n Use <xref uid=\"com.azure.cosmos.models.CosmosBatchResponse.isSuccessStatusCode\" data-throw-if-not-resolved=\"false\" data-raw-source=\"CosmosBatchResponse#isSuccessStatusCode\"></xref> on the response returned to ensure that the\n transactional batch succeeded."
    type: "<xref href=\"com.azure.cosmos.models.CosmosBatchResponse?alt=com.azure.cosmos.models.CosmosBatchResponse&text=CosmosBatchResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.cosmos.encryption.CosmosEncryptionContainer.getCosmosContainer()"
  fullName: "com.azure.cosmos.encryption.CosmosEncryptionContainer.getCosmosContainer()"
  name: "getCosmosContainer()"
  nameWithType: "CosmosEncryptionContainer.getCosmosContainer()"
  summary: "Gets the Cosmos<wbr>Container"
  syntax: "public CosmosContainer getCosmosContainer()"
  desc: "Gets the CosmosContainer"
  returns:
    description: "cosmos container"
    type: "<xref href=\"com.azure.cosmos.CosmosContainer?alt=com.azure.cosmos.CosmosContainer&text=CosmosContainer\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "CosmosContainer with encryption capabilities."
metadata: {}
package: "com.azure.cosmos.encryption"
artifact: com.azure:azure-cosmos-encryption:1.4.1
