### YamlMime:JavaType
constructors:
- microsoft.servicefabric.actors.runtime.FabricActorService.FabricActorService(StatefulServiceContext,ActorTypeInformation)
- microsoft.servicefabric.actors.runtime.FabricActorService.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>)
- microsoft.servicefabric.actors.runtime.FabricActorService.FabricActorService(StatefulServiceContext,ActorTypeInformation,BiFunction<FabricActorService, ActorId, ActorBase>,BiFunction<ActorBase, ActorStateProvider, ActorStateManager>,ActorStateProvider,ActorServiceSettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.runtime.StatefulServiceBase?alt=microsoft.servicefabric.services.runtime.StatefulServiceBase&text=StatefulServiceBase" data-throw-if-not-resolved="False"/>
inheritedMembers:
- microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription)
- microsoft.servicefabric.services.runtime.StatefulServiceBase.backupAsync(BackupDescription,Duration,CancellationToken)
- microsoft.servicefabric.services.runtime.StatefulServiceBase.getAddresses()
- microsoft.servicefabric.services.runtime.StatefulServiceBase.getPartition()
- microsoft.servicefabric.services.runtime.StatefulServiceBase.getServiceContext()
- microsoft.servicefabric.services.runtime.StatefulServiceBase.getStateProviderReplica()
- microsoft.servicefabric.services.runtime.StatefulServiceBase.onDataLossAsync(RestoreContext,CancellationToken)
- microsoft.servicefabric.services.runtime.StatefulServiceBase.setAddresses(Map<String, String>)
- microsoft.servicefabric.services.runtime.StatefulServiceBase.setPartition(StatefulServicePartition)
- microsoft.servicefabric.services.runtime.StatefulServiceBase.StatefulServiceBase(StatefulServiceContext,StateProviderReplica)
methods:
- microsoft.servicefabric.actors.runtime.FabricActorService.createServiceReplicaListeners()
- microsoft.servicefabric.actors.runtime.FabricActorService.deleteActorAsync(ActorId,CancellationToken)
- microsoft.servicefabric.actors.runtime.FabricActorService.getActorsAsync(ContinuationToken,CancellationToken)
- microsoft.servicefabric.actors.runtime.FabricActorService.getActorTypeInformation()
- microsoft.servicefabric.actors.runtime.FabricActorService.getSettings()
- microsoft.servicefabric.actors.runtime.FabricActorService.getStateProvider()
- microsoft.servicefabric.actors.runtime.FabricActorService.onAbort()
- microsoft.servicefabric.actors.runtime.FabricActorService.onChangeRoleAsync(ReplicaRole,CancellationToken)
- microsoft.servicefabric.actors.runtime.FabricActorService.onCloseAsync(CancellationToken)
- microsoft.servicefabric.actors.runtime.FabricActorService.onOpenAsync(ReplicaOpenMode,CancellationToken)
- microsoft.servicefabric.actors.runtime.FabricActorService.runAsync(CancellationToken)
nameWithType: FabricActorService
syntax: public class FabricActorService extends StatefulServiceBase implements ActorService
type: class
uid: microsoft.servicefabric.actors.runtime.FabricActorService
fullName: microsoft.servicefabric.actors.runtime.FabricActorService
name: FabricActorService
package: microsoft.servicefabric.actors.runtime
summary: >-
  <p>Represents the base class for Microsoft Service Fabric based reliable actors service. </p>

  <p>

    <b>Remarks:</b>Derive from this class to implement your own custom actor service if you want to override any service level behavior for your actors. </p>
metadata: {}
