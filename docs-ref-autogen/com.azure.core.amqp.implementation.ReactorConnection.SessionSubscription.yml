### YamlMime:ManagedReference
items:
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription"
  id: "SessionSubscription"
  parent: "com.azure.core.amqp.implementation"
  children:
  - "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.dispose()"
  - "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSession()"
  - "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSubscription()"
  langs:
  - "java"
  name: "ReactorConnection.SessionSubscription"
  nameWithType: "ReactorConnection.SessionSubscription"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription"
  type: "Class"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "private static final class ReactorConnection.SessionSubscription implements Disposable"
  inheritance:
  - "java.lang.Object"
  implements:
  - "reactor.core.Disposable"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.SessionSubscription(com.azure.core.amqp.AmqpSession,reactor.core.Disposable)"
  id: "SessionSubscription(com.azure.core.amqp.AmqpSession,reactor.core.Disposable)"
  parent: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription"
  langs:
  - "java"
  name: "SessionSubscription(AmqpSession session, Disposable subscription)"
  nameWithType: "ReactorConnection.SessionSubscription.SessionSubscription(AmqpSession session, Disposable subscription)"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.SessionSubscription(AmqpSession session, Disposable subscription)"
  overload: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.SessionSubscription*"
  type: "Constructor"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "private SessionSubscription(AmqpSession session, Disposable subscription)"
    parameters:
    - id: "session"
      type: "com.azure.core.amqp.AmqpSession"
    - id: "subscription"
      type: "reactor.core.Disposable"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.dispose()"
  id: "dispose()"
  parent: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription"
  langs:
  - "java"
  name: "dispose()"
  nameWithType: "ReactorConnection.SessionSubscription.dispose()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.dispose()"
  overload: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.dispose*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public void dispose()"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSession()"
  id: "getSession()"
  parent: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription"
  langs:
  - "java"
  name: "getSession()"
  nameWithType: "ReactorConnection.SessionSubscription.getSession()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSession()"
  overload: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSession*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public AmqpSession getSession()"
    return:
      type: "com.azure.core.amqp.AmqpSession"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSubscription()"
  id: "getSubscription()"
  parent: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription"
  langs:
  - "java"
  name: "getSubscription()"
  nameWithType: "ReactorConnection.SessionSubscription.getSubscription()"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSubscription()"
  overload: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSubscription*"
  type: "Method"
  package: "com.azure.core.amqp.implementation"
  syntax:
    content: "public Disposable getSubscription()"
    return:
      type: "reactor.core.Disposable"
references:
- uid: "com.azure.core.amqp.AmqpSession"
  name: "AmqpSession"
  nameWithType: "AmqpSession"
  fullName: "com.azure.core.amqp.AmqpSession"
- uid: "reactor.core.Disposable"
  spec.java:
  - uid: "reactor.core.Disposable"
    name: "Disposable"
    fullName: "reactor.core.Disposable"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.SessionSubscription*"
  name: "SessionSubscription"
  nameWithType: "ReactorConnection.SessionSubscription.SessionSubscription"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.SessionSubscription"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSubscription*"
  name: "getSubscription"
  nameWithType: "ReactorConnection.SessionSubscription.getSubscription"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSubscription"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSession*"
  name: "getSession"
  nameWithType: "ReactorConnection.SessionSubscription.getSession"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.getSession"
  package: "com.azure.core.amqp.implementation"
- uid: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.dispose*"
  name: "dispose"
  nameWithType: "ReactorConnection.SessionSubscription.dispose"
  fullName: "com.azure.core.amqp.implementation.ReactorConnection.SessionSubscription.dispose"
  package: "com.azure.core.amqp.implementation"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
