### YamlMime:JavaMember
uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list*"
fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list"
name: "list"
nameWithType: "PolicyDefinitionsClient.list"
members:
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list()"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list()"
  name: "list()"
  nameWithType: "PolicyDefinitionsClient.list()"
  summary: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> list()"
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list(java.lang.String,java.lang.Integer,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.resources.fluent.PolicyDefinitionsClient.list(String filter, Integer top, Context context)"
  name: "list(String filter, Integer top, Context context)"
  nameWithType: "PolicyDefinitionsClient.list(String filter, Integer top, Context context)"
  summary: "This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq \\{value\\}' or 'category eq '\\{value\\}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose type match the \\{value\\}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq \\{value\\}' is provided, the returned list only includes all policy definitions whose category match the \\{value\\}."
  parameters:
  - description: "The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType\n     -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If\n     $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given\n     scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy\n     definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and\n     Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions\n     whose category match the {value}."
    name: "filter"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Maximum number of records to return. When the $top filter is not provided, it will return 500 records."
    name: "top"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedIterable<PolicyDefinitionInner> list(String filter, Integer top, Context context)"
  returns:
    description: "list of policy definitions as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner?alt=com.azure.resourcemanager.resources.fluent.models.PolicyDefinitionInner&text=PolicyDefinitionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.resources.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.13.0
