### YamlMime:JavaType
uid: "com.azure.core.util.metrics.MeterProvider"
fullName: "com.azure.core.util.metrics.MeterProvider"
name: "MeterProvider"
nameWithType: "MeterProvider"
summary: "Resolves and provides <xref uid=\"com.azure.core.util.metrics.Meter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Meter\"></xref> implementation."
syntax: "public interface **MeterProvider**"
methods:
- uid: "com.azure.core.util.metrics.MeterProvider.createMeter(com.azure.core.util.LibraryTelemetryOptions,com.azure.core.util.MetricsOptions)"
  fullName: "com.azure.core.util.metrics.MeterProvider.createMeter(LibraryTelemetryOptions libraryOptions, MetricsOptions applicationOptions)"
  name: "createMeter(LibraryTelemetryOptions libraryOptions, MetricsOptions applicationOptions)"
  nameWithType: "MeterProvider.createMeter(LibraryTelemetryOptions libraryOptions, MetricsOptions applicationOptions)"
  summary: "Creates meter instance."
  modifiers:
  - "default"
  parameters:
  - description: "Azure SDK telemetry options."
    name: "libraryOptions"
    type: "<xref href=\"com.azure.core.util.LibraryTelemetryOptions?alt=com.azure.core.util.LibraryTelemetryOptions&text=LibraryTelemetryOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "instance of <xref uid=\"com.azure.core.util.MetricsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MetricsOptions\"></xref> provided by the application."
    name: "applicationOptions"
    type: "<xref href=\"com.azure.core.util.MetricsOptions?alt=com.azure.core.util.MetricsOptions&text=MetricsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default Meter createMeter(LibraryTelemetryOptions libraryOptions, MetricsOptions applicationOptions)"
  desc: "Creates meter instance."
  returns:
    description: "a meter instance."
    type: "<xref href=\"com.azure.core.util.metrics.Meter?alt=com.azure.core.util.metrics.Meter&text=Meter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.metrics.MeterProvider.createMeter(java.lang.String,java.lang.String,com.azure.core.util.MetricsOptions)"
  fullName: "com.azure.core.util.metrics.MeterProvider.createMeter(String libraryName, String libraryVersion, MetricsOptions applicationOptions)"
  name: "createMeter(String libraryName, String libraryVersion, MetricsOptions applicationOptions)"
  nameWithType: "MeterProvider.createMeter(String libraryName, String libraryVersion, MetricsOptions applicationOptions)"
  summary: "Creates named and versioned meter instance."
  modifiers:
  - "abstract"
  parameters:
  - description: "Azure client library package name"
    name: "libraryName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Azure client library version"
    name: "libraryVersion"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "instance of <xref uid=\"com.azure.core.util.MetricsOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"MetricsOptions\"></xref> provided by the application."
    name: "applicationOptions"
    type: "<xref href=\"com.azure.core.util.MetricsOptions?alt=com.azure.core.util.MetricsOptions&text=MetricsOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Meter createMeter(String libraryName, String libraryVersion, MetricsOptions applicationOptions)"
  desc: "Creates named and versioned meter instance.\n\n```java\nMetricsOptions metricsOptions = new MetricsOptions();\n\n Meter meter = MeterProvider.getDefaultProvider().createMeter(\"azure-core\", \"1.0.0\", metricsOptions);\n```"
  returns:
    description: "a meter instance."
    type: "<xref href=\"com.azure.core.util.metrics.Meter?alt=com.azure.core.util.metrics.Meter&text=Meter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.core.util.metrics.MeterProvider.getDefaultProvider()"
  fullName: "com.azure.core.util.metrics.MeterProvider.getDefaultProvider()"
  name: "getDefaultProvider()"
  nameWithType: "MeterProvider.getDefaultProvider()"
  summary: "Returns default implementation of `MeterProvider` that uses SPI to resolve metrics implementation."
  modifiers:
  - "static"
  syntax: "public static MeterProvider getDefaultProvider()"
  desc: "Returns default implementation of `MeterProvider` that uses SPI to resolve metrics implementation."
  returns:
    description: "an instance of <code>MeterProvider</code>"
    type: "<xref href=\"com.azure.core.util.metrics.MeterProvider?alt=com.azure.core.util.metrics.MeterProvider&text=MeterProvider\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Resolves and provides <xref uid=\"com.azure.core.util.metrics.Meter\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Meter\"></xref> implementation.\n\nThis class is intended to be used by Azure client libraries and provides abstraction over different metrics implementations. Application developers should use metrics implementations such as OpenTelemetry or Micrometer directly."
metadata: {}
package: "com.azure.core.util.metrics"
artifact: com.azure:azure-core:1.54.1
