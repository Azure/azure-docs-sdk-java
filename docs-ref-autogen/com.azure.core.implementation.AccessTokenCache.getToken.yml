### YamlMime:JavaMember
uid: "com.azure.core.implementation.AccessTokenCache.getToken*"
fullName: "com.azure.core.implementation.AccessTokenCache.getToken"
name: "getToken"
nameWithType: "AccessTokenCache.getToken"
members:
- uid: "com.azure.core.implementation.AccessTokenCache.getToken(com.azure.core.credential.TokenRequestContext,boolean)"
  fullName: "com.azure.core.implementation.AccessTokenCache.getToken(TokenRequestContext tokenRequestContext, boolean checkToForceFetchToken)"
  name: "getToken(TokenRequestContext tokenRequestContext, boolean checkToForceFetchToken)"
  nameWithType: "AccessTokenCache.getToken(TokenRequestContext tokenRequestContext, boolean checkToForceFetchToken)"
  summary: "Asynchronously get a token from either the cache or replenish the cache with a new token."
  parameters:
  - description: "The request context for token acquisition."
    name: "tokenRequestContext"
    type: "<xref href=\"com.azure.core.credential.TokenRequestContext?alt=com.azure.core.credential.TokenRequestContext&text=TokenRequestContext\" data-throw-if-not-resolved=\"False\" />"
  - name: "checkToForceFetchToken"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<AccessToken> getToken(TokenRequestContext tokenRequestContext, boolean checkToForceFetchToken)"
  returns:
    description: "The Publisher that emits an AccessToken"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.core.implementation"
artifact: com.azure:azure-core:1.23.0
