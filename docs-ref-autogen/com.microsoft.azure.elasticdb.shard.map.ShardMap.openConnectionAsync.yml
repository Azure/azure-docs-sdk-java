### YamlMime:JavaMember
nameWithType: ShardMap.openConnectionAsync
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString)
  name: openConnectionAsync(IShardProvider shardProvider, String connectionString)
  nameWithType: ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString)
  parameters:
  - description: <p>Shard provider containing shard to be connected to. </p>
    name: shardProvider
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider%3CValueT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for connection. Must have credentials. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task encapsulating the SqlConnection All exceptions are reported via the returned task. </p>
    type: <xref href="final+Callable%3CConnection%3E?alt=final Callable<Connection>&text=final+Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a connection to the given shard provider.</p>

    <p></p>
  syntax: public final Callable<Connection> openConnectionAsync(IShardProvider shardProvider, String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider,String)
- fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  name: openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  nameWithType: ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Shard provider containing shard to be connected to. </p>
    name: shardProvider
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.IShardProvider?alt=com.microsoft.azure.elasticdb.shard.base.IShardProvider&text=IShardProvider%3CValueT%3E" data-throw-if-not-resolved="False"/>
  - description: <p>Connection string for connection. Must have credentials. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task encapsulating the SqlConnection. </p>
    type: <xref href="final+Callable%3CConnection%3E?alt=final Callable<Connection>&text=final+Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a connection to the given shard provider. All exceptions are reported via the returned task.</p>

    <p></p>
  syntax: public final Callable<Connection> openConnectionAsync(IShardProvider shardProvider, String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider,String,ConnectionOptions)
uid: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync*
fullName: com.microsoft.azure.elasticdb.shard.map.ShardMap.openConnectionAsync(IShardProvider shardProvider, String connectionString)
name: openConnectionAsync(IShardProvider shardProvider, String connectionString)
package: com.microsoft.azure.elasticdb.shard.map
metadata: {}
