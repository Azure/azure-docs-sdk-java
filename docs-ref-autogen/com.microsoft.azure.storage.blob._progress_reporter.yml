### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.storage.blob._progress_reporter
  id: _progress_reporter
  parent: com.microsoft.azure.storage.blob
  children:
  - com.microsoft.azure.storage.blob._progress_reporter.addProgressReporting(Flowable<ByteBuffer>,IProgressReceiver)
  href: com.microsoft.azure.storage.blob._progress_reporter.yml
  langs:
  - java
  name: ProgressReporter
  nameWithType: ProgressReporter
  fullName: com.microsoft.azure.storage.blob.ProgressReporter
  type: Class
  source:
    remote: &o0
      path: src/main/java/com/microsoft/azure/storage/blob/ProgressReporter.java
      branch: master
      repo: https://github.com/Azure/azure-storage-java
    path: src/main/java/com/microsoft/azure/storage/blob/ProgressReporter.java
    startLine: 27
  package: com.microsoft.azure.storage.blob
  summary: "<p>\r\n  <code>ProgressReporterImpl \r\n    </code> offers a convenient way to add progress tracking to a given Flowable. </p>"
  syntax:
    content: public class ProgressReporter
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.storage.blob._progress_reporter.addProgressReporting(Flowable<ByteBuffer>,IProgressReceiver)
  id: addProgressReporting(Flowable<ByteBuffer>,IProgressReceiver)
  parent: com.microsoft.azure.storage.blob._progress_reporter
  href: com.microsoft.azure.storage.blob._progress_reporter.yml
  langs:
  - java
  name: addProgressReporting(Flowable<ByteBuffer> data, IProgressReceiver progressReceiver)
  nameWithType: ProgressReporter.addProgressReporting(Flowable<ByteBuffer> data, IProgressReceiver progressReceiver)
  fullName: com.microsoft.azure.storage.blob.ProgressReporter.addProgressReporting(Flowable<ByteBuffer> data, IProgressReceiver progressReceiver)
  overload: com.microsoft.azure.storage.blob._progress_reporter.addProgressReporting*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/azure/storage/blob/ProgressReporter.java
    startLine: 159
  package: com.microsoft.azure.storage.blob
  summary: "<p>Adds progress reporting functionality to the given<code>Flowable \r\n    </code> . Each subscription (and therefore each retry) will rewind the progress reported so as not to over-report. The data reported will be the total amount of data emitted so far, or the \"current position\" of the Flowable.</p>\r\n<p></p>"
  remarks: "## Sample Code \r\n[!code-java[Sample_Code](../azure-storage-java/src/test/java/com/microsoft/azure/storage/Samples.java?name=progress \"Sample code for ProgressReporterFactor.addProgressReporting\")] \r\nFor more samples, please see the [Samples file](https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java) "
  syntax:
    content: public static Flowable<ByteBuffer> addProgressReporting(Flowable<ByteBuffer> data, IProgressReceiver progressReceiver)
    parameters:
    - id: data
      type: e919870b
      description: <p>The data whose transfer progress is to be tracked. </p>
    - id: progressReceiver
      type: com.microsoft.azure.storage.blob._i_progress_receiver
      description: >-
        <p>

          <xref uid="com.microsoft.azure.storage.blob._i_progress_receiver" data-throw-if-not-resolved="false">IProgressReceiver</xref>

        </p>
    return:
      type: e919870b
      description: >-
        <p>A<code>Flowable 

            </code> that emits the same data as the source but calls a callback to report the total amount of data emitted so far.</p>
references:
- uid: e919870b
  spec.java:
  - name: Flowable<ByteBuffer>
    fullName: Flowable<ByteBuffer>
- uid: com.microsoft.azure.storage.blob._progress_reporter.addProgressReporting*
  name: addProgressReporting
  nameWithType: ProgressReporter.addProgressReporting
  fullName: com.microsoft.azure.storage.blob.ProgressReporter.addProgressReporting
  package: com.microsoft.azure.storage.blob
- uid: com.microsoft.azure.storage.blob._i_progress_receiver
  parent: com.microsoft.azure.storage.blob
  href: com.microsoft.azure.storage.blob._i_progress_receiver.yml
  name: IProgressReceiver
  nameWithType: IProgressReceiver
  fullName: com.microsoft.azure.storage.blob.IProgressReceiver
  type: Interface
  summary: >-
    <p>An<code>IProgressReceiver 

        </code> is an object that can be used to report progress on network transfers. When specified on transfer operations, the<code>reportProgress 

        </code> method will be called periodically with the total number of bytes transferred. The user may configure this method to report progress in whatever format desired. It is recommended that this type be used in conjunction with <xref uid="" data-throw-if-not-resolved="false">ProgressReporter#addProgressReporting(Flowable, IProgressReceiver)</xref>. </p>
  syntax:
    content: public interface IProgressReceiver
