### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.client._service_remoting_client_factory
  id: _service_remoting_client_factory
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client._service_remoting_client_factory.yml
  langs:
  - java
  name: ServiceRemotingClientFactory
  nameWithType: ServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingClientFactory
  type: Interface
  source:
    remote:
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingClientFactory.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceRemotingClientFactory.java
    startLine: 8
  package: microsoft.servicefabric.services.remoting.client
  summary: <p>Defines the interface that must be implemented for providing the remoting communication client factory. </p>
  syntax:
    content: public interface ServiceRemotingClientFactory extends CommunicationClientFactory<ServiceRemotingClient>
  inheritedMembers:
  - microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  - microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  - microsoft.servicefabric.services.communication.client._communication_client_factory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
references:
- uid: microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(URI,ServicePartitionKey,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client._communication_client_factory
  href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
  name: getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: CompletableFuture<TCommunicationClient> microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  type: Method
  summary: >-
    <p>Resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax:
    content: public CompletableFuture<TCommunicationClient> getClientAsync(URI serviceUri, ServicePartitionKey partitionKey, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: serviceUri
      type: "62304784"
      description: <p>Uri of the service to resolve </p>
    - id: partitionKey
      type: microsoft.servicefabric.services.client._service_partition_key
      description: <p>Key that identifies the partition to resolve </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client._target_replica_selector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client._operation_retry_settings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client. </p>
    return:
      type: "87556530"
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. The result of the Task is the <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>(<xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>) object. </p>
- uid: microsoft.servicefabric.services.communication.client._communication_client_factory.getClientAsync(ResolvedServicePartition,TargetReplicaSelector,String,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client._communication_client_factory
  href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
  name: getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  fullName: CompletableFuture<TCommunicationClient> microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
  type: Method
  summary: >-
    <p>Re-resolves a partition of the specified service containing one or more communication listeners and returns a client to communicate to the endpoint corresponding to the given listenerName. The endpoint of the service is of the form - {"Endpoints":{"Listener1":"Endpoint1","Listener2":"Endpoint2" ...}}</p>

    <p></p>
  syntax:
    content: public CompletableFuture<TCommunicationClient> getClientAsync(ResolvedServicePartition previousRsp, TargetReplicaSelector targetReplicaSelector, String listenerName, OperationRetrySettings retrySettings)
    parameters:
    - id: previousRsp
      type: system.fabric._resolved_service_partition
      description: <p>Previous ResolvedServicePartition value </p>
    - id: targetReplicaSelector
      type: microsoft.servicefabric.services.communication.client._target_replica_selector
      description: <p>Specifies which replica in the partition identified by the partition key, the client should connect to </p>
    - id: listenerName
      type: "26831127"
      description: <p>Specifies which listener in the endpoint of the chosen replica, to which the client should connect to </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client._operation_retry_settings
      description: <p>Specifies the retry policy that should be used for exceptions that occur when creating the client. </p>
    return:
      type: "87556530"
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. The result of the Task is the <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>(<xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref>) object. </p>
- uid: microsoft.servicefabric.services.communication.client._communication_client_factory.reportOperationExceptionAsync(TCommunicationClient,ExceptionInformation,OperationRetrySettings)
  parent: microsoft.servicefabric.services.communication.client._communication_client_factory
  href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
  name: reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  nameWithType: CommunicationClientFactory<TCommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  fullName: CompletableFuture<OperationRetryControl> microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient extends CommunicationClient>.reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
  type: Method
  summary: >-
    <p>Handles the exceptions that occur in the <xref uid="microsoft.servicefabric.services.communication.client._communication_client" data-throw-if-not-resolved="false">CommunicationClient</xref> when sending a message to the Service</p>

    <p></p>
  syntax:
    content: public CompletableFuture<OperationRetryControl> reportOperationExceptionAsync(TCommunicationClient client, ExceptionInformation exceptionInformation, OperationRetrySettings retrySettings)
    parameters:
    - id: client
      type: 4500d4bf
      description: <p>Communication client </p>
    - id: exceptionInformation
      type: microsoft.servicefabric.services.communication.client._exception_information
      description: <p>Information about exception that happened while communicating with the service. </p>
    - id: retrySettings
      type: microsoft.servicefabric.services.communication.client._operation_retry_settings
      description: <p>Specifies the retry policy that should be used for handling the reported exception. </p>
    return:
      type: 9cdf14d0microsoft.servicefabric.services.communication.client._operation_retry_controla08ddfce
      description: <p>A <xref uid="" data-throw-if-not-resolved="false">CompletableFuture</xref> that represents outstanding operation. The result of the Task is a <xref uid="microsoft.servicefabric.services.communication.client._operation_retry_control" data-throw-if-not-resolved="false">OperationRetryControl</xref> object that provides information on retry policy for this exception. </p>
- uid: microsoft.servicefabric.services.communication.client._communication_client_factory
  parent: microsoft.servicefabric.services.communication.client
  href: microsoft.servicefabric.services.communication.client._communication_client_factory.yml
  name: CommunicationClientFactory<TCommunicationClient>
  nameWithType: CommunicationClientFactory<TCommunicationClient>
  fullName: microsoft.servicefabric.services.communication.client.CommunicationClientFactory<TCommunicationClient>
  type: Interface
  summary: <p>Defines the interface that must be implemented to provide a factory for communication clients to talk to a service fabric service. </p>
  syntax:
    content: public interface CommunicationClientFactory<TCommunicationClient extends CommunicationClient>
    typeParameters:
    - type: 4500d4bf
- uid: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66
  parent: microsoft.servicefabric.services.remoting.fabrictransport.client
  href: microsoft.servicefabric.services.remoting.fabrictransport.client._fabric_cebb00136a61d24a2824a594bd6e4a66.yml
  name: FabricTransportServiceRemotingClientFactory
  nameWithType: FabricTransportServiceRemotingClientFactory
  fullName: microsoft.servicefabric.services.remoting.fabrictransport.client.FabricTransportServiceRemotingClientFactory
  type: Class
  summary: <p>An <xref uid="" data-throw-if-not-resolved="false">ServiceRemotingClientFactory</xref> that uses Fabric TCP transport to create <xref uid="" data-throw-if-not-resolved="false">ServiceRemotingClient</xref> that communicate with stateless and stateful services over interfaces that are remoted via <xref uid="microsoft.servicefabric.services.remoting.fabrictransport.runtime._fabric198c971d5cab31d2511f0c386313959d" data-throw-if-not-resolved="false">microsoft.servicefabric.services.remoting.fabrictransport.runtime.FabricTransportServiceRemotingListener</xref>. </p>
  syntax:
    content: public class FabricTransportServiceRemotingClientFactory implements ServiceRemotingClientFactory
