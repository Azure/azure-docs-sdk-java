### YamlMime:JavaType
uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs"
fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs"
name: "CommonEncryptionCbcs"
nameWithType: "CommonEncryptionCbcs"
summary: "Class for Common<wbr>Encryption<wbr>Cbcs encryption scheme."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **CommonEncryptionCbcs**"
constructors:
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.CommonEncryptionCbcs()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.CommonEncryptionCbcs()"
  name: "CommonEncryptionCbcs()"
  nameWithType: "CommonEncryptionCbcs.CommonEncryptionCbcs()"
  summary: "Creates an instance of Common<wbr>Encryption<wbr>Cbcs class."
  syntax: "public CommonEncryptionCbcs()"
  desc: "Creates an instance of CommonEncryptionCbcs class."
methods:
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearKeyEncryptionConfiguration()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearKeyEncryptionConfiguration()"
  name: "clearKeyEncryptionConfiguration()"
  nameWithType: "CommonEncryptionCbcs.clearKeyEncryptionConfiguration()"
  summary: "Get the clear<wbr>Key<wbr>Encryption<wbr>Configuration property: Optional configuration supporting Clear<wbr>Key in Common<wbr>Encryption<wbr>Cbcs encryption scheme."
  syntax: "public ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration()"
  desc: "Get the clearKeyEncryptionConfiguration property: Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme."
  returns:
    description: "the clearKeyEncryptionConfiguration value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration&text=ClearKeyEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearTracks()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.clearTracks()"
  name: "clearTracks()"
  nameWithType: "CommonEncryptionCbcs.clearTracks()"
  summary: "Get the clear<wbr>Tracks property: Representing which tracks should not be encrypted."
  syntax: "public List<TrackSelection> clearTracks()"
  desc: "Get the clearTracks property: Representing which tracks should not be encrypted."
  returns:
    description: "the clearTracks value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackSelection?alt=com.azure.resourcemanager.mediaservices.models.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.contentKeys()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.contentKeys()"
  name: "contentKeys()"
  nameWithType: "CommonEncryptionCbcs.contentKeys()"
  summary: "Get the content<wbr>Keys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  syntax: "public StreamingPolicyContentKeys contentKeys()"
  desc: "Get the contentKeys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  returns:
    description: "the contentKeys value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.drm()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.drm()"
  name: "drm()"
  nameWithType: "CommonEncryptionCbcs.drm()"
  summary: "Get the drm property: Configuration of DRMs for current encryption scheme."
  syntax: "public CbcsDrmConfiguration drm()"
  desc: "Get the drm property: Configuration of DRMs for current encryption scheme."
  returns:
    description: "the drm value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration?alt=com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration&text=CbcsDrmConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.enabledProtocols()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.enabledProtocols()"
  name: "enabledProtocols()"
  nameWithType: "CommonEncryptionCbcs.enabledProtocols()"
  summary: "Get the enabled<wbr>Protocols property: Representing supported protocols."
  syntax: "public EnabledProtocols enabledProtocols()"
  desc: "Get the enabledProtocols property: Representing supported protocols."
  returns:
    description: "the enabledProtocols value."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnabledProtocols?alt=com.azure.resourcemanager.mediaservices.models.EnabledProtocols&text=EnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.validate()"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.validate()"
  name: "validate()"
  nameWithType: "CommonEncryptionCbcs.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearKeyEncryptionConfiguration(com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  name: "withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  nameWithType: "CommonEncryptionCbcs.withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  summary: "Set the clear<wbr>Key<wbr>Encryption<wbr>Configuration property: Optional configuration supporting Clear<wbr>Key in Common<wbr>Encryption<wbr>Cbcs encryption scheme."
  parameters:
  - description: "the clearKeyEncryptionConfiguration value to set."
    name: "clearKeyEncryptionConfiguration"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration?alt=com.azure.resourcemanager.mediaservices.models.ClearKeyEncryptionConfiguration&text=ClearKeyEncryptionConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withClearKeyEncryptionConfiguration(ClearKeyEncryptionConfiguration clearKeyEncryptionConfiguration)"
  desc: "Set the clearKeyEncryptionConfiguration property: Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearTracks(java.util.List<com.azure.resourcemanager.mediaservices.models.TrackSelection>)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withClearTracks(List<TrackSelection> clearTracks)"
  name: "withClearTracks(List<TrackSelection> clearTracks)"
  nameWithType: "CommonEncryptionCbcs.withClearTracks(List<TrackSelection> clearTracks)"
  summary: "Set the clear<wbr>Tracks property: Representing which tracks should not be encrypted."
  parameters:
  - description: "the clearTracks value to set."
    name: "clearTracks"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.mediaservices.models.TrackSelection?alt=com.azure.resourcemanager.mediaservices.models.TrackSelection&text=TrackSelection\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CommonEncryptionCbcs withClearTracks(List<TrackSelection> clearTracks)"
  desc: "Set the clearTracks property: Representing which tracks should not be encrypted."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withContentKeys(com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withContentKeys(StreamingPolicyContentKeys contentKeys)"
  name: "withContentKeys(StreamingPolicyContentKeys contentKeys)"
  nameWithType: "CommonEncryptionCbcs.withContentKeys(StreamingPolicyContentKeys contentKeys)"
  summary: "Set the content<wbr>Keys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  parameters:
  - description: "the contentKeys value to set."
    name: "contentKeys"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys?alt=com.azure.resourcemanager.mediaservices.models.StreamingPolicyContentKeys&text=StreamingPolicyContentKeys\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withContentKeys(StreamingPolicyContentKeys contentKeys)"
  desc: "Set the contentKeys property: Representing default content key for each encryption scheme and separate content keys for specific tracks."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withDrm(com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withDrm(CbcsDrmConfiguration drm)"
  name: "withDrm(CbcsDrmConfiguration drm)"
  nameWithType: "CommonEncryptionCbcs.withDrm(CbcsDrmConfiguration drm)"
  summary: "Set the drm property: Configuration of DRMs for current encryption scheme."
  parameters:
  - description: "the drm value to set."
    name: "drm"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration?alt=com.azure.resourcemanager.mediaservices.models.CbcsDrmConfiguration&text=CbcsDrmConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withDrm(CbcsDrmConfiguration drm)"
  desc: "Set the drm property: Configuration of DRMs for current encryption scheme."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withEnabledProtocols(com.azure.resourcemanager.mediaservices.models.EnabledProtocols)"
  fullName: "com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs.withEnabledProtocols(EnabledProtocols enabledProtocols)"
  name: "withEnabledProtocols(EnabledProtocols enabledProtocols)"
  nameWithType: "CommonEncryptionCbcs.withEnabledProtocols(EnabledProtocols enabledProtocols)"
  summary: "Set the enabled<wbr>Protocols property: Representing supported protocols."
  parameters:
  - description: "the enabledProtocols value to set."
    name: "enabledProtocols"
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.EnabledProtocols?alt=com.azure.resourcemanager.mediaservices.models.EnabledProtocols&text=EnabledProtocols\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommonEncryptionCbcs withEnabledProtocols(EnabledProtocols enabledProtocols)"
  desc: "Set the enabledProtocols property: Representing supported protocols."
  returns:
    description: "the CommonEncryptionCbcs object itself."
    type: "<xref href=\"com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs?alt=com.azure.resourcemanager.mediaservices.models.CommonEncryptionCbcs&text=CommonEncryptionCbcs\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Class for CommonEncryptionCbcs encryption scheme."
metadata: {}
package: "com.azure.resourcemanager.mediaservices.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-mediaservices:2.3.0
