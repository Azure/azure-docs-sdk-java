### YamlMime:JavaType
uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter"
fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter"
name: "TaskAddParameter"
nameWithType: "TaskAddParameter"
summary: "An Azure Batch Task to add."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TaskAddParameter"
constructors:
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter()"
  name: "TaskAddParameter()"
  nameWithType: "TaskAddParameter.TaskAddParameter()"
  syntax: "public TaskAddParameter()"
methods:
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo()"
  name: "affinityInfo()"
  nameWithType: "TaskAddParameter.affinityInfo()"
  summary: "Get the affinity<wbr>Info value."
  syntax: "public AffinityInformation affinityInfo()"
  desc: "Get the affinityInfo value."
  returns:
    description: "the affinityInfo value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AffinityInformation?alt=com.microsoft.azure.batch.protocol.models.AffinityInformation&text=AffinityInformation\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences()"
  name: "applicationPackageReferences()"
  nameWithType: "TaskAddParameter.applicationPackageReferences()"
  summary: "Get application packages are downloaded and deployed to a shared directory, not the Task working directory."
  syntax: "public List<ApplicationPackageReference> applicationPackageReferences()"
  desc: "Get application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails."
  returns:
    description: "the applicationPackageReferences value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings()"
  name: "authenticationTokenSettings()"
  nameWithType: "TaskAddParameter.authenticationTokenSettings()"
  summary: "Get if this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key."
  syntax: "public AuthenticationTokenSettings authenticationTokenSettings()"
  desc: "Get if this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ\\_BATCH\\_AUTHENTICATION\\_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
  returns:
    description: "the authenticationTokenSettings value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings?alt=com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings&text=AuthenticationTokenSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine()"
  name: "commandLine()"
  nameWithType: "TaskAddParameter.commandLine()"
  summary: "Get for multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line."
  syntax: "public String commandLine()"
  desc: "Get for multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
  returns:
    description: "the commandLine value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints()"
  name: "constraints()"
  nameWithType: "TaskAddParameter.constraints()"
  summary: "Get if you do not specify constraints, the max<wbr>Task<wbr>Retry<wbr>Count is the max<wbr>Task<wbr>Retry<wbr>Count specified for the Job, the max<wbr>Wall<wbr>Clock<wbr>Time is infinite, and the retention<wbr>Time is 7 days."
  syntax: "public TaskConstraints constraints()"
  desc: "Get if you do not specify constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for the Job, the maxWallClockTime is infinite, and the retentionTime is 7 days."
  returns:
    description: "the constraints value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings()"
  name: "containerSettings()"
  nameWithType: "TaskAddParameter.containerSettings()"
  summary: "Get if the Pool that will run this Task has container<wbr>Configuration set, this must be set as well."
  syntax: "public TaskContainerSettings containerSettings()"
  desc: "Get if the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the containerSettings value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerSettings?alt=com.microsoft.azure.batch.protocol.models.TaskContainerSettings&text=TaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn()"
  name: "dependsOn()"
  nameWithType: "TaskAddParameter.dependsOn()"
  summary: "Get this Task will not be scheduled until all Tasks that it depends on have completed successfully."
  syntax: "public TaskDependencies dependsOn()"
  desc: "Get this Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled. If the Job does not have usesTaskDependencies set to true, and this element is present, the request fails with error code TaskDependenciesNotSpecifiedOnJob."
  returns:
    description: "the dependsOn value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskDependencies?alt=com.microsoft.azure.batch.protocol.models.TaskDependencies&text=TaskDependencies\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName()"
  name: "displayName()"
  nameWithType: "TaskAddParameter.displayName()"
  summary: "Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  syntax: "public String displayName()"
  desc: "Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the displayName value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings()"
  name: "environmentSettings()"
  nameWithType: "TaskAddParameter.environmentSettings()"
  summary: "Get the environment<wbr>Settings value."
  syntax: "public List<EnvironmentSetting> environmentSettings()"
  desc: "Get the environmentSettings value."
  returns:
    description: "the environmentSettings value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions()"
  name: "exitConditions()"
  nameWithType: "TaskAddParameter.exitConditions()"
  summary: "Get how the Batch service should respond when the Task completes."
  syntax: "public ExitConditions exitConditions()"
  desc: "Get how the Batch service should respond when the Task completes."
  returns:
    description: "the exitConditions value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.id()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.id()"
  name: "id()"
  nameWithType: "TaskAddParameter.id()"
  summary: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."
  syntax: "public String id()"
  desc: "Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within a Job that differ only by case)."
  returns:
    description: "the id value"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings()"
  name: "multiInstanceSettings()"
  nameWithType: "TaskAddParameter.multiInstanceSettings()"
  summary: "Get the multi<wbr>Instance<wbr>Settings value."
  syntax: "public MultiInstanceSettings multiInstanceSettings()"
  desc: "Get the multiInstanceSettings value."
  returns:
    description: "the multiInstanceSettings value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.MultiInstanceSettings?alt=com.microsoft.azure.batch.protocol.models.MultiInstanceSettings&text=MultiInstanceSettings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles()"
  name: "outputFiles()"
  nameWithType: "TaskAddParameter.outputFiles()"
  summary: "Get for multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed."
  syntax: "public List<OutputFile> outputFiles()"
  desc: "Get for multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed."
  returns:
    description: "the outputFiles value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.OutputFile?alt=com.microsoft.azure.batch.protocol.models.OutputFile&text=OutputFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.requiredSlots()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.requiredSlots()"
  name: "requiredSlots()"
  nameWithType: "TaskAddParameter.requiredSlots()"
  summary: "Get the default is 1."
  syntax: "public Integer requiredSlots()"
  desc: "Get the default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this must be 1."
  returns:
    description: "the requiredSlots value"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles()"
  name: "resourceFiles()"
  nameWithType: "TaskAddParameter.resourceFiles()"
  summary: "Get for multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed."
  syntax: "public List<ResourceFile> resourceFiles()"
  desc: "Get for multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers."
  returns:
    description: "the resourceFiles value"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity()"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity()"
  name: "userIdentity()"
  nameWithType: "TaskAddParameter.userIdentity()"
  summary: "Get if omitted, the Task runs as a non-administrative user unique to the Task."
  syntax: "public UserIdentity userIdentity()"
  desc: "Get if omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the userIdentity value"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.UserIdentity?alt=com.microsoft.azure.batch.protocol.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo(com.microsoft.azure.batch.protocol.models.AffinityInformation)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo(AffinityInformation affinityInfo)"
  name: "withAffinityInfo(AffinityInformation affinityInfo)"
  nameWithType: "TaskAddParameter.withAffinityInfo(AffinityInformation affinityInfo)"
  summary: "Set the affinity<wbr>Info value."
  parameters:
  - description: "the affinityInfo value to set"
    name: "affinityInfo"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AffinityInformation?alt=com.microsoft.azure.batch.protocol.models.AffinityInformation&text=AffinityInformation\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withAffinityInfo(AffinityInformation affinityInfo)"
  desc: "Set the affinityInfo value."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  name: "withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  nameWithType: "TaskAddParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  summary: "Set application packages are downloaded and deployed to a shared directory, not the Task working directory."
  parameters:
  - description: "the applicationPackageReferences value to set"
    name: "applicationPackageReferences"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TaskAddParameter withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)"
  desc: "Set application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings(com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  name: "withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  nameWithType: "TaskAddParameter.withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  summary: "Set if this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key."
  parameters:
  - description: "the authenticationTokenSettings value to set"
    name: "authenticationTokenSettings"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings?alt=com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings&text=AuthenticationTokenSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)"
  desc: "Set if this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ\\_BATCH\\_AUTHENTICATION\\_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine(String commandLine)"
  name: "withCommandLine(String commandLine)"
  nameWithType: "TaskAddParameter.withCommandLine(String commandLine)"
  summary: "Set for multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line."
  parameters:
  - description: "the commandLine value to set"
    name: "commandLine"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withCommandLine(String commandLine)"
  desc: "Set for multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using \"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints(com.microsoft.azure.batch.protocol.models.TaskConstraints)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints(TaskConstraints constraints)"
  name: "withConstraints(TaskConstraints constraints)"
  nameWithType: "TaskAddParameter.withConstraints(TaskConstraints constraints)"
  summary: "Set if you do not specify constraints, the max<wbr>Task<wbr>Retry<wbr>Count is the max<wbr>Task<wbr>Retry<wbr>Count specified for the Job, the max<wbr>Wall<wbr>Clock<wbr>Time is infinite, and the retention<wbr>Time is 7 days."
  parameters:
  - description: "the constraints value to set"
    name: "constraints"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskConstraints?alt=com.microsoft.azure.batch.protocol.models.TaskConstraints&text=TaskConstraints\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withConstraints(TaskConstraints constraints)"
  desc: "Set if you do not specify constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for the Job, the maxWallClockTime is infinite, and the retentionTime is 7 days."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings(com.microsoft.azure.batch.protocol.models.TaskContainerSettings)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings(TaskContainerSettings containerSettings)"
  name: "withContainerSettings(TaskContainerSettings containerSettings)"
  nameWithType: "TaskAddParameter.withContainerSettings(TaskContainerSettings containerSettings)"
  summary: "Set if the Pool that will run this Task has container<wbr>Configuration set, this must be set as well."
  parameters:
  - description: "the containerSettings value to set"
    name: "containerSettings"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskContainerSettings?alt=com.microsoft.azure.batch.protocol.models.TaskContainerSettings&text=TaskContainerSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withContainerSettings(TaskContainerSettings containerSettings)"
  desc: "Set if the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ\\_BATCH\\_NODE\\_ROOT\\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\\_BATCH\\_NODE\\_ROOT\\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn(com.microsoft.azure.batch.protocol.models.TaskDependencies)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn(TaskDependencies dependsOn)"
  name: "withDependsOn(TaskDependencies dependsOn)"
  nameWithType: "TaskAddParameter.withDependsOn(TaskDependencies dependsOn)"
  summary: "Set this Task will not be scheduled until all Tasks that it depends on have completed successfully."
  parameters:
  - description: "the dependsOn value to set"
    name: "dependsOn"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskDependencies?alt=com.microsoft.azure.batch.protocol.models.TaskDependencies&text=TaskDependencies\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withDependsOn(TaskDependencies dependsOn)"
  desc: "Set this Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled. If the Job does not have usesTaskDependencies set to true, and this element is present, the request fails with error code TaskDependenciesNotSpecifiedOnJob."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName(String displayName)"
  name: "withDisplayName(String displayName)"
  nameWithType: "TaskAddParameter.withDisplayName(String displayName)"
  summary: "Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  parameters:
  - description: "the displayName value to set"
    name: "displayName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withDisplayName(String displayName)"
  desc: "Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  name: "withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  nameWithType: "TaskAddParameter.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  summary: "Set the environment<wbr>Settings value."
  parameters:
  - description: "the environmentSettings value to set"
    name: "environmentSettings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.EnvironmentSetting?alt=com.microsoft.azure.batch.protocol.models.EnvironmentSetting&text=EnvironmentSetting\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TaskAddParameter withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)"
  desc: "Set the environmentSettings value."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions(com.microsoft.azure.batch.protocol.models.ExitConditions)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions(ExitConditions exitConditions)"
  name: "withExitConditions(ExitConditions exitConditions)"
  nameWithType: "TaskAddParameter.withExitConditions(ExitConditions exitConditions)"
  summary: "Set how the Batch service should respond when the Task completes."
  parameters:
  - description: "the exitConditions value to set"
    name: "exitConditions"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.ExitConditions?alt=com.microsoft.azure.batch.protocol.models.ExitConditions&text=ExitConditions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withExitConditions(ExitConditions exitConditions)"
  desc: "Set how the Batch service should respond when the Task completes."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId(java.lang.String)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId(String id)"
  name: "withId(String id)"
  nameWithType: "TaskAddParameter.withId(String id)"
  summary: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."
  parameters:
  - description: "the id value to set"
    name: "id"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withId(String id)"
  desc: "Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within a Job that differ only by case)."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings(com.microsoft.azure.batch.protocol.models.MultiInstanceSettings)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)"
  name: "withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)"
  nameWithType: "TaskAddParameter.withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)"
  summary: "Set the multi<wbr>Instance<wbr>Settings value."
  parameters:
  - description: "the multiInstanceSettings value to set"
    name: "multiInstanceSettings"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.MultiInstanceSettings?alt=com.microsoft.azure.batch.protocol.models.MultiInstanceSettings&text=MultiInstanceSettings\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)"
  desc: "Set the multiInstanceSettings value."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles(java.util.List<com.microsoft.azure.batch.protocol.models.OutputFile>)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles(List<OutputFile> outputFiles)"
  name: "withOutputFiles(List<OutputFile> outputFiles)"
  nameWithType: "TaskAddParameter.withOutputFiles(List<OutputFile> outputFiles)"
  summary: "Set for multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed."
  parameters:
  - description: "the outputFiles value to set"
    name: "outputFiles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.OutputFile?alt=com.microsoft.azure.batch.protocol.models.OutputFile&text=OutputFile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TaskAddParameter withOutputFiles(List<OutputFile> outputFiles)"
  desc: "Set for multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withRequiredSlots(java.lang.Integer)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withRequiredSlots(Integer requiredSlots)"
  name: "withRequiredSlots(Integer requiredSlots)"
  nameWithType: "TaskAddParameter.withRequiredSlots(Integer requiredSlots)"
  summary: "Set the default is 1."
  parameters:
  - description: "the requiredSlots value to set"
    name: "requiredSlots"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withRequiredSlots(Integer requiredSlots)"
  desc: "Set the default is 1. A Task can only be scheduled to run on a compute node if the node has enough free scheduling slots available. For multi-instance Tasks, this must be 1."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles(java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles(List<ResourceFile> resourceFiles)"
  name: "withResourceFiles(List<ResourceFile> resourceFiles)"
  nameWithType: "TaskAddParameter.withResourceFiles(List<ResourceFile> resourceFiles)"
  summary: "Set for multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed."
  parameters:
  - description: "the resourceFiles value to set"
    name: "resourceFiles"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.batch.protocol.models.ResourceFile?alt=com.microsoft.azure.batch.protocol.models.ResourceFile&text=ResourceFile\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public TaskAddParameter withResourceFiles(List<ResourceFile> resourceFiles)"
  desc: "Set for multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity(com.microsoft.azure.batch.protocol.models.UserIdentity)"
  fullName: "com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity(UserIdentity userIdentity)"
  name: "withUserIdentity(UserIdentity userIdentity)"
  nameWithType: "TaskAddParameter.withUserIdentity(UserIdentity userIdentity)"
  summary: "Set if omitted, the Task runs as a non-administrative user unique to the Task."
  parameters:
  - description: "the userIdentity value to set"
    name: "userIdentity"
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.UserIdentity?alt=com.microsoft.azure.batch.protocol.models.UserIdentity&text=UserIdentity\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TaskAddParameter withUserIdentity(UserIdentity userIdentity)"
  desc: "Set if omitted, the Task runs as a non-administrative user unique to the Task."
  returns:
    description: "the TaskAddParameter object itself."
    type: "<xref href=\"com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "An Azure Batch Task to add. Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing."
metadata: {}
package: "com.microsoft.azure.batch.protocol.models"
artifact: com.microsoft.azure:azure-batch:9.0.0
