### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  id: TaskAddParameter
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.id()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity()
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo(com.microsoft.azure.batch.protocol.models.AffinityInformation)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings(com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints(com.microsoft.azure.batch.protocol.models.TaskConstraints)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings(com.microsoft.azure.batch.protocol.models.TaskContainerSettings)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn(com.microsoft.azure.batch.protocol.models.TaskDependencies)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions(com.microsoft.azure.batch.protocol.models.ExitConditions)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings(com.microsoft.azure.batch.protocol.models.MultiInstanceSettings)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles(java.util.List<com.microsoft.azure.batch.protocol.models.OutputFile>)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles(java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>)
  - com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity(com.microsoft.azure.batch.protocol.models.UserIdentity)
  langs:
  - java
  name: TaskAddParameter
  nameWithType: TaskAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: An Azure Batch Task to add. Batch will retry Tasks when a recovery operation is triggered on a Node. Examples of recovery operations include (but are not limited to) when an unhealthy Node is rebooted or a Compute Node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all Tasks should be idempotent. This means Tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running Tasks is to use some form of checkpointing.
  syntax:
    content: public class TaskAddParameter
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter()
  id: TaskAddParameter()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: TaskAddParameter()
  nameWithType: TaskAddParameter.TaskAddParameter()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public TaskAddParameter()
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo()
  id: affinityInfo()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: affinityInfo()
  nameWithType: TaskAddParameter.affinityInfo()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the affinityInfo value.
  syntax:
    content: public AffinityInformation affinityInfo()
    return:
      type: com.microsoft.azure.batch.protocol.models.AffinityInformation
      description: the affinityInfo value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences()
  id: applicationPackageReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: applicationPackageReferences()
  nameWithType: TaskAddParameter.applicationPackageReferences()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails.
  syntax:
    content: public List<ApplicationPackageReference> applicationPackageReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings()
  id: authenticationTokenSettings()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: authenticationTokenSettings()
  nameWithType: TaskAddParameter.authenticationTokenSettings()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ\_BATCH\_AUTHENTICATION\_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job.
  syntax:
    content: public AuthenticationTokenSettings authenticationTokenSettings()
    return:
      type: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
      description: the authenticationTokenSettings value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine()
  id: commandLine()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: commandLine()
  nameWithType: TaskAddParameter.commandLine()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
  syntax:
    content: public String commandLine()
    return:
      type: java.lang.String
      description: the commandLine value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints()
  id: constraints()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: constraints()
  nameWithType: TaskAddParameter.constraints()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if you do not specify constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for the Job, the maxWallClockTime is infinite, and the retentionTime is 7 days.
  syntax:
    content: public TaskConstraints constraints()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskConstraints
      description: the constraints value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings()
  id: containerSettings()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: containerSettings()
  nameWithType: TaskAddParameter.containerSettings()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ\_BATCH\_NODE\_ROOT\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\_BATCH\_NODE\_ROOT\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.
  syntax:
    content: public TaskContainerSettings containerSettings()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
      description: the containerSettings value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn()
  id: dependsOn()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: dependsOn()
  nameWithType: TaskAddParameter.dependsOn()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled. If the Job does not have usesTaskDependencies set to true, and this element is present, the request fails with error code TaskDependenciesNotSpecifiedOnJob.
  syntax:
    content: public TaskDependencies dependsOn()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskDependencies
      description: the dependsOn value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName()
  id: displayName()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: displayName()
  nameWithType: TaskAddParameter.displayName()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public String displayName()
    return:
      type: java.lang.String
      description: the displayName value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings()
  id: environmentSettings()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: environmentSettings()
  nameWithType: TaskAddParameter.environmentSettings()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the environmentSettings value.
  syntax:
    content: public List<EnvironmentSetting> environmentSettings()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>
      description: the environmentSettings value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions()
  id: exitConditions()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: exitConditions()
  nameWithType: TaskAddParameter.exitConditions()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get how the Batch service should respond when the Task completes.
  syntax:
    content: public ExitConditions exitConditions()
    return:
      type: com.microsoft.azure.batch.protocol.models.ExitConditions
      description: the exitConditions value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.id()
  id: id()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: id()
  nameWithType: TaskAddParameter.id()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.id()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.id*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within a Job that differ only by case).
  syntax:
    content: public String id()
    return:
      type: java.lang.String
      description: the id value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings()
  id: multiInstanceSettings()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: multiInstanceSettings()
  nameWithType: TaskAddParameter.multiInstanceSettings()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the multiInstanceSettings value.
  syntax:
    content: public MultiInstanceSettings multiInstanceSettings()
    return:
      type: com.microsoft.azure.batch.protocol.models.MultiInstanceSettings
      description: the multiInstanceSettings value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles()
  id: outputFiles()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: outputFiles()
  nameWithType: TaskAddParameter.outputFiles()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.
  syntax:
    content: public List<OutputFile> outputFiles()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.OutputFile>
      description: the outputFiles value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles()
  id: resourceFiles()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: resourceFiles()
  nameWithType: TaskAddParameter.resourceFiles()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.
  syntax:
    content: public List<ResourceFile> resourceFiles()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>
      description: the resourceFiles value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity()
  id: userIdentity()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: userIdentity()
  nameWithType: TaskAddParameter.userIdentity()
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity()
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if omitted, the Task runs as a non-administrative user unique to the Task.
  syntax:
    content: public UserIdentity userIdentity()
    return:
      type: com.microsoft.azure.batch.protocol.models.UserIdentity
      description: the userIdentity value
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo(com.microsoft.azure.batch.protocol.models.AffinityInformation)
  id: withAffinityInfo(com.microsoft.azure.batch.protocol.models.AffinityInformation)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withAffinityInfo(AffinityInformation affinityInfo)
  nameWithType: TaskAddParameter.withAffinityInfo(AffinityInformation affinityInfo)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo(AffinityInformation affinityInfo)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the affinityInfo value.
  syntax:
    content: public TaskAddParameter withAffinityInfo(AffinityInformation affinityInfo)
    parameters:
    - id: affinityInfo
      type: com.microsoft.azure.batch.protocol.models.AffinityInformation
      description: the affinityInfo value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  id: withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: TaskAddParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set application packages are downloaded and deployed to a shared directory, not the Task working directory. Therefore, if a referenced package is already on the Node, and is up to date, then it is not re-downloaded; the existing copy on the Compute Node is used. If a referenced Package cannot be installed, for example because the package has been deleted or because download failed, the Task fails.
  syntax:
    content: public TaskAddParameter withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
    parameters:
    - id: applicationPackageReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings(com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings)
  id: withAuthenticationTokenSettings(com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
  nameWithType: TaskAddParameter.withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if this property is set, the Batch service provides the Task with an authentication token which can be used to authenticate Batch service operations without requiring an Account access key. The token is provided via the AZ\_BATCH\_AUTHENTICATION\_TOKEN environment variable. The operations that the Task can carry out using the token depend on the settings. For example, a Task can request Job permissions in order to add other Tasks to the Job, or check the status of the Job or of other Tasks under the Job.
  syntax:
    content: public TaskAddParameter withAuthenticationTokenSettings(AuthenticationTokenSettings authenticationTokenSettings)
    parameters:
    - id: authenticationTokenSettings
      type: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
      description: the authenticationTokenSettings value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine(java.lang.String)
  id: withCommandLine(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withCommandLine(String commandLine)
  nameWithType: TaskAddParameter.withCommandLine(String commandLine)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine(String commandLine)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for multi-instance Tasks, the command line is executed as the primary Task, after the primary Task and all subtasks have finished executing the coordination command line. The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the command line refers to file paths, it should use a relative path (relative to the Task working directory), or use the Batch provided environment variable (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
  syntax:
    content: public TaskAddParameter withCommandLine(String commandLine)
    parameters:
    - id: commandLine
      type: java.lang.String
      description: the commandLine value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints(com.microsoft.azure.batch.protocol.models.TaskConstraints)
  id: withConstraints(com.microsoft.azure.batch.protocol.models.TaskConstraints)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withConstraints(TaskConstraints constraints)
  nameWithType: TaskAddParameter.withConstraints(TaskConstraints constraints)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints(TaskConstraints constraints)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if you do not specify constraints, the maxTaskRetryCount is the maxTaskRetryCount specified for the Job, the maxWallClockTime is infinite, and the retentionTime is 7 days.
  syntax:
    content: public TaskAddParameter withConstraints(TaskConstraints constraints)
    parameters:
    - id: constraints
      type: com.microsoft.azure.batch.protocol.models.TaskConstraints
      description: the constraints value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings(com.microsoft.azure.batch.protocol.models.TaskContainerSettings)
  id: withContainerSettings(com.microsoft.azure.batch.protocol.models.TaskContainerSettings)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withContainerSettings(TaskContainerSettings containerSettings)
  nameWithType: TaskAddParameter.withContainerSettings(TaskContainerSettings containerSettings)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings(TaskContainerSettings containerSettings)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if the Pool that will run this Task has containerConfiguration set, this must be set as well. If the Pool that will run this Task doesn't have containerConfiguration set, this must not be set. When this is specified, all directories recursively below the AZ\_BATCH\_NODE\_ROOT\_DIR (the root of Azure Batch directories on the node) are mapped into the container, all Task environment variables are mapped into the container, and the Task command line is executed in the container. Files produced in the container outside of AZ\_BATCH\_NODE\_ROOT\_DIR might not be reflected to the host disk, meaning that Batch file APIs will not be able to access those files.
  syntax:
    content: public TaskAddParameter withContainerSettings(TaskContainerSettings containerSettings)
    parameters:
    - id: containerSettings
      type: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
      description: the containerSettings value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn(com.microsoft.azure.batch.protocol.models.TaskDependencies)
  id: withDependsOn(com.microsoft.azure.batch.protocol.models.TaskDependencies)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withDependsOn(TaskDependencies dependsOn)
  nameWithType: TaskAddParameter.withDependsOn(TaskDependencies dependsOn)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn(TaskDependencies dependsOn)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this Task will not be scheduled until all Tasks that it depends on have completed successfully. If any of those Tasks fail and exhaust their retry counts, this Task will never be scheduled. If the Job does not have usesTaskDependencies set to true, and this element is present, the request fails with error code TaskDependenciesNotSpecifiedOnJob.
  syntax:
    content: public TaskAddParameter withDependsOn(TaskDependencies dependsOn)
    parameters:
    - id: dependsOn
      type: com.microsoft.azure.batch.protocol.models.TaskDependencies
      description: the dependsOn value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName(java.lang.String)
  id: withDisplayName(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withDisplayName(String displayName)
  nameWithType: TaskAddParameter.withDisplayName(String displayName)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName(String displayName)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public TaskAddParameter withDisplayName(String displayName)
    parameters:
    - id: displayName
      type: java.lang.String
      description: the displayName value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)
  id: withEnvironmentSettings(java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  nameWithType: TaskAddParameter.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the environmentSettings value.
  syntax:
    content: public TaskAddParameter withEnvironmentSettings(List<EnvironmentSetting> environmentSettings)
    parameters:
    - id: environmentSettings
      type: java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>
      description: the environmentSettings value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions(com.microsoft.azure.batch.protocol.models.ExitConditions)
  id: withExitConditions(com.microsoft.azure.batch.protocol.models.ExitConditions)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withExitConditions(ExitConditions exitConditions)
  nameWithType: TaskAddParameter.withExitConditions(ExitConditions exitConditions)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions(ExitConditions exitConditions)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set how the Batch service should respond when the Task completes.
  syntax:
    content: public TaskAddParameter withExitConditions(ExitConditions exitConditions)
    parameters:
    - id: exitConditions
      type: com.microsoft.azure.batch.protocol.models.ExitConditions
      description: the exitConditions value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId(java.lang.String)
  id: withId(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withId(String id)
  nameWithType: TaskAddParameter.withId(String id)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId(String id)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within a Job that differ only by case).
  syntax:
    content: public TaskAddParameter withId(String id)
    parameters:
    - id: id
      type: java.lang.String
      description: the id value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings(com.microsoft.azure.batch.protocol.models.MultiInstanceSettings)
  id: withMultiInstanceSettings(com.microsoft.azure.batch.protocol.models.MultiInstanceSettings)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)
  nameWithType: TaskAddParameter.withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the multiInstanceSettings value.
  syntax:
    content: public TaskAddParameter withMultiInstanceSettings(MultiInstanceSettings multiInstanceSettings)
    parameters:
    - id: multiInstanceSettings
      type: com.microsoft.azure.batch.protocol.models.MultiInstanceSettings
      description: the multiInstanceSettings value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles(java.util.List<com.microsoft.azure.batch.protocol.models.OutputFile>)
  id: withOutputFiles(java.util.List<com.microsoft.azure.batch.protocol.models.OutputFile>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withOutputFiles(List<OutputFile> outputFiles)
  nameWithType: TaskAddParameter.withOutputFiles(List<OutputFile> outputFiles)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles(List<OutputFile> outputFiles)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for multi-instance Tasks, the files will only be uploaded from the Compute Node on which the primary Task is executed.
  syntax:
    content: public TaskAddParameter withOutputFiles(List<OutputFile> outputFiles)
    parameters:
    - id: outputFiles
      type: java.util.List<com.microsoft.azure.batch.protocol.models.OutputFile>
      description: the outputFiles value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles(java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>)
  id: withResourceFiles(java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withResourceFiles(List<ResourceFile> resourceFiles)
  nameWithType: TaskAddParameter.withResourceFiles(List<ResourceFile> resourceFiles)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles(List<ResourceFile> resourceFiles)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for multi-instance Tasks, the resource files will only be downloaded to the Compute Node on which the primary Task is executed. There is a maximum size for the list of resource files. When the max size is exceeded, the request will fail and the response error code will be RequestEntityTooLarge. If this occurs, the collection of ResourceFiles must be reduced in size. This can be achieved using .zip files, Application Packages, or Docker Containers.
  syntax:
    content: public TaskAddParameter withResourceFiles(List<ResourceFile> resourceFiles)
    parameters:
    - id: resourceFiles
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>
      description: the resourceFiles value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity(com.microsoft.azure.batch.protocol.models.UserIdentity)
  id: withUserIdentity(com.microsoft.azure.batch.protocol.models.UserIdentity)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.TaskAddParameter
  langs:
  - java
  name: withUserIdentity(UserIdentity userIdentity)
  nameWithType: TaskAddParameter.withUserIdentity(UserIdentity userIdentity)
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity(UserIdentity userIdentity)
  overload: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if omitted, the Task runs as a non-administrative user unique to the Task.
  syntax:
    content: public TaskAddParameter withUserIdentity(UserIdentity userIdentity)
    parameters:
    - id: userIdentity
      type: com.microsoft.azure.batch.protocol.models.UserIdentity
      description: the userIdentity value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskAddParameter
      description: the TaskAddParameter object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter*
  name: TaskAddParameter
  nameWithType: TaskAddParameter.TaskAddParameter
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.TaskAddParameter
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.id*
  name: id
  nameWithType: TaskAddParameter.id
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.id
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId*
  name: withId
  nameWithType: TaskAddParameter.withId
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withId
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName*
  name: displayName
  nameWithType: TaskAddParameter.displayName
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.displayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName*
  name: withDisplayName
  nameWithType: TaskAddParameter.withDisplayName
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDisplayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine*
  name: commandLine
  nameWithType: TaskAddParameter.commandLine
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.commandLine
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine*
  name: withCommandLine
  nameWithType: TaskAddParameter.withCommandLine
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withCommandLine
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
  name: TaskContainerSettings
  nameWithType: TaskContainerSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskContainerSettings
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings*
  name: containerSettings
  nameWithType: TaskAddParameter.containerSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.containerSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings*
  name: withContainerSettings
  nameWithType: TaskAddParameter.withContainerSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withContainerSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.ExitConditions
  name: ExitConditions
  nameWithType: ExitConditions
  fullName: com.microsoft.azure.batch.protocol.models.ExitConditions
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions*
  name: exitConditions
  nameWithType: TaskAddParameter.exitConditions
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.exitConditions
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions*
  name: withExitConditions
  nameWithType: TaskAddParameter.withExitConditions
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withExitConditions
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.ResourceFile>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ResourceFile
    name: ResourceFile
    fullName: com.microsoft.azure.batch.protocol.models.ResourceFile
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles*
  name: resourceFiles
  nameWithType: TaskAddParameter.resourceFiles
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.resourceFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles*
  name: withResourceFiles
  nameWithType: TaskAddParameter.withResourceFiles
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withResourceFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.OutputFile>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.OutputFile
    name: OutputFile
    fullName: com.microsoft.azure.batch.protocol.models.OutputFile
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles*
  name: outputFiles
  nameWithType: TaskAddParameter.outputFiles
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.outputFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles*
  name: withOutputFiles
  nameWithType: TaskAddParameter.withOutputFiles
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withOutputFiles
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.EnvironmentSetting>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
    name: EnvironmentSetting
    fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings*
  name: environmentSettings
  nameWithType: TaskAddParameter.environmentSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.environmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings*
  name: withEnvironmentSettings
  nameWithType: TaskAddParameter.withEnvironmentSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withEnvironmentSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.AffinityInformation
  name: AffinityInformation
  nameWithType: AffinityInformation
  fullName: com.microsoft.azure.batch.protocol.models.AffinityInformation
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo*
  name: affinityInfo
  nameWithType: TaskAddParameter.affinityInfo
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.affinityInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo*
  name: withAffinityInfo
  nameWithType: TaskAddParameter.withAffinityInfo
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAffinityInfo
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskConstraints
  name: TaskConstraints
  nameWithType: TaskConstraints
  fullName: com.microsoft.azure.batch.protocol.models.TaskConstraints
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints*
  name: constraints
  nameWithType: TaskAddParameter.constraints
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.constraints
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints*
  name: withConstraints
  nameWithType: TaskAddParameter.withConstraints
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withConstraints
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.UserIdentity
  name: UserIdentity
  nameWithType: UserIdentity
  fullName: com.microsoft.azure.batch.protocol.models.UserIdentity
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity*
  name: userIdentity
  nameWithType: TaskAddParameter.userIdentity
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.userIdentity
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity*
  name: withUserIdentity
  nameWithType: TaskAddParameter.withUserIdentity
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withUserIdentity
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.MultiInstanceSettings
  name: MultiInstanceSettings
  nameWithType: MultiInstanceSettings
  fullName: com.microsoft.azure.batch.protocol.models.MultiInstanceSettings
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings*
  name: multiInstanceSettings
  nameWithType: TaskAddParameter.multiInstanceSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.multiInstanceSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings*
  name: withMultiInstanceSettings
  nameWithType: TaskAddParameter.withMultiInstanceSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withMultiInstanceSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskDependencies
  name: TaskDependencies
  nameWithType: TaskDependencies
  fullName: com.microsoft.azure.batch.protocol.models.TaskDependencies
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn*
  name: dependsOn
  nameWithType: TaskAddParameter.dependsOn
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.dependsOn
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn*
  name: withDependsOn
  nameWithType: TaskAddParameter.withDependsOn
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withDependsOn
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    name: ApplicationPackageReference
    fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences*
  name: applicationPackageReferences
  nameWithType: TaskAddParameter.applicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.applicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences*
  name: withApplicationPackageReferences
  nameWithType: TaskAddParameter.withApplicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withApplicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
  name: AuthenticationTokenSettings
  nameWithType: AuthenticationTokenSettings
  fullName: com.microsoft.azure.batch.protocol.models.AuthenticationTokenSettings
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings*
  name: authenticationTokenSettings
  nameWithType: TaskAddParameter.authenticationTokenSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.authenticationTokenSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings*
  name: withAuthenticationTokenSettings
  nameWithType: TaskAddParameter.withAuthenticationTokenSettings
  fullName: com.microsoft.azure.batch.protocol.models.TaskAddParameter.withAuthenticationTokenSettings
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.ResourceFile
  name: ResourceFile
  nameWithType: ResourceFile
  fullName: com.microsoft.azure.batch.protocol.models.ResourceFile
- uid: com.microsoft.azure.batch.protocol.models.OutputFile
  name: OutputFile
  nameWithType: OutputFile
  fullName: com.microsoft.azure.batch.protocol.models.OutputFile
- uid: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
  name: EnvironmentSetting
  nameWithType: EnvironmentSetting
  fullName: com.microsoft.azure.batch.protocol.models.EnvironmentSetting
- uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  name: ApplicationPackageReference
  nameWithType: ApplicationPackageReference
  fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
