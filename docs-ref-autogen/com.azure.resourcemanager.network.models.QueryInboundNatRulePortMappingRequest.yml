### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest"
fullName: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest"
name: "QueryInboundNatRulePortMappingRequest"
nameWithType: "QueryInboundNatRulePortMappingRequest"
summary: "The request for a QueryInboundNatRulePortMapping API. Either IpConfiguration or IpAddress should be set."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class QueryInboundNatRulePortMappingRequest"
constructors:
- uid: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.QueryInboundNatRulePortMappingRequest()"
  fullName: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.QueryInboundNatRulePortMappingRequest()"
  name: "QueryInboundNatRulePortMappingRequest()"
  nameWithType: "QueryInboundNatRulePortMappingRequest.QueryInboundNatRulePortMappingRequest()"
  syntax: "public QueryInboundNatRulePortMappingRequest()"
methods:
- uid: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.ipAddress()"
  fullName: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.ipAddress()"
  name: "ipAddress()"
  nameWithType: "QueryInboundNatRulePortMappingRequest.ipAddress()"
  summary: "Get the ipAddress property: IP address set in load balancer backend address."
  syntax: "public String ipAddress()"
  returns:
    description: "the ipAddress value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.ipConfiguration()"
  fullName: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.ipConfiguration()"
  name: "ipConfiguration()"
  nameWithType: "QueryInboundNatRulePortMappingRequest.ipConfiguration()"
  summary: "Get the ipConfiguration property: NetworkInterfaceIPConfiguration set in load balancer backend address."
  syntax: "public SubResource ipConfiguration()"
  returns:
    description: "the ipConfiguration value."
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.validate()"
  fullName: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.validate()"
  name: "validate()"
  nameWithType: "QueryInboundNatRulePortMappingRequest.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
- uid: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.withIpAddress(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.withIpAddress(String ipAddress)"
  name: "withIpAddress(String ipAddress)"
  nameWithType: "QueryInboundNatRulePortMappingRequest.withIpAddress(String ipAddress)"
  summary: "Set the ipAddress property: IP address set in load balancer backend address."
  parameters:
  - description: "the ipAddress value to set."
    name: "ipAddress"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryInboundNatRulePortMappingRequest withIpAddress(String ipAddress)"
  returns:
    description: "the QueryInboundNatRulePortMappingRequest object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest?alt=com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest&text=QueryInboundNatRulePortMappingRequest\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.withIpConfiguration(com.azure.core.management.SubResource)"
  fullName: "com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest.withIpConfiguration(SubResource ipConfiguration)"
  name: "withIpConfiguration(SubResource ipConfiguration)"
  nameWithType: "QueryInboundNatRulePortMappingRequest.withIpConfiguration(SubResource ipConfiguration)"
  summary: "Set the ipConfiguration property: NetworkInterfaceIPConfiguration set in load balancer backend address."
  parameters:
  - description: "the ipConfiguration value to set."
    name: "ipConfiguration"
    type: "<xref href=\"com.azure.core.management.SubResource?alt=com.azure.core.management.SubResource&text=SubResource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public QueryInboundNatRulePortMappingRequest withIpConfiguration(SubResource ipConfiguration)"
  returns:
    description: "the QueryInboundNatRulePortMappingRequest object itself."
    type: "<xref href=\"com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest?alt=com.azure.resourcemanager.network.models.QueryInboundNatRulePortMappingRequest&text=QueryInboundNatRulePortMappingRequest\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.14.0
