### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.Recognizer"
fullName: "com.microsoft.cognitiveservices.speech.Recognizer"
name: "Recognizer"
nameWithType: "Recognizer"
summary: "Defines the base class Recognizer which mainly contains common event handlers."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **Recognizer**</br> implements <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html\">AutoCloseable</a>"
constructors:
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.Recognizer(com.microsoft.cognitiveservices.speech.audio.AudioConfig)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.Recognizer(AudioConfig audioInput)"
  name: "Recognizer(AudioConfig audioInput)"
  nameWithType: "Recognizer.Recognizer(AudioConfig audioInput)"
  summary: "Creates and initializes an instance of a Recognizer"
  modifiers:
  - "protected"
  parameters:
  - description: "An optional audio input configuration associated with the recognizer"
    name: "audioInput"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Recognizer(AudioConfig audioInput)"
  desc: "Creates and initializes an instance of a Recognizer"
fields:
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.disposed"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.disposed"
  name: "disposed"
  nameWithType: "Recognizer.disposed"
  summary: "Internal flag to indicate whether the object has been disposed."
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected boolean disposed"
  desc: "Internal flag to indicate whether the object has been disposed."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.eventCounter"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.eventCounter"
  name: "eventCounter"
  nameWithType: "Recognizer.eventCounter"
  summary: "Internal event counter to track event registration status."
  modifiers:
  - "protected"
  field:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/AtomicInteger.html\">AtomicInteger</a>"
  syntax: "protected AtomicInteger eventCounter"
  desc: "Internal event counter to track event registration status."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStarted"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStarted"
  name: "sessionStarted"
  nameWithType: "Recognizer.sessionStarted"
  summary: "Defines event handler for session started event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.SessionEventArgs?alt=com.microsoft.cognitiveservices.speech.SessionEventArgs&text=SessionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<SessionEventArgs> sessionStarted"
  desc: "Defines event handler for session started event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStopped"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStopped"
  name: "sessionStopped"
  nameWithType: "Recognizer.sessionStopped"
  summary: "Defines event handler for session stopped event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.SessionEventArgs?alt=com.microsoft.cognitiveservices.speech.SessionEventArgs&text=SessionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<SessionEventArgs> sessionStopped"
  desc: "Defines event handler for session stopped event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetected"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetected"
  name: "speechEndDetected"
  nameWithType: "Recognizer.speechEndDetected"
  summary: "Defines event handler for speech end detected event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.RecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.RecognitionEventArgs&text=RecognitionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<RecognitionEventArgs> speechEndDetected"
  desc: "Defines event handler for speech end detected event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetected"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetected"
  name: "speechStartDetected"
  nameWithType: "Recognizer.speechStartDetected"
  summary: "Defines event handler for speech start detected event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.RecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.RecognitionEventArgs&text=RecognitionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<RecognitionEventArgs> speechStartDetected"
  desc: "Defines event handler for speech start detected event."
methods:
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.canceledSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.canceledSetCallback(long recoHandle)"
  name: "canceledSetCallback(long recoHandle)"
  nameWithType: "Recognizer.canceledSetCallback(long recoHandle)"
  summary: "Internal method to set canceled callback."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long canceledSetCallback(long recoHandle)"
  desc: "Internal method to set canceled callback."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.close()"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.close()"
  name: "close()"
  nameWithType: "Recognizer.close()"
  summary: "Dispose of associated resources."
  syntax: "public void close()"
  desc: "Dispose of associated resources. Note: close() must be called in order to release underlying resources held by the object."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.dispose(boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.dispose(boolean disposing)"
  name: "dispose(boolean disposing)"
  nameWithType: "Recognizer.dispose(boolean disposing)"
  summary: "This method performs cleanup of resources."
  modifiers:
  - "protected"
  parameters:
  - description: "Flag to request disposal."
    name: "disposing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void dispose(boolean disposing)"
  desc: "This method performs cleanup of resources. The Boolean parameter disposing indicates whether the method is called from Dispose (if disposing is true) or from the finalizer (if disposing is false). Derived classes should override this method to dispose resource if needed."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.doAsyncRecognitionAction(java.lang.Runnable)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.doAsyncRecognitionAction(Runnable recoImplAction)"
  name: "doAsyncRecognitionAction(Runnable recoImplAction)"
  nameWithType: "Recognizer.doAsyncRecognitionAction(Runnable recoImplAction)"
  summary: "Internal method to run recognition operation."
  modifiers:
  - "protected"
  parameters:
  - description: "The runnable of the recognition operation."
    name: "recoImplAction"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html\">Runnable</a>"
  syntax: "protected void doAsyncRecognitionAction(Runnable recoImplAction)"
  desc: "Internal method to run recognition operation."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.getImpl()"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.getImpl()"
  name: "getImpl()"
  nameWithType: "Recognizer.getImpl()"
  summary: "Returns the internal recognizer instance"
  syntax: "public SafeHandle getImpl()"
  desc: "Returns the internal recognizer instance"
  returns:
    description: "The internal recognizer instance"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.getPropertyBagFromRecognizerHandle(com.microsoft.cognitiveservices.speech.util.SafeHandle,com.microsoft.cognitiveservices.speech.util.IntRef)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  name: "getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  nameWithType: "Recognizer.getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  summary: "Internal method to get the property bag from the recognizer handle."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  - description: "The native property handle."
    name: "propertyHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.IntRef?alt=com.microsoft.cognitiveservices.speech.util.IntRef&text=IntRef\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  desc: "Internal method to get the property bag from the recognizer handle."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.recognize()"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.recognize()"
  name: "recognize()"
  nameWithType: "Recognizer.recognize()"
  summary: "Internal method to start recognize once operation."
  modifiers:
  - "protected"
  syntax: "protected long recognize()"
  desc: "Internal method to start recognize once operation."
  returns:
    description: "The native result handle of the recognition."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.recognizedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.recognizedSetCallback(long recoHandle)"
  name: "recognizedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.recognizedSetCallback(long recoHandle)"
  summary: "Internal method to set recognized callback."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long recognizedSetCallback(long recoHandle)"
  desc: "Internal method to set recognized callback."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.recognizingSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.recognizingSetCallback(long recoHandle)"
  name: "recognizingSetCallback(long recoHandle)"
  nameWithType: "Recognizer.recognizingSetCallback(long recoHandle)"
  summary: "Internal method to set recognizing callback."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long recognizingSetCallback(long recoHandle)"
  desc: "Internal method to set recognizing callback."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedEventCallback(long eventArgs)"
  name: "sessionStartedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.sessionStartedEventCallback(long eventArgs)"
  summary: "Internal method to handle native session started event."
  modifiers:
  - "protected"
  parameters:
  - description: "The native event args."
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void sessionStartedEventCallback(long eventArgs)"
  desc: "Internal method to handle native session started event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedSetCallback(long recoHandle)"
  name: "sessionStartedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.sessionStartedSetCallback(long recoHandle)"
  summary: "Internal method to set session started callback."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long sessionStartedSetCallback(long recoHandle)"
  desc: "Internal method to set session started callback."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedEventCallback(long eventArgs)"
  name: "sessionStoppedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.sessionStoppedEventCallback(long eventArgs)"
  summary: "Internal method to handle native session stopped event."
  modifiers:
  - "protected"
  parameters:
  - description: "The native event args."
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void sessionStoppedEventCallback(long eventArgs)"
  desc: "Internal method to handle native session stopped event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedSetCallback(long recoHandle)"
  name: "sessionStoppedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.sessionStoppedSetCallback(long recoHandle)"
  summary: "Internal method to set session stopped callback."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long sessionStoppedSetCallback(long recoHandle)"
  desc: "Internal method to set session stopped callback."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedEventCallback(long eventArgs)"
  name: "speechEndDetectedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.speechEndDetectedEventCallback(long eventArgs)"
  summary: "Internal method to handle native speech end detected event."
  modifiers:
  - "protected"
  parameters:
  - description: "The native event args."
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void speechEndDetectedEventCallback(long eventArgs)"
  desc: "Internal method to handle native speech end detected event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedSetCallback(long recoHandle)"
  name: "speechEndDetectedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.speechEndDetectedSetCallback(long recoHandle)"
  summary: "Internal method to set speech end detected callback."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long speechEndDetectedSetCallback(long recoHandle)"
  desc: "Internal method to set speech end detected callback."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedEventCallback(long eventArgs)"
  name: "speechStartDetectedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.speechStartDetectedEventCallback(long eventArgs)"
  summary: "Internal method to handle native speech start detected event."
  modifiers:
  - "protected"
  parameters:
  - description: "The native event args."
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void speechStartDetectedEventCallback(long eventArgs)"
  desc: "Internal method to handle native speech start detected event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedSetCallback(long recoHandle)"
  name: "speechStartDetectedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.speechStartDetectedSetCallback(long recoHandle)"
  summary: "Internal method to set speech start detected callback."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long speechStartDetectedSetCallback(long recoHandle)"
  desc: "Internal method to set speech start detected callback."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.startContinuousRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.startContinuousRecognition(SafeHandle recoHandle)"
  name: "startContinuousRecognition(SafeHandle recoHandle)"
  nameWithType: "Recognizer.startContinuousRecognition(SafeHandle recoHandle)"
  summary: "Internal method to start continuous recognition operation."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long startContinuousRecognition(SafeHandle recoHandle)"
  desc: "Internal method to start continuous recognition operation."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.startKeywordRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle,com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  name: "startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  nameWithType: "Recognizer.startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  summary: "Internal method to start keyword recognition operation."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  - description: "The native keyword model handle."
    name: "keywordModelHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  desc: "Internal method to start keyword recognition operation."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.stopContinuousRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.stopContinuousRecognition(SafeHandle recoHandle)"
  name: "stopContinuousRecognition(SafeHandle recoHandle)"
  nameWithType: "Recognizer.stopContinuousRecognition(SafeHandle recoHandle)"
  summary: "Internal method to stop continuous recognition operation."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long stopContinuousRecognition(SafeHandle recoHandle)"
  desc: "Internal method to stop continuous recognition operation."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.stopKeywordRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.stopKeywordRecognition(SafeHandle recoHandle)"
  name: "stopKeywordRecognition(SafeHandle recoHandle)"
  nameWithType: "Recognizer.stopKeywordRecognition(SafeHandle recoHandle)"
  summary: "Internal method to stop keyword recognition operation."
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "The native recognizer handle."
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long stopKeywordRecognition(SafeHandle recoHandle)"
  desc: "Internal method to stop keyword recognition operation."
  returns:
    description: "The native result handle of the operation."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the base class Recognizer which mainly contains common event handlers. Note: close() must be called in order to release underlying resources held by the object."
implements:
- "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/AutoCloseable.html\">AutoCloseable</a>"
metadata: {}
package: "com.microsoft.cognitiveservices.speech"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.34.0
