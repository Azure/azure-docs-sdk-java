### YamlMime:JavaType
uid: "com.microsoft.cognitiveservices.speech.Recognizer"
fullName: "com.microsoft.cognitiveservices.speech.Recognizer"
name: "Recognizer"
nameWithType: "Recognizer"
summary: "Defines the base class Recognizer which mainly contains common event handlers."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **Recognizer**</br> implements <xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.Recognizer(com.microsoft.cognitiveservices.speech.audio.AudioConfig)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.Recognizer(AudioConfig audioInput)"
  name: "Recognizer(AudioConfig audioInput)"
  nameWithType: "Recognizer.Recognizer(AudioConfig audioInput)"
  summary: "Creates and initializes an instance of a Recognizer"
  modifiers:
  - "protected"
  parameters:
  - description: "An optional audio input configuration associated with the recognizer"
    name: "audioInput"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.audio.AudioConfig?alt=com.microsoft.cognitiveservices.speech.audio.AudioConfig&text=AudioConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected Recognizer(AudioConfig audioInput)"
  desc: "Creates and initializes an instance of a Recognizer"
fields:
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.disposed"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.disposed"
  name: "disposed"
  nameWithType: "Recognizer.disposed"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected boolean disposed"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.eventCounter"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.eventCounter"
  name: "eventCounter"
  nameWithType: "Recognizer.eventCounter"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"java.util.concurrent.atomic.AtomicInteger?alt=java.util.concurrent.atomic.AtomicInteger&text=AtomicInteger\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected AtomicInteger eventCounter"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.recoHandle"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.recoHandle"
  name: "recoHandle"
  nameWithType: "Recognizer.recoHandle"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected SafeHandle recoHandle"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStarted"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStarted"
  name: "sessionStarted"
  nameWithType: "Recognizer.sessionStarted"
  summary: "Defines event handler for session started event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.SessionEventArgs?alt=com.microsoft.cognitiveservices.speech.SessionEventArgs&text=SessionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<SessionEventArgs> sessionStarted"
  desc: "Defines event handler for session started event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStopped"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStopped"
  name: "sessionStopped"
  nameWithType: "Recognizer.sessionStopped"
  summary: "Defines event handler for session stopped event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.SessionEventArgs?alt=com.microsoft.cognitiveservices.speech.SessionEventArgs&text=SessionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<SessionEventArgs> sessionStopped"
  desc: "Defines event handler for session stopped event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetected"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetected"
  name: "speechEndDetected"
  nameWithType: "Recognizer.speechEndDetected"
  summary: "Defines event handler for speech end detected event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.RecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.RecognitionEventArgs&text=RecognitionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<RecognitionEventArgs> speechEndDetected"
  desc: "Defines event handler for speech end detected event."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetected"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetected"
  name: "speechStartDetected"
  nameWithType: "Recognizer.speechStartDetected"
  summary: "Defines event handler for speech start detected event."
  modifiers:
  - "final"
  field:
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.EventHandlerImpl?alt=com.microsoft.cognitiveservices.speech.util.EventHandlerImpl&text=EventHandlerImpl\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.cognitiveservices.speech.RecognitionEventArgs?alt=com.microsoft.cognitiveservices.speech.RecognitionEventArgs&text=RecognitionEventArgs\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public final EventHandlerImpl<RecognitionEventArgs> speechStartDetected"
  desc: "Defines event handler for speech start detected event."
methods:
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.canceledSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.canceledSetCallback(long recoHandle)"
  name: "canceledSetCallback(long recoHandle)"
  nameWithType: "Recognizer.canceledSetCallback(long recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long canceledSetCallback(long recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.close()"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.close()"
  name: "close()"
  nameWithType: "Recognizer.close()"
  summary: "Dispose of associated resources."
  syntax: "public void close()"
  desc: "Dispose of associated resources. Note: close() must be called in order to release underlying resources held by the object."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.dispose(boolean)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.dispose(boolean disposing)"
  name: "dispose(boolean disposing)"
  nameWithType: "Recognizer.dispose(boolean disposing)"
  summary: "This method performs cleanup of resources."
  modifiers:
  - "protected"
  parameters:
  - description: "Flag to request disposal."
    name: "disposing"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void dispose(boolean disposing)"
  desc: "This method performs cleanup of resources. The Boolean parameter disposing indicates whether the method is called from Dispose (if disposing is true) or from the finalizer (if disposing is false). Derived classes should override this method to dispose resource if needed."
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.doAsyncRecognitionAction(java.lang.Runnable)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.doAsyncRecognitionAction(Runnable recoImplAction)"
  name: "doAsyncRecognitionAction(Runnable recoImplAction)"
  nameWithType: "Recognizer.doAsyncRecognitionAction(Runnable recoImplAction)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  parameters:
  - description: "PROTECTED"
    name: "recoImplAction"
    type: "<xref href=\"java.lang.Runnable?alt=java.lang.Runnable&text=Runnable\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void doAsyncRecognitionAction(Runnable recoImplAction)"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.getImpl()"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.getImpl()"
  name: "getImpl()"
  nameWithType: "Recognizer.getImpl()"
  summary: "Returns the internal recognizer instance"
  syntax: "public SafeHandle getImpl()"
  desc: "Returns the internal recognizer instance"
  returns:
    description: "The internal recognizer instance"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.getPropertyBagFromRecognizerHandle(com.microsoft.cognitiveservices.speech.util.SafeHandle,com.microsoft.cognitiveservices.speech.util.IntRef)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  name: "getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  nameWithType: "Recognizer.getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  - description: "PROTECTED"
    name: "propertyHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.IntRef?alt=com.microsoft.cognitiveservices.speech.util.IntRef&text=IntRef\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long getPropertyBagFromRecognizerHandle(SafeHandle recoHandle, IntRef propertyHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.recognize()"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.recognize()"
  name: "recognize()"
  nameWithType: "Recognizer.recognize()"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  syntax: "protected long recognize()"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.recognizedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.recognizedSetCallback(long recoHandle)"
  name: "recognizedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.recognizedSetCallback(long recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long recognizedSetCallback(long recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.recognizingSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.recognizingSetCallback(long recoHandle)"
  name: "recognizingSetCallback(long recoHandle)"
  nameWithType: "Recognizer.recognizingSetCallback(long recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long recognizingSetCallback(long recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedEventCallback(long eventArgs)"
  name: "sessionStartedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.sessionStartedEventCallback(long eventArgs)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  parameters:
  - description: "PROTECTED"
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void sessionStartedEventCallback(long eventArgs)"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStartedSetCallback(long recoHandle)"
  name: "sessionStartedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.sessionStartedSetCallback(long recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long sessionStartedSetCallback(long recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedEventCallback(long eventArgs)"
  name: "sessionStoppedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.sessionStoppedEventCallback(long eventArgs)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  parameters:
  - description: "PROTECTED"
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void sessionStoppedEventCallback(long eventArgs)"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.sessionStoppedSetCallback(long recoHandle)"
  name: "sessionStoppedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.sessionStoppedSetCallback(long recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long sessionStoppedSetCallback(long recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedEventCallback(long eventArgs)"
  name: "speechEndDetectedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.speechEndDetectedEventCallback(long eventArgs)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  parameters:
  - description: "PROTECTED"
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void speechEndDetectedEventCallback(long eventArgs)"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechEndDetectedSetCallback(long recoHandle)"
  name: "speechEndDetectedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.speechEndDetectedSetCallback(long recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long speechEndDetectedSetCallback(long recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedEventCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedEventCallback(long eventArgs)"
  name: "speechStartDetectedEventCallback(long eventArgs)"
  nameWithType: "Recognizer.speechStartDetectedEventCallback(long eventArgs)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  parameters:
  - description: "PROTECTED"
    name: "eventArgs"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void speechStartDetectedEventCallback(long eventArgs)"
  desc: "PROTECTED"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedSetCallback(long)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.speechStartDetectedSetCallback(long recoHandle)"
  name: "speechStartDetectedSetCallback(long recoHandle)"
  nameWithType: "Recognizer.speechStartDetectedSetCallback(long recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long speechStartDetectedSetCallback(long recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.startContinuousRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.startContinuousRecognition(SafeHandle recoHandle)"
  name: "startContinuousRecognition(SafeHandle recoHandle)"
  nameWithType: "Recognizer.startContinuousRecognition(SafeHandle recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long startContinuousRecognition(SafeHandle recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.startKeywordRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle,com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  name: "startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  nameWithType: "Recognizer.startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  - description: "PROTECTED"
    name: "keywordModelHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long startKeywordRecognition(SafeHandle recoHandle, SafeHandle keywordModelHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.stopContinuousRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.stopContinuousRecognition(SafeHandle recoHandle)"
  name: "stopContinuousRecognition(SafeHandle recoHandle)"
  nameWithType: "Recognizer.stopContinuousRecognition(SafeHandle recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long stopContinuousRecognition(SafeHandle recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.cognitiveservices.speech.Recognizer.stopKeywordRecognition(com.microsoft.cognitiveservices.speech.util.SafeHandle)"
  fullName: "com.microsoft.cognitiveservices.speech.Recognizer.stopKeywordRecognition(SafeHandle recoHandle)"
  name: "stopKeywordRecognition(SafeHandle recoHandle)"
  nameWithType: "Recognizer.stopKeywordRecognition(SafeHandle recoHandle)"
  summary: "PROTECTED"
  modifiers:
  - "protected"
  - "final"
  - "native"
  parameters:
  - description: "PROTECTED"
    name: "recoHandle"
    type: "<xref href=\"com.microsoft.cognitiveservices.speech.util.SafeHandle?alt=com.microsoft.cognitiveservices.speech.util.SafeHandle&text=SafeHandle\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final native long stopKeywordRecognition(SafeHandle recoHandle)"
  desc: "PROTECTED"
  returns:
    description: "PROTECTED"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Defines the base class Recognizer which mainly contains common event handlers. Note: close() must be called in order to release underlying resources held by the object."
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.cognitiveservices.speech"
artifact: com.microsoft.cognitiveservices.speech:client-sdk:1.24.2
