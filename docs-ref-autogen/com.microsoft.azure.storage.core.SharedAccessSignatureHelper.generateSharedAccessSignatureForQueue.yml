### YamlMime:JavaMember
nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue
type: method
members:
- fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  name: generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  nameWithType: SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  parameters:
  - description: <p>The shared access policy for the shared access signature. </p>
    name: policy
    type: final <xref href="com.microsoft.azure.storage.queue.SharedAccessQueuePolicy?alt=com.microsoft.azure.storage.queue.SharedAccessQueuePolicy&text=SharedAccessQueuePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>An optional identifier for the policy. </p>
    name: groupPolicyIdentifier
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The range of IP addresses for the shared access signature. </p>
    name: ipRange
    type: final <xref href="com.microsoft.azure.storage.IPRange?alt=com.microsoft.azure.storage.IPRange&text=IPRange" data-throw-if-not-resolved="False"/>
  - description: <p>The Internet protocols for the shared access signature. </p>
    name: protocols
    type: final <xref href="com.microsoft.azure.storage.SharedAccessProtocols?alt=com.microsoft.azure.storage.SharedAccessProtocols&text=SharedAccessProtocols" data-throw-if-not-resolved="False"/>
  - description: <p>The signature to use.</p>
    name: signature
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The finished query builder </p>
    type: <xref href="com.microsoft.azure.storage.core.UriQueryBuilder?alt=com.microsoft.azure.storage.core.UriQueryBuilder&text=UriQueryBuilder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the complete query builder for creating the Shared Access Signature query.</p>

    <p></p>
  syntax: public static UriQueryBuilder generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
  uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy,final String,final IPRange,final SharedAccessProtocols,final String)
uid: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue*
fullName: com.microsoft.azure.storage.core.SharedAccessSignatureHelper.generateSharedAccessSignatureForQueue
name: generateSharedAccessSignatureForQueue(final SharedAccessQueuePolicy policy, final String groupPolicyIdentifier, final IPRange ipRange, final SharedAccessProtocols protocols, final String signature)
package: com.microsoft.azure.storage.core
metadata: {}
