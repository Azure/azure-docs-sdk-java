### YamlMime:JavaType
uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber"
fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber"
name: "EventGridSubscriber"
nameWithType: "EventGridSubscriber"
summary: "The type that can be used to de-serialize eventgrid events."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **EventGridSubscriber**"
constructors:
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.EventGridSubscriber()"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.EventGridSubscriber()"
  name: "EventGridSubscriber()"
  nameWithType: "EventGridSubscriber.EventGridSubscriber()"
  summary: "Creates Event<wbr>Grid<wbr>Subscriber with default de-serializer."
  syntax: "public EventGridSubscriber()"
  desc: "Creates EventGridSubscriber with default de-serializer."
methods:
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.containsCustomEventMappingFor(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.containsCustomEventMappingFor(String eventType)"
  name: "containsCustomEventMappingFor(String eventType)"
  nameWithType: "EventGridSubscriber.containsCustomEventMappingFor(String eventType)"
  summary: "Checks if an event mapping with the given event<wbr>Type exists."
  parameters:
  - description: "the event type name."
    name: "eventType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean containsCustomEventMappingFor(String eventType)"
  desc: "Checks if an event mapping with the given eventType exists."
  returns:
    description: "true if the mapping exists, false otherwise."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.deserializeEventGridEvents(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.deserializeEventGridEvents(String requestContent)"
  name: "deserializeEventGridEvents(String requestContent)"
  nameWithType: "EventGridSubscriber.deserializeEventGridEvents(String requestContent)"
  summary: "De-serialize the events in the given requested content using default de-serializer."
  parameters:
  - description: "the request content in string format."
    name: "requestContent"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventGridEvent[] deserializeEventGridEvents(String requestContent)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "De-serialize the events in the given requested content using default de-serializer."
  returns:
    description: "De-serialized events."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.EventGridEvent?alt=com.microsoft.azure.eventgrid.models.EventGridEvent&text=EventGridEvent\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.deserializeEventGridEvents(java.lang.String,com.microsoft.rest.protocol.SerializerAdapter<com.fasterxml.jackson.databind.ObjectMapper>)"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.deserializeEventGridEvents(String requestContent, SerializerAdapter<ObjectMapper> serializerAdapter)"
  name: "deserializeEventGridEvents(String requestContent, SerializerAdapter<ObjectMapper> serializerAdapter)"
  nameWithType: "EventGridSubscriber.deserializeEventGridEvents(String requestContent, SerializerAdapter<ObjectMapper> serializerAdapter)"
  summary: "De-serialize the events in the given requested content using the provided de-serializer."
  parameters:
  - description: "the request content as string."
    name: "requestContent"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the de-serializer."
    name: "serializerAdapter"
    type: "<xref href=\"com.microsoft.rest.protocol.SerializerAdapter?alt=com.microsoft.rest.protocol.SerializerAdapter&text=SerializerAdapter\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.fasterxml.jackson.databind.ObjectMapper?alt=com.fasterxml.jackson.databind.ObjectMapper&text=ObjectMapper\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EventGridEvent[] deserializeEventGridEvents(String requestContent, SerializerAdapter<ObjectMapper> serializerAdapter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "De-serialize the events in the given requested content using the provided de-serializer."
  returns:
    description: "de-serialized events."
    type: "<xref href=\"com.microsoft.azure.eventgrid.models.EventGridEvent?alt=com.microsoft.azure.eventgrid.models.EventGridEvent&text=EventGridEvent\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.getAllCustomEventMappings()"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.getAllCustomEventMappings()"
  name: "getAllCustomEventMappings()"
  nameWithType: "EventGridSubscriber.getAllCustomEventMappings()"
  syntax: "public Set<Map.Entry<String,Type>> getAllCustomEventMappings()"
  returns:
    description: "get all registered custom event mappings."
    type: "<xref href=\"java.util.Set?alt=java.util.Set&text=Set\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.util.Map.Entry?alt=java.util.Map.Entry&text=Entry\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.getCustomEventMapping(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.getCustomEventMapping(String eventType)"
  name: "getCustomEventMapping(String eventType)"
  nameWithType: "EventGridSubscriber.getCustomEventMapping(String eventType)"
  summary: "Get type of the Java model that is mapped to the given event<wbr>Type."
  parameters:
  - description: "the event type name."
    name: "eventType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Type getCustomEventMapping(String eventType)"
  desc: "Get type of the Java model that is mapped to the given eventType."
  returns:
    description: "type of the Java model if mapping exists, null otherwise."
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.putCustomEventMapping(java.lang.String,java.lang.reflect.Type)"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.putCustomEventMapping(String eventType, Type eventDataType)"
  name: "putCustomEventMapping(String eventType, Type eventDataType)"
  nameWithType: "EventGridSubscriber.putCustomEventMapping(String eventType, Type eventDataType)"
  summary: "Add a custom event mapping."
  parameters:
  - description: "the event type name."
    name: "eventType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "type of the Java model that the event type name mapped to."
    name: "eventDataType"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void putCustomEventMapping(String eventType, Type eventDataType)"
  desc: "Add a custom event mapping. If a mapping with same eventType exists then the old eventDataType is replaced by the specified eventDataType."
- uid: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.removeCustomEventMapping(java.lang.String)"
  fullName: "com.microsoft.azure.eventgrid.customization.EventGridSubscriber.removeCustomEventMapping(String eventType)"
  name: "removeCustomEventMapping(String eventType)"
  nameWithType: "EventGridSubscriber.removeCustomEventMapping(String eventType)"
  summary: "Removes the mapping with the given event<wbr>Type."
  parameters:
  - description: "the event type name."
    name: "eventType"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public boolean removeCustomEventMapping(String eventType)"
  desc: "Removes the mapping with the given eventType."
  returns:
    description: "true if the mapping exists and removed, false if mapping does not exists."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The type that can be used to de-serialize eventgrid events."
metadata: {}
package: "com.microsoft.azure.eventgrid.customization"
artifact: com.microsoft.azure:azure-eventgrid:1.3.0
