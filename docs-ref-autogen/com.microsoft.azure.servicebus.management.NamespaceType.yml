### YamlMime:JavaEnum
uid: "com.microsoft.azure.servicebus.management.NamespaceType"
fullName: "com.microsoft.azure.servicebus.management.NamespaceType"
name: "NamespaceType"
nameWithType: "NamespaceType"
summary: "Specifies the type of entities the namespace can contain."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"java.lang.Enum\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- "java.lang.Enum.clone()"
- "java.lang.Enum.compareTo(E)"
- "java.lang.Enum.equals(java.lang.Object)"
- "java.lang.Enum.finalize()"
- "java.lang.Enum.getDeclaringClass()"
- "java.lang.Enum.hashCode()"
- "java.lang.Enum.name()"
- "java.lang.Enum.ordinal()"
- "java.lang.Enum.toString()"
- "java.lang.Object.getClass()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public enum NamespaceType extends Enum<NamespaceType>"
fields:
- uid: "com.microsoft.azure.servicebus.management.NamespaceType.Mixed"
  fullName: "com.microsoft.azure.servicebus.management.NamespaceType.Mixed"
  name: "Mixed"
  nameWithType: "NamespaceType.Mixed"
  summary: "Supported only for backword compatibility. Namespace can contain mixture of service bus entities and notification hubs."
- uid: "com.microsoft.azure.servicebus.management.NamespaceType.ServiceBus"
  fullName: "com.microsoft.azure.servicebus.management.NamespaceType.ServiceBus"
  name: "ServiceBus"
  nameWithType: "NamespaceType.ServiceBus"
  summary: "Namespace contains service bus entities (queues / topics)"
- uid: "com.microsoft.azure.servicebus.management.NamespaceType.Unknown"
  fullName: "com.microsoft.azure.servicebus.management.NamespaceType.Unknown"
  name: "Unknown"
  nameWithType: "NamespaceType.Unknown"
  summary: "Unknown entities."
methods:
- uid: "com.microsoft.azure.servicebus.management.NamespaceType.getNumVal()"
  fullName: "com.microsoft.azure.servicebus.management.NamespaceType.getNumVal()"
  name: "getNumVal()"
  nameWithType: "NamespaceType.getNumVal()"
  syntax: "public int getNumVal()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.NamespaceType.valueOf(java.lang.String)"
  fullName: "com.microsoft.azure.servicebus.management.NamespaceType.valueOf(String name)"
  name: "valueOf(String name)"
  nameWithType: "NamespaceType.valueOf(String name)"
  parameters:
  - name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static NamespaceType valueOf(String name)"
  returns:
    type: "<xref href=\"com.microsoft.azure.servicebus.management.NamespaceType?alt=com.microsoft.azure.servicebus.management.NamespaceType&text=NamespaceType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.management.NamespaceType.values()"
  fullName: "com.microsoft.azure.servicebus.management.NamespaceType.values()"
  name: "values()"
  nameWithType: "NamespaceType.values()"
  syntax: "public static NamespaceType[] values()"
  returns:
    type: "<xref href=\"com.microsoft.azure.servicebus.management.NamespaceType?alt=com.microsoft.azure.servicebus.management.NamespaceType&text=NamespaceType\" data-throw-if-not-resolved=\"False\" />[]"
metadata: {}
package: "com.microsoft.azure.servicebus.management"
artifact: com.microsoft.azure:azure-servicebus:3.6.0
