### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase
  id: WithDatabase
  parent: com.microsoft.azure.management.sql
  children:
  - com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.defineDatabase(String)
  - com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.withNewDatabase(String)
  href: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.yml
  langs:
  - java
  name: SqlServer.DefinitionStages.WithDatabase
  nameWithType: SqlServer.DefinitionStages.WithDatabase
  fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlServer.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlServer.java
    startLine: 386
  package: com.microsoft.azure.management.sql
  summary: "<p>A SQL Server definition for specifying the databases. </p>"
  syntax:
    content: public interface WithDatabase
- uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.defineDatabase(String)
  id: defineDatabase(String)
  parent: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase
  href: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.yml
  langs:
  - java
  name: defineDatabase(String databaseName)
  nameWithType: SqlServer.DefinitionStages.WithDatabase.defineDatabase(String databaseName)
  fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.defineDatabase(String databaseName)
  overload: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.defineDatabase*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlServer.java
    startLine: 394
  package: com.microsoft.azure.management.sql
  summary: "<p>Begins the definition of a new SQL Database to be added to this server.</p>\r\n<p></p>"
  syntax:
    content: public SqlDatabase.DefinitionStages.Blank<WithCreate> defineDatabase(String databaseName)
    parameters:
    - id: databaseName
      type: "26831127"
      description: <p>the name of the new SQL Database </p>
    return:
      type: 0081faabcom.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreatea08ddfce
      description: <p>the first stage of the new SQL Database definition </p>
- uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.withNewDatabase(String)
  id: withNewDatabase(String)
  parent: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase
  href: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.yml
  langs:
  - java
  name: withNewDatabase(String databaseName)
  nameWithType: SqlServer.DefinitionStages.WithDatabase.withNewDatabase(String databaseName)
  fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.withNewDatabase(String databaseName)
  overload: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.withNewDatabase*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-sql/src/main/java/com/microsoft/azure/management/sql/SqlServer.java
    startLine: 402
  package: com.microsoft.azure.management.sql
  summary: "<p>Creates new database in the SQL Server. </p>"
  syntax:
    content: public WithCreate withNewDatabase(String databaseName)
    parameters:
    - id: databaseName
      type: "26831127"
      description: <p>name of the database to be created </p>
    return:
      type: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate
      description: <p>Next stage of the SQL Server definition </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 0081faabcom.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreatea08ddfce
  spec.java:
  - name: SqlDatabase.DefinitionStages.Blank<
    fullName: SqlDatabase.DefinitionStages.Blank<
  - uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate
    name: SqlServer.DefinitionStages.WithCreate
    fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate
    href: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.defineDatabase*
  name: defineDatabase
  nameWithType: SqlServer.DefinitionStages.WithDatabase.defineDatabase
  fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.defineDatabase
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.withNewDatabase*
  name: withNewDatabase
  nameWithType: SqlServer.DefinitionStages.WithDatabase.withNewDatabase
  fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithDatabase.withNewDatabase
  package: com.microsoft.azure.management.sql
- uid: com.microsoft.azure.management.sql.SqlServer.Definition
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlServer.Definition.yml
  name: SqlServer.Definition
  nameWithType: SqlServer.Definition
  fullName: com.microsoft.azure.management.sql.SqlServer.Definition
  type: Interface
  summary: "<p>Container interface for all the definitions that need to be implemented. </p>"
  syntax:
    content: public interface Definition extends SqlServer.DefinitionStages.Blank,SqlServer.DefinitionStages.WithGroup,SqlServer.DefinitionStages.WithAdministratorLogin,SqlServer.DefinitionStages.WithAdministratorPassword,SqlServer.DefinitionStages.WithElasticPool,SqlServer.DefinitionStages.WithDatabase,SqlServer.DefinitionStages.WithFirewallRule,SqlServer.DefinitionStages.WithCreate,SqlServer.DefinitionStages.Blank,SqlServer.DefinitionStages.WithGroup,SqlServer.DefinitionStages.WithAdministratorLogin,SqlServer.DefinitionStages.WithAdministratorPassword,SqlServer.DefinitionStages.WithElasticPool,SqlServer.DefinitionStages.WithDatabase,SqlServer.DefinitionStages.WithFirewallRule,SqlServer.DefinitionStages.WithCreate
- uid: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate
  parent: com.microsoft.azure.management.sql
  href: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate.yml
  name: SqlServer.DefinitionStages.WithCreate
  nameWithType: SqlServer.DefinitionStages.WithCreate
  fullName: com.microsoft.azure.management.sql.SqlServer.DefinitionStages.WithCreate
  type: Interface
  summary: "<p>A SQL Server definition with sufficient inputs to create a new SQL Server in the cloud, but exposing additional optional inputs to specify. </p>"
  syntax:
    content: public interface WithCreate extends Creatable<SqlServer>,Resource.DefinitionWithTags<WithCreate>,SqlServer.DefinitionStages.WithElasticPool,SqlServer.DefinitionStages.WithDatabase,SqlServer.DefinitionStages.WithFirewallRule,Creatable<SqlServer>,SqlServer.DefinitionStages.WithActiveDirectoryAdministrator,SqlServer.DefinitionStages.WithSystemAssignedManagedServiceIdentity,SqlServer.DefinitionStages.WithElasticPool,SqlServer.DefinitionStages.WithDatabase,SqlServer.DefinitionStages.WithFirewallRule,SqlServer.DefinitionStages.WithVirtualNetworkRule,Resource.DefinitionWithTags<WithCreate>
