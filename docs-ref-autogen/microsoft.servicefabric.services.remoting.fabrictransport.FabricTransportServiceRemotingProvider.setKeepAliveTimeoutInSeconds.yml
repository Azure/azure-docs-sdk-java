### YamlMime:JavaMember
nameWithType: FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  nameWithType: FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  parameters:
  - description: <p>keep alive timeout in seconds. </p>
    name: keepAliveTimeoutInSeconds
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the keepAliveTimeoutInSeconds that provides a way to configure Tcp keep-alive option. <b>Remarks:</b> Default Value for KeepAliveTimeout Timeout is set as TimeSpan.Zero. which indicates we disable the tcp keepalive option.If you are using loadbalancer , you may need to configure this in order to avoid the loadbalancer to close the connection after certain time. </p>
  syntax: public void setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long)
uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds*
fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
name: setKeepAliveTimeoutInSeconds(long keepAliveTimeoutInSeconds)
package: microsoft.servicefabric.services.remoting.fabrictransport
metadata: {}
