### YamlMime:JavaMember
uid: "com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync*"
fullName: "com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync"
name: "checkNameAvailabilityAsync"
nameWithType: "Vaults.checkNameAvailabilityAsync"
members:
- uid: "com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.keyvault.models.Vaults.checkNameAvailabilityAsync(String name)"
  name: "checkNameAvailabilityAsync(String name)"
  nameWithType: "Vaults.checkNameAvailabilityAsync(String name)"
  summary: "Checks that the vault name is valid and is not already in use."
  parameters:
  - description: "The vault name."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<CheckNameAvailabilityResult> checkNameAvailabilityAsync(String name)"
  returns:
    description: "the observable to the CheckNameAvailabilityResult object"
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult?alt=com.azure.resourcemanager.keyvault.models.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.1.0
