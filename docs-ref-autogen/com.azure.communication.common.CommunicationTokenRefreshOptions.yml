### YamlMime:JavaType
uid: "com.azure.communication.common.CommunicationTokenRefreshOptions"
fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions"
name: "CommunicationTokenRefreshOptions"
nameWithType: "CommunicationTokenRefreshOptions"
summary: "Options for refreshing Communication<wbr>Token<wbr>Credential"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class CommunicationTokenRefreshOptions"
constructors:
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(java.util.function.Supplier<java.lang.String>)"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(Supplier<String> tokenRefresher)"
  name: "CommunicationTokenRefreshOptions(Supplier<String> tokenRefresher)"
  nameWithType: "CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(Supplier<String> tokenRefresher)"
  summary: "Creates a Communication<wbr>Token<wbr>Refresh<wbr>Options object"
  parameters:
  - description: "The synchronous callback function that acquires a fresh token from\n                       the Communication Identity API, e.g. by calling the\n                       CommunicationIdentityClient\n                       The returned token must be valid (its expiration date\n                       must be set in the future)."
    name: "tokenRefresher"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public CommunicationTokenRefreshOptions(Supplier<String> tokenRefresher)"
  desc: "Creates a CommunicationTokenRefreshOptions object"
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(java.util.function.Supplier<reactor.core.publisher.Mono<java.lang.String>>,boolean)"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively)"
  name: "CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively)"
  nameWithType: "CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively)"
  summary: "Creates a Communication<wbr>Token<wbr>Refresh<wbr>Options object"
  deprecatedTag: "Use <xref uid=\"com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(java.util.function.Supplier<java.lang.String>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#CommunicationTokenRefreshOptions(Supplier)\"></xref> instead and chain fluent setter <xref uid=\"com.azure.communication.common.CommunicationTokenRefreshOptions.setRefreshProactively(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setRefreshProactively(boolean)\"></xref>"
  parameters:
  - description: "The asynchronous callback function that acquires a fresh token\n                       from the Communication Identity API, e.g. by\n                       calling the CommunicationIdentityClient"
    name: "tokenRefresher"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "Determines whether the token should be proactively\n                           renewed prior to its expiry or on demand."
    name: "refreshProactively"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively)"
  desc: "Creates a CommunicationTokenRefreshOptions object"
  hasDeprecatedTag: true
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(java.util.function.Supplier<reactor.core.publisher.Mono<java.lang.String>>,boolean,java.lang.String)"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively, String initialToken)"
  name: "CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively, String initialToken)"
  nameWithType: "CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively, String initialToken)"
  summary: "Creates a Communication<wbr>Token<wbr>Refresh<wbr>Options object"
  deprecatedTag: "Use <xref uid=\"com.azure.communication.common.CommunicationTokenRefreshOptions.CommunicationTokenRefreshOptions(java.util.function.Supplier<java.lang.String>)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#CommunicationTokenRefreshOptions(Supplier)\"></xref> instead and chain fluent setters <xref uid=\"com.azure.communication.common.CommunicationTokenRefreshOptions.setRefreshProactively(boolean)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setRefreshProactively(boolean)\"></xref>, <xref uid=\"com.azure.communication.common.CommunicationTokenRefreshOptions.setInitialToken(java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#setInitialToken(String)\"></xref>"
  parameters:
  - description: "The asynchronous callback function that acquires a fresh token\n                       from the Communication Identity API, e.g. by\n                       calling the CommunicationIdentityClient"
    name: "tokenRefresher"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
  - description: "Determines whether the token should be proactively\n                           renewed prior to its expiry or on demand."
    name: "refreshProactively"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "The optional serialized JWT token"
    name: "initialToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "@Deprecated\npublic CommunicationTokenRefreshOptions(Supplier<Mono<String>> tokenRefresher, boolean refreshProactively, String initialToken)"
  desc: "Creates a CommunicationTokenRefreshOptions object"
  hasDeprecatedTag: true
methods:
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.getInitialToken()"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.getInitialToken()"
  name: "getInitialToken()"
  nameWithType: "CommunicationTokenRefreshOptions.getInitialToken()"
  syntax: "public String getInitialToken()"
  returns:
    description: "The initial token"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.getTokenRefresher()"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.getTokenRefresher()"
  name: "getTokenRefresher()"
  nameWithType: "CommunicationTokenRefreshOptions.getTokenRefresher()"
  deprecatedTag: "Use synchronous token refresher instead."
  syntax: "@Deprecated\npublic Supplier<Mono<String>> getTokenRefresher()"
  hasDeprecatedTag: true
  returns:
    description: "The asynchronous token refresher to provide capacity to fetch fresh token"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.getTokenRefresherSync()"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.getTokenRefresherSync()"
  name: "getTokenRefresherSync()"
  nameWithType: "CommunicationTokenRefreshOptions.getTokenRefresherSync()"
  syntax: "public Supplier<String> getTokenRefresherSync()"
  returns:
    description: "The synchronous token refresher to provide capacity to fetch fresh token"
    type: "<xref href=\"java.util.function.Supplier?alt=java.util.function.Supplier&text=Supplier\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.isRefreshProactively()"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.isRefreshProactively()"
  name: "isRefreshProactively()"
  nameWithType: "CommunicationTokenRefreshOptions.isRefreshProactively()"
  syntax: "public boolean isRefreshProactively()"
  returns:
    description: "Whether or not to refresh token proactively"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.setInitialToken(java.lang.String)"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.setInitialToken(String initialToken)"
  name: "setInitialToken(String initialToken)"
  nameWithType: "CommunicationTokenRefreshOptions.setInitialToken(String initialToken)"
  summary: "Set the optional serialized JWT token"
  parameters:
  - description: "the initialToken value to set."
    name: "initialToken"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationTokenRefreshOptions setInitialToken(String initialToken)"
  desc: "Set the optional serialized JWT token"
  returns:
    description: "the CommunicationTokenRefreshOptions object itself."
    type: "<xref href=\"com.azure.communication.common.CommunicationTokenRefreshOptions?alt=com.azure.communication.common.CommunicationTokenRefreshOptions&text=CommunicationTokenRefreshOptions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.communication.common.CommunicationTokenRefreshOptions.setRefreshProactively(boolean)"
  fullName: "com.azure.communication.common.CommunicationTokenRefreshOptions.setRefreshProactively(boolean refreshProactively)"
  name: "setRefreshProactively(boolean refreshProactively)"
  nameWithType: "CommunicationTokenRefreshOptions.setRefreshProactively(boolean refreshProactively)"
  summary: "Set whether the token should be proactively renewed prior to its expiry or on demand."
  parameters:
  - description: "the refreshProactively value to set."
    name: "refreshProactively"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CommunicationTokenRefreshOptions setRefreshProactively(boolean refreshProactively)"
  desc: "Set whether the token should be proactively renewed prior to its expiry or on demand."
  returns:
    description: "the CommunicationTokenRefreshOptions object itself."
    type: "<xref href=\"com.azure.communication.common.CommunicationTokenRefreshOptions?alt=com.azure.communication.common.CommunicationTokenRefreshOptions&text=CommunicationTokenRefreshOptions\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Options for refreshing CommunicationTokenCredential"
metadata: {}
package: "com.azure.communication.common"
artifact: com.azure:azure-communication-common:1.2.0
