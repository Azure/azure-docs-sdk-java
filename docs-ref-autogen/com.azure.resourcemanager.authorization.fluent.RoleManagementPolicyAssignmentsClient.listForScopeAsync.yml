### YamlMime:JavaMember
uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPolicyAssignmentsClient.listForScopeAsync*"
fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPolicyAssignmentsClient.listForScopeAsync"
name: "listForScopeAsync"
nameWithType: "RoleManagementPolicyAssignmentsClient.listForScopeAsync"
members:
- uid: "com.azure.resourcemanager.authorization.fluent.RoleManagementPolicyAssignmentsClient.listForScopeAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.authorization.fluent.RoleManagementPolicyAssignmentsClient.listForScopeAsync(String scope)"
  name: "listForScopeAsync(String scope)"
  nameWithType: "RoleManagementPolicyAssignmentsClient.listForScopeAsync(String scope)"
  summary: "Gets role management assignment policies for a resource scope."
  parameters:
  - description: "The scope of the role management policy."
    name: "scope"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract PagedFlux<RoleManagementPolicyAssignmentInner> listForScopeAsync(String scope)"
  returns:
    description: "role management assignment policies for a resource scope as paginated response with <xref uid=\"com.azure.core.http.rest.PagedFlux\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedFlux\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedFlux?alt=com.azure.core.http.rest.PagedFlux&text=PagedFlux\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyAssignmentInner?alt=com.azure.resourcemanager.authorization.fluent.models.RoleManagementPolicyAssignmentInner&text=RoleManagementPolicyAssignmentInner\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.16.0
