### YamlMime:JavaMember
nameWithType: IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider
type: constructor
members:
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)
  name: IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)
  nameWithType: IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)
  parameters:
  - name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - name: sslContext
    type: <xref href="SSLContext?alt=SSLContext&text=SSLContext" data-throw-if-not-resolved="False"/>
  syntax: public IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, SSLContext sslContext)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String,String,String,String,SSLContext)
- fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  name: IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  nameWithType: IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  parameters:
  - description: <p>the IotHub host name </p>
    name: hostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The gateway hostname to use, or null if connecting to an IotHub </p>
    name: gatewayHostname
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The device to be authenticated. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The module to be authenticated. May be null if this authentication is not for a module </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The PEM encoded string for the public key certificate or the path to a file containing it </p>
    name: publicKeyCertificate
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the provided publicKeyCertificate is a path to the PEM encoded public key certificate file </p>
    name: isCertificatePath
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  - description: <p>The PEM encoded string for the private key or the path to a file containing it. </p>
    name: privateKey
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>If the provided privateKey is a path to the PEM encoded private key file </p>
    name: isPrivateKeyPath
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the public key certificate or private key is null or empty </p>
  summary: <p>Constructor that takes in a connection string and certificate/private key pair needed to use x509 authentication </p>
  syntax: public IotHubX509SoftwareAuthenticationProvider(String hostname, String gatewayHostname, String deviceId, String moduleId, String publicKeyCertificate, boolean isCertificatePath, String privateKey, boolean isPrivateKeyPath)
  uid: com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider(String,String,String,String,String,boolean,String,boolean)
uid: com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider*
fullName: com.microsoft.azure.sdk.iot.device.auth.IotHubX509SoftwareAuthenticationProvider.IotHubX509SoftwareAuthenticationProvider
name: IotHubX509SoftwareAuthenticationProvider
package: com.microsoft.azure.sdk.iot.device.auth
metadata: {}
