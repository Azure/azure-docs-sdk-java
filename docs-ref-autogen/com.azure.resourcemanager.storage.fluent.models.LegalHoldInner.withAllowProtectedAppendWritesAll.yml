### YamlMime:JavaMember
uid: "com.azure.resourcemanager.storage.fluent.models.LegalHoldInner.withAllowProtectedAppendWritesAll*"
fullName: "com.azure.resourcemanager.storage.fluent.models.LegalHoldInner.withAllowProtectedAppendWritesAll"
name: "withAllowProtectedAppendWritesAll"
nameWithType: "LegalHoldInner.withAllowProtectedAppendWritesAll"
members:
- uid: "com.azure.resourcemanager.storage.fluent.models.LegalHoldInner.withAllowProtectedAppendWritesAll(java.lang.Boolean)"
  fullName: "com.azure.resourcemanager.storage.fluent.models.LegalHoldInner.withAllowProtectedAppendWritesAll(Boolean allowProtectedAppendWritesAll)"
  name: "withAllowProtectedAppendWritesAll(Boolean allowProtectedAppendWritesAll)"
  nameWithType: "LegalHoldInner.withAllowProtectedAppendWritesAll(Boolean allowProtectedAppendWritesAll)"
  summary: "Set the allowProtectedAppendWritesAll property: When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted."
  parameters:
  - description: "the allowProtectedAppendWritesAll value to set."
    name: "allowProtectedAppendWritesAll"
    type: "<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public LegalHoldInner withAllowProtectedAppendWritesAll(Boolean allowProtectedAppendWritesAll)"
  returns:
    description: "the LegalHoldInner object itself."
    type: "<xref href=\"com.azure.resourcemanager.storage.fluent.models.LegalHoldInner?alt=com.azure.resourcemanager.storage.fluent.models.LegalHoldInner&text=LegalHoldInner\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.storage.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.13.0
