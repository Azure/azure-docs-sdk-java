### YamlMime:JavaType
uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition"
fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition"
name: "SqlDatabase.UpdateStages.WithEdition"
nameWithType: "SqlDatabase.UpdateStages.WithEdition"
summary: "The SQL Database definition to set the edition for database."
syntax: "public static interface SqlDatabase.UpdateStages.WithEdition"
methods:
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withBasicEdition()"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withBasicEdition()"
  name: "withBasicEdition()"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withBasicEdition()"
  summary: "Sets a \"Basic\" edition for the SQL Database."
  modifiers:
  - "abstract"
  syntax: "public abstract SqlDatabase.Update withBasicEdition()"
  desc: "Sets a \"Basic\" edition for the SQL Database."
  returns:
    description: "The next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withBasicEdition(com.azure.resourcemanager.sql.models.SqlDatabaseBasicStorage)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)"
  name: "withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)"
  summary: "Sets a \"Basic\" edition and maximum storage capacity for the SQL Database."
  modifiers:
  - "abstract"
  parameters:
  - description: "the maximum storage capacity"
    name: "maxStorageCapacity"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabaseBasicStorage?alt=com.azure.resourcemanager.sql.models.SqlDatabaseBasicStorage&text=SqlDatabaseBasicStorage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withBasicEdition(SqlDatabaseBasicStorage maxStorageCapacity)"
  desc: "Sets a \"Basic\" edition and maximum storage capacity for the SQL Database."
  returns:
    description: "The next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(com.azure.resourcemanager.sql.models.SqlDatabasePremiumServiceObjective)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)"
  name: "withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)"
  summary: "Sets a \"Premium\" edition for the SQL Database."
  modifiers:
  - "abstract"
  parameters:
  - description: "edition to be set for database"
    name: "serviceObjective"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabasePremiumServiceObjective?alt=com.azure.resourcemanager.sql.models.SqlDatabasePremiumServiceObjective&text=SqlDatabasePremiumServiceObjective\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective)"
  desc: "Sets a \"Premium\" edition for the SQL Database."
  returns:
    description: "The next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(com.azure.resourcemanager.sql.models.SqlDatabasePremiumServiceObjective,com.azure.resourcemanager.sql.models.SqlDatabasePremiumStorage)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)"
  name: "withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)"
  summary: "Sets a \"Premium\" edition and maximum storage capacity for the SQL Database."
  modifiers:
  - "abstract"
  parameters:
  - description: "edition to be set for database"
    name: "serviceObjective"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabasePremiumServiceObjective?alt=com.azure.resourcemanager.sql.models.SqlDatabasePremiumServiceObjective&text=SqlDatabasePremiumServiceObjective\" data-throw-if-not-resolved=\"False\" />"
  - description: "edition to be set for database"
    name: "maxStorageCapacity"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabasePremiumStorage?alt=com.azure.resourcemanager.sql.models.SqlDatabasePremiumStorage&text=SqlDatabasePremiumStorage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withPremiumEdition(SqlDatabasePremiumServiceObjective serviceObjective, SqlDatabasePremiumStorage maxStorageCapacity)"
  desc: "Sets a \"Premium\" edition and maximum storage capacity for the SQL Database."
  returns:
    description: "The next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withSku(com.azure.resourcemanager.sql.models.DatabaseSku)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withSku(DatabaseSku sku)"
  name: "withSku(DatabaseSku sku)"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withSku(DatabaseSku sku)"
  summary: "Sets the sku for the SQL Database."
  modifiers:
  - "abstract"
  parameters:
  - description: "sku to be set for database"
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.DatabaseSku?alt=com.azure.resourcemanager.sql.models.DatabaseSku&text=DatabaseSku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withSku(DatabaseSku sku)"
  desc: "Sets the sku for the SQL Database."
  returns:
    description: "The next stage of the update"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withSku(com.azure.resourcemanager.sql.models.Sku)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withSku(Sku sku)"
  name: "withSku(Sku sku)"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withSku(Sku sku)"
  summary: "Sets the sku for the SQL Database."
  modifiers:
  - "abstract"
  parameters:
  - description: "sku/edition to be set for database, all possible capabilities could be found by\n     <xref uid=\"com.azure.resourcemanager.sql.models.SqlServers.getCapabilitiesByRegion(com.azure.core.management.Region)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SqlServers#getCapabilitiesByRegion(Region)\"></xref>"
    name: "sku"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.Sku?alt=com.azure.resourcemanager.sql.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withSku(Sku sku)"
  desc: "Sets the sku for the SQL Database."
  returns:
    description: "The next stage of the update"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(com.azure.resourcemanager.sql.models.SqlDatabaseStandardServiceObjective)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)"
  name: "withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)"
  summary: "Sets a \"Standard\" edition for the SQL Database."
  modifiers:
  - "abstract"
  parameters:
  - description: "edition to be set for database"
    name: "serviceObjective"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabaseStandardServiceObjective?alt=com.azure.resourcemanager.sql.models.SqlDatabaseStandardServiceObjective&text=SqlDatabaseStandardServiceObjective\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective)"
  desc: "Sets a \"Standard\" edition for the SQL Database."
  returns:
    description: "The next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(com.azure.resourcemanager.sql.models.SqlDatabaseStandardServiceObjective,com.azure.resourcemanager.sql.models.SqlDatabaseStandardStorage)"
  fullName: "com.azure.resourcemanager.sql.models.SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)"
  name: "withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)"
  nameWithType: "SqlDatabase.UpdateStages.WithEdition.withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)"
  summary: "Sets a \"Standard\" edition and maximum storage capacity for the SQL Database."
  modifiers:
  - "abstract"
  parameters:
  - description: "edition to be set for database"
    name: "serviceObjective"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabaseStandardServiceObjective?alt=com.azure.resourcemanager.sql.models.SqlDatabaseStandardServiceObjective&text=SqlDatabaseStandardServiceObjective\" data-throw-if-not-resolved=\"False\" />"
  - description: "edition to be set for database"
    name: "maxStorageCapacity"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabaseStandardStorage?alt=com.azure.resourcemanager.sql.models.SqlDatabaseStandardStorage&text=SqlDatabaseStandardStorage\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract SqlDatabase.Update withStandardEdition(SqlDatabaseStandardServiceObjective serviceObjective, SqlDatabaseStandardStorage maxStorageCapacity)"
  desc: "Sets a \"Standard\" edition and maximum storage capacity for the SQL Database."
  returns:
    description: "The next stage of the definition"
    type: "<xref href=\"com.azure.resourcemanager.sql.models.SqlDatabase.Update?alt=com.azure.resourcemanager.sql.models.SqlDatabase.Update&text=Update\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The SQL Database definition to set the edition for database."
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.19.0
