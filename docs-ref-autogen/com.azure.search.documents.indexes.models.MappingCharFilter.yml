### YamlMime:JavaType
uid: "com.azure.search.documents.indexes.models.MappingCharFilter"
fullName: "com.azure.search.documents.indexes.models.MappingCharFilter"
name: "MappingCharFilter"
nameWithType: "MappingCharFilter"
summary: "A character filter that applies mappings defined with the mappings option."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.documents.indexes.models.CharFilter?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.azure.search.documents.indexes.models.CharFilter.getName()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class MappingCharFilter extends CharFilter"
constructors:
- uid: "com.azure.search.documents.indexes.models.MappingCharFilter.MappingCharFilter(java.lang.String,java.util.List<java.lang.String>)"
  fullName: "com.azure.search.documents.indexes.models.MappingCharFilter.MappingCharFilter(String name, List<String> mappings)"
  name: "MappingCharFilter(String name, List<String> mappings)"
  nameWithType: "MappingCharFilter.MappingCharFilter(String name, List<String> mappings)"
  summary: "Creates an instance of Mapping<wbr>Char<wbr>Filter class."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "the mappings value to set."
    name: "mappings"
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public MappingCharFilter(String name, List<String> mappings)"
  desc: "Creates an instance of MappingCharFilter class."
methods:
- uid: "com.azure.search.documents.indexes.models.MappingCharFilter.getMappings()"
  fullName: "com.azure.search.documents.indexes.models.MappingCharFilter.getMappings()"
  name: "getMappings()"
  nameWithType: "MappingCharFilter.getMappings()"
  summary: "Get the mappings property: A list of mappings of the following format: \"a=>b\" (all occurrences of the character \"a\" will be replaced with character \"b\")."
  syntax: "public List<String> getMappings()"
  desc: "Get the mappings property: A list of mappings of the following format: \"a=>b\" (all occurrences of the character \"a\" will be replaced with character \"b\")."
  returns:
    description: "the mappings value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "A character filter that applies mappings defined with the mappings option. Matching is greedy (longest pattern matching at a given point wins). Replacement is allowed to be the empty string. This character filter is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.documents.indexes.models"
artifact: com.azure:azure-search-documents:11.4.13
