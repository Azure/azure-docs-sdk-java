### YamlMime:JavaMember
nameWithType: ServicePartitionResolver.resolveAsync
type: method
members:
- fullName: microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  name: resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  nameWithType: ServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  parameters:
  - description: <p>Previous resolved partition </p>
    name: previousRsp
    type: <xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>
  - description: <p>The timeout passed to FabricClient's </p>
    name: resolveTimeoutPerTry
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>The interval to back-off before retrying when FabricClient's method fails with a retriable exception. </p>
    name: maxRetryBackoffInterval
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A CompletableFuture that represents outstanding operation. The result from the Task is the <xref uid="system.fabric.ResolvedServicePartition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref> object, that contains the information about the resolved service partition including the service endpoints. </p>
    type: CompletableFuture&lt;<xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Resolves a partition of the specified service.</p>

    <p></p>
  syntax: public CompletableFuture<ResolvedServicePartition> resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  uid: microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(ResolvedServicePartition,Duration,Duration)
- fullName: microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  name: resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  nameWithType: ServicePartitionResolver.resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  parameters:
  - description: <p>Uri of the service to resolve </p>
    name: serviceName
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>Key that identifies the partition to resolve </p>
    name: partitionKey
    type: <xref href="microsoft.servicefabric.services.client.ServicePartitionKey?alt=microsoft.servicefabric.services.client.ServicePartitionKey&text=ServicePartitionKey" data-throw-if-not-resolved="False"/>
  - description: <p>The timeout passed to FabricClient's </p>
    name: resolveTimeoutPerTry
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>The interval to back-off before retrying when FabricClient's method fails with a retriable exception. </p>
    name: maxRetryBackoffInterval
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A CompletableFuture that represents outstanding operation. The result from the Task is the <xref uid="system.fabric.ResolvedServicePartition" data-throw-if-not-resolved="false">system.fabric.ResolvedServicePartition</xref> object, that contains the information about the resolved service partition including the service endpoints. </p>
    type: CompletableFuture&lt;<xref href="system.fabric.ResolvedServicePartition?alt=system.fabric.ResolvedServicePartition&text=ResolvedServicePartition" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Resolves a partition of the specified service.</p>

    <p></p>
  syntax: public CompletableFuture<ResolvedServicePartition> resolveAsync(URI serviceName, ServicePartitionKey partitionKey, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
  uid: microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(URI,ServicePartitionKey,Duration,Duration)
uid: microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync*
fullName: microsoft.servicefabric.services.client.ServicePartitionResolver.resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
name: resolveAsync(ResolvedServicePartition previousRsp, Duration resolveTimeoutPerTry, Duration maxRetryBackoffInterval)
package: microsoft.servicefabric.services.client
metadata: {}
