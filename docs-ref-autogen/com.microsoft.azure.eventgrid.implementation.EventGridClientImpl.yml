### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  id: "EventGridClientImpl"
  parent: "com.microsoft.azure.eventgrid.implementation"
  children:
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(com.microsoft.rest.RestClient)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(com.microsoft.rest.credentials.ServiceClientCredentials)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientService"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.acceptLanguage()"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.apiVersion()"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.generateClientRequestId()"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.getAzureClient()"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.initialize()"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.longRunningOperationRetryTimeout()"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEvents(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.userAgent()"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withAcceptLanguage(java.lang.String)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withGenerateClientRequestId(boolean)"
  - "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withLongRunningOperationRetryTimeout(int)"
  langs:
  - "java"
  name: "EventGridClientImpl"
  nameWithType: "EventGridClientImpl"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  type: "Class"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Initializes a new instance of the EventGridClientImpl class."
  syntax:
    content: "public class EventGridClientImpl extends AzureServiceClient implements EventGridClient"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.rest.ServiceClient"
  - "com.microsoft.azure.AzureServiceClient"
  implements:
  - "com.microsoft.azure.eventgrid.EventGridClient"
  inheritedMembers:
  - "com.microsoft.azure.AzureServiceClient.userAgent()"
  - "com.microsoft.rest.ServiceClient.httpClient()"
  - "com.microsoft.rest.ServiceClient.restClient()"
  - "com.microsoft.rest.ServiceClient.retrofit()"
  - "com.microsoft.rest.ServiceClient.serializerAdapter()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(com.microsoft.rest.RestClient)"
  id: "EventGridClientImpl(com.microsoft.rest.RestClient)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "EventGridClientImpl(RestClient restClient)"
  nameWithType: "EventGridClientImpl.EventGridClientImpl(RestClient restClient)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(RestClient restClient)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Initializes an instance of EventGridClient client."
  syntax:
    content: "public EventGridClientImpl(RestClient restClient)"
    parameters:
    - id: "restClient"
      type: "com.microsoft.rest.RestClient"
      description: "the REST client to connect to Azure."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(com.microsoft.rest.credentials.ServiceClientCredentials)"
  id: "EventGridClientImpl(com.microsoft.rest.credentials.ServiceClientCredentials)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "EventGridClientImpl(ServiceClientCredentials credentials)"
  nameWithType: "EventGridClientImpl.EventGridClientImpl(ServiceClientCredentials credentials)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(ServiceClientCredentials credentials)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Initializes an instance of EventGridClient client."
  syntax:
    content: "public EventGridClientImpl(ServiceClientCredentials credentials)"
    parameters:
    - id: "credentials"
      type: "com.microsoft.rest.credentials.ServiceClientCredentials"
      description: "the management credentials for Azure"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(java.lang.String,com.microsoft.rest.credentials.ServiceClientCredentials)"
  id: "EventGridClientImpl(java.lang.String,com.microsoft.rest.credentials.ServiceClientCredentials)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "EventGridClientImpl(String baseUrl, ServiceClientCredentials credentials)"
  nameWithType: "EventGridClientImpl.EventGridClientImpl(String baseUrl, ServiceClientCredentials credentials)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl(String baseUrl, ServiceClientCredentials credentials)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl*"
  type: "Constructor"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Initializes an instance of EventGridClient client."
  syntax:
    content: "private EventGridClientImpl(String baseUrl, ServiceClientCredentials credentials)"
    parameters:
    - id: "baseUrl"
      type: "java.lang.String"
      description: "the base URL of the host"
    - id: "credentials"
      type: "com.microsoft.rest.credentials.ServiceClientCredentials"
      description: "the management credentials for Azure"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.acceptLanguage()"
  id: "acceptLanguage()"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "acceptLanguage()"
  nameWithType: "EventGridClientImpl.acceptLanguage()"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.acceptLanguage()"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.acceptLanguage*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Gets Gets or sets the preferred language for the response."
  syntax:
    content: "public String acceptLanguage()"
    return:
      type: "java.lang.String"
      description: "the acceptLanguage value."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.apiVersion()"
  id: "apiVersion()"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "apiVersion()"
  nameWithType: "EventGridClientImpl.apiVersion()"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.apiVersion()"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.apiVersion*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Gets Version of the API to be used with the client request."
  syntax:
    content: "public String apiVersion()"
    return:
      type: "java.lang.String"
      description: "the apiVersion value."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.generateClientRequestId()"
  id: "generateClientRequestId()"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "generateClientRequestId()"
  nameWithType: "EventGridClientImpl.generateClientRequestId()"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.generateClientRequestId()"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.generateClientRequestId*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Gets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true."
  syntax:
    content: "public boolean generateClientRequestId()"
    return:
      type: "boolean"
      description: "the generateClientRequestId value."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.getAzureClient()"
  id: "getAzureClient()"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "getAzureClient()"
  nameWithType: "EventGridClientImpl.getAzureClient()"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.getAzureClient()"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.getAzureClient*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Gets the <xref uid=\"\" data-throw-if-not-resolved=\"false\">AzureClient</xref> used for long running operations."
  syntax:
    content: "public AzureClient getAzureClient()"
    return:
      type: "com.microsoft.azure.AzureClient"
      description: "the azure client;"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.initialize()"
  id: "initialize()"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "initialize()"
  nameWithType: "EventGridClientImpl.initialize()"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.initialize()"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.initialize*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  syntax:
    content: "protected void initialize()"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.longRunningOperationRetryTimeout()"
  id: "longRunningOperationRetryTimeout()"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "longRunningOperationRetryTimeout()"
  nameWithType: "EventGridClientImpl.longRunningOperationRetryTimeout()"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.longRunningOperationRetryTimeout()"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.longRunningOperationRetryTimeout*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Gets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30."
  syntax:
    content: "public int longRunningOperationRetryTimeout()"
    return:
      type: "int"
      description: "the longRunningOperationRetryTimeout value."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEvents(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  id: "publishEvents(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "publishEvents(String topicHostname, List<EventGridEvent> events)"
  nameWithType: "EventGridClientImpl.publishEvents(String topicHostname, List<EventGridEvent> events)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEvents(String topicHostname, List<EventGridEvent> events)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEvents*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Publishes a batch of events to an Azure Event Grid topic."
  syntax:
    content: "public void publishEvents(String topicHostname, List<EventGridEvent> events)"
    parameters:
    - id: "topicHostname"
      type: "java.lang.String"
      description: "The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net"
    - id: "events"
      type: "java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>"
      description: "An array of events to be published to Event Grid."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  id: "publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "publishEventsAsync(String topicHostname, List<EventGridEvent> events)"
  nameWithType: "EventGridClientImpl.publishEventsAsync(String topicHostname, List<EventGridEvent> events)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync(String topicHostname, List<EventGridEvent> events)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Publishes a batch of events to an Azure Event Grid topic."
  syntax:
    content: "public Observable<Void> publishEventsAsync(String topicHostname, List<EventGridEvent> events)"
    parameters:
    - id: "topicHostname"
      type: "java.lang.String"
      description: "The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net"
    - id: "events"
      type: "java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>"
      description: "An array of events to be published to Event Grid."
    return:
      type: "rx.Observable<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  id: "publishEventsAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>,com.microsoft.rest.ServiceCallback<java.lang.Void>)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)"
  nameWithType: "EventGridClientImpl.publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Publishes a batch of events to an Azure Event Grid topic."
  syntax:
    content: "public ServiceFuture<Void> publishEventsAsync(String topicHostname, List<EventGridEvent> events, ServiceCallback<Void> serviceCallback)"
    parameters:
    - id: "topicHostname"
      type: "java.lang.String"
      description: "The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net"
    - id: "events"
      type: "java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>"
      description: "An array of events to be published to Event Grid."
    - id: "serviceCallback"
      type: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
      description: "the async ServiceCallback to handle successful and failed responses."
    return:
      type: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceFuture\" data-throw-if-not-resolved=\"false\">ServiceFuture</xref> object"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  id: "publishEventsWithServiceResponseAsync(java.lang.String,java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)"
  nameWithType: "EventGridClientImpl.publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsWithServiceResponseAsync*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Publishes a batch of events to an Azure Event Grid topic."
  syntax:
    content: "public Observable<ServiceResponse<Void>> publishEventsWithServiceResponseAsync(String topicHostname, List<EventGridEvent> events)"
    parameters:
    - id: "topicHostname"
      type: "java.lang.String"
      description: "The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net"
    - id: "events"
      type: "java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>"
      description: "An array of events to be published to Event Grid."
    return:
      type: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
      description: "the <xref uid=\"com.microsoft.rest.ServiceResponse\" data-throw-if-not-resolved=\"false\">ServiceResponse</xref> object if successful."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.userAgent()"
  id: "userAgent()"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "userAgent()"
  nameWithType: "EventGridClientImpl.userAgent()"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.userAgent()"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.userAgent*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Gets the User-Agent header for the client."
  syntax:
    content: "public String userAgent()"
    return:
      type: "java.lang.String"
      description: "the user agent string."
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withAcceptLanguage(java.lang.String)"
  id: "withAcceptLanguage(java.lang.String)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "withAcceptLanguage(String acceptLanguage)"
  nameWithType: "EventGridClientImpl.withAcceptLanguage(String acceptLanguage)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withAcceptLanguage(String acceptLanguage)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withAcceptLanguage*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Sets Gets or sets the preferred language for the response."
  syntax:
    content: "public EventGridClientImpl withAcceptLanguage(String acceptLanguage)"
    parameters:
    - id: "acceptLanguage"
      type: "java.lang.String"
      description: "the acceptLanguage value."
    return:
      type: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
      description: "the service client itself"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withGenerateClientRequestId(boolean)"
  id: "withGenerateClientRequestId(boolean)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "withGenerateClientRequestId(boolean generateClientRequestId)"
  nameWithType: "EventGridClientImpl.withGenerateClientRequestId(boolean generateClientRequestId)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withGenerateClientRequestId(boolean generateClientRequestId)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withGenerateClientRequestId*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Sets When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true."
  syntax:
    content: "public EventGridClientImpl withGenerateClientRequestId(boolean generateClientRequestId)"
    parameters:
    - id: "generateClientRequestId"
      type: "boolean"
      description: "the generateClientRequestId value."
    return:
      type: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
      description: "the service client itself"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withLongRunningOperationRetryTimeout(int)"
  id: "withLongRunningOperationRetryTimeout(int)"
  parent: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
  langs:
  - "java"
  name: "withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)"
  nameWithType: "EventGridClientImpl.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)"
  overload: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withLongRunningOperationRetryTimeout*"
  type: "Method"
  package: "com.microsoft.azure.eventgrid.implementation"
  summary: "Sets Gets or sets the retry timeout in seconds for Long Running Operations. Default value is 30."
  syntax:
    content: "public EventGridClientImpl withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout)"
    parameters:
    - id: "longRunningOperationRetryTimeout"
      type: "int"
      description: "the longRunningOperationRetryTimeout value."
    return:
      type: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl"
      description: "the service client itself"
references:
- uid: "com.microsoft.rest.credentials.ServiceClientCredentials"
  spec.java:
  - uid: "com.microsoft.rest.credentials.ServiceClientCredentials"
    name: "ServiceClientCredentials"
    fullName: "com.microsoft.rest.credentials.ServiceClientCredentials"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl*"
  name: "EventGridClientImpl"
  nameWithType: "EventGridClientImpl.EventGridClientImpl"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientImpl"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.rest.RestClient"
  spec.java:
  - uid: "com.microsoft.rest.RestClient"
    name: "RestClient"
    fullName: "com.microsoft.rest.RestClient"
- uid: "com.microsoft.azure.AzureClient"
  spec.java:
  - uid: "com.microsoft.azure.AzureClient"
    name: "AzureClient"
    fullName: "com.microsoft.azure.AzureClient"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.getAzureClient*"
  name: "getAzureClient"
  nameWithType: "EventGridClientImpl.getAzureClient"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.getAzureClient"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.apiVersion*"
  name: "apiVersion"
  nameWithType: "EventGridClientImpl.apiVersion"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.apiVersion"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.acceptLanguage*"
  name: "acceptLanguage"
  nameWithType: "EventGridClientImpl.acceptLanguage"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.acceptLanguage"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withAcceptLanguage*"
  name: "withAcceptLanguage"
  nameWithType: "EventGridClientImpl.withAcceptLanguage"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withAcceptLanguage"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.longRunningOperationRetryTimeout*"
  name: "longRunningOperationRetryTimeout"
  nameWithType: "EventGridClientImpl.longRunningOperationRetryTimeout"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.longRunningOperationRetryTimeout"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withLongRunningOperationRetryTimeout*"
  name: "withLongRunningOperationRetryTimeout"
  nameWithType: "EventGridClientImpl.withLongRunningOperationRetryTimeout"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withLongRunningOperationRetryTimeout"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.generateClientRequestId*"
  name: "generateClientRequestId"
  nameWithType: "EventGridClientImpl.generateClientRequestId"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.generateClientRequestId"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withGenerateClientRequestId*"
  name: "withGenerateClientRequestId"
  nameWithType: "EventGridClientImpl.withGenerateClientRequestId"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.withGenerateClientRequestId"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.initialize*"
  name: "initialize"
  nameWithType: "EventGridClientImpl.initialize"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.initialize"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.userAgent*"
  name: "userAgent"
  nameWithType: "EventGridClientImpl.userAgent"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.userAgent"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "java.util.List<com.microsoft.azure.eventgrid.models.EventGridEvent>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.azure.eventgrid.models.EventGridEvent"
    name: "EventGridEvent"
    fullName: "com.microsoft.azure.eventgrid.models.EventGridEvent"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEvents*"
  name: "publishEvents"
  nameWithType: "EventGridClientImpl.publishEvents"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEvents"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.rest.ServiceCallback<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceCallback"
    name: "ServiceCallback"
    fullName: "com.microsoft.rest.ServiceCallback"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.rest.ServiceFuture<java.lang.Void>"
  spec.java:
  - uid: "com.microsoft.rest.ServiceFuture"
    name: "ServiceFuture"
    fullName: "com.microsoft.rest.ServiceFuture"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync*"
  name: "publishEventsAsync"
  nameWithType: "EventGridClientImpl.publishEventsAsync"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsAsync"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "rx.Observable<java.lang.Void>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "rx.Observable<com.microsoft.rest.ServiceResponse<java.lang.Void>>"
  spec.java:
  - uid: "rx.Observable"
    name: "Observable"
    fullName: "rx.Observable"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.rest.ServiceResponse"
    name: "ServiceResponse"
    fullName: "com.microsoft.rest.ServiceResponse"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsWithServiceResponseAsync*"
  name: "publishEventsWithServiceResponseAsync"
  nameWithType: "EventGridClientImpl.publishEventsWithServiceResponseAsync"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.publishEventsWithServiceResponseAsync"
  package: "com.microsoft.azure.eventgrid.implementation"
- uid: "com.microsoft.azure.AzureServiceClient"
  name: "AzureServiceClient"
  nameWithType: "AzureServiceClient"
  fullName: "com.microsoft.azure.AzureServiceClient"
- uid: "com.microsoft.azure.eventgrid.EventGridClient"
  name: "EventGridClient"
  nameWithType: "EventGridClient"
  fullName: "com.microsoft.azure.eventgrid.EventGridClient"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.microsoft.rest.ServiceClient.serializerAdapter()"
  name: "ServiceClient.serializerAdapter()"
  nameWithType: "ServiceClient.serializerAdapter()"
  fullName: "com.microsoft.rest.ServiceClient.serializerAdapter()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.microsoft.rest.ServiceClient.httpClient()"
  name: "ServiceClient.httpClient()"
  nameWithType: "ServiceClient.httpClient()"
  fullName: "com.microsoft.rest.ServiceClient.httpClient()"
- uid: "com.microsoft.rest.ServiceClient.restClient()"
  name: "ServiceClient.restClient()"
  nameWithType: "ServiceClient.restClient()"
  fullName: "com.microsoft.rest.ServiceClient.restClient()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.AzureServiceClient.userAgent()"
  name: "AzureServiceClient.userAgent()"
  nameWithType: "AzureServiceClient.userAgent()"
  fullName: "com.microsoft.azure.AzureServiceClient.userAgent()"
- uid: "com.microsoft.rest.ServiceClient.retrofit()"
  name: "ServiceClient.retrofit()"
  nameWithType: "ServiceClient.retrofit()"
  fullName: "com.microsoft.rest.ServiceClient.retrofit()"
- uid: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientService"
  name: "EventGridClientImpl.EventGridClientService"
  nameWithType: "EventGridClientImpl.EventGridClientService"
  fullName: "com.microsoft.azure.eventgrid.implementation.EventGridClientImpl.EventGridClientService"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.microsoft.azure.eventgrid.models.EventGridEvent"
  name: "EventGridEvent"
  nameWithType: "EventGridEvent"
  fullName: "com.microsoft.azure.eventgrid.models.EventGridEvent"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.microsoft.rest.ServiceCallback"
  name: "ServiceCallback"
  nameWithType: "ServiceCallback"
  fullName: "com.microsoft.rest.ServiceCallback"
- uid: "com.microsoft.rest.ServiceFuture"
  name: "ServiceFuture"
  nameWithType: "ServiceFuture"
  fullName: "com.microsoft.rest.ServiceFuture"
- uid: "rx.Observable"
  name: "Observable"
  nameWithType: "Observable"
  fullName: "rx.Observable"
- uid: "com.microsoft.rest.ServiceResponse"
  name: "ServiceResponse"
  nameWithType: "ServiceResponse"
  fullName: "com.microsoft.rest.ServiceResponse"
