### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations
  id: DeviceOperations
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin
  children:
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.DeviceOperations()
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,byte[],java.lang.String,long)
  - com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.setHeaders(java.util.Map<java.lang.String,java.lang.String>)
  langs:
  - java
  name: DeviceOperations
  nameWithType: DeviceOperations
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations
  type: Class
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Set of common operations for Twin and Method.
  syntax:
    content: public class DeviceOperations
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.DeviceOperations()
  id: DeviceOperations()
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations
  langs:
  - java
  name: DeviceOperations()
  nameWithType: DeviceOperations.DeviceOperations()
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.DeviceOperations()
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.DeviceOperations*
  type: Constructor
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  syntax:
    content: public DeviceOperations()
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,byte[],java.lang.String,long)
  id: request(com.microsoft.azure.sdk.iot.service.IotHubConnectionString,java.net.URL,com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod,byte[],java.lang.String,long)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations
  langs:
  - java
  name: request(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, byte[] payload, String requestId, long timeoutInMs)
  nameWithType: DeviceOperations.request(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, byte[] payload, String requestId, long timeoutInMs)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, byte[] payload, String requestId, long timeoutInMs)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Send a http request to the IoTHub using the Twin/Method standard, and return its response.
  syntax:
    content: public static HttpResponse request(IotHubConnectionString iotHubConnectionString, URL url, HttpMethod method, byte[] payload, String requestId, long timeoutInMs)
    parameters:
    - id: iotHubConnectionString
      type: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
      description: is the connection string for the IoTHub
    - id: url
      type: java.net.URL
      description: is the Twin URL for the device ID.
    - id: method
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
      description: is the HTTP method (GET, POST, DELETE, PATCH, PUT).
    - id: payload
      type: byte[]
      description: is the array of bytes that contains the payload.
    - id: requestId
      type: java.lang.String
      description: is an unique number that identify the request.
    - id: timeoutInMs
      type: long
      description: is timeout in milliseconds.
    return:
      type: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse
      description: the result of the request.
  exceptions:
  - type: java.io.IOException
    description: This exception is thrown if the response verification failed
  - type: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
    description: This exception is thrown if the response verification failed
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if the response verification failed
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.setHeaders(java.util.Map<java.lang.String,java.lang.String>)
  id: setHeaders(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.24.0
  parent: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations
  langs:
  - java
  name: setHeaders(Map<String,String> httpHeaders)
  nameWithType: DeviceOperations.setHeaders(Map<String,String> httpHeaders)
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.setHeaders(Map<String,String> httpHeaders)
  overload: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.setHeaders*
  type: Method
  package: com.microsoft.azure.sdk.iot.service.devicetwin
  summary: Sets headers to be used on next HTTP request
  syntax:
    content: public static void setHeaders(Map<String,String> httpHeaders)
    parameters:
    - id: httpHeaders
      type: java.util.Map<java.lang.String,java.lang.String>
      description: non null and non empty custom headers
  exceptions:
  - type: java.lang.IllegalArgumentException
    description: This exception is thrown if headers were null or empty
references:
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.DeviceOperations*
  name: DeviceOperations
  nameWithType: DeviceOperations.DeviceOperations
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.DeviceOperations
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.io.IOException
  spec.java:
  - uid: java.io.IOException
    name: IOException
    fullName: java.io.IOException
- uid: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
  name: IotHubException
  nameWithType: IotHubException
  fullName: com.microsoft.azure.sdk.iot.service.exceptions.IotHubException
- uid: java.lang.IllegalArgumentException
  spec.java:
  - uid: java.lang.IllegalArgumentException
    name: IllegalArgumentException
    fullName: java.lang.IllegalArgumentException
- uid: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
  name: IotHubConnectionString
  nameWithType: IotHubConnectionString
  fullName: com.microsoft.azure.sdk.iot.service.IotHubConnectionString
- uid: java.net.URL
  spec.java:
  - uid: java.net.URL
    name: URL
    fullName: java.net.URL
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpMethod
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: com.microsoft.azure.sdk.iot.service.transport.http.HttpResponse
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request*
  name: request
  nameWithType: DeviceOperations.request
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.request
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.setHeaders*
  name: setHeaders
  nameWithType: DeviceOperations.setHeaders
  fullName: com.microsoft.azure.sdk.iot.service.devicetwin.DeviceOperations.setHeaders
  package: com.microsoft.azure.sdk.iot.service.devicetwin
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
