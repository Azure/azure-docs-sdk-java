### YamlMime:JavaMember
nameWithType: PnpHelper.createPropertyPatch
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.pnphelpers.PnpHelper.createPropertyPatch(@NonNull final String propertyName, @NonNull final Object propertyValue, String componentName)
  name: createPropertyPatch(@NonNull final String propertyName, @NonNull final Object propertyValue, String componentName)
  nameWithType: PnpHelper.createPropertyPatch(@NonNull final String propertyName, @NonNull final Object propertyValue, String componentName)
  parameters:
  - description: <p>The property name, as defined in the DTDL interface. </p>
    name: propertyName
    type: <xref href="%40NonNull+final+String?alt=@NonNull final String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The property value, in the format defined in the DTDL interface. </p>
    name: propertyValue
    type: <xref href="%40NonNull+final+Object?alt=@NonNull final Object&text=%40NonNull+final+Object" data-throw-if-not-resolved="False"/>
  - description: <p>(optional) The name of the component in which the property is defined. Can be null for property defined under the root interface. </p>
    name: componentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The property path for read-only and read-write property updates.</p>
    type: Set&lt;<xref href="com.microsoft.azure.sdk.iot.device.DeviceTwin.Property?alt=com.microsoft.azure.sdk.iot.device.DeviceTwin.Property&text=Property" data-throw-if-not-resolved="False"/>&gt;
  summary: "<p>Create a key-value property patch for both read-only and read-write properties. \r\nThe property patch is created in the below format: { \"sampleComponentName\": { \"__t\": \"c\", \"samplePropertyName\"\": 20 } } </p>"
  syntax: public static Set<Property> createPropertyPatch(@NonNull final String propertyName, @NonNull final Object propertyValue, String componentName)
  uid: com.microsoft.azure.sdk.iot.pnphelpers.PnpHelper.createPropertyPatch(@NonNull final String,@NonNull final Object,String)
- fullName: com.microsoft.azure.sdk.iot.pnphelpers.PnpHelper.createPropertyPatch(@NonNull String propertyName, @NonNull Object propertyValue)
  name: createPropertyPatch(@NonNull String propertyName, @NonNull Object propertyValue)
  nameWithType: PnpHelper.createPropertyPatch(@NonNull String propertyName, @NonNull Object propertyValue)
  parameters:
  - description: <p>The property name, as defined in the DTDL interface. </p>
    name: propertyName
    type: <xref href="%40NonNull+String?alt=@NonNull String&text=%40NonNull+String" data-throw-if-not-resolved="False"/>
  - description: <p>The property value, in the format defined in the DTDL interface. </p>
    name: propertyValue
    type: <xref href="%40NonNull+Object?alt=@NonNull Object&text=%40NonNull+Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The property path for read-only and read-write property updates.</p>
    type: Set&lt;<xref href="com.microsoft.azure.sdk.iot.device.DeviceTwin.Property?alt=com.microsoft.azure.sdk.iot.device.DeviceTwin.Property&text=Property" data-throw-if-not-resolved="False"/>&gt;
  summary: "<p>Create a key-value property patch for both read-only and read-write properties. \r\nThe property patch is created in the below format: { \"samplePropertyName\": 20 } </p>"
  syntax: public static Set<Property> createPropertyPatch(@NonNull String propertyName, @NonNull Object propertyValue)
  uid: com.microsoft.azure.sdk.iot.pnphelpers.PnpHelper.createPropertyPatch(@NonNull String,@NonNull Object)
uid: com.microsoft.azure.sdk.iot.pnphelpers.PnpHelper.createPropertyPatch*
fullName: com.microsoft.azure.sdk.iot.pnphelpers.PnpHelper.createPropertyPatch(@NonNull final String propertyName, @NonNull final Object propertyValue, String componentName)
name: createPropertyPatch(@NonNull final String propertyName, @NonNull final Object propertyValue, String componentName)
package: com.microsoft.azure.sdk.iot.pnphelpers
metadata: {}
