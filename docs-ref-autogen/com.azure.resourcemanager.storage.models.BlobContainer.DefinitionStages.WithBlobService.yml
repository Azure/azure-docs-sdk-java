### YamlMime:JavaType
uid: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService"
fullName: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService"
name: "BlobContainer.DefinitionStages.WithBlobService"
nameWithType: "BlobContainer.DefinitionStages.WithBlobService"
summary: "The stage of the blobcontainer definition allowing to specify Blob<wbr>Service."
syntax: "public static interface BlobContainer.DefinitionStages.WithBlobService"
methods:
- uid: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService.withExistingBlobService(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService.withExistingBlobService(String resourceGroupName, String accountName)"
  name: "withExistingBlobService(String resourceGroupName, String accountName)"
  nameWithType: "BlobContainer.DefinitionStages.WithBlobService.withExistingBlobService(String resourceGroupName, String accountName)"
  summary: "Specifies resource<wbr>Group<wbr>Name, account<wbr>Name."
  deprecatedTag: "use <xref uid=\"com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService.withExistingStorageAccount(java.lang.String,java.lang.String)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#withExistingStorageAccount(String, String)\"></xref>"
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription. The name is case\n     insensitive"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the storage account within the specified resource group. Storage account\n     names must be between 3 and 24 characters in length and use numbers and lower-case letters only"
    name: "accountName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "@Deprecated\npublic abstract BlobContainer.DefinitionStages.WithPublicAccess withExistingBlobService(String resourceGroupName, String accountName)"
  desc: "Specifies resourceGroupName, accountName."
  hasDeprecatedTag: true
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithPublicAccess?alt=com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithPublicAccess&text=WithPublicAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService.withExistingStorageAccount(com.azure.resourcemanager.storage.models.StorageAccount)"
  fullName: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService.withExistingStorageAccount(StorageAccount storageAccount)"
  name: "withExistingStorageAccount(StorageAccount storageAccount)"
  nameWithType: "BlobContainer.DefinitionStages.WithBlobService.withExistingStorageAccount(StorageAccount storageAccount)"
  summary: "Specifies resource<wbr>Group<wbr>Name, account<wbr>Name."
  modifiers:
  - "abstract"
  parameters:
  - description: "the storage account."
    name: "storageAccount"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.StorageAccount?alt=com.azure.resourcemanager.storage.models.StorageAccount&text=StorageAccount\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract BlobContainer.DefinitionStages.WithPublicAccess withExistingStorageAccount(StorageAccount storageAccount)"
  desc: "Specifies resourceGroupName, accountName."
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithPublicAccess?alt=com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithPublicAccess&text=WithPublicAccess\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService.withExistingStorageAccount(java.lang.String,java.lang.String)"
  fullName: "com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithBlobService.withExistingStorageAccount(String resourceGroupName, String accountName)"
  name: "withExistingStorageAccount(String resourceGroupName, String accountName)"
  nameWithType: "BlobContainer.DefinitionStages.WithBlobService.withExistingStorageAccount(String resourceGroupName, String accountName)"
  summary: "Specifies resource<wbr>Group<wbr>Name, account<wbr>Name."
  modifiers:
  - "abstract"
  parameters:
  - description: "The name of the resource group within the user's subscription. The name is case\n     insensitive"
    name: "resourceGroupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The name of the storage account within the specified resource group. Storage account\n     names must be between 3 and 24 characters in length and use numbers and lower-case letters only"
    name: "accountName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract BlobContainer.DefinitionStages.WithPublicAccess withExistingStorageAccount(String resourceGroupName, String accountName)"
  desc: "Specifies resourceGroupName, accountName."
  returns:
    description: "the next definition stage"
    type: "<xref href=\"com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithPublicAccess?alt=com.azure.resourcemanager.storage.models.BlobContainer.DefinitionStages.WithPublicAccess&text=WithPublicAccess\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "The stage of the blobcontainer definition allowing to specify BlobService."
metadata: {}
package: "com.azure.resourcemanager.storage.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-storage:2.19.0
