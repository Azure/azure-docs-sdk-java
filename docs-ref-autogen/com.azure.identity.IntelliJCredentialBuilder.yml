### YamlMime:JavaType
uid: "com.azure.identity.IntelliJCredentialBuilder"
fullName: "com.azure.identity.IntelliJCredentialBuilder"
name: "IntelliJCredentialBuilder"
nameWithType: "IntelliJCredentialBuilder"
summary: "Fluent credential builder for instantiating a <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.identity.CredentialBuilderBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.identity.CredentialBuilderBase?alt=com.azure.identity.CredentialBuilderBase&text=CredentialBuilderBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)?alt=com.azure.identity.CredentialBuilderBase.addPolicy&text=addPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.clientOptions(com.azure.core.util.ClientOptions)?alt=com.azure.identity.CredentialBuilderBase.clientOptions&text=clientOptions\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.configuration(com.azure.core.util.Configuration)?alt=com.azure.identity.CredentialBuilderBase.configuration&text=configuration\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.enableAccountIdentifierLogging()?alt=com.azure.identity.CredentialBuilderBase.enableAccountIdentifierLogging&text=enableAccountIdentifierLogging\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.httpClient(com.azure.core.http.HttpClient)?alt=com.azure.identity.CredentialBuilderBase.httpClient&text=httpClient\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)?alt=com.azure.identity.CredentialBuilderBase.httpLogOptions&text=httpLogOptions\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.httpPipeline(com.azure.core.http.HttpPipeline)?alt=com.azure.identity.CredentialBuilderBase.httpPipeline&text=httpPipeline\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.maxRetry(int)?alt=com.azure.identity.CredentialBuilderBase.maxRetry&text=maxRetry\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.pipeline(com.azure.core.http.HttpPipeline)?alt=com.azure.identity.CredentialBuilderBase.pipeline&text=pipeline\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.proxyOptions(com.azure.core.http.ProxyOptions)?alt=com.azure.identity.CredentialBuilderBase.proxyOptions&text=proxyOptions\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.retryOptions(com.azure.core.http.policy.RetryOptions)?alt=com.azure.identity.CredentialBuilderBase.retryOptions&text=retryOptions\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.retryPolicy(com.azure.core.http.policy.RetryPolicy)?alt=com.azure.identity.CredentialBuilderBase.retryPolicy&text=retryPolicy\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.identity.CredentialBuilderBase.retryTimeout(java.util.function.Function<java.time.Duration,java.time.Duration>)?alt=com.azure.identity.CredentialBuilderBase.retryTimeout&text=retryTimeout\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public class **IntelliJCredentialBuilder**</br> extends <xref href=\"com.azure.identity.CredentialBuilderBase?alt=com.azure.identity.CredentialBuilderBase&text=CredentialBuilderBase\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.identity.VisualStudioCodeCredentialBuilder?alt=com.azure.identity.VisualStudioCodeCredentialBuilder&text=VisualStudioCodeCredentialBuilder\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.identity.IntelliJCredentialBuilder.IntelliJCredentialBuilder()"
  fullName: "com.azure.identity.IntelliJCredentialBuilder.IntelliJCredentialBuilder()"
  name: "IntelliJCredentialBuilder()"
  nameWithType: "IntelliJCredentialBuilder.IntelliJCredentialBuilder()"
  summary: "Constructs an instance of Intelli<wbr>JCredential<wbr>Builder."
  syntax: "public IntelliJCredentialBuilder()"
  desc: "Constructs an instance of IntelliJCredentialBuilder."
methods:
- uid: "com.azure.identity.IntelliJCredentialBuilder.additionallyAllowedTenants(java.lang.String...)"
  fullName: "com.azure.identity.IntelliJCredentialBuilder.additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  name: "additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  nameWithType: "IntelliJCredentialBuilder.additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  summary: "Specifies tenants in addition to the specified tenant<wbr>Id for which the credential may acquire tokens."
  parameters:
  - description: "the additionally allowed tenants."
    name: "additionallyAllowedTenants"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>[]"
  syntax: "public IntelliJCredentialBuilder additionallyAllowedTenants(String[] additionallyAllowedTenants)"
  desc: "Specifies tenants in addition to the specified tenantId for which the credential may acquire tokens. Add the wildcard value \"\\*\" to allow the credential to acquire tokens for any tenant the logged in account can access. If no value is specified for tenantId this option will have no effect, and the credential will acquire tokens for any requested tenant."
  returns:
    description: "An updated instance of this builder with the additional tenants configured."
    type: "<xref href=\"com.azure.identity.IntelliJCredentialBuilder?alt=com.azure.identity.IntelliJCredentialBuilder&text=IntelliJCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.IntelliJCredentialBuilder.additionallyAllowedTenants(java.util.List<java.lang.String>)"
  fullName: "com.azure.identity.IntelliJCredentialBuilder.additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  name: "additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  nameWithType: "IntelliJCredentialBuilder.additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  summary: "Specifies tenants in addition to the specified tenant<wbr>Id for which the credential may acquire tokens."
  parameters:
  - description: "the additionally allowed tenants."
    name: "additionallyAllowedTenants"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public IntelliJCredentialBuilder additionallyAllowedTenants(List<String> additionallyAllowedTenants)"
  desc: "Specifies tenants in addition to the specified tenantId for which the credential may acquire tokens. Add the wildcard value \"\\*\" to allow the credential to acquire tokens for any tenant the logged in account can access. If no value is specified for tenantId this option will have no effect, and the credential will acquire tokens for any requested tenant."
  returns:
    description: "An updated instance of this builder with the additional tenants configured."
    type: "<xref href=\"com.azure.identity.IntelliJCredentialBuilder?alt=com.azure.identity.IntelliJCredentialBuilder&text=IntelliJCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.IntelliJCredentialBuilder.build()"
  fullName: "com.azure.identity.IntelliJCredentialBuilder.build()"
  name: "build()"
  nameWithType: "IntelliJCredentialBuilder.build()"
  summary: "Creates a new <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref> with the current configurations."
  syntax: "public IntelliJCredential build()"
  desc: "Creates a new <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref> with the current configurations."
  returns:
    description: "a <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref> with the current configurations."
    type: "<xref href=\"com.azure.identity.IntelliJCredential?alt=com.azure.identity.IntelliJCredential&text=IntelliJCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.IntelliJCredentialBuilder.keePassDatabasePath(java.lang.String)"
  fullName: "com.azure.identity.IntelliJCredentialBuilder.keePassDatabasePath(String databasePath)"
  name: "keePassDatabasePath(String databasePath)"
  nameWithType: "IntelliJCredentialBuilder.keePassDatabasePath(String databasePath)"
  summary: "Specifies the Kee<wbr>Pass database path to read the cached credentials of Azure toolkit for IntelliJ plugin."
  parameters:
  - description: "the path to the KeePass database."
    name: "databasePath"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public IntelliJCredentialBuilder keePassDatabasePath(String databasePath)"
  desc: "Specifies the KeePass database path to read the cached credentials of Azure toolkit for IntelliJ plugin. The `databasePath` is required on Windows platform. For macOS and Linux platform native key chain / key ring will be accessed respectively to retrieve the cached credentials.\n\nThis path can be located in the IntelliJ IDE. Windows: File -> Settings -> Appearance & Behavior -> System Settings -> Passwords."
  returns:
    description: "An updated instance of this builder with the KeePass database path set as specified."
    type: "<xref href=\"com.azure.identity.IntelliJCredentialBuilder?alt=com.azure.identity.IntelliJCredentialBuilder&text=IntelliJCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.identity.IntelliJCredentialBuilder.tenantId(java.lang.String)"
  fullName: "com.azure.identity.IntelliJCredentialBuilder.tenantId(String tenantId)"
  name: "tenantId(String tenantId)"
  nameWithType: "IntelliJCredentialBuilder.tenantId(String tenantId)"
  summary: "Sets the tenant id of the user to authenticate through the <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref>."
  parameters:
  - description: "the tenant ID to set."
    name: "tenantId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public IntelliJCredentialBuilder tenantId(String tenantId)"
  desc: "Sets the tenant id of the user to authenticate through the <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref>. The default is the tenant the user originally authenticated to via the Azure Toolkit for IntelliJ plugin."
  returns:
    description: "An updated instance of this builder with the tenant id set as specified."
    type: "<xref href=\"com.azure.identity.IntelliJCredentialBuilder?alt=com.azure.identity.IntelliJCredentialBuilder&text=IntelliJCredentialBuilder\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Fluent credential builder for instantiating a <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref>.\n\nIntelliJ IDEA is an integrated development environment (IDE) developed by JetBrains, which provides a variety of features to support software development, such as code completion, debugging, and testing. Azure offers [Azure Toolkit for IntelliJ plugin][] for the IntelliJ IDEA development environment. It enables developers to create, test, and deploy Java applications to the Azure cloud platform. In order to use the plugin authentication as a user or service principal against [Microsoft Entra ID][] is required. The <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"IntelliJCredential\"></xref> authenticates in a development environment and acquires a token on behalf of the logged-in account in Azure Toolkit for IntelliJ. It uses the logged in user information on the IntelliJ IDE and uses it to authenticate the application against Microsoft Entra ID.\n\n**Sample: Construct IntelliJCredential**\n\nThe following code sample demonstrates the creation of a <xref uid=\"com.azure.identity.IntelliJCredential\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.identity.IntelliJCredential\"></xref>, using the <xref uid=\"com.azure.identity.IntelliJCredentialBuilder\" data-throw-if-not-resolved=\"false\" data-raw-source=\"com.azure.identity.IntelliJCredentialBuilder\"></xref> to configure it. Once this credential is created, it may be passed into the builder of many of the Azure SDK for Java client builders as the 'credential' parameter.\n\n```java\nTokenCredential intelliJCredential = new IntelliJCredentialBuilder()\n     .build();\n```\n\n\n[Azure Toolkit for IntelliJ plugin]: https://learn.microsoft.com/azure/developer/java/toolkit-for-intellij/\n[Microsoft Entra ID]: https://learn.microsoft.com/entra/fundamentals/"
metadata: {}
package: "com.azure.identity"
artifact: com.azure:azure-identity:1.13.3
