### YamlMime:ManagedReference
items:
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext
  id: TelemetryContext
  parent: com.microsoft.applicationinsights.telemetry
  children:
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getCloud()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser()
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize(TelemetryContext)
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey(String)
  - com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext()
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext
  type: Class
  source:
    remote: &o0
      path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
      branch: master
      repo: https://github.com/Microsoft/ApplicationInsights-Java
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 45
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Represents a context for sending telemetry to the Application Insights service. The context holds data that is sent with every telemetry item. It includes the instrumentation key; the current operation id, for correlating related telemetry items; and user, session and device data. You can also set properties that are added to every telemetry item, and can be used in the portal to filter the telemetry that used this context. </p>"
  syntax: &o1
    content: public class TelemetryContext
  inheritance:
  - java.lang.Object
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getCloud()
  id: getCloud()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getCloud()
  nameWithType: TelemetryContext.getCloud()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getCloud()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getCloud*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 143
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the object describing the role and instnace in the cloud. </p>"
  syntax:
    content: public CloudContext getCloud()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.CloudContext
      description: <p>the cloud context </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent()
  id: getComponent()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getComponent()
  nameWithType: TelemetryContext.getComponent()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 70
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the object describing the component (application) tracked by this instance. </p>"
  syntax:
    content: public ComponentContext getComponent()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.ComponentContext
      description: <p>The component. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice()
  id: getDevice()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getDevice()
  nameWithType: TelemetryContext.getDevice()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 82
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the object describing the device tracked by this instance. </p>"
  syntax:
    content: public DeviceContext getDevice()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.DeviceContext
      description: <p>The device. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey()
  id: getInstrumentationKey()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getInstrumentationKey()
  nameWithType: TelemetryContext.getInstrumentationKey()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 162
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the default instrumentation key for all <xref uid=\"com.microsoft.applicationinsights.telemetry.Telemetry\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.telemetry.Telemetry</xref> objects logged in this <xref uid=\"\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.telemetry.TelemetryContext</xref>.</p>\r\n<p>By default, this property is initialized with the InstrumentationKey value which is in <xref uid=\"com.microsoft.applicationinsights.TelemetryConfiguration\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.TelemetryConfiguration</xref> of the 'Active' instance.</p>\r\n<p>You can specify it for all telemetry tracked via a particular <xref uid=\"com.microsoft.applicationinsights.TelemetryClient\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.TelemetryClient</xref> or for a specific <xref uid=\"com.microsoft.applicationinsights.telemetry.Telemetry\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.telemetry.Telemetry</xref></p>\r\n<p></p>"
  syntax:
    content: public String getInstrumentationKey()
    return:
      type: "26831127"
      description: <p>The instrumentation key </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal()
  id: getInternal()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getInternal()
  nameWithType: TelemetryContext.getInternal()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 210
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: public InternalContext getInternal()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.InternalContext
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation()
  id: getLocation()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getLocation()
  nameWithType: TelemetryContext.getLocation()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 131
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the object describing a location tracked by this instance. </p>"
  syntax:
    content: public LocationContext getLocation()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.LocationContext
      description: <p>The location. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation()
  id: getOperation()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getOperation()
  nameWithType: TelemetryContext.getOperation()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 119
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the current operation (typically an HTTP request). Used to correlate events - for example, exceptions generated while processing a request. </p>"
  syntax:
    content: public OperationContext getOperation()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.OperationContext
      description: <p>The operation. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties()
  id: getProperties()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getProperties()
  nameWithType: TelemetryContext.getProperties()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 186
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets a dictionary of application-defined property values. </p>"
  syntax:
    content: public ConcurrentMap<String, String> getProperties()
    return:
      type: bc7a2f3a
      description: <p>The application-defined property values. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession()
  id: getSession()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getSession()
  nameWithType: TelemetryContext.getSession()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 94
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the object describing a user session tracked by this instance. </p>"
  syntax:
    content: public SessionContext getSession()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.SessionContext
      description: <p>The user's session. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags()
  id: getTags()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getTags()
  nameWithType: TelemetryContext.getTags()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 194
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets a dictionary of context tags. </p>"
  syntax:
    content: public ConcurrentMap<String, String> getTags()
    return:
      type: bc7a2f3a
      description: <p>The tags. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser()
  id: getUser()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: getUser()
  nameWithType: TelemetryContext.getUser()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 106
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Gets the object describing a user tracked by this instance. </p>"
  syntax:
    content: public UserContext getUser()
    return:
      type: com.microsoft.applicationinsights.extensibility.context.UserContext
      description: <p>The user. </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize(TelemetryContext)
  id: initialize(TelemetryContext)
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: initialize(TelemetryContext source)
  nameWithType: TelemetryContext.initialize(TelemetryContext source)
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize(TelemetryContext source)
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 198
  package: com.microsoft.applicationinsights.telemetry
  syntax:
    content: public void initialize(TelemetryContext source)
    parameters:
    - id: source
      type: com.microsoft.applicationinsights.telemetry.TelemetryContext
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey(String)
  id: setInstrumentationKey(String)
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: setInstrumentationKey(String instrumentationKey)
  nameWithType: TelemetryContext.setInstrumentationKey(String instrumentationKey)
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey(String instrumentationKey)
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey*
  type: Method
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 178
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Sets the default instrumentation key for all <xref uid=\"com.microsoft.applicationinsights.telemetry.Telemetry\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.telemetry.Telemetry</xref> objects logged in this <xref uid=\"\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.telemetry.TelemetryContext</xref>.</p>\r\n<p>By default, this property is initialized with the InstrumentationKey value which is in <xref uid=\"com.microsoft.applicationinsights.TelemetryConfiguration\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.TelemetryConfiguration</xref> of the 'Active' instance.</p>\r\n<p>You can specify it for all telemetry tracked via a particular <xref uid=\"com.microsoft.applicationinsights.TelemetryClient\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.TelemetryClient</xref> or for a specific <xref uid=\"com.microsoft.applicationinsights.telemetry.Telemetry\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.telemetry.Telemetry</xref></p>\r\n<p></p>"
  syntax:
    content: public void setInstrumentationKey(String instrumentationKey)
    parameters:
    - id: instrumentationKey
      type: "26831127"
      description: <p>The instrumentation key </p>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext()
  id: TelemetryContext()
  parent: com.microsoft.applicationinsights.telemetry.TelemetryContext
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  langs:
  - java
  name: TelemetryContext()
  nameWithType: TelemetryContext.TelemetryContext()
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext()
  overload: com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext*
  type: Constructor
  source:
    remote: *o0
    path: core/src/main/java/com/microsoft/applicationinsights/telemetry/TelemetryContext.java
    startLine: 62
  package: com.microsoft.applicationinsights.telemetry
  summary: "<p>Default Ctor </p>"
  syntax:
    content: public TelemetryContext()
references:
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext*
  name: TelemetryContext
  nameWithType: TelemetryContext.TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.TelemetryContext
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent*
  name: getComponent
  nameWithType: TelemetryContext.getComponent
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getComponent
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice*
  name: getDevice
  nameWithType: TelemetryContext.getDevice
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getDevice
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession*
  name: getSession
  nameWithType: TelemetryContext.getSession
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getSession
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser*
  name: getUser
  nameWithType: TelemetryContext.getUser
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getUser
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation*
  name: getOperation
  nameWithType: TelemetryContext.getOperation
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getOperation
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation*
  name: getLocation
  nameWithType: TelemetryContext.getLocation
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getLocation
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getCloud*
  name: getCloud
  nameWithType: TelemetryContext.getCloud
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getCloud
  package: com.microsoft.applicationinsights.telemetry
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey*
  name: getInstrumentationKey
  nameWithType: TelemetryContext.getInstrumentationKey
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInstrumentationKey
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey*
  name: setInstrumentationKey
  nameWithType: TelemetryContext.setInstrumentationKey
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.setInstrumentationKey
  package: com.microsoft.applicationinsights.telemetry
- uid: bc7a2f3a
  spec.java:
  - name: ConcurrentMap<String, String>
    fullName: ConcurrentMap<String, String>
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties*
  name: getProperties
  nameWithType: TelemetryContext.getProperties
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getProperties
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags*
  name: getTags
  nameWithType: TelemetryContext.getTags
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getTags
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize*
  name: initialize
  nameWithType: TelemetryContext.initialize
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.initialize
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal*
  name: getInternal
  nameWithType: TelemetryContext.getInternal
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext.getInternal
  package: com.microsoft.applicationinsights.telemetry
- uid: com.microsoft.applicationinsights.extensibility.context.ComponentContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.ComponentContext.yml
  name: ComponentContext
  nameWithType: ComponentContext
  fullName: com.microsoft.applicationinsights.extensibility.context.ComponentContext
  type: Class
  syntax:
    content: public class ComponentContext
- uid: com.microsoft.applicationinsights.extensibility.context.DeviceContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.DeviceContext.yml
  name: DeviceContext
  nameWithType: DeviceContext
  fullName: com.microsoft.applicationinsights.extensibility.context.DeviceContext
  type: Class
  syntax:
    content: public class DeviceContext
- uid: com.microsoft.applicationinsights.extensibility.context.SessionContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.SessionContext.yml
  name: SessionContext
  nameWithType: SessionContext
  fullName: com.microsoft.applicationinsights.extensibility.context.SessionContext
  type: Class
  syntax:
    content: public class SessionContext
- uid: com.microsoft.applicationinsights.extensibility.context.UserContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.UserContext.yml
  name: UserContext
  nameWithType: UserContext
  fullName: com.microsoft.applicationinsights.extensibility.context.UserContext
  type: Class
  syntax:
    content: public class UserContext
- uid: com.microsoft.applicationinsights.extensibility.context.OperationContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.OperationContext.yml
  name: OperationContext
  nameWithType: OperationContext
  fullName: com.microsoft.applicationinsights.extensibility.context.OperationContext
  type: Class
  syntax:
    content: public class OperationContext
- uid: com.microsoft.applicationinsights.extensibility.context.LocationContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.LocationContext.yml
  name: LocationContext
  nameWithType: LocationContext
  fullName: com.microsoft.applicationinsights.extensibility.context.LocationContext
  type: Class
  syntax:
    content: public class LocationContext
- uid: com.microsoft.applicationinsights.extensibility.context.InternalContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.InternalContext.yml
  name: InternalContext
  nameWithType: InternalContext
  fullName: com.microsoft.applicationinsights.extensibility.context.InternalContext
  type: Class
  syntax:
    content: public class InternalContext
- uid: com.microsoft.applicationinsights.extensibility.context.CloudContext
  parent: com.microsoft.applicationinsights.extensibility.context
  href: com.microsoft.applicationinsights.extensibility.context.CloudContext.yml
  name: CloudContext
  nameWithType: CloudContext
  fullName: com.microsoft.applicationinsights.extensibility.context.CloudContext
  type: Class
  syntax:
    content: public class CloudContext
- uid: com.microsoft.applicationinsights.telemetry.Telemetry
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.Telemetry.yml
  name: Telemetry
  nameWithType: Telemetry
  fullName: com.microsoft.applicationinsights.telemetry.Telemetry
  type: Interface
  summary: "<p>The base telemetry type interface for application insights. </p>"
  syntax:
    content: public interface Telemetry extends JsonSerializable
- uid: com.microsoft.applicationinsights.TelemetryConfiguration
  parent: com.microsoft.applicationinsights
  href: com.microsoft.applicationinsights.TelemetryConfiguration.yml
  name: TelemetryConfiguration
  nameWithType: TelemetryConfiguration
  fullName: com.microsoft.applicationinsights.TelemetryConfiguration
  type: Class
  summary: "<p>Encapsulates the global telemetry configuration typically loaded from the ApplicationInsights.xml file.</p>\r\n<p>All <xref uid=\"com.microsoft.applicationinsights.telemetry.TelemetryContext\" data-throw-if-not-resolved=\"false\">com.microsoft.applicationinsights.telemetry.TelemetryContext</xref> objects are initialized using the 'Active' (returned by the 'getActive' static method) telemetry configuration provided by this class. </p>"
  syntax:
    content: public class TelemetryConfiguration
- uid: com.microsoft.applicationinsights.TelemetryClient
  parent: com.microsoft.applicationinsights
  href: com.microsoft.applicationinsights.TelemetryClient.yml
  name: TelemetryClient
  nameWithType: TelemetryClient
  fullName: com.microsoft.applicationinsights.TelemetryClient
  type: Class
  summary: "<p>Create an instance of this class to send telemetry to Azure Application Insights. General overview <a href=\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics\">https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics</a></p>"
  syntax:
    content: public class TelemetryClient
- uid: com.microsoft.applicationinsights.telemetry.TelemetryContext
  parent: com.microsoft.applicationinsights.telemetry
  href: com.microsoft.applicationinsights.telemetry.TelemetryContext.yml
  name: TelemetryContext
  nameWithType: TelemetryContext
  fullName: com.microsoft.applicationinsights.telemetry.TelemetryContext
  type: Class
  summary: "<p>Represents a context for sending telemetry to the Application Insights service. The context holds data that is sent with every telemetry item. It includes the instrumentation key; the current operation id, for correlating related telemetry items; and user, session and device data. You can also set properties that are added to every telemetry item, and can be used in the portal to filter the telemetry that used this context. </p>"
  syntax: *o1
