### YamlMime:JavaType
uid: "com.azure.resourcemanager.redis.models.Sku"
fullName: "com.azure.resourcemanager.redis.models.Sku"
name: "Sku"
nameWithType: "Sku"
summary: "SKU parameters supplied to the create Redis operation."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **Sku**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.redis.models.Sku.Sku()"
  fullName: "com.azure.resourcemanager.redis.models.Sku.Sku()"
  name: "Sku()"
  nameWithType: "Sku.Sku()"
  summary: "Creates an instance of Sku class."
  syntax: "public Sku()"
  desc: "Creates an instance of Sku class."
methods:
- uid: "com.azure.resourcemanager.redis.models.Sku.capacity()"
  fullName: "com.azure.resourcemanager.redis.models.Sku.capacity()"
  name: "capacity()"
  nameWithType: "Sku.capacity()"
  summary: "Get the capacity property: The size of the Redis cache to deploy."
  syntax: "public int capacity()"
  desc: "Get the capacity property: The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)."
  returns:
    description: "the capacity value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.Sku.family()"
  fullName: "com.azure.resourcemanager.redis.models.Sku.family()"
  name: "family()"
  nameWithType: "Sku.family()"
  summary: "Get the family property: The SKU family to use."
  syntax: "public SkuFamily family()"
  desc: "Get the family property: The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium)."
  returns:
    description: "the family value."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.SkuFamily?alt=com.azure.resourcemanager.redis.models.SkuFamily&text=SkuFamily\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.Sku.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.redis.models.Sku.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "Sku.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Sku from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static Sku fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If the deserialized JSON object was missing any required properties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of Sku from the JsonReader."
  returns:
    description: "An instance of Sku if the JsonReader was pointing to an instance of it, or null if it was pointing to\n JSON null."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.Sku.name()"
  fullName: "com.azure.resourcemanager.redis.models.Sku.name()"
  name: "name()"
  nameWithType: "Sku.name()"
  summary: "Get the name property: The type of Redis cache to deploy."
  syntax: "public SkuName name()"
  desc: "Get the name property: The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)."
  returns:
    description: "the name value."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.SkuName?alt=com.azure.resourcemanager.redis.models.SkuName&text=SkuName\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.Sku.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.redis.models.Sku.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "Sku.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.Sku.validate()"
  fullName: "com.azure.resourcemanager.redis.models.Sku.validate()"
  name: "validate()"
  nameWithType: "Sku.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.redis.models.Sku.withCapacity(int)"
  fullName: "com.azure.resourcemanager.redis.models.Sku.withCapacity(int capacity)"
  name: "withCapacity(int capacity)"
  nameWithType: "Sku.withCapacity(int capacity)"
  summary: "Set the capacity property: The size of the Redis cache to deploy."
  parameters:
  - description: "the capacity value to set."
    name: "capacity"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Sku withCapacity(int capacity)"
  desc: "Set the capacity property: The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)."
  returns:
    description: "the Sku object itself."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.Sku.withFamily(com.azure.resourcemanager.redis.models.SkuFamily)"
  fullName: "com.azure.resourcemanager.redis.models.Sku.withFamily(SkuFamily family)"
  name: "withFamily(SkuFamily family)"
  nameWithType: "Sku.withFamily(SkuFamily family)"
  summary: "Set the family property: The SKU family to use."
  parameters:
  - description: "the family value to set."
    name: "family"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.SkuFamily?alt=com.azure.resourcemanager.redis.models.SkuFamily&text=SkuFamily\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Sku withFamily(SkuFamily family)"
  desc: "Set the family property: The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium)."
  returns:
    description: "the Sku object itself."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.redis.models.Sku.withName(com.azure.resourcemanager.redis.models.SkuName)"
  fullName: "com.azure.resourcemanager.redis.models.Sku.withName(SkuName name)"
  name: "withName(SkuName name)"
  nameWithType: "Sku.withName(SkuName name)"
  summary: "Set the name property: The type of Redis cache to deploy."
  parameters:
  - description: "the name value to set."
    name: "name"
    type: "<xref href=\"com.azure.resourcemanager.redis.models.SkuName?alt=com.azure.resourcemanager.redis.models.SkuName&text=SkuName\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Sku withName(SkuName name)"
  desc: "Set the name property: The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)."
  returns:
    description: "the Sku object itself."
    type: "<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "SKU parameters supplied to the create Redis operation."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.redis.models.Sku?alt=com.azure.resourcemanager.redis.models.Sku&text=Sku\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.redis.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-redis:2.50.0
