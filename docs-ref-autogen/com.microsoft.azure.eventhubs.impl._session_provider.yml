### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.impl._session_provider
  id: _session_provider
  parent: com.microsoft.azure.eventhubs.impl
  children:
  - com.microsoft.azure.eventhubs.impl._session_provider.getSession(final String,final Consumer<Session>,final BiConsumer<ErrorCondition, Exception>)
  href: com.microsoft.azure.eventhubs.impl._session_provider.yml
  langs:
  - java
  name: SessionProvider
  nameWithType: SessionProvider
  fullName: com.microsoft.azure.eventhubs.impl.SessionProvider
  type: Interface
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/SessionProvider.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/SessionProvider.java
    startLine: 12
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public interface SessionProvider
- uid: com.microsoft.azure.eventhubs.impl._session_provider.getSession(final String,final Consumer<Session>,final BiConsumer<ErrorCondition, Exception>)
  id: getSession(final String,final Consumer<Session>,final BiConsumer<ErrorCondition, Exception>)
  parent: com.microsoft.azure.eventhubs.impl._session_provider
  href: com.microsoft.azure.eventhubs.impl._session_provider.yml
  langs:
  - java
  name: getSession(final String path, final Consumer<Session> onSessionOpen, final BiConsumer<ErrorCondition, Exception> onSessionOpenError)
  nameWithType: SessionProvider.getSession(final String path, final Consumer<Session> onSessionOpen, final BiConsumer<ErrorCondition, Exception> onSessionOpenError)
  fullName: Session com.microsoft.azure.eventhubs.impl.SessionProvider.getSession(final String path, final Consumer<Session> onSessionOpen, final BiConsumer<ErrorCondition, Exception> onSessionOpenError)
  overload: com.microsoft.azure.eventhubs.impl._session_provider.getSession*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/impl/SessionProvider.java
    startLine: 13
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public Session getSession(final String path, final Consumer<Session> onSessionOpen, final BiConsumer<ErrorCondition, Exception> onSessionOpenError)
    parameters:
    - id: path
      type: 3d93591e
    - id: onSessionOpen
      type: acf4f1fb
    - id: onSessionOpenError
      type: 1ed0d477
    return:
      type: 29aec771
references:
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: acf4f1fb
  spec.java:
  - name: final Consumer<Session>
    fullName: final Consumer<Session>
- uid: 1ed0d477
  spec.java:
  - name: final BiConsumer<ErrorCondition, Exception>
    fullName: final BiConsumer<ErrorCondition, Exception>
- uid: 29aec771
  spec.java:
  - name: Session
    fullName: Session
- uid: com.microsoft.azure.eventhubs.impl._session_provider.getSession*
  name: getSession
  nameWithType: SessionProvider.getSession
  fullName: Session com.microsoft.azure.eventhubs.impl.SessionProvider.getSession
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl._messaging_factory
  parent: com.microsoft.azure.eventhubs.impl
  href: com.microsoft.azure.eventhubs.impl._messaging_factory.yml
  name: MessagingFactory
  nameWithType: MessagingFactory
  fullName: com.microsoft.azure.eventhubs.impl.MessagingFactory
  type: Class
  summary: <p>Abstracts all amqp related details and exposes <xref uid="com.microsoft.azure.eventhubs.impl._amqp_connection" data-throw-if-not-resolved="false">AmqpConnection</xref> object Manages connection life-cycle </p>
  syntax:
    content: public class MessagingFactory implements AmqpConnection,SessionProvider
- uid: com.microsoft.azure.eventhubs.impl._messaging_factory.getSession(final String,final Consumer<Session>,final BiConsumer<ErrorCondition, Exception>)
  parent: com.microsoft.azure.eventhubs.impl._messaging_factory
  href: com.microsoft.azure.eventhubs.impl._messaging_factory.yml
  name: getSession(final String path, final Consumer<Session> onRemoteSessionOpen, final BiConsumer<ErrorCondition, Exception> onRemoteSessionOpenError)
  nameWithType: MessagingFactory.getSession(final String path, final Consumer<Session> onRemoteSessionOpen, final BiConsumer<ErrorCondition, Exception> onRemoteSessionOpenError)
  fullName: Session com.microsoft.azure.eventhubs.impl.MessagingFactory.getSession(final String path, final Consumer<Session> onRemoteSessionOpen, final BiConsumer<ErrorCondition, Exception> onRemoteSessionOpenError)
  type: Method
  syntax:
    content: public Session getSession(final String path, final Consumer<Session> onRemoteSessionOpen, final BiConsumer<ErrorCondition, Exception> onRemoteSessionOpenError)
    parameters:
    - id: path
      type: 3d93591e
    - id: onRemoteSessionOpen
      type: acf4f1fb
    - id: onRemoteSessionOpenError
      type: 1ed0d477
    return:
      type: 29aec771
