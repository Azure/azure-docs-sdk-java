### YamlMime:ManagedReference
items:
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder
  id: DataLakePathClientBuilder
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake
  children:
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.DataLakePathClientBuilder()
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient()
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryClient()
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileAsyncClient()
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileClient()
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.configuration(com.azure.core.util.Configuration)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.credential(com.azure.core.credential.TokenCredential)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.endpoint(java.lang.String)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.fileSystemName(java.lang.String)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.getDefaultHttpLogOptions()
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.httpClient(com.azure.core.http.HttpClient)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.pathName(java.lang.String)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.sasToken(java.lang.String)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.serviceVersion(com.azure.storage.file.datalake.DataLakeServiceVersion)
  - com.azure.storage.file.datalake.DataLakePathClientBuilder.setAnonymousAccess()
  langs:
  - java
  name: DataLakePathClientBuilder
  nameWithType: DataLakePathClientBuilder
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder
  type: Class
  package: com.azure.storage.file.datalake
  summary: >-
    This class provides a fluent builder API to help aid the configuration and instantiation of <xref uid="com.azure.storage.file.datalake.DataLakeFileClient" data-throw-if-not-resolved="false">FileClients</xref>, <xref uid="com.azure.storage.file.datalake.DataLakeFileAsyncClient" data-throw-if-not-resolved="false">FileAsyncClients</xref>, <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryClient" data-throw-if-not-resolved="false">DirectoryClients</xref> and <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient" data-throw-if-not-resolved="false">DirectoryAsyncClients</xref>, call <xref uid="com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileClient()" data-throw-if-not-resolved="false">buildFileClient</xref>, <xref uid="com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileAsyncClient()" data-throw-if-not-resolved="false">buildFileAsyncClient</xref>, <xref uid="com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryClient()" data-throw-if-not-resolved="false">buildDirectoryClient</xref> and <xref uid="com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient()" data-throw-if-not-resolved="false">buildDirectoryAsyncClient</xref> respectively to construct an instance of the desired client.


    The following information must be provided on this builder:

     *  the endpoint through `.endpoint()`, including the file system name and file/directory name, in the format of `https://{accountName}.dfs.core.windows.net/{fileSystemName}/{pathName}`.
     *  the credential through `.credential()` or `.connectionString()` if the file system is not publicly accessible.
  syntax:
    content: public final class DataLakePathClientBuilder
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.DataLakePathClientBuilder()
  id: DataLakePathClientBuilder()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: DataLakePathClientBuilder()
  nameWithType: DataLakePathClientBuilder.DataLakePathClientBuilder()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.DataLakePathClientBuilder()
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.DataLakePathClientBuilder*
  type: Constructor
  package: com.azure.storage.file.datalake
  summary: Creates a builder instance that is able to configure and construct <xref uid="com.azure.storage.file.datalake.DataLakeFileClient" data-throw-if-not-resolved="false">FileClients</xref>, <xref uid="com.azure.storage.file.datalake.DataLakeFileAsyncClient" data-throw-if-not-resolved="false">FileAsyncClients</xref>, <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryClient" data-throw-if-not-resolved="false">DirectoryClients</xref> and <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient" data-throw-if-not-resolved="false">DirectoryAsyncClients</xref>.
  syntax:
    content: public DataLakePathClientBuilder()
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  id: addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: addPolicy(HttpPipelinePolicy pipelinePolicy)
  nameWithType: DataLakePathClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.addPolicy(HttpPipelinePolicy pipelinePolicy)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.addPolicy*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Adds a pipeline policy to apply on each request sent. The policy will be added after the retry policy. If the method is called multiple times, all policies will be added and their order preserved.
  syntax:
    content: public DataLakePathClientBuilder addPolicy(HttpPipelinePolicy pipelinePolicy)
    parameters:
    - id: pipelinePolicy
      type: com.azure.core.http.policy.HttpPipelinePolicy
      description: a pipeline policy
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient()
  id: buildDirectoryAsyncClient()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: buildDirectoryAsyncClient()
  nameWithType: DataLakePathClientBuilder.buildDirectoryAsyncClient()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient()
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient*
  type: Method
  package: com.azure.storage.file.datalake
  summary: >-
    Creates a <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient" data-throw-if-not-resolved="false">DataLakeDirectoryAsyncClient</xref> based on options set in the builder.


    **Code Samples**


    ```java

    DataLakeDirectoryAsyncClient client = new DataLakePathClientBuilder()
         .endpoint(endpoint)
         .credential(storageSharedKeyCredential)
         .buildDirectoryAsyncClient();
    ```
  syntax:
    content: public DataLakeDirectoryAsyncClient buildDirectoryAsyncClient()
    return:
      type: com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient
      description: a <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient" data-throw-if-not-resolved="false">DataLakeDirectoryAsyncClient</xref> created from the configurations in this builder.
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryClient()
  id: buildDirectoryClient()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: buildDirectoryClient()
  nameWithType: DataLakePathClientBuilder.buildDirectoryClient()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryClient()
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryClient*
  type: Method
  package: com.azure.storage.file.datalake
  summary: >-
    Creates a <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryClient" data-throw-if-not-resolved="false">DataLakeDirectoryClient</xref> based on options set in the builder.


    **Code Samples**


    ```java

    DataLakeDirectoryClient client = new DataLakePathClientBuilder()
         .endpoint(endpoint)
         .credential(storageSharedKeyCredential)
         .buildDirectoryClient();
    ```
  syntax:
    content: public DataLakeDirectoryClient buildDirectoryClient()
    return:
      type: com.azure.storage.file.datalake.DataLakeDirectoryClient
      description: a <xref uid="com.azure.storage.file.datalake.DataLakeDirectoryClient" data-throw-if-not-resolved="false">DataLakeDirectoryClient</xref> created from the configurations in this builder.
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileAsyncClient()
  id: buildFileAsyncClient()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: buildFileAsyncClient()
  nameWithType: DataLakePathClientBuilder.buildFileAsyncClient()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileAsyncClient()
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileAsyncClient*
  type: Method
  package: com.azure.storage.file.datalake
  summary: >-
    Creates a <xref uid="com.azure.storage.file.datalake.DataLakeFileAsyncClient" data-throw-if-not-resolved="false">DataLakeFileAsyncClient</xref> based on options set in the builder.


    **Code Samples**


    ```java

    DataLakeFileAsyncClient client = new DataLakePathClientBuilder()
         .endpoint(endpoint)
         .credential(storageSharedKeyCredential)
         .buildFileAsyncClient();
    ```
  syntax:
    content: public DataLakeFileAsyncClient buildFileAsyncClient()
    return:
      type: com.azure.storage.file.datalake.DataLakeFileAsyncClient
      description: a <xref uid="com.azure.storage.file.datalake.DataLakeFileAsyncClient" data-throw-if-not-resolved="false">DataLakeFileAsyncClient</xref> created from the configurations in this builder.
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileClient()
  id: buildFileClient()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: buildFileClient()
  nameWithType: DataLakePathClientBuilder.buildFileClient()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileClient()
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileClient*
  type: Method
  package: com.azure.storage.file.datalake
  summary: >-
    Creates a <xref uid="com.azure.storage.file.datalake.DataLakeFileClient" data-throw-if-not-resolved="false">DataLakeFileClient</xref> based on options set in the builder.


    **Code Samples**


    ```java

    DataLakeFileClient client = new DataLakePathClientBuilder()
         .endpoint(endpoint)
         .credential(storageSharedKeyCredential)
         .buildFileClient();
    ```
  syntax:
    content: public DataLakeFileClient buildFileClient()
    return:
      type: com.azure.storage.file.datalake.DataLakeFileClient
      description: a <xref uid="com.azure.storage.file.datalake.DataLakeFileClient" data-throw-if-not-resolved="false">DataLakeFileClient</xref> created from the configurations in this builder.
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.configuration(com.azure.core.util.Configuration)
  id: configuration(com.azure.core.util.Configuration)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: configuration(Configuration configuration)
  nameWithType: DataLakePathClientBuilder.configuration(Configuration configuration)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.configuration(Configuration configuration)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.configuration*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the configuration object used to retrieve environment configuration values during building of the client.
  syntax:
    content: public DataLakePathClientBuilder configuration(Configuration configuration)
    parameters:
    - id: configuration
      type: com.azure.core.util.Configuration
      description: Configuration store used to retrieve environment configurations.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential(com.azure.core.credential.TokenCredential)
  id: credential(com.azure.core.credential.TokenCredential)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: credential(TokenCredential credential)
  nameWithType: DataLakePathClientBuilder.credential(TokenCredential credential)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential(TokenCredential credential)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref> used to authorize requests sent to the service.
  syntax:
    content: public DataLakePathClientBuilder credential(TokenCredential credential)
    parameters:
    - id: credential
      type: com.azure.core.credential.TokenCredential
      description: <xref uid="com.azure.core.credential.TokenCredential" data-throw-if-not-resolved="false">TokenCredential</xref>.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential(com.azure.storage.common.StorageSharedKeyCredential)
  id: credential(com.azure.storage.common.StorageSharedKeyCredential)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: credential(StorageSharedKeyCredential credential)
  nameWithType: DataLakePathClientBuilder.credential(StorageSharedKeyCredential credential)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential(StorageSharedKeyCredential credential)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the <xref uid="com.azure.storage.common.StorageSharedKeyCredential" data-throw-if-not-resolved="false">StorageSharedKeyCredential</xref> used to authorize requests sent to the service.
  syntax:
    content: public DataLakePathClientBuilder credential(StorageSharedKeyCredential credential)
    parameters:
    - id: credential
      type: com.azure.storage.common.StorageSharedKeyCredential
      description: <xref uid="com.azure.storage.common.StorageSharedKeyCredential" data-throw-if-not-resolved="false">StorageSharedKeyCredential</xref>.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.endpoint(java.lang.String)
  id: endpoint(java.lang.String)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: endpoint(String endpoint)
  nameWithType: DataLakePathClientBuilder.endpoint(String endpoint)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.endpoint(String endpoint)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.endpoint*
  type: Method
  package: com.azure.storage.file.datalake
  summary: >-
    Sets the service endpoint, additionally parses it for information (SAS token, file system name, path name)


    If the endpoint is to a file/directory in the root container, this method will fail as it will interpret the path name as the file system name. With only one path element, it is impossible to distinguish between a file system name and a path in the root file system, so it is assumed to be the file system name as this is much more common. When working with paths in the root file system, it is best to set the endpoint to the account url and specify the path name separately using the <xref uid="com.azure.storage.file.datalake.DataLakePathClientBuilder.pathName(java.lang.String)" data-throw-if-not-resolved="false">pathName</xref> method.
  syntax:
    content: public DataLakePathClientBuilder endpoint(String endpoint)
    parameters:
    - id: endpoint
      type: java.lang.String
      description: URL of the service
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.fileSystemName(java.lang.String)
  id: fileSystemName(java.lang.String)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: fileSystemName(String fileSystemName)
  nameWithType: DataLakePathClientBuilder.fileSystemName(String fileSystemName)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.fileSystemName(String fileSystemName)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.fileSystemName*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the name of the file system that contains the path.
  syntax:
    content: public DataLakePathClientBuilder fileSystemName(String fileSystemName)
    parameters:
    - id: fileSystemName
      type: java.lang.String
      description: >-
        Name of the file system. If the value <code>null</code> or empty the root file system,
         <code>$root</code>, will be used.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.getDefaultHttpLogOptions()
  id: getDefaultHttpLogOptions()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: getDefaultHttpLogOptions()
  nameWithType: DataLakePathClientBuilder.getDefaultHttpLogOptions()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.getDefaultHttpLogOptions()
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.getDefaultHttpLogOptions*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Gets the default Storage whitelist log headers and query parameters.
  syntax:
    content: public static HttpLogOptions getDefaultHttpLogOptions()
    return:
      type: com.azure.core.http.policy.HttpLogOptions
      description: the default http log options.
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpClient(com.azure.core.http.HttpClient)
  id: httpClient(com.azure.core.http.HttpClient)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: httpClient(HttpClient httpClient)
  nameWithType: DataLakePathClientBuilder.httpClient(HttpClient httpClient)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpClient(HttpClient httpClient)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpClient*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the <xref uid="com.azure.core.http.HttpClient" data-throw-if-not-resolved="false">HttpClient</xref> to use for sending a receiving requests to and from the service.
  syntax:
    content: public DataLakePathClientBuilder httpClient(HttpClient httpClient)
    parameters:
    - id: httpClient
      type: com.azure.core.http.HttpClient
      description: HttpClient to use for requests.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  id: httpLogOptions(com.azure.core.http.policy.HttpLogOptions)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: httpLogOptions(HttpLogOptions logOptions)
  nameWithType: DataLakePathClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpLogOptions(HttpLogOptions logOptions)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpLogOptions*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the <xref uid="com.azure.core.http.policy.HttpLogOptions" data-throw-if-not-resolved="false">HttpLogOptions</xref> for service requests.
  syntax:
    content: public DataLakePathClientBuilder httpLogOptions(HttpLogOptions logOptions)
    parameters:
    - id: logOptions
      type: com.azure.core.http.policy.HttpLogOptions
      description: The logging configuration to use when sending and receiving HTTP requests/responses.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.pathName(java.lang.String)
  id: pathName(java.lang.String)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: pathName(String pathName)
  nameWithType: DataLakePathClientBuilder.pathName(String pathName)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.pathName(String pathName)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.pathName*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the name of the file/directory.
  syntax:
    content: public DataLakePathClientBuilder pathName(String pathName)
    parameters:
    - id: pathName
      type: java.lang.String
      description: Name of the path.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.pipeline(com.azure.core.http.HttpPipeline)
  id: pipeline(com.azure.core.http.HttpPipeline)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: pipeline(HttpPipeline httpPipeline)
  nameWithType: DataLakePathClientBuilder.pipeline(HttpPipeline httpPipeline)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.pipeline(HttpPipeline httpPipeline)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.pipeline*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the <xref uid="com.azure.core.http.HttpPipeline" data-throw-if-not-resolved="false">HttpPipeline</xref> to use for the service client. If `pipeline` is set, all other settings are ignored, aside from <xref uid="com.azure.storage.file.datalake.DataLakePathClientBuilder.endpoint(java.lang.String)" data-throw-if-not-resolved="false">endpoint</xref>.
  syntax:
    content: public DataLakePathClientBuilder pipeline(HttpPipeline httpPipeline)
    parameters:
    - id: httpPipeline
      type: com.azure.core.http.HttpPipeline
      description: HttpPipeline to use for sending service requests and receiving responses.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  id: retryOptions(com.azure.storage.common.policy.RequestRetryOptions)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: retryOptions(RequestRetryOptions retryOptions)
  nameWithType: DataLakePathClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.retryOptions(RequestRetryOptions retryOptions)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.retryOptions*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the request retry options for all the requests made through the client.
  syntax:
    content: public DataLakePathClientBuilder retryOptions(RequestRetryOptions retryOptions)
    parameters:
    - id: retryOptions
      type: com.azure.storage.common.policy.RequestRetryOptions
      description: <xref uid="com.azure.storage.common.policy.RequestRetryOptions" data-throw-if-not-resolved="false">RequestRetryOptions</xref>.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.sasToken(java.lang.String)
  id: sasToken(java.lang.String)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: sasToken(String sasToken)
  nameWithType: DataLakePathClientBuilder.sasToken(String sasToken)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.sasToken(String sasToken)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.sasToken*
  type: Method
  package: com.azure.storage.file.datalake
  summary: Sets the SAS token used to authorize requests sent to the service.
  syntax:
    content: public DataLakePathClientBuilder sasToken(String sasToken)
    parameters:
    - id: sasToken
      type: java.lang.String
      description: The SAS token to use for authenticating requests.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.serviceVersion(com.azure.storage.file.datalake.DataLakeServiceVersion)
  id: serviceVersion(com.azure.storage.file.datalake.DataLakeServiceVersion)
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: serviceVersion(DataLakeServiceVersion version)
  nameWithType: DataLakePathClientBuilder.serviceVersion(DataLakeServiceVersion version)
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.serviceVersion(DataLakeServiceVersion version)
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.serviceVersion*
  type: Method
  package: com.azure.storage.file.datalake
  summary: >-
    Sets the <xref uid="com.azure.storage.file.datalake.DataLakeServiceVersion" data-throw-if-not-resolved="false">DataLakeServiceVersion</xref> that is used when making API requests.


    If a service version is not provided, the service version that will be used will be the latest known service version based on the version of the client library being used. If no service version is specified, updating to a newer version of the client library will have the result of potentially moving to a newer service version.


    Targeting a specific service version may also mean that the service will return an error for newer APIs.
  syntax:
    content: public DataLakePathClientBuilder serviceVersion(DataLakeServiceVersion version)
    parameters:
    - id: version
      type: com.azure.storage.file.datalake.DataLakeServiceVersion
      description: <xref uid="com.azure.storage.file.datalake.DataLakeServiceVersion" data-throw-if-not-resolved="false">DataLakeServiceVersion</xref> of the service to be used when making requests.
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder object
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.setAnonymousAccess()
  id: setAnonymousAccess()
  artifact: com.azure:azure-storage-file-datalake:12.2.0
  parent: com.azure.storage.file.datalake.DataLakePathClientBuilder
  langs:
  - java
  name: setAnonymousAccess()
  nameWithType: DataLakePathClientBuilder.setAnonymousAccess()
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.setAnonymousAccess()
  overload: com.azure.storage.file.datalake.DataLakePathClientBuilder.setAnonymousAccess*
  type: Method
  package: com.azure.storage.file.datalake
  summary: >-
    Clears the credential used to authorize the request.


    This is for paths that are publicly accessible.
  syntax:
    content: public DataLakePathClientBuilder setAnonymousAccess()
    return:
      type: com.azure.storage.file.datalake.DataLakePathClientBuilder
      description: the updated DataLakePathClientBuilder
references:
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.DataLakePathClientBuilder*
  name: DataLakePathClientBuilder
  nameWithType: DataLakePathClientBuilder.DataLakePathClientBuilder
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.DataLakePathClientBuilder
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakeFileClient
  name: DataLakeFileClient
  nameWithType: DataLakeFileClient
  fullName: com.azure.storage.file.datalake.DataLakeFileClient
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileClient*
  name: buildFileClient
  nameWithType: DataLakePathClientBuilder.buildFileClient
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileClient
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakeFileAsyncClient
  name: DataLakeFileAsyncClient
  nameWithType: DataLakeFileAsyncClient
  fullName: com.azure.storage.file.datalake.DataLakeFileAsyncClient
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileAsyncClient*
  name: buildFileAsyncClient
  nameWithType: DataLakePathClientBuilder.buildFileAsyncClient
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildFileAsyncClient
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakeDirectoryClient
  name: DataLakeDirectoryClient
  nameWithType: DataLakeDirectoryClient
  fullName: com.azure.storage.file.datalake.DataLakeDirectoryClient
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryClient*
  name: buildDirectoryClient
  nameWithType: DataLakePathClientBuilder.buildDirectoryClient
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryClient
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient
  name: DataLakeDirectoryAsyncClient
  nameWithType: DataLakeDirectoryAsyncClient
  fullName: com.azure.storage.file.datalake.DataLakeDirectoryAsyncClient
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient*
  name: buildDirectoryAsyncClient
  nameWithType: DataLakePathClientBuilder.buildDirectoryAsyncClient
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.buildDirectoryAsyncClient
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.common.StorageSharedKeyCredential
  spec.java:
  - uid: com.azure.storage.common.StorageSharedKeyCredential
    name: StorageSharedKeyCredential
    fullName: com.azure.storage.common.StorageSharedKeyCredential
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential*
  name: credential
  nameWithType: DataLakePathClientBuilder.credential
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.credential
  package: com.azure.storage.file.datalake
- uid: com.azure.core.credential.TokenCredential
  spec.java:
  - uid: com.azure.core.credential.TokenCredential
    name: TokenCredential
    fullName: com.azure.core.credential.TokenCredential
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.sasToken*
  name: sasToken
  nameWithType: DataLakePathClientBuilder.sasToken
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.sasToken
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.setAnonymousAccess*
  name: setAnonymousAccess
  nameWithType: DataLakePathClientBuilder.setAnonymousAccess
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.setAnonymousAccess
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.endpoint*
  name: endpoint
  nameWithType: DataLakePathClientBuilder.endpoint
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.endpoint
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.fileSystemName*
  name: fileSystemName
  nameWithType: DataLakePathClientBuilder.fileSystemName
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.fileSystemName
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.pathName*
  name: pathName
  nameWithType: DataLakePathClientBuilder.pathName
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.pathName
  package: com.azure.storage.file.datalake
- uid: com.azure.core.http.HttpClient
  spec.java:
  - uid: com.azure.core.http.HttpClient
    name: HttpClient
    fullName: com.azure.core.http.HttpClient
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpClient*
  name: httpClient
  nameWithType: DataLakePathClientBuilder.httpClient
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpClient
  package: com.azure.storage.file.datalake
- uid: com.azure.core.http.policy.HttpPipelinePolicy
  spec.java:
  - uid: com.azure.core.http.policy.HttpPipelinePolicy
    name: HttpPipelinePolicy
    fullName: com.azure.core.http.policy.HttpPipelinePolicy
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.addPolicy*
  name: addPolicy
  nameWithType: DataLakePathClientBuilder.addPolicy
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.addPolicy
  package: com.azure.storage.file.datalake
- uid: com.azure.core.http.policy.HttpLogOptions
  spec.java:
  - uid: com.azure.core.http.policy.HttpLogOptions
    name: HttpLogOptions
    fullName: com.azure.core.http.policy.HttpLogOptions
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.getDefaultHttpLogOptions*
  name: getDefaultHttpLogOptions
  nameWithType: DataLakePathClientBuilder.getDefaultHttpLogOptions
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.getDefaultHttpLogOptions
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpLogOptions*
  name: httpLogOptions
  nameWithType: DataLakePathClientBuilder.httpLogOptions
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.httpLogOptions
  package: com.azure.storage.file.datalake
- uid: com.azure.core.util.Configuration
  spec.java:
  - uid: com.azure.core.util.Configuration
    name: Configuration
    fullName: com.azure.core.util.Configuration
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.configuration*
  name: configuration
  nameWithType: DataLakePathClientBuilder.configuration
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.configuration
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.common.policy.RequestRetryOptions
  spec.java:
  - uid: com.azure.storage.common.policy.RequestRetryOptions
    name: RequestRetryOptions
    fullName: com.azure.storage.common.policy.RequestRetryOptions
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.retryOptions*
  name: retryOptions
  nameWithType: DataLakePathClientBuilder.retryOptions
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.retryOptions
  package: com.azure.storage.file.datalake
- uid: com.azure.core.http.HttpPipeline
  spec.java:
  - uid: com.azure.core.http.HttpPipeline
    name: HttpPipeline
    fullName: com.azure.core.http.HttpPipeline
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.pipeline*
  name: pipeline
  nameWithType: DataLakePathClientBuilder.pipeline
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.pipeline
  package: com.azure.storage.file.datalake
- uid: com.azure.storage.file.datalake.DataLakeServiceVersion
  name: DataLakeServiceVersion
  nameWithType: DataLakeServiceVersion
  fullName: com.azure.storage.file.datalake.DataLakeServiceVersion
- uid: com.azure.storage.file.datalake.DataLakePathClientBuilder.serviceVersion*
  name: serviceVersion
  nameWithType: DataLakePathClientBuilder.serviceVersion
  fullName: com.azure.storage.file.datalake.DataLakePathClientBuilder.serviceVersion
  package: com.azure.storage.file.datalake
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
