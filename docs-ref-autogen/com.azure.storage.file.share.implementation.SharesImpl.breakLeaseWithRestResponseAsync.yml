### YamlMime:JavaMember
uid: "com.azure.storage.file.share.implementation.SharesImpl.breakLeaseWithRestResponseAsync*"
fullName: "com.azure.storage.file.share.implementation.SharesImpl.breakLeaseWithRestResponseAsync"
name: "breakLeaseWithRestResponseAsync"
nameWithType: "SharesImpl.breakLeaseWithRestResponseAsync"
members:
- uid: "com.azure.storage.file.share.implementation.SharesImpl.breakLeaseWithRestResponseAsync(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.implementation.SharesImpl.breakLeaseWithRestResponseAsync(String shareName, Context context)"
  name: "breakLeaseWithRestResponseAsync(String shareName, Context context)"
  nameWithType: "SharesImpl.breakLeaseWithRestResponseAsync(String shareName, Context context)"
  summary: "The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations."
  parameters:
  - description: "The name of the target share."
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SharesBreakLeaseResponse> breakLeaseWithRestResponseAsync(String shareName, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.implementation.models.SharesBreakLeaseResponse?alt=com.azure.storage.file.share.implementation.models.SharesBreakLeaseResponse&text=SharesBreakLeaseResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.file.share.implementation.SharesImpl.breakLeaseWithRestResponseAsync(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.storage.file.share.implementation.SharesImpl.breakLeaseWithRestResponseAsync(String shareName, Integer timeout, Integer breakPeriod, String leaseId, String requestId, String sharesnapshot, Context context)"
  name: "breakLeaseWithRestResponseAsync(String shareName, Integer timeout, Integer breakPeriod, String leaseId, String requestId, String sharesnapshot, Context context)"
  nameWithType: "SharesImpl.breakLeaseWithRestResponseAsync(String shareName, Integer timeout, Integer breakPeriod, String leaseId, String requestId, String sharesnapshot, Context context)"
  summary: "The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for set and delete share operations."
  parameters:
  - description: "The name of the target share."
    name: "shareName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The timeout parameter is expressed in seconds. For more information, see &lt;a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\"&gt;Setting Timeouts for File Service Operations.&lt;/a&gt;."
    name: "timeout"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "For a break operation, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60. This break period is only used if it is shorter than the time remaining on the lease. If longer, the time remaining on the lease is used. A new lease will not be available before the break period has expired, but the lease may be held for longer than the break period. If this header does not appear with a break operation, a fixed-duration lease breaks after the remaining lease period elapses, and an infinite lease breaks immediately."
    name: "breakPeriod"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
  - description: "If specified, the operation only succeeds if the resource's lease is active and matches this ID."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled."
    name: "requestId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The snapshot parameter is an opaque DateTime value that, when present, specifies the share snapshot to query."
    name: "sharesnapshot"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Mono<SharesBreakLeaseResponse> breakLeaseWithRestResponseAsync(String shareName, Integer timeout, Integer breakPeriod, String leaseId, String requestId, String sharesnapshot, Context context)"
  returns:
    description: "a Mono which performs the network request upon subscription."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.file.share.implementation.models.SharesBreakLeaseResponse?alt=com.azure.storage.file.share.implementation.models.SharesBreakLeaseResponse&text=SharesBreakLeaseResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.file.share.implementation"
artifact: com.azure:azure-storage-file-share:12.8.0
