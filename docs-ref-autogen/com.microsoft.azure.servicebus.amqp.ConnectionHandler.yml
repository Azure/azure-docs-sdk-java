### YamlMime:JavaType
uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler"
fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler"
name: "ConnectionHandler"
nameWithType: "ConnectionHandler"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
- classRef: "<xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.add(org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.add&text=add\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.children()?alt=org.apache.qpid.proton.engine.BaseHandler.children&text=children\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Extendable)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.getHandler(org.apache.qpid.proton.engine.Record)?alt=org.apache.qpid.proton.engine.BaseHandler.getHandler&text=getHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.handle(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.handle&text=handle\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionBound&text=onConnectionBound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal&text=onConnectionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionInit&text=onConnectionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalClose&text=onConnectionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalOpen&text=onConnectionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteClose&text=onConnectionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteOpen&text=onConnectionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onConnectionUnbound&text=onConnectionUnbound\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onDelivery(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onDelivery&text=onDelivery\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFinal&text=onLinkFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkFlow(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkFlow&text=onLinkFlow\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkInit&text=onLinkInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalClose&text=onLinkLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalDetach&text=onLinkLocalDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkLocalOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkLocalOpen&text=onLinkLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteClose&text=onLinkRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteDetach&text=onLinkRemoteDetach\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onLinkRemoteOpen&text=onLinkRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorFinal&text=onReactorFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorInit&text=onReactorInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onReactorQuiesced&text=onReactorQuiesced\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableError(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableError&text=onSelectableError\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableExpired&text=onSelectableExpired\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableFinal&text=onSelectableFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableInit&text=onSelectableInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableReadable&text=onSelectableReadable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableUpdated&text=onSelectableUpdated\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSelectableWritable&text=onSelectableWritable\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionFinal(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionFinal&text=onSessionFinal\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionInit(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionInit&text=onSessionInit\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionLocalClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionLocalClose&text=onSessionLocalClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionLocalOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionLocalOpen&text=onSessionLocalOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteClose(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteClose&text=onSessionRemoteClose\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteOpen(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onSessionRemoteOpen&text=onSessionRemoteOpen\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTimerTask(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTimerTask&text=onTimerTask\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransport(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransport&text=onTransport\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportClosed&text=onTransportClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportError(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportError&text=onTransportError\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportHeadClosed&text=onTransportHeadClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onTransportTailClosed&text=onTransportTailClosed\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.onUnhandled(org.apache.qpid.proton.engine.Event)?alt=org.apache.qpid.proton.engine.BaseHandler.onUnhandled&text=onUnhandled\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Extendable,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"org.apache.qpid.proton.engine.BaseHandler.setHandler(org.apache.qpid.proton.engine.Record,org.apache.qpid.proton.engine.Handler)?alt=org.apache.qpid.proton.engine.BaseHandler.setHandler&text=setHandler\" data-throw-if-not-resolved=\"False\" />"
syntax: "public class **ConnectionHandler**</br> extends <xref href=\"org.apache.qpid.proton.engine.BaseHandler?alt=org.apache.qpid.proton.engine.BaseHandler&text=BaseHandler\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.ConnectionHandler(com.microsoft.azure.servicebus.amqp.IAmqpConnection)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.ConnectionHandler(IAmqpConnection messagingFactory)"
  name: "ConnectionHandler(IAmqpConnection messagingFactory)"
  nameWithType: "ConnectionHandler.ConnectionHandler(IAmqpConnection messagingFactory)"
  modifiers:
  - "protected"
  parameters:
  - name: "messagingFactory"
    type: "<xref href=\"com.microsoft.azure.servicebus.amqp.IAmqpConnection?alt=com.microsoft.azure.servicebus.amqp.IAmqpConnection&text=IAmqpConnection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected ConnectionHandler(IAmqpConnection messagingFactory)"
fields:
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.messagingFactory"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.messagingFactory"
  name: "messagingFactory"
  nameWithType: "ConnectionHandler.messagingFactory"
  modifiers:
  - "protected"
  - "final"
  field:
    type: "<xref href=\"com.microsoft.azure.servicebus.amqp.IAmqpConnection?alt=com.microsoft.azure.servicebus.amqp.IAmqpConnection&text=IAmqpConnection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected final IAmqpConnection messagingFactory"
methods:
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.addTransportLayers(org.apache.qpid.proton.engine.Event,org.apache.qpid.proton.engine.impl.TransportInternal)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.addTransportLayers(Event event, TransportInternal transport)"
  name: "addTransportLayers(Event event, TransportInternal transport)"
  nameWithType: "ConnectionHandler.addTransportLayers(Event event, TransportInternal transport)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  - name: "transport"
    type: "<xref href=\"org.apache.qpid.proton.engine.impl.TransportInternal?alt=org.apache.qpid.proton.engine.impl.TransportInternal&text=TransportInternal\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void addTransportLayers(Event event, TransportInternal transport)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.create(com.microsoft.azure.servicebus.primitives.TransportType,com.microsoft.azure.servicebus.amqp.IAmqpConnection)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.create(TransportType transportType, IAmqpConnection messagingFactory)"
  name: "create(TransportType transportType, IAmqpConnection messagingFactory)"
  nameWithType: "ConnectionHandler.create(TransportType transportType, IAmqpConnection messagingFactory)"
  modifiers:
  - "static"
  parameters:
  - name: "transportType"
    type: "<xref href=\"com.microsoft.azure.servicebus.primitives.TransportType?alt=com.microsoft.azure.servicebus.primitives.TransportType&text=TransportType\" data-throw-if-not-resolved=\"False\" />"
  - name: "messagingFactory"
    type: "<xref href=\"com.microsoft.azure.servicebus.amqp.IAmqpConnection?alt=com.microsoft.azure.servicebus.amqp.IAmqpConnection&text=IAmqpConnection\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static ConnectionHandler create(TransportType transportType, IAmqpConnection messagingFactory)"
  returns:
    type: "<xref href=\"com.microsoft.azure.servicebus.amqp.ConnectionHandler?alt=com.microsoft.azure.servicebus.amqp.ConnectionHandler&text=ConnectionHandler\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getMaxFrameSize()"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getMaxFrameSize()"
  name: "getMaxFrameSize()"
  nameWithType: "ConnectionHandler.getMaxFrameSize()"
  syntax: "public int getMaxFrameSize()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getMessagingFactory()"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getMessagingFactory()"
  name: "getMessagingFactory()"
  nameWithType: "ConnectionHandler.getMessagingFactory()"
  modifiers:
  - "protected"
  syntax: "protected IAmqpConnection getMessagingFactory()"
  returns:
    type: "<xref href=\"com.microsoft.azure.servicebus.amqp.IAmqpConnection?alt=com.microsoft.azure.servicebus.amqp.IAmqpConnection&text=IAmqpConnection\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getOutboundSocketHostName()"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getOutboundSocketHostName()"
  name: "getOutboundSocketHostName()"
  nameWithType: "ConnectionHandler.getOutboundSocketHostName()"
  syntax: "public String getOutboundSocketHostName()"
  returns:
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getOutboundSocketPort()"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getOutboundSocketPort()"
  name: "getOutboundSocketPort()"
  nameWithType: "ConnectionHandler.getOutboundSocketPort()"
  syntax: "public int getOutboundSocketPort()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getProtocolPort()"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.getProtocolPort()"
  name: "getProtocolPort()"
  nameWithType: "ConnectionHandler.getProtocolPort()"
  syntax: "public int getProtocolPort()"
  returns:
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.notifyTransportErrors(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.notifyTransportErrors(Event event)"
  name: "notifyTransportErrors(Event event)"
  nameWithType: "ConnectionHandler.notifyTransportErrors(Event event)"
  modifiers:
  - "protected"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected void notifyTransportErrors(Event event)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionBound(Event event)"
  name: "onConnectionBound(Event event)"
  nameWithType: "ConnectionHandler.onConnectionBound(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionBound(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionBound(Event event)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionFinal(Event event)"
  name: "onConnectionFinal(Event event)"
  nameWithType: "ConnectionHandler.onConnectionFinal(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionFinal(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionFinal(Event event)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionInit(Event event)"
  name: "onConnectionInit(Event event)"
  nameWithType: "ConnectionHandler.onConnectionInit(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionInit(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionInit(Event event)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionLocalClose(Event event)"
  name: "onConnectionLocalClose(Event event)"
  nameWithType: "ConnectionHandler.onConnectionLocalClose(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionLocalClose(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionLocalClose(Event event)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionRemoteClose(Event event)"
  name: "onConnectionRemoteClose(Event event)"
  nameWithType: "ConnectionHandler.onConnectionRemoteClose(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteClose(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionRemoteClose(Event event)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onConnectionRemoteOpen(Event event)"
  name: "onConnectionRemoteOpen(Event event)"
  nameWithType: "ConnectionHandler.onConnectionRemoteOpen(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onConnectionRemoteOpen(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onConnectionRemoteOpen(Event event)"
- uid: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onTransportError(org.apache.qpid.proton.engine.Event)"
  fullName: "com.microsoft.azure.servicebus.amqp.ConnectionHandler.onTransportError(Event event)"
  name: "onTransportError(Event event)"
  nameWithType: "ConnectionHandler.onTransportError(Event event)"
  overridden: "org.apache.qpid.proton.engine.BaseHandler.onTransportError(org.apache.qpid.proton.engine.Event)"
  parameters:
  - name: "event"
    type: "<xref href=\"org.apache.qpid.proton.engine.Event?alt=org.apache.qpid.proton.engine.Event&text=Event\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onTransportError(Event event)"
type: "class"
metadata: {}
package: "com.microsoft.azure.servicebus.amqp"
artifact: com.microsoft.azure:azure-servicebus:3.6.7
