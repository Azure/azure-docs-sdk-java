### YamlMime:JavaType
uid: "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter"
fullName: "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter<T>"
name: "AbstractAzureMessageConverter<T>"
nameWithType: "AbstractAzureMessageConverter<T>"
summary: "Abstract class handles common conversion logic between <T> and <xref uid=\"org.springframework.messaging.Message\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Message\"></xref>"
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class AbstractAzureMessageConverter<T> implements AzureMessageConverter<T>"
constructors:
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.AbstractAzureMessageConverter()"
methods:
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.<M>readValue(java.lang.String,java.lang.Class<M>)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.<U>toMessage(T,java.util.Map<java.lang.String,java.lang.Object>,java.lang.Class<U>)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.buildCustomHeaders(T)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.fromByte(byte[])"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.fromMessage(org.springframework.messaging.Message<?>,java.lang.Class<T>)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.fromString(java.lang.String)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.getPayload(T)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.isValidJson(java.lang.Object)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.setCustomHeaders(org.springframework.messaging.MessageHeaders,T)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.toJson(java.lang.Object)"
- "com.azure.spring.integration.core.converter.AbstractAzureMessageConverter.toPayload(java.lang.Object)"
type: "class"
typeParameters:
- name: "T"
implements:
- "<xref href=\"com.azure.spring.integration.core.converter.AzureMessageConverter?alt=com.azure.spring.integration.core.converter.AzureMessageConverter&text=AzureMessageConverter\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.spring.integration.core.converter"
artifact: com.azure.spring:azure-spring-integration-core:2.0.0
