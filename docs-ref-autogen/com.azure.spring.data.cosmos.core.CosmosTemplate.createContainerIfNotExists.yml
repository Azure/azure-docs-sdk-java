### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.core.CosmosTemplate.createContainerIfNotExists*"
fullName: "com.azure.spring.data.cosmos.core.CosmosTemplate.createContainerIfNotExists"
name: "createContainerIfNotExists"
nameWithType: "CosmosTemplate.createContainerIfNotExists"
members:
- uid: "com.azure.spring.data.cosmos.core.CosmosTemplate.createContainerIfNotExists(com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation<?,?>)"
  fullName: "com.azure.spring.data.cosmos.core.CosmosTemplate.createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  name: "createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  nameWithType: "CosmosTemplate.createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  summary: "Creates container if not exists"
  parameters:
  - name: "information"
    type: "<xref href=\"com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation?alt=com.azure.spring.data.cosmos.repository.support.CosmosEntityInformation&text=CosmosEntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;?,?&gt;"
  syntax: "public CosmosContainerProperties createContainerIfNotExists(CosmosEntityInformation<?,?> information)"
  returns:
    type: "<xref href=\"com.azure.cosmos.models.CosmosContainerProperties?alt=com.azure.cosmos.models.CosmosContainerProperties&text=CosmosContainerProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.core"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
