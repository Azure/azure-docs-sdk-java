### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.customPrebuiltDomainName()
  name: customPrebuiltDomainName()
  nameWithType: EntityExtractor.customPrebuiltDomainName()
  returns:
    description: <p>the customPrebuiltDomainName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the customPrebuiltDomainName value.</p>

    <p></p>
  syntax: public String customPrebuiltDomainName()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.customPrebuiltDomainName()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.customPrebuiltModelName()
  name: customPrebuiltModelName()
  nameWithType: EntityExtractor.customPrebuiltModelName()
  returns:
    description: <p>the customPrebuiltModelName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the customPrebuiltModelName value.</p>

    <p></p>
  syntax: public String customPrebuiltModelName()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.customPrebuiltModelName()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.id()
  name: id()
  nameWithType: EntityExtractor.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax: public UUID id()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.id()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.name()
  name: name()
  nameWithType: EntityExtractor.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.name()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.readableType()
  name: readableType()
  nameWithType: EntityExtractor.readableType()
  returns:
    description: <p>the readableType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the readableType value.</p>

    <p></p>
  syntax: public String readableType()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.readableType()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.roles()
  name: roles()
  nameWithType: EntityExtractor.roles()
  returns:
    description: <p>the roles value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityRole?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityRole&text=EntityRole" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the roles value.</p>

    <p></p>
  syntax: public List<EntityRole> roles()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.roles()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.typeId()
  name: typeId()
  nameWithType: EntityExtractor.typeId()
  returns:
    description: <p>the typeId value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the typeId value.</p>

    <p></p>
  syntax: public Integer typeId()
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.typeId()
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withCustomPrebuiltDomainName(String customPrebuiltDomainName)
  name: withCustomPrebuiltDomainName(String customPrebuiltDomainName)
  nameWithType: EntityExtractor.withCustomPrebuiltDomainName(String customPrebuiltDomainName)
  parameters:
  - description: <p>the customPrebuiltDomainName value to set </p>
    name: customPrebuiltDomainName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the EntityExtractor object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor&text=EntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the customPrebuiltDomainName value.</p>

    <p></p>
  syntax: public EntityExtractor withCustomPrebuiltDomainName(String customPrebuiltDomainName)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withCustomPrebuiltDomainName(String)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withCustomPrebuiltModelName(String customPrebuiltModelName)
  name: withCustomPrebuiltModelName(String customPrebuiltModelName)
  nameWithType: EntityExtractor.withCustomPrebuiltModelName(String customPrebuiltModelName)
  parameters:
  - description: <p>the customPrebuiltModelName value to set </p>
    name: customPrebuiltModelName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the EntityExtractor object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor&text=EntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the customPrebuiltModelName value.</p>

    <p></p>
  syntax: public EntityExtractor withCustomPrebuiltModelName(String customPrebuiltModelName)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withCustomPrebuiltModelName(String)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withId(UUID id)
  name: withId(UUID id)
  nameWithType: EntityExtractor.withId(UUID id)
  parameters:
  - description: <p>the id value to set </p>
    name: id
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the EntityExtractor object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor&text=EntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the id value.</p>

    <p></p>
  syntax: public EntityExtractor withId(UUID id)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withId(UUID)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withName(String name)
  name: withName(String name)
  nameWithType: EntityExtractor.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the EntityExtractor object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor&text=EntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public EntityExtractor withName(String name)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withName(String)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withReadableType(String readableType)
  name: withReadableType(String readableType)
  nameWithType: EntityExtractor.withReadableType(String readableType)
  parameters:
  - description: <p>the readableType value to set </p>
    name: readableType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the EntityExtractor object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor&text=EntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the readableType value.</p>

    <p></p>
  syntax: public EntityExtractor withReadableType(String readableType)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withReadableType(String)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withRoles(List<EntityRole> roles)
  name: withRoles(List<EntityRole> roles)
  nameWithType: EntityExtractor.withRoles(List<EntityRole> roles)
  parameters:
  - description: <p>the roles value to set </p>
    name: roles
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityRole?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityRole&text=EntityRole" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the EntityExtractor object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor&text=EntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the roles value.</p>

    <p></p>
  syntax: public EntityExtractor withRoles(List<EntityRole> roles)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withRoles(List<EntityRole>)
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withTypeId(Integer typeId)
  name: withTypeId(Integer typeId)
  nameWithType: EntityExtractor.withTypeId(Integer typeId)
  parameters:
  - description: <p>the typeId value to set </p>
    name: typeId
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the EntityExtractor object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor&text=EntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the typeId value.</p>

    <p></p>
  syntax: public EntityExtractor withTypeId(Integer typeId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor.withTypeId(Integer)
nameWithType: EntityExtractor
syntax: public class EntityExtractor
type: class
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.models.EntityExtractor
name: EntityExtractor
package: com.microsoft.azure.cognitiveservices.language.luis.authoring.models
summary: <p>Entity Extractor. </p>
metadata: {}
