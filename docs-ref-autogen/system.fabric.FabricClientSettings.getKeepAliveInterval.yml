### YamlMime:JavaMember
nameWithType: FabricClientSettings.getKeepAliveInterval
type: method
members:
- fullName: system.fabric.FabricClientSettings.getKeepAliveInterval()
  name: getKeepAliveInterval()
  nameWithType: FabricClientSettings.getKeepAliveInterval()
  returns:
    description: <p>The interval at which the <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will ping the connected endpoint. </p>
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the interval at which the <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will ping the connected endpoint.</p>

    <p>

      <b>Remarks:</b>The default value of this property is 0 seconds. This property can't be updated after the <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> is opened. Setting this property will throw a <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> exception. <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will continue pinging as long as it has pending operations. </p>
  syntax: public Duration getKeepAliveInterval()
  uid: system.fabric.FabricClientSettings.getKeepAliveInterval()
uid: system.fabric.FabricClientSettings.getKeepAliveInterval*
fullName: system.fabric.FabricClientSettings.getKeepAliveInterval()
name: getKeepAliveInterval()
package: system.fabric
metadata: {}
