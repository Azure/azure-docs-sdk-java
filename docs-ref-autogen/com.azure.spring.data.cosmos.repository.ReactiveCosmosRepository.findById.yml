### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository.findById*"
fullName: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository<T,K>.findById"
name: "findById"
nameWithType: "ReactiveCosmosRepository<T,K>.findById"
members:
- uid: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository.findById(K,com.azure.cosmos.models.PartitionKey)"
  fullName: "com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository<T,K>.findById(K id, PartitionKey partitionKey)"
  name: "findById(K id, PartitionKey partitionKey)"
  nameWithType: "ReactiveCosmosRepository<T,K>.findById(K id, PartitionKey partitionKey)"
  summary: "Retrieves an entity by its id and partition key."
  parameters:
  - description: "must not be null."
    name: "id"
    type: "<xref href=\"K?alt=K&text=K\" data-throw-if-not-resolved=\"False\" />"
  - description: "partition key value of the entity, must not be null."
    name: "partitionKey"
    type: "<xref href=\"com.azure.cosmos.models.PartitionKey?alt=com.azure.cosmos.models.PartitionKey&text=PartitionKey\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<T> findById(K id, PartitionKey partitionKey)"
  returns:
    description: "<xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono\"></xref> emitting the entity with the given id or <xref uid=\"reactor.core.publisher.Mono.empty*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Mono#empty()\"></xref> if none found."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
