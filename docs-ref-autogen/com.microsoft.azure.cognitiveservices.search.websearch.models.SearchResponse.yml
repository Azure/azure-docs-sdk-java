### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.ResponseBase" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Identifiable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Response?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.Response&text=Response" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cognitiveservices.search.websearch.models.Identifiable.id()
- com.microsoft.azure.cognitiveservices.search.websearch.models.Response.webSearchUrl()
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.computation()
  name: computation()
  nameWithType: SearchResponse.computation()
  returns:
    description: <p>the computation value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Computation?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.Computation&text=Computation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the computation value.</p>

    <p></p>
  syntax: public Computation computation()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.computation()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.images()
  name: images()
  nameWithType: SearchResponse.images()
  returns:
    description: <p>the images value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Images?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.Images&text=Images" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the images value.</p>

    <p></p>
  syntax: public Images images()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.images()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.news()
  name: news()
  nameWithType: SearchResponse.news()
  returns:
    description: <p>the news value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.News?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.News&text=News" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the news value.</p>

    <p></p>
  syntax: public News news()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.news()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.queryContext()
  name: queryContext()
  nameWithType: SearchResponse.queryContext()
  returns:
    description: <p>the queryContext value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.QueryContext?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.QueryContext&text=QueryContext" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the queryContext value.</p>

    <p></p>
  syntax: public QueryContext queryContext()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.queryContext()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.rankingResponse()
  name: rankingResponse()
  nameWithType: SearchResponse.rankingResponse()
  returns:
    description: <p>the rankingResponse value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.RankingRankingResponse?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.RankingRankingResponse&text=RankingRankingResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the rankingResponse value.</p>

    <p></p>
  syntax: public RankingRankingResponse rankingResponse()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.rankingResponse()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.relatedSearches()
  name: relatedSearches()
  nameWithType: SearchResponse.relatedSearches()
  returns:
    description: <p>the relatedSearches value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.RelatedSearchesRelatedSearchAnswer?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.RelatedSearchesRelatedSearchAnswer&text=RelatedSearchesRelatedSearchAnswer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the relatedSearches value.</p>

    <p></p>
  syntax: public RelatedSearchesRelatedSearchAnswer relatedSearches()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.relatedSearches()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.spellSuggestions()
  name: spellSuggestions()
  nameWithType: SearchResponse.spellSuggestions()
  returns:
    description: <p>the spellSuggestions value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions&text=SpellSuggestions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the spellSuggestions value.</p>

    <p></p>
  syntax: public SpellSuggestions spellSuggestions()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.spellSuggestions()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.timeZone()
  name: timeZone()
  nameWithType: SearchResponse.timeZone()
  returns:
    description: <p>the timeZone value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.TimeZone?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.TimeZone&text=TimeZone" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the timeZone value.</p>

    <p></p>
  syntax: public TimeZone timeZone()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.timeZone()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.videos()
  name: videos()
  nameWithType: SearchResponse.videos()
  returns:
    description: <p>the videos value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Videos?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.Videos&text=Videos" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the videos value.</p>

    <p></p>
  syntax: public Videos videos()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.videos()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.webPages()
  name: webPages()
  nameWithType: SearchResponse.webPages()
  returns:
    description: <p>the webPages value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.WebWebAnswer?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.WebWebAnswer&text=WebWebAnswer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the webPages value.</p>

    <p></p>
  syntax: public WebWebAnswer webPages()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse.webPages()
nameWithType: SearchResponse
syntax: public class SearchResponse extends Response
type: class
uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse
fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResponse
name: SearchResponse
package: com.microsoft.azure.cognitiveservices.search.websearch.models
summary: <p>Defines the top-level object that the response includes when the request succeeds. </p>
metadata: {}
