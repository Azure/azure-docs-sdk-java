### YamlMime:JavaType
uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk"
fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk"
name: "DataDisk"
nameWithType: "DataDisk"
summary: "The data disk of the VMSS."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **DataDisk**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.DataDisk?alt=com.azure.resourcemanager.devopsinfrastructure.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.DataDisk()"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.DataDisk()"
  name: "DataDisk()"
  nameWithType: "DataDisk.DataDisk()"
  summary: "Creates an instance of Data<wbr>Disk class."
  syntax: "public DataDisk()"
  desc: "Creates an instance of DataDisk class."
methods:
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.caching()"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.caching()"
  name: "caching()"
  nameWithType: "DataDisk.caching()"
  summary: "Get the caching property: The type of caching to be enabled for the data disks."
  syntax: "public CachingType caching()"
  desc: "Get the caching property: The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
  returns:
    description: "the caching value."
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.CachingType?alt=com.azure.resourcemanager.devopsinfrastructure.models.CachingType&text=CachingType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.diskSizeGiB()"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.diskSizeGiB()"
  name: "diskSizeGiB()"
  nameWithType: "DataDisk.diskSizeGiB()"
  summary: "Get the disk<wbr>Size<wbr>GiB property: The initial disk size in gigabytes."
  syntax: "public Integer diskSizeGiB()"
  desc: "Get the diskSizeGiB property: The initial disk size in gigabytes."
  returns:
    description: "the diskSizeGiB value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.driveLetter()"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.driveLetter()"
  name: "driveLetter()"
  nameWithType: "DataDisk.driveLetter()"
  summary: "Get the drive<wbr>Letter property: The drive letter for the empty data disk."
  syntax: "public String driveLetter()"
  desc: "Get the driveLetter property: The drive letter for the empty data disk. If not specified, it will be the first available letter."
  returns:
    description: "the driveLetter value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "DataDisk.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Data<wbr>Disk from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static DataDisk fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the DataDisk."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of DataDisk from the JsonReader."
  returns:
    description: "An instance of DataDisk if the JsonReader was pointing to an instance of it, or null if it was pointing\n to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.DataDisk?alt=com.azure.resourcemanager.devopsinfrastructure.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.storageAccountType()"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.storageAccountType()"
  name: "storageAccountType()"
  nameWithType: "DataDisk.storageAccountType()"
  summary: "Get the storage<wbr>Account<wbr>Type property: The storage Account type to be used for the data disk."
  syntax: "public StorageAccountType storageAccountType()"
  desc: "Get the storageAccountType property: The storage Account type to be used for the data disk. If omitted, the default is \"standard\\_lrs\"."
  returns:
    description: "the storageAccountType value."
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.StorageAccountType?alt=com.azure.resourcemanager.devopsinfrastructure.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "DataDisk.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.validate()"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.validate()"
  name: "validate()"
  nameWithType: "DataDisk.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withCaching(com.azure.resourcemanager.devopsinfrastructure.models.CachingType)"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withCaching(CachingType caching)"
  name: "withCaching(CachingType caching)"
  nameWithType: "DataDisk.withCaching(CachingType caching)"
  summary: "Set the caching property: The type of caching to be enabled for the data disks."
  parameters:
  - description: "the caching value to set."
    name: "caching"
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.CachingType?alt=com.azure.resourcemanager.devopsinfrastructure.models.CachingType&text=CachingType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withCaching(CachingType caching)"
  desc: "Set the caching property: The type of caching to be enabled for the data disks. The default value for caching is readwrite. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.DataDisk?alt=com.azure.resourcemanager.devopsinfrastructure.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withDiskSizeGiB(java.lang.Integer)"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withDiskSizeGiB(Integer diskSizeGiB)"
  name: "withDiskSizeGiB(Integer diskSizeGiB)"
  nameWithType: "DataDisk.withDiskSizeGiB(Integer diskSizeGiB)"
  summary: "Set the disk<wbr>Size<wbr>GiB property: The initial disk size in gigabytes."
  parameters:
  - description: "the diskSizeGiB value to set."
    name: "diskSizeGiB"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public DataDisk withDiskSizeGiB(Integer diskSizeGiB)"
  desc: "Set the diskSizeGiB property: The initial disk size in gigabytes."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.DataDisk?alt=com.azure.resourcemanager.devopsinfrastructure.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withDriveLetter(java.lang.String)"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withDriveLetter(String driveLetter)"
  name: "withDriveLetter(String driveLetter)"
  nameWithType: "DataDisk.withDriveLetter(String driveLetter)"
  summary: "Set the drive<wbr>Letter property: The drive letter for the empty data disk."
  parameters:
  - description: "the driveLetter value to set."
    name: "driveLetter"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DataDisk withDriveLetter(String driveLetter)"
  desc: "Set the driveLetter property: The drive letter for the empty data disk. If not specified, it will be the first available letter."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.DataDisk?alt=com.azure.resourcemanager.devopsinfrastructure.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withStorageAccountType(com.azure.resourcemanager.devopsinfrastructure.models.StorageAccountType)"
  fullName: "com.azure.resourcemanager.devopsinfrastructure.models.DataDisk.withStorageAccountType(StorageAccountType storageAccountType)"
  name: "withStorageAccountType(StorageAccountType storageAccountType)"
  nameWithType: "DataDisk.withStorageAccountType(StorageAccountType storageAccountType)"
  summary: "Set the storage<wbr>Account<wbr>Type property: The storage Account type to be used for the data disk."
  parameters:
  - description: "the storageAccountType value to set."
    name: "storageAccountType"
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.StorageAccountType?alt=com.azure.resourcemanager.devopsinfrastructure.models.StorageAccountType&text=StorageAccountType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataDisk withStorageAccountType(StorageAccountType storageAccountType)"
  desc: "Set the storageAccountType property: The storage Account type to be used for the data disk. If omitted, the default is \"standard\\_lrs\"."
  returns:
    description: "the DataDisk object itself."
    type: "<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.DataDisk?alt=com.azure.resourcemanager.devopsinfrastructure.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The data disk of the VMSS."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.devopsinfrastructure.models.DataDisk?alt=com.azure.resourcemanager.devopsinfrastructure.models.DataDisk&text=DataDisk\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.devopsinfrastructure.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-devopsinfrastructure:1.0.0
