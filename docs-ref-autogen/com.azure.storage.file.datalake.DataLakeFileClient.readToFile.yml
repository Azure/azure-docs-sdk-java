### YamlMime:JavaMember
uid: "com.azure.storage.file.datalake.DataLakeFileClient.readToFile*"
fullName: "com.azure.storage.file.datalake.DataLakeFileClient.readToFile"
name: "readToFile"
nameWithType: "DataLakeFileClient.readToFile"
members:
- uid: "com.azure.storage.file.datalake.DataLakeFileClient.readToFile(java.lang.String)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileClient.readToFile(String filePath)"
  name: "readToFile(String filePath)"
  nameWithType: "DataLakeFileClient.readToFile(String filePath)"
  summary: "Reads the entire file into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileAlreadyExistsException\"></xref> will be thrown.\n\n**Code Samples**\n\n```java\nclient.readToFile(file);\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  parameters:
  - description: "A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> representing the filePath where the downloaded data will be written."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathProperties readToFile(String filePath)"
  returns:
    description: "The file properties and metadata."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathProperties?alt=com.azure.storage.file.datalake.models.PathProperties&text=PathProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.storage.file.datalake.DataLakeFileClient.readToFile(java.lang.String,boolean)"
  fullName: "com.azure.storage.file.datalake.DataLakeFileClient.readToFile(String filePath, boolean overwrite)"
  name: "readToFile(String filePath, boolean overwrite)"
  nameWithType: "DataLakeFileClient.readToFile(String filePath, boolean overwrite)"
  summary: "Reads the entire file into a file specified by the path.\n\nIf overwrite is set to false, the file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"FileAlreadyExistsException\"></xref> will be thrown.\n\n**Code Samples**\n\n```java\nboolean overwrite = false; // Default value\n client.readToFile(file, overwrite);\n System.out.println(\"Completed download to file\");\n```\n\nFor more information, see the [Azure Docs][]\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob"
  parameters:
  - description: "A <xref uid=\"java.lang.String\" data-throw-if-not-resolved=\"false\" data-raw-source=\"String\"></xref> representing the filePath where the downloaded data will be written."
    name: "filePath"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Whether or not to overwrite the file, should the file exist."
    name: "overwrite"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PathProperties readToFile(String filePath, boolean overwrite)"
  returns:
    description: "The file properties and metadata."
    type: "<xref href=\"com.azure.storage.file.datalake.models.PathProperties?alt=com.azure.storage.file.datalake.models.PathProperties&text=PathProperties\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.storage.file.datalake"
artifact: com.azure:azure-storage-file-datalake:12.4.0
