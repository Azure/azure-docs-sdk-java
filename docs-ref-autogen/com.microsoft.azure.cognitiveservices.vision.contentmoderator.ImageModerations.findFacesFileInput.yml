### YamlMime:JavaMember
nameWithType: ImageModerations.findFacesFileInput
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput()
  name: findFacesFileInput()
  nameWithType: ImageModerations.findFacesFileInput()
  returns:
    description: <p>the first stage of the findFacesFileInput call </p>
    type: <xref href="ImageModerationsFindFacesFileInputDefinitionStages.WithImageStream?alt=ImageModerationsFindFacesFileInputDefinitionStages.WithImageStream&text=ImageModerationsFindFacesFileInputDefinitionStages.WithImageStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of faces found.</p>

    <p></p>
  syntax: public ImageModerationsFindFacesFileInputDefinitionStages.WithImageStream findFacesFileInput()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)
  name: findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)
  nameWithType: ImageModerations.findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)
  parameters:
  - description: <p>The image file. </p>
    name: imageStream
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: findFacesFileInputOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter&text=FindFacesFileInputOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the FoundFaces object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the list of faces found.</p>

    <p></p>
  syntax: public FoundFaces findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput(byte [],FindFacesFileInputOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput
name: findFacesFileInput()
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
