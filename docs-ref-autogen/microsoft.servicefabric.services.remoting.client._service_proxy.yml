### YamlMime:ManagedReference
items:
- uid: microsoft.servicefabric.services.remoting.client._service_proxy
  id: _service_proxy
  parent: microsoft.servicefabric.services.remoting.client
  children:
  - microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType()
  - microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient()
  href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
  langs:
  - java
  name: ServiceProxy
  nameWithType: ServiceProxy
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxy.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxy.java
    startLine: 7
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>This is the base Client side interface for Remoting. The framework provides the Remoting infrastructure for all the service contracts inheriting from IService through ServiceRemotingListener and ServiceProxy. </p>"
  syntax:
    content: public interface ServiceProxy
- uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType()
  id: getServiceInterfaceType()
  parent: microsoft.servicefabric.services.remoting.client._service_proxy
  href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
  langs:
  - java
  name: getServiceInterfaceType()
  nameWithType: ServiceProxy.getServiceInterfaceType()
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy.getServiceInterfaceType()
  overload: microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxy.java
    startLine: 13
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>The interface type that is being remoted.</p>\r\n<p></p>"
  syntax:
    content: public Class<?> getServiceInterfaceType()
    return:
      type: a19781f8
      description: <p>Service interface type </p>
- uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient()
  id: getServicePartitionClient()
  parent: microsoft.servicefabric.services.remoting.client._service_proxy
  href: microsoft.servicefabric.services.remoting.client._service_proxy.yml
  langs:
  - java
  name: getServicePartitionClient()
  nameWithType: ServiceProxy.getServicePartitionClient()
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy.getServicePartitionClient()
  overload: microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.services/src/microsoft/servicefabric/services/remoting/client/ServiceProxy.java
    startLine: 20
  package: microsoft.servicefabric.services.remoting.client
  summary: "<p>The service partition client used to send requests to the service.</p>\r\n<p></p>"
  syntax:
    content: public ServiceRemotingPartitionClient getServicePartitionClient()
    return:
      type: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
      description: <p>ServicePartitionClient used by the ServiceProxy </p>
references:
- uid: a19781f8
  spec.java:
  - name: Class<?>
    fullName: Class<?>
- uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServiceInterfaceType*
  name: getServiceInterfaceType
  nameWithType: ServiceProxy.getServiceInterfaceType
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy.getServiceInterfaceType
  package: microsoft.servicefabric.services.remoting.client
- uid: microsoft.servicefabric.services.remoting.client._service_proxy.getServicePartitionClient*
  name: getServicePartitionClient
  nameWithType: ServiceProxy.getServicePartitionClient
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxy.getServicePartitionClient
  package: microsoft.servicefabric.services.remoting.client
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_base
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
  name: ServiceProxyBase
  nameWithType: ServiceProxyBase
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyBase
  type: Class
  summary: <p>Provides the base implementation for the proxy to the remoted IService interfaces. </p>
  syntax:
    content: public class ServiceProxyBase
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServiceInterfaceType()
  parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
  href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
  name: getServiceInterfaceType()
  nameWithType: ServiceProxyBase.getServiceInterfaceType()
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServiceInterfaceType()
  type: Method
  summary: >-
    <p>The interface type that is being remoted.</p>

    <p></p>
  syntax:
    content: public Class<?> getServiceInterfaceType()
    return:
      type: a19781f8
      description: <p>Service interface type. </p>
- uid: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
  parent: microsoft.servicefabric.services.remoting.client
  href: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client.yml
  name: ServiceRemotingPartitionClient
  nameWithType: ServiceRemotingPartitionClient
  fullName: microsoft.servicefabric.services.remoting.client.ServiceRemotingPartitionClient
  type: Interface
  summary: <p>Defines the interface for the client that communicate over remoting to a particular replica of a service partition. </p>
  syntax:
    content: public interface ServiceRemotingPartitionClient
- uid: microsoft.servicefabric.services.remoting.client._service_proxy_base.getServicePartitionClient()
  parent: microsoft.servicefabric.services.remoting.client._service_proxy_base
  href: microsoft.servicefabric.services.remoting.client._service_proxy_base.yml
  name: getServicePartitionClient()
  nameWithType: ServiceProxyBase.getServicePartitionClient()
  fullName: microsoft.servicefabric.services.remoting.client.ServiceProxyBase.getServicePartitionClient()
  type: Method
  summary: >-
    <p>The service partition client used to send requests to the service.</p>

    <p></p>
  syntax:
    content: public ServiceRemotingPartitionClient getServicePartitionClient()
    return:
      type: microsoft.servicefabric.services.remoting.client._service_remoting_partition_client
      description: <p>ServicePartitionClient used by the ServiceProxy. </p>
