### YamlMime:ManagedReference
items:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
  id: "SchemaContractInner"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  children:
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.SchemaContractInner()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.contentType()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.document()"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withContentType(java.lang.String)"
  - "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withDocument(java.lang.Object)"
  langs:
  - "java"
  name: "SchemaContractInner"
  nameWithType: "SchemaContractInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
  type: "Class"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Schema Contract details."
  syntax:
    content: "public class SchemaContractInner extends ProxyResource"
  inheritance:
  - "java.lang.Object"
  - "com.microsoft.azure.ProxyResource"
  inheritedMembers:
  - "com.microsoft.azure.ProxyResource.id()"
  - "com.microsoft.azure.ProxyResource.name()"
  - "com.microsoft.azure.ProxyResource.type()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.SchemaContractInner()"
  id: "SchemaContractInner()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
  langs:
  - "java"
  name: "SchemaContractInner()"
  nameWithType: "SchemaContractInner.SchemaContractInner()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.SchemaContractInner()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.SchemaContractInner*"
  type: "Constructor"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  syntax:
    content: "public SchemaContractInner()"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.contentType()"
  id: "contentType()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
  langs:
  - "java"
  name: "contentType()"
  nameWithType: "SchemaContractInner.contentType()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.contentType()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.contentType*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Get must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - \\`Swagger\\` Schema use \\`application/vnd.ms-azure-apim.swagger.definitions+json\\` </br> - \\`WSDL\\` Schema use \\`application/vnd.ms-azure-apim.xsd+xml\\` </br> - \\`OpenApi\\` Schema use \\`application/vnd.oai.openapi.components+json\\` </br> - \\`WADL Schema\\` use \\`application/vnd.ms-azure-apim.wadl.grammars+xml\\`."
  syntax:
    content: "public String contentType()"
    return:
      type: "java.lang.String"
      description: "the contentType value"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.document()"
  id: "document()"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
  langs:
  - "java"
  name: "document()"
  nameWithType: "SchemaContractInner.document()"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.document()"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.document*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Get properties of the Schema Document."
  syntax:
    content: "public Object document()"
    return:
      type: "java.lang.Object"
      description: "the document value"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withContentType(java.lang.String)"
  id: "withContentType(java.lang.String)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
  langs:
  - "java"
  name: "withContentType(String contentType)"
  nameWithType: "SchemaContractInner.withContentType(String contentType)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withContentType(String contentType)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withContentType*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Set must be a valid a media type used in a Content-Type header as defined in the RFC 2616. Media type of the schema document (e.g. application/json, application/xml). </br> - \\`Swagger\\` Schema use \\`application/vnd.ms-azure-apim.swagger.definitions+json\\` </br> - \\`WSDL\\` Schema use \\`application/vnd.ms-azure-apim.xsd+xml\\` </br> - \\`OpenApi\\` Schema use \\`application/vnd.oai.openapi.components+json\\` </br> - \\`WADL Schema\\` use \\`application/vnd.ms-azure-apim.wadl.grammars+xml\\`."
  syntax:
    content: "public SchemaContractInner withContentType(String contentType)"
    parameters:
    - id: "contentType"
      type: "java.lang.String"
      description: "the contentType value to set"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
      description: "the SchemaContractInner object itself."
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withDocument(java.lang.Object)"
  id: "withDocument(java.lang.Object)"
  parent: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
  langs:
  - "java"
  name: "withDocument(Object document)"
  nameWithType: "SchemaContractInner.withDocument(Object document)"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withDocument(Object document)"
  overload: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withDocument*"
  type: "Method"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
  summary: "Set properties of the Schema Document."
  syntax:
    content: "public SchemaContractInner withDocument(Object document)"
    parameters:
    - id: "document"
      type: "java.lang.Object"
      description: "the document value to set"
    return:
      type: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner"
      description: "the SchemaContractInner object itself."
references:
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.SchemaContractInner*"
  name: "SchemaContractInner"
  nameWithType: "SchemaContractInner.SchemaContractInner"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.SchemaContractInner"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.contentType*"
  name: "contentType"
  nameWithType: "SchemaContractInner.contentType"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.contentType"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withContentType*"
  name: "withContentType"
  nameWithType: "SchemaContractInner.withContentType"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withContentType"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.document*"
  name: "document"
  nameWithType: "SchemaContractInner.document"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.document"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withDocument*"
  name: "withDocument"
  nameWithType: "SchemaContractInner.withDocument"
  fullName: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation.SchemaContractInner.withDocument"
  package: "com.microsoft.azure.management.apimanagement.v2019_01_01.implementation"
- uid: "com.microsoft.azure.ProxyResource"
  name: "ProxyResource"
  nameWithType: "ProxyResource"
  fullName: "com.microsoft.azure.ProxyResource"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.microsoft.azure.ProxyResource.type()"
  name: "ProxyResource.type()"
  nameWithType: "ProxyResource.type()"
  fullName: "com.microsoft.azure.ProxyResource.type()"
- uid: "com.microsoft.azure.ProxyResource.name()"
  name: "ProxyResource.name()"
  nameWithType: "ProxyResource.name()"
  fullName: "com.microsoft.azure.ProxyResource.name()"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.microsoft.azure.ProxyResource.id()"
  name: "ProxyResource.id()"
  nameWithType: "ProxyResource.id()"
  fullName: "com.microsoft.azure.ProxyResource.id()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
