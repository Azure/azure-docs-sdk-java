### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints
  id: JobConstraints
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.JobConstraints.JobConstraints()
  - com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount()
  - com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime()
  - com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime(org.joda.time.Period)
  langs:
  - java
  name: JobConstraints
  nameWithType: JobConstraints
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: The execution constraints for a Job.
  syntax:
    content: public class JobConstraints
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.JobConstraints()
  id: JobConstraints()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobConstraints
  langs:
  - java
  name: JobConstraints()
  nameWithType: JobConstraints.JobConstraints()
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.JobConstraints()
  overload: com.microsoft.azure.batch.protocol.models.JobConstraints.JobConstraints*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public JobConstraints()
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount()
  id: maxTaskRetryCount()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobConstraints
  langs:
  - java
  name: maxTaskRetryCount()
  nameWithType: JobConstraints.maxTaskRetryCount()
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount()
  overload: com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get note that this value specifically controls the number of retries. The Batch service will try each Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry Tasks. If the maximum retry count is -1, the Batch service retries Tasks without limit. The default value is 0 (no retries).
  syntax:
    content: public Integer maxTaskRetryCount()
    return:
      type: java.lang.Integer
      description: the maxTaskRetryCount value
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime()
  id: maxWallClockTime()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobConstraints
  langs:
  - java
  name: maxWallClockTime()
  nameWithType: JobConstraints.maxWallClockTime()
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime()
  overload: com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if the Job does not complete within the time limit, the Batch service terminates it and any Tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the Job may run.
  syntax:
    content: public Period maxWallClockTime()
    return:
      type: org.joda.time.Period
      description: the maxWallClockTime value
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(java.lang.Integer)
  id: withMaxTaskRetryCount(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobConstraints
  langs:
  - java
  name: withMaxTaskRetryCount(Integer maxTaskRetryCount)
  nameWithType: JobConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount(Integer maxTaskRetryCount)
  overload: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set note that this value specifically controls the number of retries. The Batch service will try each Task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a Task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry Tasks. If the maximum retry count is -1, the Batch service retries Tasks without limit. The default value is 0 (no retries).
  syntax:
    content: public JobConstraints withMaxTaskRetryCount(Integer maxTaskRetryCount)
    parameters:
    - id: maxTaskRetryCount
      type: java.lang.Integer
      description: the maxTaskRetryCount value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: the JobConstraints object itself.
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime(org.joda.time.Period)
  id: withMaxWallClockTime(org.joda.time.Period)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.JobConstraints
  langs:
  - java
  name: withMaxWallClockTime(Period maxWallClockTime)
  nameWithType: JobConstraints.withMaxWallClockTime(Period maxWallClockTime)
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime(Period maxWallClockTime)
  overload: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if the Job does not complete within the time limit, the Batch service terminates it and any Tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the Job may run.
  syntax:
    content: public JobConstraints withMaxWallClockTime(Period maxWallClockTime)
    parameters:
    - id: maxWallClockTime
      type: org.joda.time.Period
      description: the maxWallClockTime value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.JobConstraints
      description: the JobConstraints object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.JobConstraints*
  name: JobConstraints
  nameWithType: JobConstraints.JobConstraints
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.JobConstraints
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.Period
  spec.java:
  - uid: org.joda.time.Period
    name: Period
    fullName: org.joda.time.Period
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime*
  name: maxWallClockTime
  nameWithType: JobConstraints.maxWallClockTime
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.maxWallClockTime
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime*
  name: withMaxWallClockTime
  nameWithType: JobConstraints.withMaxWallClockTime
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxWallClockTime
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount*
  name: maxTaskRetryCount
  nameWithType: JobConstraints.maxTaskRetryCount
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.maxTaskRetryCount
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount*
  name: withMaxTaskRetryCount
  nameWithType: JobConstraints.withMaxTaskRetryCount
  fullName: com.microsoft.azure.batch.protocol.models.JobConstraints.withMaxTaskRetryCount
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
