### YamlMime:JavaMember
uid: "com.microsoft.azure.management.redis.RedisCachePremium.forceReboot*"
fullName: "com.microsoft.azure.management.redis.RedisCachePremium.forceReboot"
name: "forceReboot"
nameWithType: "RedisCachePremium.forceReboot"
members:
- uid: "com.microsoft.azure.management.redis.RedisCachePremium.forceReboot(com.microsoft.azure.management.redis.RebootType,int)"
  fullName: "com.microsoft.azure.management.redis.RedisCachePremium.forceReboot(RebootType rebootType, int shardId)"
  name: "forceReboot(RebootType rebootType, int shardId)"
  nameWithType: "RedisCachePremium.forceReboot(RebootType rebootType, int shardId)"
  summary: "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss."
  parameters:
  - description: "specifies which Redis node(s) to reboot. Depending on this value data loss is\n                   possible. Possible values include: 'PrimaryNode', 'SecondaryNode', 'AllNodes'."
    name: "rebootType"
    type: "<xref href=\"com.microsoft.azure.management.redis.RebootType?alt=com.microsoft.azure.management.redis.RebootType&text=RebootType\" data-throw-if-not-resolved=\"False\" />"
  - description: "In case of cluster cache, this specifies shard id which should be rebooted."
    name: "shardId"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract void forceReboot(RebootType rebootType, int shardId)"
type: "method"
metadata: {}
package: "com.microsoft.azure.management.redis"
artifact: com.microsoft.azure:azure-mgmt-redis:1.38.1
