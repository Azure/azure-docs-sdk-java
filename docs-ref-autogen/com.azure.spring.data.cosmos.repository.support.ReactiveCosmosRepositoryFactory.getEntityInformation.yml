### YamlMime:JavaMember
uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.getEntityInformation*"
fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation"
name: "<T,ID>getEntityInformation"
nameWithType: "ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation"
members:
- uid: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation(java.lang.Class<T>)"
  fullName: "com.azure.spring.data.cosmos.repository.support.ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation(Class<T> domainType)"
  name: "<T,ID>getEntityInformation(Class<T> domainType)"
  nameWithType: "ReactiveCosmosRepositoryFactory.<T,ID>getEntityInformation(Class<T> domainType)"
  overridden: "org.springframework.data.repository.core.support.RepositoryFactorySupport.<T,ID>getEntityInformation(java.lang.Class<T>)"
  parameters:
  - name: "domainType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EntityInformation<T,ID> <T,ID>getEntityInformation(Class<T> domainType)"
  returns:
    type: "<xref href=\"org.springframework.data.repository.core.EntityInformation?alt=org.springframework.data.repository.core.EntityInformation&text=EntityInformation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />,<xref href=\"ID?alt=ID&text=ID\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.spring.data.cosmos.repository.support"
artifact: com.azure:azure-spring-data-cosmos:3.3.0
