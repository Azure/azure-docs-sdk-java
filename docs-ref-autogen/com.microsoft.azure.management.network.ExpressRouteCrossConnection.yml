### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection"
fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection"
name: "ExpressRouteCrossConnection"
nameWithType: "ExpressRouteCrossConnection"
summary: "Entry point for Express Route Cross Connection management API in Azure."
syntax: "public interface ExpressRouteCrossConnection extends GroupableResource<NetworkManager,ExpressRouteCrossConnectionInner>, Refreshable<ExpressRouteCrossConnection>, Updatable<ExpressRouteCrossConnection.Update>, UpdatableWithTags<ExpressRouteCrossConnection>"
methods:
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.bandwidthInMbps()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.bandwidthInMbps()"
  name: "bandwidthInMbps()"
  nameWithType: "ExpressRouteCrossConnection.bandwidthInMbps()"
  modifiers:
  - "abstract"
  syntax: "public abstract int bandwidthInMbps()"
  returns:
    description: "the circuit bandwidth In Mbps"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.expressRouteCircuit()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.expressRouteCircuit()"
  name: "expressRouteCircuit()"
  nameWithType: "ExpressRouteCrossConnection.expressRouteCircuit()"
  modifiers:
  - "abstract"
  syntax: "public abstract ExpressRouteCircuitReference expressRouteCircuit()"
  returns:
    description: "the ExpressRouteCircuit"
    type: "<xref href=\"com.microsoft.azure.management.network.ExpressRouteCircuitReference?alt=com.microsoft.azure.management.network.ExpressRouteCircuitReference&text=ExpressRouteCircuitReference\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.peeringLocation()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.peeringLocation()"
  name: "peeringLocation()"
  nameWithType: "ExpressRouteCrossConnection.peeringLocation()"
  modifiers:
  - "abstract"
  syntax: "public abstract String peeringLocation()"
  returns:
    description: "the peering location of the ExpressRoute circuit"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.peerings()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.peerings()"
  name: "peerings()"
  nameWithType: "ExpressRouteCrossConnection.peerings()"
  modifiers:
  - "abstract"
  syntax: "public abstract ExpressRouteCrossConnectionPeerings peerings()"
  returns:
    description: "entry point to manage express route peerings associated with express route circuit"
    type: "<xref href=\"com.microsoft.azure.management.network.ExpressRouteCrossConnectionPeerings?alt=com.microsoft.azure.management.network.ExpressRouteCrossConnectionPeerings&text=ExpressRouteCrossConnectionPeerings\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.peeringsMap()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.peeringsMap()"
  name: "peeringsMap()"
  nameWithType: "ExpressRouteCrossConnection.peeringsMap()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,ExpressRouteCrossConnectionPeering> peeringsMap()"
  returns:
    description: "the peerings associated with this express route cross connection, indexed by name"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.ExpressRouteCrossConnectionPeering?alt=com.microsoft.azure.management.network.ExpressRouteCrossConnectionPeering&text=ExpressRouteCrossConnectionPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.primaryAzurePort()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.primaryAzurePort()"
  name: "primaryAzurePort()"
  nameWithType: "ExpressRouteCrossConnection.primaryAzurePort()"
  modifiers:
  - "abstract"
  syntax: "public abstract String primaryAzurePort()"
  returns:
    description: "the name of the primary  port"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.provisioningState()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.provisioningState()"
  name: "provisioningState()"
  nameWithType: "ExpressRouteCrossConnection.provisioningState()"
  modifiers:
  - "abstract"
  syntax: "public abstract ProvisioningState provisioningState()"
  returns:
    description: "the provisioning state of the express route cross connection resource"
    type: "<xref href=\"com.microsoft.azure.management.network.ProvisioningState?alt=com.microsoft.azure.management.network.ProvisioningState&text=ProvisioningState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.sTag()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.sTag()"
  name: "sTag()"
  nameWithType: "ExpressRouteCrossConnection.sTag()"
  modifiers:
  - "abstract"
  syntax: "public abstract Integer sTag()"
  returns:
    description: "the identifier of the circuit traffic"
    type: "<xref href=\"java.lang.Integer?alt=java.lang.Integer&text=Integer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.secondaryAzurePort()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.secondaryAzurePort()"
  name: "secondaryAzurePort()"
  nameWithType: "ExpressRouteCrossConnection.secondaryAzurePort()"
  modifiers:
  - "abstract"
  syntax: "public abstract String secondaryAzurePort()"
  returns:
    description: "the name of the secondary  port"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.serviceProviderNotes()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.serviceProviderNotes()"
  name: "serviceProviderNotes()"
  nameWithType: "ExpressRouteCrossConnection.serviceProviderNotes()"
  modifiers:
  - "abstract"
  syntax: "public abstract String serviceProviderNotes()"
  returns:
    description: "additional read only notes set by the connectivity provider"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.serviceProviderProvisioningState()"
  fullName: "com.microsoft.azure.management.network.ExpressRouteCrossConnection.serviceProviderProvisioningState()"
  name: "serviceProviderProvisioningState()"
  nameWithType: "ExpressRouteCrossConnection.serviceProviderProvisioningState()"
  modifiers:
  - "abstract"
  syntax: "public abstract ServiceProviderProvisioningState serviceProviderProvisioningState()"
  returns:
    description: "the provisioning state of the circuit in the connectivity provider system"
    type: "<xref href=\"com.microsoft.azure.management.network.ServiceProviderProvisioningState?alt=com.microsoft.azure.management.network.ServiceProviderProvisioningState&text=ServiceProviderProvisioningState\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Entry point for Express Route Cross Connection management API in Azure."
implements:
- "<xref href=\"com.microsoft.azure.management.network.model.UpdatableWithTags?alt=com.microsoft.azure.management.network.model.UpdatableWithTags&text=UpdatableWithTags\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ExpressRouteCrossConnection?alt=com.microsoft.azure.management.network.ExpressRouteCrossConnection&text=ExpressRouteCrossConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.GroupableResource&text=GroupableResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.implementation.NetworkManager?alt=com.microsoft.azure.management.network.implementation.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.implementation.ExpressRouteCrossConnectionInner?alt=com.microsoft.azure.management.network.implementation.ExpressRouteCrossConnectionInner&text=ExpressRouteCrossConnectionInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ExpressRouteCrossConnection?alt=com.microsoft.azure.management.network.ExpressRouteCrossConnection&text=ExpressRouteCrossConnection\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ExpressRouteCrossConnection.Update?alt=com.microsoft.azure.management.network.ExpressRouteCrossConnection.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
