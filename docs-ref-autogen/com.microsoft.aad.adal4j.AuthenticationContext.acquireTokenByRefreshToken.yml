### YamlMime:JavaMember
nameWithType: AuthenticationContext.acquireTokenByRefreshToken
type: method
members:
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>object representing Private Key to use for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.AsymmetricKeyCredential?alt=com.microsoft.aad.adal4j.AsymmetricKeyCredential&text=AsymmetricKeyCredential" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if <xref uid="com.microsoft.aad.adal4j.AsymmetricKeyCredential" data-throw-if-not-resolved="false" data-raw-source="AsymmetricKeyCredential"></xref> fails to sign the JWT token. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final AsymmetricKeyCredential,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final String resource, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final String resource, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final String resource, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>object representing Private Key to use for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.AsymmetricKeyCredential?alt=com.microsoft.aad.adal4j.AsymmetricKeyCredential&text=AsymmetricKeyCredential" data-throw-if-not-resolved="False"/>
  - description: <p>Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for. If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if <xref uid="com.microsoft.aad.adal4j.AsymmetricKeyCredential" data-throw-if-not-resolved="false" data-raw-source="AsymmetricKeyCredential"></xref> fails to sign the JWT token. </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final String resource, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final AsymmetricKeyCredential,final String,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The client credential used for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.ClientCredential?alt=com.microsoft.aad.adal4j.ClientCredential&text=ClientCredential" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final ClientCredential,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final String resource, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final String resource, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final String resource, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The client credential used for token acquisition. </p>
    name: credential
    type: final <xref href="com.microsoft.aad.adal4j.ClientCredential?alt=com.microsoft.aad.adal4j.ClientCredential&text=ClientCredential" data-throw-if-not-resolved="False"/>
  - description: <p>Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for. If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final ClientCredential credential, final String resource, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final ClientCredential,final String,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final String clientId, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Name or ID of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the access token is not refreshed successfully </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received. This method is suitable for the daemon OAuth2 flow when a client secret is not possible.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final String clientId, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final String,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Name or ID of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The client assertion to use for client authentication. </p>
    name: clientAssertion
    type: final <xref href="com.microsoft.aad.adal4j.ClientAssertion?alt=com.microsoft.aad.adal4j.ClientAssertion&text=ClientAssertion" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final String,final ClientAssertion,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final String resource, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final String resource, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final String resource, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Name or ID of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The client assertion to use for client authentication. </p>
    name: clientAssertion
    type: final <xref href="com.microsoft.aad.adal4j.ClientAssertion?alt=com.microsoft.aad.adal4j.ClientAssertion&text=ClientAssertion" data-throw-if-not-resolved="False"/>
  - description: <p>Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for. If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final String clientId, final ClientAssertion clientAssertion, final String resource, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final String,final ClientAssertion,final String,final AuthenticationCallback)
- fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final String resource, final AuthenticationCallback callback)
  name: acquireTokenByRefreshToken(final String refreshToken, final String clientId, final String resource, final AuthenticationCallback callback)
  nameWithType: AuthenticationContext.acquireTokenByRefreshToken(final String refreshToken, final String clientId, final String resource, final AuthenticationCallback callback)
  parameters:
  - description: <p>Refresh Token to use in the refresh flow. </p>
    name: refreshToken
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Name or ID of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for. If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources. </p>
    name: resource
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>optional callback object for non-blocking execution. </p>
    name: callback
    type: final <xref href="com.microsoft.aad.adal4j.AuthenticationCallback?alt=com.microsoft.aad.adal4j.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="AuthenticationException?alt=AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the access token is not refreshed successfully </p>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Future"></xref> object representing the <xref uid="com.microsoft.aad.adal4j.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> of the call. It contains Access Token, Refresh Token and the Access Token's expiration time. </p>
    type: Future&lt;<xref href="com.microsoft.aad.adal4j.AuthenticationResult?alt=com.microsoft.aad.adal4j.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Acquires a security token from the authority using a Refresh Token previously received. This method is suitable for the daemon OAuth2 flow when a client secret is not possible.</p>

    <p></p>
  syntax: public Future<AuthenticationResult> acquireTokenByRefreshToken(final String refreshToken, final String clientId, final String resource, final AuthenticationCallback callback)
  uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken(final String,final String,final String,final AuthenticationCallback)
uid: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken*
fullName: com.microsoft.aad.adal4j.AuthenticationContext.acquireTokenByRefreshToken
name: acquireTokenByRefreshToken(final String refreshToken, final AsymmetricKeyCredential credential, final AuthenticationCallback callback)
package: com.microsoft.aad.adal4j
metadata: {}
