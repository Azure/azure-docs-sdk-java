### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.ReceiverOptions
  id: ReceiverOptions
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs
  children:
  - com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions()
  - com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
  - com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount()
  - com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
  - com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(java.lang.String)
  - com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount(int)
  - com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean)
  langs:
  - java
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions
  type: Class
  package: com.microsoft.azure.eventhubs
  summary: Represents various optional behaviors which can be turned on or off during the creation of a <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>.
  syntax:
    content: public final class ReceiverOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions()
  id: ReceiverOptions()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  langs:
  - java
  name: ReceiverOptions()
  nameWithType: ReceiverOptions.ReceiverOptions()
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions()
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions*
  type: Constructor
  package: com.microsoft.azure.eventhubs
  syntax:
    content: public ReceiverOptions()
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
  id: getIdentifier()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  langs:
  - java
  name: getIdentifier()
  nameWithType: ReceiverOptions.getIdentifier()
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier*
  type: Method
  package: com.microsoft.azure.eventhubs
  summary: Gets the identifier of the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>
  syntax:
    content: public String getIdentifier()
    return:
      type: java.lang.String
      description: identifier of the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>; null if nothing was set
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount()
  id: getPrefetchCount()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  langs:
  - java
  name: getPrefetchCount()
  nameWithType: ReceiverOptions.getPrefetchCount()
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount()
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount*
  type: Method
  package: com.microsoft.azure.eventhubs
  summary: Get Prefetch Count.
  syntax:
    content: public int getPrefetchCount()
    return:
      type: int
      description: the upper limit of events this receiver will actively receive regardless of whether a receive operation is pending.
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
  id: getReceiverRuntimeMetricEnabled()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  langs:
  - java
  name: getReceiverRuntimeMetricEnabled()
  nameWithType: ReceiverOptions.getReceiverRuntimeMetricEnabled()
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled*
  type: Method
  package: com.microsoft.azure.eventhubs
  summary: >-
    Knob to enable/disable runtime metric of the receiver. If this is set to true and is passed to <xref uid="com.microsoft.azure.eventhubs.EventHubClient.createReceiver*" data-throw-if-not-resolved="false">EventHubClient#createReceiver</xref>, after the first <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.receive(int)" data-throw-if-not-resolved="false">PartitionReceiver#receive(int)</xref> call, <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()" data-throw-if-not-resolved="false">PartitionReceiver#getRuntimeInformation()</xref> is populated.


    Enabling this knob will add 3 additional properties to all <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref>'s received on the <xref uid="com.microsoft.azure.eventhubs.EventHubClient.createReceiver*" data-throw-if-not-resolved="false">EventHubClient#createReceiver</xref>.
  syntax:
    content: public boolean getReceiverRuntimeMetricEnabled()
    return:
      type: boolean
      description: the <xref uid="boolean" data-throw-if-not-resolved="false">boolean</xref> indicating, whether, the runtime metric of the receiver was enabled
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(java.lang.String)
  id: setIdentifier(java.lang.String)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  langs:
  - java
  name: setIdentifier(String value)
  nameWithType: ReceiverOptions.setIdentifier(String value)
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(String value)
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier*
  type: Method
  package: com.microsoft.azure.eventhubs
  summary: >-
    Set an identifier to <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>.


    This identifier will be used by EventHubs service when reporting any errors across receivers, and is caused by this receiver. For example, when receiver quota limit is hit, while a user is trying to create New receiver, EventHubs service will throw <xref uid="com.microsoft.azure.eventhubs.QuotaExceededException" data-throw-if-not-resolved="false">QuotaExceededException</xref> and will include this identifier. So, its very critical to choose a value, which can uniquely identify the whereabouts of <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>.
  syntax:
    content: public void setIdentifier(String value)
    parameters:
    - id: value
      type: java.lang.String
      description: string to identify <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount(int)
  id: setPrefetchCount(int)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  langs:
  - java
  name: setPrefetchCount(int prefetchCount)
  nameWithType: ReceiverOptions.setPrefetchCount(int prefetchCount)
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount(int prefetchCount)
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount*
  type: Method
  package: com.microsoft.azure.eventhubs
  summary: >-
    Set the number of events that can be pre-fetched and cached at the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>.


    By default the value is 500
  syntax:
    content: public void setPrefetchCount(int prefetchCount)
    parameters:
    - id: prefetchCount
      type: int
      description: the number of events to pre-fetch. value must be between 1 and 2000.
  exceptions:
  - type: com.microsoft.azure.eventhubs.EventHubException
    description: if setting prefetchCount encounters error
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean)
  id: setReceiverRuntimeMetricEnabled(boolean)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.2
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  langs:
  - java
  name: setReceiverRuntimeMetricEnabled(boolean value)
  nameWithType: ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean value)
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean value)
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled*
  type: Method
  package: com.microsoft.azure.eventhubs
  summary: >-
    Knob to enable/disable runtime metric of the receiver. If this is set to true and is passed to <xref uid="com.microsoft.azure.eventhubs.EventHubClient.createReceiver*" data-throw-if-not-resolved="false">EventHubClient#createReceiver</xref>, after the first <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.receive(int)" data-throw-if-not-resolved="false">PartitionReceiver#receive(int)</xref> call, <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()" data-throw-if-not-resolved="false">PartitionReceiver#getRuntimeInformation()</xref> and <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver.getEventPosition()" data-throw-if-not-resolved="false">PartitionReceiver#getEventPosition()</xref> will be populated.


    This knob facilitates for an optimization where the Consumer of Event Hub has the end of stream details at the disposal, without making any additional <xref uid="com.microsoft.azure.eventhubs.EventHubClient.getPartitionRuntimeInformation(java.lang.String)" data-throw-if-not-resolved="false">EventHubClient#getPartitionRuntimeInformation(String)</xref> call to Event Hubs service. To achieve this, behind the scenes, along with the actual <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref>, that the Event Hubs <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref> delivers, it includes extra information about the Event Hubs partitions end of stream details on every event. In summary, enabling this knob will help users to save an extra call to Event Hubs service to fetch Event Hubs partition information and as a result, will add that information as header to each <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref> received by the client.
  syntax:
    content: public void setReceiverRuntimeMetricEnabled(boolean value)
    parameters:
    - id: value
      type: boolean
      description: the <xref uid="boolean" data-throw-if-not-resolved="false">boolean</xref> to indicate, whether, the runtime metric of the receiver should be enabled
references:
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions*
  name: ReceiverOptions
  nameWithType: ReceiverOptions.ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.ReceiverOptions
  package: com.microsoft.azure.eventhubs
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled*
  name: getReceiverRuntimeMetricEnabled
  nameWithType: ReceiverOptions.getReceiverRuntimeMetricEnabled
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled*
  name: setReceiverRuntimeMetricEnabled
  nameWithType: ReceiverOptions.setReceiverRuntimeMetricEnabled
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventhubs
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier*
  name: getIdentifier
  nameWithType: ReceiverOptions.getIdentifier
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier*
  name: setIdentifier
  nameWithType: ReceiverOptions.setIdentifier
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier
  package: com.microsoft.azure.eventhubs
- uid: int
  spec.java:
  - uid: int
    name: int
    fullName: int
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount*
  name: getPrefetchCount
  nameWithType: ReceiverOptions.getPrefetchCount
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getPrefetchCount
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.EventHubException
  name: EventHubException
  nameWithType: EventHubException
  fullName: com.microsoft.azure.eventhubs.EventHubException
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount*
  name: setPrefetchCount
  nameWithType: ReceiverOptions.setPrefetchCount
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setPrefetchCount
  package: com.microsoft.azure.eventhubs
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
