### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.ReceiverOptions
  id: ReceiverOptions
  parent: com.microsoft.azure.eventhubs
  children:
  - com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
  - com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
  - com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(final String)
  - com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean)
  href: com.microsoft.azure.eventhubs.ReceiverOptions.yml
  langs:
  - java
  name: ReceiverOptions
  nameWithType: ReceiverOptions
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions
  type: Class
  source:
    remote: &o0
      path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ReceiverOptions.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ReceiverOptions.java
    startLine: 11
  package: com.microsoft.azure.eventhubs
  summary: "<p>Represents various optional behaviors which can be turned on or off during the creation of a <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>. </p>"
  syntax:
    content: public class ReceiverOptions
  inheritance:
  - java.lang.Object
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
  id: getIdentifier()
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  href: com.microsoft.azure.eventhubs.ReceiverOptions.yml
  langs:
  - java
  name: getIdentifier()
  nameWithType: ReceiverOptions.getIdentifier()
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier()
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ReceiverOptions.java
    startLine: 61
  package: com.microsoft.azure.eventhubs
  summary: "<p>Gets the identifier of the <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref></p>\r\n<p></p>"
  syntax:
    content: public String getIdentifier()
    return:
      type: "26831127"
      description: <p>identifier of the <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref>; null if nothing was set </p>
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
  id: getReceiverRuntimeMetricEnabled()
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  href: com.microsoft.azure.eventhubs.ReceiverOptions.yml
  langs:
  - java
  name: getReceiverRuntimeMetricEnabled()
  nameWithType: ReceiverOptions.getReceiverRuntimeMetricEnabled()
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled()
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ReceiverOptions.java
    startLine: 32
  package: com.microsoft.azure.eventhubs
  summary: "<p>Knob to enable/disable runtime metric of the receiver. If this is set to true and is passed to <xref uid=\"com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String,final String,final EventPosition)\" data-throw-if-not-resolved=\"false\">EventHubClient#createReceiver</xref>, after the first <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int)\" data-throw-if-not-resolved=\"false\">PartitionReceiver#receive(int)</xref> call, <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()\" data-throw-if-not-resolved=\"false\">PartitionReceiver#getRuntimeInformation()</xref> is populated. </p>\r\n<p>Enabling this knob will add 3 additional properties to all <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>'s received on the <xref uid=\"com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String,final String,final EventPosition)\" data-throw-if-not-resolved=\"false\">EventHubClient#createReceiver</xref>.</p>\r\n<p></p>"
  syntax:
    content: public boolean getReceiverRuntimeMetricEnabled()
    return:
      type: 4fc6e284
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">boolean</xref> indicating, whether, the runtime metric of the receiver was enabled </p>
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(final String)
  id: setIdentifier(final String)
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  href: com.microsoft.azure.eventhubs.ReceiverOptions.yml
  langs:
  - java
  name: setIdentifier(final String value)
  nameWithType: ReceiverOptions.setIdentifier(final String value)
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier(final String value)
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ReceiverOptions.java
    startLine: 78
  package: com.microsoft.azure.eventhubs
  summary: "<p>Set an identifier to <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>. </p>\r\n<p>This identifier will be used by EventHubs service when reporting any errors across receivers, and is caused by this receiver. For example, when receiver quota limit is hit, while a user is trying to create New receiver, EventHubs service will throw <xref uid=\"com.microsoft.azure.eventhubs.QuotaExceededException\" data-throw-if-not-resolved=\"false\">QuotaExceededException</xref> and will include this identifier. So, its very critical to choose a value, which can uniquely identify the whereabouts of <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>. </p>\r\n<p></p>"
  syntax:
    content: public void setIdentifier(final String value)
    parameters:
    - id: value
      type: 3d93591e
      description: <p>string to identify <xref uid="com.microsoft.azure.eventhubs.PartitionReceiver" data-throw-if-not-resolved="false">PartitionReceiver</xref></p>
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean)
  id: setReceiverRuntimeMetricEnabled(boolean)
  parent: com.microsoft.azure.eventhubs.ReceiverOptions
  href: com.microsoft.azure.eventhubs.ReceiverOptions.yml
  langs:
  - java
  name: setReceiverRuntimeMetricEnabled(boolean value)
  nameWithType: ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean value)
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean value)
  overload: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled*
  type: Method
  source:
    remote: *o0
    path: azure-eventhubs/src/main/java/com/microsoft/azure/eventhubs/ReceiverOptions.java
    startLine: 51
  package: com.microsoft.azure.eventhubs
  summary: "<p>Knob to enable/disable runtime metric of the receiver. If this is set to true and is passed to <xref uid=\"com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String,final String,final EventPosition)\" data-throw-if-not-resolved=\"false\">EventHubClient#createReceiver</xref>, after the first <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int)\" data-throw-if-not-resolved=\"false\">PartitionReceiver#receive(int)</xref> call, <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()\" data-throw-if-not-resolved=\"false\">PartitionReceiver#getRuntimeInformation()</xref> is populated. </p>\r\n<p>This knob facilitates for an optimization where the Consumer of Event Hub has the end of stream details at the disposal, without making any additional <xref uid=\"com.microsoft.azure.eventhubs.EventHubClient.getPartitionRuntimeInformation(String)\" data-throw-if-not-resolved=\"false\">EventHubClient#getPartitionRuntimeInformation(String)</xref> call to Event Hubs service. To achieve this, behind the scenes, along with the actual <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>, that the Event Hubs <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref> delivers, it includes extra information about the Event Hubs partitions end of stream details on every event. In summary, enabling this knob will help users to save an extra call to Event Hubs service to fetch Event Hubs partition information and as a result, will add that information as header to each <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> received by the client.</p>\r\n<p></p>"
  syntax:
    content: public void setReceiverRuntimeMetricEnabled(boolean value)
    parameters:
    - id: value
      type: 4fc6e284
      description: <p>the <xref uid="" data-throw-if-not-resolved="false">boolean</xref> to indicate, whether, the runtime metric of the receiver should be enabled </p>
references:
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled*
  name: getReceiverRuntimeMetricEnabled
  nameWithType: ReceiverOptions.getReceiverRuntimeMetricEnabled
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled*
  name: setReceiverRuntimeMetricEnabled
  nameWithType: ReceiverOptions.setReceiverRuntimeMetricEnabled
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled
  package: com.microsoft.azure.eventhubs
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier*
  name: getIdentifier
  nameWithType: ReceiverOptions.getIdentifier
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.getIdentifier
  package: com.microsoft.azure.eventhubs
- uid: 3d93591e
  spec.java:
  - name: final String
    fullName: final String
- uid: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier*
  name: setIdentifier
  nameWithType: ReceiverOptions.setIdentifier
  fullName: com.microsoft.azure.eventhubs.ReceiverOptions.setIdentifier
  package: com.microsoft.azure.eventhubs
- uid: com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String,final String,final EventPosition)
  parent: com.microsoft.azure.eventhubs.EventHubClient
  href: com.microsoft.azure.eventhubs.EventHubClient.yml
  name: createReceiver(final String consumerGroupName, final String partitionId, final EventPosition eventPosition)
  nameWithType: EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final EventPosition eventPosition)
  fullName: com.microsoft.azure.eventhubs.EventHubClient.createReceiver(final String consumerGroupName, final String partitionId, final EventPosition eventPosition)
  type: Method
  summary: "<p>Create the EventHub receiver with given partition id and start receiving from the specified starting offset. The receiver is created for a specific EventHub Partition from the specific consumer group.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<PartitionReceiver> createReceiver(final String consumerGroupName, final String partitionId, final EventPosition eventPosition)
    parameters:
    - id: consumerGroupName
      type: 3d93591e
      description: <p>the consumer group name that this receiver should be grouped under. </p>
    - id: partitionId
      type: 3d93591e
      description: <p>the partition Id that the receiver belongs to. All data received will be from this partition only. </p>
    - id: eventPosition
      type: 93de0ef9com.microsoft.azure.eventhubs.EventPosition
      description: <p>the position to start receiving the events from. See <xref uid="com.microsoft.azure.eventhubs.EventPosition" data-throw-if-not-resolved="false">EventPosition</xref></p>
    return:
      type: 9cdf14d0com.microsoft.azure.eventhubs.PartitionReceivera08ddfce
      description: <p>a CompletableFuture that would result in a PartitionReceiver instance when it is completed. </p>
- uid: com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int)
  parent: com.microsoft.azure.eventhubs.PartitionReceiver
  href: com.microsoft.azure.eventhubs.PartitionReceiver.yml
  name: receive(final int maxEventCount)
  nameWithType: PartitionReceiver.receive(final int maxEventCount)
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver.receive(final int maxEventCount)
  type: Method
  summary: "<p>Receive a batch of <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>'s from an EventHub partition </p>\r\n<p>Sample code (sample uses sync version of the api but concept are identical): <pre>\r\nEventHubClient client = EventHubClient.createSync(\"__connection__\");\r\nPartitionReceiver receiver = client.createPartitionReceiverSync(\"ConsumerGroup1\", \"1\");\r\nIterable{&lt;}EventData{&gt;} receivedEvents = receiver.receiveSync();</pre></p>\r\n<p>\r\n  <pre>while (true)\r\n{\r\n    int batchSize = 0;\r\n    if (receivedEvents != null)\r\n    {\r\n        for(EventData receivedEvent: receivedEvents)\r\n        {\r\n            System.out.println(String.format(\"Message Payload: %s\", new String(receivedEvent.getBytes(), Charset.defaultCharset())));\r\n            System.out.println(String.format(\"Offset: %s, SeqNo: %s, EnqueueTime: %s\",\r\n                receivedEvent.getSystemProperties().getOffset(),\r\n                receivedEvent.getSystemProperties().getSequenceNumber(),\r\n                receivedEvent.getSystemProperties().getEnqueuedTime()));\r\n            batchSize++;\r\n        }\r\n    }</pre>\r\n</p>\r\n<p>\r\n  <pre>    System.out.println(String.format(\"ReceivedBatch Size: %s\", batchSize));\r\n    receivedEvents = receiver.receiveSync();\r\n}\r\n</pre>\r\n</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Iterable<EventData>> receive(final int maxEventCount)
    parameters:
    - id: maxEventCount
      type: cd225469
      description: <p>maximum number of <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref>'s that this call should return </p>
    return:
      type: 5ae8a14ccom.microsoft.azure.eventhubs.EventDatae7daa122
      description: <p>A completableFuture that will yield a batch of <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref>'s from the partition on which this receiver is created. Returns 'null' if no <xref uid="com.microsoft.azure.eventhubs.EventData" data-throw-if-not-resolved="false">EventData</xref> is present. </p>
- uid: com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()
  parent: com.microsoft.azure.eventhubs.PartitionReceiver
  href: com.microsoft.azure.eventhubs.PartitionReceiver.yml
  name: getRuntimeInformation()
  nameWithType: PartitionReceiver.getRuntimeInformation()
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver.getRuntimeInformation()
  type: Method
  summary: "<p>Gets the temporal <xref uid=\"com.microsoft.azure.eventhubs.ReceiverRuntimeInformation\" data-throw-if-not-resolved=\"false\">ReceiverRuntimeInformation</xref> for this EventHub partition. In general, this information is a representation of, where this <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>'s end of stream is, at the time <xref uid=\"com.microsoft.azure.eventhubs.ReceiverRuntimeInformation.getRetrievalTime()\" data-throw-if-not-resolved=\"false\">ReceiverRuntimeInformation#getRetrievalTime()</xref>. </p>\r\n<p>This value will not be populated, unless the knob <xref uid=\"com.microsoft.azure.eventhubs.ReceiverOptions.setReceiverRuntimeMetricEnabled(boolean)\" data-throw-if-not-resolved=\"false\">ReceiverOptions#setReceiverRuntimeMetricEnabled(boolean)</xref> is set. This value will be refreshed every time an <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> is consumed from <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>. For ex: if no events have been consumed, then this value is not populated.</p>\r\n<p></p>"
  syntax:
    content: public ReceiverRuntimeInformation getRuntimeInformation()
    return:
      type: com.microsoft.azure.eventhubs.ReceiverRuntimeInformation
      description: <p>receiver runtime information </p>
- uid: com.microsoft.azure.eventhubs.EventData
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.EventData.yml
  name: EventData
  nameWithType: EventData
  fullName: com.microsoft.azure.eventhubs.EventData
  type: Interface
  summary: "<p>The data structure encapsulating the Event being sent-to and received-from EventHubs. Each EventHubs partition can be visualized as a Stream of <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>\r\n<p>Serializing a received <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> with AMQP sections other than ApplicationProperties (with primitive java types) and Data section is not supported. </p>\r\n<p>Here's how AMQP message sections map to <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. Here's the reference used for AMQP 1.0 specification: <a href=\"http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf\">http://docs.oasis-open.org/amqp/core/v1.0/os/amqp-core-complete-v1.0-os.pdf</a><pre>\r\ni.   <xref uid=\"com.microsoft.azure.eventhubs.EventData.getProperties()\" data-throw-if-not-resolved=\"false\">getProperties()</xref> - AMQPMessage.ApplicationProperties section\r\nii.  <xref uid=\"com.microsoft.azure.eventhubs.EventData.getBytes()\" data-throw-if-not-resolved=\"false\">getBytes()</xref> - if AMQPMessage.Body has Data section\r\niii. <xref uid=\"com.microsoft.azure.eventhubs.EventData.getObject()\" data-throw-if-not-resolved=\"false\">getObject()</xref> - if AMQPMessage.Body has AMQPValue or AMQPSequence sections\r\n</pre> While using client libraries released by Microsoft Azure EventHubs, sections (i) and (ii) alone are sufficient. Section (iii) is used for advanced scenarios, where the sending application uses third-party AMQP library to send the message to EventHubs and the receiving application uses this client library to receive <xref uid=\"com.microsoft.azure.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref>. </p>"
  syntax:
    content: public interface EventData
- uid: com.microsoft.azure.eventhubs.EventHubClient.getPartitionRuntimeInformation(String)
  parent: com.microsoft.azure.eventhubs.EventHubClient
  href: com.microsoft.azure.eventhubs.EventHubClient.yml
  name: getPartitionRuntimeInformation(String partitionId)
  nameWithType: EventHubClient.getPartitionRuntimeInformation(String partitionId)
  fullName: com.microsoft.azure.eventhubs.EventHubClient.getPartitionRuntimeInformation(String partitionId)
  type: Method
  summary: "<p>Retrieves dynamic information about a partition of an event hub (see <xref uid=\"com.microsoft.azure.eventhubs.PartitionRuntimeInformation\" data-throw-if-not-resolved=\"false\">PartitionRuntimeInformation</xref> for details. Retries until it reaches the operation timeout, then either rethrows the last error if available or returns null to indicate timeout.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<PartitionRuntimeInformation> getPartitionRuntimeInformation(String partitionId)
    parameters:
    - id: partitionId
      type: "26831127"
      description: <p>Partition to get information about. Must be one of the partition ids returned by <xref uid="com.microsoft.azure.eventhubs.EventHubClient.getRuntimeInformation()" data-throw-if-not-resolved="false">getRuntimeInformation</xref>. </p>
    return:
      type: 9cdf14d0com.microsoft.azure.eventhubs.PartitionRuntimeInformationa08ddfce
      description: <p>CompletableFuture which returns an PartitionRuntimeInformation on success, or null on timeout. </p>
- uid: com.microsoft.azure.eventhubs.PartitionReceiver
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.PartitionReceiver.yml
  name: PartitionReceiver
  nameWithType: PartitionReceiver
  fullName: com.microsoft.azure.eventhubs.PartitionReceiver
  type: Interface
  summary: "<p>This is a logical representation of receiving from a EventHub partition. </p>\r\n<p>A <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref> is tied to a ConsumerGroup + EventHub Partition combination. <ul><li><p>If an epoch based <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref> (i.e., PartitionReceiver.getEpoch != 0) is created, EventHubs service will guarantee only 1 active receiver exists per ConsumerGroup + Partition combo. This is the recommended approach to create a <xref uid=\"com.microsoft.azure.eventhubs.PartitionReceiver\" data-throw-if-not-resolved=\"false\">PartitionReceiver</xref>. </p></li><li><p>Multiple receivers per ConsumerGroup + Partition combo can be created using non-epoch receivers. </p></li></ul></p>\r\n<p></p>"
  syntax:
    content: public interface PartitionReceiver
- uid: com.microsoft.azure.eventhubs.QuotaExceededException
  parent: com.microsoft.azure.eventhubs
  href: com.microsoft.azure.eventhubs.QuotaExceededException.yml
  name: QuotaExceededException
  nameWithType: QuotaExceededException
  fullName: com.microsoft.azure.eventhubs.QuotaExceededException
  type: Class
  syntax:
    content: public class QuotaExceededException extends EventHubException
