### YamlMime:JavaMember
uid: "com.azure.cosmos.models.CosmosQueryRequestOptions.setConsistencyLevel*"
fullName: "com.azure.cosmos.models.CosmosQueryRequestOptions.setConsistencyLevel"
name: "setConsistencyLevel"
nameWithType: "CosmosQueryRequestOptions.setConsistencyLevel"
members:
- uid: "com.azure.cosmos.models.CosmosQueryRequestOptions.setConsistencyLevel(com.azure.cosmos.ConsistencyLevel)"
  fullName: "com.azure.cosmos.models.CosmosQueryRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  name: "setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  nameWithType: "CosmosQueryRequestOptions.setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  summary: "Sets the consistency level required for the request. The effective consistency level can only be reduce for read/query requests. So when the Account's default consistency level is for example Session you can specify on a request-by-request level for individual requests that Eventual consistency is sufficient - which could reduce the latency and RU charges for this request but will not guarantee session consistency (read-your-own-write) anymore"
  parameters:
  - description: "the consistency level."
    name: "consistencyLevel"
    type: "<xref href=\"com.azure.cosmos.ConsistencyLevel?alt=com.azure.cosmos.ConsistencyLevel&text=ConsistencyLevel\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public CosmosQueryRequestOptions setConsistencyLevel(ConsistencyLevel consistencyLevel)"
  returns:
    description: "the CosmosItemRequestOptions."
    type: "<xref href=\"com.azure.cosmos.models.CosmosQueryRequestOptions?alt=com.azure.cosmos.models.CosmosQueryRequestOptions&text=CosmosQueryRequestOptions\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.cosmos.models"
artifact: com.azure:azure-cosmos:4.11.0
