### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  id: TimeoutTracker
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl
  children:
  - com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker(java.time.Duration,boolean)
  - com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker(java.time.Duration,boolean,java.lang.String)
  - com.microsoft.azure.eventhubs.impl.TimeoutTracker.create(java.time.Duration)
  - com.microsoft.azure.eventhubs.impl.TimeoutTracker.create(java.time.Duration,java.lang.String)
  - com.microsoft.azure.eventhubs.impl.TimeoutTracker.elapsed()
  - com.microsoft.azure.eventhubs.impl.TimeoutTracker.getContext()
  - com.microsoft.azure.eventhubs.impl.TimeoutTracker.remaining()
  langs:
  - java
  name: TimeoutTracker
  nameWithType: TimeoutTracker
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  type: Class
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public class TimeoutTracker
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker(java.time.Duration,boolean)
  id: TimeoutTracker(java.time.Duration,boolean)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  langs:
  - java
  name: TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
  nameWithType: TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
  overload: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker*
  type: Constructor
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public TimeoutTracker(Duration timeout, boolean startTrackingTimeout)
    parameters:
    - id: timeout
      type: java.time.Duration
      description: original operationTimeout
    - id: startTrackingTimeout
      type: boolean
      description: whether/not to start the timeout tracking - right now. if not started now, timer tracking will start upon the first call to <xref uid="com.microsoft.azure.eventhubs.impl.TimeoutTracker.elapsed()" data-throw-if-not-resolved="false">TimeoutTracker#elapsed()</xref>/<xref uid="com.microsoft.azure.eventhubs.impl.TimeoutTracker.remaining()" data-throw-if-not-resolved="false">TimeoutTracker#remaining()</xref>
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker(java.time.Duration,boolean,java.lang.String)
  id: TimeoutTracker(java.time.Duration,boolean,java.lang.String)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  langs:
  - java
  name: TimeoutTracker(Duration timeout, boolean startTrackingTimeout, String context)
  nameWithType: TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout, String context)
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker(Duration timeout, boolean startTrackingTimeout, String context)
  overload: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker*
  type: Constructor
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public TimeoutTracker(Duration timeout, boolean startTrackingTimeout, String context)
    parameters:
    - id: timeout
      type: java.time.Duration
    - id: startTrackingTimeout
      type: boolean
    - id: context
      type: java.lang.String
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create(java.time.Duration)
  id: create(java.time.Duration)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  langs:
  - java
  name: create(Duration timeout)
  nameWithType: TimeoutTracker.create(Duration timeout)
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create(Duration timeout)
  overload: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public static TimeoutTracker create(Duration timeout)
    parameters:
    - id: timeout
      type: java.time.Duration
    return:
      type: com.microsoft.azure.eventhubs.impl.TimeoutTracker
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create(java.time.Duration,java.lang.String)
  id: create(java.time.Duration,java.lang.String)
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  langs:
  - java
  name: create(Duration timeout, String context)
  nameWithType: TimeoutTracker.create(Duration timeout, String context)
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create(Duration timeout, String context)
  overload: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public static TimeoutTracker create(Duration timeout, String context)
    parameters:
    - id: timeout
      type: java.time.Duration
    - id: context
      type: java.lang.String
    return:
      type: com.microsoft.azure.eventhubs.impl.TimeoutTracker
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.elapsed()
  id: elapsed()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  langs:
  - java
  name: elapsed()
  nameWithType: TimeoutTracker.elapsed()
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.elapsed()
  overload: com.microsoft.azure.eventhubs.impl.TimeoutTracker.elapsed*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public Duration elapsed()
    return:
      type: java.time.Duration
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.getContext()
  id: getContext()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  langs:
  - java
  name: getContext()
  nameWithType: TimeoutTracker.getContext()
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.getContext()
  overload: com.microsoft.azure.eventhubs.impl.TimeoutTracker.getContext*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public String getContext()
    return:
      type: java.lang.String
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.remaining()
  id: remaining()
  artifact: com.microsoft.azure:azure-eventhubs:3.2.1
  parent: com.microsoft.azure.eventhubs.impl.TimeoutTracker
  langs:
  - java
  name: remaining()
  nameWithType: TimeoutTracker.remaining()
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.remaining()
  overload: com.microsoft.azure.eventhubs.impl.TimeoutTracker.remaining*
  type: Method
  package: com.microsoft.azure.eventhubs.impl
  syntax:
    content: public Duration remaining()
    return:
      type: java.time.Duration
references:
- uid: java.time.Duration
  spec.java:
  - uid: java.time.Duration
    name: Duration
    fullName: java.time.Duration
- uid: boolean
  spec.java:
  - uid: boolean
    name: boolean
    fullName: boolean
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker*
  name: TimeoutTracker
  nameWithType: TimeoutTracker.TimeoutTracker
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.TimeoutTracker
  package: com.microsoft.azure.eventhubs.impl
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create*
  name: create
  nameWithType: TimeoutTracker.create
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.create
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.remaining*
  name: remaining
  nameWithType: TimeoutTracker.remaining
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.remaining
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.elapsed*
  name: elapsed
  nameWithType: TimeoutTracker.elapsed
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.elapsed
  package: com.microsoft.azure.eventhubs.impl
- uid: com.microsoft.azure.eventhubs.impl.TimeoutTracker.getContext*
  name: getContext
  nameWithType: TimeoutTracker.getContext
  fullName: com.microsoft.azure.eventhubs.impl.TimeoutTracker.getContext
  package: com.microsoft.azure.eventhubs.impl
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
