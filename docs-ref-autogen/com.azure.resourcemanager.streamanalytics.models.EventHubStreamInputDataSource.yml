### YamlMime:JavaType
uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource"
fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource"
name: "EventHubStreamInputDataSource"
nameWithType: "EventHubStreamInputDataSource"
summary: "Describes an Event Hub input data source that contains stream data."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource&text=StreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.fromJson(com.azure.json.JsonReader)?alt=com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.fromJson&text=fromJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.toJson(com.azure.json.JsonWriter)?alt=com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.toJson&text=toJson\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.type()?alt=com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.type&text=type\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.validate()?alt=com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class **EventHubStreamInputDataSource**</br> extends <xref href=\"com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource&text=StreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.EventHubStreamInputDataSource()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.EventHubStreamInputDataSource()"
  name: "EventHubStreamInputDataSource()"
  nameWithType: "EventHubStreamInputDataSource.EventHubStreamInputDataSource()"
  summary: "Creates an instance of Event<wbr>Hub<wbr>Stream<wbr>Input<wbr>Data<wbr>Source class."
  syntax: "public EventHubStreamInputDataSource()"
  desc: "Creates an instance of EventHubStreamInputDataSource class."
methods:
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.authenticationMode()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.authenticationMode()"
  name: "authenticationMode()"
  nameWithType: "EventHubStreamInputDataSource.authenticationMode()"
  summary: "Get the authentication<wbr>Mode property: Authentication Mode."
  syntax: "public AuthenticationMode authenticationMode()"
  desc: "Get the authenticationMode property: Authentication Mode."
  returns:
    description: "the authenticationMode value."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.AuthenticationMode?alt=com.azure.resourcemanager.streamanalytics.models.AuthenticationMode&text=AuthenticationMode\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.consumerGroupName()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.consumerGroupName()"
  name: "consumerGroupName()"
  nameWithType: "EventHubStreamInputDataSource.consumerGroupName()"
  summary: "Get the consumer<wbr>Group<wbr>Name property: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub."
  syntax: "public String consumerGroupName()"
  desc: "Get the consumerGroupName property: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hubâ€™s default consumer group."
  returns:
    description: "the consumerGroupName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.eventHubName()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.eventHubName()"
  name: "eventHubName()"
  nameWithType: "EventHubStreamInputDataSource.eventHubName()"
  summary: "Get the event<wbr>Hub<wbr>Name property: The name of the Event Hub."
  syntax: "public String eventHubName()"
  desc: "Get the eventHubName property: The name of the Event Hub. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the eventHubName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "EventHubStreamInputDataSource.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Event<wbr>Hub<wbr>Stream<wbr>Input<wbr>Data<wbr>Source from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static EventHubStreamInputDataSource fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the EventHubStreamInputDataSource."
    type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  desc: "Reads an instance of EventHubStreamInputDataSource from the JsonReader."
  returns:
    description: "An instance of EventHubStreamInputDataSource if the JsonReader was pointing to an instance of it, or null\n if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource&text=EventHubStreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.serviceBusNamespace()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.serviceBusNamespace()"
  name: "serviceBusNamespace()"
  nameWithType: "EventHubStreamInputDataSource.serviceBusNamespace()"
  summary: "Get the service<wbr>Bus<wbr>Namespace property: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc."
  syntax: "public String serviceBusNamespace()"
  desc: "Get the serviceBusNamespace property: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the serviceBusNamespace value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.sharedAccessPolicyKey()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.sharedAccessPolicyKey()"
  name: "sharedAccessPolicyKey()"
  nameWithType: "EventHubStreamInputDataSource.sharedAccessPolicyKey()"
  summary: "Get the shared<wbr>Access<wbr>Policy<wbr>Key property: The shared access policy key for the specified shared access policy."
  syntax: "public String sharedAccessPolicyKey()"
  desc: "Get the sharedAccessPolicyKey property: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the sharedAccessPolicyKey value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.sharedAccessPolicyName()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.sharedAccessPolicyName()"
  name: "sharedAccessPolicyName()"
  nameWithType: "EventHubStreamInputDataSource.sharedAccessPolicyName()"
  summary: "Get the shared<wbr>Access<wbr>Policy<wbr>Name property: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc."
  syntax: "public String sharedAccessPolicyName()"
  desc: "Get the sharedAccessPolicyName property: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the sharedAccessPolicyName value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "EventHubStreamInputDataSource.toJson(JsonWriter jsonWriter)"
  overridden: "com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.toJson(com.azure.json.JsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<xref href=\"java.io.IOException?alt=java.io.IOException&text=IOException\" data-throw-if-not-resolved=\"False\" />"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.type()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.type()"
  name: "type()"
  nameWithType: "EventHubStreamInputDataSource.type()"
  summary: "Get the type property: Indicates the type of input data source containing stream data."
  overridden: "com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.type()"
  syntax: "public String type()"
  desc: "Get the type property: Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.validate()"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.validate()"
  name: "validate()"
  nameWithType: "EventHubStreamInputDataSource.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.streamanalytics.models.StreamInputDataSource.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withAuthenticationMode(com.azure.resourcemanager.streamanalytics.models.AuthenticationMode)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withAuthenticationMode(AuthenticationMode authenticationMode)"
  name: "withAuthenticationMode(AuthenticationMode authenticationMode)"
  nameWithType: "EventHubStreamInputDataSource.withAuthenticationMode(AuthenticationMode authenticationMode)"
  summary: "Set the authentication<wbr>Mode property: Authentication Mode."
  parameters:
  - description: "the authenticationMode value to set."
    name: "authenticationMode"
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.AuthenticationMode?alt=com.azure.resourcemanager.streamanalytics.models.AuthenticationMode&text=AuthenticationMode\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHubStreamInputDataSource withAuthenticationMode(AuthenticationMode authenticationMode)"
  desc: "Set the authenticationMode property: Authentication Mode."
  returns:
    description: "the EventHubStreamInputDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource&text=EventHubStreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withConsumerGroupName(java.lang.String)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withConsumerGroupName(String consumerGroupName)"
  name: "withConsumerGroupName(String consumerGroupName)"
  nameWithType: "EventHubStreamInputDataSource.withConsumerGroupName(String consumerGroupName)"
  summary: "Set the consumer<wbr>Group<wbr>Name property: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub."
  parameters:
  - description: "the consumerGroupName value to set."
    name: "consumerGroupName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHubStreamInputDataSource withConsumerGroupName(String consumerGroupName)"
  desc: "Set the consumerGroupName property: The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hubâ€™s default consumer group."
  returns:
    description: "the EventHubStreamInputDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource&text=EventHubStreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withEventHubName(java.lang.String)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withEventHubName(String eventHubName)"
  name: "withEventHubName(String eventHubName)"
  nameWithType: "EventHubStreamInputDataSource.withEventHubName(String eventHubName)"
  summary: "Set the event<wbr>Hub<wbr>Name property: The name of the Event Hub."
  parameters:
  - description: "the eventHubName value to set."
    name: "eventHubName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHubStreamInputDataSource withEventHubName(String eventHubName)"
  desc: "Set the eventHubName property: The name of the Event Hub. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the EventHubStreamInputDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource&text=EventHubStreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withServiceBusNamespace(java.lang.String)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withServiceBusNamespace(String serviceBusNamespace)"
  name: "withServiceBusNamespace(String serviceBusNamespace)"
  nameWithType: "EventHubStreamInputDataSource.withServiceBusNamespace(String serviceBusNamespace)"
  summary: "Set the service<wbr>Bus<wbr>Namespace property: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc."
  parameters:
  - description: "the serviceBusNamespace value to set."
    name: "serviceBusNamespace"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHubStreamInputDataSource withServiceBusNamespace(String serviceBusNamespace)"
  desc: "Set the serviceBusNamespace property: The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the EventHubStreamInputDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource&text=EventHubStreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withSharedAccessPolicyKey(java.lang.String)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withSharedAccessPolicyKey(String sharedAccessPolicyKey)"
  name: "withSharedAccessPolicyKey(String sharedAccessPolicyKey)"
  nameWithType: "EventHubStreamInputDataSource.withSharedAccessPolicyKey(String sharedAccessPolicyKey)"
  summary: "Set the shared<wbr>Access<wbr>Policy<wbr>Key property: The shared access policy key for the specified shared access policy."
  parameters:
  - description: "the sharedAccessPolicyKey value to set."
    name: "sharedAccessPolicyKey"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHubStreamInputDataSource withSharedAccessPolicyKey(String sharedAccessPolicyKey)"
  desc: "Set the sharedAccessPolicyKey property: The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the EventHubStreamInputDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource&text=EventHubStreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withSharedAccessPolicyName(java.lang.String)"
  fullName: "com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource.withSharedAccessPolicyName(String sharedAccessPolicyName)"
  name: "withSharedAccessPolicyName(String sharedAccessPolicyName)"
  nameWithType: "EventHubStreamInputDataSource.withSharedAccessPolicyName(String sharedAccessPolicyName)"
  summary: "Set the shared<wbr>Access<wbr>Policy<wbr>Name property: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc."
  parameters:
  - description: "the sharedAccessPolicyName value to set."
    name: "sharedAccessPolicyName"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EventHubStreamInputDataSource withSharedAccessPolicyName(String sharedAccessPolicyName)"
  desc: "Set the sharedAccessPolicyName property: The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests."
  returns:
    description: "the EventHubStreamInputDataSource object itself."
    type: "<xref href=\"com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource?alt=com.azure.resourcemanager.streamanalytics.models.EventHubStreamInputDataSource&text=EventHubStreamInputDataSource\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Describes an Event Hub input data source that contains stream data."
metadata: {}
package: "com.azure.resourcemanager.streamanalytics.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-streamanalytics:1.0.0
