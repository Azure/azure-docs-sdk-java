### YamlMime:JavaType
uid: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache"
fullName: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache"
name: "TokenCredentialCache"
nameWithType: "TokenCredentialCache"
summary: "This class generates AAD authentication tokens from a Token<wbr>Credential but caches previous tokens when they aren't near expiry."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class TokenCredentialCache"
constructors:
- uid: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.TokenCredentialCache(com.azure.core.credential.TokenCredential)"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.TokenCredentialCache(TokenCredential tokenCredential)"
  name: "TokenCredentialCache(TokenCredential tokenCredential)"
  nameWithType: "TokenCredentialCache.TokenCredentialCache(TokenCredential tokenCredential)"
  summary: "Construct a new Token<wbr>Credential<wbr>Cache instance."
  parameters:
  - description: "The tokenCredential instance that this cache will use to generate new tokens."
    name: "tokenCredential"
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TokenCredentialCache(TokenCredential tokenCredential)"
  desc: "Construct a new TokenCredentialCache instance."
fields:
- uid: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.BEARER_TOKEN_PREFIX"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.BEARER_TOKEN_PREFIX"
  name: "BEARER_TOKEN_PREFIX"
  nameWithType: "TokenCredentialCache.BEARER_TOKEN_PREFIX"
  modifiers:
  - "static"
  - "final"
  field:
    value: "Bearer "
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static final String BEARER_TOKEN_PREFIX"
- uid: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.IOTHUB_PUBLIC_SCOPE"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.IOTHUB_PUBLIC_SCOPE"
  name: "IOTHUB_PUBLIC_SCOPE"
  nameWithType: "TokenCredentialCache.IOTHUB_PUBLIC_SCOPE"
  modifiers:
  - "static"
  - "final"
  field:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public static final String[] IOTHUB_PUBLIC_SCOPE"
methods:
- uid: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getAccessToken()"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getAccessToken()"
  name: "getAccessToken()"
  nameWithType: "TokenCredentialCache.getAccessToken()"
  summary: "Get a valid AAD authentication token."
  syntax: "public AccessToken getAccessToken()"
  desc: "Get a valid AAD authentication token. This may be the same as a previously returned token if it is not near expiration time yet. If a token is less than or equal to 9 minutes away from expiring or is expired already, the token will be renewed. Otherwise, a cached token will be returned."
  returns:
    description: "a valid AAD authentication token."
    type: "<xref href=\"com.azure.core.credential.AccessToken?alt=com.azure.core.credential.AccessToken&text=AccessToken\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenCredential()"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenCredential()"
  name: "getTokenCredential()"
  nameWithType: "TokenCredentialCache.getTokenCredential()"
  syntax: "public TokenCredential getTokenCredential()"
  returns:
    description: "the TokenCredential instance that was set in the constructor."
    type: "<xref href=\"com.azure.core.credential.TokenCredential?alt=com.azure.core.credential.TokenCredential&text=TokenCredential\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenString()"
  fullName: "com.microsoft.azure.sdk.iot.service.auth.TokenCredentialCache.getTokenString()"
  name: "getTokenString()"
  nameWithType: "TokenCredentialCache.getTokenString()"
  summary: "Get the access token string, including the Bearer prefix."
  syntax: "public String getTokenString()"
  desc: "Get the access token string, including the Bearer prefix."
  returns:
    description: "the access token string, including the Bearer prefix."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "This class generates AAD authentication tokens from a TokenCredential but caches previous tokens when they aren't near expiry."
metadata: {}
package: "com.microsoft.azure.sdk.iot.service.auth"
artifact: com.microsoft.azure.sdk.iot:iot-service-client:1.30.0
