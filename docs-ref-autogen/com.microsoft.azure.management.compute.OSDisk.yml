### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.compute.OSDisk.caching()
  name: caching()
  nameWithType: OSDisk.caching()
  returns:
    description: <p>the caching value </p>
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the caching value.</p>

    <p></p>
  syntax: public CachingTypes caching()
  uid: com.microsoft.azure.management.compute.OSDisk.caching()
- fullName: com.microsoft.azure.management.compute.OSDisk.createOption()
  name: createOption()
  nameWithType: OSDisk.createOption()
  returns:
    description: <p>the createOption value </p>
    type: <xref href="com.microsoft.azure.management.compute.DiskCreateOptionTypes?alt=com.microsoft.azure.management.compute.DiskCreateOptionTypes&text=DiskCreateOptionTypes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the createOption value.</p>

    <p></p>
  syntax: public DiskCreateOptionTypes createOption()
  uid: com.microsoft.azure.management.compute.OSDisk.createOption()
- fullName: com.microsoft.azure.management.compute.OSDisk.diskSizeGB()
  name: diskSizeGB()
  nameWithType: OSDisk.diskSizeGB()
  returns:
    description: <p>the diskSizeGB value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the diskSizeGB value.</p>

    <p></p>
  syntax: public Integer diskSizeGB()
  uid: com.microsoft.azure.management.compute.OSDisk.diskSizeGB()
- fullName: com.microsoft.azure.management.compute.OSDisk.encryptionSettings()
  name: encryptionSettings()
  nameWithType: OSDisk.encryptionSettings()
  returns:
    description: <p>the encryptionSettings value </p>
    type: <xref href="com.microsoft.azure.management.compute.DiskEncryptionSettings?alt=com.microsoft.azure.management.compute.DiskEncryptionSettings&text=DiskEncryptionSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the encryptionSettings value.</p>

    <p></p>
  syntax: public DiskEncryptionSettings encryptionSettings()
  uid: com.microsoft.azure.management.compute.OSDisk.encryptionSettings()
- fullName: com.microsoft.azure.management.compute.OSDisk.image()
  name: image()
  nameWithType: OSDisk.image()
  returns:
    description: <p>the image value </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualHardDisk?alt=com.microsoft.azure.management.compute.VirtualHardDisk&text=VirtualHardDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the image value.</p>

    <p></p>
  syntax: public VirtualHardDisk image()
  uid: com.microsoft.azure.management.compute.OSDisk.image()
- fullName: com.microsoft.azure.management.compute.OSDisk.managedDisk()
  name: managedDisk()
  nameWithType: OSDisk.managedDisk()
  returns:
    description: <p>the managedDisk value </p>
    type: <xref href="ManagedDiskParametersInner?alt=ManagedDiskParametersInner&text=ManagedDiskParametersInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the managedDisk value.</p>

    <p></p>
  syntax: public ManagedDiskParametersInner managedDisk()
  uid: com.microsoft.azure.management.compute.OSDisk.managedDisk()
- fullName: com.microsoft.azure.management.compute.OSDisk.name()
  name: name()
  nameWithType: OSDisk.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.compute.OSDisk.name()
- fullName: com.microsoft.azure.management.compute.OSDisk.osType()
  name: osType()
  nameWithType: OSDisk.osType()
  returns:
    description: <p>the osType value </p>
    type: <xref href="com.microsoft.azure.management.compute.OperatingSystemTypes?alt=com.microsoft.azure.management.compute.OperatingSystemTypes&text=OperatingSystemTypes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the osType value.</p>

    <p></p>
  syntax: public OperatingSystemTypes osType()
  uid: com.microsoft.azure.management.compute.OSDisk.osType()
- fullName: com.microsoft.azure.management.compute.OSDisk.vhd()
  name: vhd()
  nameWithType: OSDisk.vhd()
  returns:
    description: <p>the vhd value </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualHardDisk?alt=com.microsoft.azure.management.compute.VirtualHardDisk&text=VirtualHardDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the vhd value.</p>

    <p></p>
  syntax: public VirtualHardDisk vhd()
  uid: com.microsoft.azure.management.compute.OSDisk.vhd()
- fullName: com.microsoft.azure.management.compute.OSDisk.withCaching(CachingTypes caching)
  name: withCaching(CachingTypes caching)
  nameWithType: OSDisk.withCaching(CachingTypes caching)
  parameters:
  - description: <p>the caching value to set </p>
    name: caching
    type: <xref href="com.microsoft.azure.management.compute.CachingTypes?alt=com.microsoft.azure.management.compute.CachingTypes&text=CachingTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the caching value.</p>

    <p></p>
  syntax: public OSDisk withCaching(CachingTypes caching)
  uid: com.microsoft.azure.management.compute.OSDisk.withCaching(CachingTypes)
- fullName: com.microsoft.azure.management.compute.OSDisk.withCreateOption(DiskCreateOptionTypes createOption)
  name: withCreateOption(DiskCreateOptionTypes createOption)
  nameWithType: OSDisk.withCreateOption(DiskCreateOptionTypes createOption)
  parameters:
  - description: <p>the createOption value to set </p>
    name: createOption
    type: <xref href="com.microsoft.azure.management.compute.DiskCreateOptionTypes?alt=com.microsoft.azure.management.compute.DiskCreateOptionTypes&text=DiskCreateOptionTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the createOption value.</p>

    <p></p>
  syntax: public OSDisk withCreateOption(DiskCreateOptionTypes createOption)
  uid: com.microsoft.azure.management.compute.OSDisk.withCreateOption(DiskCreateOptionTypes)
- fullName: com.microsoft.azure.management.compute.OSDisk.withDiskSizeGB(Integer diskSizeGB)
  name: withDiskSizeGB(Integer diskSizeGB)
  nameWithType: OSDisk.withDiskSizeGB(Integer diskSizeGB)
  parameters:
  - description: <p>the diskSizeGB value to set </p>
    name: diskSizeGB
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the diskSizeGB value.</p>

    <p></p>
  syntax: public OSDisk withDiskSizeGB(Integer diskSizeGB)
  uid: com.microsoft.azure.management.compute.OSDisk.withDiskSizeGB(Integer)
- fullName: com.microsoft.azure.management.compute.OSDisk.withEncryptionSettings(DiskEncryptionSettings encryptionSettings)
  name: withEncryptionSettings(DiskEncryptionSettings encryptionSettings)
  nameWithType: OSDisk.withEncryptionSettings(DiskEncryptionSettings encryptionSettings)
  parameters:
  - description: <p>the encryptionSettings value to set </p>
    name: encryptionSettings
    type: <xref href="com.microsoft.azure.management.compute.DiskEncryptionSettings?alt=com.microsoft.azure.management.compute.DiskEncryptionSettings&text=DiskEncryptionSettings" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the encryptionSettings value.</p>

    <p></p>
  syntax: public OSDisk withEncryptionSettings(DiskEncryptionSettings encryptionSettings)
  uid: com.microsoft.azure.management.compute.OSDisk.withEncryptionSettings(DiskEncryptionSettings)
- fullName: com.microsoft.azure.management.compute.OSDisk.withImage(VirtualHardDisk image)
  name: withImage(VirtualHardDisk image)
  nameWithType: OSDisk.withImage(VirtualHardDisk image)
  parameters:
  - description: <p>the image value to set </p>
    name: image
    type: <xref href="com.microsoft.azure.management.compute.VirtualHardDisk?alt=com.microsoft.azure.management.compute.VirtualHardDisk&text=VirtualHardDisk" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the image value.</p>

    <p></p>
  syntax: public OSDisk withImage(VirtualHardDisk image)
  uid: com.microsoft.azure.management.compute.OSDisk.withImage(VirtualHardDisk)
- fullName: com.microsoft.azure.management.compute.OSDisk.withManagedDisk(ManagedDiskParametersInner managedDisk)
  name: withManagedDisk(ManagedDiskParametersInner managedDisk)
  nameWithType: OSDisk.withManagedDisk(ManagedDiskParametersInner managedDisk)
  parameters:
  - description: <p>the managedDisk value to set </p>
    name: managedDisk
    type: <xref href="ManagedDiskParametersInner?alt=ManagedDiskParametersInner&text=ManagedDiskParametersInner" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the managedDisk value.</p>

    <p></p>
  syntax: public OSDisk withManagedDisk(ManagedDiskParametersInner managedDisk)
  uid: com.microsoft.azure.management.compute.OSDisk.withManagedDisk(ManagedDiskParametersInner)
- fullName: com.microsoft.azure.management.compute.OSDisk.withName(String name)
  name: withName(String name)
  nameWithType: OSDisk.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public OSDisk withName(String name)
  uid: com.microsoft.azure.management.compute.OSDisk.withName(String)
- fullName: com.microsoft.azure.management.compute.OSDisk.withOsType(OperatingSystemTypes osType)
  name: withOsType(OperatingSystemTypes osType)
  nameWithType: OSDisk.withOsType(OperatingSystemTypes osType)
  parameters:
  - description: <p>the osType value to set </p>
    name: osType
    type: <xref href="com.microsoft.azure.management.compute.OperatingSystemTypes?alt=com.microsoft.azure.management.compute.OperatingSystemTypes&text=OperatingSystemTypes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the osType value.</p>

    <p></p>
  syntax: public OSDisk withOsType(OperatingSystemTypes osType)
  uid: com.microsoft.azure.management.compute.OSDisk.withOsType(OperatingSystemTypes)
- fullName: com.microsoft.azure.management.compute.OSDisk.withVhd(VirtualHardDisk vhd)
  name: withVhd(VirtualHardDisk vhd)
  nameWithType: OSDisk.withVhd(VirtualHardDisk vhd)
  parameters:
  - description: <p>the vhd value to set </p>
    name: vhd
    type: <xref href="com.microsoft.azure.management.compute.VirtualHardDisk?alt=com.microsoft.azure.management.compute.VirtualHardDisk&text=VirtualHardDisk" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the OSDisk object itself. </p>
    type: <xref href="com.microsoft.azure.management.compute.OSDisk?alt=com.microsoft.azure.management.compute.OSDisk&text=OSDisk" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the vhd value.</p>

    <p></p>
  syntax: public OSDisk withVhd(VirtualHardDisk vhd)
  uid: com.microsoft.azure.management.compute.OSDisk.withVhd(VirtualHardDisk)
nameWithType: OSDisk
syntax: public class OSDisk
type: class
uid: com.microsoft.azure.management.compute.OSDisk
fullName: com.microsoft.azure.management.compute.OSDisk
name: OSDisk
package: com.microsoft.azure.management.compute
summary: <p>Describes an Operating System disk. </p>
metadata: {}
