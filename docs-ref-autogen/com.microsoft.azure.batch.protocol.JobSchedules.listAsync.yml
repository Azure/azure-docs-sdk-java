### YamlMime:JavaMember
nameWithType: JobSchedules.listAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync()
  name: listAsync()
  nameWithType: JobSchedules.listAsync()
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;CloudJobSchedule&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJobSchedule?alt=com.microsoft.azure.batch.protocol.models.CloudJobSchedule&text=CloudJobSchedule" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the job schedules in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<CloudJobSchedule>> listAsync()
  uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync()
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(final JobScheduleListOptions jobScheduleListOptions)
  name: listAsync(final JobScheduleListOptions jobScheduleListOptions)
  nameWithType: JobSchedules.listAsync(final JobScheduleListOptions jobScheduleListOptions)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: jobScheduleListOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleListOptions?alt=com.microsoft.azure.batch.protocol.models.JobScheduleListOptions&text=JobScheduleListOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the PagedList&lt;CloudJobSchedule&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJobSchedule?alt=com.microsoft.azure.batch.protocol.models.CloudJobSchedule&text=CloudJobSchedule" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the job schedules in the specified account.</p>

    <p></p>
  syntax: public Observable<Page<CloudJobSchedule>> listAsync(final JobScheduleListOptions jobScheduleListOptions)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(final JobScheduleListOptions)
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(final JobScheduleListOptions jobScheduleListOptions, final ListOperationCallback<CloudJobSchedule> serviceCallback)
  name: listAsync(final JobScheduleListOptions jobScheduleListOptions, final ListOperationCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.listAsync(final JobScheduleListOptions jobScheduleListOptions, final ListOperationCallback<CloudJobSchedule> serviceCallback)
  parameters:
  - description: <p>Additional parameters for the operation </p>
    name: jobScheduleListOptions
    type: final <xref href="com.microsoft.azure.batch.protocol.models.JobScheduleListOptions?alt=com.microsoft.azure.batch.protocol.models.JobScheduleListOptions&text=JobScheduleListOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJobSchedule?alt=com.microsoft.azure.batch.protocol.models.CloudJobSchedule&text=CloudJobSchedule" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJobSchedule?alt=com.microsoft.azure.batch.protocol.models.CloudJobSchedule&text=CloudJobSchedule" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the job schedules in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<CloudJobSchedule>> listAsync(final JobScheduleListOptions jobScheduleListOptions, final ListOperationCallback<CloudJobSchedule> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(final JobScheduleListOptions,final ListOperationCallback<CloudJobSchedule>)
- fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(final ListOperationCallback<CloudJobSchedule> serviceCallback)
  name: listAsync(final ListOperationCallback<CloudJobSchedule> serviceCallback)
  nameWithType: JobSchedules.listAsync(final ListOperationCallback<CloudJobSchedule> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ListOperationCallback&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJobSchedule?alt=com.microsoft.azure.batch.protocol.models.CloudJobSchedule&text=CloudJobSchedule" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.batch.protocol.models.CloudJobSchedule?alt=com.microsoft.azure.batch.protocol.models.CloudJobSchedule&text=CloudJobSchedule" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Lists all of the job schedules in the specified account.</p>

    <p></p>
  syntax: public ServiceFuture<List<CloudJobSchedule>> listAsync(final ListOperationCallback<CloudJobSchedule> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync(final ListOperationCallback<CloudJobSchedule>)
uid: com.microsoft.azure.batch.protocol.JobSchedules.listAsync*
fullName: com.microsoft.azure.batch.protocol.JobSchedules.listAsync()
name: listAsync()
package: com.microsoft.azure.batch.protocol
metadata: {}
