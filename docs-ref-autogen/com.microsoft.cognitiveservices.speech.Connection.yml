### YamlMime:ManagedReference
items:
- uid: com.microsoft.cognitiveservices.speech.Connection
  id: Connection
  parent: com.microsoft.cognitiveservices.speech
  children:
  - com.microsoft.cognitiveservices.speech.Connection.close()
  - com.microsoft.cognitiveservices.speech.Connection.closeConnection()
  - com.microsoft.cognitiveservices.speech.Connection.connected
  - com.microsoft.cognitiveservices.speech.Connection.disconnected
  - com.microsoft.cognitiveservices.speech.Connection.fromRecognizer(Recognizer)
  - com.microsoft.cognitiveservices.speech.Connection.openConnection(boolean)
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: Connection
  nameWithType: Connection
  fullName: com.microsoft.cognitiveservices.speech.Connection
  type: Class
  source:
    remote: &o0
      path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
      branch: javadocs201809
      repo: https://msasg.visualstudio.com/DefaultCollection/Skyman/_git/Carbon
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 28
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Connection is a proxy class for managing connection to the speech service of the specified Recognizer. By default, a Recognizer autonomously manages connection to service when needed. The Connection class provides additional methods for users to explicitly open or close a connection and to subscribe to connection status changes. The use of Connection is optional, and mainly for scenarios where fine tuning of application behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection in advance before starting recognition on the Recognizer associated with this Connection. After starting recognition, calling Open() or Close() might fail, depending on the process state of the Recognizer. But this does not affect the state of the associated Recognizer. And if the Recognizer needs to connect or disconnect to service, it will setup or shutdown the connection independently. In this case the Connection will be notified by change of connection status via Connected/Disconnected events. Added in version 1.2.0. </p>"
  syntax: &o1
    content: public class Connection
  inheritance:
  - java.lang.Object
  - Closeable
- uid: com.microsoft.cognitiveservices.speech.Connection.close()
  id: close()
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: close()
  nameWithType: Connection.close()
  fullName: com.microsoft.cognitiveservices.speech.Connection.close()
  overload: com.microsoft.cognitiveservices.speech.Connection.close*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 84
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Dispose of associated resources. </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.cognitiveservices.speech.Connection.closeConnection()
  id: closeConnection()
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: closeConnection()
  nameWithType: Connection.closeConnection()
  fullName: com.microsoft.cognitiveservices.speech.Connection.closeConnection()
  overload: com.microsoft.cognitiveservices.speech.Connection.closeConnection*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 61
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Closes the connection the service. Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer. The call might fail, depending on the process state of the Recognizer. But the failure does not affect the state of the associated Recognizer. </p>"
  syntax:
    content: public void closeConnection()
- uid: com.microsoft.cognitiveservices.speech.Connection.connected
  id: connected
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: connected
  nameWithType: Connection.connected
  fullName: com.microsoft.cognitiveservices.speech.Connection.connected
  type: Field
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 71
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>The Connected event to indicate that the recognizer is connected to service. In order to receive the connected event after subscribing to it, the Connection object itself needs to be alive. If the Connection object owning this event is out of its life time, all subscribed events won't be delivered. </p>"
  syntax:
    content: public final EventHandlerImpl<ConnectionEventArgs> connected= new EventHandlerImpl<ConnectionEventArgs>()
    return:
      type: 93de0ef9com.microsoft.cognitiveservices.speech.util.EventHandlerImpl78504a52com.microsoft.cognitiveservices.speech.ConnectionEventArgsa08ddfce
- uid: com.microsoft.cognitiveservices.speech.Connection.disconnected
  id: disconnected
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: disconnected
  nameWithType: Connection.disconnected
  fullName: com.microsoft.cognitiveservices.speech.Connection.disconnected
  type: Field
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 78
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>The Diconnected event to indicate that the recognizer is disconnected from service. In order to receive the disconnected event after subscribing to it, the Connection object itself needs to be alive. If the Connection object owning this event is out of its life time, all subscribed events won't be delivered. </p>"
  syntax:
    content: public final EventHandlerImpl<ConnectionEventArgs> disconnected= new EventHandlerImpl<ConnectionEventArgs>()
    return:
      type: 93de0ef9com.microsoft.cognitiveservices.speech.util.EventHandlerImpl78504a52com.microsoft.cognitiveservices.speech.ConnectionEventArgsa08ddfce
- uid: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer(Recognizer)
  id: fromRecognizer(Recognizer)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: fromRecognizer(Recognizer recognizer)
  nameWithType: Connection.fromRecognizer(Recognizer recognizer)
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer(Recognizer recognizer)
  overload: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 35
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Gets the Connection instance from the specified recognizer. </p>"
  syntax:
    content: public static Connection fromRecognizer(Recognizer recognizer)
    parameters:
    - id: recognizer
      type: com.microsoft.cognitiveservices.speech.Recognizer
      description: <p>The recognizer associated with the connection. </p>
    return:
      type: com.microsoft.cognitiveservices.speech.Connection
      description: <p>The Connection instance of the recognizer. </p>
- uid: com.microsoft.cognitiveservices.speech.Connection.openConnection(boolean)
  id: openConnection(boolean)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: openConnection(boolean forContinuousRecognition)
  nameWithType: Connection.openConnection(boolean forContinuousRecognition)
  fullName: com.microsoft.cognitiveservices.speech.Connection.openConnection(boolean forContinuousRecognition)
  overload: com.microsoft.cognitiveservices.speech.Connection.openConnection*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 50
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Starts to set up connection to the service. Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the Recognizer associated with this Connection. After starting recognition, calling OpenConnection() might fail, depending on the process state of the Recognizer. But the failure does not affect the state of the associated Recognizer. Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to be notfied when the connection is established. </p>"
  syntax:
    content: public void openConnection(boolean forContinuousRecognition)
    parameters:
    - id: forContinuousRecognition
      type: 4fc6e284
      description: <p>indicates whether the connection is used for continuous recognition or single-shot recognition. </p>
references:
- uid: 93de0ef9com.microsoft.cognitiveservices.speech.util.EventHandlerImpl78504a52com.microsoft.cognitiveservices.speech.ConnectionEventArgsa08ddfce
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl
    name: EventHandlerImpl
    fullName: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl
    href: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl.yml
  - name: <
    fullName: <
  - uid: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
    name: ConnectionEventArgs
    fullName: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
    href: com.microsoft.cognitiveservices.speech.ConnectionEventArgs.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer*
  name: fromRecognizer
  nameWithType: Connection.fromRecognizer
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer
  package: com.microsoft.cognitiveservices.speech
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.cognitiveservices.speech.Connection.openConnection*
  name: openConnection
  nameWithType: Connection.openConnection
  fullName: com.microsoft.cognitiveservices.speech.Connection.openConnection
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.Connection.closeConnection*
  name: closeConnection
  nameWithType: Connection.closeConnection
  fullName: com.microsoft.cognitiveservices.speech.Connection.closeConnection
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.Connection.close*
  name: close
  nameWithType: Connection.close
  fullName: com.microsoft.cognitiveservices.speech.Connection.close
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl
  parent: com.microsoft.cognitiveservices.speech.util
  href: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl.yml
  name: EventHandlerImpl<T>
  nameWithType: EventHandlerImpl<T>
  fullName: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl<T>
  type: Class
  summary: "<p>Implements the binding between the Speech SDK core event handler and Java event handling. </p>"
  syntax:
    content: public class EventHandlerImpl<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
- uid: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
  parent: com.microsoft.cognitiveservices.speech
  href: com.microsoft.cognitiveservices.speech.ConnectionEventArgs.yml
  name: ConnectionEventArgs
  nameWithType: ConnectionEventArgs
  fullName: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
  type: Class
  summary: "<p>Defines payload for connection events like Connected/Disconnected. Added in version 1.2.0 </p>"
  syntax:
    content: public class ConnectionEventArgs
- uid: com.microsoft.cognitiveservices.speech.Connection
  parent: com.microsoft.cognitiveservices.speech
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  name: Connection
  nameWithType: Connection
  fullName: com.microsoft.cognitiveservices.speech.Connection
  type: Class
  summary: "<p>Connection is a proxy class for managing connection to the speech service of the specified Recognizer. By default, a Recognizer autonomously manages connection to service when needed. The Connection class provides additional methods for users to explicitly open or close a connection and to subscribe to connection status changes. The use of Connection is optional, and mainly for scenarios where fine tuning of application behavior based on connection status is needed. Users can optionally call Open() to manually set up a connection in advance before starting recognition on the Recognizer associated with this Connection. After starting recognition, calling Open() or Close() might fail, depending on the process state of the Recognizer. But this does not affect the state of the associated Recognizer. And if the Recognizer needs to connect or disconnect to service, it will setup or shutdown the connection independently. In this case the Connection will be notified by change of connection status via Connected/Disconnected events. Added in version 1.2.0. </p>"
  syntax: *o1
- uid: com.microsoft.cognitiveservices.speech.Recognizer
  parent: com.microsoft.cognitiveservices.speech
  href: com.microsoft.cognitiveservices.speech.Recognizer.yml
  name: Recognizer
  nameWithType: Recognizer
  fullName: com.microsoft.cognitiveservices.speech.Recognizer
  type: Class
  summary: "<p>Defines the base class Recognizer which mainly contains common event handlers. </p>"
  syntax:
    content: public class Recognizer
