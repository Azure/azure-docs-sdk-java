### YamlMime:ManagedReference
items:
- uid: com.microsoft.cognitiveservices.speech.Connection
  id: Connection
  parent: com.microsoft.cognitiveservices.speech
  children:
  - com.microsoft.cognitiveservices.speech.Connection.close()
  - com.microsoft.cognitiveservices.speech.Connection.closeConnection()
  - com.microsoft.cognitiveservices.speech.Connection.connected
  - com.microsoft.cognitiveservices.speech.Connection.disconnected
  - com.microsoft.cognitiveservices.speech.Connection.fromConversationTranslator(ConversationTranslator)
  - com.microsoft.cognitiveservices.speech.Connection.fromDialogServiceConnector(DialogServiceConnector)
  - com.microsoft.cognitiveservices.speech.Connection.fromRecognizer(Recognizer)
  - com.microsoft.cognitiveservices.speech.Connection.openConnection(boolean)
  - com.microsoft.cognitiveservices.speech.Connection.sendMessageAsync(String,String)
  - com.microsoft.cognitiveservices.speech.Connection.setMessageProperty(String,String,String)
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: Connection
  nameWithType: Connection
  fullName: com.microsoft.cognitiveservices.speech.Connection
  type: Class
  source:
    remote: &o0
      path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
      branch: javadocs201809
      repo: https://msasg.visualstudio.com/DefaultCollection/Skyman/_git/Carbon
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 36
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Connection is a proxy class for managing connection to the speech service of the specified Recognizer. By default, a Recognizer autonomously manages connection to service when needed. The Connection class provides additional methods for users to explicitly open or close a connection and to subscribe to connection status changes. The use of Connection is optional. It is intended for scenarios where fine tuning of application behavior based on connection status is needed. Users can optionally call openConnection() to manually initiate a service connection before starting recognition on the Recognizer associated with this Connection. After starting a recognition, calling openConnection() or closeConnection() might fail. This will not impact the Recognizer or the ongoing recognition. Connection might drop for various reasons, the Recognizer will always try to reinstitute the connection as required to guarantee ongoing operations. In all these cases Connected/Disconnected events will indicate the change of the connection status. Note: close() must be called in order to relinquish underlying resources held by the object. Added in version 1.2.0. </p>"
  syntax: &o1
    content: public class Connection
  inheritance:
  - java.lang.Object
  - Closeable
- uid: com.microsoft.cognitiveservices.speech.Connection.close()
  id: close()
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: close()
  nameWithType: Connection.close()
  fullName: com.microsoft.cognitiveservices.speech.Connection.close()
  overload: com.microsoft.cognitiveservices.speech.Connection.close*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 175
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Dispose of associated resources. close() must be called to relinquish underlying resources correctly. </p>"
  syntax:
    content: public void close()
- uid: com.microsoft.cognitiveservices.speech.Connection.closeConnection()
  id: closeConnection()
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: closeConnection()
  nameWithType: Connection.closeConnection()
  fullName: com.microsoft.cognitiveservices.speech.Connection.closeConnection()
  overload: com.microsoft.cognitiveservices.speech.Connection.closeConnection*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 101
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Closes the connection the service. Users can optionally call closeConnection() to manually shutdown the connection of the associated Recognizer. The call might fail, depending on the process state of the Recognizer. But the failure does not affect the state of the associated Recognizer. </p>"
  syntax:
    content: public void closeConnection()
- uid: com.microsoft.cognitiveservices.speech.Connection.connected
  id: connected
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: connected
  nameWithType: Connection.connected
  fullName: com.microsoft.cognitiveservices.speech.Connection.connected
  type: Field
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 161
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>The Connected event to indicate that the recognizer is connected to service. In order to receive the connected event after subscribing to it, the Connection object itself needs to be alive. If the Connection object owning this event is out of its life time, all subscribed events won't be delivered. </p>"
  syntax:
    content: public final EventHandlerImpl<ConnectionEventArgs> connected= new EventHandlerImpl<ConnectionEventArgs>(eventCounter)
    return:
      type: 93de0ef9com.microsoft.cognitiveservices.speech.util.EventHandlerImpl78504a52com.microsoft.cognitiveservices.speech.ConnectionEventArgsa08ddfce
- uid: com.microsoft.cognitiveservices.speech.Connection.disconnected
  id: disconnected
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: disconnected
  nameWithType: Connection.disconnected
  fullName: com.microsoft.cognitiveservices.speech.Connection.disconnected
  type: Field
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 168
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>The Diconnected event to indicate that the recognizer is disconnected from service. In order to receive the disconnected event after subscribing to it, the Connection object itself needs to be alive. If the Connection object owning this event is out of its life time, all subscribed events won't be delivered. </p>"
  syntax:
    content: public final EventHandlerImpl<ConnectionEventArgs> disconnected= new EventHandlerImpl<ConnectionEventArgs>(eventCounter)
    return:
      type: 93de0ef9com.microsoft.cognitiveservices.speech.util.EventHandlerImpl78504a52com.microsoft.cognitiveservices.speech.ConnectionEventArgsa08ddfce
- uid: com.microsoft.cognitiveservices.speech.Connection.fromConversationTranslator(ConversationTranslator)
  id: fromConversationTranslator(ConversationTranslator)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: fromConversationTranslator(ConversationTranslator conversationTranslator)
  nameWithType: Connection.fromConversationTranslator(ConversationTranslator conversationTranslator)
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromConversationTranslator(ConversationTranslator conversationTranslator)
  overload: com.microsoft.cognitiveservices.speech.Connection.fromConversationTranslator*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 61
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Gets the Connection instance from the conversation translator. </p>"
  syntax:
    content: public static Connection fromConversationTranslator(ConversationTranslator conversationTranslator)
    parameters:
    - id: conversationTranslator
      type: com.microsoft.cognitiveservices.speech.transcription.ConversationTranslator
      description: <p>The conversationTranslator associated with the connection. </p>
    return:
      type: com.microsoft.cognitiveservices.speech.Connection
      description: <p>The Connection instance of the recognizer. </p>
- uid: com.microsoft.cognitiveservices.speech.Connection.fromDialogServiceConnector(DialogServiceConnector)
  id: fromDialogServiceConnector(DialogServiceConnector)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: fromDialogServiceConnector(DialogServiceConnector dialogServiceConnector)
  nameWithType: Connection.fromDialogServiceConnector(DialogServiceConnector dialogServiceConnector)
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromDialogServiceConnector(DialogServiceConnector dialogServiceConnector)
  overload: com.microsoft.cognitiveservices.speech.Connection.fromDialogServiceConnector*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 74
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Gets the Connection instance from the dialog service connector. </p>"
  syntax:
    content: public static Connection fromDialogServiceConnector(DialogServiceConnector dialogServiceConnector)
    parameters:
    - id: dialogServiceConnector
      type: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConnector
      description: <p>The dialog service connector associated with the connection, used for observing and managing connection state with the speech service. </p>
    return:
      type: com.microsoft.cognitiveservices.speech.Connection
      description: <p>The Connection instance of the dialog service connector. </p>
- uid: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer(Recognizer)
  id: fromRecognizer(Recognizer)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: fromRecognizer(Recognizer recognizer)
  nameWithType: Connection.fromRecognizer(Recognizer recognizer)
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer(Recognizer recognizer)
  overload: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 49
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Gets the Connection instance from the specified recognizer. </p>"
  syntax:
    content: public static Connection fromRecognizer(Recognizer recognizer)
    parameters:
    - id: recognizer
      type: com.microsoft.cognitiveservices.speech.Recognizer
      description: <p>The recognizer associated with the connection. </p>
    return:
      type: com.microsoft.cognitiveservices.speech.Connection
      description: <p>The Connection instance of the recognizer. </p>
- uid: com.microsoft.cognitiveservices.speech.Connection.openConnection(boolean)
  id: openConnection(boolean)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: openConnection(boolean forContinuousRecognition)
  nameWithType: Connection.openConnection(boolean forContinuousRecognition)
  fullName: com.microsoft.cognitiveservices.speech.Connection.openConnection(boolean forContinuousRecognition)
  overload: com.microsoft.cognitiveservices.speech.Connection.openConnection*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 90
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Starts to set up connection to the service. Users can optionally call openConnection() to manually set up a connection in advance before starting recognition on the Recognizer associated with this Connection. After starting recognition, calling OpenConnection() might fail, depending on the process state of the Recognizer. But the failure does not affect the state of the associated Recognizer. Note: On return, the connection might not be ready yet. Please subscribe to the Connected event to be notfied when the connection is established. </p>"
  syntax:
    content: public void openConnection(boolean forContinuousRecognition)
    parameters:
    - id: forContinuousRecognition
      type: 4fc6e284
      description: <p>indicates whether the connection is used for continuous recognition or single-shot recognition. </p>
- uid: com.microsoft.cognitiveservices.speech.Connection.sendMessageAsync(String,String)
  id: sendMessageAsync(String,String)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: sendMessageAsync(String path, String payload)
  nameWithType: Connection.sendMessageAsync(String path, String payload)
  fullName: com.microsoft.cognitiveservices.speech.Connection.sendMessageAsync(String path, String payload)
  overload: com.microsoft.cognitiveservices.speech.Connection.sendMessageAsync*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 113
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Sends a message to service. Added in version 1.7.0 </p>"
  syntax:
    content: public Future<Void> sendMessageAsync(String path, String payload)
    parameters:
    - id: path
      type: "26831127"
      description: <p>The message path. </p>
    - id: payload
      type: "26831127"
      description: <p>The message payload. </p>
    return:
      type: 075d0a89
      description: <p>a future representing the asynchronous operation that sends the message. </p>
- uid: com.microsoft.cognitiveservices.speech.Connection.setMessageProperty(String,String,String)
  id: setMessageProperty(String,String,String)
  parent: com.microsoft.cognitiveservices.speech.Connection
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  langs:
  - java
  name: setMessageProperty(String path, String propertyName, String propertyValue)
  nameWithType: Connection.setMessageProperty(String path, String propertyName, String propertyValue)
  fullName: com.microsoft.cognitiveservices.speech.Connection.setMessageProperty(String path, String propertyName, String propertyValue)
  overload: com.microsoft.cognitiveservices.speech.Connection.setMessageProperty*
  type: Method
  source:
    remote: *o0
    path: source/bindings/java/com/microsoft/cognitiveservices/speech/Connection.java
    startLine: 134
  package: com.microsoft.cognitiveservices.speech
  summary: "<p>Appends a parameter in a message to service. Added in version 1.7.0 </p>"
  syntax:
    content: public void setMessageProperty(String path, String propertyName, String propertyValue)
    parameters:
    - id: path
      type: "26831127"
      description: <p>The message path. </p>
    - id: propertyName
      type: "26831127"
      description: <p>The property name that you want to set. </p>
    - id: propertyValue
      type: "26831127"
      description: <p>The value of the property that you want to set. </p>
references:
- uid: 93de0ef9com.microsoft.cognitiveservices.speech.util.EventHandlerImpl78504a52com.microsoft.cognitiveservices.speech.ConnectionEventArgsa08ddfce
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl
    name: EventHandlerImpl
    fullName: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl
    href: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl.yml
  - name: <
    fullName: <
  - uid: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
    name: ConnectionEventArgs
    fullName: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
    href: com.microsoft.cognitiveservices.speech.ConnectionEventArgs.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer*
  name: fromRecognizer
  nameWithType: Connection.fromRecognizer
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromRecognizer
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.Connection.fromConversationTranslator*
  name: fromConversationTranslator
  nameWithType: Connection.fromConversationTranslator
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromConversationTranslator
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.Connection.fromDialogServiceConnector*
  name: fromDialogServiceConnector
  nameWithType: Connection.fromDialogServiceConnector
  fullName: com.microsoft.cognitiveservices.speech.Connection.fromDialogServiceConnector
  package: com.microsoft.cognitiveservices.speech
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: com.microsoft.cognitiveservices.speech.Connection.openConnection*
  name: openConnection
  nameWithType: Connection.openConnection
  fullName: com.microsoft.cognitiveservices.speech.Connection.openConnection
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.Connection.closeConnection*
  name: closeConnection
  nameWithType: Connection.closeConnection
  fullName: com.microsoft.cognitiveservices.speech.Connection.closeConnection
  package: com.microsoft.cognitiveservices.speech
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: 075d0a89
  spec.java:
  - name: Future<Void>
    fullName: Future<Void>
- uid: com.microsoft.cognitiveservices.speech.Connection.sendMessageAsync*
  name: sendMessageAsync
  nameWithType: Connection.sendMessageAsync
  fullName: com.microsoft.cognitiveservices.speech.Connection.sendMessageAsync
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.Connection.setMessageProperty*
  name: setMessageProperty
  nameWithType: Connection.setMessageProperty
  fullName: com.microsoft.cognitiveservices.speech.Connection.setMessageProperty
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.Connection.close*
  name: close
  nameWithType: Connection.close
  fullName: com.microsoft.cognitiveservices.speech.Connection.close
  package: com.microsoft.cognitiveservices.speech
- uid: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl
  parent: com.microsoft.cognitiveservices.speech.util
  href: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl.yml
  name: EventHandlerImpl<T>
  nameWithType: EventHandlerImpl<T>
  fullName: com.microsoft.cognitiveservices.speech.util.EventHandlerImpl<T>
  type: Class
  summary: "<p>Implements the binding between the Speech SDK core event handler and Java event handling. </p>"
  syntax:
    content: public class EventHandlerImpl<T>
    typeParameters:
    - id: T
      type: 8ce1ecb9
- uid: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
  parent: com.microsoft.cognitiveservices.speech
  href: com.microsoft.cognitiveservices.speech.ConnectionEventArgs.yml
  name: ConnectionEventArgs
  nameWithType: ConnectionEventArgs
  fullName: com.microsoft.cognitiveservices.speech.ConnectionEventArgs
  type: Class
  summary: "<p>Defines payload for connection events like Connected/Disconnected. Added in version 1.2.0 </p>"
  syntax:
    content: public class ConnectionEventArgs
- uid: com.microsoft.cognitiveservices.speech.Connection
  parent: com.microsoft.cognitiveservices.speech
  href: com.microsoft.cognitiveservices.speech.Connection.yml
  name: Connection
  nameWithType: Connection
  fullName: com.microsoft.cognitiveservices.speech.Connection
  type: Class
  summary: "<p>Connection is a proxy class for managing connection to the speech service of the specified Recognizer. By default, a Recognizer autonomously manages connection to service when needed. The Connection class provides additional methods for users to explicitly open or close a connection and to subscribe to connection status changes. The use of Connection is optional. It is intended for scenarios where fine tuning of application behavior based on connection status is needed. Users can optionally call openConnection() to manually initiate a service connection before starting recognition on the Recognizer associated with this Connection. After starting a recognition, calling openConnection() or closeConnection() might fail. This will not impact the Recognizer or the ongoing recognition. Connection might drop for various reasons, the Recognizer will always try to reinstitute the connection as required to guarantee ongoing operations. In all these cases Connected/Disconnected events will indicate the change of the connection status. Note: close() must be called in order to relinquish underlying resources held by the object. Added in version 1.2.0. </p>"
  syntax: *o1
- uid: com.microsoft.cognitiveservices.speech.Recognizer
  parent: com.microsoft.cognitiveservices.speech
  href: com.microsoft.cognitiveservices.speech.Recognizer.yml
  name: Recognizer
  nameWithType: Recognizer
  fullName: com.microsoft.cognitiveservices.speech.Recognizer
  type: Class
  summary: "<p>Defines the base class Recognizer which mainly contains common event handlers. </p>"
  syntax:
    content: public class Recognizer
- uid: com.microsoft.cognitiveservices.speech.transcription.ConversationTranslator
  parent: com.microsoft.cognitiveservices.speech.transcription
  href: com.microsoft.cognitiveservices.speech.transcription.ConversationTranslator.yml
  name: ConversationTranslator
  nameWithType: ConversationTranslator
  fullName: com.microsoft.cognitiveservices.speech.transcription.ConversationTranslator
  type: Class
  summary: "<p>A conversation translator that enables a connected experience where participants can use their own devices to see everyone else's recognitions and IMs in their own languages. Participants can also speak and send IMs to others. Added in version 1.12.0 </p>"
  syntax:
    content: public class ConversationTranslator
- uid: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConnector
  parent: com.microsoft.cognitiveservices.speech.dialog
  href: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConnector.yml
  name: DialogServiceConnector
  nameWithType: DialogServiceConnector
  fullName: com.microsoft.cognitiveservices.speech.dialog.DialogServiceConnector
  type: Class
  summary: "<p>Class that defines a DialogServiceConnector. Note: close() must be called in order to relinquish underlying resources held by the object. </p>"
  syntax:
    content: public class DialogServiceConnector
