### YamlMime:JavaMember
uid: "com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.WithAccessPolicy.withAccessPolicy*"
fullName: "com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.WithAccessPolicy.withAccessPolicy"
name: "withAccessPolicy"
nameWithType: "Vault.DefinitionStages.WithAccessPolicy.withAccessPolicy"
members:
- uid: "com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.WithAccessPolicy.withAccessPolicy(com.azure.resourcemanager.keyvault.models.AccessPolicy)"
  fullName: "com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.WithAccessPolicy.withAccessPolicy(AccessPolicy accessPolicy)"
  name: "withAccessPolicy(AccessPolicy accessPolicy)"
  nameWithType: "Vault.DefinitionStages.WithAccessPolicy.withAccessPolicy(AccessPolicy accessPolicy)"
  summary: "Attach an existing access policy."
  parameters:
  - description: "the existing access policy"
    name: "accessPolicy"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.AccessPolicy?alt=com.azure.resourcemanager.keyvault.models.AccessPolicy&text=AccessPolicy\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Vault.DefinitionStages.WithCreate withAccessPolicy(AccessPolicy accessPolicy)"
  returns:
    description: "the next stage of key vault definition"
    type: "<xref href=\"com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.WithCreate?alt=com.azure.resourcemanager.keyvault.models.Vault.DefinitionStages.WithCreate&text=WithCreate\" data-throw-if-not-resolved=\"False\" />"
type: "method"
metadata: {}
package: "com.azure.resourcemanager.keyvault.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-keyvault:2.1.0
