### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.functions.annotation.SendGridOutput.apiKey()
  name: apiKey()
  nameWithType: SendGridOutput.apiKey()
  returns:
    description: <p>The SendGrid API key string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the API key of the SendGrid to which to write. </p>
  syntax: public String apiKey()
  uid: com.microsoft.azure.functions.annotation.SendGridOutput.apiKey()
- fullName: com.microsoft.azure.functions.annotation.SendGridOutput.dataType()
  name: dataType()
  nameWithType: SendGridOutput.dataType()
  returns:
    description: <p>The dataType which will be used by the Functions runtime. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines how Functions runtime should treat the parameter value. Possible values are:</p>

    <p>

      <ul>

        <li>

          <p>"" or string: treat it as a string whose value is serialized from the parameter </p>

        </li>

        <li>

          <p>binary: treat it as a binary data whose value comes from for example OutputBinding&lt;byte[]&gt; </p>

        </li>

      </ul>

    </p>
  syntax: public String dataType() default ""
  uid: com.microsoft.azure.functions.annotation.SendGridOutput.dataType()
- fullName: com.microsoft.azure.functions.annotation.SendGridOutput.from()
  name: from()
  nameWithType: SendGridOutput.from()
  returns:
    description: <p>The SendGrid 'FROM' name string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the 'FROM' name of the SendGrid to which to write. </p>
  syntax: public String from()
  uid: com.microsoft.azure.functions.annotation.SendGridOutput.from()
- fullName: com.microsoft.azure.functions.annotation.SendGridOutput.name()
  name: name()
  nameWithType: SendGridOutput.name()
  returns:
    description: <p>The variable name used in function.json. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>The variable name used in function.json. </p>
  syntax: public String name()
  uid: com.microsoft.azure.functions.annotation.SendGridOutput.name()
- fullName: com.microsoft.azure.functions.annotation.SendGridOutput.subject()
  name: subject()
  nameWithType: SendGridOutput.subject()
  returns:
    description: <p>The SendGrid email subject string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the subject of the SendGrid email to which to write. </p>
  syntax: public String subject()
  uid: com.microsoft.azure.functions.annotation.SendGridOutput.subject()
- fullName: com.microsoft.azure.functions.annotation.SendGridOutput.text()
  name: text()
  nameWithType: SendGridOutput.text()
  returns:
    description: <p>The SendGrid email content string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the content text of the SendGrid email to which to write. </p>
  syntax: public String text()
  uid: com.microsoft.azure.functions.annotation.SendGridOutput.text()
- fullName: com.microsoft.azure.functions.annotation.SendGridOutput.to()
  name: to()
  nameWithType: SendGridOutput.to()
  returns:
    description: <p>The SendGrid 'TO' email string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Defines the 'TO' email of the SendGrid to which to write. </p>
  syntax: public String to()
  uid: com.microsoft.azure.functions.annotation.SendGridOutput.to()
nameWithType: SendGridOutput
syntax: public interface SendGridOutput
type: interface
uid: com.microsoft.azure.functions.annotation.SendGridOutput
fullName: com.microsoft.azure.functions.annotation.SendGridOutput
name: SendGridOutput
package: com.microsoft.azure.functions.annotation
summary: >-
  <p>Place this on a parameter whose value would be written to SendGrid. The parameter type should be OutputBinding&lt;T&gt;, where T could be one of:</p>

  <p>

    <ul>

      <li>

        <p>Any native Java types such as int, String, byte[] </p>

      </li>

      <li>

        <p>Any POJO type </p>

      </li>

    </ul>

  </p>

  <p></p>
metadata: {}
