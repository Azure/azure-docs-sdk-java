### YamlMime:JavaMember
nameWithType: SingleAccountPublicClientApplication.acquireToken
type: method
members:
- fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: SingleAccountPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  parameters:
  - name: acquireTokenParameters
    type: '@NonNull final <xref href="com.microsoft.identity.client.AcquireTokenParameters?alt=com.microsoft.identity.client.AcquireTokenParameters&text=AcquireTokenParameters" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid="com.microsoft.identity.client.Prompt" data-throw-if-not-resolved="false">Prompt</xref> is <xref uid="com.microsoft.identity.client.Prompt.SELECT_ACCOUNT" data-throw-if-not-resolved="false">Prompt#SELECT_ACCOUNT</xref>. </p>

    <p>Convey parameters via the AquireTokenParameters object</p>

    <p></p>
  syntax: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
- fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: SingleAccountPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  overridden: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parameters:
  - description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false">Activity</xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false">com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity</xref>. </p>
    name: activity
    type: <xref href="%40NonNull+final+Activity?alt=@NonNull final Activity&text=%40NonNull+final+Activity" data-throw-if-not-resolved="False"/>
  - description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    name: scopes
    type: <xref href="%40NonNull+final+String+%5B%5D?alt=@NonNull final String []&text=%40NonNull+final+String+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false">AuthenticationCallback</xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false">AuthenticationCallback#onCancel()</xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false">AuthenticationCallback#onSuccess(IAuthenticationResult)</xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false">AuthenticationCallback#onError(MsalException)</xref>. </p>
    name: callback
    type: '@NonNull final <xref href="com.microsoft.identity.client.AuthenticationCallback?alt=com.microsoft.identity.client.AuthenticationCallback&text=AuthenticationCallback" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid="com.microsoft.identity.client.Prompt" data-throw-if-not-resolved="false">Prompt</xref> is <xref uid="com.microsoft.identity.client.Prompt.SELECT_ACCOUNT" data-throw-if-not-resolved="false">Prompt#SELECT_ACCOUNT</xref>.</p>

    <p></p>
  syntax: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken*
fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
package: com.microsoft.identity.client
metadata: {}
