### YamlMime:JavaType
uid: "com.azure.resourcemanager.network.models.NetworkPeerings"
fullName: "com.azure.resourcemanager.network.models.NetworkPeerings"
name: "NetworkPeerings"
nameWithType: "NetworkPeerings"
summary: "Entry point to network peering management API."
syntax: "public interface NetworkPeerings extends SupportsCreating<NetworkPeering.DefinitionStages.Blank>, SupportsDeletingById, SupportsGettingById<NetworkPeering>, SupportsBatchCreation<NetworkPeering>, SupportsDeletingByParent, SupportsListing<NetworkPeering>, HasManager<NetworkManager>"
methods:
- uid: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetwork(com.azure.resourcemanager.network.models.Network)"
  fullName: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetwork(Network network)"
  name: "getByRemoteNetwork(Network network)"
  nameWithType: "NetworkPeerings.getByRemoteNetwork(Network network)"
  summary: "Finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "an existing network"
    name: "network"
    type: "<xref href=\"com.azure.resourcemanager.network.models.Network?alt=com.azure.resourcemanager.network.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract NetworkPeering getByRemoteNetwork(Network network)"
  desc: "Finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a network peering, or null if none exists"
    type: "<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetwork(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetwork(String remoteNetworkResourceId)"
  name: "getByRemoteNetwork(String remoteNetworkResourceId)"
  nameWithType: "NetworkPeerings.getByRemoteNetwork(String remoteNetworkResourceId)"
  summary: "Finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID of an existing network"
    name: "remoteNetworkResourceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract NetworkPeering getByRemoteNetwork(String remoteNetworkResourceId)"
  desc: "Finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a network peering, or null if none exists"
    type: "<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetworkAsync(com.azure.resourcemanager.network.models.Network)"
  fullName: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetworkAsync(Network network)"
  name: "getByRemoteNetworkAsync(Network network)"
  nameWithType: "NetworkPeerings.getByRemoteNetworkAsync(Network network)"
  summary: "Asynchronously finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "an existing network"
    name: "network"
    type: "<xref href=\"com.azure.resourcemanager.network.models.Network?alt=com.azure.resourcemanager.network.models.Network&text=Network\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<NetworkPeering> getByRemoteNetworkAsync(Network network)"
  desc: "Asynchronously finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a representation of the future computation of this call, evaluating to null if no such peering is found"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetworkAsync(java.lang.String)"
  fullName: "com.azure.resourcemanager.network.models.NetworkPeerings.getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  name: "getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  nameWithType: "NetworkPeerings.getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  summary: "Asynchronously finds the peering, if any, that is associated with the specified network."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource ID of an existing network"
    name: "remoteNetworkResourceId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public abstract Mono<NetworkPeering> getByRemoteNetworkAsync(String remoteNetworkResourceId)"
  desc: "Asynchronously finds the peering, if any, that is associated with the specified network.\n\n(Note that this makes a separate call to Azure.)"
  returns:
    description: "a representation of the future computation of this call, evaluating to null if no such peering is found"
    type: "<a href=\"https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html\">Mono</a>&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "Entry point to network peering management API."
implements:
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByParent?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsDeletingByParent&text=SupportsDeletingByParent\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById?alt=com.azure.resourcemanager.resources.fluentcore.arm.collection.SupportsGettingById&text=SupportsGettingById\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager?alt=com.azure.resourcemanager.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.NetworkManager?alt=com.azure.resourcemanager.network.NetworkManager&text=NetworkManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsBatchCreation&text=SupportsBatchCreation\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsCreating&text=SupportsCreating\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.Blank?alt=com.azure.resourcemanager.network.models.NetworkPeering.DefinitionStages.Blank&text=Blank\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsDeletingById&text=SupportsDeletingById\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing?alt=com.azure.resourcemanager.resources.fluentcore.collection.SupportsListing&text=SupportsListing\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.network.models.NetworkPeering?alt=com.azure.resourcemanager.network.models.NetworkPeering&text=NetworkPeering\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.network.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-network:2.19.0
