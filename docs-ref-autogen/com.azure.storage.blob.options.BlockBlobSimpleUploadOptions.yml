### YamlMime:ManagedReference
items:
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  id: BlockBlobSimpleUploadOptions
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options
  children:
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(java.io.InputStream,long)
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getContentMd5()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataFlux()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataStream()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getHeaders()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getLength()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getMetadata()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getRequestConditions()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTags()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTier()
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setContentMd5(byte[])
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)
  - com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTier(com.azure.storage.blob.models.AccessTier)
  langs:
  - java
  name: BlockBlobSimpleUploadOptions
  nameWithType: BlockBlobSimpleUploadOptions
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  type: Class
  package: com.azure.storage.blob.options
  summary: Extended options that may be passed when uploading a Block Blob in a single request.
  syntax:
    content: public class BlockBlobSimpleUploadOptions
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(java.io.InputStream,long)
  id: BlockBlobSimpleUploadOptions(java.io.InputStream,long)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: BlockBlobSimpleUploadOptions(InputStream data, long length)
  nameWithType: BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(InputStream data, long length)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(InputStream data, long length)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions*
  type: Constructor
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions(InputStream data, long length)
    parameters:
    - id: data
      type: java.io.InputStream
      description: The data to write to the blob.
    - id: length
      type: long
      description: >-
        The exact length of the data. It is important that this value match precisely the length of the
         data emitted by the data source.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  id: BlockBlobSimpleUploadOptions(reactor.core.publisher.Flux<java.nio.ByteBuffer>,long)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: BlockBlobSimpleUploadOptions(Flux<ByteBuffer> data, long length)
  nameWithType: BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(Flux<ByteBuffer> data, long length)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions(Flux<ByteBuffer> data, long length)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions*
  type: Constructor
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions(Flux<ByteBuffer> data, long length)
    parameters:
    - id: data
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: >-
        The data to write to the blob. Note that this <code>Flux</code> must be replayable if retries are enabled
         (the default). In other words, the Flux must produce the same data each time it is subscribed to.
    - id: length
      type: long
      description: >-
        The exact length of the data. It is important that this value match precisely the length of the
         data emitted by the data source.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getContentMd5()
  id: getContentMd5()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getContentMd5()
  nameWithType: BlockBlobSimpleUploadOptions.getContentMd5()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getContentMd5()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getContentMd5*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public byte[] getContentMd5()
    return:
      type: byte[]
      description: >-
        An MD5 hash of the block content. This hash is used to verify the integrity of the block during
         transport. When this header is specified, the storage service compares the hash of the content that has arrived
         with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the
         operation will fail.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataFlux()
  id: getDataFlux()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getDataFlux()
  nameWithType: BlockBlobSimpleUploadOptions.getDataFlux()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataFlux()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataFlux*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public Flux<ByteBuffer> getDataFlux()
    return:
      type: reactor.core.publisher.Flux<java.nio.ByteBuffer>
      description: >-
        The data to write to the blob. Note that this <code>Flux</code> must be replayable if retries are enabled
         (the default). In other words, the Flux must produce the same data each time it is subscribed to.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataStream()
  id: getDataStream()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getDataStream()
  nameWithType: BlockBlobSimpleUploadOptions.getDataStream()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataStream()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataStream*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public InputStream getDataStream()
    return:
      type: java.io.InputStream
      description: The data to write to the blob.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getHeaders()
  id: getHeaders()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getHeaders()
  nameWithType: BlockBlobSimpleUploadOptions.getHeaders()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getHeaders()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getHeaders*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlobHttpHeaders getHeaders()
    return:
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getLength()
  id: getLength()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getLength()
  nameWithType: BlockBlobSimpleUploadOptions.getLength()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getLength()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getLength*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public long getLength()
    return:
      type: long
      description: >-
        The exact length of the data. It is important that this value match precisely the length of the
         data emitted by the data source.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getMetadata()
  id: getMetadata()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getMetadata()
  nameWithType: BlockBlobSimpleUploadOptions.getMetadata()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getMetadata()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getMetadata*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public Map<String,String> getMetadata()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: The metadata to associate with the blob.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getRequestConditions()
  id: getRequestConditions()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getRequestConditions()
  nameWithType: BlockBlobSimpleUploadOptions.getRequestConditions()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getRequestConditions()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getRequestConditions*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlobRequestConditions getRequestConditions()
    return:
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTags()
  id: getTags()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getTags()
  nameWithType: BlockBlobSimpleUploadOptions.getTags()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTags()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTags*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public Map<String,String> getTags()
    return:
      type: java.util.Map<java.lang.String,java.lang.String>
      description: The tags to associate with the blob.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTier()
  id: getTier()
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: getTier()
  nameWithType: BlockBlobSimpleUploadOptions.getTier()
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTier()
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTier*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public AccessTier getTier()
    return:
      type: com.azure.storage.blob.models.AccessTier
      description: <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref>
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setContentMd5(byte[])
  id: setContentMd5(byte[])
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: setContentMd5(byte[] contentMd5)
  nameWithType: BlockBlobSimpleUploadOptions.setContentMd5(byte[] contentMd5)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setContentMd5(byte[] contentMd5)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setContentMd5*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions setContentMd5(byte[] contentMd5)
    parameters:
    - id: contentMd5
      type: byte[]
      description: >-
        An MD5 hash of the block content. This hash is used to verify the integrity of the block during
         transport. When this header is specified, the storage service compares the hash of the content that has arrived
         with this header value. Note that this MD5 hash is not stored with the blob. If the two hashes do not match, the
         operation will fail.
    return:
      type: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
      description: The updated options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  id: setHeaders(com.azure.storage.blob.models.BlobHttpHeaders)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: setHeaders(BlobHttpHeaders headers)
  nameWithType: BlockBlobSimpleUploadOptions.setHeaders(BlobHttpHeaders headers)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setHeaders(BlobHttpHeaders headers)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setHeaders*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions setHeaders(BlobHttpHeaders headers)
    parameters:
    - id: headers
      type: com.azure.storage.blob.models.BlobHttpHeaders
      description: <xref uid="com.azure.storage.blob.models.BlobHttpHeaders" data-throw-if-not-resolved="false">BlobHttpHeaders</xref>
    return:
      type: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
      description: The updated <code>AppendBlobCreateOptions</code>
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  id: setMetadata(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: setMetadata(Map<String,String> metadata)
  nameWithType: BlockBlobSimpleUploadOptions.setMetadata(Map<String,String> metadata)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setMetadata(Map<String,String> metadata)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setMetadata*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions setMetadata(Map<String,String> metadata)
    parameters:
    - id: metadata
      type: java.util.Map<java.lang.String,java.lang.String>
      description: The metadata to associate with the blob.
    return:
      type: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
      description: The updated options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)
  id: setRequestConditions(com.azure.storage.blob.models.BlobRequestConditions)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: setRequestConditions(BlobRequestConditions requestConditions)
  nameWithType: BlockBlobSimpleUploadOptions.setRequestConditions(BlobRequestConditions requestConditions)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setRequestConditions(BlobRequestConditions requestConditions)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setRequestConditions*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions setRequestConditions(BlobRequestConditions requestConditions)
    parameters:
    - id: requestConditions
      type: com.azure.storage.blob.models.BlobRequestConditions
      description: <xref uid="com.azure.storage.blob.models.BlobRequestConditions" data-throw-if-not-resolved="false">BlobRequestConditions</xref>
    return:
      type: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
      description: The updated options.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)
  id: setTags(java.util.Map<java.lang.String,java.lang.String>)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: setTags(Map<String,String> tags)
  nameWithType: BlockBlobSimpleUploadOptions.setTags(Map<String,String> tags)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTags(Map<String,String> tags)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTags*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions setTags(Map<String,String> tags)
    parameters:
    - id: tags
      type: java.util.Map<java.lang.String,java.lang.String>
      description: The tags to associate with the blob.
    return:
      type: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
      description: The updated options.
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTier(com.azure.storage.blob.models.AccessTier)
  id: setTier(com.azure.storage.blob.models.AccessTier)
  artifact: com.azure:azure-storage-blob:12.8.0
  parent: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
  langs:
  - java
  name: setTier(AccessTier tier)
  nameWithType: BlockBlobSimpleUploadOptions.setTier(AccessTier tier)
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTier(AccessTier tier)
  overload: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTier*
  type: Method
  package: com.azure.storage.blob.options
  syntax:
    content: public BlockBlobSimpleUploadOptions setTier(AccessTier tier)
    parameters:
    - id: tier
      type: com.azure.storage.blob.models.AccessTier
      description: <xref uid="com.azure.storage.blob.models.AccessTier" data-throw-if-not-resolved="false">AccessTier</xref>
    return:
      type: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions
      description: The updated options.
references:
- uid: reactor.core.publisher.Flux<java.nio.ByteBuffer>
  spec.java:
  - uid: reactor.core.publisher.Flux
    name: Flux
    fullName: reactor.core.publisher.Flux
  - name: <
    fullName: <
  - uid: java.nio.ByteBuffer
    name: ByteBuffer
    fullName: java.nio.ByteBuffer
  - name: '>'
    fullName: '>'
- uid: long
  spec.java:
  - uid: long
    name: long
    fullName: long
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions*
  name: BlockBlobSimpleUploadOptions
  nameWithType: BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.BlockBlobSimpleUploadOptions
  package: com.azure.storage.blob.options
- uid: java.io.InputStream
  spec.java:
  - uid: java.io.InputStream
    name: InputStream
    fullName: java.io.InputStream
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataFlux*
  name: getDataFlux
  nameWithType: BlockBlobSimpleUploadOptions.getDataFlux
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataFlux
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataStream*
  name: getDataStream
  nameWithType: BlockBlobSimpleUploadOptions.getDataStream
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getDataStream
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getLength*
  name: getLength
  nameWithType: BlockBlobSimpleUploadOptions.getLength
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getLength
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.models.BlobHttpHeaders
  name: BlobHttpHeaders
  nameWithType: BlobHttpHeaders
  fullName: com.azure.storage.blob.models.BlobHttpHeaders
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getHeaders*
  name: getHeaders
  nameWithType: BlockBlobSimpleUploadOptions.getHeaders
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getHeaders
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setHeaders*
  name: setHeaders
  nameWithType: BlockBlobSimpleUploadOptions.setHeaders
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setHeaders
  package: com.azure.storage.blob.options
- uid: java.util.Map<java.lang.String,java.lang.String>
  spec.java:
  - uid: java.util.Map
    name: Map
    fullName: java.util.Map
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: ','
    fullName: ','
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getMetadata*
  name: getMetadata
  nameWithType: BlockBlobSimpleUploadOptions.getMetadata
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getMetadata
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setMetadata*
  name: setMetadata
  nameWithType: BlockBlobSimpleUploadOptions.setMetadata
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setMetadata
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTags*
  name: getTags
  nameWithType: BlockBlobSimpleUploadOptions.getTags
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTags
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTags*
  name: setTags
  nameWithType: BlockBlobSimpleUploadOptions.setTags
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTags
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.models.AccessTier
  name: AccessTier
  nameWithType: AccessTier
  fullName: com.azure.storage.blob.models.AccessTier
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTier*
  name: getTier
  nameWithType: BlockBlobSimpleUploadOptions.getTier
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getTier
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTier*
  name: setTier
  nameWithType: BlockBlobSimpleUploadOptions.setTier
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setTier
  package: com.azure.storage.blob.options
- uid: byte[]
  spec.java:
  - uid: byte
    name: byte
    fullName: byte
  - name: '[]'
    fullName: '[]'
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getContentMd5*
  name: getContentMd5
  nameWithType: BlockBlobSimpleUploadOptions.getContentMd5
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getContentMd5
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setContentMd5*
  name: setContentMd5
  nameWithType: BlockBlobSimpleUploadOptions.setContentMd5
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setContentMd5
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.models.BlobRequestConditions
  name: BlobRequestConditions
  nameWithType: BlobRequestConditions
  fullName: com.azure.storage.blob.models.BlobRequestConditions
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getRequestConditions*
  name: getRequestConditions
  nameWithType: BlockBlobSimpleUploadOptions.getRequestConditions
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.getRequestConditions
  package: com.azure.storage.blob.options
- uid: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setRequestConditions*
  name: setRequestConditions
  nameWithType: BlockBlobSimpleUploadOptions.setRequestConditions
  fullName: com.azure.storage.blob.options.BlockBlobSimpleUploadOptions.setRequestConditions
  package: com.azure.storage.blob.options
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: reactor.core.publisher.Flux
  name: Flux
  nameWithType: Flux
  fullName: reactor.core.publisher.Flux
- uid: java.nio.ByteBuffer
  name: ByteBuffer
  nameWithType: ByteBuffer
  fullName: java.nio.ByteBuffer
- uid: java.util.Map
  name: Map
  nameWithType: Map
  fullName: java.util.Map
- uid: java.lang.String,java.lang.String
  name: String,String
  nameWithType: String,String
  fullName: java.lang.String,java.lang.String
