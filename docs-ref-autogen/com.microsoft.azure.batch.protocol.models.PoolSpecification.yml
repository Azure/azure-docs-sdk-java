### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification
  id: PoolSpecification
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.PoolSpecification()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationLicenses()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationPackageReferences()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleEvaluationInterval()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleFormula()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.certificateReferences()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.cloudServiceConfiguration()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.displayName()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.enableAutoScale()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.enableInterNodeCommunication()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.maxTasksPerNode()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.metadata()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.mountConfiguration()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.networkConfiguration()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.resizeTimeout()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.startTask()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.targetDedicatedNodes()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.targetLowPriorityNodes()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.taskSchedulingPolicy()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.userAccounts()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.virtualMachineConfiguration()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.vmSize()
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses(java.util.List<java.lang.String>)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleEvaluationInterval(org.joda.time.Period)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleFormula(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withCloudServiceConfiguration(com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withDisplayName(java.lang.String)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableAutoScale(java.lang.Boolean)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableInterNodeCommunication(java.lang.Boolean)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withMaxTasksPerNode(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withMountConfiguration(java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.NetworkConfiguration)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withResizeTimeout(org.joda.time.Period)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetDedicatedNodes(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetLowPriorityNodes(java.lang.Integer)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withTaskSchedulingPolicy(com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withUserAccounts(java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withVirtualMachineConfiguration(com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration)
  - com.microsoft.azure.batch.protocol.models.PoolSpecification.withVmSize(java.lang.String)
  langs:
  - java
  name: PoolSpecification
  nameWithType: PoolSpecification
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: Specification for creating a new Pool.
  syntax:
    content: public class PoolSpecification
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.PoolSpecification()
  id: PoolSpecification()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: PoolSpecification()
  nameWithType: PoolSpecification.PoolSpecification()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.PoolSpecification()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.PoolSpecification*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public PoolSpecification()
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationLicenses()
  id: applicationLicenses()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: applicationLicenses()
  nameWithType: PoolSpecification.applicationLicenses()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationLicenses()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationLicenses*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail. The permitted licenses available on the Pool are 'maya', 'vray', '3dsmax', 'arnold'. An additional charge applies for each application license added to the Pool.
  syntax:
    content: public List<String> applicationLicenses()
    return:
      type: java.util.List<java.lang.String>
      description: the applicationLicenses value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationPackageReferences()
  id: applicationPackageReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: applicationPackageReferences()
  nameWithType: PoolSpecification.applicationPackageReferences()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationPackageReferences()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.
  syntax:
    content: public List<ApplicationPackageReference> applicationPackageReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleEvaluationInterval()
  id: autoScaleEvaluationInterval()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: autoScaleEvaluationInterval()
  nameWithType: PoolSpecification.autoScaleEvaluationInterval()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleEvaluationInterval()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleEvaluationInterval*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service rejects the request with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public Period autoScaleEvaluationInterval()
    return:
      type: org.joda.time.Period
      description: the autoScaleEvaluationInterval value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleFormula()
  id: autoScaleFormula()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: autoScaleFormula()
  nameWithType: PoolSpecification.autoScaleFormula()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleFormula()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleFormula*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information.
  syntax:
    content: public String autoScaleFormula()
    return:
      type: java.lang.String
      description: the autoScaleFormula value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.certificateReferences()
  id: certificateReferences()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: certificateReferences()
  nameWithType: PoolSpecification.certificateReferences()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.certificateReferences()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.certificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public List<CertificateReference> certificateReferences()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.cloudServiceConfiguration()
  id: cloudServiceConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: cloudServiceConfiguration()
  nameWithType: PoolSpecification.cloudServiceConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.cloudServiceConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.cloudServiceConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property must be specified if the Pool needs to be created with Azure PaaS VMs. This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. If neither is specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'.
  syntax:
    content: public CloudServiceConfiguration cloudServiceConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
      description: the cloudServiceConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.displayName()
  id: displayName()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: displayName()
  nameWithType: PoolSpecification.displayName()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.displayName()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.displayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public String displayName()
    return:
      type: java.lang.String
      description: the displayName value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableAutoScale()
  id: enableAutoScale()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: enableAutoScale()
  nameWithType: PoolSpecification.enableAutoScale()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableAutoScale()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula element is required. The Pool automatically resizes according to the formula. The default value is false.
  syntax:
    content: public Boolean enableAutoScale()
    return:
      type: java.lang.Boolean
      description: the enableAutoScale value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableInterNodeCommunication()
  id: enableInterNodeCommunication()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: enableInterNodeCommunication()
  nameWithType: PoolSpecification.enableInterNodeCommunication()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableInterNodeCommunication()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableInterNodeCommunication*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get enabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false.
  syntax:
    content: public Boolean enableInterNodeCommunication()
    return:
      type: java.lang.Boolean
      description: the enableInterNodeCommunication value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.maxTasksPerNode()
  id: maxTasksPerNode()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: maxTasksPerNode()
  nameWithType: PoolSpecification.maxTasksPerNode()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.maxTasksPerNode()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.maxTasksPerNode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256.
  syntax:
    content: public Integer maxTasksPerNode()
    return:
      type: java.lang.Integer
      description: the maxTasksPerNode value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.metadata()
  id: metadata()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: metadata()
  nameWithType: PoolSpecification.metadata()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.metadata()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.metadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the Batch service does not assign any meaning to metadata; it is solely for the use of user code.
  syntax:
    content: public List<MetadataItem> metadata()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.mountConfiguration()
  id: mountConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: mountConfiguration()
  nameWithType: PoolSpecification.mountConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.mountConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.mountConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
  syntax:
    content: public List<MountConfiguration> mountConfiguration()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>
      description: the mountConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.networkConfiguration()
  id: networkConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: networkConfiguration()
  nameWithType: PoolSpecification.networkConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.networkConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.networkConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the networkConfiguration value.
  syntax:
    content: public NetworkConfiguration networkConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
      description: the networkConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.resizeTimeout()
  id: resizeTimeout()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: resizeTimeout()
  nameWithType: PoolSpecification.resizeTimeout()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.resizeTimeout()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.resizeTimeout*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public Period resizeTimeout()
    return:
      type: org.joda.time.Period
      description: the resizeTimeout value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.startTask()
  id: startTask()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: startTask()
  nameWithType: PoolSpecification.startTask()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.startTask()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.startTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the startTask value.
  syntax:
    content: public StartTask startTask()
    return:
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetDedicatedNodes()
  id: targetDedicatedNodes()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: targetDedicatedNodes()
  nameWithType: PoolSpecification.targetDedicatedNodes()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetDedicatedNodes()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetDedicatedNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.
  syntax:
    content: public Integer targetDedicatedNodes()
    return:
      type: java.lang.Integer
      description: the targetDedicatedNodes value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetLowPriorityNodes()
  id: targetLowPriorityNodes()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: targetLowPriorityNodes()
  nameWithType: PoolSpecification.targetLowPriorityNodes()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetLowPriorityNodes()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetLowPriorityNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.
  syntax:
    content: public Integer targetLowPriorityNodes()
    return:
      type: java.lang.Integer
      description: the targetLowPriorityNodes value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.taskSchedulingPolicy()
  id: taskSchedulingPolicy()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: taskSchedulingPolicy()
  nameWithType: PoolSpecification.taskSchedulingPolicy()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.taskSchedulingPolicy()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.taskSchedulingPolicy*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get if not specified, the default is spread.
  syntax:
    content: public TaskSchedulingPolicy taskSchedulingPolicy()
    return:
      type: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
      description: the taskSchedulingPolicy value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.userAccounts()
  id: userAccounts()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: userAccounts()
  nameWithType: PoolSpecification.userAccounts()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.userAccounts()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.userAccounts*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get the userAccounts value.
  syntax:
    content: public List<UserAccount> userAccounts()
    return:
      type: java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>
      description: the userAccounts value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.virtualMachineConfiguration()
  id: virtualMachineConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: virtualMachineConfiguration()
  nameWithType: PoolSpecification.virtualMachineConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.virtualMachineConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.virtualMachineConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get this property must be specified if the Pool needs to be created with Azure IaaS VMs. This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified. If neither is specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public VirtualMachineConfiguration virtualMachineConfiguration()
    return:
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the virtualMachineConfiguration value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.vmSize()
  id: vmSize()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: vmSize()
  nameWithType: PoolSpecification.vmSize()
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.vmSize()
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.vmSize*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Get for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
  syntax:
    content: public String vmSize()
    return:
      type: java.lang.String
      description: the vmSize value
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses(java.util.List<java.lang.String>)
  id: withApplicationLicenses(java.util.List<java.lang.String>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: PoolSpecification.withApplicationLicenses(List<String> applicationLicenses)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses(List<String> applicationLicenses)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, Pool creation will fail. The permitted licenses available on the Pool are 'maya', 'vray', '3dsmax', 'arnold'. An additional charge applies for each application license added to the Pool.
  syntax:
    content: public PoolSpecification withApplicationLicenses(List<String> applicationLicenses)
    parameters:
    - id: applicationLicenses
      type: java.util.List<java.lang.String>
      description: the applicationLicenses value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  id: withApplicationPackageReferences(java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: PoolSpecification.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationPackageReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set changes to Package references affect all new Nodes joining the Pool, but do not affect Compute Nodes that are already in the Pool until they are rebooted or reimaged. There is a maximum of 10 Package references on any given Pool.
  syntax:
    content: public PoolSpecification withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
    parameters:
    - id: applicationPackageReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
      description: the applicationPackageReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleEvaluationInterval(org.joda.time.Period)
  id: withAutoScaleEvaluationInterval(org.joda.time.Period)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  nameWithType: PoolSpecification.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleEvaluationInterval*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the default value is 15 minutes. The minimum and maximum value are 5 minutes and 168 hours respectively. If you specify a value less than 5 minutes or greater than 168 hours, the Batch service rejects the request with an invalid property value error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public PoolSpecification withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
    parameters:
    - id: autoScaleEvaluationInterval
      type: org.joda.time.Period
      description: the autoScaleEvaluationInterval value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleFormula(java.lang.String)
  id: withAutoScaleFormula(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withAutoScaleFormula(String autoScaleFormula)
  nameWithType: PoolSpecification.withAutoScaleFormula(String autoScaleFormula)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleFormula(String autoScaleFormula)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleFormula*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property must not be specified if enableAutoScale is set to false. It is required if enableAutoScale is set to true. The formula is checked for validity before the Pool is created. If the formula is not valid, the Batch service rejects the request with detailed error information.
  syntax:
    content: public PoolSpecification withAutoScaleFormula(String autoScaleFormula)
    parameters:
    - id: autoScaleFormula
      type: java.lang.String
      description: the autoScaleFormula value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  id: withCertificateReferences(java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withCertificateReferences(List<CertificateReference> certificateReferences)
  nameWithType: PoolSpecification.withCertificateReferences(List<CertificateReference> certificateReferences)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCertificateReferences(List<CertificateReference> certificateReferences)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCertificateReferences*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for Windows Nodes, the Batch service installs the Certificates to the specified Certificate store and location. For Linux Compute Nodes, the Certificates are stored in a directory inside the Task working directory and an environment variable AZ\_BATCH\_CERTIFICATES\_DIR is supplied to the Task to query for this location. For Certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/\{user-name\}/certs) and Certificates are placed in that directory.
  syntax:
    content: public PoolSpecification withCertificateReferences(List<CertificateReference> certificateReferences)
    parameters:
    - id: certificateReferences
      type: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
      description: the certificateReferences value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCloudServiceConfiguration(com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration)
  id: withCloudServiceConfiguration(com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  nameWithType: PoolSpecification.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCloudServiceConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property must be specified if the Pool needs to be created with Azure PaaS VMs. This property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. If neither is specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). This property cannot be specified if the Batch Account was created with its poolAllocationMode property set to 'UserSubscription'.
  syntax:
    content: public PoolSpecification withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
    parameters:
    - id: cloudServiceConfiguration
      type: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
      description: the cloudServiceConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withDisplayName(java.lang.String)
  id: withDisplayName(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withDisplayName(String displayName)
  nameWithType: PoolSpecification.withDisplayName(String displayName)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withDisplayName(String displayName)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withDisplayName*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
  syntax:
    content: public PoolSpecification withDisplayName(String displayName)
    parameters:
    - id: displayName
      type: java.lang.String
      description: the displayName value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableAutoScale(java.lang.Boolean)
  id: withEnableAutoScale(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withEnableAutoScale(Boolean enableAutoScale)
  nameWithType: PoolSpecification.withEnableAutoScale(Boolean enableAutoScale)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableAutoScale(Boolean enableAutoScale)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableAutoScale*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula element is required. The Pool automatically resizes according to the formula. The default value is false.
  syntax:
    content: public PoolSpecification withEnableAutoScale(Boolean enableAutoScale)
    parameters:
    - id: enableAutoScale
      type: java.lang.Boolean
      description: the enableAutoScale value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableInterNodeCommunication(java.lang.Boolean)
  id: withEnableInterNodeCommunication(java.lang.Boolean)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  nameWithType: PoolSpecification.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableInterNodeCommunication*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set enabling inter-node communication limits the maximum size of the Pool due to deployment restrictions on the Compute Nodes of the Pool. This may result in the Pool not reaching its desired size. The default value is false.
  syntax:
    content: public PoolSpecification withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
    parameters:
    - id: enableInterNodeCommunication
      type: java.lang.Boolean
      description: the enableInterNodeCommunication value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMaxTasksPerNode(java.lang.Integer)
  id: withMaxTasksPerNode(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withMaxTasksPerNode(Integer maxTasksPerNode)
  nameWithType: PoolSpecification.withMaxTasksPerNode(Integer maxTasksPerNode)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMaxTasksPerNode(Integer maxTasksPerNode)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMaxTasksPerNode*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the Pool or 256.
  syntax:
    content: public PoolSpecification withMaxTasksPerNode(Integer maxTasksPerNode)
    parameters:
    - id: maxTasksPerNode
      type: java.lang.Integer
      description: the maxTasksPerNode value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  id: withMetadata(java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: PoolSpecification.withMetadata(List<MetadataItem> metadata)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMetadata(List<MetadataItem> metadata)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMetadata*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the Batch service does not assign any meaning to metadata; it is solely for the use of user code.
  syntax:
    content: public PoolSpecification withMetadata(List<MetadataItem> metadata)
    parameters:
    - id: metadata
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
      description: the metadata value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMountConfiguration(java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>)
  id: withMountConfiguration(java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withMountConfiguration(List<MountConfiguration> mountConfiguration)
  nameWithType: PoolSpecification.withMountConfiguration(List<MountConfiguration> mountConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMountConfiguration(List<MountConfiguration> mountConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMountConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
  syntax:
    content: public PoolSpecification withMountConfiguration(List<MountConfiguration> mountConfiguration)
    parameters:
    - id: mountConfiguration
      type: java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>
      description: the mountConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.NetworkConfiguration)
  id: withNetworkConfiguration(com.microsoft.azure.batch.protocol.models.NetworkConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  nameWithType: PoolSpecification.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withNetworkConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the networkConfiguration value.
  syntax:
    content: public PoolSpecification withNetworkConfiguration(NetworkConfiguration networkConfiguration)
    parameters:
    - id: networkConfiguration
      type: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
      description: the networkConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withResizeTimeout(org.joda.time.Period)
  id: withResizeTimeout(org.joda.time.Period)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withResizeTimeout(Period resizeTimeout)
  nameWithType: PoolSpecification.withResizeTimeout(Period resizeTimeout)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withResizeTimeout(Period resizeTimeout)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withResizeTimeout*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this timeout applies only to manual scaling; it has no effect when enableAutoScale is set to true. The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public PoolSpecification withResizeTimeout(Period resizeTimeout)
    parameters:
    - id: resizeTimeout
      type: org.joda.time.Period
      description: the resizeTimeout value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  id: withStartTask(com.microsoft.azure.batch.protocol.models.StartTask)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withStartTask(StartTask startTask)
  nameWithType: PoolSpecification.withStartTask(StartTask startTask)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withStartTask(StartTask startTask)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withStartTask*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the startTask value.
  syntax:
    content: public PoolSpecification withStartTask(StartTask startTask)
    parameters:
    - id: startTask
      type: com.microsoft.azure.batch.protocol.models.StartTask
      description: the startTask value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetDedicatedNodes(java.lang.Integer)
  id: withTargetDedicatedNodes(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withTargetDedicatedNodes(Integer targetDedicatedNodes)
  nameWithType: PoolSpecification.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetDedicatedNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.
  syntax:
    content: public PoolSpecification withTargetDedicatedNodes(Integer targetDedicatedNodes)
    parameters:
    - id: targetDedicatedNodes
      type: java.lang.Integer
      description: the targetDedicatedNodes value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetLowPriorityNodes(java.lang.Integer)
  id: withTargetLowPriorityNodes(java.lang.Integer)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  nameWithType: PoolSpecification.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetLowPriorityNodes*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property must not be specified if enableAutoScale is set to true. If enableAutoScale is set to false, then you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.
  syntax:
    content: public PoolSpecification withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
    parameters:
    - id: targetLowPriorityNodes
      type: java.lang.Integer
      description: the targetLowPriorityNodes value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTaskSchedulingPolicy(com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy)
  id: withTaskSchedulingPolicy(com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  nameWithType: PoolSpecification.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTaskSchedulingPolicy*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set if not specified, the default is spread.
  syntax:
    content: public PoolSpecification withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
    parameters:
    - id: taskSchedulingPolicy
      type: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
      description: the taskSchedulingPolicy value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withUserAccounts(java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>)
  id: withUserAccounts(java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withUserAccounts(List<UserAccount> userAccounts)
  nameWithType: PoolSpecification.withUserAccounts(List<UserAccount> userAccounts)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withUserAccounts(List<UserAccount> userAccounts)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withUserAccounts*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set the userAccounts value.
  syntax:
    content: public PoolSpecification withUserAccounts(List<UserAccount> userAccounts)
    parameters:
    - id: userAccounts
      type: java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>
      description: the userAccounts value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVirtualMachineConfiguration(com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration)
  id: withVirtualMachineConfiguration(com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  nameWithType: PoolSpecification.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVirtualMachineConfiguration*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set this property must be specified if the Pool needs to be created with Azure IaaS VMs. This property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified. If neither is specified then the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
  syntax:
    content: public PoolSpecification withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
    parameters:
    - id: virtualMachineConfiguration
      type: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
      description: the virtualMachineConfiguration value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVmSize(java.lang.String)
  id: withVmSize(java.lang.String)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PoolSpecification
  langs:
  - java
  name: withVmSize(String vmSize)
  nameWithType: PoolSpecification.withVmSize(String vmSize)
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVmSize(String vmSize)
  overload: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVmSize*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: Set for information about available sizes of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
  syntax:
    content: public PoolSpecification withVmSize(String vmSize)
    parameters:
    - id: vmSize
      type: java.lang.String
      description: the vmSize value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PoolSpecification
      description: the PoolSpecification object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.PoolSpecification*
  name: PoolSpecification
  nameWithType: PoolSpecification.PoolSpecification
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.PoolSpecification
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.displayName*
  name: displayName
  nameWithType: PoolSpecification.displayName
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.displayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withDisplayName*
  name: withDisplayName
  nameWithType: PoolSpecification.withDisplayName
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withDisplayName
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.vmSize*
  name: vmSize
  nameWithType: PoolSpecification.vmSize
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.vmSize
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVmSize*
  name: withVmSize
  nameWithType: PoolSpecification.withVmSize
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVmSize
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
  name: CloudServiceConfiguration
  nameWithType: CloudServiceConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.cloudServiceConfiguration*
  name: cloudServiceConfiguration
  nameWithType: PoolSpecification.cloudServiceConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.cloudServiceConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCloudServiceConfiguration*
  name: withCloudServiceConfiguration
  nameWithType: PoolSpecification.withCloudServiceConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCloudServiceConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
  name: VirtualMachineConfiguration
  nameWithType: VirtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.virtualMachineConfiguration*
  name: virtualMachineConfiguration
  nameWithType: PoolSpecification.virtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.virtualMachineConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVirtualMachineConfiguration*
  name: withVirtualMachineConfiguration
  nameWithType: PoolSpecification.withVirtualMachineConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withVirtualMachineConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Integer
  spec.java:
  - uid: java.lang.Integer
    name: Integer
    fullName: java.lang.Integer
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.maxTasksPerNode*
  name: maxTasksPerNode
  nameWithType: PoolSpecification.maxTasksPerNode
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.maxTasksPerNode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMaxTasksPerNode*
  name: withMaxTasksPerNode
  nameWithType: PoolSpecification.withMaxTasksPerNode
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMaxTasksPerNode
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
  name: TaskSchedulingPolicy
  nameWithType: TaskSchedulingPolicy
  fullName: com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.taskSchedulingPolicy*
  name: taskSchedulingPolicy
  nameWithType: PoolSpecification.taskSchedulingPolicy
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.taskSchedulingPolicy
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTaskSchedulingPolicy*
  name: withTaskSchedulingPolicy
  nameWithType: PoolSpecification.withTaskSchedulingPolicy
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTaskSchedulingPolicy
  package: com.microsoft.azure.batch.protocol.models
- uid: org.joda.time.Period
  spec.java:
  - uid: org.joda.time.Period
    name: Period
    fullName: org.joda.time.Period
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.resizeTimeout*
  name: resizeTimeout
  nameWithType: PoolSpecification.resizeTimeout
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.resizeTimeout
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withResizeTimeout*
  name: withResizeTimeout
  nameWithType: PoolSpecification.withResizeTimeout
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withResizeTimeout
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetDedicatedNodes*
  name: targetDedicatedNodes
  nameWithType: PoolSpecification.targetDedicatedNodes
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetDedicatedNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetDedicatedNodes*
  name: withTargetDedicatedNodes
  nameWithType: PoolSpecification.withTargetDedicatedNodes
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetDedicatedNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetLowPriorityNodes*
  name: targetLowPriorityNodes
  nameWithType: PoolSpecification.targetLowPriorityNodes
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.targetLowPriorityNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetLowPriorityNodes*
  name: withTargetLowPriorityNodes
  nameWithType: PoolSpecification.withTargetLowPriorityNodes
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withTargetLowPriorityNodes
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Boolean
  spec.java:
  - uid: java.lang.Boolean
    name: Boolean
    fullName: java.lang.Boolean
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableAutoScale*
  name: enableAutoScale
  nameWithType: PoolSpecification.enableAutoScale
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableAutoScale
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableAutoScale*
  name: withEnableAutoScale
  nameWithType: PoolSpecification.withEnableAutoScale
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableAutoScale
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleFormula*
  name: autoScaleFormula
  nameWithType: PoolSpecification.autoScaleFormula
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleFormula
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleFormula*
  name: withAutoScaleFormula
  nameWithType: PoolSpecification.withAutoScaleFormula
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleFormula
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleEvaluationInterval*
  name: autoScaleEvaluationInterval
  nameWithType: PoolSpecification.autoScaleEvaluationInterval
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.autoScaleEvaluationInterval
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleEvaluationInterval*
  name: withAutoScaleEvaluationInterval
  nameWithType: PoolSpecification.withAutoScaleEvaluationInterval
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withAutoScaleEvaluationInterval
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableInterNodeCommunication*
  name: enableInterNodeCommunication
  nameWithType: PoolSpecification.enableInterNodeCommunication
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.enableInterNodeCommunication
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableInterNodeCommunication*
  name: withEnableInterNodeCommunication
  nameWithType: PoolSpecification.withEnableInterNodeCommunication
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withEnableInterNodeCommunication
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
  name: NetworkConfiguration
  nameWithType: NetworkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.NetworkConfiguration
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.networkConfiguration*
  name: networkConfiguration
  nameWithType: PoolSpecification.networkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.networkConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withNetworkConfiguration*
  name: withNetworkConfiguration
  nameWithType: PoolSpecification.withNetworkConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withNetworkConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.StartTask
  name: StartTask
  nameWithType: StartTask
  fullName: com.microsoft.azure.batch.protocol.models.StartTask
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.startTask*
  name: startTask
  nameWithType: PoolSpecification.startTask
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.startTask
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withStartTask*
  name: withStartTask
  nameWithType: PoolSpecification.withStartTask
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withStartTask
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.CertificateReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.CertificateReference
    name: CertificateReference
    fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.certificateReferences*
  name: certificateReferences
  nameWithType: PoolSpecification.certificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.certificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCertificateReferences*
  name: withCertificateReferences
  nameWithType: PoolSpecification.withCertificateReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withCertificateReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.ApplicationPackageReference>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
    name: ApplicationPackageReference
    fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationPackageReferences*
  name: applicationPackageReferences
  nameWithType: PoolSpecification.applicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationPackageReferences*
  name: withApplicationPackageReferences
  nameWithType: PoolSpecification.withApplicationPackageReferences
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationPackageReferences
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationLicenses*
  name: applicationLicenses
  nameWithType: PoolSpecification.applicationLicenses
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.applicationLicenses
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses*
  name: withApplicationLicenses
  nameWithType: PoolSpecification.withApplicationLicenses
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withApplicationLicenses
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.UserAccount>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.UserAccount
    name: UserAccount
    fullName: com.microsoft.azure.batch.protocol.models.UserAccount
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.userAccounts*
  name: userAccounts
  nameWithType: PoolSpecification.userAccounts
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.userAccounts
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withUserAccounts*
  name: withUserAccounts
  nameWithType: PoolSpecification.withUserAccounts
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withUserAccounts
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MetadataItem>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MetadataItem
    name: MetadataItem
    fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.metadata*
  name: metadata
  nameWithType: PoolSpecification.metadata
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.metadata
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMetadata*
  name: withMetadata
  nameWithType: PoolSpecification.withMetadata
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMetadata
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<com.microsoft.azure.batch.protocol.models.MountConfiguration>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: com.microsoft.azure.batch.protocol.models.MountConfiguration
    name: MountConfiguration
    fullName: com.microsoft.azure.batch.protocol.models.MountConfiguration
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.mountConfiguration*
  name: mountConfiguration
  nameWithType: PoolSpecification.mountConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.mountConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMountConfiguration*
  name: withMountConfiguration
  nameWithType: PoolSpecification.withMountConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PoolSpecification.withMountConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: com.microsoft.azure.batch.protocol.models.CertificateReference
  name: CertificateReference
  nameWithType: CertificateReference
  fullName: com.microsoft.azure.batch.protocol.models.CertificateReference
- uid: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
  name: ApplicationPackageReference
  nameWithType: ApplicationPackageReference
  fullName: com.microsoft.azure.batch.protocol.models.ApplicationPackageReference
- uid: com.microsoft.azure.batch.protocol.models.UserAccount
  name: UserAccount
  nameWithType: UserAccount
  fullName: com.microsoft.azure.batch.protocol.models.UserAccount
- uid: com.microsoft.azure.batch.protocol.models.MetadataItem
  name: MetadataItem
  nameWithType: MetadataItem
  fullName: com.microsoft.azure.batch.protocol.models.MetadataItem
- uid: com.microsoft.azure.batch.protocol.models.MountConfiguration
  name: MountConfiguration
  nameWithType: MountConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.MountConfiguration
