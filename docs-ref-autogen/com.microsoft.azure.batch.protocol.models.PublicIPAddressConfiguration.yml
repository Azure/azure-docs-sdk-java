### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
  id: PublicIPAddressConfiguration
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models
  children:
  - com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.PublicIPAddressConfiguration()
  - com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.ipAddressIds()
  - com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.provision()
  - com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withIpAddressIds(java.util.List<java.lang.String>)
  - com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withProvision(com.microsoft.azure.batch.protocol.models.IPAddressProvisioningType)
  langs:
  - java
  name: PublicIPAddressConfiguration
  nameWithType: PublicIPAddressConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
  type: Class
  package: com.microsoft.azure.batch.protocol.models
  summary: The public IP Address configuration of the networking configuration of a Pool.
  syntax:
    content: public class PublicIPAddressConfiguration
  inheritance:
  - java.lang.Object
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.toString()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.PublicIPAddressConfiguration()
  id: PublicIPAddressConfiguration()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
  langs:
  - java
  name: PublicIPAddressConfiguration()
  nameWithType: PublicIPAddressConfiguration.PublicIPAddressConfiguration()
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.PublicIPAddressConfiguration()
  overload: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.PublicIPAddressConfiguration*
  type: Constructor
  package: com.microsoft.azure.batch.protocol.models
  syntax:
    content: public PublicIPAddressConfiguration()
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.ipAddressIds()
  id: ipAddressIds()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
  langs:
  - java
  name: ipAddressIds()
  nameWithType: PublicIPAddressConfiguration.ipAddressIds()
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.ipAddressIds()
  overload: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.ipAddressIds*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: 'Get the number of IPs specified here limits the maximum size of the Pool - 50 dedicated nodes or 20 low-priority nodes can be allocated for each public IP. For example, a pool needing 150 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/\{subscription\}/resourceGroups/\{group\}/providers/Microsoft.Network/publicIPAddresses/\{ip\}.'
  syntax:
    content: public List<String> ipAddressIds()
    return:
      type: java.util.List<java.lang.String>
      description: the ipAddressIds value
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.provision()
  id: provision()
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
  langs:
  - java
  name: provision()
  nameWithType: PublicIPAddressConfiguration.provision()
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.provision()
  overload: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.provision*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Get the default value is BatchManaged. Possible values include: 'batchManaged', 'userManaged', 'noPublicIPAddresses'."
  syntax:
    content: public IPAddressProvisioningType provision()
    return:
      type: com.microsoft.azure.batch.protocol.models.IPAddressProvisioningType
      description: the provision value
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withIpAddressIds(java.util.List<java.lang.String>)
  id: withIpAddressIds(java.util.List<java.lang.String>)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
  langs:
  - java
  name: withIpAddressIds(List<String> ipAddressIds)
  nameWithType: PublicIPAddressConfiguration.withIpAddressIds(List<String> ipAddressIds)
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withIpAddressIds(List<String> ipAddressIds)
  overload: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withIpAddressIds*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: 'Set the number of IPs specified here limits the maximum size of the Pool - 50 dedicated nodes or 20 low-priority nodes can be allocated for each public IP. For example, a pool needing 150 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/\{subscription\}/resourceGroups/\{group\}/providers/Microsoft.Network/publicIPAddresses/\{ip\}.'
  syntax:
    content: public PublicIPAddressConfiguration withIpAddressIds(List<String> ipAddressIds)
    parameters:
    - id: ipAddressIds
      type: java.util.List<java.lang.String>
      description: the ipAddressIds value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
      description: the PublicIPAddressConfiguration object itself.
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withProvision(com.microsoft.azure.batch.protocol.models.IPAddressProvisioningType)
  id: withProvision(com.microsoft.azure.batch.protocol.models.IPAddressProvisioningType)
  artifact: com.microsoft.azure:azure-batch:8.0.0
  parent: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
  langs:
  - java
  name: withProvision(IPAddressProvisioningType provision)
  nameWithType: PublicIPAddressConfiguration.withProvision(IPAddressProvisioningType provision)
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withProvision(IPAddressProvisioningType provision)
  overload: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withProvision*
  type: Method
  package: com.microsoft.azure.batch.protocol.models
  summary: "Set the default value is BatchManaged. Possible values include: 'batchManaged', 'userManaged', 'noPublicIPAddresses'."
  syntax:
    content: public PublicIPAddressConfiguration withProvision(IPAddressProvisioningType provision)
    parameters:
    - id: provision
      type: com.microsoft.azure.batch.protocol.models.IPAddressProvisioningType
      description: the provision value to set
    return:
      type: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration
      description: the PublicIPAddressConfiguration object itself.
references:
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.PublicIPAddressConfiguration*
  name: PublicIPAddressConfiguration
  nameWithType: PublicIPAddressConfiguration.PublicIPAddressConfiguration
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.PublicIPAddressConfiguration
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.IPAddressProvisioningType
  name: IPAddressProvisioningType
  nameWithType: IPAddressProvisioningType
  fullName: com.microsoft.azure.batch.protocol.models.IPAddressProvisioningType
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.provision*
  name: provision
  nameWithType: PublicIPAddressConfiguration.provision
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.provision
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withProvision*
  name: withProvision
  nameWithType: PublicIPAddressConfiguration.withProvision
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withProvision
  package: com.microsoft.azure.batch.protocol.models
- uid: java.util.List<java.lang.String>
  spec.java:
  - uid: java.util.List
    name: List
    fullName: java.util.List
  - name: <
    fullName: <
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.ipAddressIds*
  name: ipAddressIds
  nameWithType: PublicIPAddressConfiguration.ipAddressIds
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.ipAddressIds
  package: com.microsoft.azure.batch.protocol.models
- uid: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withIpAddressIds*
  name: withIpAddressIds
  nameWithType: PublicIPAddressConfiguration.withIpAddressIds
  fullName: com.microsoft.azure.batch.protocol.models.PublicIPAddressConfiguration.withIpAddressIds
  package: com.microsoft.azure.batch.protocol.models
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Object.toString()
  name: Object.toString()
  nameWithType: Object.toString()
  fullName: java.lang.Object.toString()
- uid: java.util.List
  name: List
  nameWithType: List
  fullName: java.util.List
- uid: java.lang.String
  name: String
  nameWithType: String
  fullName: java.lang.String
