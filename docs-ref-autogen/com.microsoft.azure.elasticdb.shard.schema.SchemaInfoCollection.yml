### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.SchemaInfoCollection(ShardMapManager shardMapManager)
  name: SchemaInfoCollection(ShardMapManager shardMapManager)
  nameWithType: SchemaInfoCollection.SchemaInfoCollection(ShardMapManager shardMapManager)
  parameters:
  - description: <p>Shard map manager object. </p>
    name: shardMapManager
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager?alt=com.microsoft.azure.elasticdb.shard.mapmanager.ShardMapManager&text=ShardMapManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructs an instance of schema info collection.</p>

    <p></p>
  syntax: public SchemaInfoCollection(ShardMapManager shardMapManager)
  uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.SchemaInfoCollection(ShardMapManager)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.util.ArrayList&lt;Map.Entry&lt;String, SchemaInfo&gt;&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.add(String shardMapName, SchemaInfo schemaInfo)
  name: add(String shardMapName, SchemaInfo schemaInfo)
  nameWithType: SchemaInfoCollection.add(String shardMapName, SchemaInfo schemaInfo)
  parameters:
  - description: <p>The name of the ShardMap that the <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> will be associated with </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Sharding schema information. </p>
    name: schemaInfo
    type: <xref href="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo?alt=com.microsoft.azure.elasticdb.shard.schema.SchemaInfo&text=SchemaInfo" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds a <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> that is associated with the given ShardMap name. The associated data contains information concerning sharded tables and reference tables. If you try to add a <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> with an existing name, a name-conflict exception will be thrown</p>

    <p></p>
  syntax: public final void add(String shardMapName, SchemaInfo schemaInfo)
  uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.add(String,SchemaInfo)
- fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.get(String shardMapName)
  name: get(String shardMapName)
  nameWithType: SchemaInfoCollection.get(String shardMapName)
  parameters:
  - description: <p>The name of the ShardMap to get. </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>SchemaInfo object. </p>
    type: final <xref href="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo?alt=com.microsoft.azure.elasticdb.shard.schema.SchemaInfo&text=SchemaInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Fetches the <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> stored with the supplied ShardMap name.</p>

    <p></p>
  syntax: public final SchemaInfo get(String shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.get(String)
- fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.iterator()
  name: iterator()
  nameWithType: SchemaInfoCollection.iterator()
  returns:
    description: <p>Enumerator of key-value pairs of name and <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> objects. </p>
    type: final Iterator&lt;Map.Entry&lt;String, <xref href="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo?alt=com.microsoft.azure.elasticdb.shard.schema.SchemaInfo&text=SchemaInfo" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Returns an enumerator that iterates through the <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection" data-throw-if-not-resolved="false" data-raw-source="SchemaInfoCollection"></xref>.</p>

    <p></p>
  syntax: public final Iterator<Map.Entry<String, SchemaInfo>> iterator()
  uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.iterator()
- fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.remove(String shardMapName)
  name: remove(String shardMapName)
  nameWithType: SchemaInfoCollection.remove(String shardMapName)
  parameters:
  - description: <p>The name of the ShardMap whose <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> will be removed </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Removes the <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> with the given ShardMap name.</p>

    <p></p>
  syntax: public final void remove(String shardMapName)
  uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.remove(String)
- fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.replace(String shardMapName, SchemaInfo schemaInfo)
  name: replace(String shardMapName, SchemaInfo schemaInfo)
  nameWithType: SchemaInfoCollection.replace(String shardMapName, SchemaInfo schemaInfo)
  parameters:
  - description: <p>The name of the ShardMap whose <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> will be replaced. </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Sharding schema information. </p>
    name: schemaInfo
    type: <xref href="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo?alt=com.microsoft.azure.elasticdb.shard.schema.SchemaInfo&text=SchemaInfo" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Replaces the <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> with the given ShardMap name.</p>

    <p></p>
  syntax: public final void replace(String shardMapName, SchemaInfo schemaInfo)
  uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.replace(String,SchemaInfo)
- fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.tryGet(String shardMapName, ReferenceObjectHelper<SchemaInfo> schemaInfo)
  name: tryGet(String shardMapName, ReferenceObjectHelper<SchemaInfo> schemaInfo)
  nameWithType: SchemaInfoCollection.tryGet(String shardMapName, ReferenceObjectHelper<SchemaInfo> schemaInfo)
  parameters:
  - description: <p>The name of the ShardMap whose <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> will be fetched </p>
    name: shardMapName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> that was fetched or null if retrieval failed </p>
    name: schemaInfo
    type: ReferenceObjectHelper&lt;<xref href="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo?alt=com.microsoft.azure.elasticdb.shard.schema.SchemaInfo&text=SchemaInfo" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>true if schema info exists with given name, false otherwise. </p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Tries to fetch the <xref uid="com.microsoft.azure.elasticdb.shard.schema.SchemaInfo" data-throw-if-not-resolved="false" data-raw-source="SchemaInfo"></xref> with the given ShardMap name without raising any exception if data doesn't exist.</p>

    <p></p>
  syntax: public final boolean tryGet(String shardMapName, ReferenceObjectHelper<SchemaInfo> schemaInfo)
  uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection.tryGet(String,ReferenceObjectHelper<SchemaInfo>)
nameWithType: SchemaInfoCollection
syntax: public class SchemaInfoCollection
type: class
uid: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection
fullName: com.microsoft.azure.elasticdb.shard.schema.SchemaInfoCollection
name: SchemaInfoCollection
package: com.microsoft.azure.elasticdb.shard.schema
summary: <p>Provides storage services to a client for storing or updating or retrieving schema information associated with a sharding scheme and assigning names to individual buckets of information. The class doesn't store the association between a sharding scheme and the metadata unit. It's the caller's responsibility to maintain the mapping. </p>
metadata: {}
