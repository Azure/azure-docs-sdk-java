### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.Update
  id: Update
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.Update.yml
  langs:
  - java
  name: LoadBalancerInboundNatRule.Update
  nameWithType: LoadBalancerInboundNatRule.Update
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.Update
  type: Interface
  source:
    remote:
      path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/LoadBalancerInboundNatRule.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/LoadBalancerInboundNatRule.java
    startLine: 191
  package: com.microsoft.azure.management.network
  summary: "<p>The entirety of an inbound NAT rule update as part of a load balancer update. </p>"
  syntax:
    content: public interface Update extends Settable<LoadBalancer.Update>,LoadBalancerInboundNatRule.UpdateStages.WithBackendPort,LoadBalancerInboundNatRule.UpdateStages.WithFloatingIP,LoadBalancerInboundNatRule.UpdateStages.WithFrontend,LoadBalancerInboundNatRule.UpdateStages.WithFrontendPort,LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout,LoadBalancerInboundNatRule.UpdateStages.WithProtocol
  inheritedMembers:
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateStages.WithFrontend.fromFrontend(String)
  - com.microsoft.azure.management.network.model.HasFrontendPort.UpdateStages.WithFrontendPort.fromFrontendPort(int)
  - com.microsoft.azure.management.resources.fluentcore.model.Settable.parent()
  - com.microsoft.azure.management.network.model.HasBackendPort.UpdateStages.WithBackendPort.toBackendPort(int)
  - com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.withFloatingIP(boolean)
  - com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.withFloatingIPDisabled()
  - com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.withFloatingIPEnabled()
  - com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout.withIdleTimeoutInMinutes(int)
  - com.microsoft.azure.management.network.model.HasProtocol.UpdateStages.WithProtocol.withProtocol(ProtocolT)
references:
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateStages.WithFrontend.fromFrontend(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateStages.WithFrontend.yml
  name: fromFrontend(String frontendName)
  nameWithType: HasFrontend.UpdateStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  type: Method
  summary: "<p>Specifies the frontend. </p>"
  syntax:
    content: public ReturnT fromFrontend(String frontendName)
    parameters:
    - id: frontendName
      type: "26831127"
      description: <p>an existing frontend name from this load balancer </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the update </p>
- uid: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateStages.WithFrontendPort.fromFrontendPort(int)
  parent: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateStages.WithFrontendPort
  href: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateStages.WithFrontendPort.yml
  name: fromFrontendPort(int port)
  nameWithType: HasFrontendPort.UpdateStages.WithFrontendPort<ReturnT>.fromFrontendPort(int port)
  fullName: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateStages.WithFrontendPort<ReturnT>.fromFrontendPort(int port)
  type: Method
  summary: "<p>Specifies the frontend port to receive network traffic on. </p>"
  syntax:
    content: public ReturnT fromFrontendPort(int port)
    parameters:
    - id: port
      type: f75371fa
      description: <p>a port number </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Settable.parent()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Settable
  href: com.microsoft.azure.management.resources.fluentcore.model.Settable.yml
  name: parent()
  nameWithType: Settable<ParentT>.parent()
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Settable<ParentT>.parent()
  type: Method
  summary: "<p>Begins an update for a child resource. </p>\r\n<p>This is the beginning of the builder pattern used to update child resources The final method completing the update and continue the actual parent resource update process in Azure is <xref uid=\"com.microsoft.azure.management.resources.fluentcore.model.Settable.parent()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Settable#parent()\"></xref>.</p>\r\n<p></p>"
  syntax:
    content: public ParentT parent()
    return:
      type: 18a275b1
      description: <p>the stage of parent resource update </p>
- uid: com.microsoft.azure.management.network.model.HasBackendPort.UpdateStages.WithBackendPort.toBackendPort(int)
  parent: com.microsoft.azure.management.network.model.HasBackendPort.UpdateStages.WithBackendPort
  href: com.microsoft.azure.management.network.model.HasBackendPort.UpdateStages.WithBackendPort.yml
  name: toBackendPort(int port)
  nameWithType: HasBackendPort.UpdateStages.WithBackendPort<ReturnT>.toBackendPort(int port)
  fullName: com.microsoft.azure.management.network.model.HasBackendPort.UpdateStages.WithBackendPort<ReturnT>.toBackendPort(int port)
  type: Method
  summary: "<p>Specifies a backend port to send network traffic to. </p>"
  syntax:
    content: public ReturnT toBackendPort(int port)
    parameters:
    - id: port
      type: f75371fa
      description: <p>a port number </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the update </p>
- uid: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.withFloatingIP(boolean)
  parent: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP
  href: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.yml
  name: withFloatingIP(boolean enabled)
  nameWithType: HasFloatingIP.UpdateStages.WithFloatingIP<ReturnT>.withFloatingIP(boolean enabled)
  fullName: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP<ReturnT>.withFloatingIP(boolean enabled)
  type: Method
  summary: "<p>Sets the floating IP enablement. </p>"
  syntax:
    content: public ReturnT withFloatingIP(boolean enabled)
    parameters:
    - id: enabled
      type: 4fc6e284
      description: <p>true if floating IP should be enabled </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.withFloatingIPDisabled()
  parent: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP
  href: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.yml
  name: withFloatingIPDisabled()
  nameWithType: HasFloatingIP.UpdateStages.WithFloatingIP<ReturnT>.withFloatingIPDisabled()
  fullName: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP<ReturnT>.withFloatingIPDisabled()
  type: Method
  summary: "<p>Disables floating IP support. </p>"
  syntax:
    content: public ReturnT withFloatingIPDisabled()
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.withFloatingIPEnabled()
  parent: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP
  href: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP.yml
  name: withFloatingIPEnabled()
  nameWithType: HasFloatingIP.UpdateStages.WithFloatingIP<ReturnT>.withFloatingIPEnabled()
  fullName: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateStages.WithFloatingIP<ReturnT>.withFloatingIPEnabled()
  type: Method
  summary: "<p>Enables floating IP support. </p>"
  syntax:
    content: public ReturnT withFloatingIPEnabled()
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout.withIdleTimeoutInMinutes(int)
  parent: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout.yml
  name: withIdleTimeoutInMinutes(int minutes)
  nameWithType: LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout.withIdleTimeoutInMinutes(int minutes)
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout.withIdleTimeoutInMinutes(int minutes)
  type: Method
  summary: "<p>Specifies the idle connection timeout in minutes. </p>"
  syntax:
    content: public Update withIdleTimeoutInMinutes(int minutes)
    parameters:
    - id: minutes
      type: f75371fa
      description: <p>a number of minutes </p>
    return:
      type: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.Update
      description: <p>the next stage of the update </p>
- uid: com.microsoft.azure.management.network.model.HasProtocol.UpdateStages.WithProtocol.withProtocol(ProtocolT)
  parent: com.microsoft.azure.management.network.model.HasProtocol.UpdateStages.WithProtocol
  href: com.microsoft.azure.management.network.model.HasProtocol.UpdateStages.WithProtocol.yml
  name: withProtocol(ProtocolT protocol)
  nameWithType: HasProtocol.UpdateStages.WithProtocol<ReturnT,ProtocolT>.withProtocol(ProtocolT protocol)
  fullName: ReturnT com.microsoft.azure.management.network.model.HasProtocol<ProtocolT>.UpdateStages.WithProtocol<ReturnT, ProtocolT>.withProtocol(ProtocolT protocol)
  type: Method
  summary: "<p>Specifies the transport protocol. </p>"
  syntax:
    content: public ReturnT withProtocol(ProtocolT protocol)
    parameters:
    - id: protocol
      type: b528dcf3
      description: <p>a transport protocol </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the update </p>
- uid: com.microsoft.azure.management.resources.fluentcore.model.Settable
  parent: com.microsoft.azure.management.resources.fluentcore.model
  href: com.microsoft.azure.management.resources.fluentcore.model.Settable.yml
  name: Settable<ParentT>
  nameWithType: Settable<ParentT>
  fullName: com.microsoft.azure.management.resources.fluentcore.model.Settable<ParentT>
  type: Interface
  summary: "<p>The base interface for all template interfaces for child resources that support update operations.</p>\r\n<p></p>"
  syntax:
    content: public interface Settable<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the parent definition <xref uid="com.microsoft.azure.management.resources.fluentcore.model.Settable.parent()" data-throw-if-not-resolved="false" data-raw-source="Settable#parent()"></xref> returns to </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithBackendPort
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithBackendPort.yml
  name: LoadBalancerInboundNatRule.UpdateStages.WithBackendPort
  nameWithType: LoadBalancerInboundNatRule.UpdateStages.WithBackendPort
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithBackendPort
  type: Interface
  summary: "<p>The stage of an inbound NAT rule update allowing to specify the backend port. </p>"
  syntax:
    content: public interface WithBackendPort
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFloatingIP
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFloatingIP.yml
  name: LoadBalancerInboundNatRule.UpdateStages.WithFloatingIP
  nameWithType: LoadBalancerInboundNatRule.UpdateStages.WithFloatingIP
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFloatingIP
  type: Interface
  summary: "<p>The stage of an inbound NAT rule update allowing to specify whether floating IP should be enabled. </p>"
  syntax:
    content: public interface WithFloatingIP
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFrontend
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFrontend.yml
  name: LoadBalancerInboundNatRule.UpdateStages.WithFrontend
  nameWithType: LoadBalancerInboundNatRule.UpdateStages.WithFrontend
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFrontend
  type: Interface
  summary: "<p>The stage of an inbound NAT rule update allowing to specify a frontend for the rule to apply to. </p>"
  syntax:
    content: public interface WithFrontend
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFrontendPort
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFrontendPort.yml
  name: LoadBalancerInboundNatRule.UpdateStages.WithFrontendPort
  nameWithType: LoadBalancerInboundNatRule.UpdateStages.WithFrontendPort
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithFrontendPort
  type: Interface
  summary: "<p>The stage of an inbound NAT rule update allowing to specify the frontend port. </p>"
  syntax:
    content: public interface WithFrontendPort
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout.yml
  name: LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout
  nameWithType: LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithIdleTimeout
  type: Interface
  summary: "<p>The stage of an inbound NAT rule update allowing to specify the idle connection timeout for this inbound NAT rule. </p>"
  syntax:
    content: public interface WithIdleTimeout
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithProtocol
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithProtocol.yml
  name: LoadBalancerInboundNatRule.UpdateStages.WithProtocol
  nameWithType: LoadBalancerInboundNatRule.UpdateStages.WithProtocol
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateStages.WithProtocol
  type: Interface
  summary: "<p>The stage of an inbound NAT rule update allowing to specify the transport protocol for the rule to apply to. </p>"
  syntax:
    content: public interface WithProtocol
