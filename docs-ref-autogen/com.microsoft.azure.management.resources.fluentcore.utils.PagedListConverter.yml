### YamlMime:JavaType
uid: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter"
fullName: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter<U,V>"
name: "PagedListConverter<U,V>"
nameWithType: "PagedListConverter<U,V>"
summary: "The base class for converting <xref uid=\"com.microsoft.azure.PagedList\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedList\"></xref> of one type of resource to another, without polling down all the items in a list."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public abstract class PagedListConverter<U,V>"
constructors:
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter.PagedListConverter()"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter<U,V>.PagedListConverter()"
  name: "PagedListConverter()"
  nameWithType: "PagedListConverter<U,V>.PagedListConverter()"
  syntax: "public PagedListConverter()"
methods:
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter.convert(com.microsoft.azure.PagedList<U>)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter<U,V>.convert(PagedList<U> uList)"
  name: "convert(PagedList<U> uList)"
  nameWithType: "PagedListConverter<U,V>.convert(PagedList<U> uList)"
  summary: "Converts the paged list."
  parameters:
  - description: "the resource list to convert from"
    name: "uList"
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public PagedList<V> convert(PagedList<U> uList)"
  desc: "Converts the paged list."
  returns:
    description: "the converted list"
    type: "<xref href=\"com.microsoft.azure.PagedList?alt=com.microsoft.azure.PagedList&text=PagedList\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter.filter(U)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter<U,V>.filter(U u)"
  name: "filter(U u)"
  nameWithType: "PagedListConverter<U,V>.filter(U u)"
  summary: "Override this method to define what items should be fetched."
  modifiers:
  - "protected"
  parameters:
  - description: "an original item to test"
    name: "u"
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
  syntax: "protected boolean filter(U u)"
  desc: "Override this method to define what items should be fetched."
  returns:
    description: "true if this item should be fetched"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter.typeConvertAsync(U)"
  fullName: "com.microsoft.azure.management.resources.fluentcore.utils.PagedListConverter<U,V>.typeConvertAsync(U u)"
  name: "typeConvertAsync(U u)"
  nameWithType: "PagedListConverter<U,V>.typeConvertAsync(U u)"
  summary: "Override this method to define how to convert each Resource item individually."
  modifiers:
  - "abstract"
  parameters:
  - description: "the resource to convert from"
    name: "u"
    type: "<xref href=\"U?alt=U&text=U\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<V> typeConvertAsync(U u)"
  desc: "Override this method to define how to convert each Resource item individually."
  returns:
    description: "the converted resource"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"V?alt=V&text=V\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
typeParameters:
- description: "the type of Resource to convert from"
  name: "U"
- description: "the type of Resource to convert to"
  name: "V"
desc: "The base class for converting <xref uid=\"com.microsoft.azure.PagedList\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedList\"></xref> of one type of resource to another, without polling down all the items in a list. This converter is useful in converting inner top level resources into fluent top level resources."
metadata: {}
package: "com.microsoft.azure.management.resources.fluentcore.utils"
artifact: com.microsoft.azure:azure-mgmt-resources:1.41.4
