### YamlMime:JavaMember
nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize
type: method
members:
- fullName: system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
  name: getMaxSecondaryReplicationQueueMemorySize()
  nameWithType: ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
  returns:
    description: <p>Returns the maximum size of the secondary replication operation queue inside <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, which contains replication <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s. The unit here is the virtual memory consumption of the queue. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines the maximum size of the secondary replication operation queue inside <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, which contains replication <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s.</p>

    <p>

      <b>Remarks:</b>This setting is specific to the Replicator when the role of the service is Secondary/Idle. The default value is 0. This implies there is no memory limit </p>
  syntax: public long getMaxSecondaryReplicationQueueMemorySize()
  uid: system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
uid: system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize*
fullName: system.fabric.ReplicatorSettings.getMaxSecondaryReplicationQueueMemorySize()
name: getMaxSecondaryReplicationQueueMemorySize()
package: system.fabric
metadata: {}
