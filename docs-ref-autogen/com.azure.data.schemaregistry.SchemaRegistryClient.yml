### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.SchemaRegistryClient"
fullName: "com.azure.data.schemaregistry.SchemaRegistryClient"
name: "SchemaRegistryClient"
nameWithType: "SchemaRegistryClient"
summary: "HTTP-based client that interacts with Azure Schema Registry service to store and retrieve schemas on demand."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SchemaRegistryClient**"
methods:
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getFullyQualifiedNamespace()"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getFullyQualifiedNamespace()"
  name: "getFullyQualifiedNamespace()"
  nameWithType: "SchemaRegistryClient.getFullyQualifiedNamespace()"
  summary: "Gets the fully qualified namespace of the Schema Registry instance."
  syntax: "public String getFullyQualifiedNamespace()"
  desc: "Gets the fully qualified namespace of the Schema Registry instance."
  returns:
    description: "The fully qualified namespace of the Schema Registry instance."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(java.lang.String)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(String schemaId)"
  name: "getSchema(String schemaId)"
  nameWithType: "SchemaRegistryClient.getSchema(String schemaId)"
  summary: "Gets the schema properties of the schema associated with the unique schema id."
  parameters:
  - description: "The unique identifier of the schema."
    name: "schemaId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SchemaRegistrySchema getSchema(String schemaId)"
  desc: "Gets the schema properties of the schema associated with the unique schema id."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> associated with the given <code>schemaId</code>."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(java.lang.String,java.lang.String,int)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(String groupName, String schemaName, int schemaVersion)"
  name: "getSchema(String groupName, String schemaName, int schemaVersion)"
  nameWithType: "SchemaRegistryClient.getSchema(String groupName, String schemaName, int schemaVersion)"
  summary: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  parameters:
  - description: "Group name for the schema"
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the schema"
    name: "schemaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Version of schema"
    name: "schemaVersion"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistrySchema getSchema(String groupName, String schemaName, int schemaVersion)"
  desc: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> matching the parameters."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaProperties(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  name: "getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  nameWithType: "SchemaRegistryClient.getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  summary: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format`."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaProperties getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  desc: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format`."
  returns:
    description: "The properties for a matching schema."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaPropertiesWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  name: "getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  nameWithType: "SchemaRegistryClient.getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  summary: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format` along with its HTTP response."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to pass to the Http pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaProperties> getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  desc: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format` along with its HTTP response."
  returns:
    description: "A mono that completes with the properties for a matching schema."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(String schemaId, Context context)"
  name: "getSchemaWithResponse(String schemaId, Context context)"
  nameWithType: "SchemaRegistryClient.getSchemaWithResponse(String schemaId, Context context)"
  summary: "Gets the schema properties of the schema associated with the unique schema id."
  parameters:
  - description: "The unique identifier of the schema."
    name: "schemaId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to pass to the Http pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaRegistrySchema> getSchemaWithResponse(String schemaId, Context context)"
  desc: "Gets the schema properties of the schema associated with the unique schema id."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> associated with the given <code>schemaId</code> and its HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(java.lang.String,java.lang.String,int,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  name: "getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  nameWithType: "SchemaRegistryClient.getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  summary: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  parameters:
  - description: "Group name for the schema"
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the schema"
    name: "schemaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Version of schema"
    name: "schemaVersion"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to pass to the Http pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaRegistrySchema> getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  desc: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> matching the parameters."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  name: "registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  nameWithType: "SchemaRegistryClient.registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  summary: "Registers a new schema in the specified schema group with the given schema name."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaProperties registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  desc: "Registers a new schema in the specified schema group with the given schema name. If a schema **does not exist**does not exist with the same `groupName`, `name`, `format`, and `schemaDefinition`, it is added to the Schema Registry Instance and assigned a schema id. If a schema exists with a matching `groupName`, `name`, `format`, and `schemaDefinition`, the id of that schema is returned. If the Schema Registry instance contains an existing `groupName`, `name`, and `format` but the `schemaDefinition` is different, it is considered a new version, and schema id is assigned to it."
  returns:
    description: "The schema properties on successful registration of the schema."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  name: "registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  nameWithType: "SchemaRegistryClient.registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  summary: "Registers a new schema in the specified schema group with the given schema name."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to pass to the Http pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaProperties> registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  desc: "Registers a new schema in the specified schema group with the given schema name. If a schema **does not exist**does not exist with the same `groupName`, `name`, `format`, and `schemaDefinition`, it is added to the Schema Registry Instance and assigned a schema id. If a schema exists with a matching `groupName`, `name`, `format`, and `schemaDefinition`, the id of that schema is returned. If the Schema Registry instance contains an existing `groupName`, `name`, and `format` but the `schemaDefinition` is different, it is considered a new version, and schema id is assigned to it."
  returns:
    description: "The schema properties on successful registration of the schema."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "HTTP-based client that interacts with Azure Schema Registry service to store and retrieve schemas on demand.\n\n**Register a schema**\n\nRegistering a schema returns a unique schema id that can be used to quickly associate payloads with that schema.\n\n```java\nString schema = \"{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"TEST\\\",\\\"symbols\\\":[\\\"UNIT\\\",\\\"INTEGRATION\\\"]}\";\n SchemaProperties properties = client.registerSchema(\"{schema-group}\", \"{schema-name}\", schema,\n     SchemaFormat.AVRO);\n\n System.out.printf(\"Schema id: %s, schema format: %s%n\", properties.getId(), properties.getFormat());\n```\n\n**Get a schema**\n\n```java\nSchemaRegistrySchema schema = client.getSchema(\"{schema-id}\");\n\n System.out.printf(\"Schema id: %s, schema format: %s%n\", schema.getProperties().getId(),\n     schema.getProperties().getFormat());\n System.out.println(\"Schema contents: \" + schema.getDefinition());\n```\n\n**Get a schema's properties**\n\n```java\nString schema = \"{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"TEST\\\",\\\"symbols\\\":[\\\"UNIT\\\",\\\"INTEGRATION\\\"]}\";\n SchemaProperties properties = client.getSchemaProperties(\"{schema-group}\", \"{schema-name}\", schema,\n     SchemaFormat.AVRO);\n\n System.out.println(\"The schema id: \" + properties.getId());\n```"
metadata: {}
package: "com.azure.data.schemaregistry"
artifact: com.azure:azure-data-schemaregistry:1.3.5
