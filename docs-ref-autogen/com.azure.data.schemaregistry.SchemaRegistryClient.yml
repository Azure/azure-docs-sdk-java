### YamlMime:JavaType
uid: "com.azure.data.schemaregistry.SchemaRegistryClient"
fullName: "com.azure.data.schemaregistry.SchemaRegistryClient"
name: "SchemaRegistryClient"
nameWithType: "SchemaRegistryClient"
summary: "<xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref> is an HTTP-based client that interacts with Azure Schema Registry service to store and retrieve schemas on demand."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SchemaRegistryClient**"
methods:
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getFullyQualifiedNamespace()"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getFullyQualifiedNamespace()"
  name: "getFullyQualifiedNamespace()"
  nameWithType: "SchemaRegistryClient.getFullyQualifiedNamespace()"
  summary: "Gets the fully qualified namespace of the Schema Registry instance."
  syntax: "public String getFullyQualifiedNamespace()"
  desc: "Gets the fully qualified namespace of the Schema Registry instance."
  returns:
    description: "The fully qualified namespace of the Schema Registry instance."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(java.lang.String)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(String schemaId)"
  name: "getSchema(String schemaId)"
  nameWithType: "SchemaRegistryClient.getSchema(String schemaId)"
  summary: "Gets the schema properties of the schema associated with the unique schema id."
  parameters:
  - description: "The unique identifier of the schema."
    name: "schemaId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SchemaRegistrySchema getSchema(String schemaId)"
  desc: "Gets the schema properties of the schema associated with the unique schema id."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> associated with the given <code>schemaId</code>."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(java.lang.String,java.lang.String,int)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchema(String groupName, String schemaName, int schemaVersion)"
  name: "getSchema(String groupName, String schemaName, int schemaVersion)"
  nameWithType: "SchemaRegistryClient.getSchema(String groupName, String schemaName, int schemaVersion)"
  summary: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  parameters:
  - description: "Group name for the schema"
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the schema"
    name: "schemaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Version of schema"
    name: "schemaVersion"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaRegistrySchema getSchema(String groupName, String schemaName, int schemaVersion)"
  desc: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> matching the parameters."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaProperties(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  name: "getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  nameWithType: "SchemaRegistryClient.getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  summary: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format`."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaProperties getSchemaProperties(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  desc: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format`."
  returns:
    description: "The properties for a matching schema."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaPropertiesWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  name: "getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  nameWithType: "SchemaRegistryClient.getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  summary: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format` along with its HTTP response."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to pass to the Http pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaProperties> getSchemaPropertiesWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  desc: "Gets schema properties for a schema with matching `groupName`, `name`, `schemaDefinition`, and `format` along with its HTTP response."
  returns:
    description: "A mono that completes with the properties for a matching schema."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(java.lang.String,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(String schemaId, Context context)"
  name: "getSchemaWithResponse(String schemaId, Context context)"
  nameWithType: "SchemaRegistryClient.getSchemaWithResponse(String schemaId, Context context)"
  summary: "Gets the schema properties of the schema associated with the unique schema id."
  parameters:
  - description: "The unique identifier of the schema."
    name: "schemaId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The context to pass to the Http pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaRegistrySchema> getSchemaWithResponse(String schemaId, Context context)"
  desc: "Gets the schema properties of the schema associated with the unique schema id."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> associated with the given <code>schemaId</code> and its HTTP response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(java.lang.String,java.lang.String,int,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  name: "getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  nameWithType: "SchemaRegistryClient.getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  summary: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  parameters:
  - description: "Group name for the schema"
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the schema"
    name: "schemaName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Version of schema"
    name: "schemaVersion"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to pass to the Http pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaRegistrySchema> getSchemaWithResponse(String groupName, String schemaName, int schemaVersion, Context context)"
  desc: "Gets the schema properties of the schema associated with the group name, schema name, and schema version."
  returns:
    description: "The <xref uid=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistrySchema\"></xref> matching the parameters."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaRegistrySchema?alt=com.azure.data.schemaregistry.models.SchemaRegistrySchema&text=SchemaRegistrySchema\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  name: "registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  nameWithType: "SchemaRegistryClient.registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  summary: "Registers a new schema in the specified schema group with the given schema name."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SchemaProperties registerSchema(String groupName, String name, String schemaDefinition, SchemaFormat format)"
  desc: "Registers a new schema in the specified schema group with the given schema name. If a schema:\n\n *  **does not exist** with the same `groupName`, `name`, `format`, and `schemaDefinition`, it is added to the Schema Registry Instance and assigned a new schema id.\n *  exists with the same `groupName`, `name`, `format`, and `schemaDefinition`, the id of that existing schema is returned.\n *  exists with the same `groupName`, `name`, and `format` but the `schemaDefinition` is different, it is considered a new version. A new schema id is assigned to the schema and its schema id is returned."
  returns:
    description: "The schema properties on successful registration of the schema."
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat,com.azure.core.util.Context)"
  fullName: "com.azure.data.schemaregistry.SchemaRegistryClient.registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  name: "registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  nameWithType: "SchemaRegistryClient.registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  summary: "Registers a new schema in the specified schema group with the given schema name."
  parameters:
  - description: "The schema group."
    name: "groupName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The schema name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The string representation of the schema."
    name: "schemaDefinition"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The serialization type of this schema."
    name: "format"
    type: "<xref href=\"com.azure.data.schemaregistry.models.SchemaFormat?alt=com.azure.data.schemaregistry.models.SchemaFormat&text=SchemaFormat\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to pass to the HTTP pipeline."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SchemaProperties> registerSchemaWithResponse(String groupName, String name, String schemaDefinition, SchemaFormat format, Context context)"
  desc: "Registers a new schema in the specified schema group with the given schema name. If a schema:\n\n *  **does not exist** with the same `groupName`, `name`, `format`, and `schemaDefinition`, it is added to the Schema Registry Instance and assigned a new schema id.\n *  exists with the same `groupName`, `name`, `format`, and `schemaDefinition`, the id of that existing schema is returned.\n *  exists with the same `groupName`, `name`, and `format` but the `schemaDefinition` is different, it is considered a new version. A new schema id is assigned to the schema and its schema id is returned."
  returns:
    description: "The schema properties on successful registration of the schema."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.data.schemaregistry.models.SchemaProperties?alt=com.azure.data.schemaregistry.models.SchemaProperties&text=SchemaProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "<xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref> is an HTTP-based client that interacts with Azure Schema Registry service to store and retrieve schemas on demand. Azure Schema Registry supports multiple schema formats such as Avro, JSON, and custom formats.\n\n**Sample: Construct a <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref>**\n\nThe following code sample demonstrates the creation of the synchronous client <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaRegistryClient\"></xref>. The `fullyQualifiedNamespace` is the Event Hubs Namespace's host name. It is listed under the \"Essentials\" panel after navigating to the Event Hubs Namespace via Azure Portal. The credential used is `DefaultAzureCredential` for authentication, which is appropriate for most scenarios, including local development and production environments. Additionally, we recommend using [managed identity][] for authentication in production environments. You can find more information on different ways of authenticating and their corresponding credential types in the [Azure Identity documentation\"][Azure Identity documentation].\n\n```java\nDefaultAzureCredential azureCredential = new DefaultAzureCredentialBuilder()\n     .build();\n SchemaRegistryClient client = new SchemaRegistryClientBuilder()\n     .fullyQualifiedNamespace(\"https://<your-schema-registry-endpoint>.servicebus.windows.net\")\n     .credential(azureCredential)\n     .buildClient();\n```\n\n**Sample: Register a schema**\n\nThe following code sample demonstrates registering an Avro schema. The <xref uid=\"com.azure.data.schemaregistry.models.SchemaProperties\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaProperties\"></xref> returned contains the schema's id. This id uniquely identifies the schema and can be used to quickly associate payloads with that schema.\n\n```java\nString schema = \"{\\\"type\\\":\\\"enum\\\",\\\"name\\\":\\\"TEST\\\",\\\"symbols\\\":[\\\"UNIT\\\",\\\"INTEGRATION\\\"]}\";\n SchemaProperties properties = client.registerSchema(\"{schema-group}\", \"{schema-name}\", schema,\n     SchemaFormat.AVRO);\n\n System.out.printf(\"Schema id: %s, schema format: %s%n\", properties.getId(), properties.getFormat());\n```\n\n**Sample: Getting the schema using a schema id**\n\nThe following code sample demonstrates how to fetch a schema using its schema id. The schema id can be found in <xref uid=\"com.azure.data.schemaregistry.models.SchemaProperties.getId()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SchemaProperties#getId()\"></xref> when a schema is registered or using <xref uid=\"com.azure.data.schemaregistry.SchemaRegistryClient.getSchemaProperties(java.lang.String,java.lang.String,java.lang.String,com.azure.data.schemaregistry.models.SchemaFormat)\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getSchemaProperties(String, String, String, SchemaFormat)\"></xref>.\n\n```java\nSchemaRegistrySchema schema = client.getSchema(\"{schema-id}\");\n\n System.out.printf(\"Schema id: %s, schema format: %s%n\", schema.getProperties().getId(),\n     schema.getProperties().getFormat());\n System.out.println(\"Schema contents: \" + schema.getDefinition());\n```\n\n**Sample: Get a schema's properties**\n\nThe following code sample demonstrates how to get a schema's properties given its schema contents. Fetching schema properties is useful in cases where developers want to get the unique schema id.\n\n```java\nString schemaContent = \"{\\n\"\n     + \"    \\\"type\\\" : \\\"record\\\",  \\n\"\n     + \"    \\\"namespace\\\" : \\\"SampleSchemaNameSpace\\\", \\n\"\n     + \"    \\\"name\\\" : \\\"Person\\\", \\n\"\n     + \"    \\\"fields\\\" : [\\n\"\n     + \"        { \\n\"\n     + \"            \\\"name\\\" : \\\"FirstName\\\" , \\\"type\\\" : \\\"string\\\" \\n\"\n     + \"        }, \\n\"\n     + \"        { \\n\"\n     + \"            \\\"name\\\" : \\\"LastName\\\", \\\"type\\\" : \\\"string\\\" \\n\"\n     + \"        }\\n\"\n     + \"    ]\\n\"\n     + \"}\";\n SchemaProperties properties = client.getSchemaProperties(\"{schema-group}\", \"{schema-name}\",\n     schemaContent, SchemaFormat.AVRO);\n\n System.out.println(\"Schema id: \" + properties.getId());\n System.out.println(\"Format: \" + properties.getFormat());\n System.out.println(\"Version: \" + properties.getVersion());\n```\n\n**Sample: Get a schema with its HTTP response**\n\nThe following code sample demonstrates how to get a schema using its group name, schema name, and version number. In addition, it gets the underlying HTTP response that backs this service call. This is useful in cases where customers want more insight into the HTTP request/response.\n\n```java\nResponse<SchemaRegistrySchema> response = client.getSchemaWithResponse(\"{group-name}\",\n     \"{schema-name}\", 1, Context.NONE);\n\n System.out.println(\"Headers in HTTP response: \");\n response.getHeaders().forEach(header -> System.out.printf(\"%s: %s%n\", header.getName(), header.getValue()));\n\n SchemaRegistrySchema schema = response.getValue();\n\n System.out.printf(\"Schema id: %s, schema format: %s%n\", schema.getProperties().getId(),\n     schema.getProperties().getFormat());\n System.out.println(\"Schema contents: \" + schema.getDefinition());\n```\n\n\n[managed identity]: https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/\n[Azure Identity documentation]: https://learn.microsoft.com/java/api/overview/azure/identity-readme"
metadata: {}
package: "com.azure.data.schemaregistry"
artifact: com.azure:azure-data-schemaregistry:1.5.0
