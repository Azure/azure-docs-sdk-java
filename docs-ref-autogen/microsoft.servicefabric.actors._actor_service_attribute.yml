items:
- uid: microsoft.servicefabric.actors._actor_service_attribute
  id: _actor_service_attribute
  parent: microsoft.servicefabric.actors
  children:
  - microsoft.servicefabric.actors._actor_service_attribute.name()
  href: microsoft.servicefabric.actors._actor_service_attribute.yml
  langs:
  - java
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: microsoft.servicefabric.actors.ActorServiceAttribute
  type: Interface
  source:
    remote: &o0
      path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorServiceAttribute.java
      branch: master
      repo: https://msazure.visualstudio.com/One/_git/sf-java
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorServiceAttribute.java
    startLine: 13
  package: microsoft.servicefabric.actors
  summary: <p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>
  syntax: &o1
    content: public interface ActorServiceAttribute
- uid: microsoft.servicefabric.actors._actor_service_attribute.name()
  id: name()
  parent: microsoft.servicefabric.actors._actor_service_attribute
  href: microsoft.servicefabric.actors._actor_service_attribute.yml
  langs:
  - java
  name: name()
  nameWithType: ActorServiceAttribute.name()
  fullName: String microsoft.servicefabric.actors.ActorServiceAttribute.name()
  overload: microsoft.servicefabric.actors._actor_service_attribute.name*
  type: Method
  source:
    remote: *o0
    path: src/prod/src/java/microsoft.servicefabric.actors/src/microsoft/servicefabric/actors/ActorServiceAttribute.java
    startLine: 30
  package: microsoft.servicefabric.actors
  summary: >-
    <p>The relative name of the actor service. This name will be combined with the application name to provide the full name of the actor service.</p>

    <p>

      <bold>Remarks:</bold>By default, the actor service name is derived from the type of the actor interface <ref refid="" kindref="compound">microsoft.servicefabric.actors.ActorNameFormat#getFabricServiceName(Class, String)</ref> . However, in case when an actor interface is implemented by more than one actor, including by a derived type, the name cannot be determined from the actor interface in an unambiguous manner. In that case, the name of the actor service must be configured using this property of the <xref href="microsoft.servicefabric.actors._actor_service_attribute" data-throw-if-not-resolved="false"></xref>. </p>
  syntax:
    content: public String name()
    return:
      type: "26831127"
      description: <p>The name of the actor service relative to the application name. </p>
references:
- uid: "26831127"
  spec.java:
  - name: String
    fullName: String
- uid: microsoft.servicefabric.actors._actor_service_attribute.name*
  name: name
  nameWithType: ActorServiceAttribute.name
  fullName: String microsoft.servicefabric.actors.ActorServiceAttribute.name
  package: microsoft.servicefabric.actors
- uid: microsoft.servicefabric.actors._actor_service_attribute
  parent: microsoft.servicefabric.actors
  href: microsoft.servicefabric.actors._actor_service_attribute.yml
  name: ActorServiceAttribute
  nameWithType: ActorServiceAttribute
  fullName: microsoft.servicefabric.actors.ActorServiceAttribute
  type: Interface
  summary: <p>This attributes allows configuring the properties of the actor service. The attribute is applied on the actor type. </p>
  syntax: *o1
