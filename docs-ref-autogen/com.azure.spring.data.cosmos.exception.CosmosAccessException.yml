### YamlMime:ManagedReference
items:
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException
  id: CosmosAccessException
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.exception
  children:
  - com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(java.lang.String)
  - com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(java.lang.String,java.lang.Exception)
  - com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(java.lang.String,java.lang.Throwable)
  - com.azure.spring.data.cosmos.exception.CosmosAccessException.cosmosException
  - com.azure.spring.data.cosmos.exception.CosmosAccessException.getCosmosException()
  langs:
  - java
  name: CosmosAccessException
  nameWithType: CosmosAccessException
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException
  type: Class
  package: com.azure.spring.data.cosmos.exception
  summary: Public class extending DataAccessException, exposes innerException. Every API in <xref uid="com.azure.spring.data.cosmos.repository.CosmosRepository" data-throw-if-not-resolved="false">CosmosRepository</xref> and <xref uid="com.azure.spring.data.cosmos.repository.ReactiveCosmosRepository" data-throw-if-not-resolved="false">ReactiveCosmosRepository</xref> should throw <xref uid="com.azure.spring.data.cosmos.exception.CosmosAccessException" data-throw-if-not-resolved="false">CosmosAccessException</xref>. innerException refers to the exception thrown by CosmosDB SDK. Callers of repository APIs can rely on innerException for any retriable logic, or for more details on the failure of the operation.
  syntax:
    content: public class CosmosAccessException extends DataAccessException
  inheritance:
  - java.lang.Object
  - java.lang.Throwable
  - java.lang.Exception
  - java.lang.RuntimeException
  - org.springframework.core.NestedRuntimeException
  - org.springframework.dao.DataAccessException
  inheritedMembers:
  - java.lang.Object.clone()
  - java.lang.Object.equals(java.lang.Object)
  - java.lang.Object.finalize()
  - java.lang.Object.getClass()
  - java.lang.Object.hashCode()
  - java.lang.Object.notify()
  - java.lang.Object.notifyAll()
  - java.lang.Object.wait()
  - java.lang.Object.wait(long)
  - java.lang.Object.wait(long,int)
  - java.lang.Throwable.addSuppressed(java.lang.Throwable)
  - java.lang.Throwable.fillInStackTrace()
  - java.lang.Throwable.getCause()
  - java.lang.Throwable.getLocalizedMessage()
  - java.lang.Throwable.getStackTrace()
  - java.lang.Throwable.getSuppressed()
  - java.lang.Throwable.initCause(java.lang.Throwable)
  - java.lang.Throwable.printStackTrace()
  - java.lang.Throwable.printStackTrace(java.io.PrintStream)
  - java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  - java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  - java.lang.Throwable.toString()
  - org.springframework.core.NestedRuntimeException.contains(java.lang.Class<?>)
  - org.springframework.core.NestedRuntimeException.getMessage()
  - org.springframework.core.NestedRuntimeException.getMostSpecificCause()
  - org.springframework.core.NestedRuntimeException.getRootCause()
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(java.lang.String)
  id: CosmosAccessException(java.lang.String)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.exception.CosmosAccessException
  langs:
  - java
  name: CosmosAccessException(String msg)
  nameWithType: CosmosAccessException.CosmosAccessException(String msg)
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(String msg)
  overload: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException*
  type: Constructor
  package: com.azure.spring.data.cosmos.exception
  summary: Construct a `CosmosDBAccessException` with the specified detail message.
  syntax:
    content: public CosmosAccessException(String msg)
    parameters:
    - id: msg
      type: java.lang.String
      description: the detail message
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(java.lang.String,java.lang.Exception)
  id: CosmosAccessException(java.lang.String,java.lang.Exception)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.exception.CosmosAccessException
  langs:
  - java
  name: CosmosAccessException(String msg, Exception cause)
  nameWithType: CosmosAccessException.CosmosAccessException(String msg, Exception cause)
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(String msg, Exception cause)
  overload: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException*
  type: Constructor
  package: com.azure.spring.data.cosmos.exception
  summary: Construct a `CosmosDBAccessException` with the specified detail message and nested exception.
  syntax:
    content: public CosmosAccessException(String msg, Exception cause)
    parameters:
    - id: msg
      type: java.lang.String
      description: the detail message
    - id: cause
      type: java.lang.Exception
      description: the nested exception
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(java.lang.String,java.lang.Throwable)
  id: CosmosAccessException(java.lang.String,java.lang.Throwable)
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.exception.CosmosAccessException
  langs:
  - java
  name: CosmosAccessException(String msg, Throwable cause)
  nameWithType: CosmosAccessException.CosmosAccessException(String msg, Throwable cause)
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException(String msg, Throwable cause)
  overload: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException*
  type: Constructor
  package: com.azure.spring.data.cosmos.exception
  summary: Construct a `CosmosDBAccessException` with the specified detail message. and nested exception.
  syntax:
    content: public CosmosAccessException(String msg, Throwable cause)
    parameters:
    - id: msg
      type: java.lang.String
      description: the detail message
    - id: cause
      type: java.lang.Throwable
      description: the nested Throwable
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException.cosmosException
  id: cosmosException
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.exception.CosmosAccessException
  langs:
  - java
  name: cosmosException
  nameWithType: CosmosAccessException.cosmosException
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException.cosmosException
  type: Field
  package: com.azure.spring.data.cosmos.exception
  syntax:
    content: protected final CosmosException cosmosException
    return:
      type: com.azure.cosmos.CosmosException
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException.getCosmosException()
  id: getCosmosException()
  artifact: com.azure:azure-spring-data-cosmos:3.1.0
  parent: com.azure.spring.data.cosmos.exception.CosmosAccessException
  langs:
  - java
  name: getCosmosException()
  nameWithType: CosmosAccessException.getCosmosException()
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException.getCosmosException()
  overload: com.azure.spring.data.cosmos.exception.CosmosAccessException.getCosmosException*
  type: Method
  package: com.azure.spring.data.cosmos.exception
  summary: To get exception object for cosmos client
  syntax:
    content: public CosmosException getCosmosException()
    return:
      type: com.azure.cosmos.CosmosException
      description: CosmosException
references:
- uid: java.lang.String
  spec.java:
  - uid: java.lang.String
    name: String
    fullName: java.lang.String
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException*
  name: CosmosAccessException
  nameWithType: CosmosAccessException.CosmosAccessException
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException.CosmosAccessException
  package: com.azure.spring.data.cosmos.exception
- uid: java.lang.Throwable
  spec.java:
  - uid: java.lang.Throwable
    name: Throwable
    fullName: java.lang.Throwable
- uid: java.lang.Exception
  spec.java:
  - uid: java.lang.Exception
    name: Exception
    fullName: java.lang.Exception
- uid: com.azure.cosmos.CosmosException
  spec.java:
  - uid: com.azure.cosmos.CosmosException
    name: CosmosException
    fullName: com.azure.cosmos.CosmosException
- uid: com.azure.spring.data.cosmos.exception.CosmosAccessException.getCosmosException*
  name: getCosmosException
  nameWithType: CosmosAccessException.getCosmosException
  fullName: com.azure.spring.data.cosmos.exception.CosmosAccessException.getCosmosException
  package: com.azure.spring.data.cosmos.exception
- uid: org.springframework.dao.DataAccessException
  name: DataAccessException
  nameWithType: DataAccessException
  fullName: org.springframework.dao.DataAccessException
- uid: java.lang.Object.wait()
  name: Object.wait()
  nameWithType: Object.wait()
  fullName: java.lang.Object.wait()
- uid: java.lang.Throwable.getCause()
  name: Throwable.getCause()
  nameWithType: Throwable.getCause()
  fullName: java.lang.Throwable.getCause()
- uid: java.lang.Object.finalize()
  name: Object.finalize()
  nameWithType: Object.finalize()
  fullName: java.lang.Object.finalize()
- uid: java.lang.Throwable.fillInStackTrace()
  name: Throwable.fillInStackTrace()
  nameWithType: Throwable.fillInStackTrace()
  fullName: java.lang.Throwable.fillInStackTrace()
- uid: java.lang.Object.clone()
  name: Object.clone()
  nameWithType: Object.clone()
  fullName: java.lang.Object.clone()
- uid: java.lang.Throwable.initCause(java.lang.Throwable)
  name: Throwable.initCause(Throwable)
  nameWithType: Throwable.initCause(Throwable)
  fullName: java.lang.Throwable.initCause(java.lang.Throwable)
- uid: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  name: Throwable.setStackTrace(StackTraceElement[])
  nameWithType: Throwable.setStackTrace(StackTraceElement[])
  fullName: java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
- uid: org.springframework.core.NestedRuntimeException.getRootCause()
  name: NestedRuntimeException.getRootCause()
  nameWithType: NestedRuntimeException.getRootCause()
  fullName: org.springframework.core.NestedRuntimeException.getRootCause()
- uid: java.lang.Throwable.toString()
  name: Throwable.toString()
  nameWithType: Throwable.toString()
  fullName: java.lang.Throwable.toString()
- uid: java.lang.Throwable.getSuppressed()
  name: Throwable.getSuppressed()
  nameWithType: Throwable.getSuppressed()
  fullName: java.lang.Throwable.getSuppressed()
- uid: java.lang.Object.wait(long)
  name: Object.wait(long)
  nameWithType: Object.wait(long)
  fullName: java.lang.Object.wait(long)
- uid: java.lang.Object.getClass()
  name: Object.getClass()
  nameWithType: Object.getClass()
  fullName: java.lang.Object.getClass()
- uid: java.lang.Object.hashCode()
  name: Object.hashCode()
  nameWithType: Object.hashCode()
  fullName: java.lang.Object.hashCode()
- uid: java.lang.Throwable.getStackTrace()
  name: Throwable.getStackTrace()
  nameWithType: Throwable.getStackTrace()
  fullName: java.lang.Throwable.getStackTrace()
- uid: org.springframework.core.NestedRuntimeException.contains(java.lang.Class<?>)
  name: NestedRuntimeException.contains(Class<?>)
  nameWithType: NestedRuntimeException.contains(Class<?>)
  fullName: org.springframework.core.NestedRuntimeException.contains(java.lang.Class<?>)
- uid: java.lang.Object.wait(long,int)
  name: Object.wait(long,int)
  nameWithType: Object.wait(long,int)
  fullName: java.lang.Object.wait(long,int)
- uid: java.lang.Throwable.getLocalizedMessage()
  name: Throwable.getLocalizedMessage()
  nameWithType: Throwable.getLocalizedMessage()
  fullName: java.lang.Throwable.getLocalizedMessage()
- uid: java.lang.Object.notify()
  name: Object.notify()
  nameWithType: Object.notify()
  fullName: java.lang.Object.notify()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  name: Throwable.printStackTrace(PrintWriter)
  nameWithType: Throwable.printStackTrace(PrintWriter)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintWriter)
- uid: java.lang.Throwable.addSuppressed(java.lang.Throwable)
  name: Throwable.addSuppressed(Throwable)
  nameWithType: Throwable.addSuppressed(Throwable)
  fullName: java.lang.Throwable.addSuppressed(java.lang.Throwable)
- uid: java.lang.Object.notifyAll()
  name: Object.notifyAll()
  nameWithType: Object.notifyAll()
  fullName: java.lang.Object.notifyAll()
- uid: org.springframework.core.NestedRuntimeException.getMostSpecificCause()
  name: NestedRuntimeException.getMostSpecificCause()
  nameWithType: NestedRuntimeException.getMostSpecificCause()
  fullName: org.springframework.core.NestedRuntimeException.getMostSpecificCause()
- uid: java.lang.Object.equals(java.lang.Object)
  name: Object.equals(Object)
  nameWithType: Object.equals(Object)
  fullName: java.lang.Object.equals(java.lang.Object)
- uid: org.springframework.core.NestedRuntimeException.getMessage()
  name: NestedRuntimeException.getMessage()
  nameWithType: NestedRuntimeException.getMessage()
  fullName: org.springframework.core.NestedRuntimeException.getMessage()
- uid: java.lang.Throwable.printStackTrace(java.io.PrintStream)
  name: Throwable.printStackTrace(PrintStream)
  nameWithType: Throwable.printStackTrace(PrintStream)
  fullName: java.lang.Throwable.printStackTrace(java.io.PrintStream)
- uid: java.lang.Throwable.printStackTrace()
  name: Throwable.printStackTrace()
  nameWithType: Throwable.printStackTrace()
  fullName: java.lang.Throwable.printStackTrace()
- uid: org.springframework.core.NestedRuntimeException.contains(java.lang.Class
  name: NestedRuntimeException.contains(Class
  nameWithType: NestedRuntimeException.contains(Class
  fullName: org.springframework.core.NestedRuntimeException.contains(java.lang.Class
- uid: ?>)
  name: ?>)
  nameWithType: ?>)
  fullName: ?>)
