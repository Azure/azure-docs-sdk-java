### YamlMime:JavaType
methods:
- com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onError(@NonNull final MsalException)
- com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onTokenReceived(@NonNull final AuthenticationResult)
- com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onUserCodeReceived(@NonNull final String,@NonNull final String,@NonNull final String)
nameWithType: IPublicClientApplication.DeviceCodeFlowCallback
syntax: public interface DeviceCodeFlowCallback
type: interface
uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
name: IPublicClientApplication.DeviceCodeFlowCallback
package: com.microsoft.identity.client
summary: >-
  <p>Callback object used in Device Code Flow. This callback provides the following methods for communicating with the protocol. 1). Receiving authentication information (user_code, verification_uri, and instruction message) via <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DeviceCodeFlowCallback#onUserCodeReceived(String, String, String)"></xref>. 2). Receiving a successful authentication result containing a fresh access token via <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DeviceCodeFlowCallback#onTokenReceived(AuthenticationResult)"></xref>. 3). Receiving an exception detailing what went wrong in the protocol via <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DeviceCodeFlowCallback#onError(MsalException)"></xref>.</p>

  <p>Refer to <xref uid="" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#acquireTokenWithDeviceCode(String[], DeviceCodeFlowCallback)"></xref>. </p>
metadata: {}
