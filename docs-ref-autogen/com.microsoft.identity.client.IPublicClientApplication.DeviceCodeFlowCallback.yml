### YamlMime:JavaType
methods:
- fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onError(@NonNull final MsalException error)
  name: onError(@NonNull final MsalException error)
  nameWithType: IPublicClientApplication.DeviceCodeFlowCallback.onError(@NonNull final MsalException error)
  parameters:
  - description: <p>error exception </p>
    name: error
    type: '@NonNull final <xref href="com.microsoft.identity.client.exception.MsalException?alt=com.microsoft.identity.client.exception.MsalException&text=MsalException" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Invoked if an error is encountered during the device code flow and passes the exception object.</p>

    <p></p>
  syntax: public void onError(@NonNull final MsalException error)
  uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onError(@NonNull final MsalException)
- fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onTokenReceived(@NonNull final AuthenticationResult authResult)
  name: onTokenReceived(@NonNull final AuthenticationResult authResult)
  nameWithType: IPublicClientApplication.DeviceCodeFlowCallback.onTokenReceived(@NonNull final AuthenticationResult authResult)
  parameters:
  - description: <p>the authentication result </p>
    name: authResult
    type: '@NonNull final <xref href="com.microsoft.identity.client.AuthenticationResult?alt=com.microsoft.identity.client.AuthenticationResult&text=AuthenticationResult" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Invoked once token is received and passes the <xref uid="com.microsoft.identity.client.AuthenticationResult" data-throw-if-not-resolved="false" data-raw-source="AuthenticationResult"></xref> object.</p>

    <p></p>
  syntax: public void onTokenReceived(@NonNull final AuthenticationResult authResult)
  uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onTokenReceived(@NonNull final AuthenticationResult)
- fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onUserCodeReceived(@NonNull final String vUri, @NonNull final String userCode, @NonNull final String message, @NonNull final Date sessionExpirationDate)
  name: onUserCodeReceived(@NonNull final String vUri, @NonNull final String userCode, @NonNull final String message, @NonNull final Date sessionExpirationDate)
  nameWithType: IPublicClientApplication.DeviceCodeFlowCallback.onUserCodeReceived(@NonNull final String vUri, @NonNull final String userCode, @NonNull final String message, @NonNull final Date sessionExpirationDate)
  parameters:
  - description: <p>verification uri </p>
    name: vUri
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>user code </p>
    name: userCode
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>instruction message </p>
    name: message
    type: <xref href="%40NonNull+final+String?alt=%40NonNull+final+String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: <p>the expiration date of DCF session to be displayed to the user ONLY. When the session expires, onError() will return an exception with DEVICE_CODE_FLOW_EXPIRED_TOKEN_ERROR_CODE. Please rely on that exception for non-UX purposes. </p>
    name: sessionExpirationDate
    type: <xref href="%40NonNull+final+Date?alt=%40NonNull+final+Date&text=%40NonNull+final+Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Invoked to display verification uri, user code, and instruction message during device code flow.</p>

    <p></p>
  syntax: public void onUserCodeReceived(@NonNull final String vUri, @NonNull final String userCode, @NonNull final String message, @NonNull final Date sessionExpirationDate)
  uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback.onUserCodeReceived(@NonNull final String,@NonNull final String,@NonNull final String,@NonNull final Date)
nameWithType: IPublicClientApplication.DeviceCodeFlowCallback
syntax: public interface DeviceCodeFlowCallback
type: interface
uid: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
fullName: com.microsoft.identity.client.IPublicClientApplication.DeviceCodeFlowCallback
name: IPublicClientApplication.DeviceCodeFlowCallback
package: com.microsoft.identity.client
summary: >-
  <p>Callback object used in Device Code Flow. This callback provides the following methods for communicating with the protocol. 1). Receiving authentication information (user_code, verification_uri, and instruction message) via <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DeviceCodeFlowCallback#onUserCodeReceived(String, String, String, Date)"></xref>. 2). Receiving a successful authentication result containing a fresh access token via <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DeviceCodeFlowCallback#onTokenReceived(AuthenticationResult)"></xref>. 3). Receiving an exception detailing what went wrong in the protocol via <xref uid="" data-throw-if-not-resolved="false" data-raw-source="DeviceCodeFlowCallback#onError(MsalException)"></xref>. </p>

  <p>Refer to <xref uid="" data-throw-if-not-resolved="false" data-raw-source="PublicClientApplication#acquireTokenWithDeviceCode(String[], DeviceCodeFlowCallback)"></xref>. </p>
metadata: {}
