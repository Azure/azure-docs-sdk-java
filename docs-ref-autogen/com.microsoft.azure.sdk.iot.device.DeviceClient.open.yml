### YamlMime:JavaMember
nameWithType: DeviceClient.open
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.open(boolean withRetry)
  name: open(boolean withRetry)
  nameWithType: DeviceClient.open(boolean withRetry)
  parameters:
  - description: <p>if true, this open call will apply the retry policy to allow for the open call to be retried if it fails. Both the operation timeout set in <xref uid="com.microsoft.azure.sdk.iot.device.InternalClient.setOperationTimeout(long)" data-throw-if-not-resolved="false" data-raw-source="setOperationTimeout(long)"></xref> and the retry policy set in {<xref uid="com.microsoft.azure.sdk.iot.device.InternalClient.setRetryPolicy(RetryPolicy)" data-throw-if-not-resolved="false" data-raw-source="setRetryPolicy(RetryPolicy)"></xref>} will be respected while retrying to open the connection.</p>
    name: withRetry
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if a connection to an IoT hub cannot be established. </p>
  summary: >-
    <p>Starts asynchronously sending and receiving messages from an IoT hub. If the client is already open, the function shall do nothing.</p>

    <p></p>
  syntax: public void open(boolean withRetry)
  uid: com.microsoft.azure.sdk.iot.device.DeviceClient.open(boolean)
uid: com.microsoft.azure.sdk.iot.device.DeviceClient.open*
fullName: com.microsoft.azure.sdk.iot.device.DeviceClient.open
name: open(boolean withRetry)
package: com.microsoft.azure.sdk.iot.device
metadata: {}
