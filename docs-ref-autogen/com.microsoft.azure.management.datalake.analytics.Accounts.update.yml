### YamlMime:JavaMember
nameWithType: Accounts.update
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.Accounts.update(String resourceGroupName, String accountName)
  name: update(String resourceGroupName, String accountName)
  nameWithType: Accounts.update(String resourceGroupName, String accountName)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account to update. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the DataLakeAnalyticsAccount object if successful. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsAccount?alt=com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsAccount&text=DataLakeAnalyticsAccount" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.</p>

    <p></p>
  syntax: public DataLakeAnalyticsAccount update(String resourceGroupName, String accountName)
  uid: com.microsoft.azure.management.datalake.analytics.Accounts.update(String,String)
- fullName: com.microsoft.azure.management.datalake.analytics.Accounts.update(String resourceGroupName, String accountName, DataLakeAnalyticsAccountUpdateParameters parameters)
  name: update(String resourceGroupName, String accountName, DataLakeAnalyticsAccountUpdateParameters parameters)
  nameWithType: Accounts.update(String resourceGroupName, String accountName, DataLakeAnalyticsAccountUpdateParameters parameters)
  parameters:
  - description: <p>The name of the Azure resource group that contains the Data Lake Analytics account. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the Data Lake Analytics account to update. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the update Data Lake Analytics account operation. </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsAccountUpdateParameters?alt=com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsAccountUpdateParameters&text=DataLakeAnalyticsAccountUpdateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the DataLakeAnalyticsAccount object if successful. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsAccount?alt=com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsAccount&text=DataLakeAnalyticsAccount" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.</p>

    <p></p>
  syntax: public DataLakeAnalyticsAccount update(String resourceGroupName, String accountName, DataLakeAnalyticsAccountUpdateParameters parameters)
  uid: com.microsoft.azure.management.datalake.analytics.Accounts.update(String,String,DataLakeAnalyticsAccountUpdateParameters)
uid: com.microsoft.azure.management.datalake.analytics.Accounts.update*
fullName: com.microsoft.azure.management.datalake.analytics.Accounts.update(String resourceGroupName, String accountName)
name: update(String resourceGroupName, String accountName)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
