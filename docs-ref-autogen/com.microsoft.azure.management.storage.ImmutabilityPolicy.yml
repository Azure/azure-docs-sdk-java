### YamlMime:JavaType
uid: "com.microsoft.azure.management.storage.ImmutabilityPolicy"
fullName: "com.microsoft.azure.management.storage.ImmutabilityPolicy"
name: "ImmutabilityPolicy"
nameWithType: "ImmutabilityPolicy"
summary: "Type representing Immutability<wbr>Policy."
syntax: "public interface ImmutabilityPolicy extends HasInner<ImmutabilityPolicyInner>, Indexable, Refreshable<ImmutabilityPolicy>, Updatable<ImmutabilityPolicy.Update>, HasManager<StorageManager>"
methods:
- uid: "com.microsoft.azure.management.storage.ImmutabilityPolicy.etag()"
  fullName: "com.microsoft.azure.management.storage.ImmutabilityPolicy.etag()"
  name: "etag()"
  nameWithType: "ImmutabilityPolicy.etag()"
  modifiers:
  - "abstract"
  syntax: "public abstract String etag()"
  returns:
    description: "the etag value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.ImmutabilityPolicy.id()"
  fullName: "com.microsoft.azure.management.storage.ImmutabilityPolicy.id()"
  name: "id()"
  nameWithType: "ImmutabilityPolicy.id()"
  modifiers:
  - "abstract"
  syntax: "public abstract String id()"
  returns:
    description: "the id value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.ImmutabilityPolicy.immutabilityPeriodSinceCreationInDays()"
  fullName: "com.microsoft.azure.management.storage.ImmutabilityPolicy.immutabilityPeriodSinceCreationInDays()"
  name: "immutabilityPeriodSinceCreationInDays()"
  nameWithType: "ImmutabilityPolicy.immutabilityPeriodSinceCreationInDays()"
  modifiers:
  - "abstract"
  syntax: "public abstract int immutabilityPeriodSinceCreationInDays()"
  returns:
    description: "the immutabilityPeriodSinceCreationInDays value."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.ImmutabilityPolicy.name()"
  fullName: "com.microsoft.azure.management.storage.ImmutabilityPolicy.name()"
  name: "name()"
  nameWithType: "ImmutabilityPolicy.name()"
  modifiers:
  - "abstract"
  syntax: "public abstract String name()"
  returns:
    description: "the name value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.ImmutabilityPolicy.state()"
  fullName: "com.microsoft.azure.management.storage.ImmutabilityPolicy.state()"
  name: "state()"
  nameWithType: "ImmutabilityPolicy.state()"
  modifiers:
  - "abstract"
  syntax: "public abstract ImmutabilityPolicyState state()"
  returns:
    description: "the state value."
    type: "<xref href=\"com.microsoft.azure.management.storage.ImmutabilityPolicyState?alt=com.microsoft.azure.management.storage.ImmutabilityPolicyState&text=ImmutabilityPolicyState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.storage.ImmutabilityPolicy.type()"
  fullName: "com.microsoft.azure.management.storage.ImmutabilityPolicy.type()"
  name: "type()"
  nameWithType: "ImmutabilityPolicy.type()"
  modifiers:
  - "abstract"
  syntax: "public abstract String type()"
  returns:
    description: "the type value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Type representing ImmutabilityPolicy."
implements:
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager&text=HasManager\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.implementation.StorageManager?alt=com.microsoft.azure.management.storage.implementation.StorageManager&text=StorageManager\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.implementation.ImmutabilityPolicyInner?alt=com.microsoft.azure.management.storage.implementation.ImmutabilityPolicyInner&text=ImmutabilityPolicyInner\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Indexable?alt=com.microsoft.azure.management.resources.fluentcore.model.Indexable&text=Indexable\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Refreshable?alt=com.microsoft.azure.management.resources.fluentcore.model.Refreshable&text=Refreshable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.ImmutabilityPolicy?alt=com.microsoft.azure.management.storage.ImmutabilityPolicy&text=ImmutabilityPolicy\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.Updatable?alt=com.microsoft.azure.management.resources.fluentcore.model.Updatable&text=Updatable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.storage.ImmutabilityPolicy.Update?alt=com.microsoft.azure.management.storage.ImmutabilityPolicy.Update&text=Update\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.storage"
artifact: com.microsoft.azure:azure-mgmt-storage:1.41.4
