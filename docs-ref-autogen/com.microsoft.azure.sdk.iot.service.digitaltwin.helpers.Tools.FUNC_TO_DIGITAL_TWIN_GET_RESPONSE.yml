### YamlMime:JavaMember
nameWithType: Tools.FUNC_TO_DIGITAL_TWIN_GET_RESPONSE
type: field
members:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.helpers.Tools.FUNC_TO_DIGITAL_TWIN_GET_RESPONSE
  name: FUNC_TO_DIGITAL_TWIN_GET_RESPONSE
  nameWithType: Tools.FUNC_TO_DIGITAL_TWIN_GET_RESPONSE
  returns:
    type: final Func1&lt;ServiceResponseWithHeaders&lt;Object, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinGetDigitalTwinHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.generated.models.DigitalTwinGetDigitalTwinHeaders&text=DigitalTwinGetDigitalTwinHeaders" data-throw-if-not-resolved="False"/>&gt;, Observable&lt;ServiceResponseWithHeaders&lt;Object, <xref href="com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders?alt=com.microsoft.azure.sdk.iot.service.digitaltwin.customized.DigitalTwinGetHeaders&text=DigitalTwinGetHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  syntax: >-
    public static final Func1<ServiceResponseWithHeaders<Object, DigitalTwinGetDigitalTwinHeaders>, Observable<ServiceResponseWithHeaders<Object, DigitalTwinGetHeaders>>> FUNC_TO_DIGITAL_TWIN_GET_RESPONSE= object -> {
            DigitalTwinGetHeaders digitalTwinGetHeaders = new DigitalTwinGetHeaders();
            digitalTwinGetHeaders.withETag(object.headers().eTag());
            ServiceResponseWithHeaders<Object, DigitalTwinGetHeaders> result = new ServiceResponseWithHeaders<>(object.body(), digitalTwinGetHeaders, object.response());
            return Observable.just(result);
        }
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.helpers.Tools.FUNC_TO_DIGITAL_TWIN_GET_RESPONSE
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.helpers.Tools.FUNC_TO_DIGITAL_TWIN_GET_RESPONSE*
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.helpers.Tools.FUNC_TO_DIGITAL_TWIN_GET_RESPONSE
name: FUNC_TO_DIGITAL_TWIN_GET_RESPONSE
package: com.microsoft.azure.sdk.iot.service.digitaltwin.helpers
metadata: {}
