### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.servicebus._i_message_sender
  id: _i_message_sender
  parent: com.microsoft.azure.servicebus
  children:
  - com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
  - com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
  - com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)
  - com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)
  - com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
  - com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
  - com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
  - com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: IMessageSender
  nameWithType: IMessageSender
  fullName: com.microsoft.azure.servicebus.IMessageSender
  type: Interface
  source:
    remote: &o0
      path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
      branch: master
      repo: https://github.com/Azure/azure-service-bus-java
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 16
  package: com.microsoft.azure.servicebus
  summary: "<p>Represents a message sender that sends messages to Azure Service Bus.</p>\r\n<p></p>"
  syntax:
    content: public interface IMessageSender extends IMessageEntityClient
  inheritedMembers:
  - com.microsoft.azure.servicebus._i_closeable.close()
  - com.microsoft.azure.servicebus._i_closeable.closeAsync()
  - com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
- uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage(long)
  id: cancelScheduledMessage(long)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: cancelScheduledMessage(long sequenceNumber)
  nameWithType: IMessageSender.cancelScheduledMessage(long sequenceNumber)
  fullName: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage(long sequenceNumber)
  overload: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 92
  package: com.microsoft.azure.servicebus
  summary: "<p>Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>\r\n<p></p>"
  syntax:
    content: public void cancelScheduledMessage(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if scheduled message couldn't be cancelled </p>
- uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync(long)
  id: cancelScheduledMessageAsync(long)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: cancelScheduledMessageAsync(long sequenceNumber)
  nameWithType: IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
  fullName: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync(long sequenceNumber)
  overload: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 70
  package: com.microsoft.azure.servicebus
  summary: "<p>Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This is an asynchronous method returning a CompletableFuture which completes when the message is cancelled.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending cancellation </p>
- uid: com.microsoft.azure.servicebus._i_message_sender.scheduleMessage(IMessage,Instant)
  id: scheduleMessage(IMessage,Instant)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  nameWithType: IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.IMessageSender.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  overload: com.microsoft.azure.servicebus._i_message_sender.scheduleMessage*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 82
  package: com.microsoft.azure.servicebus
  summary: "<p>Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>\r\n<p></p>"
  syntax:
    content: public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>instant at which the message should be enqueued in the entity </p>
    return:
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if message couldn't be sent to the entity </p>
- uid: com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync(IMessage,Instant)
  id: scheduleMessageAsync(IMessage,Instant)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  nameWithType: IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  overload: com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 62
  package: com.microsoft.azure.servicebus
  summary: "<p>Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity. The CompletableFuture, on completion, returns the sequence number of the scheduled message which can be used to cancel the scheduling of the message.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>instant at which the message should be enqueued in the entity </p>
    return:
      type: 30822cb1
      description: <p>a CompletableFuture representing the pending send, which returns the sequence number of the scheduled message. This sequence number can be used to cancel the scheduling of the message. </p>
- uid: com.microsoft.azure.servicebus._i_message_sender.send(IMessage)
  id: send(IMessage)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: send(IMessage message)
  nameWithType: IMessageSender.send(IMessage message)
  fullName: com.microsoft.azure.servicebus.IMessageSender.send(IMessage message)
  overload: com.microsoft.azure.servicebus._i_message_sender.send*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 25
  package: com.microsoft.azure.servicebus
  summary: "<p>Sends a message to the Azure Service Bus entity this sender is connected to. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>\r\n<p></p>"
  syntax:
    content: public void send(IMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if message couldn't be sent to the entity </p>
- uid: com.microsoft.azure.servicebus._i_message_sender.sendAsync(IMessage)
  id: sendAsync(IMessage)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: sendAsync(IMessage message)
  nameWithType: IMessageSender.sendAsync(IMessage message)
  fullName: com.microsoft.azure.servicebus.IMessageSender.sendAsync(IMessage message)
  overload: com.microsoft.azure.servicebus._i_message_sender.sendAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 43
  package: com.microsoft.azure.servicebus
  summary: "<p>Sends a message to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> sendAsync(IMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending send </p>
- uid: com.microsoft.azure.servicebus._i_message_sender.sendBatch(Collection<? extends IMessage>)
  id: sendBatch(Collection<? extends IMessage>)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: sendBatch(Collection<? extends IMessage> messages)
  nameWithType: IMessageSender.sendBatch(Collection<? extends IMessage> messages)
  fullName: com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage> messages)
  overload: com.microsoft.azure.servicebus._i_message_sender.sendBatch*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 35
  package: com.microsoft.azure.servicebus
  summary: "<p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This method blocks until the batch is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>\r\n<p></p>"
  syntax:
    content: public void sendBatch(Collection<? extends IMessage> messages)
    parameters:
    - id: messages
      type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>collection of messages to be sent to the entity </p>
  exceptions:
  - type: 8256ba40
    description: <p>if the current thread was interrupted while waiting </p>
  - type: 73fec9fb
    description: <p>if the batch couldn't be sent to the entity </p>
- uid: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync(Collection<? extends IMessage>)
  id: sendBatchAsync(Collection<? extends IMessage>)
  parent: com.microsoft.azure.servicebus._i_message_sender
  href: com.microsoft.azure.servicebus._i_message_sender.yml
  langs:
  - java
  name: sendBatchAsync(Collection<? extends IMessage> messages)
  nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
  fullName: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
  overload: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync*
  type: Method
  source:
    remote: *o0
    path: azure-servicebus/src/main/java/com/microsoft/azure/servicebus/IMessageSender.java
    startLine: 51
  package: com.microsoft.azure.servicebus
  summary: "<p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the batch is sent to the entity.</p>\r\n<p></p>"
  syntax:
    content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
    parameters:
    - id: messages
      type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>collection of messages to be sent to the entity </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending send </p>
references:
- uid: 8256ba40
  spec.java:
  - name: InterruptedException
    fullName: InterruptedException
- uid: 73fec9fb
  spec.java:
  - name: ServiceBusException
    fullName: ServiceBusException
- uid: com.microsoft.azure.servicebus._i_message_sender.send*
  name: send
  nameWithType: IMessageSender.send
  fullName: com.microsoft.azure.servicebus.IMessageSender.send
  package: com.microsoft.azure.servicebus
- uid: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
  spec.java:
  - name: 'Collection<? extends '
    fullName: 'Collection<? extends '
  - uid: com.microsoft.azure.servicebus._i_message
    name: IMessage
    fullName: com.microsoft.azure.servicebus.IMessage
    href: com.microsoft.azure.servicebus._i_message.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.azure.servicebus._i_message_sender.sendBatch*
  name: sendBatch
  nameWithType: IMessageSender.sendBatch
  fullName: com.microsoft.azure.servicebus.IMessageSender.sendBatch
  package: com.microsoft.azure.servicebus
- uid: db03ee24
  spec.java:
  - name: CompletableFuture<Void>
    fullName: CompletableFuture<Void>
- uid: com.microsoft.azure.servicebus._i_message_sender.sendAsync*
  name: sendAsync
  nameWithType: IMessageSender.sendAsync
  fullName: com.microsoft.azure.servicebus.IMessageSender.sendAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._i_message_sender.sendBatchAsync*
  name: sendBatchAsync
  nameWithType: IMessageSender.sendBatchAsync
  fullName: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync
  package: com.microsoft.azure.servicebus
- uid: 328f8254
  spec.java:
  - name: Instant
    fullName: Instant
- uid: 30822cb1
  spec.java:
  - name: CompletableFuture<Long>
    fullName: CompletableFuture<Long>
- uid: com.microsoft.azure.servicebus._i_message_sender.scheduleMessageAsync*
  name: scheduleMessageAsync
  nameWithType: IMessageSender.scheduleMessageAsync
  fullName: com.microsoft.azure.servicebus.IMessageSender.scheduleMessageAsync
  package: com.microsoft.azure.servicebus
- uid: 0364520f
  spec.java:
  - name: long
    fullName: long
- uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessageAsync*
  name: cancelScheduledMessageAsync
  nameWithType: IMessageSender.cancelScheduledMessageAsync
  fullName: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessageAsync
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._i_message_sender.scheduleMessage*
  name: scheduleMessage
  nameWithType: IMessageSender.scheduleMessage
  fullName: com.microsoft.azure.servicebus.IMessageSender.scheduleMessage
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._i_message_sender.cancelScheduledMessage*
  name: cancelScheduledMessage
  nameWithType: IMessageSender.cancelScheduledMessage
  fullName: com.microsoft.azure.servicebus.IMessageSender.cancelScheduledMessage
  package: com.microsoft.azure.servicebus
- uid: com.microsoft.azure.servicebus._i_closeable.close()
  parent: com.microsoft.azure.servicebus._i_closeable
  href: com.microsoft.azure.servicebus._i_closeable.yml
  name: close()
  nameWithType: ICloseable.close()
  fullName: com.microsoft.azure.servicebus.ICloseable.close()
  type: Method
  summary: <p>Synchronously closes and disposes any resources associated with this object. Calling this method is equivalent of calling . This method blocks until this object is closed. </p>
  syntax:
    content: public void close()
- uid: com.microsoft.azure.servicebus._i_closeable.closeAsync()
  parent: com.microsoft.azure.servicebus._i_closeable
  href: com.microsoft.azure.servicebus._i_closeable.yml
  name: closeAsync()
  nameWithType: ICloseable.closeAsync()
  fullName: com.microsoft.azure.servicebus.ICloseable.closeAsync()
  type: Method
  summary: <p>Closes and disposes any resources associated with this object. An object cannot be used after it is closed. This is an asynchronous method that returns a CompletableFuture immediately. This object is completely closed when the returned CompletableFuture is completed. </p>
  syntax:
    content: public CompletableFuture<Void> closeAsync()
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the closing of this object. </p>
- uid: com.microsoft.azure.servicebus._i_message_entity_client.getEntityPath()
  parent: com.microsoft.azure.servicebus._i_message_entity_client
  href: com.microsoft.azure.servicebus._i_message_entity_client.yml
  name: getEntityPath()
  nameWithType: IMessageEntityClient.getEntityPath()
  fullName: com.microsoft.azure.servicebus.IMessageEntityClient.getEntityPath()
  type: Method
  summary: >-
    <p>Gets the path of the entity this client is sending messages to or receiving messages from.</p>

    <p></p>
  syntax:
    content: public String getEntityPath()
    return:
      type: "26831127"
      description: <p>path of the entity this client is connecting to </p>
- uid: com.microsoft.azure.servicebus._i_message_entity_client
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_message_entity_client.yml
  name: IMessageEntityClient
  nameWithType: IMessageEntityClient
  fullName: com.microsoft.azure.servicebus.IMessageEntityClient
  type: Interface
  summary: >-
    <p>Represents a messaging client to an Azure Service Bus entity.</p>

    <p></p>
  syntax:
    content: public interface IMessageEntityClient extends ICloseable
- uid: com.microsoft.azure.servicebus._i_queue_client
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_queue_client.yml
  name: IQueueClient
  nameWithType: IQueueClient
  fullName: com.microsoft.azure.servicebus.IQueueClient
  type: Interface
  summary: <p>QueueClient can be used for all basic interactions with a Service Bus Queue. </p>
  syntax:
    content: public interface IQueueClient
- uid: com.microsoft.azure.servicebus._i_topic_client
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_topic_client.yml
  name: ITopicClient
  nameWithType: ITopicClient
  fullName: com.microsoft.azure.servicebus.ITopicClient
  type: Interface
  summary: <p>TopicClient can be used for all basic interactions with a Service Bus topic. <code></code></p>
  syntax:
    content: public interface ITopicClient
- uid: com.microsoft.azure.servicebus._message_sender
- uid: com.microsoft.azure.servicebus._topic_client.send(IMessage)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: send(IMessage message)
  nameWithType: TopicClient.send(IMessage message)
  fullName: com.microsoft.azure.servicebus.TopicClient.send(IMessage message)
  type: Method
  summary: >-
    <p>Sends a message to the Azure Service Bus entity this sender is connected to. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public void send(IMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
- uid: com.microsoft.azure.servicebus._queue_client.send(IMessage)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: send(IMessage message)
  nameWithType: QueueClient.send(IMessage message)
  fullName: com.microsoft.azure.servicebus.QueueClient.send(IMessage message)
  type: Method
  summary: >-
    <p>Sends a message to the Azure Service Bus entity this sender is connected to. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public void send(IMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
- uid: com.microsoft.azure.servicebus._i_message
  parent: com.microsoft.azure.servicebus
  href: com.microsoft.azure.servicebus._i_message.yml
  name: IMessage
  nameWithType: IMessage
  fullName: com.microsoft.azure.servicebus.IMessage
  type: Interface
  summary: >-
    <p>Represents the message that is exchanged between Azure Service Bus and its clients.</p>

    <p></p>
  syntax:
    content: public interface IMessage
- uid: com.microsoft.azure.servicebus.primitives._service_bus_exception
  parent: com.microsoft.azure.servicebus.primitives
  href: com.microsoft.azure.servicebus.primitives._service_bus_exception.yml
  name: ServiceBusException
  nameWithType: ServiceBusException
  fullName: com.microsoft.azure.servicebus.primitives.ServiceBusException
  type: Class
  summary: <p>This is the base exception that service bus will generate for all error cases. </p>
  syntax:
    content: public class ServiceBusException
- uid: com.microsoft.azure.servicebus._topic_client.sendBatch(Collection<? extends IMessage>)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: sendBatch(Collection<? extends IMessage> messages)
  nameWithType: TopicClient.sendBatch(Collection<? extends IMessage> messages)
  fullName: com.microsoft.azure.servicebus.TopicClient.sendBatch(Collection<? extends IMessage> messages)
  type: Method
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This method blocks until the batch is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public void sendBatch(Collection<? extends IMessage> messages)
    parameters:
    - id: messages
      type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>collection of messages to be sent to the entity </p>
- uid: com.microsoft.azure.servicebus._queue_client.sendBatch(Collection<? extends IMessage>)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: sendBatch(Collection<? extends IMessage> messages)
  nameWithType: QueueClient.sendBatch(Collection<? extends IMessage> messages)
  fullName: com.microsoft.azure.servicebus.QueueClient.sendBatch(Collection<? extends IMessage> messages)
  type: Method
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This method blocks until the batch is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public void sendBatch(Collection<? extends IMessage> messages)
    parameters:
    - id: messages
      type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>collection of messages to be sent to the entity </p>
- uid: com.microsoft.azure.servicebus._topic_client.sendAsync(IMessage)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: sendAsync(IMessage message)
  nameWithType: TopicClient.sendAsync(IMessage message)
  fullName: com.microsoft.azure.servicebus.TopicClient.sendAsync(IMessage message)
  type: Method
  summary: >-
    <p>Sends a message to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> sendAsync(IMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending send </p>
- uid: com.microsoft.azure.servicebus._queue_client.sendAsync(IMessage)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: sendAsync(IMessage message)
  nameWithType: QueueClient.sendAsync(IMessage message)
  fullName: com.microsoft.azure.servicebus.QueueClient.sendAsync(IMessage message)
  type: Method
  summary: >-
    <p>Sends a message to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> sendAsync(IMessage message)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending send </p>
- uid: com.microsoft.azure.servicebus._topic_client.sendBatchAsync(Collection<? extends IMessage>)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: sendBatchAsync(Collection<? extends IMessage> messages)
  nameWithType: TopicClient.sendBatchAsync(Collection<? extends IMessage> messages)
  fullName: com.microsoft.azure.servicebus.TopicClient.sendBatchAsync(Collection<? extends IMessage> messages)
  type: Method
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the batch is sent to the entity.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
    parameters:
    - id: messages
      type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>collection of messages to be sent to the entity </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending send </p>
- uid: com.microsoft.azure.servicebus._queue_client.sendBatchAsync(Collection<? extends IMessage>)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: sendBatchAsync(Collection<? extends IMessage> messages)
  nameWithType: QueueClient.sendBatchAsync(Collection<? extends IMessage> messages)
  fullName: com.microsoft.azure.servicebus.QueueClient.sendBatchAsync(Collection<? extends IMessage> messages)
  type: Method
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the batch is sent to the entity.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
    parameters:
    - id: messages
      type: d56263b8com.microsoft.azure.servicebus._i_messagea08ddfce
      description: <p>collection of messages to be sent to the entity </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending send </p>
- uid: com.microsoft.azure.servicebus._topic_client.scheduleMessageAsync(IMessage,Instant)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  nameWithType: TopicClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.TopicClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: >-
    <p>Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity. The CompletableFuture, on completion, returns the sequence number of the scheduled message which can be used to cancel the scheduling of the message.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>instant at which the message should be enqueued in the entity </p>
    return:
      type: 30822cb1
      description: <p>a CompletableFuture representing the pending send, which returns the sequence number of the scheduled message. This sequence number can be used to cancel the scheduling of the message. </p>
- uid: com.microsoft.azure.servicebus._queue_client.scheduleMessageAsync(IMessage,Instant)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  nameWithType: QueueClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.QueueClient.scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: >-
    <p>Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This is an asynchronous method returning a CompletableFuture which completes when the message is sent to the entity. The CompletableFuture, on completion, returns the sequence number of the scheduled message which can be used to cancel the scheduling of the message.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Long> scheduleMessageAsync(IMessage message, Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>instant at which the message should be enqueued in the entity </p>
    return:
      type: 30822cb1
      description: <p>a CompletableFuture representing the pending send, which returns the sequence number of the scheduled message. This sequence number can be used to cancel the scheduling of the message. </p>
- uid: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessageAsync(long)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: cancelScheduledMessageAsync(long sequenceNumber)
  nameWithType: TopicClient.cancelScheduledMessageAsync(long sequenceNumber)
  fullName: com.microsoft.azure.servicebus.TopicClient.cancelScheduledMessageAsync(long sequenceNumber)
  type: Method
  summary: >-
    <p>Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This is an asynchronous method returning a CompletableFuture which completes when the message is cancelled.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending cancellation </p>
- uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessageAsync(long)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: cancelScheduledMessageAsync(long sequenceNumber)
  nameWithType: QueueClient.cancelScheduledMessageAsync(long sequenceNumber)
  fullName: com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessageAsync(long sequenceNumber)
  type: Method
  summary: >-
    <p>Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This is an asynchronous method returning a CompletableFuture which completes when the message is cancelled.</p>

    <p></p>
  syntax:
    content: public CompletableFuture<Void> cancelScheduledMessageAsync(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
    return:
      type: db03ee24
      description: <p>a CompletableFuture representing the pending cancellation </p>
- uid: com.microsoft.azure.servicebus._topic_client.scheduleMessage(IMessage,Instant)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  nameWithType: TopicClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.TopicClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: >-
    <p>Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>instant at which the message should be enqueued in the entity </p>
    return:
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
- uid: com.microsoft.azure.servicebus._queue_client.scheduleMessage(IMessage,Instant)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  nameWithType: QueueClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  fullName: com.microsoft.azure.servicebus.QueueClient.scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
  type: Method
  summary: >-
    <p>Sends a scheduled message to the Azure Service Bus entity this sender is connected to. A scheduled message is enqueued and made available to receivers only at the scheduled enqueue time. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public long scheduleMessage(IMessage message, Instant scheduledEnqueueTimeUtc)
    parameters:
    - id: message
      type: com.microsoft.azure.servicebus._i_message
      description: <p>message to be sent to the entity </p>
    - id: scheduledEnqueueTimeUtc
      type: 328f8254
      description: <p>instant at which the message should be enqueued in the entity </p>
    return:
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
- uid: com.microsoft.azure.servicebus._topic_client.cancelScheduledMessage(long)
  parent: com.microsoft.azure.servicebus._topic_client
  href: com.microsoft.azure.servicebus._topic_client.yml
  name: cancelScheduledMessage(long sequenceNumber)
  nameWithType: TopicClient.cancelScheduledMessage(long sequenceNumber)
  fullName: com.microsoft.azure.servicebus.TopicClient.cancelScheduledMessage(long sequenceNumber)
  type: Method
  summary: >-
    <p>Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public void cancelScheduledMessage(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
- uid: com.microsoft.azure.servicebus._queue_client.cancelScheduledMessage(long)
  parent: com.microsoft.azure.servicebus._queue_client
  href: com.microsoft.azure.servicebus._queue_client.yml
  name: cancelScheduledMessage(long sequenceNumber)
  nameWithType: QueueClient.cancelScheduledMessage(long sequenceNumber)
  fullName: com.microsoft.azure.servicebus.QueueClient.cancelScheduledMessage(long sequenceNumber)
  type: Method
  summary: >-
    <p>Cancels the enqueuing of an already sent scheduled message, if it was not already enqueued. This method blocks until the message is sent to the entity. Calling this method is equivalent to calling . For better performance, use async methods.</p>

    <p></p>
  syntax:
    content: public void cancelScheduledMessage(long sequenceNumber)
    parameters:
    - id: sequenceNumber
      type: 0364520f
      description: <p>sequence number of the scheduled message </p>
