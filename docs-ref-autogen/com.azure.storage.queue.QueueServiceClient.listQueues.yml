### YamlMime:JavaMember
uid: "com.azure.storage.queue.QueueServiceClient.listQueues*"
fullName: "com.azure.storage.queue.QueueServiceClient.listQueues"
name: "listQueues"
nameWithType: "QueueServiceClient.listQueues"
members:
- uid: "com.azure.storage.queue.QueueServiceClient.listQueues()"
  fullName: "com.azure.storage.queue.QueueServiceClient.listQueues()"
  name: "listQueues()"
  nameWithType: "QueueServiceClient.listQueues()"
  summary: "Lists all queues in the storage account without their metadata.\n\n**Code Samples**\n\nList all queues in the account\n\n```java\nclient.listQueues().forEach(\n     queueItem -> System.out.printf(\"Queue %s exists in the account\", queueItem.getName())\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-queues1"
  syntax: "public PagedIterable<QueueItem> listQueues()"
  returns:
    description: "<xref uid=\"com.azure.storage.queue.models.QueueItem\" data-throw-if-not-resolved=\"false\">Queues</xref> in the storage account"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.queue.models.QueueItem?alt=com.azure.storage.queue.models.QueueItem&text=QueueItem\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.queue.QueueServiceClient.listQueues(com.azure.storage.queue.models.QueuesSegmentOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.queue.QueueServiceClient.listQueues(QueuesSegmentOptions options, Duration timeout, Context context)"
  name: "listQueues(QueuesSegmentOptions options, Duration timeout, Context context)"
  nameWithType: "QueueServiceClient.listQueues(QueuesSegmentOptions options, Duration timeout, Context context)"
  summary: "Lists the queues in the storage account that pass the filter. Pass true to <xref uid=\"com.azure.storage.queue.models.QueuesSegmentOptions.setIncludeMetadata(boolean)\" data-throw-if-not-resolved=\"false\">includeMetadata</xref> to have metadata returned for the queues.\n\n**Code Samples**\n\nList all queues that begin with \"azure\"\n\n```java\nclient.listQueues(new QueuesSegmentOptions().setPrefix(\"azure\"), Duration.ofSeconds(1),\n     new Context(key1, value1)).forEach(\n         queueItem -> System.out.printf(\"Queue %s exists in the account and has metadata %s\",\n         queueItem.getName(), queueItem.getMetadata())\n );\n```\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-queues1"
  parameters:
  - description: "Options for listing queues"
    name: "options"
    type: "<xref href=\"com.azure.storage.queue.models.QueuesSegmentOptions?alt=com.azure.storage.queue.models.QueuesSegmentOptions&text=QueuesSegmentOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<QueueItem> listQueues(QueuesSegmentOptions options, Duration timeout, Context context)"
  returns:
    description: "<xref uid=\"com.azure.storage.queue.models.QueueItem\" data-throw-if-not-resolved=\"false\">Queues</xref> in the storage account that satisfy the filter requirements"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.queue.models.QueueItem?alt=com.azure.storage.queue.models.QueueItem&text=QueueItem\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.queue"
artifact: com.azure:azure-storage-queue:12.6.0
