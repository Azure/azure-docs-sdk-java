### YamlMime:JavaType
uid: "com.azure.resourcemanager.resources.fluentcore.dag.Node"
fullName: "com.azure.resourcemanager.resources.fluentcore.dag.Node<DataT,NodeT>"
name: "Node<DataT,NodeT>"
nameWithType: "Node<DataT,NodeT>"
summary: "Type represents a node in a <xref uid=\"com.azure.resourcemanager.resources.fluentcore.dag.Graph\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Graph\"></xref>."
inheritances:
- "<xref href=\"java.lang.Object\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class Node<DataT,NodeT>"
constructors:
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.Node(java.lang.String,DataT)"
methods:
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.addChild(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.children()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.data()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.hasChildren()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.key()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.owner()"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.removeChild(java.lang.String)"
- "com.azure.resourcemanager.resources.fluentcore.dag.Node.setOwner(com.azure.resourcemanager.resources.fluentcore.dag.Graph<DataT,NodeT>)"
type: "class"
typeParameters:
- name: "DataT"
- name: "NodeT"
metadata: {}
package: "com.azure.resourcemanager.resources.fluentcore.dag"
artifact: com.azure.resourcemanager:azure-resourcemanager-resources:2.1.0
