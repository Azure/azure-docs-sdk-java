### YamlMime:JavaType
constructors:
- fullName: com.microsoft.aad.adal4j.ClientCredential.ClientCredential(final String clientId, final String clientSecret)
  name: ClientCredential(final String clientId, final String clientSecret)
  nameWithType: ClientCredential.ClientCredential(final String clientId, final String clientSecret)
  parameters:
  - description: <p>Identifier of the client requesting the token. </p>
    name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>Secret of the client requesting the token. </p>
    name: clientSecret
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Constructor to create credential with client id and secret</p>

    <p></p>
  syntax: public ClientCredential(final String clientId, final String clientSecret)
  uid: com.microsoft.aad.adal4j.ClientCredential.ClientCredential(final String,final String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.aad.adal4j.ClientCredential.equals(Object obj)
  name: equals(Object obj)
  nameWithType: ClientCredential.equals(Object obj)
  parameters:
  - name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.aad.adal4j.ClientCredential.equals(Object)
- fullName: com.microsoft.aad.adal4j.ClientCredential.getClientId()
  name: getClientId()
  nameWithType: ClientCredential.getClientId()
  returns:
    description: <p>string client id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the identifier of the client requesting the token.</p>

    <p></p>
  syntax: public String getClientId()
  uid: com.microsoft.aad.adal4j.ClientCredential.getClientId()
- fullName: com.microsoft.aad.adal4j.ClientCredential.getClientSecret()
  name: getClientSecret()
  nameWithType: ClientCredential.getClientSecret()
  returns:
    description: <p>string client secret value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the secret of the client requesting the token.</p>

    <p></p>
  syntax: public String getClientSecret()
  uid: com.microsoft.aad.adal4j.ClientCredential.getClientSecret()
- fullName: com.microsoft.aad.adal4j.ClientCredential.hashCode()
  name: hashCode()
  nameWithType: ClientCredential.hashCode()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int hashCode()
  uid: com.microsoft.aad.adal4j.ClientCredential.hashCode()
nameWithType: ClientCredential
syntax: public class ClientCredential
type: class
uid: com.microsoft.aad.adal4j.ClientCredential
fullName: com.microsoft.aad.adal4j.ClientCredential
name: ClientCredential
package: com.microsoft.aad.adal4j
summary: <p>Credential including client id and secret. </p>
metadata: {}
