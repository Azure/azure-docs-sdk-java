### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlockBlobClient.listBlocksWithResponse*"
fullName: "com.azure.storage.blob.specialized.BlockBlobClient.listBlocksWithResponse"
name: "listBlocksWithResponse"
nameWithType: "BlockBlobClient.listBlocksWithResponse"
members:
- uid: "com.azure.storage.blob.specialized.BlockBlobClient.listBlocksWithResponse(com.azure.storage.blob.models.BlockListType,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobClient.listBlocksWithResponse(BlockListType listType, String leaseId, Duration timeout, Context context)"
  name: "listBlocksWithResponse(BlockListType listType, String leaseId, Duration timeout, Context context)"
  nameWithType: "BlockBlobClient.listBlocksWithResponse(BlockListType listType, String leaseId, Duration timeout, Context context)"
  summary: "Returns the list of blocks that have been uploaded as part of a block blob using the specified block list filter. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nContext context = new Context(\"key\", \"value\");\n BlockList block = client.listBlocksWithResponse(BlockListType.ALL, leaseId, timeout, context).getValue();\n \n System.out.println(\"Committed Blocks:\");\n block.getCommittedBlocks().forEach(b -> System.out.printf(\"Name: %s, Size: %d\", b.getName(), b.getSize()));\n \n System.out.println(\"Uncommitted Blocks:\");\n block.getUncommittedBlocks().forEach(b -> System.out.printf(\"Name: %s, Size: %d\", b.getName(), b.getSize()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-block-list"
  parameters:
  - description: "Specifies which type of blocks to return."
    name: "listType"
    type: "<xref href=\"com.azure.storage.blob.models.BlockListType?alt=com.azure.storage.blob.models.BlockListType&text=BlockListType\" data-throw-if-not-resolved=\"False\" />"
  - description: "The lease ID the active lease on the blob must match."
    name: "leaseId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlockList> listBlocksWithResponse(BlockListType listType, String leaseId, Duration timeout, Context context)"
  returns:
    description: "The list of blocks."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockList?alt=com.azure.storage.blob.models.BlockList&text=BlockList\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.storage.blob.specialized.BlockBlobClient.listBlocksWithResponse(com.azure.storage.blob.options.BlockBlobListBlocksOptions,java.time.Duration,com.azure.core.util.Context)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobClient.listBlocksWithResponse(BlockBlobListBlocksOptions options, Duration timeout, Context context)"
  name: "listBlocksWithResponse(BlockBlobListBlocksOptions options, Duration timeout, Context context)"
  nameWithType: "BlockBlobClient.listBlocksWithResponse(BlockBlobListBlocksOptions options, Duration timeout, Context context)"
  summary: "Returns the list of blocks that have been uploaded as part of a block blob using the specified block list filter. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nContext context = new Context(\"key\", \"value\");\n BlockList block = client.listBlocksWithResponse(new BlockBlobListBlocksOptions(BlockListType.ALL)\n     .setLeaseId(leaseId)\n     .setIfTagsMatch(tags), timeout, context).getValue();\n \n System.out.println(\"Committed Blocks:\");\n block.getCommittedBlocks().forEach(b -> System.out.printf(\"Name: %s, Size: %d\", b.getName(), b.getSizeLong()));\n \n System.out.println(\"Uncommitted Blocks:\");\n block.getUncommittedBlocks().forEach(b -> System.out.printf(\"Name: %s, Size: %d\", b.getName(), b.getSizeLong()));\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/get-block-list"
  parameters:
  - description: "<xref uid=\"com.azure.storage.blob.options.BlockBlobListBlocksOptions\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BlockBlobListBlocksOptions\"></xref>"
    name: "options"
    type: "<xref href=\"com.azure.storage.blob.options.BlockBlobListBlocksOptions?alt=com.azure.storage.blob.options.BlockBlobListBlocksOptions&text=BlockBlobListBlocksOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "An optional timeout value beyond which a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RuntimeException\"></xref> will be raised."
    name: "timeout"
    type: "<xref href=\"java.time.Duration?alt=java.time.Duration&text=Duration\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the Http pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BlockList> listBlocksWithResponse(BlockBlobListBlocksOptions options, Duration timeout, Context context)"
  returns:
    description: "The list of blocks."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.storage.blob.models.BlockList?alt=com.azure.storage.blob.models.BlockList&text=BlockList\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.8.0
