### YamlMime:JavaType
uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient"
fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient"
name: "GroupLifecyclePoliciesClient"
nameWithType: "GroupLifecyclePoliciesClient"
summary: "An instance of this class provides access to all the operations defined in GroupLifecyclePoliciesClient."
syntax: "public interface GroupLifecyclePoliciesClient"
methods:
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroup(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  name: "addGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  nameWithType: "GroupLifecyclePoliciesClient.addGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  summary: "Invoke action addGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody&text=GroupLifecyclePoliciesAddGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean addGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  returns:
    description: "the response."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroupAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  name: "addGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  nameWithType: "GroupLifecyclePoliciesClient.addGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  summary: "Invoke action addGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody&text=GroupLifecyclePoliciesAddGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Boolean> addGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroupWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body, Context context)"
  name: "addGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body, Context context)"
  nameWithType: "GroupLifecyclePoliciesClient.addGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body, Context context)"
  summary: "Invoke action addGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody&text=GroupLifecyclePoliciesAddGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Boolean> addGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroupWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.addGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  name: "addGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  nameWithType: "GroupLifecyclePoliciesClient.addGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  summary: "Invoke action addGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesAddGroupRequestBody&text=GroupLifecyclePoliciesAddGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Boolean>> addGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesAddGroupRequestBody body)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroup(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  name: "removeGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  nameWithType: "GroupLifecyclePoliciesClient.removeGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  summary: "Invoke action removeGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody&text=GroupLifecyclePoliciesRemoveGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract boolean removeGroup(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  returns:
    description: "the response."
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroupAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  name: "removeGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  nameWithType: "GroupLifecyclePoliciesClient.removeGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  summary: "Invoke action removeGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody&text=GroupLifecyclePoliciesRemoveGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Boolean> removeGroupAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroupWithResponse(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody,com.azure.core.util.Context)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body, Context context)"
  name: "removeGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body, Context context)"
  nameWithType: "GroupLifecyclePoliciesClient.removeGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body, Context context)"
  summary: "Invoke action removeGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody&text=GroupLifecyclePoliciesRemoveGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  - description: "The context to associate with this operation."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Response<Boolean> removeGroupWithResponse(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body, Context context)"
  returns:
    description: "the response."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroupWithResponseAsync(java.lang.String,com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody)"
  fullName: "com.azure.resourcemanager.authorization.fluent.GroupLifecyclePoliciesClient.removeGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  name: "removeGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  nameWithType: "GroupLifecyclePoliciesClient.removeGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  summary: "Invoke action removeGroup."
  modifiers:
  - "abstract"
  parameters:
  - description: "key: id of groupLifecyclePolicy."
    name: "groupLifecyclePolicyId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "Action parameters."
    name: "body"
    type: "<xref href=\"com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody?alt=com.azure.resourcemanager.authorization.fluent.models.GroupLifecyclePoliciesRemoveGroupRequestBody&text=GroupLifecyclePoliciesRemoveGroupRequestBody\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Mono<Response<Boolean>> removeGroupWithResponseAsync(String groupLifecyclePolicyId, GroupLifecyclePoliciesRemoveGroupRequestBody body)"
  returns:
    description: "the response."
    type: "<xref href=\"reactor.core.publisher.Mono?alt=reactor.core.publisher.Mono&text=Mono\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.Boolean?alt=java.lang.Boolean&text=Boolean\" data-throw-if-not-resolved=\"False\" />&gt;&gt;"
type: "interface"
metadata: {}
package: "com.azure.resourcemanager.authorization.fluent"
artifact: com.azure.resourcemanager:azure-resourcemanager-authorization:2.14.0
