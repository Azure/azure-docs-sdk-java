### YamlMime:JavaType
uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration"
fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration"
name: "ApplicationGatewayBackendHttpConfiguration"
nameWithType: "ApplicationGatewayBackendHttpConfiguration"
summary: "A client-side representation of an application gateway's backend HTTP configuration."
syntax: "public interface ApplicationGatewayBackendHttpConfiguration extends HasInner<ApplicationGatewayBackendHttpSettings>, ChildResource<ApplicationGateway>, HasProtocol<ApplicationGatewayProtocol>, HasPort"
methods:
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.affinityCookieName()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.affinityCookieName()"
  name: "affinityCookieName()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.affinityCookieName()"
  modifiers:
  - "abstract"
  syntax: "public abstract String affinityCookieName()"
  returns:
    description: "name used for the affinity cookie"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.authenticationCertificates()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.authenticationCertificates()"
  name: "authenticationCertificates()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.authenticationCertificates()"
  modifiers:
  - "abstract"
  syntax: "public abstract Map<String,ApplicationGatewayAuthenticationCertificate> authenticationCertificates()"
  returns:
    description: "authentication certificates associated with this backend HTTPS configuration"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayAuthenticationCertificate?alt=com.microsoft.azure.management.network.ApplicationGatewayAuthenticationCertificate&text=ApplicationGatewayAuthenticationCertificate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.connectionDrainingTimeoutInSeconds()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.connectionDrainingTimeoutInSeconds()"
  name: "connectionDrainingTimeoutInSeconds()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.connectionDrainingTimeoutInSeconds()"
  modifiers:
  - "abstract"
  syntax: "public abstract int connectionDrainingTimeoutInSeconds()"
  returns:
    description: "if 0 then connection draining is not enabled, otherwise if between 1 and 3600, then the number of seconds when connection draining is active"
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.cookieBasedAffinity()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.cookieBasedAffinity()"
  name: "cookieBasedAffinity()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.cookieBasedAffinity()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean cookieBasedAffinity()"
  returns:
    description: "true if cookie based affinity (sticky sessions) is enabled, else false"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.hostHeader()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.hostHeader()"
  name: "hostHeader()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.hostHeader()"
  modifiers:
  - "abstract"
  syntax: "public abstract String hostHeader()"
  returns:
    description: "host header to be sent to the backend servers"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.isHostHeaderFromBackend()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.isHostHeaderFromBackend()"
  name: "isHostHeaderFromBackend()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.isHostHeaderFromBackend()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isHostHeaderFromBackend()"
  returns:
    description: "whether the host header should come from the host name of the backend server"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.isProbeEnabled()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.isProbeEnabled()"
  name: "isProbeEnabled()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.isProbeEnabled()"
  modifiers:
  - "abstract"
  syntax: "public abstract boolean isProbeEnabled()"
  returns:
    description: "true if the probe is enabled"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.path()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.path()"
  name: "path()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.path()"
  modifiers:
  - "abstract"
  syntax: "public abstract String path()"
  returns:
    description: "the path, if any, used as a prefix for all HTTP requests"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.probe()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.probe()"
  name: "probe()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.probe()"
  modifiers:
  - "abstract"
  syntax: "public abstract ApplicationGatewayProbe probe()"
  returns:
    description: "the probe associated with this backend"
    type: "<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayProbe?alt=com.microsoft.azure.management.network.ApplicationGatewayProbe&text=ApplicationGatewayProbe\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.requestTimeout()"
  fullName: "com.microsoft.azure.management.network.ApplicationGatewayBackendHttpConfiguration.requestTimeout()"
  name: "requestTimeout()"
  nameWithType: "ApplicationGatewayBackendHttpConfiguration.requestTimeout()"
  modifiers:
  - "abstract"
  syntax: "public abstract int requestTimeout()"
  returns:
    description: "HTTP request timeout in seconds. Requests will fail if no response is received within the specified time."
    type: "<xref href=\"int?alt=int&text=int\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "A client-side representation of an application gateway's backend HTTP configuration."
implements:
- "<xref href=\"com.microsoft.azure.management.network.model.HasPort?alt=com.microsoft.azure.management.network.model.HasPort&text=HasPort\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.azure.management.network.model.HasProtocol?alt=com.microsoft.azure.management.network.model.HasProtocol&text=HasProtocol\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayProtocol?alt=com.microsoft.azure.management.network.ApplicationGatewayProtocol&text=ApplicationGatewayProtocol\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.arm.models.ChildResource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.ChildResource&text=ChildResource\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGateway?alt=com.microsoft.azure.management.network.ApplicationGateway&text=ApplicationGateway\" data-throw-if-not-resolved=\"False\" />&gt;"
- "<xref href=\"com.microsoft.azure.management.resources.fluentcore.model.HasInner?alt=com.microsoft.azure.management.resources.fluentcore.model.HasInner&text=HasInner\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.management.network.ApplicationGatewayBackendHttpSettings?alt=com.microsoft.azure.management.network.ApplicationGatewayBackendHttpSettings&text=ApplicationGatewayBackendHttpSettings\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.microsoft.azure.management.network"
artifact: com.microsoft.azure:azure-mgmt-network:1.41.4
