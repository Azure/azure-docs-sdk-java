### YamlMime:JavaType
uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties"
fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties"
name: "UpdateDataLakeStoreAccountProperties"
nameWithType: "UpdateDataLakeStoreAccountProperties"
summary: "Data Lake Store account properties information to be updated."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **UpdateDataLakeStoreAccountProperties**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.UpdateDataLakeStoreAccountProperties()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.UpdateDataLakeStoreAccountProperties()"
  name: "UpdateDataLakeStoreAccountProperties()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.UpdateDataLakeStoreAccountProperties()"
  summary: "Creates an instance of Update<wbr>Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Properties class."
  syntax: "public UpdateDataLakeStoreAccountProperties()"
  desc: "Creates an instance of UpdateDataLakeStoreAccountProperties class."
methods:
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.defaultGroup()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.defaultGroup()"
  name: "defaultGroup()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.defaultGroup()"
  summary: "Get the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  syntax: "public String defaultGroup()"
  desc: "Get the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the defaultGroup value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.encryptionConfig()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.encryptionConfig()"
  name: "encryptionConfig()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.encryptionConfig()"
  summary: "Get the encryption<wbr>Config property: Used for rotation of user managed Key Vault keys."
  syntax: "public UpdateEncryptionConfig encryptionConfig()"
  desc: "Get the encryptionConfig property: Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key."
  returns:
    description: "the encryptionConfig value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.firewallAllowAzureIps()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.firewallAllowAzureIps()"
  name: "firewallAllowAzureIps()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.firewallAllowAzureIps()"
  summary: "Get the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  syntax: "public FirewallAllowAzureIpsState firewallAllowAzureIps()"
  desc: "Get the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the firewallAllowAzureIps value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.firewallRules()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.firewallRules()"
  name: "firewallRules()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.firewallRules()"
  summary: "Get the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  syntax: "public List<UpdateFirewallRuleWithAccountParameters> firewallRules()"
  desc: "Get the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the firewallRules value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters&text=UpdateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.firewallState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.firewallState()"
  name: "firewallState()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.firewallState()"
  summary: "Get the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  syntax: "public FirewallState firewallState()"
  desc: "Get the firewallState property: The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled."
  returns:
    description: "the firewallState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Update<wbr>Data<wbr>Lake<wbr>Store<wbr>Account<wbr>Properties from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static UpdateDataLakeStoreAccountProperties fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the UpdateDataLakeStoreAccountProperties."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of UpdateDataLakeStoreAccountProperties from the JsonReader."
  returns:
    description: "An instance of UpdateDataLakeStoreAccountProperties if the JsonReader was pointing to an instance of it,\n or null if it was pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.newTier()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.newTier()"
  name: "newTier()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.newTier()"
  summary: "Get the new<wbr>Tier property: The commitment tier to use for next month."
  syntax: "public TierType newTier()"
  desc: "Get the newTier property: The commitment tier to use for next month."
  returns:
    description: "the newTier value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.trustedIdProviderState()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.trustedIdProviderState()"
  name: "trustedIdProviderState()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.trustedIdProviderState()"
  summary: "Get the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  syntax: "public TrustedIdProviderState trustedIdProviderState()"
  desc: "Get the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled."
  returns:
    description: "the trustedIdProviderState value."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.trustedIdProviders()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.trustedIdProviders()"
  name: "trustedIdProviders()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.trustedIdProviders()"
  summary: "Get the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  syntax: "public List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders()"
  desc: "Get the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the trustedIdProviders value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters&text=UpdateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.validate()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.validate()"
  name: "validate()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.virtualNetworkRules()"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.virtualNetworkRules()"
  name: "virtualNetworkRules()"
  nameWithType: "UpdateDataLakeStoreAccountProperties.virtualNetworkRules()"
  summary: "Get the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  syntax: "public List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules()"
  desc: "Get the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the virtualNetworkRules value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters&text=UpdateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withDefaultGroup(java.lang.String)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withDefaultGroup(String defaultGroup)"
  name: "withDefaultGroup(String defaultGroup)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withDefaultGroup(String defaultGroup)"
  summary: "Set the default<wbr>Group property: The default owner group for all new folders and files created in the Data Lake Store account."
  parameters:
  - description: "the defaultGroup value to set."
    name: "defaultGroup"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public UpdateDataLakeStoreAccountProperties withDefaultGroup(String defaultGroup)"
  desc: "Set the defaultGroup property: The default owner group for all new folders and files created in the Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withEncryptionConfig(com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  name: "withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  summary: "Set the encryption<wbr>Config property: Used for rotation of user managed Key Vault keys."
  parameters:
  - description: "the encryptionConfig value to set."
    name: "encryptionConfig"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig?alt=com.azure.resourcemanager.datalakestore.models.UpdateEncryptionConfig&text=UpdateEncryptionConfig\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountProperties withEncryptionConfig(UpdateEncryptionConfig encryptionConfig)"
  desc: "Set the encryptionConfig property: Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withFirewallAllowAzureIps(com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  name: "withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  summary: "Set the firewall<wbr>Allow<wbr>Azure<wbr>Ips property: The current state of allowing or disallowing IPs originating within Azure through the firewall."
  parameters:
  - description: "the firewallAllowAzureIps value to set."
    name: "firewallAllowAzureIps"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState?alt=com.azure.resourcemanager.datalakestore.models.FirewallAllowAzureIpsState&text=FirewallAllowAzureIpsState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountProperties withFirewallAllowAzureIps(FirewallAllowAzureIpsState firewallAllowAzureIps)"
  desc: "Set the firewallAllowAzureIps property: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withFirewallRules(java.util.List<com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  name: "withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  summary: "Set the firewall<wbr>Rules property: The list of firewall rules associated with this Data Lake Store account."
  parameters:
  - description: "the firewallRules value to set."
    name: "firewallRules"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateFirewallRuleWithAccountParameters&text=UpdateFirewallRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UpdateDataLakeStoreAccountProperties withFirewallRules(List<UpdateFirewallRuleWithAccountParameters> firewallRules)"
  desc: "Set the firewallRules property: The list of firewall rules associated with this Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withFirewallState(com.azure.resourcemanager.datalakestore.models.FirewallState)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withFirewallState(FirewallState firewallState)"
  name: "withFirewallState(FirewallState firewallState)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withFirewallState(FirewallState firewallState)"
  summary: "Set the firewall<wbr>State property: The current state of the IP address firewall for this Data Lake Store account."
  parameters:
  - description: "the firewallState value to set."
    name: "firewallState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.FirewallState?alt=com.azure.resourcemanager.datalakestore.models.FirewallState&text=FirewallState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountProperties withFirewallState(FirewallState firewallState)"
  desc: "Set the firewallState property: The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withNewTier(com.azure.resourcemanager.datalakestore.models.TierType)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withNewTier(TierType newTier)"
  name: "withNewTier(TierType newTier)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withNewTier(TierType newTier)"
  summary: "Set the new<wbr>Tier property: The commitment tier to use for next month."
  parameters:
  - description: "the newTier value to set."
    name: "newTier"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TierType?alt=com.azure.resourcemanager.datalakestore.models.TierType&text=TierType\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountProperties withNewTier(TierType newTier)"
  desc: "Set the newTier property: The commitment tier to use for next month."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withTrustedIdProviderState(com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  name: "withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  summary: "Set the trusted<wbr>IdProvider<wbr>State property: The current state of the trusted identity provider feature for this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviderState value to set."
    name: "trustedIdProviderState"
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState?alt=com.azure.resourcemanager.datalakestore.models.TrustedIdProviderState&text=TrustedIdProviderState\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public UpdateDataLakeStoreAccountProperties withTrustedIdProviderState(TrustedIdProviderState trustedIdProviderState)"
  desc: "Set the trustedIdProviderState property: The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withTrustedIdProviders(java.util.List<com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  name: "withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  summary: "Set the trusted<wbr>IdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  parameters:
  - description: "the trustedIdProviders value to set."
    name: "trustedIdProviders"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateTrustedIdProviderWithAccountParameters&text=UpdateTrustedIdProviderWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UpdateDataLakeStoreAccountProperties withTrustedIdProviders(List<UpdateTrustedIdProviderWithAccountParameters> trustedIdProviders)"
  desc: "Set the trustedIdProviders property: The list of trusted identity providers associated with this Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withVirtualNetworkRules(java.util.List<com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters>)"
  fullName: "com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties.withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  name: "withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  nameWithType: "UpdateDataLakeStoreAccountProperties.withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  summary: "Set the virtual<wbr>Network<wbr>Rules property: The list of virtual network rules associated with this Data Lake Store account."
  parameters:
  - description: "the virtualNetworkRules value to set."
    name: "virtualNetworkRules"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters?alt=com.azure.resourcemanager.datalakestore.models.UpdateVirtualNetworkRuleWithAccountParameters&text=UpdateVirtualNetworkRuleWithAccountParameters\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public UpdateDataLakeStoreAccountProperties withVirtualNetworkRules(List<UpdateVirtualNetworkRuleWithAccountParameters> virtualNetworkRules)"
  desc: "Set the virtualNetworkRules property: The list of virtual network rules associated with this Data Lake Store account."
  returns:
    description: "the UpdateDataLakeStoreAccountProperties object itself."
    type: "<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Data Lake Store account properties information to be updated."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties?alt=com.azure.resourcemanager.datalakestore.fluent.models.UpdateDataLakeStoreAccountProperties&text=UpdateDataLakeStoreAccountProperties\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.datalakestore.fluent.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-datalakestore:1.0.0
