### YamlMime:JavaMember
uid: "com.azure.storage.blob.specialized.BlockBlobClient.stageBlock*"
fullName: "com.azure.storage.blob.specialized.BlockBlobClient.stageBlock"
name: "stageBlock"
nameWithType: "BlockBlobClient.stageBlock"
members:
- uid: "com.azure.storage.blob.specialized.BlockBlobClient.stageBlock(java.lang.String,com.azure.core.util.BinaryData)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobClient.stageBlock(String base64BlockId, BinaryData data)"
  name: "stageBlock(String base64BlockId, BinaryData data)"
  nameWithType: "BlockBlobClient.stageBlock(String base64BlockId, BinaryData data)"
  summary: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList."
  parameters:
  - description: "A Base64 encoded <code>String</code> that specifies the ID for this block. Note that all block\n ids for a given blob must be the same length."
    name: "base64BlockId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data to write to the block. Note that this <code>BinaryData</code> must have defined length\n and must be replayable if retries are enabled (the default), see <xref uid=\"com.azure.core.util.BinaryData.isReplayable*\" data-throw-if-not-resolved=\"false\" data-raw-source=\"BinaryData#isReplayable()\"></xref>."
    name: "data"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void stageBlock(String base64BlockId, BinaryData data)"
  desc: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nBinaryData binaryData = BinaryData.fromStream(data, length);\n client.stageBlock(base64BlockId, binaryData);\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-block"
- uid: "com.azure.storage.blob.specialized.BlockBlobClient.stageBlock(java.lang.String,java.io.InputStream,long)"
  fullName: "com.azure.storage.blob.specialized.BlockBlobClient.stageBlock(String base64BlockId, InputStream data, long length)"
  name: "stageBlock(String base64BlockId, InputStream data, long length)"
  nameWithType: "BlockBlobClient.stageBlock(String base64BlockId, InputStream data, long length)"
  summary: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList."
  parameters:
  - description: "A Base64 encoded <code>String</code> that specifies the ID for this block. Note that all block\n ids for a given blob must be the same length."
    name: "base64BlockId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The data to write to the block. The data must be markable. This is in order to support retries. If\n the data is not markable, consider using <xref uid=\"com.azure.storage.blob.specialized.BlockBlobClient.getBlobOutputStream()\" data-throw-if-not-resolved=\"false\" data-raw-source=\"#getBlobOutputStream()\"></xref> and writing to the returned OutputStream.\n Alternatively, consider wrapping your data source in a <xref uid=\"\" data-throw-if-not-resolved=\"false\" data-raw-source=\"java.io.BufferedInputStream\"></xref> to add mark support."
    name: "data"
    type: "<xref href=\"java.io.InputStream?alt=java.io.InputStream&text=InputStream\" data-throw-if-not-resolved=\"False\" />"
  - description: "The exact length of the data. It is important that this value match precisely the length of the\n data provided in the <xref uid=\"java.io.InputStream\" data-throw-if-not-resolved=\"false\" data-raw-source=\"InputStream\"></xref>."
    name: "length"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void stageBlock(String base64BlockId, InputStream data, long length)"
  desc: "Uploads the specified block to the block blob's \"staging area\" to be later committed by a call to commitBlockList. For more information, see the [Azure Docs][].\n\n**Code Samples**\n\n```java\nclient.stageBlock(base64BlockId, data, length);\n```\n\n\n[Azure Docs]: https://docs.microsoft.com/rest/api/storageservices/put-block"
type: "method"
metadata: {}
package: "com.azure.storage.blob.specialized"
artifact: com.azure:azure-storage-blob:12.19.0
