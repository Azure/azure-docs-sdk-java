### YamlMime:JavaType
uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
name: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
summary: "The max per-database performance level capability."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
constructors:
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.ElasticPoolPerDatabaseMaxPerformanceLevelCapability()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.ElasticPoolPerDatabaseMaxPerformanceLevelCapability()"
  name: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability()"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.ElasticPoolPerDatabaseMaxPerformanceLevelCapability()"
  syntax: "public ElasticPoolPerDatabaseMaxPerformanceLevelCapability()"
methods:
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.limit()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.limit()"
  name: "limit()"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.limit()"
  summary: "Get the limit property: The maximum performance level per database."
  syntax: "public Double limit()"
  desc: "Get the limit property: The maximum performance level per database."
  returns:
    description: "the limit value."
    type: "<xref href=\"java.lang.Double?alt=java.lang.Double&text=Double\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.reason()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.reason()"
  name: "reason()"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.reason()"
  summary: "Get the reason property: The reason for the capability not being available."
  syntax: "public String reason()"
  desc: "Get the reason property: The reason for the capability not being available."
  returns:
    description: "the reason value."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.status()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.status()"
  name: "status()"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.status()"
  summary: "Get the status property: The status of the capability."
  syntax: "public CapabilityStatus status()"
  desc: "Get the status property: The status of the capability."
  returns:
    description: "the status value."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.CapabilityStatus?alt=com.azure.resourcemanager.sql.models.CapabilityStatus&text=CapabilityStatus\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.supportedPerDatabaseMinPerformanceLevels()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.supportedPerDatabaseMinPerformanceLevels()"
  name: "supportedPerDatabaseMinPerformanceLevels()"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.supportedPerDatabaseMinPerformanceLevels()"
  summary: "Get the supported<wbr>Per<wbr>Database<wbr>Min<wbr>Performance<wbr>Levels property: The list of supported min database performance levels."
  syntax: "public List<ElasticPoolPerDatabaseMinPerformanceLevelCapability> supportedPerDatabaseMinPerformanceLevels()"
  desc: "Get the supportedPerDatabaseMinPerformanceLevels property: The list of supported min database performance levels."
  returns:
    description: "the supportedPerDatabaseMinPerformanceLevels value."
    type: "<xref href=\"java.util.List?alt=java.util.List&text=List\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMinPerformanceLevelCapability?alt=com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMinPerformanceLevelCapability&text=ElasticPoolPerDatabaseMinPerformanceLevelCapability\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.unit()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.unit()"
  name: "unit()"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.unit()"
  summary: "Get the unit property: Unit type used to measure performance level."
  syntax: "public PerformanceLevelUnit unit()"
  desc: "Get the unit property: Unit type used to measure performance level."
  returns:
    description: "the unit value."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.PerformanceLevelUnit?alt=com.azure.resourcemanager.sql.models.PerformanceLevelUnit&text=PerformanceLevelUnit\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.validate()"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.validate()"
  name: "validate()"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.withReason(java.lang.String)"
  fullName: "com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability.withReason(String reason)"
  name: "withReason(String reason)"
  nameWithType: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability.withReason(String reason)"
  summary: "Set the reason property: The reason for the capability not being available."
  parameters:
  - description: "the reason value to set."
    name: "reason"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ElasticPoolPerDatabaseMaxPerformanceLevelCapability withReason(String reason)"
  desc: "Set the reason property: The reason for the capability not being available."
  returns:
    description: "the ElasticPoolPerDatabaseMaxPerformanceLevelCapability object itself."
    type: "<xref href=\"com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability?alt=com.azure.resourcemanager.sql.models.ElasticPoolPerDatabaseMaxPerformanceLevelCapability&text=ElasticPoolPerDatabaseMaxPerformanceLevelCapability\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "The max per-database performance level capability."
metadata: {}
package: "com.azure.resourcemanager.sql.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-sql:2.17.0
