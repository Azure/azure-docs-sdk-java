### YamlMime:JavaMember
nameWithType: Trainings.getTaggedImageCountAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  name: getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  nameWithType: Trainings.getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: getTaggedImageCountOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetTaggedImageCountOptionalParameter&text=GetTaggedImageCountOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the int object </p>
    type: <xref href="Observable%3CInteger%3E?alt=Observable%3CInteger%3E&text=Observable%3CInteger%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the number of images tagged with the provided {tagIds}. The filtering is on an and/or relationship. For example, if the provided tag ids are for the "Dog" and "Cat" tags, then only images tagged with Dog and/or Cat will be returned.</p>

    <p></p>
  syntax: public Observable<Integer> getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync(UUID,GetTaggedImageCountOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getTaggedImageCountAsync
name: getTaggedImageCountAsync(UUID projectId, GetTaggedImageCountOptionalParameter getTaggedImageCountOptionalParameter)
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
