### YamlMime:JavaMember
nameWithType: CloudBlob.openInputStream
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.openInputStream()
  name: openInputStream()
  nameWithType: CloudBlob.openInputStream()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.BlobInputStream?alt=com.microsoft.azure.storage.blob.BlobInputStream&text=BlobInputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a blob input stream to download the blob. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false" data-raw-source="setStreamMinimumReadSizeInBytes(int)"></xref> to configure the read size.</p>

    <p></p>
  syntax: public final BlobInputStream openInputStream()
  uid: com.microsoft.azure.storage.blob.CloudBlob.openInputStream()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.BlobInputStream?alt=com.microsoft.azure.storage.blob.BlobInputStream&text=BlobInputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a blob input stream to download the blob using the specified request options and operation context. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false" data-raw-source="setStreamMinimumReadSizeInBytes(int)"></xref> to configure the read size.</p>

    <p></p>
  syntax: public final BlobInputStream openInputStream(final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final AccessCondition,BlobRequestOptions,OperationContext)
- fullName: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <code>long</code> which represents the offset to use as the starting point for the source. </p>
    name: offset
    type: <xref href="final+long?alt=final+long&text=final+long" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Long"></xref> which represents the number of bytes to read or <code>null</code>. </p>
    name: length
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: <p>An <code>InputStream</code> object that represents the stream to use for reading from the blob.</p>
    type: final <xref href="com.microsoft.azure.storage.blob.BlobInputStream?alt=com.microsoft.azure.storage.blob.BlobInputStream&text=BlobInputStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Opens a blob input stream to download the blob using the specified request options and operation context. If the blob is decrypted as it is downloaded, the final MD5 validation will be skipped. </p>

    <p>Use <xref uid="com.microsoft.azure.storage.blob.CloudBlob.setStreamMinimumReadSizeInBytes(final int)" data-throw-if-not-resolved="false" data-raw-source="setStreamMinimumReadSizeInBytes(int)"></xref> to configure the read size.</p>

    <p></p>
  syntax: public final BlobInputStream openInputStream(final long offset, final Long length, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.openInputStream(final long,final Long,final AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlob.openInputStream*
fullName: com.microsoft.azure.storage.blob.CloudBlob.openInputStream
name: openInputStream()
package: com.microsoft.azure.storage.blob
metadata: {}
