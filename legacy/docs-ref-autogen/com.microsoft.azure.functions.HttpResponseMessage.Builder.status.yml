### YamlMime:JavaMember
nameWithType: HttpResponseMessage.Builder.status
type: method
members:
- fullName: com.microsoft.azure.functions.HttpResponseMessage.Builder.status(HttpStatusType status)
  name: status(HttpStatusType status)
  nameWithType: HttpResponseMessage.Builder.status(HttpStatusType status)
  parameters:
  - description: <p>An HTTP status code representing the outcome of the HTTP request. </p>
    name: status
    type: <xref href="com.microsoft.azure.functions.HttpStatusType?alt=com.microsoft.azure.functions.HttpStatusType&text=HttpStatusType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>this builder </p>
    type: <xref href="com.microsoft.azure.functions.HttpResponseMessage.Builder?alt=com.microsoft.azure.functions.HttpResponseMessage.Builder&text=HttpResponseMessage.Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the status code to be used in the HttpResponseMessage object.</p>

    <p>You can provide standard HTTP Status using enum values from <xref uid="com.microsoft.azure.functions.HttpStatus" data-throw-if-not-resolved="false">HttpStatus</xref>, or you can create a custom status code using <xref uid="com.microsoft.azure.functions.HttpStatusType.custom(final int)" data-throw-if-not-resolved="false">HttpStatusType#custom(int)</xref>.</p>

    <p></p>
  syntax: public Builder status(HttpStatusType status)
  uid: com.microsoft.azure.functions.HttpResponseMessage.Builder.status(HttpStatusType)
uid: com.microsoft.azure.functions.HttpResponseMessage.Builder.status*
fullName: com.microsoft.azure.functions.HttpResponseMessage.Builder.status(HttpStatusType status)
name: status(HttpStatusType status)
package: com.microsoft.azure.functions
metadata: {}
