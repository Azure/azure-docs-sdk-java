### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Updatable.update()
methods:
- fullName: com.microsoft.azure.management.resources.Deployment.cancel()
  name: cancel()
  nameWithType: Deployment.cancel()
  summary: <p>Cancel a currently running template deployment. </p>
  syntax: public void cancel()
  uid: com.microsoft.azure.management.resources.Deployment.cancel()
- fullName: com.microsoft.azure.management.resources.Deployment.cancelAsync()
  name: cancelAsync()
  nameWithType: Deployment.cancelAsync()
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: <p>Cancel a currently running template deployment asynchronously. </p>
  syntax: public Completable cancelAsync()
  uid: com.microsoft.azure.management.resources.Deployment.cancelAsync()
- fullName: com.microsoft.azure.management.resources.Deployment.cancelAsync(ServiceCallback<Void> callback)
  name: cancelAsync(ServiceCallback<Void> callback)
  nameWithType: Deployment.cancelAsync(ServiceCallback<Void> callback)
  parameters:
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Cancel a currently running template deployment asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<Void> cancelAsync(ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.resources.Deployment.cancelAsync(ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.resources.Deployment.correlationId()
  name: correlationId()
  nameWithType: Deployment.correlationId()
  returns:
    description: <p>the correlation ID of the deployment </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String correlationId()
  uid: com.microsoft.azure.management.resources.Deployment.correlationId()
- fullName: com.microsoft.azure.management.resources.Deployment.dependencies()
  name: dependencies()
  nameWithType: Deployment.dependencies()
  returns:
    description: <p>the list of deployment dependencies </p>
    type: List&lt;<xref href="com.microsoft.azure.management.resources.Dependency?alt=com.microsoft.azure.management.resources.Dependency&text=Dependency" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<Dependency> dependencies()
  uid: com.microsoft.azure.management.resources.Deployment.dependencies()
- fullName: com.microsoft.azure.management.resources.Deployment.deploymentOperations()
  name: deploymentOperations()
  nameWithType: Deployment.deploymentOperations()
  returns:
    description: <p>the operations related to this deployment </p>
    type: <xref href="com.microsoft.azure.management.resources.DeploymentOperations?alt=com.microsoft.azure.management.resources.DeploymentOperations&text=DeploymentOperations" data-throw-if-not-resolved="False"/>
  syntax: public DeploymentOperations deploymentOperations()
  uid: com.microsoft.azure.management.resources.Deployment.deploymentOperations()
- fullName: com.microsoft.azure.management.resources.Deployment.exportTemplate()
  name: exportTemplate()
  nameWithType: Deployment.exportTemplate()
  returns:
    description: <p>the export result </p>
    type: <xref href="com.microsoft.azure.management.resources.DeploymentExportResult?alt=com.microsoft.azure.management.resources.DeploymentExportResult&text=DeploymentExportResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Exports a deployment template.</p>

    <p></p>
  syntax: public DeploymentExportResult exportTemplate()
  uid: com.microsoft.azure.management.resources.Deployment.exportTemplate()
- fullName: com.microsoft.azure.management.resources.Deployment.exportTemplateAsync()
  name: exportTemplateAsync()
  nameWithType: Deployment.exportTemplateAsync()
  returns:
    description: <p>a representation of the deferred computation of this call returning the export result </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.resources.DeploymentExportResult?alt=com.microsoft.azure.management.resources.DeploymentExportResult&text=DeploymentExportResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Exports a deployment template asynchronously.</p>

    <p></p>
  syntax: public Observable<DeploymentExportResult> exportTemplateAsync()
  uid: com.microsoft.azure.management.resources.Deployment.exportTemplateAsync()
- fullName: com.microsoft.azure.management.resources.Deployment.exportTemplateAsync(ServiceCallback<DeploymentExportResult> callback)
  name: exportTemplateAsync(ServiceCallback<DeploymentExportResult> callback)
  nameWithType: Deployment.exportTemplateAsync(ServiceCallback<DeploymentExportResult> callback)
  parameters:
  - description: <p>the callback to call on success or failure with export result as parameter </p>
    name: callback
    type: ServiceCallback&lt;<xref href="com.microsoft.azure.management.resources.DeploymentExportResult?alt=com.microsoft.azure.management.resources.DeploymentExportResult&text=DeploymentExportResult" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>a handle to cancel the request </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.resources.DeploymentExportResult?alt=com.microsoft.azure.management.resources.DeploymentExportResult&text=DeploymentExportResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Exports a deployment template asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<DeploymentExportResult> exportTemplateAsync(ServiceCallback<DeploymentExportResult> callback)
  uid: com.microsoft.azure.management.resources.Deployment.exportTemplateAsync(ServiceCallback<DeploymentExportResult>)
- fullName: com.microsoft.azure.management.resources.Deployment.mode()
  name: mode()
  nameWithType: Deployment.mode()
  returns:
    description: "<p>the deployment mode. Possible values include: 'Incremental', 'Complete'. </p>"
    type: <xref href="com.microsoft.azure.management.resources.DeploymentMode?alt=com.microsoft.azure.management.resources.DeploymentMode&text=DeploymentMode" data-throw-if-not-resolved="False"/>
  syntax: public DeploymentMode mode()
  uid: com.microsoft.azure.management.resources.Deployment.mode()
- fullName: com.microsoft.azure.management.resources.Deployment.outputs()
  name: outputs()
  nameWithType: Deployment.outputs()
  returns:
    description: <p>key/value pairs that represent deployment output </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public Object outputs()
  uid: com.microsoft.azure.management.resources.Deployment.outputs()
- fullName: com.microsoft.azure.management.resources.Deployment.parameters()
  name: parameters()
  nameWithType: Deployment.parameters()
  returns:
    description: <p>the deployment parameters </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public Object parameters()
  uid: com.microsoft.azure.management.resources.Deployment.parameters()
- fullName: com.microsoft.azure.management.resources.Deployment.parametersLink()
  name: parametersLink()
  nameWithType: Deployment.parametersLink()
  returns:
    description: <p>the URI referencing the parameters </p>
    type: <xref href="com.microsoft.azure.management.resources.ParametersLink?alt=com.microsoft.azure.management.resources.ParametersLink&text=ParametersLink" data-throw-if-not-resolved="False"/>
  syntax: public ParametersLink parametersLink()
  uid: com.microsoft.azure.management.resources.Deployment.parametersLink()
- fullName: com.microsoft.azure.management.resources.Deployment.providers()
  name: providers()
  nameWithType: Deployment.providers()
  returns:
    description: <p>the list of resource providers needed for the deployment </p>
    type: List&lt;<xref href="com.microsoft.azure.management.resources.Provider?alt=com.microsoft.azure.management.resources.Provider&text=Provider" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<Provider> providers()
  uid: com.microsoft.azure.management.resources.Deployment.providers()
- fullName: com.microsoft.azure.management.resources.Deployment.provisioningState()
  name: provisioningState()
  nameWithType: Deployment.provisioningState()
  returns:
    description: <p>the state of the provisioning process of the resources being deployed </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String provisioningState()
  uid: com.microsoft.azure.management.resources.Deployment.provisioningState()
- fullName: com.microsoft.azure.management.resources.Deployment.resourceGroupName()
  name: resourceGroupName()
  nameWithType: Deployment.resourceGroupName()
  returns:
    description: <p>the name of this deployment's resource group </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String resourceGroupName()
  uid: com.microsoft.azure.management.resources.Deployment.resourceGroupName()
- fullName: com.microsoft.azure.management.resources.Deployment.template()
  name: template()
  nameWithType: Deployment.template()
  returns:
    description: <p>the template content </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  syntax: public Object template()
  uid: com.microsoft.azure.management.resources.Deployment.template()
- fullName: com.microsoft.azure.management.resources.Deployment.templateLink()
  name: templateLink()
  nameWithType: Deployment.templateLink()
  returns:
    description: <p>the URI referencing the template </p>
    type: <xref href="com.microsoft.azure.management.resources.TemplateLink?alt=com.microsoft.azure.management.resources.TemplateLink&text=TemplateLink" data-throw-if-not-resolved="False"/>
  syntax: public TemplateLink templateLink()
  uid: com.microsoft.azure.management.resources.Deployment.templateLink()
- fullName: com.microsoft.azure.management.resources.Deployment.timestamp()
  name: timestamp()
  nameWithType: Deployment.timestamp()
  returns:
    description: <p>the timestamp of the template deployment </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime timestamp()
  uid: com.microsoft.azure.management.resources.Deployment.timestamp()
nameWithType: Deployment
syntax: public interface Deployment extends Indexable,Refreshable<Deployment>,Updatable<Deployment.Update>,HasInner<DeploymentExtendedInner>,HasManager<ResourceManager>,HasName
type: interface
uid: com.microsoft.azure.management.resources.Deployment
fullName: com.microsoft.azure.management.resources.Deployment
name: Deployment
package: com.microsoft.azure.management.resources
summary: <p>An immutable client-side representation of an Azure deployment. </p>
metadata: {}
