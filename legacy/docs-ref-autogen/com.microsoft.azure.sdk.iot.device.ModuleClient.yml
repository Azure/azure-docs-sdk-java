### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String,IotHubClientProtocol)
- com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String,IotHubClientProtocol,SSLContext)
- com.microsoft.azure.sdk.iot.device.ModuleClient.ModuleClient(String,IotHubClientProtocol,String,boolean,String,boolean)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.device.InternalClient?alt=com.microsoft.azure.sdk.iot.device.InternalClient&text=InternalClient" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.device.InternalClient.close()
- com.microsoft.azure.sdk.iot.device.InternalClient.closeNow()
- com.microsoft.azure.sdk.iot.device.InternalClient.getConfig()
- com.microsoft.azure.sdk.iot.device.InternalClient.getProductInfo()
- com.microsoft.azure.sdk.iot.device.InternalClient.open()
- com.microsoft.azure.sdk.iot.device.InternalClient.registerConnectionStatusChangeCallback(IotHubConnectionStatusChangeCallback,Object)
- com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(Set<Property>)
- com.microsoft.azure.sdk.iot.device.InternalClient.sendReportedProperties(Set<Property>,int)
- com.microsoft.azure.sdk.iot.device.InternalClient.setOperationTimeout(long)
- com.microsoft.azure.sdk.iot.device.InternalClient.setOption(String,Object)
- com.microsoft.azure.sdk.iot.device.InternalClient.setProxySettings(ProxySettings)
- com.microsoft.azure.sdk.iot.device.InternalClient.setRetryPolicy(RetryPolicy)
- com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToDesiredProperties(Map<Property, Pair<PropertyCallBack<String, Object>, Object>>)
- com.microsoft.azure.sdk.iot.device.InternalClient.subscribeToTwinDesiredProperties(Map<Property, Pair<TwinPropertyCallBack, Object>>)
methods:
- com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment()
- com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(IotHubClientProtocol)
- com.microsoft.azure.sdk.iot.device.ModuleClient.getTwin()
- com.microsoft.azure.sdk.iot.device.ModuleClient.invokeMethod(String,MethodRequest)
- com.microsoft.azure.sdk.iot.device.ModuleClient.invokeMethod(String,String,MethodRequest)
- com.microsoft.azure.sdk.iot.device.ModuleClient.sendEventAsync(Message,IotHubEventCallback,Object)
- com.microsoft.azure.sdk.iot.device.ModuleClient.sendEventAsync(Message,IotHubEventCallback,Object,String)
- com.microsoft.azure.sdk.iot.device.ModuleClient.setMessageCallback(MessageCallback,Object)
- com.microsoft.azure.sdk.iot.device.ModuleClient.setMessageCallback(String,MessageCallback,Object)
- com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(IotHubEventCallback,Object,PropertyCallBack,Object)
- com.microsoft.azure.sdk.iot.device.ModuleClient.startTwin(IotHubEventCallback,Object,TwinPropertyCallBack,Object)
- com.microsoft.azure.sdk.iot.device.ModuleClient.subscribeToMethod(DeviceMethodCallback,Object,IotHubEventCallback,Object)
nameWithType: ModuleClient
syntax: public class ModuleClient extends InternalClient
type: class
uid: com.microsoft.azure.sdk.iot.device.ModuleClient
fullName: com.microsoft.azure.sdk.iot.device.ModuleClient
name: ModuleClient
package: com.microsoft.azure.sdk.iot.device
summary: <p>Public API for communicating from Edge Modules. A ModuleClient can be used to send messages from an Edge module to an EdgeHub or an IotHub. It can also send twin updates and listen for method calls from an EdgeHub or IotHub as well </p>
metadata: {}
