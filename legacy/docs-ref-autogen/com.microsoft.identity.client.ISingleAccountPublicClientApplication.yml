### YamlMime:ManagedReference
items:
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  id: ISingleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  children:
  - com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String [],@Nullable final String)
  - com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final String,@NonNull final SilentAuthenticationCallback)
  - com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccount()
  - com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccountAsync(final CurrentAccountCallback)
  - com.microsoft.identity.client.ISingleAccountPublicClientApplication.signIn(@NonNull final Activity,@NonNull final String,@NonNull final String [],@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut()
  - com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut(@NonNull final SignOutCallback)
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: ISingleAccountPublicClientApplication
  nameWithType: ISingleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  type: Interface
  source:
    remote: &o0
      path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
      branch: master
      repo: https://github.com/AzureAD/microsoft-authentication-library-for-android
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 46
  package: com.microsoft.identity.client
  summary: "<p>An interface that contains list of operations that are available when MSAL is in 'single account' mode.<ul><li><p>In this mode, one account can be signed-in to the app.</p></li><li><p>If the user wants to acquire a token for another account, the previous account must be signed out first. </p></li></ul></p>\r\n<p>When the device is registered as 'shared', this will be the only available PublicClientApplication the app can obtain. The calling app has to support ISingleAccountPublicClientApplication if it is planning to support shared device mode. </p>\r\n<p>In the shared device mode,<ul><li><p>'Sign-in' means that the user will be signed in to the device - not just this app.</p></li><li><p>Once an account is 'signed-in', every MSAL app on the device that support shared device mode will be able to retrieve this account, and use them to silently perform API calls.</p></li><li><p>'Sign-out' means that user will be signed out from the device - every MSAL apps and the default browser. </p></li></ul></p>"
  syntax:
    content: public interface ISingleAccountPublicClientApplication extends IPublicClientApplication
  inheritedMembers:
  - com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  - com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  - com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  - com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String [],@Nullable final String)
  id: acquireTokenSilent(@NonNull final String [],@Nullable final String)
  parent: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilent(@NonNull final String[] scopes, @Nullable final String authority)
  nameWithType: ISingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @Nullable final String authority)
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilent(@NonNull final String[] scopes, @Nullable final String authority)
  overload: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilent*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 131
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final String[] scopes, @Nullable final String authority)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: authority
      type: b868e8dd
      description: <p>Optional. Can be passed to override the configured authority. </p>
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final String,@NonNull final SilentAuthenticationCallback)
  id: acquireTokenSilentAsync(@NonNull final String [],@NonNull final String,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  overload: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 117
  package: com.microsoft.identity.client
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback" data-throw-if-not-resolved="false">SilentAuthenticationCallback</xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false">SilentAuthenticationCallback#onSuccess(IAuthenticationResult)</xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false">}. </xref></p>
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccount()
  id: getCurrentAccount()
  parent: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: getCurrentAccount()
  nameWithType: ISingleAccountPublicClientApplication.getCurrentAccount()
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccount()
  overload: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccount*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 63
  package: com.microsoft.identity.client
  summary: "<p>Gets the current account and notify if the current account changes. This method must be called whenever the application is resumed or prior to running a scheduled background operation.</p>\r\n<p></p>"
  syntax:
    content: public ICurrentAccountResult getCurrentAccount()
    return:
      type: com.microsoft.identity.client.ICurrentAccountResult
      description: <p>CurrentAccountResult </p>
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccountAsync(final CurrentAccountCallback)
  id: getCurrentAccountAsync(final CurrentAccountCallback)
  parent: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: getCurrentAccountAsync(final CurrentAccountCallback callback)
  nameWithType: ISingleAccountPublicClientApplication.getCurrentAccountAsync(final CurrentAccountCallback callback)
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccountAsync(final CurrentAccountCallback callback)
  overload: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccountAsync*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 54
  package: com.microsoft.identity.client
  summary: "<p>Gets the current account and notify if the current account changes. This method must be called whenever the application is resumed or prior to running a scheduled background operation.</p>\r\n<p></p>"
  syntax:
    content: public void getCurrentAccountAsync(final CurrentAccountCallback callback)
    parameters:
    - id: callback
      type: 93de0ef9com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback
      description: <p>a callback to be invoked when the operation finishes. </p>
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signIn(@NonNull final Activity,@NonNull final String,@NonNull final String [],@NonNull final AuthenticationCallback)
  id: signIn(@NonNull final Activity,@NonNull final String,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: ISingleAccountPublicClientApplication.signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  overload: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signIn*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 82
  package: com.microsoft.identity.client
  summary: "<p>Allows a user to sign in to your application with one of their accounts. </p>\r\n<p>Note: The authority used to make the sign in request will be either the MSAL default: <a href=\"https://login.microsoftonline.com/common\">https://login.microsoftonline.com/common</a> or the default authority specified by you in your configuration</p>\r\n<p></p>"
  syntax:
    content: public void signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false">Activity</xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false">com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity</xref>. </p>
    - id: loginHint
      type: 8789feb4
      description: <p>Optional. If provided, will be used as the query parameter sent for authenticating the user, which will have the UPN pre-populated. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be consented to during sign in. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. The access token returned is for MS Graph and will allow you to query for additional information about the signed in account. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false">AuthenticationCallback</xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false">AuthenticationCallback#onSuccess(IAuthenticationResult)</xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false">}. </xref></p>
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut()
  id: signOut()
  parent: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: signOut()
  nameWithType: ISingleAccountPublicClientApplication.signOut()
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut()
  overload: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 102
  package: com.microsoft.identity.client
  summary: "<p>Signs out the current the Account and Credentials (tokens). NOTE: If a device is marked as a shared device within broker signout will be device wide.</p>\r\n<p></p>"
  syntax:
    content: public boolean signOut()
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the account was removed successfully </p>
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut(@NonNull final SignOutCallback)
  id: signOut(@NonNull final SignOutCallback)
  parent: com.microsoft.identity.client.ISingleAccountPublicClientApplication
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.yml
  langs:
  - java
  name: signOut(@NonNull final SignOutCallback callback)
  nameWithType: ISingleAccountPublicClientApplication.signOut(@NonNull final SignOutCallback callback)
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut(@NonNull final SignOutCallback callback)
  overload: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut*
  type: Method
  source:
    remote: *o0
    path: msal/src/main/java/com/microsoft/identity/client/ISingleAccountPublicClientApplication.java
    startLine: 93
  package: com.microsoft.identity.client
  summary: "<p>Signs out the current the Account and Credentials (tokens). NOTE: If a device is marked as a shared device within broker signout will be device wide.</p>\r\n<p></p>"
  syntax:
    content: public void signOut(@NonNull final SignOutCallback callback)
    parameters:
    - id: callback
      type: d6b37550com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback
      description: <p>a callback to be invoked when the operation finishes. </p>
references:
- uid: 93de0ef9com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback
  spec.java:
  - name: 'final '
    fullName: 'final '
  - uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback
    name: ISingleAccountPublicClientApplication.CurrentAccountCallback
    fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback
    href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback.yml
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccountAsync*
  name: getCurrentAccountAsync
  nameWithType: ISingleAccountPublicClientApplication.getCurrentAccountAsync
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccountAsync
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccount*
  name: getCurrentAccount
  nameWithType: ISingleAccountPublicClientApplication.getCurrentAccount
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.getCurrentAccount
  package: com.microsoft.identity.client
- uid: "97576948"
  spec.java:
  - name: '@NonNull final Activity'
    fullName: '@NonNull final Activity'
- uid: 8789feb4
  spec.java:
  - name: '@NonNull final String'
    fullName: '@NonNull final String'
- uid: e5895f1f
  spec.java:
  - name: '@NonNull final String []'
    fullName: '@NonNull final String []'
- uid: d6b37550com.microsoft.identity.client.AuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.AuthenticationCallback
    name: AuthenticationCallback
    fullName: com.microsoft.identity.client.AuthenticationCallback
    href: com.microsoft.identity.client.AuthenticationCallback.yml
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signIn*
  name: signIn
  nameWithType: ISingleAccountPublicClientApplication.signIn
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signIn
  package: com.microsoft.identity.client
- uid: d6b37550com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback
    name: ISingleAccountPublicClientApplication.SignOutCallback
    fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback
    href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback.yml
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut*
  name: signOut
  nameWithType: ISingleAccountPublicClientApplication.signOut
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.signOut
  package: com.microsoft.identity.client
- uid: 4fc6e284
  spec.java:
  - name: boolean
    fullName: boolean
- uid: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
  spec.java:
  - name: '@NonNull final '
    fullName: '@NonNull final '
  - uid: com.microsoft.identity.client.SilentAuthenticationCallback
    name: SilentAuthenticationCallback
    fullName: com.microsoft.identity.client.SilentAuthenticationCallback
    href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync*
  name: acquireTokenSilentAsync
  nameWithType: ISingleAccountPublicClientApplication.acquireTokenSilentAsync
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync
  package: com.microsoft.identity.client
- uid: b868e8dd
  spec.java:
  - name: '@Nullable final String'
    fullName: '@Nullable final String'
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilent*
  name: acquireTokenSilent
  nameWithType: ISingleAccountPublicClientApplication.acquireTokenSilent
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilent
  package: com.microsoft.identity.client
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\">Prompt</xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\">Prompt#SELECT_ACCOUNT</xref>.</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final Activity activity, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false">Activity</xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false">com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity</xref>. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: <p>The <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false">AuthenticationCallback</xref> to receive the result back. 1) If user cancels the flow by pressing the device back button, the result will be sent back via <xref uid="com.microsoft.identity.client.AuthenticationCallback.onCancel()" data-throw-if-not-resolved="false">AuthenticationCallback#onCancel()</xref>. 2) If the sdk successfully receives the token back, result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false">AuthenticationCallback#onSuccess(IAuthenticationResult)</xref> 3) All the other errors will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false">AuthenticationCallback#onError(MsalException)</xref>. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  nameWithType: IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
  type: Method
  summary: "<p>Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup. Default value for <xref uid=\"com.microsoft.identity.client.Prompt\" data-throw-if-not-resolved=\"false\">Prompt</xref> is <xref uid=\"com.microsoft.identity.client.Prompt.SELECT_ACCOUNT\" data-throw-if-not-resolved=\"false\">Prompt#SELECT_ACCOUNT</xref>. </p>\r\n<p>Convey parameters via the AquireTokenParameters object</p>\r\n<p></p>"
  syntax:
    content: public void acquireToken(@NonNull final AcquireTokenParameters acquireTokenParameters)
    parameters:
    - id: acquireTokenParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenParameters
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public IAuthenticationResult acquireTokenSilent(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
    return:
      type: com.microsoft.identity.client.IAuthenticationResult
- uid: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters)
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  nameWithType: IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  fullName: com.microsoft.identity.client.IPublicClientApplication.acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final AcquireTokenSilentParameters acquireTokenSilentParameters)
    parameters:
    - id: acquireTokenSilentParameters
      type: d6b37550com.microsoft.identity.client.AcquireTokenSilentParameters
- uid: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: getConfiguration()
  nameWithType: IPublicClientApplication.getConfiguration()
  fullName: com.microsoft.identity.client.IPublicClientApplication.getConfiguration()
  type: Method
  summary: "<p>Returns the PublicClientConfiguration for this instance of PublicClientApplication.</p>\r\n<p></p>"
  syntax:
    content: public PublicClientApplicationConfiguration getConfiguration()
    return:
      type: com.microsoft.identity.client.PublicClientApplicationConfiguration
      description: <p>The PublicClientApplicationConfiguration. </p>
- uid: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  parent: com.microsoft.identity.client.IPublicClientApplication
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: isSharedDevice()
  nameWithType: IPublicClientApplication.isSharedDevice()
  fullName: com.microsoft.identity.client.IPublicClientApplication.isSharedDevice()
  type: Method
  summary: "<p>Returns whether the application is being run on a device that is marked as a shared. Only SingleAccountPublicClientApplications may be used on shared devices</p>\r\n<p></p>"
  syntax:
    content: public boolean isSharedDevice()
    return:
      type: 4fc6e284
- uid: com.microsoft.identity.client.IPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IPublicClientApplication.yml
  name: IPublicClientApplication
  nameWithType: IPublicClientApplication
  fullName: com.microsoft.identity.client.IPublicClientApplication
  type: Interface
  syntax:
    content: public interface IPublicClientApplication
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: SingleAccountPublicClientApplication
  nameWithType: SingleAccountPublicClientApplication
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication
  type: Class
  syntax:
    content: public class SingleAccountPublicClientApplication
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback.yml
  name: ISingleAccountPublicClientApplication.CurrentAccountCallback
  nameWithType: ISingleAccountPublicClientApplication.CurrentAccountCallback
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.CurrentAccountCallback
  type: Interface
  summary: "<p>Callback for asynchronous loading of the msal IAccount account. </p>"
  syntax:
    content: public interface CurrentAccountCallback
- uid: com.microsoft.identity.client.ICurrentAccountResult
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ICurrentAccountResult.yml
  name: ICurrentAccountResult
  nameWithType: ICurrentAccountResult
  fullName: com.microsoft.identity.client.ICurrentAccountResult
  type: Interface
  syntax:
    content: public interface ICurrentAccountResult
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.getCurrentAccount()
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: getCurrentAccount()
  nameWithType: SingleAccountPublicClientApplication.getCurrentAccount()
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.getCurrentAccount()
  type: Method
  summary: "<p>Gets the current account and notify if the current account changes. This method must be called whenever the application is resumed or prior to running a scheduled background operation.</p>\r\n<p></p>"
  syntax:
    content: public ICurrentAccountResult getCurrentAccount()
    return:
      type: com.microsoft.identity.client.ICurrentAccountResult
      description: <p>CurrentAccountResult </p>
- uid: com.microsoft.identity.client.exception.MsalException
  parent: com.microsoft.identity.client.exception
  href: com.microsoft.identity.client.exception.MsalException.yml
  name: MsalException
  nameWithType: MsalException
  fullName: com.microsoft.identity.client.exception.MsalException
  type: Class
  summary: "<p>\r\n  <xref uid=\"com.microsoft.identity.client.exception.MsalException\" data-throw-if-not-resolved=\"false\">MsalException</xref> thrown or sent back via callback, representing the detailed exception thrown by the sdk. It will contain the error code, error description (could be null) or throwable (could be null). </p>"
  syntax:
    content: public class MsalException
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.signIn(@NonNull final Activity,@NonNull final String,@NonNull final String [],@NonNull final AuthenticationCallback)
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  nameWithType: SingleAccountPublicClientApplication.signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
  type: Method
  summary: "<p>Allows a user to sign in to your application with one of their accounts. </p>\r\n<p>Note: The authority used to make the sign in request will be either the MSAL default: <a href=\"https://login.microsoftonline.com/common\">https://login.microsoftonline.com/common</a> or the default authority specified by you in your configuration</p>\r\n<p></p>"
  syntax:
    content: public void signIn(@NonNull final Activity activity, @NonNull final String loginHint, @NonNull final String[] scopes, @NonNull final AuthenticationCallback callback)
    parameters:
    - id: activity
      type: "97576948"
      description: <p>Non-null <xref uid="" data-throw-if-not-resolved="false">Activity</xref> that is used as the parent activity for launching the <xref uid="" data-throw-if-not-resolved="false">com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity</xref>. </p>
    - id: loginHint
      type: 8789feb4
      description: <p>Optional. If provided, will be used as the query parameter sent for authenticating the user, which will have the UPN pre-populated. </p>
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be consented to during sign in. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. The access token returned is for MS Graph and will allow you to query for additional information about the signed in account. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.AuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.AuthenticationCallback" data-throw-if-not-resolved="false">AuthenticationCallback</xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false">AuthenticationCallback#onSuccess(IAuthenticationResult)</xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false">}. </xref></p>
- uid: com.microsoft.identity.client.AuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.AuthenticationCallback.yml
  name: AuthenticationCallback
  nameWithType: AuthenticationCallback
  fullName: com.microsoft.identity.client.AuthenticationCallback
  type: Interface
  summary: "<p>Callback passed with token acquisition. <xref uid=\"com.microsoft.identity.client.IAuthenticationResult\" data-throw-if-not-resolved=\"false\">IAuthenticationResult</xref> or <xref uid=\"\" data-throw-if-not-resolved=\"false\">MsalException</xref> will be returned back via callback. </p>"
  syntax:
    content: public interface AuthenticationCallback extends SilentAuthenticationCallback
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onSuccess(final IAuthenticationResult authenticationResult)
  nameWithType: SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult authenticationResult)
  type: Method
  summary: "<p>Authentication finishes successfully.</p>\r\n<p></p>"
  syntax:
    content: public void onSuccess(final IAuthenticationResult authenticationResult)
    parameters:
    - id: authenticationResult
      type: 93de0ef9com.microsoft.identity.client.IAuthenticationResult
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.IAuthenticationResult" data-throw-if-not-resolved="false">IAuthenticationResult</xref> that contains the success response. </p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)
  parent: com.microsoft.identity.client.SilentAuthenticationCallback
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: onError(final MsalException exception)
  nameWithType: SilentAuthenticationCallback.onError(final MsalException exception)
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException exception)
  type: Method
  summary: "<p>Error occurs during the authentication.</p>\r\n<p></p>"
  syntax:
    content: public void onError(final MsalException exception)
    parameters:
    - id: exception
      type: 93de0ef9com.microsoft.identity.client.exception.MsalException
      description: <p>The <xref uid="" data-throw-if-not-resolved="false">MsalException</xref> contains the error code, error message and cause if applicable. The exception returned in the callback could be <xref uid="" data-throw-if-not-resolved="false">MsalClientException</xref>, <xref uid="" data-throw-if-not-resolved="false">MsalServiceException</xref> or <xref uid="" data-throw-if-not-resolved="false">MsalUiRequiredException</xref>. </p>
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.signOut(@NonNull final SignOutCallback)
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: signOut(@NonNull final SignOutCallback callback)
  nameWithType: SingleAccountPublicClientApplication.signOut(@NonNull final SignOutCallback callback)
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.signOut(@NonNull final SignOutCallback callback)
  type: Method
  summary: "<p>Signs out the current the Account and Credentials (tokens). NOTE: If a device is marked as a shared device within broker signout will be device wide.</p>\r\n<p></p>"
  syntax:
    content: public void signOut(@NonNull final SignOutCallback callback)
    parameters:
    - id: callback
      type: d6b37550com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback
      description: <p>a callback to be invoked when the operation finishes. </p>
- uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback.yml
  name: ISingleAccountPublicClientApplication.SignOutCallback
  nameWithType: ISingleAccountPublicClientApplication.SignOutCallback
  fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.SignOutCallback
  type: Interface
  syntax:
    content: public interface SignOutCallback
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.signOut()
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: signOut()
  nameWithType: SingleAccountPublicClientApplication.signOut()
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.signOut()
  type: Method
  summary: "<p>Signs out the current the Account and Credentials (tokens). NOTE: If a device is marked as a shared device within broker signout will be device wide.</p>\r\n<p></p>"
  syntax:
    content: public boolean signOut()
    return:
      type: 4fc6e284
      description: <p>boolean indicating whether the account was removed successfully </p>
- uid: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final String,@NonNull final SilentAuthenticationCallback)
  parent: com.microsoft.identity.client.SingleAccountPublicClientApplication
  href: com.microsoft.identity.client.SingleAccountPublicClientApplication.yml
  name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: SingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  fullName: com.microsoft.identity.client.SingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  type: Method
  summary: "<p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>\r\n<p></p>"
  syntax:
    content: public void acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
    parameters:
    - id: scopes
      type: e5895f1f
      description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    - id: authority
      type: 8789feb4
      description: <p>Authority to issue the token. </p>
    - id: callback
      type: d6b37550com.microsoft.identity.client.SilentAuthenticationCallback
      description: >-
        <p>

          <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback" data-throw-if-not-resolved="false">SilentAuthenticationCallback</xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false">SilentAuthenticationCallback#onSuccess(IAuthenticationResult)</xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false">}. </xref></p>
- uid: com.microsoft.identity.client.SilentAuthenticationCallback
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.SilentAuthenticationCallback.yml
  name: SilentAuthenticationCallback
  nameWithType: SilentAuthenticationCallback
  fullName: com.microsoft.identity.client.SilentAuthenticationCallback
  type: Interface
  syntax:
    content: public interface SilentAuthenticationCallback
- uid: com.microsoft.identity.client.IAuthenticationResult
  parent: com.microsoft.identity.client
  href: com.microsoft.identity.client.IAuthenticationResult.yml
  name: IAuthenticationResult
  nameWithType: IAuthenticationResult
  fullName: com.microsoft.identity.client.IAuthenticationResult
  type: Interface
  syntax:
    content: public interface IAuthenticationResult
