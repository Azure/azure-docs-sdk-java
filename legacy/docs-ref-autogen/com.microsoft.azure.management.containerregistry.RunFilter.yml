### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.createTime()
  name: createTime()
  nameWithType: RunFilter.createTime()
  returns:
    description: <p>the createTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the create time for a run.</p>

    <p></p>
  syntax: public DateTime createTime()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.createTime()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.finishTime()
  name: finishTime()
  nameWithType: RunFilter.finishTime()
  returns:
    description: <p>the finishTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time the run finished.</p>

    <p></p>
  syntax: public DateTime finishTime()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.finishTime()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.isArchiveEnabled()
  name: isArchiveEnabled()
  nameWithType: RunFilter.isArchiveEnabled()
  returns:
    description: <p>the isArchiveEnabled value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the value that indicates whether archiving is enabled or not.</p>

    <p></p>
  syntax: public Boolean isArchiveEnabled()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.isArchiveEnabled()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.outputImageManifests()
  name: outputImageManifests()
  nameWithType: RunFilter.outputImageManifests()
  returns:
    description: <p>the outputImageManifests value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the list of comma-separated image manifests that were generated from the run. This is applicable if the run is of build type.</p>

    <p></p>
  syntax: public String outputImageManifests()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.outputImageManifests()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.runId()
  name: runId()
  nameWithType: RunFilter.runId()
  returns:
    description: <p>the runId value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the unique identifier for the run.</p>

    <p></p>
  syntax: public String runId()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.runId()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.runType()
  name: runType()
  nameWithType: RunFilter.runType()
  returns:
    description: <p>the runType value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunType?alt=com.microsoft.azure.management.containerregistry.RunType&text=RunType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type of run. Possible values include: 'QuickBuild', 'QuickRun', 'AutoBuild', 'AutoRun'.</p>

    <p></p>
  syntax: public RunType runType()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.runType()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.status()
  name: status()
  nameWithType: RunFilter.status()
  returns:
    description: <p>the status value </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunStatus?alt=com.microsoft.azure.management.containerregistry.RunStatus&text=RunStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the current status of the run. Possible values include: 'Queued', 'Started', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Error', 'Timeout'.</p>

    <p></p>
  syntax: public RunStatus status()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.status()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.taskName()
  name: taskName()
  nameWithType: RunFilter.taskName()
  returns:
    description: <p>the taskName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the task that the run corresponds to.</p>

    <p></p>
  syntax: public String taskName()
  uid: com.microsoft.azure.management.containerregistry.RunFilter.taskName()
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withCreateTime(DateTime createTime)
  name: withCreateTime(DateTime createTime)
  nameWithType: RunFilter.withCreateTime(DateTime createTime)
  parameters:
  - description: <p>the createTime value to set </p>
    name: createTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the create time for a run.</p>

    <p></p>
  syntax: public RunFilter withCreateTime(DateTime createTime)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withCreateTime(DateTime)
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withFinishTime(DateTime finishTime)
  name: withFinishTime(DateTime finishTime)
  nameWithType: RunFilter.withFinishTime(DateTime finishTime)
  parameters:
  - description: <p>the finishTime value to set </p>
    name: finishTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the time the run finished.</p>

    <p></p>
  syntax: public RunFilter withFinishTime(DateTime finishTime)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withFinishTime(DateTime)
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withIsArchiveEnabled(Boolean isArchiveEnabled)
  name: withIsArchiveEnabled(Boolean isArchiveEnabled)
  nameWithType: RunFilter.withIsArchiveEnabled(Boolean isArchiveEnabled)
  parameters:
  - description: <p>the isArchiveEnabled value to set </p>
    name: isArchiveEnabled
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value that indicates whether archiving is enabled or not.</p>

    <p></p>
  syntax: public RunFilter withIsArchiveEnabled(Boolean isArchiveEnabled)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withIsArchiveEnabled(Boolean)
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withOutputImageManifests(String outputImageManifests)
  name: withOutputImageManifests(String outputImageManifests)
  nameWithType: RunFilter.withOutputImageManifests(String outputImageManifests)
  parameters:
  - description: <p>the outputImageManifests value to set </p>
    name: outputImageManifests
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the list of comma-separated image manifests that were generated from the run. This is applicable if the run is of build type.</p>

    <p></p>
  syntax: public RunFilter withOutputImageManifests(String outputImageManifests)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withOutputImageManifests(String)
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withRunId(String runId)
  name: withRunId(String runId)
  nameWithType: RunFilter.withRunId(String runId)
  parameters:
  - description: <p>the runId value to set </p>
    name: runId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the unique identifier for the run.</p>

    <p></p>
  syntax: public RunFilter withRunId(String runId)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withRunId(String)
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withRunType(RunType runType)
  name: withRunType(RunType runType)
  nameWithType: RunFilter.withRunType(RunType runType)
  parameters:
  - description: <p>the runType value to set </p>
    name: runType
    type: <xref href="com.microsoft.azure.management.containerregistry.RunType?alt=com.microsoft.azure.management.containerregistry.RunType&text=RunType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type of run. Possible values include: 'QuickBuild', 'QuickRun', 'AutoBuild', 'AutoRun'.</p>

    <p></p>
  syntax: public RunFilter withRunType(RunType runType)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withRunType(RunType)
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withStatus(RunStatus status)
  name: withStatus(RunStatus status)
  nameWithType: RunFilter.withStatus(RunStatus status)
  parameters:
  - description: <p>the status value to set </p>
    name: status
    type: <xref href="com.microsoft.azure.management.containerregistry.RunStatus?alt=com.microsoft.azure.management.containerregistry.RunStatus&text=RunStatus" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the current status of the run. Possible values include: 'Queued', 'Started', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Error', 'Timeout'.</p>

    <p></p>
  syntax: public RunFilter withStatus(RunStatus status)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withStatus(RunStatus)
- fullName: com.microsoft.azure.management.containerregistry.RunFilter.withTaskName(String taskName)
  name: withTaskName(String taskName)
  nameWithType: RunFilter.withTaskName(String taskName)
  parameters:
  - description: <p>the taskName value to set </p>
    name: taskName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RunFilter object itself. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RunFilter?alt=com.microsoft.azure.management.containerregistry.RunFilter&text=RunFilter" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name of the task that the run corresponds to.</p>

    <p></p>
  syntax: public RunFilter withTaskName(String taskName)
  uid: com.microsoft.azure.management.containerregistry.RunFilter.withTaskName(String)
nameWithType: RunFilter
syntax: public class RunFilter
type: class
uid: com.microsoft.azure.management.containerregistry.RunFilter
fullName: com.microsoft.azure.management.containerregistry.RunFilter
name: RunFilter
package: com.microsoft.azure.management.containerregistry
summary: <p>Properties that are enabled for Odata querying on runs. </p>
metadata: {}
