### YamlMime:JavaMember
nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingListener
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  name: createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  nameWithType: FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  parameters:
  - description: <p>The context of the service for which the remoting listener is being constructed. </p>
    name: serviceContext
    type: <xref href="system.fabric.ServiceContext?alt=system.fabric.ServiceContext&text=ServiceContext" data-throw-if-not-resolved="False"/>
  - description: <p>The service implementation object. </p>
    name: serviceImplementation
    type: <xref href="microsoft.servicefabric.services.remoting.Service?alt=microsoft.servicefabric.services.remoting.Service&text=Service" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider" data-throw-if-not-resolved="false">FabricTransportServiceRemotingProvider</xref> as <xref uid="" data-throw-if-not-resolved="false">ServiceRemotingListener</xref> for the specified service implementation. </p>
    type: <xref href="microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener?alt=microsoft.servicefabric.services.remoting.runtime.ServiceRemotingListener&text=ServiceRemotingListener" data-throw-if-not-resolved="False"/>
  summary: <p>Creates a service remoting listener for remoting the service interface. </p>
  syntax: public ServiceRemotingListener createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
  uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext,Service)
uid: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener*
fullName: microsoft.servicefabric.services.remoting.fabrictransport.FabricTransportServiceRemotingProvider.createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
name: createServiceRemotingListener(ServiceContext serviceContext, Service serviceImplementation)
package: microsoft.servicefabric.services.remoting.fabrictransport
metadata: {}
