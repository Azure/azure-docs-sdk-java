### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.Builder(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  name: Builder(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  nameWithType: ImportCertificateRequest.Builder.Builder(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a></p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the certificate in the given vault </p>
    name: certificateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Base64 encoded representation of the certificate object to import. This certificate needs to contain the private key. </p>
    name: base64EncodedCertificate
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The builder for constructing <xref uid="com.microsoft.azure.keyvault.requests.ImportCertificateRequest" data-throw-if-not-resolved="false" data-raw-source="ImportCertificateRequest"></xref> object.</p>

    <p></p>
  syntax: public Builder(String vaultBaseUrl, String certificateName, String base64EncodedCertificate)
  uid: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.Builder(String,String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.build()
  name: build()
  nameWithType: ImportCertificateRequest.Builder.build()
  returns:
    description: <p>the <xref uid="com.microsoft.azure.keyvault.requests.ImportCertificateRequest" data-throw-if-not-resolved="false" data-raw-source="ImportCertificateRequest"></xref> object. </p>
    type: <xref href="com.microsoft.azure.keyvault.requests.ImportCertificateRequest?alt=com.microsoft.azure.keyvault.requests.ImportCertificateRequest&text=ImportCertificateRequest" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>builds the <xref uid="com.microsoft.azure.keyvault.requests.ImportCertificateRequest" data-throw-if-not-resolved="false" data-raw-source="ImportCertificateRequest"></xref> object.</p>

    <p></p>
  syntax: public ImportCertificateRequest build()
  uid: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.build()
- fullName: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withAttributes(Attributes attributes)
  name: withAttributes(Attributes attributes)
  nameWithType: ImportCertificateRequest.Builder.withAttributes(Attributes attributes)
  parameters:
  - description: <p>The attributes of the certificate. </p>
    name: attributes
    type: <xref href="com.microsoft.azure.keyvault.models.Attributes?alt=com.microsoft.azure.keyvault.models.Attributes&text=Attributes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Builder object itself. </p>
    type: <xref href="Builder?alt=Builder&text=Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the certificate attributes.</p>

    <p></p>
  syntax: public Builder withAttributes(Attributes attributes)
  uid: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withAttributes(Attributes)
- fullName: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withPassword(String password)
  name: withPassword(String password)
  nameWithType: ImportCertificateRequest.Builder.withPassword(String password)
  parameters:
  - description: <p>If the private key in base64EncodedCertificate is encrypted, the password used for encryption. </p>
    name: password
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Builder object itself. </p>
    type: <xref href="Builder?alt=Builder&text=Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the password.</p>

    <p></p>
  syntax: public Builder withPassword(String password)
  uid: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withPassword(String)
- fullName: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withPolicy(CertificatePolicy policy)
  name: withPolicy(CertificatePolicy policy)
  nameWithType: ImportCertificateRequest.Builder.withPolicy(CertificatePolicy policy)
  parameters:
  - description: <p>The management policy for the certificate. </p>
    name: policy
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Builder object itself. </p>
    type: <xref href="Builder?alt=Builder&text=Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the certificate policy.</p>

    <p></p>
  syntax: public Builder withPolicy(CertificatePolicy policy)
  uid: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withPolicy(CertificatePolicy)
- fullName: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: ImportCertificateRequest.Builder.withTags(Map<String, String> tags)
  parameters:
  - description: <p>Application-specific metadata in the form of key-value pairs. </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Builder object itself. </p>
    type: <xref href="Builder?alt=Builder&text=Builder" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tags value.</p>

    <p></p>
  syntax: public Builder withTags(Map<String, String> tags)
  uid: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder.withTags(Map<String, String>)
nameWithType: ImportCertificateRequest.Builder
syntax: public class Builder
type: class
uid: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder
fullName: com.microsoft.azure.keyvault.requests.ImportCertificateRequest.Builder
name: ImportCertificateRequest.Builder
package: com.microsoft.azure.keyvault.requests
summary: <p>the <xref uid="com.microsoft.azure.keyvault.requests.ImportCertificateRequest" data-throw-if-not-resolved="false" data-raw-source="ImportCertificateRequest"></xref> builder. </p>
metadata: {}
