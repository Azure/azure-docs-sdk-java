### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags(List<ImageTagCreateEntry> tags)
  name: withTags(List<ImageTagCreateEntry> tags)
  nameWithType: Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags(List<ImageTagCreateEntry> tags)
  parameters:
  - name: tags
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.ImageTagCreateEntry&text=ImageTagCreateEntry" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>next definition stage </p>
    type: <xref href="TrainingsCreateImageTagsDefinitionStages.WithExecute?alt=TrainingsCreateImageTagsDefinitionStages.WithExecute&text=TrainingsCreateImageTagsDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Image Tag entries to include in this batch.</p>

    <p></p>
  syntax: public TrainingsCreateImageTagsDefinitionStages.WithExecute withTags(List<ImageTagCreateEntry> tags)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions.withTags(List<ImageTagCreateEntry>)
nameWithType: Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions
syntax: public interface WithAllOptions
type: interface
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions
name: Trainings.TrainingsCreateImageTagsDefinitionStages.WithAllOptions
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
summary: <p>The stage of the definition which allows for any other optional settings to be specified. </p>
metadata: {}
