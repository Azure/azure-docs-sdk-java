### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection()
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod)
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.HttpsConnection(URL,HttpsMethod,final ProxySettings)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseHeaders()
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.getResponseStatus()
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readError()
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.readInput()
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setReadTimeoutMillis(int)
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestHeader(String,String)
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.setRequestMethod(HttpsMethod)
- com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.writeOutput(byte [])
nameWithType: HttpsConnection
syntax: public class HttpsConnection
type: class
uid: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
fullName: com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection
name: HttpsConnection
package: com.microsoft.azure.sdk.iot.device.transport.https
summary: >-
  <p>A wrapper for the Java SE class <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref>. Used to avoid compatibility issues when testing with the mocking framework JMockit, as well as to avoid some undocumented side effects when using HttpsURLConnection. </p>

  <p>The underlying <xref uid="" data-throw-if-not-resolved="false">HttpsURLConnection</xref> is transparently managed by Java. To reuse connections, for each time <xref uid="com.microsoft.azure.sdk.iot.device.transport.https.HttpsConnection.connect()" data-throw-if-not-resolved="false">connect()</xref> is called, the input streams (input stream or error stream, if input stream is not accessible) must be completely read. Otherwise, the data remains in the stream and the connection will not be reusable. </p>
metadata: {}
