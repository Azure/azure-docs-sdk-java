### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsDeletingByResourceGroup.deleteByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.list()
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsListing.listAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroup(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsListingByResourceGroup.listByResourceGroupAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.checkEndpointNameAvailability(String name)
  name: checkEndpointNameAvailability(String name)
  nameWithType: CdnProfiles.checkEndpointNameAvailability(String name)
  parameters:
  - description: <p>The endpoint resource name to validate. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CheckNameAvailabilityResult object if successful. </p>
    type: <xref href="com.microsoft.azure.management.cdn.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.cdn.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Checks the availability of a endpoint name without creating the CDN endpoint.</p>

    <p></p>
  syntax: public CheckNameAvailabilityResult checkEndpointNameAvailability(String name)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.checkEndpointNameAvailability(String)
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.checkEndpointNameAvailabilityAsync(String name)
  name: checkEndpointNameAvailabilityAsync(String name)
  nameWithType: CdnProfiles.checkEndpointNameAvailabilityAsync(String name)
  parameters:
  - description: <p>the endpoint resource name to validate. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.cdn.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.cdn.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Checks the availability of a endpoint name without creating the CDN endpoint asynchronously.</p>

    <p></p>
  syntax: public Observable<CheckNameAvailabilityResult> checkEndpointNameAvailabilityAsync(String name)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.checkEndpointNameAvailabilityAsync(String)
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.checkEndpointNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  name: checkEndpointNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  nameWithType: CdnProfiles.checkEndpointNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  parameters:
  - description: <p>the endpoint resource name to validate. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: ServiceCallback&lt;<xref href="com.microsoft.azure.management.cdn.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.cdn.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.cdn.CheckNameAvailabilityResult?alt=com.microsoft.azure.management.cdn.CheckNameAvailabilityResult&text=CheckNameAvailabilityResult" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Checks the availability of a endpoint name without creating the CDN endpoint asynchronously.</p>

    <p></p>
  syntax: public ServiceFuture<CheckNameAvailabilityResult> checkEndpointNameAvailabilityAsync(String name, ServiceCallback<CheckNameAvailabilityResult> callback)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.checkEndpointNameAvailabilityAsync(String,ServiceCallback<CheckNameAvailabilityResult>)
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.generateSsoUri(String resourceGroupName, String profileName)
  name: generateSsoUri(String resourceGroupName, String profileName)
  nameWithType: CdnProfiles.generateSsoUri(String resourceGroupName, String profileName)
  parameters:
  - description: <p>name of the resource group within the Azure subscription. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the CDN profile which is unique within the resource group. </p>
    name: profileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Sso Uri string if successful. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.</p>

    <p></p>
  syntax: public String generateSsoUri(String resourceGroupName, String profileName)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.generateSsoUri(String,String)
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.listEdgeNodes()
  name: listEdgeNodes()
  nameWithType: CdnProfiles.listEdgeNodes()
  returns:
    description: <p>list of all the edge nodes of a CDN service. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.cdn.EdgeNode?alt=com.microsoft.azure.management.cdn.EdgeNode&text=EdgeNode" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the edge nodes of a CDN service.</p>

    <p></p>
  syntax: public PagedList<EdgeNode> listEdgeNodes()
  uid: com.microsoft.azure.management.cdn.CdnProfiles.listEdgeNodes()
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.listOperations()
  name: listOperations()
  nameWithType: CdnProfiles.listOperations()
  returns:
    description: <p>list of available CDN REST operations. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.cdn.Operation?alt=com.microsoft.azure.management.cdn.Operation&text=Operation" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all of the available CDN REST API operations.</p>

    <p></p>
  syntax: public PagedList<Operation> listOperations()
  uid: com.microsoft.azure.management.cdn.CdnProfiles.listOperations()
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.listResourceUsage()
  name: listResourceUsage()
  nameWithType: CdnProfiles.listResourceUsage()
  returns:
    description: <p>quotas and actual usages of the CDN profiles under the current subscription. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.cdn.ResourceUsage?alt=com.microsoft.azure.management.cdn.ResourceUsage&text=ResourceUsage" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Check the quota and actual usage of the CDN profiles under the current subscription.</p>

    <p></p>
  syntax: public PagedList<ResourceUsage> listResourceUsage()
  uid: com.microsoft.azure.management.cdn.CdnProfiles.listResourceUsage()
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.loadEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  name: loadEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  nameWithType: CdnProfiles.loadEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  parameters:
  - description: <p>name of the resource group within the Azure subscription. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the CDN profile which is unique within the resource group. </p>
    name: profileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the endpoint under the profile which is unique globally. </p>
    name: endpointName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the path to the content to be loaded. Should describe a file path. </p>
    name: contentPaths
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Forcibly pre-loads CDN endpoint content. Available for Verizon profiles.</p>

    <p></p>
  syntax: public void loadEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.loadEndpointContent(String,String,String,List<String>)
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.purgeEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  name: purgeEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  nameWithType: CdnProfiles.purgeEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  parameters:
  - description: <p>name of the resource group within the Azure subscription. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the CDN profile which is unique within the resource group. </p>
    name: profileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the endpoint under the profile which is unique globally. </p>
    name: endpointName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the path to the content to be purged. Can describe a file path or a wild card directory. </p>
    name: contentPaths
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Forcibly purges CDN endpoint content.</p>

    <p></p>
  syntax: public void purgeEndpointContent(String resourceGroupName, String profileName, String endpointName, List<String> contentPaths)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.purgeEndpointContent(String,String,String,List<String>)
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.startEndpoint(String resourceGroupName, String profileName, String endpointName)
  name: startEndpoint(String resourceGroupName, String profileName, String endpointName)
  nameWithType: CdnProfiles.startEndpoint(String resourceGroupName, String profileName, String endpointName)
  parameters:
  - description: <p>name of the resource group within the Azure subscription. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the CDN profile which is unique within the resource group. </p>
    name: profileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the endpoint under the profile which is unique globally. </p>
    name: endpointName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Starts an existing stopped CDN endpoint.</p>

    <p></p>
  syntax: public void startEndpoint(String resourceGroupName, String profileName, String endpointName)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.startEndpoint(String,String,String)
- fullName: com.microsoft.azure.management.cdn.CdnProfiles.stopEndpoint(String resourceGroupName, String profileName, String endpointName)
  name: stopEndpoint(String resourceGroupName, String profileName, String endpointName)
  nameWithType: CdnProfiles.stopEndpoint(String resourceGroupName, String profileName, String endpointName)
  parameters:
  - description: <p>name of the resource group within the Azure subscription. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the CDN profile which is unique within the resource group. </p>
    name: profileName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>name of the endpoint under the profile which is unique globally. </p>
    name: endpointName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Stops an existing running CDN endpoint.</p>

    <p></p>
  syntax: public void stopEndpoint(String resourceGroupName, String profileName, String endpointName)
  uid: com.microsoft.azure.management.cdn.CdnProfiles.stopEndpoint(String,String,String)
nameWithType: CdnProfiles
syntax: public interface CdnProfiles extends SupportsCreating<CdnProfile.DefinitionStages.Blank>,SupportsListing<CdnProfile>,SupportsListingByResourceGroup<CdnProfile>,SupportsGettingByResourceGroup<CdnProfile>,SupportsGettingById<CdnProfile>,SupportsDeletingById,SupportsDeletingByResourceGroup,SupportsBatchCreation<CdnProfile>,SupportsBatchDeletion,HasManager<CdnManager>,HasInner<ProfilesInner>
type: interface
uid: com.microsoft.azure.management.cdn.CdnProfiles
fullName: com.microsoft.azure.management.cdn.CdnProfiles
name: CdnProfiles
package: com.microsoft.azure.management.cdn
summary: <p>Entry point for CDN profile management API. </p>
metadata: {}
