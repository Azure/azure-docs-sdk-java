### YamlMime:JavaMember
nameWithType: VirtualMachine.DefinitionStages.WithStorageAccount.withExistingStorageAccount
type: method
members:
- fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  name: withExistingStorageAccount(StorageAccount storageAccount)
  nameWithType: VirtualMachine.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
  parameters:
  - description: <p>an existing storage account </p>
    name: storageAccount
    type: <xref href="com.microsoft.azure.management.storage.StorageAccount?alt=com.microsoft.azure.management.storage.StorageAccount&text=StorageAccount" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithCreate&text=VirtualMachine.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Specifies an existing storage account to put the VM's OS and data disk VHD in. </p>

    <p>An OS disk based on a marketplace or a user image (generalized image) will be stored in this storage account.</p>

    <p></p>
  syntax: public WithCreate withExistingStorageAccount(StorageAccount storageAccount)
  uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount)
uid: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithStorageAccount.withExistingStorageAccount*
fullName: com.microsoft.azure.management.compute.VirtualMachine.DefinitionStages.WithStorageAccount.withExistingStorageAccount(StorageAccount storageAccount)
name: withExistingStorageAccount(StorageAccount storageAccount)
package: com.microsoft.azure.management.compute
metadata: {}
