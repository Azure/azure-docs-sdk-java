### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.create(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(ServiceCallback<CreatedResources<ResourceT>>,Creatable<ResourceT>...)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsBatchCreation.createAsync(final ServiceCallback<CreatedResources<ResourceT>>,List<Creatable<ResourceT>>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating.define(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteById(String)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String,ServiceCallback<Void>)
- com.microsoft.azure.management.resources.fluentcore.collection.SupportsDeletingById.deleteByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIds(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(Collection<String>)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsBatchDeletion.deleteByIdsAsync(String...)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getById(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String)
- com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingById.getByIdAsync(String,ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
methods:
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.delete(String resourceId, String name)
  name: delete(String resourceId, String name)
  nameWithType: DiagnosticSettings.delete(String resourceId, String name)
  parameters:
  - description: <p>that Diagnostic Setting is associated with. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of Diagnostic Setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes a Diagnostic Setting from Azure, identifying it by its resourceId and name.</p>

    <p></p>
  syntax: public void delete(String resourceId, String name)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.delete(String,String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.deleteAsync(String resourceId, String name)
  name: deleteAsync(String resourceId, String name)
  nameWithType: DiagnosticSettings.deleteAsync(String resourceId, String name)
  parameters:
  - description: <p>that Diagnostic Setting is associated with. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of Diagnostic Setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call </p>
    type: <xref href="Completable?alt=Completable&text=Completable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously delete a Diagnostic Setting from Azure, identifying it by its resourceId and name.</p>

    <p></p>
  syntax: public Completable deleteAsync(String resourceId, String name)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.deleteAsync(String resourceId, String name, ServiceCallback<Void> callback)
  name: deleteAsync(String resourceId, String name, ServiceCallback<Void> callback)
  nameWithType: DiagnosticSettings.deleteAsync(String resourceId, String name, ServiceCallback<Void> callback)
  parameters:
  - description: <p>that Diagnostic Setting is associated with. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of Diagnostic Setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CVoid%3E?alt=ServiceCallback%3CVoid%3E&text=ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a handle to cancel the request </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously delete a Diagnostic Setting from Azure, identifying it by its resourceId and name.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceId, String name, ServiceCallback<Void> callback)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.deleteAsync(String,String,ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.get(String resourceId, String name)
  name: get(String resourceId, String name)
  nameWithType: DiagnosticSettings.get(String resourceId, String name)
  parameters:
  - description: <p>that Diagnostic Setting is associated with. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of Diagnostic Setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="com.microsoft.azure.management.monitor.DiagnosticSetting?alt=com.microsoft.azure.management.monitor.DiagnosticSetting&text=DiagnosticSetting" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about Diagnostic Setting from Azure based on the resource id and setting name.</p>

    <p></p>
  syntax: public DiagnosticSetting get(String resourceId, String name)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.get(String,String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.getAsync(String resourceId, String name)
  name: getAsync(String resourceId, String name)
  nameWithType: DiagnosticSettings.getAsync(String resourceId, String name)
  parameters:
  - description: <p>that Diagnostic Setting is associated with. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of Diagnostic Setting. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.DiagnosticSetting?alt=com.microsoft.azure.management.monitor.DiagnosticSetting&text=DiagnosticSetting" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the information about Diagnostic Setting from Azure based on the resource id and setting name.</p>

    <p></p>
  syntax: public Observable<DiagnosticSetting> getAsync(String resourceId, String name)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.getAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.getCategory(String resourceId, String name)
  name: getCategory(String resourceId, String name)
  nameWithType: DiagnosticSettings.getCategory(String resourceId, String name)
  parameters:
  - description: <p>of the requested resource. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>of the Log or Metric category. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Diagnostic Setting category available for the resource. </p>
    type: <xref href="com.microsoft.azure.management.monitor.DiagnosticSettingsCategory?alt=com.microsoft.azure.management.monitor.DiagnosticSettingsCategory&text=DiagnosticSettingsCategory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about Diagnostic Setting category for Log or Metric Setting for a specific resource.</p>

    <p></p>
  syntax: public DiagnosticSettingsCategory getCategory(String resourceId, String name)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.getCategory(String,String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.getCategoryAsync(String resourceId, String name)
  name: getCategoryAsync(String resourceId, String name)
  nameWithType: DiagnosticSettings.getCategoryAsync(String resourceId, String name)
  parameters:
  - description: <p>of the requested resource. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>of the Log or Metric category. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Diagnostic Setting category available for the resource. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.DiagnosticSettingsCategory?alt=com.microsoft.azure.management.monitor.DiagnosticSettingsCategory&text=DiagnosticSettingsCategory" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets the information about Diagnostic Setting category for Log or Metric Setting for a specific resource.</p>

    <p></p>
  syntax: public Observable<DiagnosticSettingsCategory> getCategoryAsync(String resourceId, String name)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.getCategoryAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.listByResource(String resourceId)
  name: listByResource(String resourceId)
  nameWithType: DiagnosticSettings.listByResource(String resourceId)
  parameters:
  - description: <p>that Diagnostic Setting is associated with. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>list of resources </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.DiagnosticSetting?alt=com.microsoft.azure.management.monitor.DiagnosticSetting&text=DiagnosticSetting" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the diagnostic settings in the currently selected subscription for a specific resource.</p>

    <p></p>
  syntax: public PagedList<DiagnosticSetting> listByResource(String resourceId)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.listByResource(String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.listByResourceAsync(String resourceId)
  name: listByResourceAsync(String resourceId)
  nameWithType: DiagnosticSettings.listByResourceAsync(String resourceId)
  parameters:
  - description: <p>that Diagnostic Setting is associated with. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>list of resources </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.DiagnosticSetting?alt=com.microsoft.azure.management.monitor.DiagnosticSetting&text=DiagnosticSetting" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the diagnostic settings in the currently selected subscription for a specific resource.</p>

    <p></p>
  syntax: public Observable<DiagnosticSetting> listByResourceAsync(String resourceId)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.listByResourceAsync(String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.listCategoriesByResource(String resourceId)
  name: listCategoriesByResource(String resourceId)
  nameWithType: DiagnosticSettings.listCategoriesByResource(String resourceId)
  parameters:
  - description: <p>of the requested resource. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>list of Diagnostic Settings category available for the resource. </p>
    type: List&lt;<xref href="com.microsoft.azure.management.monitor.DiagnosticSettingsCategory?alt=com.microsoft.azure.management.monitor.DiagnosticSettingsCategory&text=DiagnosticSettingsCategory" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the Diagnostic Settings categories for Log and Metric Settings for a specific resource.</p>

    <p></p>
  syntax: public List<DiagnosticSettingsCategory> listCategoriesByResource(String resourceId)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.listCategoriesByResource(String)
- fullName: com.microsoft.azure.management.monitor.DiagnosticSettings.listCategoriesByResourceAsync(String resourceId)
  name: listCategoriesByResourceAsync(String resourceId)
  nameWithType: DiagnosticSettings.listCategoriesByResourceAsync(String resourceId)
  parameters:
  - description: <p>of the requested resource. </p>
    name: resourceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>list of Diagnostic Settings category available for the resource. </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.DiagnosticSettingsCategory?alt=com.microsoft.azure.management.monitor.DiagnosticSettingsCategory&text=DiagnosticSettingsCategory" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Lists all the Diagnostic Settings categories for Log and Metric Settings for a specific resource.</p>

    <p></p>
  syntax: public Observable<DiagnosticSettingsCategory> listCategoriesByResourceAsync(String resourceId)
  uid: com.microsoft.azure.management.monitor.DiagnosticSettings.listCategoriesByResourceAsync(String)
nameWithType: DiagnosticSettings
syntax: public interface DiagnosticSettings extends SupportsCreating<DiagnosticSetting.DefinitionStages.Blank>,SupportsBatchCreation<DiagnosticSetting>,SupportsGettingById<DiagnosticSetting>,SupportsDeletingById,SupportsBatchDeletion,HasManager<MonitorManager>,HasInner<DiagnosticSettingsInner>
type: interface
uid: com.microsoft.azure.management.monitor.DiagnosticSettings
fullName: com.microsoft.azure.management.monitor.DiagnosticSettings
name: DiagnosticSettings
package: com.microsoft.azure.management.monitor
summary: <p>Entry point for diagnostic settings management API. </p>
metadata: {}
