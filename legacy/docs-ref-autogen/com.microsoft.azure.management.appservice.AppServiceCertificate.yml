### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager.manager()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refresh()
- com.microsoft.azure.management.resources.fluentcore.model.Refreshable.refreshAsync()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasResourceGroup.resourceGroupName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
methods:
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.certificateBlob()
  name: certificateBlob()
  nameWithType: AppServiceCertificate.certificateBlob()
  returns:
    description: <p>the raw bytes of .cer file </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String certificateBlob()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.certificateBlob()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.expirationDate()
  name: expirationDate()
  nameWithType: AppServiceCertificate.expirationDate()
  returns:
    description: <p>the certificate expriration date </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime expirationDate()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.expirationDate()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.friendlyName()
  name: friendlyName()
  nameWithType: AppServiceCertificate.friendlyName()
  returns:
    description: <p>the friendly name of the certificate </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String friendlyName()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.friendlyName()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.hostingEnvironmentProfile()
  name: hostingEnvironmentProfile()
  nameWithType: AppServiceCertificate.hostingEnvironmentProfile()
  returns:
    description: <p>the specification for the App Service Environment to use for the certificate </p>
    type: <xref href="com.microsoft.azure.management.appservice.HostingEnvironmentProfile?alt=com.microsoft.azure.management.appservice.HostingEnvironmentProfile&text=HostingEnvironmentProfile" data-throw-if-not-resolved="False"/>
  syntax: public HostingEnvironmentProfile hostingEnvironmentProfile()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.hostingEnvironmentProfile()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.hostNames()
  name: hostNames()
  nameWithType: AppServiceCertificate.hostNames()
  returns:
    description: <p>the host names the certificate applies to </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  syntax: public List<String> hostNames()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.hostNames()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.issueDate()
  name: issueDate()
  nameWithType: AppServiceCertificate.issueDate()
  returns:
    description: <p>the certificate issue Date </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  syntax: public DateTime issueDate()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.issueDate()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.issuer()
  name: issuer()
  nameWithType: AppServiceCertificate.issuer()
  returns:
    description: <p>the certificate issuer </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String issuer()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.issuer()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.password()
  name: password()
  nameWithType: AppServiceCertificate.password()
  returns:
    description: <p>the certificate password </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String password()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.password()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.pfxBlob()
  name: pfxBlob()
  nameWithType: AppServiceCertificate.pfxBlob()
  returns:
    description: <p>the pfx blob </p>
    type: <xref href="byte+%5B%5D?alt=byte+%5B%5D&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  syntax: public byte [] pfxBlob()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.pfxBlob()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.publicKeyHash()
  name: publicKeyHash()
  nameWithType: AppServiceCertificate.publicKeyHash()
  returns:
    description: <p>the public key hash </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String publicKeyHash()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.publicKeyHash()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.selfLink()
  name: selfLink()
  nameWithType: AppServiceCertificate.selfLink()
  returns:
    description: <p>the self link </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String selfLink()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.selfLink()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.siteName()
  name: siteName()
  nameWithType: AppServiceCertificate.siteName()
  returns:
    description: <p>the app name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String siteName()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.siteName()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.subjectName()
  name: subjectName()
  nameWithType: AppServiceCertificate.subjectName()
  returns:
    description: <p>the subject name of the certificate </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String subjectName()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.subjectName()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.thumbprint()
  name: thumbprint()
  nameWithType: AppServiceCertificate.thumbprint()
  returns:
    description: <p>the certificate thumbprint </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String thumbprint()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.thumbprint()
- fullName: com.microsoft.azure.management.appservice.AppServiceCertificate.valid()
  name: valid()
  nameWithType: AppServiceCertificate.valid()
  returns:
    description: <p>if the certificate valid </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  syntax: public Boolean valid()
  uid: com.microsoft.azure.management.appservice.AppServiceCertificate.valid()
nameWithType: AppServiceCertificate
syntax: public interface AppServiceCertificate extends GroupableResource<AppServiceManager, CertificateInner>,Refreshable<AppServiceCertificate>
type: interface
uid: com.microsoft.azure.management.appservice.AppServiceCertificate
fullName: com.microsoft.azure.management.appservice.AppServiceCertificate
name: AppServiceCertificate
package: com.microsoft.azure.management.appservice
summary: <p>An immutable client-side representation of an Azure app service certificate. </p>
metadata: {}
