### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.BlobRequestOptions()
  name: BlobRequestOptions()
  nameWithType: BlobRequestOptions.BlobRequestOptions()
  summary: <p>Creates an instance of the  class. </p>
  syntax: public BlobRequestOptions()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.BlobRequestOptions()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.BlobRequestOptions(final BlobRequestOptions other)
  name: BlobRequestOptions(final BlobRequestOptions other)
  nameWithType: BlobRequestOptions.BlobRequestOptions(final BlobRequestOptions other)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object which represents the blob request options to copy. </p>
    name: other
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of the  class by copying values from another  instance.</p>

    <p></p>
  syntax: public BlobRequestOptions(final BlobRequestOptions other)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.BlobRequestOptions(final BlobRequestOptions)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.RequestOptions?alt=com.microsoft.azure.storage.RequestOptions&text=RequestOptions" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.RequestOptions.applyBaseDefaultsInternal(final RequestOptions)
- com.microsoft.azure.storage.RequestOptions.disableHttpsSocketKeepAlive()
- com.microsoft.azure.storage.RequestOptions.getLocationMode()
- com.microsoft.azure.storage.RequestOptions.getMaximumExecutionTimeInMs()
- com.microsoft.azure.storage.RequestOptions.getOperationExpiryTimeInMs()
- com.microsoft.azure.storage.RequestOptions.getRetryPolicyFactory()
- com.microsoft.azure.storage.RequestOptions.getTimeoutIntervalInMs()
- com.microsoft.azure.storage.RequestOptions.populateRequestOptions(RequestOptions,final RequestOptions,final boolean)
- com.microsoft.azure.storage.RequestOptions.RequestOptions()
- com.microsoft.azure.storage.RequestOptions.RequestOptions(final RequestOptions)
- com.microsoft.azure.storage.RequestOptions.requireEncryption()
- com.microsoft.azure.storage.RequestOptions.setDisableHttpsSocketKeepAlive(Boolean)
- com.microsoft.azure.storage.RequestOptions.setLocationMode(final LocationMode)
- com.microsoft.azure.storage.RequestOptions.setMaximumExecutionTimeInMs(Integer)
- com.microsoft.azure.storage.RequestOptions.setRequireEncryption(Boolean)
- com.microsoft.azure.storage.RequestOptions.setRetryPolicyFactory(final RetryPolicyFactory)
- com.microsoft.azure.storage.RequestOptions.setTimeoutIntervalInMs(final Integer)
methods:
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.applyDefaults(final BlobRequestOptions modifiedOptions, final BlobType blobtype)
  name: applyDefaults(final BlobRequestOptions modifiedOptions, final BlobType blobtype)
  nameWithType: BlobRequestOptions.applyDefaults(final BlobRequestOptions modifiedOptions, final BlobType blobtype)
  parameters:
  - description: <p>The options to apply defaults to. </p>
    name: modifiedOptions
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - name: blobtype
    type: final <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Applies defaults to the options passed in.</p>

    <p></p>
  syntax: protected static void applyDefaults(final BlobRequestOptions modifiedOptions, final BlobType blobtype)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.applyDefaults(final BlobRequestOptions,final BlobType)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.assertNoEncryptionPolicyOrStrictMode()
  name: assertNoEncryptionPolicyOrStrictMode()
  nameWithType: BlobRequestOptions.assertNoEncryptionPolicyOrStrictMode()
  summary: <p>Assert that if validation is on, an encryption policy is not specified. </p>
  syntax: protected void assertNoEncryptionPolicyOrStrictMode()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.assertNoEncryptionPolicyOrStrictMode()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.assertPolicyIfRequired()
  name: assertPolicyIfRequired()
  nameWithType: BlobRequestOptions.assertPolicyIfRequired()
  summary: <p>Assert that if strict mode is on, an encryption policy is specified. </p>
  syntax: protected void assertPolicyIfRequired()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.assertPolicyIfRequired()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getAbsorbConditionalErrorsOnRetry()
  name: getAbsorbConditionalErrorsOnRetry()
  nameWithType: BlobRequestOptions.getAbsorbConditionalErrorsOnRetry()
  returns:
    description: <p>the absorbConditionalErrorsOnRetry </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates whether a conditional failure should be absorbed on a retry attempt for the request. For more information about absorb conditinal errors on retry defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setAbsorbConditionalErrorsOnRetry(final Boolean)" data-throw-if-not-resolved="false" data-raw-source="setAbsorbConditionalErrorsOnRetry(Boolean)"></xref>.</p>

    <p></p>
  syntax: public Boolean getAbsorbConditionalErrorsOnRetry()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getAbsorbConditionalErrorsOnRetry()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getCommitWriteOnInputStreamException()
  name: getCommitWriteOnInputStreamException()
  nameWithType: BlobRequestOptions.getCommitWriteOnInputStreamException()
  returns:
    description: >-
      <p>

        <code>true</code> if data will be committed upon an exception; otherwise, <code>false</code>. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A  that defines the behavior for handling exceptions when reading from the  and using . If  the data that has been read from the stream up to the point of the exception will be flushed and a new blob will be committed with that data. Otherwise, the upload will be aborted and no data will be committed.</p>

    <p>For more information about defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setCommitWriteOnInputStreamException(boolean)" data-throw-if-not-resolved="false" data-raw-source="setCommitWriteOnInputStreamException(boolean)"></xref>.</p>

    <p></p>
  syntax: public boolean getCommitWriteOnInputStreamException()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getCommitWriteOnInputStreamException()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getConcurrentRequestCount()
  name: getConcurrentRequestCount()
  nameWithType: BlobRequestOptions.getConcurrentRequestCount()
  returns:
    description: <p>the concurrentRequestCount </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the concurrent number of simultaneous requests per operation. For more information about concurrent request count defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setConcurrentRequestCount(final Integer)" data-throw-if-not-resolved="false" data-raw-source="setConcurrentRequestCount(Integer)"></xref>.</p>

    <p></p>
  syntax: public Integer getConcurrentRequestCount()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getConcurrentRequestCount()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getCustomerProvidedKey()
  name: getCustomerProvidedKey()
  nameWithType: BlobRequestOptions.getCustomerProvidedKey()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobCustomerProvidedKey" data-throw-if-not-resolved="false" data-raw-source="BlobCustomerProvidedKey"></xref> object that represents the current customer-provided key. </p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobCustomerProvidedKey?alt=com.microsoft.azure.storage.blob.BlobCustomerProvidedKey&text=BlobCustomerProvidedKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the customer-provided key to use for this request.</p>

    <p></p>
  syntax: public BlobCustomerProvidedKey getCustomerProvidedKey()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getCustomerProvidedKey()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getDisableContentMD5Validation()
  name: getDisableContentMD5Validation()
  nameWithType: BlobRequestOptions.getDisableContentMD5Validation()
  returns:
    description: <p>the disableContentMD5Validation </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets whether download and <xref uid="com.microsoft.azure.storage.blob.BlobInputStream" data-throw-if-not-resolved="false" data-raw-source="BlobInputStream"></xref> methods should ignore the blob's ContentMD5 header. For more information about disabling content MD5 validation defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setDisableContentMD5Validation(final Boolean)" data-throw-if-not-resolved="false" data-raw-source="setDisableContentMD5Validation(Boolean)"></xref></p>
  syntax: public Boolean getDisableContentMD5Validation()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getDisableContentMD5Validation()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getEncryptionPolicy()
  name: getEncryptionPolicy()
  nameWithType: BlobRequestOptions.getEncryptionPolicy()
  returns:
    description: <p>An <xref uid="com.microsoft.azure.storage.blob.BlobEncryptionPolicy" data-throw-if-not-resolved="false" data-raw-source="BlobEncryptionPolicy"></xref> object that represents the current encryption policy. </p>
    type: <xref href="com.microsoft.azure.storage.blob.BlobEncryptionPolicy?alt=com.microsoft.azure.storage.blob.BlobEncryptionPolicy&text=BlobEncryptionPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the encryption policy to use for this request. For more information about the encryption policy defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setEncryptionPolicy(BlobEncryptionPolicy)" data-throw-if-not-resolved="false" data-raw-source="setEncryptionPolicy(BlobEncryptionPolicy)"></xref>.</p>

    <p></p>
  syntax: public BlobEncryptionPolicy getEncryptionPolicy()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getEncryptionPolicy()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getSingleBlobPutThresholdInBytes()
  name: getSingleBlobPutThresholdInBytes()
  nameWithType: BlobRequestOptions.getSingleBlobPutThresholdInBytes()
  returns:
    description: <p>The maximum size, in bytes, of a blob that may be uploaded as a single blob, ranging from 1 to 64 MB inclusive. If a blob size is above the threshold, it will be uploaded as blocks. </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the threshold size used for writing a single blob. For more information about the threshold size defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setSingleBlobPutThresholdInBytes(final Integer)" data-throw-if-not-resolved="false" data-raw-source="setSingleBlobPutThresholdInBytes(Integer)"></xref>.</p>

    <p></p>
  syntax: public Integer getSingleBlobPutThresholdInBytes()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getSingleBlobPutThresholdInBytes()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getSkipEtagLocking()
  name: getSkipEtagLocking()
  nameWithType: BlobRequestOptions.getSkipEtagLocking()
  returns:
    description: >-
      <p>

        <code>true</code> if skipping is enabled; otherwise, <code>false</code>. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>WARNING: etag locking is automatically used in blob downloads to ensure the blob does not change mid-download. Skip this validation at your own risk.</p>

    <p>Gets whether etag locking and validation on blob downloads should be skipped.</p>

    <p></p>
  syntax: public boolean getSkipEtagLocking()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getSkipEtagLocking()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getStoreBlobContentMD5()
  name: getStoreBlobContentMD5()
  nameWithType: BlobRequestOptions.getStoreBlobContentMD5()
  returns:
    description: <p>the storeBlobContentMD5 </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets whether the blob's ContentMD5 header should be set on uploads. This field is not supported for page blobs. For more information about storing blob content MD5 defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setStoreBlobContentMD5(final Boolean)" data-throw-if-not-resolved="false" data-raw-source="setStoreBlobContentMD5(Boolean)"></xref></p>
  syntax: public Boolean getStoreBlobContentMD5()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getStoreBlobContentMD5()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getUseTransactionalContentMD5()
  name: getUseTransactionalContentMD5()
  nameWithType: BlobRequestOptions.getUseTransactionalContentMD5()
  returns:
    description: <p>the useTransactionalContentMD5 </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets whether a range PUT or GET operation will use the Content-MD5 header to enforce transactional security. All partial blob uploads or downloads will be restricted to 4 MB. For more information about transactional content MD5 defaults, see <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions.setUseTransactionalContentMD5(final Boolean)" data-throw-if-not-resolved="false" data-raw-source="setUseTransactionalContentMD5(Boolean)"></xref>.</p>

    <p></p>
  syntax: public Boolean getUseTransactionalContentMD5()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getUseTransactionalContentMD5()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.getValidateEncryptionPolicy()
  name: getValidateEncryptionPolicy()
  nameWithType: BlobRequestOptions.getValidateEncryptionPolicy()
  returns:
    description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobCustomerProvidedKey" data-throw-if-not-resolved="false" data-raw-source="BlobCustomerProvidedKey"></xref> object that represents the source's customer-provided key. Gets a value to indicating whether the presence of the encryption policy should validated.</p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the customer-provided key to use on the source for a copy request.</p>

    <p></p>
  syntax: protected boolean getValidateEncryptionPolicy()
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.getValidateEncryptionPolicy()
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client)
  name: populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client)
  nameWithType: BlobRequestOptions.populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client)
  parameters:
  - description: <p>The input options to copy from when applying defaults </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>BlobType of the current operation </p>
    name: blobType
    type: final <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object that represents the service client used to set the default timeout interval and retry policy, if they are <code>null</code>. Additionally, the default value of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="concurrentRequestCount"></xref> is <code>1</code>. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  returns:
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uses the concurrent request count from the specified client if , sets a default value for everything else, and sets defaults as defined in the parent class.</p>

    <p></p>
  syntax: protected static final BlobRequestOptions populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.populateAndApplyDefaults(final BlobRequestOptions,final BlobType,final CloudBlobClient)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client, final boolean setStartTime)
  name: populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client, final boolean setStartTime)
  nameWithType: BlobRequestOptions.populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client, final boolean setStartTime)
  parameters:
  - description: <p>The input options to copy from when applying defaults </p>
    name: options
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>BlobType of the current operation </p>
    name: blobType
    type: final <xref href="com.microsoft.azure.storage.blob.BlobType?alt=com.microsoft.azure.storage.blob.BlobType&text=BlobType" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref> object that represents the service client used to set the default timeout interval and retry policy, if they are <code>null</code>. Additionally, the default value of <xref uid="" data-throw-if-not-resolved="false" data-raw-source="concurrentRequestCount"></xref> is <code>1</code>. </p>
    name: client
    type: final <xref href="com.microsoft.azure.storage.blob.CloudBlobClient?alt=com.microsoft.azure.storage.blob.CloudBlobClient&text=CloudBlobClient" data-throw-if-not-resolved="False"/>
  - description: <p>whether to initialize the startTimeInMs field, or not </p>
    name: setStartTime
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    type: final <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uses the concurrent request count from the specified client if , sets a default value for everything else, and sets defaults as defined in the parent class.</p>

    <p></p>
  syntax: protected static final BlobRequestOptions populateAndApplyDefaults(final BlobRequestOptions options, final BlobType blobType, final CloudBlobClient client, final boolean setStartTime)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.populateAndApplyDefaults(final BlobRequestOptions,final BlobType,final CloudBlobClient,final boolean)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setAbsorbConditionalErrorsOnRetry(final Boolean absorbConditionalErrorsOnRetry)
  name: setAbsorbConditionalErrorsOnRetry(final Boolean absorbConditionalErrorsOnRetry)
  nameWithType: BlobRequestOptions.setAbsorbConditionalErrorsOnRetry(final Boolean absorbConditionalErrorsOnRetry)
  parameters:
  - description: <p>the absorbConditionalErrorsOnRetry to set </p>
    name: absorbConditionalErrorsOnRetry
    type: <xref href="final+Boolean?alt=final+Boolean&text=final+Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets whether a conditional failure should be absorbed on a retry attempt for the request. This option is only used by <xref uid="com.microsoft.azure.storage.blob.CloudAppendBlob" data-throw-if-not-resolved="false" data-raw-source="CloudAppendBlob"></xref> in upload and openWrite methods. By default, it is set to . Set this to  only for single writer scenario. </p>

    <p>You can change the absorbConditionalErrorsOnRetry value on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that absorbConditionalErrorsOnRetry value.</p>

    <p></p>
  syntax: public void setAbsorbConditionalErrorsOnRetry(final Boolean absorbConditionalErrorsOnRetry)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setAbsorbConditionalErrorsOnRetry(final Boolean)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setCommitWriteOnInputStreamException(boolean commitWriteOnInputStreamException)
  name: setCommitWriteOnInputStreamException(boolean commitWriteOnInputStreamException)
  nameWithType: BlobRequestOptions.setCommitWriteOnInputStreamException(boolean commitWriteOnInputStreamException)
  parameters:
  - description: <p>Use <code>true</code> if data will be committed upon an exception; otherwise, <code>false</code>. </p>
    name: commitWriteOnInputStreamException
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>A  that defines the behavior for handling exceptions when reading from the  and using . If  the data that has been read from the stream up to the point of the exception will be flushed and a new blob will be committed with that data. Otherwise, the upload will be aborted and no data will be committed.</p>

    <p>The default value is .</p>

    <p></p>
  syntax: public void setCommitWriteOnInputStreamException(boolean commitWriteOnInputStreamException)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setCommitWriteOnInputStreamException(boolean)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setConcurrentRequestCount(final Integer concurrentRequestCount)
  name: setConcurrentRequestCount(final Integer concurrentRequestCount)
  nameWithType: BlobRequestOptions.setConcurrentRequestCount(final Integer concurrentRequestCount)
  parameters:
  - description: <p>the concurrentRequestCount to set </p>
    name: concurrentRequestCount
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the concurrent number of simultaneous requests per operation. </p>

    <p>The default concurrent request count is set in the client and is by default 1, indicating no concurrency. You can change the concurrent request count on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that concurrent request count.</p>

    <p></p>
  syntax: public void setConcurrentRequestCount(final Integer concurrentRequestCount)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setConcurrentRequestCount(final Integer)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setCustomerProvidedKey(BlobCustomerProvidedKey key)
  name: setCustomerProvidedKey(BlobCustomerProvidedKey key)
  nameWithType: BlobRequestOptions.setCustomerProvidedKey(BlobCustomerProvidedKey key)
  parameters:
  - description: <p>the BlobCustomerProvidedKey object to use when making service requests. </p>
    name: key
    type: <xref href="com.microsoft.azure.storage.blob.BlobCustomerProvidedKey?alt=com.microsoft.azure.storage.blob.BlobCustomerProvidedKey&text=BlobCustomerProvidedKey" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the BlobCustomerProvidedKey object to use for this request. Customer-provided key encryption is supported for most upload, download, and copy requests to blob storage, as well as fetching of properties and metadata.</p>

    <p></p>
  syntax: public void setCustomerProvidedKey(BlobCustomerProvidedKey key)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setCustomerProvidedKey(BlobCustomerProvidedKey)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setDisableContentMD5Validation(final Boolean disableContentMD5Validation)
  name: setDisableContentMD5Validation(final Boolean disableContentMD5Validation)
  nameWithType: BlobRequestOptions.setDisableContentMD5Validation(final Boolean disableContentMD5Validation)
  parameters:
  - description: <p>the disableContentMD5Validation to set </p>
    name: disableContentMD5Validation
    type: <xref href="final+Boolean?alt=final+Boolean&text=final+Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets whether download and <xref uid="com.microsoft.azure.storage.blob.BlobInputStream" data-throw-if-not-resolved="false" data-raw-source="BlobInputStream"></xref> methods should ignore the blob's ContentMD5 header. </p>

    <p>The default disableContentMD5Validation value is set in the client and is by default . You can change the disableContentMD5Validation value on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that disableContentMD5Validation value.</p>

    <p></p>
  syntax: public void setDisableContentMD5Validation(final Boolean disableContentMD5Validation)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setDisableContentMD5Validation(final Boolean)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setEncryptionPolicy(BlobEncryptionPolicy encryptionPolicy)
  name: setEncryptionPolicy(BlobEncryptionPolicy encryptionPolicy)
  nameWithType: BlobRequestOptions.setEncryptionPolicy(BlobEncryptionPolicy encryptionPolicy)
  parameters:
  - description: <p>the BlobEncryptionPolicy object to use when making service requests. </p>
    name: encryptionPolicy
    type: <xref href="com.microsoft.azure.storage.blob.BlobEncryptionPolicy?alt=com.microsoft.azure.storage.blob.BlobEncryptionPolicy&text=BlobEncryptionPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the BlobEncryptionPolicy object to use for this request. </p>

    <p>The default BlobEncryptionPolicy is set in the client and is by default null, indicating no encryption. You can change the BlobEncryptionPolicy on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.ServiceClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="ServiceClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that BlobEncryptionPolicy.</p>

    <p></p>
  syntax: public void setEncryptionPolicy(BlobEncryptionPolicy encryptionPolicy)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setEncryptionPolicy(BlobEncryptionPolicy)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setSingleBlobPutThresholdInBytes(final Integer singleBlobPutThresholdInBytes)
  name: setSingleBlobPutThresholdInBytes(final Integer singleBlobPutThresholdInBytes)
  nameWithType: BlobRequestOptions.setSingleBlobPutThresholdInBytes(final Integer singleBlobPutThresholdInBytes)
  parameters:
  - description: <p>The maximum size, in bytes, of a blob that may be uploaded as a single blob, ranging from 1 MB to 64 MB inclusive. If a blob size is above the threshold, it will be uploaded as blocks.</p>
    name: singleBlobPutThresholdInBytes
    type: <xref href="final+Integer?alt=final+Integer&text=final+Integer" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If <code>minimumReadSize</code> is less than 1 MB or greater than 64 MB. </p>
  summary: >-
    <p>Sets the threshold size used for writing a single blob to use. </p>

    <p>The default threshold size is set in the client and is by default 32MB. You can change the threshold size on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that threshold size.</p>

    <p></p>
  syntax: public void setSingleBlobPutThresholdInBytes(final Integer singleBlobPutThresholdInBytes)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setSingleBlobPutThresholdInBytes(final Integer)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setSkipEtagLocking(boolean skipEtagLocking)
  name: setSkipEtagLocking(boolean skipEtagLocking)
  nameWithType: BlobRequestOptions.setSkipEtagLocking(boolean skipEtagLocking)
  parameters:
  - description: <p>Use <code>true</code> to skip etag locking and validation; otherwise, <code>false</code>. </p>
    name: skipEtagLocking
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>WARNING: etag locking is automatically used in blob downloads to ensure the blob does not change mid-download. Skip this validation at your own risk.</p>

    <p>Sets whether etag locking and validation on blob downloads should be skipped.</p>

    <p></p>
  syntax: public void setSkipEtagLocking(boolean skipEtagLocking)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setSkipEtagLocking(boolean)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setStoreBlobContentMD5(final Boolean storeBlobContentMD5)
  name: setStoreBlobContentMD5(final Boolean storeBlobContentMD5)
  nameWithType: BlobRequestOptions.setStoreBlobContentMD5(final Boolean storeBlobContentMD5)
  parameters:
  - description: <p>the storeBlobContentMD5 to set </p>
    name: storeBlobContentMD5
    type: <xref href="final+Boolean?alt=final+Boolean&text=final+Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets whether the blob's ContentMD5 header should be set on uploads. This field is not supported for page blobs. </p>

    <p>The default storeBlobContentMD5 value is set in the client and is by default  for block blobs. You can change the storeBlobContentMD5 value on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that storeBlobContentMD5 value.</p>

    <p></p>
  syntax: public void setStoreBlobContentMD5(final Boolean storeBlobContentMD5)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setStoreBlobContentMD5(final Boolean)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setUseTransactionalContentMD5(final Boolean useTransactionalContentMD5)
  name: setUseTransactionalContentMD5(final Boolean useTransactionalContentMD5)
  nameWithType: BlobRequestOptions.setUseTransactionalContentMD5(final Boolean useTransactionalContentMD5)
  parameters:
  - description: <p>the useTransactionalContentMD5 to set </p>
    name: useTransactionalContentMD5
    type: <xref href="final+Boolean?alt=final+Boolean&text=final+Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets whether a range PUT or GET operation will use the Content-MD5 header to enforce transactional security. All partial blob uploads or downloads will be restricted to 4 MB. </p>

    <p>The default useTransactionalContentMD5 value is set in the client and is by default . You can change the useTransactionalContentMD5 value on this request by setting this property. You can also change the value on the <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient.getDefaultRequestOptions()" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient#getDefaultRequestOptions()"></xref> object so that all subsequent requests made via the service client will use that useTransactionalContentMD5 value.</p>

    <p></p>
  syntax: public void setUseTransactionalContentMD5(final Boolean useTransactionalContentMD5)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setUseTransactionalContentMD5(final Boolean)
- fullName: com.microsoft.azure.storage.blob.BlobRequestOptions.setValidateEncryptionPolicy(boolean validateEncryptionPolicy)
  name: setValidateEncryptionPolicy(boolean validateEncryptionPolicy)
  nameWithType: BlobRequestOptions.setValidateEncryptionPolicy(boolean validateEncryptionPolicy)
  parameters:
  - description: <p>Use <code>true</code> to require validation; otherwise, <code>false</code>. </p>
    name: validateEncryptionPolicy
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the BlobCustomerProvidedKey object to use for a source blob. Customer-provided key encryption is supported for most upload, download, and copy requests to blob storage, as well as fetching of properties and metadata.</p>

    <p></p>
  syntax: protected void setValidateEncryptionPolicy(boolean validateEncryptionPolicy)
  uid: com.microsoft.azure.storage.blob.BlobRequestOptions.setValidateEncryptionPolicy(boolean)
nameWithType: BlobRequestOptions
syntax: public class BlobRequestOptions extends RequestOptions
type: class
uid: com.microsoft.azure.storage.blob.BlobRequestOptions
fullName: com.microsoft.azure.storage.blob.BlobRequestOptions
name: BlobRequestOptions
package: com.microsoft.azure.storage.blob
summary: <p>Represents a set of options that may be specified on a request. </p>
metadata: {}
