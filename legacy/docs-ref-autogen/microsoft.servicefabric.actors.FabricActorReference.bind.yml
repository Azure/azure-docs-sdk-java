### YamlMime:JavaMember
nameWithType: FabricActorReference.bind
type: method
members:
- fullName: microsoft.servicefabric.actors.FabricActorReference.bind(Class<?> actorInterfaceType)
  name: bind(Class<?> actorInterfaceType)
  nameWithType: FabricActorReference.bind(Class<?> actorInterfaceType)
  parameters:
  - description: <p>Interface type of actor. </p>
    name: actorInterfaceType
    type: <xref href="Class%3C%3F%3E?alt=Class<?>&text=Class%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Object representing <xref uid="" data-throw-if-not-resolved="false">ActorProxy</xref> for the actor. </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an <xref uid="" data-throw-if-not-resolved="false">ActorProxy</xref> using <xref uid="" data-throw-if-not-resolved="false">FabricActorProxyFactory#createActorProxy(Class, URI, ActorId, String)</xref> method.</p>

    <p></p>
  syntax: public Object bind(Class<?> actorInterfaceType)
  uid: microsoft.servicefabric.actors.FabricActorReference.bind(Class<?>)
uid: microsoft.servicefabric.actors.FabricActorReference.bind*
fullName: microsoft.servicefabric.actors.FabricActorReference.bind(Class<?> actorInterfaceType)
name: bind(Class<?> actorInterfaceType)
package: microsoft.servicefabric.actors
metadata: {}
