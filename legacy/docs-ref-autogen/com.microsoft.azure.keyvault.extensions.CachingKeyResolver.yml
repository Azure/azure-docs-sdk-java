### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
  name: CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
  nameWithType: CachingKeyResolver.CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
  parameters:
  - description: <p>the cache size </p>
    name: capacity
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the key resolver </p>
    name: keyResolver
    type: final <xref href="com.microsoft.azure.keyvault.core.IKeyResolver?alt=com.microsoft.azure.keyvault.core.IKeyResolver&text=IKeyResolver" data-throw-if-not-resolved="False"/>
  summary: <p>Constructor. </p>
  syntax: public CachingKeyResolver(int capacity, final IKeyResolver keyResolver)
  uid: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.CachingKeyResolver(int,final IKeyResolver)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.keyvault.core.IKeyResolver?alt=com.microsoft.azure.keyvault.core.IKeyResolver&text=IKeyResolver" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync(String kid)
  name: resolveKeyAsync(String kid)
  nameWithType: CachingKeyResolver.resolveKeyAsync(String kid)
  overridden: com.microsoft.azure.keyvault.core.IKeyResolver.resolveKeyAsync(String)
  parameters:
  - description: <p>The key identifier to resolve. </p>
    name: kid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A ListenableFuture containing the resolved IKey </p>
    type: ListenableFuture&lt;<xref href="com.microsoft.azure.keyvault.core.IKey?alt=com.microsoft.azure.keyvault.core.IKey&text=IKey" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves an IKey implementation for the specified key identifier. Implementations should check the format of the kid to ensure that it is recognized. Null, rather than an exception, should be returned for unrecognized key identifiers to enable chaining of key resolvers.</p>

    <p></p>
  syntax: public ListenableFuture<IKey> resolveKeyAsync(String kid)
  uid: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync(String)
nameWithType: CachingKeyResolver
syntax: public class CachingKeyResolver implements IKeyResolver
type: class
uid: com.microsoft.azure.keyvault.extensions.CachingKeyResolver
fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver
name: CachingKeyResolver
package: com.microsoft.azure.keyvault.extensions
summary: <p>The key resolver that caches the key after resolving to <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IKey"></xref>. </p>
metadata: {}
