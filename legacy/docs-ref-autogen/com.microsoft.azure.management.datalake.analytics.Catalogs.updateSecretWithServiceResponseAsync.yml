### YamlMime:JavaMember
nameWithType: Catalogs.updateSecretWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.Catalogs.updateSecretWithServiceResponseAsync(String accountName, String databaseName, String secretName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
  name: updateSecretWithServiceResponseAsync(String accountName, String databaseName, String secretName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
  nameWithType: Catalogs.updateSecretWithServiceResponseAsync(String accountName, String databaseName, String secretName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
  parameters:
  - description: <p>The Azure Data Lake Analytics account upon which to execute catalog operations. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the database containing the secret. </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the secret. </p>
    name: secretName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters required to modify the secret (name and password) </p>
    name: parameters
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters?alt=com.microsoft.azure.management.datalake.analytics.models.DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters&text=DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Modifies the specified secret for use with external data sources in the specified database. This is deprecated and will be removed in the next release. Please use UpdateCredential instead.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> updateSecretWithServiceResponseAsync(String accountName, String databaseName, String secretName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
  uid: com.microsoft.azure.management.datalake.analytics.Catalogs.updateSecretWithServiceResponseAsync(String,String,String,DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters)
uid: com.microsoft.azure.management.datalake.analytics.Catalogs.updateSecretWithServiceResponseAsync*
fullName: com.microsoft.azure.management.datalake.analytics.Catalogs.updateSecretWithServiceResponseAsync
name: updateSecretWithServiceResponseAsync(String accountName, String databaseName, String secretName, DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters parameters)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
