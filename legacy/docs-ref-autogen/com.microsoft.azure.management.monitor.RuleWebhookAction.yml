### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.monitor.RuleAction?alt=com.microsoft.azure.management.monitor.RuleAction&text=RuleAction" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.RuleWebhookAction.properties()
  name: properties()
  nameWithType: RuleWebhookAction.properties()
  returns:
    description: <p>the properties value </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.</p>

    <p></p>
  syntax: public Map<String, String> properties()
  uid: com.microsoft.azure.management.monitor.RuleWebhookAction.properties()
- fullName: com.microsoft.azure.management.monitor.RuleWebhookAction.serviceUri()
  name: serviceUri()
  nameWithType: RuleWebhookAction.serviceUri()
  returns:
    description: <p>the serviceUri value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the service uri to Post the notification when the alert activates or resolves.</p>

    <p></p>
  syntax: public String serviceUri()
  uid: com.microsoft.azure.management.monitor.RuleWebhookAction.serviceUri()
- fullName: com.microsoft.azure.management.monitor.RuleWebhookAction.withProperties(Map<String, String> properties)
  name: withProperties(Map<String, String> properties)
  nameWithType: RuleWebhookAction.withProperties(Map<String, String> properties)
  parameters:
  - description: <p>the properties value to set </p>
    name: properties
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RuleWebhookAction object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.RuleWebhookAction?alt=com.microsoft.azure.management.monitor.RuleWebhookAction&text=RuleWebhookAction" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.</p>

    <p></p>
  syntax: public RuleWebhookAction withProperties(Map<String, String> properties)
  uid: com.microsoft.azure.management.monitor.RuleWebhookAction.withProperties(Map<String, String>)
- fullName: com.microsoft.azure.management.monitor.RuleWebhookAction.withServiceUri(String serviceUri)
  name: withServiceUri(String serviceUri)
  nameWithType: RuleWebhookAction.withServiceUri(String serviceUri)
  parameters:
  - description: <p>the serviceUri value to set </p>
    name: serviceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the RuleWebhookAction object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.RuleWebhookAction?alt=com.microsoft.azure.management.monitor.RuleWebhookAction&text=RuleWebhookAction" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the service uri to Post the notification when the alert activates or resolves.</p>

    <p></p>
  syntax: public RuleWebhookAction withServiceUri(String serviceUri)
  uid: com.microsoft.azure.management.monitor.RuleWebhookAction.withServiceUri(String)
nameWithType: RuleWebhookAction
syntax: public class RuleWebhookAction extends RuleAction
type: class
uid: com.microsoft.azure.management.monitor.RuleWebhookAction
fullName: com.microsoft.azure.management.monitor.RuleWebhookAction
name: RuleWebhookAction
package: com.microsoft.azure.management.monitor
summary: <p>Specifies the action to post to service when the rule condition is evaluated. The discriminator is always RuleWebhookAction in this case. </p>
metadata: {}
