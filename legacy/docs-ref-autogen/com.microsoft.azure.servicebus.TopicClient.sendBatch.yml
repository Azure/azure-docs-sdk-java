### YamlMime:JavaMember
nameWithType: TopicClient.sendBatch
type: method
members:
- fullName: com.microsoft.azure.servicebus.TopicClient.sendBatch(Collection<? extends IMessage> messages)
  name: sendBatch(Collection<? extends IMessage> messages)
  nameWithType: TopicClient.sendBatch(Collection<? extends IMessage> messages)
  overridden: com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage>)
  parameters:
  - description: <p>collection of messages to be sent to the entity </p>
    name: messages
    type: Collection&lt;? extends <xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the batch couldn't be sent to the entity </p>
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This method blocks until the batch is sent to the entity. Calling this method is equivalent to calling <code>sendBatchAsync(messages).get()</code>. For better performance, use async methods.</p>

    <p></p>
  syntax: public void sendBatch(Collection<? extends IMessage> messages)
  uid: com.microsoft.azure.servicebus.TopicClient.sendBatch(Collection<? extends IMessage>)
- fullName: com.microsoft.azure.servicebus.TopicClient.sendBatch(Collection<? extends IMessage> messages, TransactionContext transaction)
  name: sendBatch(Collection<? extends IMessage> messages, TransactionContext transaction)
  nameWithType: TopicClient.sendBatch(Collection<? extends IMessage> messages, TransactionContext transaction)
  overridden: com.microsoft.azure.servicebus.IMessageSender.sendBatch(Collection<? extends IMessage>,TransactionContext)
  parameters:
  - description: <p>collection of messages to be sent to the entity </p>
    name: messages
    type: Collection&lt;? extends <xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>&gt;
  - description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.TransactionContext" data-throw-if-not-resolved="false">TransactionContext</xref> which this operation should enlist to. </p>
    name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if the batch couldn't be sent to the entity </p>
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This method blocks until the batch is sent to the entity. Calling this method is equivalent to calling <code>sendBatchAsync(messages).get()</code>. For better performance, use async methods.</p>

    <p></p>
  syntax: public void sendBatch(Collection<? extends IMessage> messages, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.TopicClient.sendBatch(Collection<? extends IMessage>,TransactionContext)
uid: com.microsoft.azure.servicebus.TopicClient.sendBatch*
fullName: com.microsoft.azure.servicebus.TopicClient.sendBatch(Collection<? extends IMessage> messages)
name: sendBatch(Collection<? extends IMessage> messages)
package: com.microsoft.azure.servicebus
metadata: {}
