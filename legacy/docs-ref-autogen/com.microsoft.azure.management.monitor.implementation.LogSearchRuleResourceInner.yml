### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.model.Indexable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.models.Resource?alt=com.microsoft.azure.management.resources.fluentcore.arm.models.Resource&text=Resource" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasId.id()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasName.name()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.region()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.regionName()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.tags()
- com.microsoft.azure.management.resources.fluentcore.arm.models.Resource.type()
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.action()
  name: action()
  nameWithType: LogSearchRuleResourceInner.action()
  returns:
    description: <p>the action value </p>
    type: <xref href="com.microsoft.azure.management.monitor.Action?alt=com.microsoft.azure.management.monitor.Action&text=Action" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get action needs to be taken on rule execution.</p>

    <p></p>
  syntax: public Action action()
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.action()
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.description()
  name: description()
  nameWithType: LogSearchRuleResourceInner.description()
  returns:
    description: <p>the description value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the description of the Log Search rule.</p>

    <p></p>
  syntax: public String description()
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.description()
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.enabled()
  name: enabled()
  nameWithType: LogSearchRuleResourceInner.enabled()
  returns:
    description: <p>the enabled value </p>
    type: <xref href="com.microsoft.azure.management.monitor.Enabled?alt=com.microsoft.azure.management.monitor.Enabled&text=Enabled" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the flag which indicates whether the Log Search rule is enabled. Value should be true or false. Possible values include: 'true', 'false'.</p>

    <p></p>
  syntax: public Enabled enabled()
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.enabled()
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.lastUpdatedTime()
  name: lastUpdatedTime()
  nameWithType: LogSearchRuleResourceInner.lastUpdatedTime()
  returns:
    description: <p>the lastUpdatedTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get last time the rule was updated in IS08601 format.</p>

    <p></p>
  syntax: public DateTime lastUpdatedTime()
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.lastUpdatedTime()
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.provisioningState()
  name: provisioningState()
  nameWithType: LogSearchRuleResourceInner.provisioningState()
  returns:
    description: <p>the provisioningState value </p>
    type: <xref href="com.microsoft.azure.management.monitor.ProvisioningState?alt=com.microsoft.azure.management.monitor.ProvisioningState&text=ProvisioningState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get provisioning state of the scheduled query rule. Possible values include: 'Succeeded', 'Deploying', 'Canceled', 'Failed'.</p>

    <p></p>
  syntax: public ProvisioningState provisioningState()
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.provisioningState()
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.schedule()
  name: schedule()
  nameWithType: LogSearchRuleResourceInner.schedule()
  returns:
    description: <p>the schedule value </p>
    type: <xref href="com.microsoft.azure.management.monitor.Schedule?alt=com.microsoft.azure.management.monitor.Schedule&text=Schedule" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction.</p>

    <p></p>
  syntax: public Schedule schedule()
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.schedule()
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.source()
  name: source()
  nameWithType: LogSearchRuleResourceInner.source()
  returns:
    description: <p>the source value </p>
    type: <xref href="com.microsoft.azure.management.monitor.Source?alt=com.microsoft.azure.management.monitor.Source&text=Source" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get data Source against which rule will Query Data.</p>

    <p></p>
  syntax: public Source source()
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.source()
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withAction(Action action)
  name: withAction(Action action)
  nameWithType: LogSearchRuleResourceInner.withAction(Action action)
  parameters:
  - description: <p>the action value to set </p>
    name: action
    type: <xref href="com.microsoft.azure.management.monitor.Action?alt=com.microsoft.azure.management.monitor.Action&text=Action" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LogSearchRuleResourceInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set action needs to be taken on rule execution.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner withAction(Action action)
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withAction(Action)
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withDescription(String description)
  name: withDescription(String description)
  nameWithType: LogSearchRuleResourceInner.withDescription(String description)
  parameters:
  - description: <p>the description value to set </p>
    name: description
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LogSearchRuleResourceInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the description of the Log Search rule.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner withDescription(String description)
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withDescription(String)
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withEnabled(Enabled enabled)
  name: withEnabled(Enabled enabled)
  nameWithType: LogSearchRuleResourceInner.withEnabled(Enabled enabled)
  parameters:
  - description: <p>the enabled value to set </p>
    name: enabled
    type: <xref href="com.microsoft.azure.management.monitor.Enabled?alt=com.microsoft.azure.management.monitor.Enabled&text=Enabled" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LogSearchRuleResourceInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the flag which indicates whether the Log Search rule is enabled. Value should be true or false. Possible values include: 'true', 'false'.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner withEnabled(Enabled enabled)
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withEnabled(Enabled)
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withSchedule(Schedule schedule)
  name: withSchedule(Schedule schedule)
  nameWithType: LogSearchRuleResourceInner.withSchedule(Schedule schedule)
  parameters:
  - description: <p>the schedule value to set </p>
    name: schedule
    type: <xref href="com.microsoft.azure.management.monitor.Schedule?alt=com.microsoft.azure.management.monitor.Schedule&text=Schedule" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LogSearchRuleResourceInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner withSchedule(Schedule schedule)
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withSchedule(Schedule)
- fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withSource(Source source)
  name: withSource(Source source)
  nameWithType: LogSearchRuleResourceInner.withSource(Source source)
  parameters:
  - description: <p>the source value to set </p>
    name: source
    type: <xref href="com.microsoft.azure.management.monitor.Source?alt=com.microsoft.azure.management.monitor.Source&text=Source" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the LogSearchRuleResourceInner object itself. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner?alt=com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner&text=LogSearchRuleResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set data Source against which rule will Query Data.</p>

    <p></p>
  syntax: public LogSearchRuleResourceInner withSource(Source source)
  uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner.withSource(Source)
nameWithType: LogSearchRuleResourceInner
syntax: public class LogSearchRuleResourceInner implements Resource
type: class
uid: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner
fullName: com.microsoft.azure.management.monitor.implementation.LogSearchRuleResourceInner
name: LogSearchRuleResourceInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>The Log Search Rule resource. </p>
metadata: {}
