### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.attributes()
  name: attributes()
  nameWithType: SecretBundle.attributes()
  returns:
    description: <p>the attributes value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.SecretAttributes?alt=com.microsoft.azure.keyvault.models.SecretAttributes&text=SecretAttributes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the attributes value.</p>

    <p></p>
  syntax: public SecretAttributes attributes()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.attributes()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.contentType()
  name: contentType()
  nameWithType: SecretBundle.contentType()
  returns:
    description: <p>the contentType value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the contentType value.</p>

    <p></p>
  syntax: public String contentType()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.contentType()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.id()
  name: id()
  nameWithType: SecretBundle.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.id()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.kid()
  name: kid()
  nameWithType: SecretBundle.kid()
  returns:
    description: <p>the kid value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the kid value.</p>

    <p></p>
  syntax: public String kid()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.kid()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.managed()
  name: managed()
  nameWithType: SecretBundle.managed()
  returns:
    description: <p>the managed value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the managed value.</p>

    <p></p>
  syntax: public Boolean managed()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.managed()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.secretIdentifier()
  name: secretIdentifier()
  nameWithType: SecretBundle.secretIdentifier()
  returns:
    description: <p>The Identifier value </p>
    type: <xref href="com.microsoft.azure.keyvault.SecretIdentifier?alt=com.microsoft.azure.keyvault.SecretIdentifier&text=SecretIdentifier" data-throw-if-not-resolved="False"/>
  summary: <p>the secret identifier. </p>
  syntax: public SecretIdentifier secretIdentifier()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.secretIdentifier()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.tags()
  name: tags()
  nameWithType: SecretBundle.tags()
  returns:
    description: <p>the tags value </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tags value.</p>

    <p></p>
  syntax: public Map<String, String> tags()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.tags()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.toString()
  name: toString()
  nameWithType: SecretBundle.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.toString()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.value()
  name: value()
  nameWithType: SecretBundle.value()
  returns:
    description: <p>the value value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the value value.</p>

    <p></p>
  syntax: public String value()
  uid: com.microsoft.azure.keyvault.models.SecretBundle.value()
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.withAttributes(SecretAttributes attributes)
  name: withAttributes(SecretAttributes attributes)
  nameWithType: SecretBundle.withAttributes(SecretAttributes attributes)
  parameters:
  - description: <p>the attributes value to set </p>
    name: attributes
    type: <xref href="com.microsoft.azure.keyvault.models.SecretAttributes?alt=com.microsoft.azure.keyvault.models.SecretAttributes&text=SecretAttributes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SecretBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.SecretBundle?alt=com.microsoft.azure.keyvault.models.SecretBundle&text=SecretBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the attributes value.</p>

    <p></p>
  syntax: public SecretBundle withAttributes(SecretAttributes attributes)
  uid: com.microsoft.azure.keyvault.models.SecretBundle.withAttributes(SecretAttributes)
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.withContentType(String contentType)
  name: withContentType(String contentType)
  nameWithType: SecretBundle.withContentType(String contentType)
  parameters:
  - description: <p>the contentType value to set </p>
    name: contentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SecretBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.SecretBundle?alt=com.microsoft.azure.keyvault.models.SecretBundle&text=SecretBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the contentType value.</p>

    <p></p>
  syntax: public SecretBundle withContentType(String contentType)
  uid: com.microsoft.azure.keyvault.models.SecretBundle.withContentType(String)
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.withId(String id)
  name: withId(String id)
  nameWithType: SecretBundle.withId(String id)
  parameters:
  - description: <p>the id value to set </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SecretBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.SecretBundle?alt=com.microsoft.azure.keyvault.models.SecretBundle&text=SecretBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the id value.</p>

    <p></p>
  syntax: public SecretBundle withId(String id)
  uid: com.microsoft.azure.keyvault.models.SecretBundle.withId(String)
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: SecretBundle.withTags(Map<String, String> tags)
  parameters:
  - description: <p>the tags value to set </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SecretBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.SecretBundle?alt=com.microsoft.azure.keyvault.models.SecretBundle&text=SecretBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tags value.</p>

    <p></p>
  syntax: public SecretBundle withTags(Map<String, String> tags)
  uid: com.microsoft.azure.keyvault.models.SecretBundle.withTags(Map<String, String>)
- fullName: com.microsoft.azure.keyvault.models.SecretBundle.withValue(String value)
  name: withValue(String value)
  nameWithType: SecretBundle.withValue(String value)
  parameters:
  - description: <p>the value value to set </p>
    name: value
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the SecretBundle object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.SecretBundle?alt=com.microsoft.azure.keyvault.models.SecretBundle&text=SecretBundle" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value value.</p>

    <p></p>
  syntax: public SecretBundle withValue(String value)
  uid: com.microsoft.azure.keyvault.models.SecretBundle.withValue(String)
nameWithType: SecretBundle
syntax: public class SecretBundle
type: class
uid: com.microsoft.azure.keyvault.models.SecretBundle
fullName: com.microsoft.azure.keyvault.models.SecretBundle
name: SecretBundle
package: com.microsoft.azure.keyvault.models
summary: <p>A secret consisting of a value, id and its attributes. </p>
metadata: {}
