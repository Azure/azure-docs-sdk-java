### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.getResourceNamerFactory()
  name: getResourceNamerFactory()
  nameWithType: SdkContext.getResourceNamerFactory()
  returns:
    description: <p>resourceNamer factory. </p>
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.utils.ResourceNamerFactory?alt=com.microsoft.azure.management.resources.fluentcore.utils.ResourceNamerFactory&text=ResourceNamerFactory" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the current factory for ResourceNamer. </p>
  syntax: public static ResourceNamerFactory getResourceNamerFactory()
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.getResourceNamerFactory()
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.getRxScheduler()
  name: getRxScheduler()
  nameWithType: SdkContext.getRxScheduler()
  returns:
    description: <p>current rx scheduler. </p>
    type: <xref href="Scheduler?alt=Scheduler&text=Scheduler" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the current Rx Scheduler for the SDK framework. </p>
  syntax: public static Scheduler getRxScheduler()
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.getRxScheduler()
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.randomResourceName(String prefix, int maxLen)
  name: randomResourceName(String prefix, int maxLen)
  nameWithType: SdkContext.randomResourceName(String prefix, int maxLen)
  parameters:
  - description: <p>the prefix to be used if possible </p>
    name: prefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the maximum length for the random generated name </p>
    name: maxLen
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the random name </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a random name.</p>

    <p></p>
  syntax: public static String randomResourceName(String prefix, int maxLen)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.randomResourceName(String,int)
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.randomResourceNames(String prefix, int maxLen, int count)
  name: randomResourceNames(String prefix, int maxLen, int count)
  nameWithType: SdkContext.randomResourceNames(String prefix, int maxLen, int count)
  parameters:
  - description: <p>the prefix to be used if possible </p>
    name: prefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the maximum length for the random generated name </p>
    name: maxLen
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>the number of names to generate </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>random names </p>
    type: <xref href="String+%5B%5D?alt=String+%5B%5D&text=String+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Generates the specified number of random resource names with the same prefix. </p>
  syntax: public static String [] randomResourceNames(String prefix, int maxLen, int count)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.randomResourceNames(String,int,int)
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.randomUuid()
  name: randomUuid()
  nameWithType: SdkContext.randomUuid()
  returns:
    description: <p>the random UUID. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets a random UUID.</p>

    <p></p>
  syntax: public static String randomUuid()
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.randomUuid()
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.setDelayProvider(DelayProvider delayProvider)
  name: setDelayProvider(DelayProvider delayProvider)
  nameWithType: SdkContext.setDelayProvider(DelayProvider delayProvider)
  parameters:
  - description: <p>delayProvider to override. </p>
    name: delayProvider
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider?alt=com.microsoft.azure.management.resources.fluentcore.utils.DelayProvider&text=DelayProvider" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Function to override the DelayProvider.</p>

    <p></p>
  syntax: public static void setDelayProvider(DelayProvider delayProvider)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.setDelayProvider(DelayProvider)
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.setResourceNamerFactory(ResourceNamerFactory resourceNamerFactory)
  name: setResourceNamerFactory(ResourceNamerFactory resourceNamerFactory)
  nameWithType: SdkContext.setResourceNamerFactory(ResourceNamerFactory resourceNamerFactory)
  parameters:
  - description: <p>factory to override. </p>
    name: resourceNamerFactory
    type: <xref href="com.microsoft.azure.management.resources.fluentcore.utils.ResourceNamerFactory?alt=com.microsoft.azure.management.resources.fluentcore.utils.ResourceNamerFactory&text=ResourceNamerFactory" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Function to override the ResourceNamerFactory.</p>

    <p></p>
  syntax: public static void setResourceNamerFactory(ResourceNamerFactory resourceNamerFactory)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.setResourceNamerFactory(ResourceNamerFactory)
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.setRxScheduler(Scheduler rxScheduler)
  name: setRxScheduler(Scheduler rxScheduler)
  nameWithType: SdkContext.setRxScheduler(Scheduler rxScheduler)
  parameters:
  - description: <p>current Rx Scheduler to be used in SDK framework. </p>
    name: rxScheduler
    type: <xref href="Scheduler?alt=Scheduler&text=Scheduler" data-throw-if-not-resolved="False"/>
  summary: <p>Sets the Rx Scheduler for SDK framework, by default is Scheduler.io(). </p>
  syntax: public static void setRxScheduler(Scheduler rxScheduler)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.setRxScheduler(Scheduler)
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.sleep(int milliseconds)
  name: sleep(int milliseconds)
  nameWithType: SdkContext.sleep(int milliseconds)
  parameters:
  - description: <p>number of millisecond for which thread should put on sleep. </p>
    name: milliseconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Wrapper for sleep, based on delayProvider. </p>
  syntax: public static void sleep(int milliseconds)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext.sleep(int)
nameWithType: SdkContext
syntax: public class SdkContext
type: class
uid: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext
fullName: com.microsoft.azure.management.resources.fluentcore.utils.SdkContext
name: SdkContext
package: com.microsoft.azure.management.resources.fluentcore.utils
summary: <p>The class to contain the common factory methods required for SDK framework. </p>
metadata: {}
