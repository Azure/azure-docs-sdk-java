### YamlMime:JavaMember
nameWithType: ResourceFile.withStorageContainerUrl
type: method
members:
- fullName: com.microsoft.azure.management.batch.ResourceFile.withStorageContainerUrl(String storageContainerUrl)
  name: withStorageContainerUrl(String storageContainerUrl)
  nameWithType: ResourceFile.withStorageContainerUrl(String storageContainerUrl)
  parameters:
  - description: <p>the storageContainerUrl value to set </p>
    name: storageContainerUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ResourceFile object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.ResourceFile?alt=com.microsoft.azure.management.batch.ResourceFile&text=ResourceFile" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access.</p>

    <p></p>
  syntax: public ResourceFile withStorageContainerUrl(String storageContainerUrl)
  uid: com.microsoft.azure.management.batch.ResourceFile.withStorageContainerUrl(String)
uid: com.microsoft.azure.management.batch.ResourceFile.withStorageContainerUrl*
fullName: com.microsoft.azure.management.batch.ResourceFile.withStorageContainerUrl(String storageContainerUrl)
name: withStorageContainerUrl(String storageContainerUrl)
package: com.microsoft.azure.management.batch
metadata: {}
