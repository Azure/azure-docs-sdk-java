### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.EncryptionUtility.decryptText(String textToDecrypt)
  name: decryptText(String textToDecrypt)
  nameWithType: EncryptionUtility.decryptText(String textToDecrypt)
  parameters:
  - description: <p>The text to decrypt. </p>
    name: textToDecrypt
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The decrypted text as char array. </p>
    type: <xref href="char+%5B%5D?alt=char+%5B%5D&text=char+%5B%5D" data-throw-if-not-resolved="False"/>
  summary: <p>Decrypted the encrypted text. The certificate(.pem) file should be present in the /var/lib/sfcerts folder. </p>
  syntax: public static char [] decryptText(String textToDecrypt)
  uid: system.fabric.EncryptionUtility.decryptText(String)
- fullName: system.fabric.EncryptionUtility.encryptText(char []textToEncrypt, String certPath)
  name: encryptText(char []textToEncrypt, String certPath)
  nameWithType: EncryptionUtility.encryptText(char []textToEncrypt, String certPath)
  parameters:
  - description: <p>The text to encrypt. </p>
    name: textToEncrypt
    type: <xref href="char+%5B%5D?alt=char+%5B%5D&text=char+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Path of the certificate(.pem) file to be used for encryption. </p>
    name: certPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The encrypted string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Encrypts the text with the given certificate file. </p>
  syntax: public static String encryptText(char []textToEncrypt, String certPath)
  uid: system.fabric.EncryptionUtility.encryptText(char [],String)
- fullName: system.fabric.EncryptionUtility.encryptText(char []textToEncrypt, String certPath, String algorithmOid)
  name: encryptText(char []textToEncrypt, String certPath, String algorithmOid)
  nameWithType: EncryptionUtility.encryptText(char []textToEncrypt, String certPath, String algorithmOid)
  parameters:
  - description: <p>The text to encrypt. </p>
    name: textToEncrypt
    type: <xref href="char+%5B%5D?alt=char+%5B%5D&text=char+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Path of the certificate(.pem) file to be used for encryption. </p>
    name: certPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The encryption algorithm object identifier (OID). </p>
    name: algorithmOid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The encrypted string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Encrypts the text with the given certificate file. </p>
  syntax: public static String encryptText(char []textToEncrypt, String certPath, String algorithmOid)
  uid: system.fabric.EncryptionUtility.encryptText(char [],String,String)
- fullName: system.fabric.EncryptionUtility.encryptText(String textToEncrypt, String certPath)
  name: encryptText(String textToEncrypt, String certPath)
  nameWithType: EncryptionUtility.encryptText(String textToEncrypt, String certPath)
  parameters:
  - description: <p>The text to encrypt. </p>
    name: textToEncrypt
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Path of the certificate(.pem) file to be used for encryption. </p>
    name: certPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The encrypted string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Encrypts the text with the given certificate file. </p>
  syntax: public static String encryptText(String textToEncrypt, String certPath)
  uid: system.fabric.EncryptionUtility.encryptText(String,String)
- fullName: system.fabric.EncryptionUtility.encryptText(String textToEncrypt, String certPath, String algorithmOid)
  name: encryptText(String textToEncrypt, String certPath, String algorithmOid)
  nameWithType: EncryptionUtility.encryptText(String textToEncrypt, String certPath, String algorithmOid)
  parameters:
  - description: <p>The text to encrypt. </p>
    name: textToEncrypt
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Path of the certificate(.pem) file to be used for encryption. </p>
    name: certPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The encryption algorithm object identifier (OID). </p>
    name: algorithmOid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The encrypted string. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Encrypts the text with the given certificate file. </p>
  syntax: public static String encryptText(String textToEncrypt, String certPath, String algorithmOid)
  uid: system.fabric.EncryptionUtility.encryptText(String,String,String)
nameWithType: EncryptionUtility
syntax: public class EncryptionUtility
type: class
uid: system.fabric.EncryptionUtility
fullName: system.fabric.EncryptionUtility
name: EncryptionUtility
package: system.fabric
summary: <p>Utility class to perform encryption and decryption operations. </p>
metadata: {}
