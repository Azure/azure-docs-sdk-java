### YamlMime:JavaType
constructors:
- microsoft.servicefabric.actors.client.ActorProxyBase.ActorProxyBase()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="microsoft.servicefabric.services.remoting.builder.ProxyBase?alt=microsoft.servicefabric.services.remoting.builder.ProxyBase&text=ProxyBase" data-throw-if-not-resolved="False"/>
inheritedMembers:
- microsoft.servicefabric.services.remoting.builder.ProxyBase.continueWith(CompletableFuture<Object>)
- microsoft.servicefabric.services.remoting.builder.ProxyBase.getReturnValue(int,int,Object)
- microsoft.servicefabric.services.remoting.builder.ProxyBase.invoke(int,int,Object)
- microsoft.servicefabric.services.remoting.builder.ProxyBase.invokeAsync(int,int,Object,CancellationToken)
- microsoft.servicefabric.services.remoting.builder.ProxyBase.ProxyBase()
methods:
- microsoft.servicefabric.actors.client.ActorProxyBase.create(Class<T>,ActorId)
- microsoft.servicefabric.actors.client.ActorProxyBase.create(Class<T>,ActorId,String)
- microsoft.servicefabric.actors.client.ActorProxyBase.create(Class<T>,ActorId,String,String)
- microsoft.servicefabric.actors.client.ActorProxyBase.create(Class<T>,ActorId,String,String,String)
- microsoft.servicefabric.actors.client.ActorProxyBase.create(Class<T>,ActorId,URI)
- microsoft.servicefabric.actors.client.ActorProxyBase.create(Class<T>,ActorId,URI,String)
- microsoft.servicefabric.actors.client.ActorProxyBase.createRequestMessageBody(Object)
- microsoft.servicefabric.actors.client.ActorProxyBase.deserializeMessage(byte [])
- microsoft.servicefabric.actors.client.ActorProxyBase.getActorId()
- microsoft.servicefabric.actors.client.ActorProxyBase.getActorServicePartitionClient()
- microsoft.servicefabric.actors.client.ActorProxyBase.getDefaultProxyFactory()
- microsoft.servicefabric.actors.client.ActorProxyBase.getResponseMessageBodyValue(Object)
- microsoft.servicefabric.actors.client.ActorProxyBase.initialize(ActorServicePartitionClientImpl)
- microsoft.servicefabric.actors.client.ActorProxyBase.invoke(int,int,byte [])
- microsoft.servicefabric.actors.client.ActorProxyBase.invokeAsync(int,int,byte [],CancellationToken)
- microsoft.servicefabric.actors.client.ActorProxyBase.serializeMessage(Object)
nameWithType: ActorProxyBase
syntax: public class ActorProxyBase extends ProxyBase implements ActorProxy
type: class
uid: microsoft.servicefabric.actors.client.ActorProxyBase
fullName: microsoft.servicefabric.actors.client.ActorProxyBase
name: ActorProxyBase
package: microsoft.servicefabric.actors.client
summary: <p>Provides the base implementation for the proxy to the remote actor objects implementing IActor interfaces. </p>
metadata: {}
