### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.bottom()
  name: bottom()
  nameWithType: CropArea.bottom()
  returns:
    description: <p>the bottom value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the bottom value.</p>

    <p></p>
  syntax: public double bottom()
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.bottom()
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.left()
  name: left()
  nameWithType: CropArea.left()
  returns:
    description: <p>the left value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the left value.</p>

    <p></p>
  syntax: public double left()
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.left()
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.right()
  name: right()
  nameWithType: CropArea.right()
  returns:
    description: <p>the right value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the right value.</p>

    <p></p>
  syntax: public double right()
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.right()
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.top()
  name: top()
  nameWithType: CropArea.top()
  returns:
    description: <p>the top value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the top value.</p>

    <p></p>
  syntax: public double top()
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.top()
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withBottom(double bottom)
  name: withBottom(double bottom)
  nameWithType: CropArea.withBottom(double bottom)
  parameters:
  - description: <p>the bottom value to set </p>
    name: bottom
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CropArea object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea?alt=com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea&text=CropArea" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the bottom value.</p>

    <p></p>
  syntax: public CropArea withBottom(double bottom)
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withBottom(double)
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withLeft(double left)
  name: withLeft(double left)
  nameWithType: CropArea.withLeft(double left)
  parameters:
  - description: <p>the left value to set </p>
    name: left
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CropArea object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea?alt=com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea&text=CropArea" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the left value.</p>

    <p></p>
  syntax: public CropArea withLeft(double left)
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withLeft(double)
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withRight(double right)
  name: withRight(double right)
  nameWithType: CropArea.withRight(double right)
  parameters:
  - description: <p>the right value to set </p>
    name: right
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CropArea object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea?alt=com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea&text=CropArea" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the right value.</p>

    <p></p>
  syntax: public CropArea withRight(double right)
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withRight(double)
- fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withTop(double top)
  name: withTop(double top)
  nameWithType: CropArea.withTop(double top)
  parameters:
  - description: <p>the top value to set </p>
    name: top
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CropArea object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea?alt=com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea&text=CropArea" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the top value.</p>

    <p></p>
  syntax: public CropArea withTop(double top)
  uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea.withTop(double)
nameWithType: CropArea
syntax: public class CropArea
type: class
uid: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea
fullName: com.microsoft.azure.cognitiveservices.search.visualsearch.models.CropArea
name: CropArea
package: com.microsoft.azure.cognitiveservices.search.visualsearch.models
summary: <p>A JSON object consisting of coordinates specifying the four corners of a cropped rectangle within the input image. </p>
metadata: {}
