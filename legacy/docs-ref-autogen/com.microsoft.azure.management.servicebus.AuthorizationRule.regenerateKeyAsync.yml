### YamlMime:JavaMember
nameWithType: AuthorizationRule<RuleT>.regenerateKeyAsync
type: method
members:
- fullName: com.microsoft.azure.management.servicebus.AuthorizationRule<RuleT extends AuthorizationRule<RuleT>.regenerateKeyAsync(Policykey policykey)
  name: regenerateKeyAsync(Policykey policykey)
  nameWithType: AuthorizationRule<RuleT>.regenerateKeyAsync(Policykey policykey)
  parameters:
  - description: <p>the key to regenerate </p>
    name: policykey
    type: <xref href="com.microsoft.azure.management.servicebus.Policykey?alt=com.microsoft.azure.management.servicebus.Policykey&text=Policykey" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call, returning the primary, secondary keys and the connection strings </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.servicebus.AuthorizationKeys?alt=com.microsoft.azure.management.servicebus.AuthorizationKeys&text=AuthorizationKeys" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Regenerates primary or secondary keys.</p>

    <p></p>
  syntax: public Observable<AuthorizationKeys> regenerateKeyAsync(Policykey policykey)
  uid: com.microsoft.azure.management.servicebus.AuthorizationRule.regenerateKeyAsync(Policykey)
uid: com.microsoft.azure.management.servicebus.AuthorizationRule.regenerateKeyAsync*
fullName: com.microsoft.azure.management.servicebus.AuthorizationRule<RuleT extends AuthorizationRule<RuleT>.regenerateKeyAsync(Policykey policykey)
name: regenerateKeyAsync(Policykey policykey)
package: com.microsoft.azure.management.servicebus
metadata: {}
