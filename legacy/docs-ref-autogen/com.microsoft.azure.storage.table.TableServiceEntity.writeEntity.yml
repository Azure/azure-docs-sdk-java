### YamlMime:JavaMember
nameWithType: TableServiceEntity.writeEntity
type: method
members:
- fullName: com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(final OperationContext opContext)
  name: writeEntity(final OperationContext opContext)
  nameWithType: TableServiceEntity.writeEntity(final OperationContext opContext)
  overridden: com.microsoft.azure.storage.table.TableEntity.writeEntity(OperationContext)
  parameters:
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false">OperationContext</xref> object used to track the execution of the operation. </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>if an error occurs during the serialization. </p>
  returns:
    description: <p>A <code>java.util.HashMap</code> of <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values representing the properties serialized from this table entity instance. </p>
    type: HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Returns a map of property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false">EntityProperty</xref> data typed values created by serializing this table entity instance. </p>

    <p>This method invokes <xref uid="com.microsoft.azure.storage.table.TableServiceEntity.writeEntityWithReflection(final Object)" data-throw-if-not-resolved="false">writeEntityWithReflection</xref> to serialize the table entity instance the method is called on using reflection. Table entity classes that extend <xref uid="com.microsoft.azure.storage.table.TableServiceEntity" data-throw-if-not-resolved="false">TableServiceEntity</xref> can take advantage of this behavior by implementing getter and setter methods for the particular properties of the table entity in Microsoft Azure storage the class represents. Note that the property names "PartitionKey", "RowKey", and "Timestamp" are reserved and will be ignored if set on other methods with the <xref uid="com.microsoft.azure.storage.table.StoreAs" data-throw-if-not-resolved="false">StoreAs</xref> annotation. </p>

    <p>Override this method in classes that extend <xref uid="com.microsoft.azure.storage.table.TableServiceEntity" data-throw-if-not-resolved="false">TableServiceEntity</xref> to invoke custom serialization code.</p>

    <p></p>
  syntax: public HashMap<String, EntityProperty> writeEntity(final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(final OperationContext)
uid: com.microsoft.azure.storage.table.TableServiceEntity.writeEntity*
fullName: com.microsoft.azure.storage.table.TableServiceEntity.writeEntity(final OperationContext opContext)
name: writeEntity(final OperationContext opContext)
package: com.microsoft.azure.storage.table
metadata: {}
