### YamlMime:JavaMember
nameWithType: VolatileActorStateProvider.getCopyState
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)
  name: getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)
  nameWithType: VolatileActorStateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)
  overridden: system.fabric.StateProvider.getCopyState(SequenceNumber,OperationDataStream)
  parameters:
  - description: <p>The maximum last sequence number (LSN) that should be placed in the copy stream via the <xref uid="system.fabric.StateReplicator.getCopyStream()" data-throw-if-not-resolved="false">StateReplicator#getCopyStream()</xref> method. LSNs greater than this number are delivered to the Secondary replica as a part of the replication stream via the <xref uid="system.fabric.StateReplicator.getReplicationStream()" data-throw-if-not-resolved="false">StateReplicator#getReplicationStream()</xref> method. </p>
    name: upToSequenceNumber
    type: <xref href="system.fabric.SequenceNumber?alt=system.fabric.SequenceNumber&text=SequenceNumber" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref> that contains the <xref uid="" data-throw-if-not-resolved="false">OperationData</xref> objects that are created by the Secondary replica. requires to catch up to the provided </p>
    name: copyContext
    type: <xref href="system.fabric.OperationDataStream?alt=system.fabric.OperationDataStream&text=OperationDataStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>. </p>
    type: <xref href="system.fabric.OperationDataStream?alt=system.fabric.OperationDataStream&text=OperationDataStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Obtains state on a Primary replica that is required to build a Secondary replica.</p>

    <p>

      <b>Remarks:</b>Just as <xref uid="system.fabric.StateProvider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> enables the Secondary replica to send context to the Primary replica via an <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>, <xref uid="system.fabric.StateProvider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> enables the Primary replica to respond with an <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>. The stream contains objects that are delivered to the Secondary replica via the <xref uid="system.fabric.StateReplicator.getCopyStream()" data-throw-if-not-resolved="false">StateReplicator#getCopyStream()</xref> method of the <xref uid="" data-throw-if-not-resolved="false">FabricReplicator</xref> class. The objects implement <xref uid="" data-throw-if-not-resolved="false">Operation</xref> and contain the specified data. When the Primary replica receives this call, it should create and return another <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref> that contains <xref uid="" data-throw-if-not-resolved="false">OperationData</xref>. <xref uid="" data-throw-if-not-resolved="false">OperationData</xref> represents the data/state that the Secondary replica </p>
  syntax: public OperationDataStream getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)
  uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyState(SequenceNumber,OperationDataStream)
uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyState*
fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)
name: getCopyState(SequenceNumber upToSequenceNumber, OperationDataStream copyContext)
package: microsoft.servicefabric.actors.runtime
metadata: {}
