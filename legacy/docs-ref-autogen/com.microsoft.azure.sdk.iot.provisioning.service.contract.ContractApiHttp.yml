### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.createFromConnectionString(ProvisioningConnectionString provisioningConnectionString)
  name: createFromConnectionString(ProvisioningConnectionString provisioningConnectionString)
  nameWithType: ContractApiHttp.createFromConnectionString(ProvisioningConnectionString provisioningConnectionString)
  parameters:
  - description: <p>is the Device Provisioning Service service connection string. </p>
    name: provisioningConnectionString
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionString?alt=com.microsoft.azure.sdk.iot.provisioning.service.auth.ProvisioningConnectionString&text=ProvisioningConnectionString" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if there is a problem with the provided connection string. </p>
  returns:
    description: >-
      <p>an instance of<code>ContractApiHttp 

          </code> . </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp?alt=com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp&text=ContractApiHttp" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new instance of the ContractApiHttp.</p>

    <p></p>
  syntax: public static ContractApiHttp createFromConnectionString(ProvisioningConnectionString provisioningConnectionString)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.createFromConnectionString(ProvisioningConnectionString)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  name: request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  nameWithType: ContractApiHttp.request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  parameters:
  - description: <p>is the http verb in the request (GET, POST, PUT, DELETE, PATCH). </p>
    name: httpMethod
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.transport.https.HttpMethod?alt=com.microsoft.azure.sdk.iot.provisioning.service.transport.https.HttpMethod&text=HttpMethod" data-throw-if-not-resolved="False"/>
  - description: <p>is the path to the resource in the service that will compose the URL. </p>
    name: path
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>is a list of pairs key values that contains optional parameters in the http header. </p>
    name: headerParameters
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  - description: <p>is the body of the message. </p>
    name: payload
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="ProvisioningServiceClientTransportException?alt=ProvisioningServiceClientTransportException&text=ProvisioningServiceClientTransportException" data-throw-if-not-resolved="False"/>
    description: <p>if the Service Client failed to exchange http messages with the Provisioning Service. </p>
  - type: <xref href="ProvisioningServiceClientException?alt=ProvisioningServiceClientException&text=ProvisioningServiceClientException" data-throw-if-not-resolved="False"/>
    description: <p>if the Provisioning Service response contains an error message. </p>
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the provided parameters are not correct. </p>
  returns:
    description: >-
      <p>the<code>HttpResponse 

          </code> that contains the response of the request. </p>
    type: synchronized <xref href="com.microsoft.azure.sdk.iot.provisioning.service.transport.https.HttpResponse?alt=com.microsoft.azure.sdk.iot.provisioning.service.transport.https.HttpResponse&text=HttpResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This function sends a raw information to the Device Provisioning Service service using http protocol. </p>

    <p>The purpose of this function is be the base communication between the controllers and the Service, and should be used only if you have full understanding of the Device Provisioning Service rest APIs. We highly recommend that you uses the APis under <b><xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient" data-throw-if-not-resolved="false" data-raw-source="ProvisioningServiceClient"></xref></b> instead of directly access the rest API using this class. </p>

    <p></p>
  syntax: public synchronized HttpResponse request(HttpMethod httpMethod, String path, Map<String, String> headerParameters, String payload)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp.request(HttpMethod,String,Map<String, String>,String)
nameWithType: ContractApiHttp
syntax: public class ContractApiHttp
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp
fullName: com.microsoft.azure.sdk.iot.provisioning.service.contract.ContractApiHttp
name: ContractApiHttp
package: com.microsoft.azure.sdk.iot.provisioning.service.contract
summary: >-
  <p>This client handles the Device Provisioning Service HTTP communication.</p>

  <p>This class implements the HTTPS contract between the Provisioning Service Client and the Device Provisioning Service. It is called by the Managers that implement the Provisioning Service Client public APIs. To access the public APIs, please see the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient" data-throw-if-not-resolved="false" data-raw-source="ProvisioningServiceClient"></xref>.</p>

  <p>The follow diagram describe the relation between these 3 layers of the Service Client:</p>

  <p>

    <pre>

      <code>          +-------------------------------------------------------------------+           +------------+

                |                        ProvisioningServiceClient                  |           |    Query   |

                +-----+----------------------------+--------------------------+-----+           +--+---+-----+

                     /                             |                           \                   |   |

                    /                              |                            \                  |   |

      +------------+----------------+  +-----------+------------+  +-------------+-------------+   |   |

      | IndividualEnrollmentManager |  | EnrollmentGroupManager |  | RegistrationStatusManager |   |   |

      +------------+--------+-------+  +-----------+------+-----+  +-------------+-------+-----+   |   |

                   |         \                     |       \                     |        \        |   |

                   |          +-----------------------------+------------------------------+-------+   |

                   |                               |                             |                     |

      +------------+-------------------------------+-----------------------------+---------------------+---+

      |                                       ContractApiHttp                                              |

      +------------------------------------------------+---------------------------------------------------+

                                                       |

                                                       |

                 +-------------------------------------+------------------------------------------+

                 |                 com.microsoft.azure.sdk.iot.deps.transport.http                |

                 +--------------------------------------------------------------------------------+

      </code>

    </pre>

  </p>
metadata: {}
