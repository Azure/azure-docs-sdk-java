### YamlMime:JavaMember
nameWithType: Reviews.addVideoTranscriptModerationResultAsync
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.addVideoTranscriptModerationResultAsync(String teamName, String reviewId, String contentType, List<TranscriptModerationBodyItem> transcriptModerationBody)
  name: addVideoTranscriptModerationResultAsync(String teamName, String reviewId, String contentType, List<TranscriptModerationBodyItem> transcriptModerationBody)
  nameWithType: Reviews.addVideoTranscriptModerationResultAsync(String teamName, String reviewId, String contentType, List<TranscriptModerationBodyItem> transcriptModerationBody)
  parameters:
  - description: <p>Your team name. </p>
    name: teamName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Id of the review. </p>
    name: reviewId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The content type. </p>
    name: contentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Body for add video transcript moderation result API. </p>
    name: transcriptModerationBody
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.TranscriptModerationBodyItem&text=TranscriptModerationBodyItem" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>a representation of the deferred computation of this call if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>This API adds a transcript screen text result file for a video review. Transcript screen text result file is a result of Screen Text API . In order to generate transcript screen text result file , a transcript file has to be screened for profanity using Screen Text API.</p>

    <p></p>
  syntax: public Observable<Void> addVideoTranscriptModerationResultAsync(String teamName, String reviewId, String contentType, List<TranscriptModerationBodyItem> transcriptModerationBody)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.addVideoTranscriptModerationResultAsync(String,String,String,List<TranscriptModerationBodyItem>)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.addVideoTranscriptModerationResultAsync*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.addVideoTranscriptModerationResultAsync
name: addVideoTranscriptModerationResultAsync(String teamName, String reviewId, String contentType, List<TranscriptModerationBodyItem> transcriptModerationBody)
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
