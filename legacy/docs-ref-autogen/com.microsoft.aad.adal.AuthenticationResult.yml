### YamlMime:JavaType
fields:
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mAccessToken
  name: mAccessToken
  nameWithType: AuthenticationResult.mAccessToken
  syntax: protected String mAccessToken
  uid: com.microsoft.aad.adal.AuthenticationResult.mAccessToken
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mAuthority
  name: mAuthority
  nameWithType: AuthenticationResult.mAuthority
  syntax: protected String mAuthority
  uid: com.microsoft.aad.adal.AuthenticationResult.mAuthority
- field:
    type: <xref href="CliTelemInfo?alt=CliTelemInfo&text=CliTelemInfo" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mCliTelemInfo
  name: mCliTelemInfo
  nameWithType: AuthenticationResult.mCliTelemInfo
  syntax: protected CliTelemInfo mCliTelemInfo
  uid: com.microsoft.aad.adal.AuthenticationResult.mCliTelemInfo
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mErrorCode
  name: mErrorCode
  nameWithType: AuthenticationResult.mErrorCode
  syntax: protected String mErrorCode
  uid: com.microsoft.aad.adal.AuthenticationResult.mErrorCode
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mErrorCodes
  name: mErrorCodes
  nameWithType: AuthenticationResult.mErrorCodes
  syntax: protected String mErrorCodes
  uid: com.microsoft.aad.adal.AuthenticationResult.mErrorCodes
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mErrorDescription
  name: mErrorDescription
  nameWithType: AuthenticationResult.mErrorDescription
  syntax: protected String mErrorDescription
  uid: com.microsoft.aad.adal.AuthenticationResult.mErrorDescription
- field:
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mExpiresOn
  name: mExpiresOn
  nameWithType: AuthenticationResult.mExpiresOn
  syntax: protected Date mExpiresOn
  uid: com.microsoft.aad.adal.AuthenticationResult.mExpiresOn
- field:
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mExtendedExpiresOn
  name: mExtendedExpiresOn
  nameWithType: AuthenticationResult.mExtendedExpiresOn
  syntax: protected Date mExtendedExpiresOn
  uid: com.microsoft.aad.adal.AuthenticationResult.mExtendedExpiresOn
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mFamilyClientId
  name: mFamilyClientId
  nameWithType: AuthenticationResult.mFamilyClientId
  syntax: protected String mFamilyClientId
  uid: com.microsoft.aad.adal.AuthenticationResult.mFamilyClientId
- field:
    type: <xref href="HashMap%3CString%2C+String%3E?alt=HashMap%3CString%2C+String%3E&text=HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mHttpResponseBody
  name: mHttpResponseBody
  nameWithType: AuthenticationResult.mHttpResponseBody
  syntax: protected HashMap<String, String> mHttpResponseBody= null
  uid: com.microsoft.aad.adal.AuthenticationResult.mHttpResponseBody
- field:
    type: <xref href="HashMap%3CString%2C+List%3CString%3E%3E?alt=HashMap%3CString%2C+List%3CString%3E%3E&text=HashMap%3CString%2C+List%3CString%3E%3E" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mHttpResponseHeaders
  name: mHttpResponseHeaders
  nameWithType: AuthenticationResult.mHttpResponseHeaders
  syntax: protected HashMap<String, List<String>> mHttpResponseHeaders= null
  uid: com.microsoft.aad.adal.AuthenticationResult.mHttpResponseHeaders
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mIdToken
  name: mIdToken
  nameWithType: AuthenticationResult.mIdToken
  syntax: protected String mIdToken
  uid: com.microsoft.aad.adal.AuthenticationResult.mIdToken
- field:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mInitialRequest
  name: mInitialRequest
  nameWithType: AuthenticationResult.mInitialRequest
  syntax: protected boolean mInitialRequest
  uid: com.microsoft.aad.adal.AuthenticationResult.mInitialRequest
- field:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mIsExtendedLifeTimeToken
  name: mIsExtendedLifeTimeToken
  nameWithType: AuthenticationResult.mIsExtendedLifeTimeToken
  syntax: protected boolean mIsExtendedLifeTimeToken= false
  uid: com.microsoft.aad.adal.AuthenticationResult.mIsExtendedLifeTimeToken
- field:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mIsMultiResourceRefreshToken
  name: mIsMultiResourceRefreshToken
  nameWithType: AuthenticationResult.mIsMultiResourceRefreshToken
  syntax: protected boolean mIsMultiResourceRefreshToken
  uid: com.microsoft.aad.adal.AuthenticationResult.mIsMultiResourceRefreshToken
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mRefreshToken
  name: mRefreshToken
  nameWithType: AuthenticationResult.mRefreshToken
  syntax: protected String mRefreshToken
  uid: com.microsoft.aad.adal.AuthenticationResult.mRefreshToken
- field:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mServiceStatusCode
  name: mServiceStatusCode
  nameWithType: AuthenticationResult.mServiceStatusCode
  syntax: protected int mServiceStatusCode= -1
  uid: com.microsoft.aad.adal.AuthenticationResult.mServiceStatusCode
- field:
    type: <xref href="com.microsoft.aad.adal.AuthenticationResult.AuthenticationStatus?alt=com.microsoft.aad.adal.AuthenticationResult.AuthenticationStatus&text=AuthenticationResult.AuthenticationStatus" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mStatus
  name: mStatus
  nameWithType: AuthenticationResult.mStatus
  syntax: protected AuthenticationStatus mStatus= AuthenticationStatus.Failed
  uid: com.microsoft.aad.adal.AuthenticationResult.mStatus
- field:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mTenantId
  name: mTenantId
  nameWithType: AuthenticationResult.mTenantId
  syntax: protected String mTenantId
  uid: com.microsoft.aad.adal.AuthenticationResult.mTenantId
- field:
    type: <xref href="com.microsoft.aad.adal.UserInfo?alt=com.microsoft.aad.adal.UserInfo&text=UserInfo" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.aad.adal.AuthenticationResult.mUserInfo
  name: mUserInfo
  nameWithType: AuthenticationResult.mUserInfo
  syntax: protected UserInfo mUserInfo
  uid: com.microsoft.aad.adal.AuthenticationResult.mUserInfo
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Serializable" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.aad.adal.AuthenticationResult.createAuthorizationHeader()
  name: createAuthorizationHeader()
  nameWithType: AuthenticationResult.createAuthorizationHeader()
  returns:
    description: <p>AuthorizationHeader </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Uses access token to create header for web requests.</p>

    <p></p>
  syntax: public String createAuthorizationHeader()
  uid: com.microsoft.aad.adal.AuthenticationResult.createAuthorizationHeader()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getAccessToken()
  name: getAccessToken()
  nameWithType: AuthenticationResult.getAccessToken()
  returns:
    description: <p>Access token </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Access token to send to the service in Authorization Header.</p>

    <p></p>
  syntax: public String getAccessToken()
  uid: com.microsoft.aad.adal.AuthenticationResult.getAccessToken()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getAccessTokenType()
  name: getAccessTokenType()
  nameWithType: AuthenticationResult.getAccessTokenType()
  returns:
    description: <p>access token type </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Token type.</p>

    <p></p>
  syntax: public String getAccessTokenType()
  uid: com.microsoft.aad.adal.AuthenticationResult.getAccessTokenType()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getAuthority()
  name: getAuthority()
  nameWithType: AuthenticationResult.getAuthority()
  returns:
    description: <p>Authority </p>
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The token returned is cached with this authority as key. We expect the subsequent requests to AcquireToken will use this authority as the authority parameter else AcquireTokenSilent will fail</p>

    <p></p>
  syntax: public final String getAuthority()
  uid: com.microsoft.aad.adal.AuthenticationResult.getAuthority()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getClientId()
  name: getClientId()
  nameWithType: AuthenticationResult.getClientId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getClientId()
  uid: com.microsoft.aad.adal.AuthenticationResult.getClientId()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getClientInfo()
  name: getClientInfo()
  nameWithType: AuthenticationResult.getClientInfo()
  returns:
    description: <p>The ClientInfo to get or null (if the broker was used to acquire tokens). </p>
    type: <xref href="ClientInfo?alt=ClientInfo&text=ClientInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ClientInfo"></xref>.</p>

    <p></p>
  syntax: public ClientInfo getClientInfo()
  uid: com.microsoft.aad.adal.AuthenticationResult.getClientInfo()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getCliTelemInfo()
  name: getCliTelemInfo()
  nameWithType: AuthenticationResult.getCliTelemInfo()
  returns:
    type: <xref href="final+CliTelemInfo?alt=final+CliTelemInfo&text=final+CliTelemInfo" data-throw-if-not-resolved="False"/>
  syntax: public final CliTelemInfo getCliTelemInfo()
  uid: com.microsoft.aad.adal.AuthenticationResult.getCliTelemInfo()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getErrorCode()
  name: getErrorCode()
  nameWithType: AuthenticationResult.getErrorCode()
  returns:
    description: <p>Error code </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets error code.</p>

    <p></p>
  syntax: public String getErrorCode()
  uid: com.microsoft.aad.adal.AuthenticationResult.getErrorCode()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getErrorDescription()
  name: getErrorDescription()
  nameWithType: AuthenticationResult.getErrorDescription()
  returns:
    description: <p>error description </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets error description.</p>

    <p></p>
  syntax: public String getErrorDescription()
  uid: com.microsoft.aad.adal.AuthenticationResult.getErrorDescription()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getErrorLogInfo()
  name: getErrorLogInfo()
  nameWithType: AuthenticationResult.getErrorLogInfo()
  returns:
    description: <p>log info </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets error log info.</p>

    <p></p>
  syntax: public String getErrorLogInfo()
  uid: com.microsoft.aad.adal.AuthenticationResult.getErrorLogInfo()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getExpiresIn()
  name: getExpiresIn()
  nameWithType: AuthenticationResult.getExpiresIn()
  returns:
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  syntax: public Long getExpiresIn()
  uid: com.microsoft.aad.adal.AuthenticationResult.getExpiresIn()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getExpiresOn()
  name: getExpiresOn()
  nameWithType: AuthenticationResult.getExpiresOn()
  returns:
    description: <p>expiresOn <xref uid="" data-throw-if-not-resolved="false" data-raw-source="Date"></xref></p>
    type: <xref href="Date?alt=Date&text=Date" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Epoch time for expiresOn.</p>

    <p></p>
  syntax: public Date getExpiresOn()
  uid: com.microsoft.aad.adal.AuthenticationResult.getExpiresOn()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getHttpResponseBody()
  name: getHttpResponseBody()
  nameWithType: AuthenticationResult.getHttpResponseBody()
  returns:
    description: <p>HttpResponseBody </p>
    type: <xref href="HashMap%3CString%2C+String%3E?alt=HashMap%3CString%2C+String%3E&text=HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get Http response message.</p>

    <p></p>
  syntax: public HashMap<String, String> getHttpResponseBody()
  uid: com.microsoft.aad.adal.AuthenticationResult.getHttpResponseBody()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getHttpResponseHeaders()
  name: getHttpResponseHeaders()
  nameWithType: AuthenticationResult.getHttpResponseHeaders()
  returns:
    description: <p>HttpResponseHeaders </p>
    type: <xref href="HashMap%3CString%2C+List%3CString%3E%3E?alt=HashMap%3CString%2C+List%3CString%3E%3E&text=HashMap%3CString%2C+List%3CString%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get Http response headers.</p>

    <p></p>
  syntax: public HashMap<String, List<String>> getHttpResponseHeaders()
  uid: com.microsoft.aad.adal.AuthenticationResult.getHttpResponseHeaders()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getIdToken()
  name: getIdToken()
  nameWithType: AuthenticationResult.getIdToken()
  returns:
    description: <p>IdToken </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get raw idtoken.</p>

    <p></p>
  syntax: public String getIdToken()
  uid: com.microsoft.aad.adal.AuthenticationResult.getIdToken()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getIsMultiResourceRefreshToken()
  name: getIsMultiResourceRefreshToken()
  nameWithType: AuthenticationResult.getIsMultiResourceRefreshToken()
  returns:
    description: <p>multi resource refresh token status </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Multi-resource refresh tokens can be used to request token for another resource.</p>

    <p></p>
  syntax: public boolean getIsMultiResourceRefreshToken()
  uid: com.microsoft.aad.adal.AuthenticationResult.getIsMultiResourceRefreshToken()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getRefreshToken()
  name: getRefreshToken()
  nameWithType: AuthenticationResult.getRefreshToken()
  returns:
    description: <p>Refresh token </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Refresh token to get new tokens.</p>

    <p></p>
  syntax: public String getRefreshToken()
  uid: com.microsoft.aad.adal.AuthenticationResult.getRefreshToken()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getResource()
  name: getResource()
  nameWithType: AuthenticationResult.getResource()
  returns:
    description: <p>The resource to get. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the resource of this AuthenticationResult.</p>

    <p></p>
  syntax: public String getResource()
  uid: com.microsoft.aad.adal.AuthenticationResult.getResource()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getResponseReceived()
  name: getResponseReceived()
  nameWithType: AuthenticationResult.getResponseReceived()
  returns:
    type: <xref href="Long?alt=Long&text=Long" data-throw-if-not-resolved="False"/>
  syntax: public Long getResponseReceived()
  uid: com.microsoft.aad.adal.AuthenticationResult.getResponseReceived()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getServiceStatusCode()
  name: getServiceStatusCode()
  nameWithType: AuthenticationResult.getServiceStatusCode()
  returns:
    description: <p>ServiceStatusCode </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get service status code.</p>

    <p></p>
  syntax: public int getServiceStatusCode()
  uid: com.microsoft.aad.adal.AuthenticationResult.getServiceStatusCode()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getStatus()
  name: getStatus()
  nameWithType: AuthenticationResult.getStatus()
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.aad.adal.AuthenticationResult.AuthenticationStatus" data-throw-if-not-resolved="false" data-raw-source="AuthenticationStatus"></xref>

      </p>
    type: <xref href="com.microsoft.aad.adal.AuthenticationResult.AuthenticationStatus?alt=com.microsoft.aad.adal.AuthenticationResult.AuthenticationStatus&text=AuthenticationResult.AuthenticationStatus" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets status.</p>

    <p></p>
  syntax: public AuthenticationStatus getStatus()
  uid: com.microsoft.aad.adal.AuthenticationResult.getStatus()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getTenantId()
  name: getTenantId()
  nameWithType: AuthenticationResult.getTenantId()
  returns:
    description: <p>TenantId </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets tenantId.</p>

    <p></p>
  syntax: public String getTenantId()
  uid: com.microsoft.aad.adal.AuthenticationResult.getTenantId()
- fullName: com.microsoft.aad.adal.AuthenticationResult.getUserInfo()
  name: getUserInfo()
  nameWithType: AuthenticationResult.getUserInfo()
  returns:
    description: >-
      <p>

        <xref uid="com.microsoft.aad.adal.UserInfo" data-throw-if-not-resolved="false" data-raw-source="UserInfo"></xref>

      </p>
    type: <xref href="com.microsoft.aad.adal.UserInfo?alt=com.microsoft.aad.adal.UserInfo&text=UserInfo" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>UserInfo returned from IdToken.</p>

    <p></p>
  syntax: public UserInfo getUserInfo()
  uid: com.microsoft.aad.adal.AuthenticationResult.getUserInfo()
- fullName: com.microsoft.aad.adal.AuthenticationResult.isExpired()
  name: isExpired()
  nameWithType: AuthenticationResult.isExpired()
  returns:
    description: <p>true if expired </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Checks expiration time.</p>

    <p></p>
  syntax: public boolean isExpired()
  uid: com.microsoft.aad.adal.AuthenticationResult.isExpired()
- fullName: com.microsoft.aad.adal.AuthenticationResult.isExtendedLifeTimeToken()
  name: isExtendedLifeTimeToken()
  nameWithType: AuthenticationResult.isExtendedLifeTimeToken()
  returns:
    description: <p>True if the returned token is valid in terms of extended lifetime </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets if the returned token is valid in terms of extended lifetime.</p>

    <p></p>
  syntax: public boolean isExtendedLifeTimeToken()
  uid: com.microsoft.aad.adal.AuthenticationResult.isExtendedLifeTimeToken()
- fullName: com.microsoft.aad.adal.AuthenticationResult.setAuthority(final String authority)
  name: setAuthority(final String authority)
  nameWithType: AuthenticationResult.setAuthority(final String authority)
  parameters:
  - name: authority
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  syntax: public final void setAuthority(final String authority)
  uid: com.microsoft.aad.adal.AuthenticationResult.setAuthority(final String)
- fullName: com.microsoft.aad.adal.AuthenticationResult.setClientId(final String clientId)
  name: setClientId(final String clientId)
  nameWithType: AuthenticationResult.setClientId(final String clientId)
  parameters:
  - name: clientId
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  syntax: public void setClientId(final String clientId)
  uid: com.microsoft.aad.adal.AuthenticationResult.setClientId(final String)
- fullName: com.microsoft.aad.adal.AuthenticationResult.setExpiresIn(final Long expiresIn)
  name: setExpiresIn(final Long expiresIn)
  nameWithType: AuthenticationResult.setExpiresIn(final Long expiresIn)
  parameters:
  - name: expiresIn
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  syntax: public void setExpiresIn(final Long expiresIn)
  uid: com.microsoft.aad.adal.AuthenticationResult.setExpiresIn(final Long)
- fullName: com.microsoft.aad.adal.AuthenticationResult.setResponseReceived(final Long responseReceived)
  name: setResponseReceived(final Long responseReceived)
  nameWithType: AuthenticationResult.setResponseReceived(final Long responseReceived)
  parameters:
  - name: responseReceived
    type: <xref href="final+Long?alt=final+Long&text=final+Long" data-throw-if-not-resolved="False"/>
  syntax: public void setResponseReceived(final Long responseReceived)
  uid: com.microsoft.aad.adal.AuthenticationResult.setResponseReceived(final Long)
nameWithType: AuthenticationResult
syntax: public class AuthenticationResult
type: class
uid: com.microsoft.aad.adal.AuthenticationResult
fullName: com.microsoft.aad.adal.AuthenticationResult
name: AuthenticationResult
package: com.microsoft.aad.adal
summary: <p>Result class to keep code, token and other info Serializable properties Mark temp properties as Transient if you dont want to keep them in serialization. </p>
metadata: {}
