### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
methods:
- fullName: com.microsoft.azure.management.network.PCFilter.localIPAddress()
  name: localIPAddress()
  nameWithType: PCFilter.localIPAddress()
  returns:
    description: '<p>local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. </p>'
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String localIPAddress()
  uid: com.microsoft.azure.management.network.PCFilter.localIPAddress()
- fullName: com.microsoft.azure.management.network.PCFilter.localPort()
  name: localPort()
  nameWithType: PCFilter.localPort()
  returns:
    description: '<p>local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. </p>'
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String localPort()
  uid: com.microsoft.azure.management.network.PCFilter.localPort()
- fullName: com.microsoft.azure.management.network.PCFilter.protocol()
  name: protocol()
  nameWithType: PCFilter.protocol()
  returns:
    description: <p>protocol to be filtered on. </p>
    type: <xref href="com.microsoft.azure.management.network.PcProtocol?alt=com.microsoft.azure.management.network.PcProtocol&text=PcProtocol" data-throw-if-not-resolved="False"/>
  syntax: public PcProtocol protocol()
  uid: com.microsoft.azure.management.network.PCFilter.protocol()
- fullName: com.microsoft.azure.management.network.PCFilter.remoteIPAddress()
  name: remoteIPAddress()
  nameWithType: PCFilter.remoteIPAddress()
  returns:
    description: '<p>remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. </p>'
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String remoteIPAddress()
  uid: com.microsoft.azure.management.network.PCFilter.remoteIPAddress()
- fullName: com.microsoft.azure.management.network.PCFilter.remotePort()
  name: remotePort()
  nameWithType: PCFilter.remotePort()
  returns:
    description: '<p>remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null. </p>'
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String remotePort()
  uid: com.microsoft.azure.management.network.PCFilter.remotePort()
nameWithType: PCFilter
syntax: public interface PCFilter extends Indexable,HasParent<PacketCapture>,HasInner<PacketCaptureFilter>
type: interface
uid: com.microsoft.azure.management.network.PCFilter
fullName: com.microsoft.azure.management.network.PCFilter
name: PCFilter
package: com.microsoft.azure.management.network
summary: <p>Client-side representation of packet capture filter. </p>
metadata: {}
