### YamlMime:JavaMember
nameWithType: JobClient.hasNextJob
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(Query query)
  name: hasNextJob(Query query)
  nameWithType: JobClient.hasNextJob(Query query)
  parameters:
  - description: <p>Query for which to look for next job response by </p>
    name: query
    type: <xref href="com.microsoft.azure.sdk.iot.service.devicetwin.Query?alt=com.microsoft.azure.sdk.iot.service.devicetwin.Query&text=Query" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>When IotHub fails to respond </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>if any of the input parameters are incorrect </p>
  returns:
    description: <p>true if next job result is available , false otherwise </p>
    type: <xref href="synchronized+boolean?alt=synchronized+boolean&text=synchronized+boolean" data-throw-if-not-resolved="False"/>
  summary: <p>returns the availability of next job result in response. Query's further if page size has been met </p>
  syntax: public synchronized boolean hasNextJob(Query query)
  uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob(Query)
uid: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob*
fullName: com.microsoft.azure.sdk.iot.service.jobs.JobClient.hasNextJob
name: hasNextJob(Query query)
package: com.microsoft.azure.sdk.iot.service.jobs
metadata: {}
