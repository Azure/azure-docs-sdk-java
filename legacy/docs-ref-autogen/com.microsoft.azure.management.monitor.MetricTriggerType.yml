### YamlMime:JavaType
fields:
- field:
    type: final <xref href="com.microsoft.azure.management.monitor.MetricTriggerType?alt=com.microsoft.azure.management.monitor.MetricTriggerType&text=MetricTriggerType" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.monitor.MetricTriggerType.CONSECUTIVE
  name: CONSECUTIVE
  nameWithType: MetricTriggerType.CONSECUTIVE
  summary: <p>Static value Consecutive for MetricTriggerType. </p>
  syntax: public static final MetricTriggerType CONSECUTIVE= fromString("Consecutive")
  uid: com.microsoft.azure.management.monitor.MetricTriggerType.CONSECUTIVE
- field:
    type: final <xref href="com.microsoft.azure.management.monitor.MetricTriggerType?alt=com.microsoft.azure.management.monitor.MetricTriggerType&text=MetricTriggerType" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.monitor.MetricTriggerType.TOTAL
  name: TOTAL
  nameWithType: MetricTriggerType.TOTAL
  summary: <p>Static value Total for MetricTriggerType. </p>
  syntax: public static final MetricTriggerType TOTAL= fromString("Total")
  uid: com.microsoft.azure.management.monitor.MetricTriggerType.TOTAL
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.rest.ExpandableStringEnum&lt;MetricTriggerType&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.MetricTriggerType.fromString(String name)
  name: fromString(String name)
  nameWithType: MetricTriggerType.fromString(String name)
  parameters:
  - description: <p>a name to look for </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the corresponding MetricTriggerType </p>
    type: <xref href="com.microsoft.azure.management.monitor.MetricTriggerType?alt=com.microsoft.azure.management.monitor.MetricTriggerType&text=MetricTriggerType" data-throw-if-not-resolved="False"/>
  summary: <p>Creates or finds a MetricTriggerType from its string representation. </p>
  syntax: public static MetricTriggerType fromString(String name)
  uid: com.microsoft.azure.management.monitor.MetricTriggerType.fromString(String)
- fullName: com.microsoft.azure.management.monitor.MetricTriggerType.values()
  name: values()
  nameWithType: MetricTriggerType.values()
  returns:
    description: <p>known MetricTriggerType values </p>
    type: Collection&lt;<xref href="com.microsoft.azure.management.monitor.MetricTriggerType?alt=com.microsoft.azure.management.monitor.MetricTriggerType&text=MetricTriggerType" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static Collection<MetricTriggerType> values()
  uid: com.microsoft.azure.management.monitor.MetricTriggerType.values()
nameWithType: MetricTriggerType
syntax: public class MetricTriggerType
type: class
uid: com.microsoft.azure.management.monitor.MetricTriggerType
fullName: com.microsoft.azure.management.monitor.MetricTriggerType
name: MetricTriggerType
package: com.microsoft.azure.management.monitor
summary: <p>Defines values for MetricTriggerType. </p>
metadata: {}
