### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.core.BaseResponse.BaseResponse()
  name: BaseResponse()
  nameWithType: BaseResponse.BaseResponse()
  summary: <p>Private Default Ctor </p>
  syntax: protected BaseResponse()
  uid: com.microsoft.azure.storage.core.BaseResponse.BaseResponse()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.core.BaseResponse.getContentMD5(final HttpURLConnection request)
  name: getContentMD5(final HttpURLConnection request)
  nameWithType: BaseResponse.getContentMD5(final HttpURLConnection request)
  parameters:
  - description: <p>The response from server. </p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The ContentMD5. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the ContentMD5</p>

    <p></p>
  syntax: public static String getContentMD5(final HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.getContentMD5(final HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.getDate(final HttpURLConnection request)
  name: getDate(final HttpURLConnection request)
  nameWithType: BaseResponse.getDate(final HttpURLConnection request)
  parameters:
  - description: <p>The response from server. </p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The Date. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Date</p>

    <p></p>
  syntax: public static String getDate(final HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.getDate(final HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.getEncryptionKeyHash(HttpURLConnection request)
  name: getEncryptionKeyHash(HttpURLConnection request)
  nameWithType: BaseResponse.getEncryptionKeyHash(HttpURLConnection request)
  parameters:
  - name: request
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the hash of the client-provided encryption key used for encryption. </p>
  syntax: public static String getEncryptionKeyHash(HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.getEncryptionKeyHash(HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.getErrorCode(final HttpURLConnection request)
  name: getErrorCode(final HttpURLConnection request)
  nameWithType: BaseResponse.getErrorCode(final HttpURLConnection request)
  parameters:
  - description: <p>The response from server. </p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The ErrorCode. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the ErrorCode</p>

    <p></p>
  syntax: public static String getErrorCode(final HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.getErrorCode(final HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.getEtag(final HttpURLConnection request)
  name: getEtag(final HttpURLConnection request)
  nameWithType: BaseResponse.getEtag(final HttpURLConnection request)
  parameters:
  - description: <p>The response from server. </p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The Etag. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Etag</p>

    <p></p>
  syntax: public static String getEtag(final HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.getEtag(final HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.getMetadata(final HttpURLConnection request)
  name: getMetadata(final HttpURLConnection request)
  nameWithType: BaseResponse.getMetadata(final HttpURLConnection request)
  parameters:
  - description: <p>The response from server.</p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the metadata from the request </p>
    type: <xref href="HashMap%3CString%2C+String%3E?alt=HashMap%3CString%2C+String%3E&text=HashMap%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the metadata from the request.</p>

    <p></p>
  syntax: public static HashMap<String, String> getMetadata(final HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.getMetadata(final HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.getRequestId(final HttpURLConnection request)
  name: getRequestId(final HttpURLConnection request)
  nameWithType: BaseResponse.getRequestId(final HttpURLConnection request)
  parameters:
  - description: <p>The response from server. </p>
    name: request
    type: <xref href="final+HttpURLConnection?alt=final+HttpURLConnection&text=final+HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The request ID. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the request id.</p>

    <p></p>
  syntax: public static String getRequestId(final HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.getRequestId(final HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.isServerEncrypted(HttpURLConnection request)
  name: isServerEncrypted(HttpURLConnection request)
  nameWithType: BaseResponse.isServerEncrypted(HttpURLConnection request)
  parameters:
  - description: <p>The response from the server. </p>
    name: request
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A boolean indicating if the request was encrypted by the server. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets if the request was encrypted by the server. </p>
  syntax: public static boolean isServerEncrypted(HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.isServerEncrypted(HttpURLConnection)
- fullName: com.microsoft.azure.storage.core.BaseResponse.isServerRequestEncrypted(HttpURLConnection request)
  name: isServerRequestEncrypted(HttpURLConnection request)
  nameWithType: BaseResponse.isServerRequestEncrypted(HttpURLConnection request)
  parameters:
  - description: <p>The response from the server. </p>
    name: request
    type: <xref href="HttpURLConnection?alt=HttpURLConnection&text=HttpURLConnection" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A boolean indicating if the request was encrypted by the server. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Gets if the request was encrypted by the server. </p>
  syntax: public static boolean isServerRequestEncrypted(HttpURLConnection request)
  uid: com.microsoft.azure.storage.core.BaseResponse.isServerRequestEncrypted(HttpURLConnection)
nameWithType: BaseResponse
syntax: public class BaseResponse
type: class
uid: com.microsoft.azure.storage.core.BaseResponse
fullName: com.microsoft.azure.storage.core.BaseResponse
name: BaseResponse
package: com.microsoft.azure.storage.core
summary: <p>RESERVED FOR INTERNAL USE. The base response class for the protocol layer </p>
metadata: {}
