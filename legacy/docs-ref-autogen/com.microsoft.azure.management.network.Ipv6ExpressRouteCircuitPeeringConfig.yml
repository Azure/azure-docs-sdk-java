### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.microsoftPeeringConfig()
  name: microsoftPeeringConfig()
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.microsoftPeeringConfig()
  returns:
    description: <p>the microsoftPeeringConfig value </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the microsoftPeeringConfig value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringConfig microsoftPeeringConfig()
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.microsoftPeeringConfig()
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.primaryPeerAddressPrefix()
  name: primaryPeerAddressPrefix()
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.primaryPeerAddressPrefix()
  returns:
    description: <p>the primaryPeerAddressPrefix value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the primaryPeerAddressPrefix value.</p>

    <p></p>
  syntax: public String primaryPeerAddressPrefix()
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.primaryPeerAddressPrefix()
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.routeFilter()
  name: routeFilter()
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.routeFilter()
  returns:
    description: <p>the routeFilter value </p>
    type: <xref href="RouteFilterInner?alt=RouteFilterInner&text=RouteFilterInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the routeFilter value.</p>

    <p></p>
  syntax: public RouteFilterInner routeFilter()
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.routeFilter()
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.secondaryPeerAddressPrefix()
  name: secondaryPeerAddressPrefix()
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.secondaryPeerAddressPrefix()
  returns:
    description: <p>the secondaryPeerAddressPrefix value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the secondaryPeerAddressPrefix value.</p>

    <p></p>
  syntax: public String secondaryPeerAddressPrefix()
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.secondaryPeerAddressPrefix()
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.state()
  name: state()
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.state()
  returns:
    description: <p>the state value </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringState?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringState&text=ExpressRouteCircuitPeeringState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the state value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitPeeringState state()
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.state()
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  name: withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  parameters:
  - description: <p>the microsoftPeeringConfig value to set </p>
    name: microsoftPeeringConfig
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringConfig&text=ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Ipv6ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig&text=Ipv6ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the microsoftPeeringConfig value.</p>

    <p></p>
  syntax: public Ipv6ExpressRouteCircuitPeeringConfig withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig microsoftPeeringConfig)
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withMicrosoftPeeringConfig(ExpressRouteCircuitPeeringConfig)
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withPrimaryPeerAddressPrefix(String primaryPeerAddressPrefix)
  name: withPrimaryPeerAddressPrefix(String primaryPeerAddressPrefix)
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.withPrimaryPeerAddressPrefix(String primaryPeerAddressPrefix)
  parameters:
  - description: <p>the primaryPeerAddressPrefix value to set </p>
    name: primaryPeerAddressPrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Ipv6ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig&text=Ipv6ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the primaryPeerAddressPrefix value.</p>

    <p></p>
  syntax: public Ipv6ExpressRouteCircuitPeeringConfig withPrimaryPeerAddressPrefix(String primaryPeerAddressPrefix)
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withPrimaryPeerAddressPrefix(String)
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withRouteFilter(RouteFilterInner routeFilter)
  name: withRouteFilter(RouteFilterInner routeFilter)
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.withRouteFilter(RouteFilterInner routeFilter)
  parameters:
  - description: <p>the routeFilter value to set </p>
    name: routeFilter
    type: <xref href="RouteFilterInner?alt=RouteFilterInner&text=RouteFilterInner" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Ipv6ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig&text=Ipv6ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the routeFilter value.</p>

    <p></p>
  syntax: public Ipv6ExpressRouteCircuitPeeringConfig withRouteFilter(RouteFilterInner routeFilter)
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withRouteFilter(RouteFilterInner)
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withSecondaryPeerAddressPrefix(String secondaryPeerAddressPrefix)
  name: withSecondaryPeerAddressPrefix(String secondaryPeerAddressPrefix)
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.withSecondaryPeerAddressPrefix(String secondaryPeerAddressPrefix)
  parameters:
  - description: <p>the secondaryPeerAddressPrefix value to set </p>
    name: secondaryPeerAddressPrefix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Ipv6ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig&text=Ipv6ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the secondaryPeerAddressPrefix value.</p>

    <p></p>
  syntax: public Ipv6ExpressRouteCircuitPeeringConfig withSecondaryPeerAddressPrefix(String secondaryPeerAddressPrefix)
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withSecondaryPeerAddressPrefix(String)
- fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withState(ExpressRouteCircuitPeeringState state)
  name: withState(ExpressRouteCircuitPeeringState state)
  nameWithType: Ipv6ExpressRouteCircuitPeeringConfig.withState(ExpressRouteCircuitPeeringState state)
  parameters:
  - description: <p>the state value to set </p>
    name: state
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitPeeringState?alt=com.microsoft.azure.management.network.ExpressRouteCircuitPeeringState&text=ExpressRouteCircuitPeeringState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Ipv6ExpressRouteCircuitPeeringConfig object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig?alt=com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig&text=Ipv6ExpressRouteCircuitPeeringConfig" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the state value.</p>

    <p></p>
  syntax: public Ipv6ExpressRouteCircuitPeeringConfig withState(ExpressRouteCircuitPeeringState state)
  uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig.withState(ExpressRouteCircuitPeeringState)
nameWithType: Ipv6ExpressRouteCircuitPeeringConfig
syntax: public class Ipv6ExpressRouteCircuitPeeringConfig
type: class
uid: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig
fullName: com.microsoft.azure.management.network.Ipv6ExpressRouteCircuitPeeringConfig
name: Ipv6ExpressRouteCircuitPeeringConfig
package: com.microsoft.azure.management.network
summary: <p>Contains IPv6 peering config. </p>
metadata: {}
