### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.bandwidthInMbps()
  name: bandwidthInMbps()
  nameWithType: ExpressRouteCircuitServiceProviderProperties.bandwidthInMbps()
  returns:
    description: <p>the bandwidthInMbps value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the bandwidthInMbps value.</p>

    <p></p>
  syntax: public Integer bandwidthInMbps()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.bandwidthInMbps()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.peeringLocation()
  name: peeringLocation()
  nameWithType: ExpressRouteCircuitServiceProviderProperties.peeringLocation()
  returns:
    description: <p>the peeringLocation value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the peeringLocation value.</p>

    <p></p>
  syntax: public String peeringLocation()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.peeringLocation()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.serviceProviderName()
  name: serviceProviderName()
  nameWithType: ExpressRouteCircuitServiceProviderProperties.serviceProviderName()
  returns:
    description: <p>the serviceProviderName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the serviceProviderName value.</p>

    <p></p>
  syntax: public String serviceProviderName()
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.serviceProviderName()
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.withBandwidthInMbps(Integer bandwidthInMbps)
  name: withBandwidthInMbps(Integer bandwidthInMbps)
  nameWithType: ExpressRouteCircuitServiceProviderProperties.withBandwidthInMbps(Integer bandwidthInMbps)
  parameters:
  - description: <p>the bandwidthInMbps value to set </p>
    name: bandwidthInMbps
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitServiceProviderProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties?alt=com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties&text=ExpressRouteCircuitServiceProviderProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the bandwidthInMbps value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitServiceProviderProperties withBandwidthInMbps(Integer bandwidthInMbps)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.withBandwidthInMbps(Integer)
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.withPeeringLocation(String peeringLocation)
  name: withPeeringLocation(String peeringLocation)
  nameWithType: ExpressRouteCircuitServiceProviderProperties.withPeeringLocation(String peeringLocation)
  parameters:
  - description: <p>the peeringLocation value to set </p>
    name: peeringLocation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitServiceProviderProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties?alt=com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties&text=ExpressRouteCircuitServiceProviderProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the peeringLocation value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitServiceProviderProperties withPeeringLocation(String peeringLocation)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.withPeeringLocation(String)
- fullName: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.withServiceProviderName(String serviceProviderName)
  name: withServiceProviderName(String serviceProviderName)
  nameWithType: ExpressRouteCircuitServiceProviderProperties.withServiceProviderName(String serviceProviderName)
  parameters:
  - description: <p>the serviceProviderName value to set </p>
    name: serviceProviderName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ExpressRouteCircuitServiceProviderProperties object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties?alt=com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties&text=ExpressRouteCircuitServiceProviderProperties" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the serviceProviderName value.</p>

    <p></p>
  syntax: public ExpressRouteCircuitServiceProviderProperties withServiceProviderName(String serviceProviderName)
  uid: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties.withServiceProviderName(String)
nameWithType: ExpressRouteCircuitServiceProviderProperties
syntax: public class ExpressRouteCircuitServiceProviderProperties
type: class
uid: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties
fullName: com.microsoft.azure.management.network.ExpressRouteCircuitServiceProviderProperties
name: ExpressRouteCircuitServiceProviderProperties
package: com.microsoft.azure.management.network
summary: <p>Contains ServiceProviderProperties in an ExpressRouteCircuit. </p>
metadata: {}
