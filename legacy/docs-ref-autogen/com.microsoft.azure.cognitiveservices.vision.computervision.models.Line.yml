### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.appearance()
  name: appearance()
  nameWithType: Line.appearance()
  returns:
    description: <p>the appearance value </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Appearance?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Appearance&text=Appearance" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the appearance value.</p>

    <p></p>
  syntax: public Appearance appearance()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.appearance()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.boundingBox()
  name: boundingBox()
  nameWithType: Line.boundingBox()
  returns:
    description: <p>the boundingBox value </p>
    type: <xref href="List%3CDouble%3E?alt=List%3CDouble%3E&text=List%3CDouble%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the boundingBox value.</p>

    <p></p>
  syntax: public List<Double> boundingBox()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.boundingBox()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.language()
  name: language()
  nameWithType: Line.language()
  returns:
    description: <p>the language value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the language value.</p>

    <p></p>
  syntax: public String language()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.language()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.text()
  name: text()
  nameWithType: Line.text()
  returns:
    description: <p>the text value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the text value.</p>

    <p></p>
  syntax: public String text()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.text()
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withAppearance(Appearance appearance)
  name: withAppearance(Appearance appearance)
  nameWithType: Line.withAppearance(Appearance appearance)
  parameters:
  - description: <p>the appearance value to set </p>
    name: appearance
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Appearance?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Appearance&text=Appearance" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Line object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the appearance value.</p>

    <p></p>
  syntax: public Line withAppearance(Appearance appearance)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withAppearance(Appearance)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withBoundingBox(List<Double> boundingBox)
  name: withBoundingBox(List<Double> boundingBox)
  nameWithType: Line.withBoundingBox(List<Double> boundingBox)
  parameters:
  - description: <p>the boundingBox value to set </p>
    name: boundingBox
    type: <xref href="List%3CDouble%3E?alt=List%3CDouble%3E&text=List%3CDouble%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Line object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the boundingBox value.</p>

    <p></p>
  syntax: public Line withBoundingBox(List<Double> boundingBox)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withBoundingBox(List<Double>)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withLanguage(String language)
  name: withLanguage(String language)
  nameWithType: Line.withLanguage(String language)
  parameters:
  - description: <p>the language value to set </p>
    name: language
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Line object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the language value.</p>

    <p></p>
  syntax: public Line withLanguage(String language)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withLanguage(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withText(String text)
  name: withText(String text)
  nameWithType: Line.withText(String text)
  parameters:
  - description: <p>the text value to set </p>
    name: text
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Line object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the text value.</p>

    <p></p>
  syntax: public Line withText(String text)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withText(String)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withWords(List<Word> words)
  name: withWords(List<Word> words)
  nameWithType: Line.withWords(List<Word> words)
  parameters:
  - description: <p>the words value to set </p>
    name: words
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Word?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Word&text=Word" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Line object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Line?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Line&text=Line" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the words value.</p>

    <p></p>
  syntax: public Line withWords(List<Word> words)
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.withWords(List<Word>)
- fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.words()
  name: words()
  nameWithType: Line.words()
  returns:
    description: <p>the words value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.computervision.models.Word?alt=com.microsoft.azure.cognitiveservices.vision.computervision.models.Word&text=Word" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the words value.</p>

    <p></p>
  syntax: public List<Word> words()
  uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line.words()
nameWithType: Line
syntax: public class Line
type: class
uid: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line
fullName: com.microsoft.azure.cognitiveservices.vision.computervision.models.Line
name: Line
package: com.microsoft.azure.cognitiveservices.vision.computervision.models
summary: <p>An object representing a recognized text line. </p>
metadata: {}
