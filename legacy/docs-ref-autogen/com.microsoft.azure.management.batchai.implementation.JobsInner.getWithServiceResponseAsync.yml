### YamlMime:JavaMember
nameWithType: JobsInner.getWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  name: getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  nameWithType: JobsInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  parameters:
  - description: <p>Name of the resource group to which the resource belongs. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the workspace. Workspace names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: workspaceName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the experiment. Experiment names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: experimentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. </p>
    name: jobName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.batchai.implementation.JobInner?alt=com.microsoft.azure.management.batchai.implementation.JobInner&text=JobInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets information about a Job.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<JobInner>> getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
  uid: com.microsoft.azure.management.batchai.implementation.JobsInner.getWithServiceResponseAsync(String,String,String,String)
uid: com.microsoft.azure.management.batchai.implementation.JobsInner.getWithServiceResponseAsync*
fullName: com.microsoft.azure.management.batchai.implementation.JobsInner.getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
name: getWithServiceResponseAsync(String resourceGroupName, String workspaceName, String experimentName, String jobName)
package: com.microsoft.azure.management.batchai.implementation
metadata: {}
