### YamlMime:JavaMember
nameWithType: Shard.openConnectionAsync
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String connectionString)
  name: openConnectionAsync(String connectionString)
  nameWithType: Shard.openConnectionAsync(String connectionString)
  parameters:
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. All non-usage errors will be propagated via the returned Task. </p>
    type: <xref href="Callable%3CConnection%3E?alt=Callable<Connection>&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously opens a regular SqlConnection to the specified shard, with <xref uid="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions.Validate" data-throw-if-not-resolved="false">ConnectionOptions.Validate</xref>.</p>

    <p></p>
  syntax: public Callable<Connection> openConnectionAsync(String connectionString)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String)
- fullName: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String connectionString, ConnectionOptions options)
  name: openConnectionAsync(String connectionString, ConnectionOptions options)
  nameWithType: Shard.openConnectionAsync(String connectionString, ConnectionOptions options)
  parameters:
  - description: <p>Connection string with credential information such as SQL Server credentials or Integrated Security settings. The hostname of the server and the database name for the shard are obtained from the lookup operation for key. </p>
    name: connectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Options for validation operations to perform on opened connection. </p>
    name: options
    type: <xref href="com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions?alt=com.microsoft.azure.elasticdb.shard.mapper.ConnectionOptions&text=ConnectionOptions" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A Task encapsulating an opened SqlConnection Note that the SqlConnection object returned by this call is not protected against transient faults. Callers should follow best practices to protect the connection against transient faults in their application code, e.g., by using the transient fault handling functionality in the Enterprise Library from Microsoft Patterns and Practices team. All non-usage errors will be propagated via the returned Task. </p>
    type: <xref href="Callable%3CConnection%3E?alt=Callable<Connection>&text=Callable%3CConnection%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Asynchronously a regular SqlConnection to the specified shard.</p>

    <p></p>
  syntax: public Callable<Connection> openConnectionAsync(String connectionString, ConnectionOptions options)
  uid: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String,ConnectionOptions)
uid: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync*
fullName: com.microsoft.azure.elasticdb.shard.base.Shard.openConnectionAsync(String connectionString)
name: openConnectionAsync(String connectionString)
package: com.microsoft.azure.elasticdb.shard.base
metadata: {}
