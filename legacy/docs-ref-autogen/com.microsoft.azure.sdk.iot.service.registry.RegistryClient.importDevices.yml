### YamlMime:JavaMember
nameWithType: RegistryClient.importDevices
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryClient.importDevices(RegistryJob importDevicesParameters)
  name: importDevices(RegistryJob importDevicesParameters)
  nameWithType: RegistryClient.importDevices(RegistryJob importDevicesParameters)
  parameters:
  - description: <p>A RegistryJob object containing input parameters for import Devices job This API also supports identity based storage authentication, identity authentication support is currently available in limited regions. If a user wishes to try it out, they will need to set an Environment Variable of "EnabledStorageIdentity" and set it to "1" otherwise default key based authentication is used for storage <a href="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support">More details here </a></p>
    name: importDevicesParameters
    type: <xref href="com.microsoft.azure.sdk.iot.service.registry.RegistryJob?alt=com.microsoft.azure.sdk.iot.service.registry.RegistryJob&text=RegistryJob" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>A RegistryJob object for the newly created bulk import job</p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.registry.RegistryJob?alt=com.microsoft.azure.sdk.iot.service.registry.RegistryJob&text=RegistryJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a bulk import job.</p>

    <p></p>
  syntax: public RegistryJob importDevices(RegistryJob importDevicesParameters)
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryClient.importDevices(RegistryJob)
- fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryClient.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  name: importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  nameWithType: RegistryClient.importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  parameters:
  - description: <p>URI containing SAS token to a blob container that contains registry data to sync </p>
    name: importBlobContainerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>URI containing SAS token to a blob container where the result of the bulk import operation will be placed</p>
    name: outputBlobContainerUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the IO operation failed </p>
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>This exception is thrown if the response verification failed </p>
  returns:
    description: <p>A RegistryJob object for the newly created bulk import job</p>
    type: <xref href="com.microsoft.azure.sdk.iot.service.registry.RegistryJob?alt=com.microsoft.azure.sdk.iot.service.registry.RegistryJob&text=RegistryJob" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a bulk import job.</p>

    <p></p>
  syntax: public RegistryJob importDevices(String importBlobContainerUri, String outputBlobContainerUri)
  uid: com.microsoft.azure.sdk.iot.service.registry.RegistryClient.importDevices(String,String)
uid: com.microsoft.azure.sdk.iot.service.registry.RegistryClient.importDevices*
fullName: com.microsoft.azure.sdk.iot.service.registry.RegistryClient.importDevices
name: importDevices(RegistryJob importDevicesParameters)
package: com.microsoft.azure.sdk.iot.service.registry
metadata: {}
