### YamlMime:JavaEnum
fields:
- fullName: system.fabric.PartitionAccessStatus.Granted
  name: Granted
  nameWithType: PartitionAccessStatus.Granted
  summary: <p>Indicates that the read or write operation access is granted and the operation is allowed. </p>
  uid: system.fabric.PartitionAccessStatus.Granted
- fullName: system.fabric.PartitionAccessStatus.Invalid
  name: Invalid
  nameWithType: PartitionAccessStatus.Invalid
  summary: <p>Indicates that the read or write operation access status is not valid. This value is not returned to the caller. </p>
  uid: system.fabric.PartitionAccessStatus.Invalid
- fullName: system.fabric.PartitionAccessStatus.NotPrimary
  name: NotPrimary
  nameWithType: PartitionAccessStatus.NotPrimary
  summary: <p>Indicates that this client request was received by a replica that is not a Primary replica. The read or write operation cannot be performed at this replica. The client should attempt to use the naming service to identify the correct primary replica. </p>
  uid: system.fabric.PartitionAccessStatus.NotPrimary
- fullName: system.fabric.PartitionAccessStatus.NoWriteQuorum
  name: NoWriteQuorum
  nameWithType: PartitionAccessStatus.NoWriteQuorum
  summary: <p>Indicates that no write quorum is available and, therefore, no write operation can be accepted. The client should retry the operation at this replica. </p>
  uid: system.fabric.PartitionAccessStatus.NoWriteQuorum
- fullName: system.fabric.PartitionAccessStatus.ReconfigurationPending
  name: ReconfigurationPending
  nameWithType: PartitionAccessStatus.ReconfigurationPending
  summary: <p>Indicates that the client should try again later, because a reconfiguration is in progress. After the reconfiguration is completed, a new status is returned that gives further instructions. The client should retry the operation at this replica </p>
  uid: system.fabric.PartitionAccessStatus.ReconfigurationPending
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.lang.Enum&lt;PartitionAccessStatus&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.PartitionAccessStatus.getValue()
  name: getValue()
  nameWithType: PartitionAccessStatus.getValue()
  returns:
    description: <p>int value representing <xref uid="" data-throw-if-not-resolved="false">system.fabric.PartitionAccessStatus</xref></p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>Gets the <xref uid="" data-throw-if-not-resolved="false">system.fabric.PartitionAccessStatus</xref> value. </p>
  syntax: public int getValue()
  uid: system.fabric.PartitionAccessStatus.getValue()
nameWithType: PartitionAccessStatus
syntax: public enum PartitionAccessStatus
uid: system.fabric.PartitionAccessStatus
name: PartitionAccessStatus
package: system.fabric
summary: >-
  <p>Enumerates the access status of the partition. </p>

  <p>

    <b>Remarks:</b>

    <xref uid="" data-throw-if-not-resolved="false">system.fabric.PartitionAccessStatus</xref> is used to check that a read or write operation is allowed. When service replicas handle a client request, they should verify that the system is in a state that allows processing. By checking the <xref uid="system.fabric.StatefulServicePartition.getReadStatus()" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition#getReadStatus()</xref> or <xref uid="system.fabric.StatefulServicePartition.getwriteStatus()" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition#getwriteStatus()</xref> as appropriate, the replica can be notified of conditions that prevent correct operation. Note that write operations might still see an exception from the replicator for one of these conditions, because the condition might change between the <xref uid="system.fabric.StatefulServicePartition.getwriteStatus()" data-throw-if-not-resolved="false">system.fabric.StatefulServicePartition#getwriteStatus()</xref> check and the call to <xref uid="system.fabric.StateReplicator.replicateAsync(OperationData,SequenceNumber,CancellationToken)" data-throw-if-not-resolved="false">system.fabric.StateReplicator#replicateAsync(system.fabric.OperationData,system.fabric.SequenceNumber, system.fabric.CancellationToken)</xref>. </p>
metadata: {}
