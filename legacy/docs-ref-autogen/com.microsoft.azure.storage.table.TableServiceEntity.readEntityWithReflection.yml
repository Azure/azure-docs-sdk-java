### YamlMime:JavaMember
nameWithType: TableServiceEntity.readEntityWithReflection
type: method
members:
- fullName: com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  name: readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  nameWithType: TableServiceEntity.readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  parameters:
  - description: <p>An <code>Object</code> reference to an instance of a class implementing <xref uid="com.microsoft.azure.storage.table.TableEntity" data-throw-if-not-resolved="false" data-raw-source="TableEntity"></xref> to deserialize the table entity data into. </p>
    name: instance
    type: <xref href="final+Object?alt=final+Object&text=final+Object" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.util.HashMap</code> object which maps <code>String</code> property names to <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> objects containing typed data values to deserialize into the instance parameter object. </p>
    name: properties
    type: final HashMap&lt;String, <xref href="com.microsoft.azure.storage.table.EntityProperty?alt=com.microsoft.azure.storage.table.EntityProperty&text=EntityProperty" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation.</p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>if the table entity response received is invalid or improperly formatted. </p>
  - type: <xref href="IllegalAccessException?alt=IllegalAccessException&text=IllegalAccessException" data-throw-if-not-resolved="False"/>
    description: <p>if the table entity threw an exception during deserialization. </p>
  - type: <xref href="InvocationTargetException?alt=InvocationTargetException&text=InvocationTargetException" data-throw-if-not-resolved="False"/>
    description: <p>if a method invoked on the instance parameter threw an exception during deserialization. </p>
  summary: >-
    <p>Deserializes the table entity property map into the specified object instance using reflection. </p>

    <p>This static method takes an object instance that represents a table entity type and uses reflection on its class type to find methods to deserialize the data from the property map into the instance. </p>

    <p>Each property name and data type in the properties map is compared with the methods in the class type for a pair of getter and setter methods to use for serialization and deserialization. The class is scanned for methods with names that match the property name with "get" and "set" prepended, or with the <xref uid="com.microsoft.azure.storage.table.StoreAs" data-throw-if-not-resolved="false" data-raw-source="StoreAs"></xref> annotation set with the property name. The methods must have return types or parameter data types that match the data type of the corresponding <xref uid="com.microsoft.azure.storage.table.EntityProperty" data-throw-if-not-resolved="false" data-raw-source="EntityProperty"></xref> value. If such a pair is found, the data is copied into the instance object by invoking the setter method on the instance. Properties that do not match a method pair by name and data type are not copied.</p>

    <p></p>
  syntax: public static void readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
  uid: com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection(final Object,final HashMap<String, EntityProperty>,final OperationContext)
uid: com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection*
fullName: com.microsoft.azure.storage.table.TableServiceEntity.readEntityWithReflection
name: readEntityWithReflection(final Object instance, final HashMap<String, EntityProperty> properties, final OperationContext opContext)
package: com.microsoft.azure.storage.table
metadata: {}
