### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.batch.implementation.BatchManager.BatchManager(RestClient restClient, String subscriptionId)
  name: BatchManager(RestClient restClient, String subscriptionId)
  nameWithType: BatchManager.BatchManager(RestClient restClient, String subscriptionId)
  parameters:
  - name: restClient
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  - name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: protected BatchManager(RestClient restClient, String subscriptionId)
  uid: com.microsoft.azure.management.batch.implementation.BatchManager.BatchManager(RestClient,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.implementation.Manager&lt;BatchManager, BatchManagementClientImpl&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.implementation.BatchManager.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  name: authenticate(AzureTokenCredentials credentials, String subscriptionId)
  nameWithType: BatchManager.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  parameters:
  - description: <p>the credentials to use </p>
    name: credentials
    type: <xref href="AzureTokenCredentials?alt=AzureTokenCredentials&text=AzureTokenCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the BatchManager </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManager?alt=com.microsoft.azure.management.batch.implementation.BatchManager&text=BatchManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of a BatchManager that exposes Batch resource management API entry points.</p>

    <p></p>
  syntax: public static BatchManager authenticate(AzureTokenCredentials credentials, String subscriptionId)
  uid: com.microsoft.azure.management.batch.implementation.BatchManager.authenticate(AzureTokenCredentials,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchManager.authenticate(RestClient restClient, String subscriptionId)
  name: authenticate(RestClient restClient, String subscriptionId)
  nameWithType: BatchManager.authenticate(RestClient restClient, String subscriptionId)
  parameters:
  - description: <p>the RestClient to be used for API calls. </p>
    name: restClient
    type: <xref href="RestClient?alt=RestClient&text=RestClient" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the BatchManager </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManager?alt=com.microsoft.azure.management.batch.implementation.BatchManager&text=BatchManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of a BatchManager that exposes Batch resource management API entry points.</p>

    <p></p>
  syntax: public static BatchManager authenticate(RestClient restClient, String subscriptionId)
  uid: com.microsoft.azure.management.batch.implementation.BatchManager.authenticate(RestClient,String)
- fullName: com.microsoft.azure.management.batch.implementation.BatchManager.batchAccounts()
  name: batchAccounts()
  nameWithType: BatchManager.batchAccounts()
  returns:
    description: <p>the batch account management API entry point </p>
    type: <xref href="com.microsoft.azure.management.batch.BatchAccounts?alt=com.microsoft.azure.management.batch.BatchAccounts&text=BatchAccounts" data-throw-if-not-resolved="False"/>
  syntax: public BatchAccounts batchAccounts()
  uid: com.microsoft.azure.management.batch.implementation.BatchManager.batchAccounts()
- fullName: com.microsoft.azure.management.batch.implementation.BatchManager.configure()
  name: configure()
  nameWithType: BatchManager.configure()
  returns:
    description: <p>Configurable </p>
    type: <xref href="com.microsoft.azure.management.batch.implementation.BatchManager.Configurable?alt=com.microsoft.azure.management.batch.implementation.BatchManager.Configurable&text=BatchManager.Configurable" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get a Configurable instance that can be used to create a BatchManager with optional configuration.</p>

    <p></p>
  syntax: public static Configurable configure()
  uid: com.microsoft.azure.management.batch.implementation.BatchManager.configure()
nameWithType: BatchManager
syntax: public class BatchManager
type: class
uid: com.microsoft.azure.management.batch.implementation.BatchManager
fullName: com.microsoft.azure.management.batch.implementation.BatchManager
name: BatchManager
package: com.microsoft.azure.management.batch.implementation
summary: <p>Entry point to Azure Batch service management. </p>
metadata: {}
