### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  id: Platform
  parent: com.microsoft.azure.management.containerregistry
  children:
  - com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux()
  - com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture)
  - com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture,Variant)
  - com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties)
  - com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows()
  - com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture)
  - com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture,Variant)
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: RegistryTask.DefinitionStages.Platform
  nameWithType: RegistryTask.DefinitionStages.Platform
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  type: Interface
  source:
    remote: &o0
      path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
      branch: master
      repo: https://github.com/Azure/azure-libraries-for-java
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 158
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The stage of the container registry task definition allowing to specify the platform. </p>"
  syntax:
    content: public interface Platform
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux()
  id: withLinux()
  parent: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: withLinux()
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux()
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux()
  overload: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 164
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies a Linux OS system for the platform.</p>\r\n<p></p>"
  syntax:
    content: public TaskStepType withLinux()
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
      description: <p>the next stage of the container registry task definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture)
  id: withLinux(Architecture)
  parent: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: withLinux(Architecture architecture)
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture)
  overload: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 179
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies a Linux OS system and architecture for the platform.</p>\r\n<p></p>"
  syntax:
    content: public TaskStepType withLinux(Architecture architecture)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the CPU architecture. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
      description: <p>the next stage of the container registry task definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture,Variant)
  id: withLinux(Architecture,Variant)
  parent: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: withLinux(Architecture architecture, Variant variant)
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux(Architecture architecture, Variant variant)
  overload: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 196
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies a Linux OS system, architecture, and CPU variant.</p>\r\n<p></p>"
  syntax:
    content: public TaskStepType withLinux(Architecture architecture, Variant variant)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the CPU architecture. </p>
    - id: variant
      type: com.microsoft.azure.management.containerregistry.Variant
      description: <p>the CPU variant. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
      description: <p>the next stage of the container registry task definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties)
  id: withPlatform(PlatformProperties)
  parent: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: withPlatform(PlatformProperties platformProperties)
  nameWithType: RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform(PlatformProperties platformProperties)
  overload: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 213
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies a platform.</p>\r\n<p></p>"
  syntax:
    content: public TaskStepType withPlatform(PlatformProperties platformProperties)
    parameters:
    - id: platformProperties
      type: com.microsoft.azure.management.containerregistry.PlatformProperties
      description: <p>the properties of the platform. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
      description: <p>the next stage of the container registry task definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows()
  id: withWindows()
  parent: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: withWindows()
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows()
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows()
  overload: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 171
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies a Windows OS system for the platform.</p>\r\n<p></p>"
  syntax:
    content: public TaskStepType withWindows()
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
      description: <p>the next stage of the container registry task definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture)
  id: withWindows(Architecture)
  parent: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: withWindows(Architecture architecture)
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture)
  overload: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 187
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies a Windows OS system and architecture for the platform.</p>\r\n<p></p>"
  syntax:
    content: public TaskStepType withWindows(Architecture architecture)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the CPU architecture </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
      description: <p>the next stage of the container registry task definition. </p>
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture,Variant)
  id: withWindows(Architecture,Variant)
  parent: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.yml
  langs:
  - java
  name: withWindows(Architecture architecture, Variant variant)
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows(Architecture architecture, Variant variant)
  overload: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows*
  type: Method
  source:
    remote: *o0
    path: azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/RegistryTask.java
    startLine: 205
  package: com.microsoft.azure.management.containerregistry
  summary: "<p>The function that specifies a Windows OS system, architecture, and CPU variant.</p>\r\n<p></p>"
  syntax:
    content: public TaskStepType withWindows(Architecture architecture, Variant variant)
    parameters:
    - id: architecture
      type: com.microsoft.azure.management.containerregistry.Architecture
      description: <p>the CPU architecture. </p>
    - id: variant
      type: com.microsoft.azure.management.containerregistry.Variant
      description: <p>the CPU variant. </p>
    return:
      type: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
      description: <p>the next stage of the container registry task definition. </p>
references:
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux*
  name: withLinux
  nameWithType: RegistryTask.DefinitionStages.Platform.withLinux
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withLinux
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows*
  name: withWindows
  nameWithType: RegistryTask.DefinitionStages.Platform.withWindows
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withWindows
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform*
  name: withPlatform
  nameWithType: RegistryTask.DefinitionStages.Platform.withPlatform
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.Platform.withPlatform
  package: com.microsoft.azure.management.containerregistry
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.Definition
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.RegistryTask.Definition.yml
  name: RegistryTask.Definition
  nameWithType: RegistryTask.Definition
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.Definition
  type: Interface
  summary: "<p>Container interface for all the definitions related to a registry task. </p>"
  syntax:
    content: public interface Definition extends RegistryTask.DefinitionStages.Blank,RegistryTask.DefinitionStages.Location,RegistryTask.DefinitionStages.Platform,RegistryTask.DefinitionStages.TaskStepType,RegistryTask.DefinitionStages.SourceTriggerDefinition,RegistryTask.DefinitionStages.TriggerTypes,RegistryTask.DefinitionStages.TaskCreatable
- uid: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType.yml
  name: RegistryTask.DefinitionStages.TaskStepType
  nameWithType: RegistryTask.DefinitionStages.TaskStepType
  fullName: com.microsoft.azure.management.containerregistry.RegistryTask.DefinitionStages.TaskStepType
  type: Interface
  summary: "<p>The stage of the container registry task definition that specifies the type of task step. </p>"
  syntax:
    content: public interface TaskStepType
- uid: com.microsoft.azure.management.containerregistry.Architecture
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.Architecture.yml
  name: Architecture
  nameWithType: Architecture
  fullName: com.microsoft.azure.management.containerregistry.Architecture
  type: Class
  summary: "<p>Defines values for Architecture. </p>"
  syntax:
    content: public class Architecture extends ExpandableStringEnum<Architecture>
- uid: com.microsoft.azure.management.containerregistry.Variant
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.Variant.yml
  name: Variant
  nameWithType: Variant
  fullName: com.microsoft.azure.management.containerregistry.Variant
  type: Class
  summary: "<p>Defines values for Variant. </p>"
  syntax:
    content: public class Variant
- uid: com.microsoft.azure.management.containerregistry.PlatformProperties
  parent: com.microsoft.azure.management.containerregistry
  href: com.microsoft.azure.management.containerregistry.PlatformProperties.yml
  name: PlatformProperties
  nameWithType: PlatformProperties
  fullName: com.microsoft.azure.management.containerregistry.PlatformProperties
  type: Class
  summary: "<p>The platform properties against which the run has to happen. </p>"
  syntax:
    content: public class PlatformProperties
