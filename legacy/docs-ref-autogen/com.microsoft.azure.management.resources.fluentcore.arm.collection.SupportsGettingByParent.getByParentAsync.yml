### YamlMime:JavaMember
nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync
type: method
members:
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T, ParentT extends Resource &HasResourceGroup, ManagerT>.getByParentAsync(ParentT parentResource, String name)
  name: getByParentAsync(ParentT parentResource, String name)
  nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(ParentT parentResource, String name)
  parameters:
  - description: <p>the instance of parent resource. </p>
    name: parentResource
    type: <xref href="ParentT?alt=ParentT&text=ParentT" data-throw-if-not-resolved="False"/>
  - description: <p>the name of resource. </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the found resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable<T>&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public Observable<T> getByParentAsync(ParentT parentResource, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(ParentT,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T, ParentT extends Resource &HasResourceGroup, ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)
  name: getByParentAsync(String resourceGroup, String parentName, String name)
  nameWithType: SupportsGettingByParent<T,ParentT,ManagerT>.getByParentAsync(String resourceGroup, String parentName, String name)
  parameters:
  - description: <p>the name of resource group </p>
    name: resourceGroup
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of parent resource </p>
    name: parentName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of resource </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a representation of the deferred computation of this call returning the found resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable<T>&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource id.</p>

    <p></p>
  syntax: public Observable<T> getByParentAsync(String resourceGroup, String parentName, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync(String,String,String)
uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent.getByParentAsync*
fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByParent<T, ParentT extends Resource &HasResourceGroup, ManagerT>.getByParentAsync(ParentT parentResource, String name)
name: getByParentAsync(ParentT parentResource, String name)
package: com.microsoft.azure.management.resources.fluentcore.arm.collection
metadata: {}
