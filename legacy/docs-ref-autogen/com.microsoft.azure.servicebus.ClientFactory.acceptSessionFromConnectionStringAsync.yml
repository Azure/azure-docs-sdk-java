### YamlMime:JavaMember
nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync
type: method
members:
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  name: acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  parameters:
  - description: <p>the connection string </p>
    name: amqpConnectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending session accepting </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> in default <xref uid="com.microsoft.azure.servicebus.ReceiveMode.PEEKLOCK" data-throw-if-not-resolved="false">ReceiveMode#PEEKLOCK</xref> mode asynchronously from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.</p>

    <p></p>
  syntax: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String,String)
- fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  name: acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  nameWithType: ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  parameters:
  - description: <p>the connection string </p>
    name: amqpConnectionString
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>session id, if null, service will return the first available session, otherwise, service will return specified session </p>
    name: sessionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.ReceiveMode" data-throw-if-not-resolved="false">ReceiveMode</xref> PeekLock or ReceiveAndDelete </p>
    name: receiveMode
    type: <xref href="com.microsoft.azure.servicebus.ReceiveMode?alt=com.microsoft.azure.servicebus.ReceiveMode&text=ReceiveMode" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending session accepting </p>
    type: CompletableFuture&lt;<xref href="com.microsoft.azure.servicebus.IMessageSession?alt=com.microsoft.azure.servicebus.IMessageSession&text=IMessageSession" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Accept a <xref uid="com.microsoft.azure.servicebus.IMessageSession" data-throw-if-not-resolved="false">IMessageSession</xref> asynchronously from service bus connection string with specified session id. Session Id can be null, if null, service will return the first available session.</p>

    <p></p>
  syntax: public static CompletableFuture<IMessageSession> acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId, ReceiveMode receiveMode)
  uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String,String,ReceiveMode)
uid: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync*
fullName: com.microsoft.azure.servicebus.ClientFactory.acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
name: acceptSessionFromConnectionStringAsync(String amqpConnectionString, String sessionId)
package: com.microsoft.azure.servicebus
metadata: {}
