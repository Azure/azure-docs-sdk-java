### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroup(String resourceGroupName, String name)
  name: getByResourceGroup(String resourceGroupName, String name)
  nameWithType: SupportsGettingByResourceGroup<T>.getByResourceGroup(String resourceGroupName, String name)
  parameters:
  - description: <p>the name of the resource group the resource is in </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the resource. (Note, this is not the ID) </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an immutable representation of the resource </p>
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource name and the name of its resource group.</p>

    <p></p>
  syntax: public T getByResourceGroup(String resourceGroupName, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name)
  name: getByResourceGroupAsync(String resourceGroupName, String name)
  nameWithType: SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name)
  parameters:
  - description: <p>the name of the resource group the resource is in </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the resource. (Note, this is not the ID) </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Observable to an immutable representation of the resource </p>
    type: <xref href="Observable%3CT%3E?alt=Observable%3CT%3E&text=Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource name and the name of its resource group.</p>

    <p></p>
  syntax: public Observable<T> getByResourceGroupAsync(String resourceGroupName, String name)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)
  name: getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)
  nameWithType: SupportsGettingByResourceGroup<T>.getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)
  parameters:
  - description: <p>the name of the resource group the resource is in </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the name of the resource. (Note, this is not the ID) </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the callback to call on success or failure </p>
    name: callback
    type: <xref href="ServiceCallback%3CT%3E?alt=ServiceCallback%3CT%3E&text=ServiceCallback%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Observable to an immutable representation of the resource </p>
    type: <xref href="ServiceFuture%3CT%3E?alt=ServiceFuture%3CT%3E&text=ServiceFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the information about a resource from Azure based on the resource name and the name of its resource group.</p>

    <p></p>
  syntax: public ServiceFuture<T> getByResourceGroupAsync(String resourceGroupName, String name, ServiceCallback<T> callback)
  uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup.getByResourceGroupAsync(String,String,ServiceCallback<T>)
nameWithType: SupportsGettingByResourceGroup<T>
syntax: public interface SupportsGettingByResourceGroup<T>
type: interface
typeParameters:
- description: <p>the type of the resource to get. </p>
  name: T
uid: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup
fullName: com.microsoft.azure.management.resources.fluentcore.arm.collection.SupportsGettingByResourceGroup<T>
name: SupportsGettingByResourceGroup<T>
package: com.microsoft.azure.management.resources.fluentcore.arm.collection
summary: >-
  <p>Provides access to getting a specific Azure resource based on its name and resource group. </p>

  <p>(Note this interface is not intended to be implemented by user code.)</p>

  <p></p>
metadata: {}
