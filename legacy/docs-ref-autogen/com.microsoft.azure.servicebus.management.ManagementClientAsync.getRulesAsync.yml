### YamlMime:JavaMember
nameWithType: ManagementClientAsync.getRulesAsync
type: method
members:
- fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName)
  name: getRulesAsync(String topicName, String subscriptionName)
  nameWithType: ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first 100 rules. </p>
    type: CompletableFuture&lt;List&lt;<xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: <p>Retrieves the list of rules for a given topic-subscription in the namespace. </p>
  syntax: public CompletableFuture<List<RuleDescription>> getRulesAsync(String topicName, String subscriptionName)
  uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String,String)
- fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  name: getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  nameWithType: ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  parameters:
  - description: <p>- The name of the topic. </p>
    name: topicName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The name of the subscription. </p>
    name: subscriptionName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of rules to fetch. Defaults to 100. Maximum value allowed is 100. </p>
    name: count
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>- The number of rules to skip. Defaults to 0. Cannot be negative. </p>
    name: skip
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the list of rules. </p>
    type: CompletableFuture&lt;List&lt;<xref href="com.microsoft.azure.servicebus.rules.RuleDescription?alt=com.microsoft.azure.servicebus.rules.RuleDescription&text=RuleDescription" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: <p>Retrieves the list of rules for a given topic-subscription in the namespace. You can simulate pages of list of entities by manipulating count and skip parameters. skip(0)+count(100) gives first 100 entities. skip(100)+count(100) gives the next 100 entities. </p>
  syntax: public CompletableFuture<List<RuleDescription>> getRulesAsync(String topicName, String subscriptionName, int count, int skip)
  uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String,String,int,int)
uid: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync*
fullName: com.microsoft.azure.servicebus.management.ManagementClientAsync.getRulesAsync(String topicName, String subscriptionName)
name: getRulesAsync(String topicName, String subscriptionName)
package: com.microsoft.azure.servicebus.management
metadata: {}
