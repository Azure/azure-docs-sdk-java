### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.details()
  name: details()
  nameWithType: BingVideos.details()
  returns:
    description: <p>the first stage of the details call </p>
    type: <xref href="BingVideosDetailsDefinitionStages.WithQuery?alt=BingVideosDetailsDefinitionStages.WithQuery&text=BingVideosDetailsDefinitionStages.WithQuery" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Video Detail Search API lets you search on Bing and get back insights about a video, such as related videos. This section provides technical details about the query parameters and headers that you use to request insights of videos and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web</a>).</p>

    <p></p>
  syntax: public BingVideosDetailsDefinitionStages.WithQuery details()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.details()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.details(String query, DetailsOptionalParameter detailsOptionalParameter)
  name: details(String query, DetailsOptionalParameter detailsOptionalParameter)
  nameWithType: BingVideos.details(String query, DetailsOptionalParameter detailsOptionalParameter)
  parameters:
  - description: <p>The user's search query string. The query string cannot be empty. The query string may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit videos to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. Use this parameter only with the Video Search API. Do not specify this parameter when calling the Trending Videos API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: detailsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.DetailsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.DetailsOptionalParameter&text=DetailsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the VideoDetails object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoDetails?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoDetails&text=VideoDetails" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Video Detail Search API lets you search on Bing and get back insights about a video, such as related videos. This section provides technical details about the query parameters and headers that you use to request insights of videos and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web</a>).</p>

    <p></p>
  syntax: public VideoDetails details(String query, DetailsOptionalParameter detailsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.details(String,DetailsOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  name: detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  nameWithType: BingVideos.detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  parameters:
  - description: <p>The user's search query string. The query string cannot be empty. The query string may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit videos to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. Use this parameter only with the Video Search API. Do not specify this parameter when calling the Trending Videos API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: detailsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.DetailsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.DetailsOptionalParameter&text=DetailsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the VideoDetails object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoDetails?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideoDetails&text=VideoDetails" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The Video Detail Search API lets you search on Bing and get back insights about a video, such as related videos. This section provides technical details about the query parameters and headers that you use to request insights of videos and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web</a>).</p>

    <p></p>
  syntax: public Observable<VideoDetails> detailsAsync(String query, DetailsOptionalParameter detailsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.detailsAsync(String,DetailsOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.search()
  name: search()
  nameWithType: BingVideos.search()
  returns:
    description: <p>the first stage of the search call </p>
    type: <xref href="BingVideosSearchDefinitionStages.WithQuery?alt=BingVideosSearchDefinitionStages.WithQuery&text=BingVideosSearchDefinitionStages.WithQuery" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Video Search API lets you send a search query to Bing and get back a list of videos that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request videos and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web</a>).</p>

    <p></p>
  syntax: public BingVideosSearchDefinitionStages.WithQuery search()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.search()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.search(String query, SearchOptionalParameter searchOptionalParameter)
  name: search(String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingVideos.search(String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The user's search query string. The query string cannot be empty. The query string may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit videos to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. Use this parameter only with the Video Search API. Do not specify this parameter when calling the Trending Videos API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the VideosModel object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel&text=VideosModel" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Video Search API lets you send a search query to Bing and get back a list of videos that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request videos and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web</a>).</p>

    <p></p>
  syntax: public VideosModel search(String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.search(String,SearchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  name: searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingVideos.searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The user's search query string. The query string cannot be empty. The query string may contain [Bing Advanced Operators](<a href="http://msdn.microsoft.com/library/ff795620.aspx">http://msdn.microsoft.com/library/ff795620.aspx</a>). For example, to limit videos to a specific domain, use the [site:](<a href="http://msdn.microsoft.com/library/ff795613.aspx">http://msdn.microsoft.com/library/ff795613.aspx</a>) operator. Use this parameter only with the Video Search API. Do not specify this parameter when calling the Trending Videos API. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the VideosModel object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.VideosModel&text=VideosModel" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The Video Search API lets you send a search query to Bing and get back a list of videos that are relevant to the search query. This section provides technical details about the query parameters and headers that you use to request videos and the JSON response objects that contain them. For examples that show how to make requests, see [Searching the Web for Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/search-the-web</a>).</p>

    <p></p>
  syntax: public Observable<VideosModel> searchAsync(String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.searchAsync(String,SearchOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.trending()
  name: trending()
  nameWithType: BingVideos.trending()
  returns:
    description: <p>the first stage of the trending call </p>
    type: <xref href="BingVideosTrendingDefinitionStages.WithExecute?alt=BingVideosTrendingDefinitionStages.WithExecute&text=BingVideosTrendingDefinitionStages.WithExecute" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Video Trending Search API lets you search on Bing and get back a list of videos that are trending based on search requests made by others. The videos are broken out into different categories. For example, Top Music Videos. For a list of markets that support trending videos, see [Trending Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/trending-videos">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/trending-videos</a>).</p>

    <p></p>
  syntax: public BingVideosTrendingDefinitionStages.WithExecute trending()
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.trending()
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.trending(TrendingOptionalParameter trendingOptionalParameter)
  name: trending(TrendingOptionalParameter trendingOptionalParameter)
  nameWithType: BingVideos.trending(TrendingOptionalParameter trendingOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: trendingOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingOptionalParameter&text=TrendingOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the TrendingVideos object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingVideos?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingVideos&text=TrendingVideos" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Video Trending Search API lets you search on Bing and get back a list of videos that are trending based on search requests made by others. The videos are broken out into different categories. For example, Top Music Videos. For a list of markets that support trending videos, see [Trending Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/trending-videos">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/trending-videos</a>).</p>

    <p></p>
  syntax: public TrendingVideos trending(TrendingOptionalParameter trendingOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.trending(TrendingOptionalParameter)
- fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  name: trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  nameWithType: BingVideos.trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  parameters:
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: trendingOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingOptionalParameter&text=TrendingOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the TrendingVideos object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingVideos?alt=com.microsoft.azure.cognitiveservices.search.videosearch.models.TrendingVideos&text=TrendingVideos" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>The Video Trending Search API lets you search on Bing and get back a list of videos that are trending based on search requests made by others. The videos are broken out into different categories. For example, Top Music Videos. For a list of markets that support trending videos, see [Trending Videos](<a href="https://docs.microsoft.com/azure/cognitive-services/bing-video-search/trending-videos">https://docs.microsoft.com/azure/cognitive-services/bing-video-search/trending-videos</a>).</p>

    <p></p>
  syntax: public Observable<TrendingVideos> trendingAsync(TrendingOptionalParameter trendingOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos.trendingAsync(TrendingOptionalParameter)
nameWithType: BingVideos
syntax: public interface BingVideos
type: interface
uid: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos
fullName: com.microsoft.azure.cognitiveservices.search.videosearch.BingVideos
name: BingVideos
package: com.microsoft.azure.cognitiveservices.search.videosearch
summary: <p>An instance of this class provides access to all the operations defined in BingVideos. </p>
metadata: {}
