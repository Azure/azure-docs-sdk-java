### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.ActionGroupsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: ActionGroupsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: ActionGroupsInner.ActionGroupsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of ActionGroupsInner.</p>

    <p></p>
  syntax: public ActionGroupsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.ActionGroupsInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet?alt=com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet&text=InnerSupportsGet%3CInnerT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String,ServiceCallback<InnerT>)
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdate(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  name: createOrUpdate(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  nameWithType: ActionGroupsInner.createOrUpdate(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The action group to create or use for the update. </p>
    name: actionGroup
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ActionGroupResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a new action group or update an existing one.</p>

    <p></p>
  syntax: public ActionGroupResourceInner createOrUpdate(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdate(String,String,ActionGroupResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  name: createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  nameWithType: ActionGroupsInner.createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The action group to create or use for the update. </p>
    name: actionGroup
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ActionGroupResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Create a new action group or update an existing one.</p>

    <p></p>
  syntax: public Observable<ActionGroupResourceInner> createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdateAsync(String,String,ActionGroupResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  name: createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  nameWithType: ActionGroupsInner.createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The action group to create or use for the update. </p>
    name: actionGroup
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Create a new action group or update an existing one.</p>

    <p></p>
  syntax: public ServiceFuture<ActionGroupResourceInner> createOrUpdateAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdateAsync(String,String,ActionGroupResourceInner,final ServiceCallback<ActionGroupResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  name: createOrUpdateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  nameWithType: ActionGroupsInner.createOrUpdateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The action group to create or use for the update. </p>
    name: actionGroup
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ActionGroupResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Create a new action group or update an existing one.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ActionGroupResourceInner>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupResourceInner actionGroup)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.createOrUpdateWithServiceResponseAsync(String,String,ActionGroupResourceInner)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.delete(String resourceGroupName, String actionGroupName)
  name: delete(String resourceGroupName, String actionGroupName)
  nameWithType: ActionGroupsInner.delete(String resourceGroupName, String actionGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Delete an action group.</p>

    <p></p>
  syntax: public void delete(String resourceGroupName, String actionGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.delete(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.deleteAsync(String resourceGroupName, String actionGroupName)
  name: deleteAsync(String resourceGroupName, String actionGroupName)
  nameWithType: ActionGroupsInner.deleteAsync(String resourceGroupName, String actionGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsDelete.deleteAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Delete an action group.</p>

    <p></p>
  syntax: public Observable<Void> deleteAsync(String resourceGroupName, String actionGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.deleteAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.deleteAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<Void> serviceCallback)
  name: deleteAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ActionGroupsInner.deleteAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Delete an action group.</p>

    <p></p>
  syntax: public ServiceFuture<Void> deleteAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.deleteAsync(String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.deleteWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  name: deleteWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  nameWithType: ActionGroupsInner.deleteWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Delete an action group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.deleteWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiver(String resourceGroupName, String actionGroupName, String receiverName)
  name: enableReceiver(String resourceGroupName, String actionGroupName, String receiverName)
  nameWithType: ActionGroupsInner.enableReceiver(String resourceGroupName, String actionGroupName, String receiverName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the receiver to resubscribe. </p>
    name: receiverName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Enable a receiver in an action group. This changes the receiver's status from Disabled to Enabled. This operation is only supported for Email or SMS receivers.</p>

    <p></p>
  syntax: public void enableReceiver(String resourceGroupName, String actionGroupName, String receiverName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiver(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName)
  name: enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName)
  nameWithType: ActionGroupsInner.enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the receiver to resubscribe. </p>
    name: receiverName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Enable a receiver in an action group. This changes the receiver's status from Disabled to Enabled. This operation is only supported for Email or SMS receivers.</p>

    <p></p>
  syntax: public Observable<Void> enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiverAsync(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName, final ServiceCallback<Void> serviceCallback)
  name: enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName, final ServiceCallback<Void> serviceCallback)
  nameWithType: ActionGroupsInner.enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the receiver to resubscribe. </p>
    name: receiverName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Enable a receiver in an action group. This changes the receiver's status from Disabled to Enabled. This operation is only supported for Email or SMS receivers.</p>

    <p></p>
  syntax: public ServiceFuture<Void> enableReceiverAsync(String resourceGroupName, String actionGroupName, String receiverName, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiverAsync(String,String,String,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiverWithServiceResponseAsync(String resourceGroupName, String actionGroupName, String receiverName)
  name: enableReceiverWithServiceResponseAsync(String resourceGroupName, String actionGroupName, String receiverName)
  nameWithType: ActionGroupsInner.enableReceiverWithServiceResponseAsync(String resourceGroupName, String actionGroupName, String receiverName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the receiver to resubscribe. </p>
    name: receiverName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponse"></xref> object if successful. </p>
    type: <xref href="Observable%3CServiceResponse%3CVoid%3E%3E?alt=Observable%3CServiceResponse%3CVoid%3E%3E&text=Observable%3CServiceResponse%3CVoid%3E%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Enable a receiver in an action group. This changes the receiver's status from Disabled to Enabled. This operation is only supported for Email or SMS receivers.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<Void>> enableReceiverWithServiceResponseAsync(String resourceGroupName, String actionGroupName, String receiverName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.enableReceiverWithServiceResponseAsync(String,String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroup(String resourceGroupName, String actionGroupName)
  name: getByResourceGroup(String resourceGroupName, String actionGroupName)
  nameWithType: ActionGroupsInner.getByResourceGroup(String resourceGroupName, String actionGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroup(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ActionGroupResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get an action group.</p>

    <p></p>
  syntax: public ActionGroupResourceInner getByResourceGroup(String resourceGroupName, String actionGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroup(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroupAsync(String resourceGroupName, String actionGroupName)
  name: getByResourceGroupAsync(String resourceGroupName, String actionGroupName)
  nameWithType: ActionGroupsInner.getByResourceGroupAsync(String resourceGroupName, String actionGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsGet.getByResourceGroupAsync(String,String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ActionGroupResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get an action group.</p>

    <p></p>
  syntax: public Observable<ActionGroupResourceInner> getByResourceGroupAsync(String resourceGroupName, String actionGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroupAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroupAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  name: getByResourceGroupAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  nameWithType: ActionGroupsInner.getByResourceGroupAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get an action group.</p>

    <p></p>
  syntax: public ServiceFuture<ActionGroupResourceInner> getByResourceGroupAsync(String resourceGroupName, String actionGroupName, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroupAsync(String,String,final ServiceCallback<ActionGroupResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  name: getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  nameWithType: ActionGroupsInner.getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ActionGroupResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Get an action group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ActionGroupResourceInner>> getByResourceGroupWithServiceResponseAsync(String resourceGroupName, String actionGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.getByResourceGroupWithServiceResponseAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.list()
  name: list()
  nameWithType: ActionGroupsInner.list()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.list()
  returns:
    description: <p>the PagedList&lt;ActionGroupResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get a list of all action groups in a subscription.</p>

    <p></p>
  syntax: public PagedList<ActionGroupResourceInner> list()
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.list()
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listAsync()
  name: listAsync()
  nameWithType: ActionGroupsInner.listAsync()
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listAsync()
  returns:
    description: <p>the observable to the List&lt;ActionGroupResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Get a list of all action groups in a subscription.</p>

    <p></p>
  syntax: public Observable<Page<ActionGroupResourceInner>> listAsync()
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listAsync()
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listAsync(final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  name: listAsync(final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  nameWithType: ActionGroupsInner.listAsync(final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  parameters:
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Get a list of all action groups in a subscription.</p>

    <p></p>
  syntax: public ServiceFuture<List<ActionGroupResourceInner>> listAsync(final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listAsync(final ServiceCallback<List<ActionGroupResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroup(String resourceGroupName)
  name: listByResourceGroup(String resourceGroupName)
  nameWithType: ActionGroupsInner.listByResourceGroup(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroup(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PagedList&lt;ActionGroupResourceInner&gt; object if successful. </p>
    type: PagedList&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get a list of all action groups in a resource group.</p>

    <p></p>
  syntax: public PagedList<ActionGroupResourceInner> listByResourceGroup(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroup(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroupAsync(String resourceGroupName)
  name: listByResourceGroupAsync(String resourceGroupName)
  nameWithType: ActionGroupsInner.listByResourceGroupAsync(String resourceGroupName)
  overridden: com.microsoft.azure.management.resources.fluentcore.collection.InnerSupportsListing.listByResourceGroupAsync(String)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;ActionGroupResourceInner&gt; object </p>
    type: Observable&lt;Page&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Get a list of all action groups in a resource group.</p>

    <p></p>
  syntax: public Observable<Page<ActionGroupResourceInner>> listByResourceGroupAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroupAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  name: listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  nameWithType: ActionGroupsInner.listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Get a list of all action groups in a resource group.</p>

    <p></p>
  syntax: public ServiceFuture<List<ActionGroupResourceInner>> listByResourceGroupAsync(String resourceGroupName, final ServiceCallback<List<ActionGroupResourceInner>> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroupAsync(String,final ServiceCallback<List<ActionGroupResourceInner>>)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  name: listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  nameWithType: ActionGroupsInner.listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the observable to the List&lt;ActionGroupResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Get a list of all action groups in a resource group.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<ActionGroupResourceInner>>> listByResourceGroupWithServiceResponseAsync(String resourceGroupName)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listByResourceGroupWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listWithServiceResponseAsync()
  name: listWithServiceResponseAsync()
  nameWithType: ActionGroupsInner.listWithServiceResponseAsync()
  returns:
    description: <p>the observable to the List&lt;ActionGroupResourceInner&gt; object </p>
    type: Observable&lt;ServiceResponse&lt;List&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;&gt;
  summary: >-
    <p>Get a list of all action groups in a subscription.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<List<ActionGroupResourceInner>>> listWithServiceResponseAsync()
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.listWithServiceResponseAsync()
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.update(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  name: update(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  nameWithType: ActionGroupsInner.update(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: actionGroupPatch
    type: <xref href="com.microsoft.azure.management.monitor.ActionGroupPatchBody?alt=com.microsoft.azure.management.monitor.ActionGroupPatchBody&text=ActionGroupPatchBody" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ActionGroupResourceInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates an existing action group's tags. To update other fields use the CreateOrUpdate method.</p>

    <p></p>
  syntax: public ActionGroupResourceInner update(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.update(String,String,ActionGroupPatchBody)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  name: updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  nameWithType: ActionGroupsInner.updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: actionGroupPatch
    type: <xref href="com.microsoft.azure.management.monitor.ActionGroupPatchBody?alt=com.microsoft.azure.management.monitor.ActionGroupPatchBody&text=ActionGroupPatchBody" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ActionGroupResourceInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates an existing action group's tags. To update other fields use the CreateOrUpdate method.</p>

    <p></p>
  syntax: public Observable<ActionGroupResourceInner> updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.updateAsync(String,String,ActionGroupPatchBody)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  name: updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  nameWithType: ActionGroupsInner.updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: actionGroupPatch
    type: <xref href="com.microsoft.azure.management.monitor.ActionGroupPatchBody?alt=com.microsoft.azure.management.monitor.ActionGroupPatchBody&text=ActionGroupPatchBody" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Updates an existing action group's tags. To update other fields use the CreateOrUpdate method.</p>

    <p></p>
  syntax: public ServiceFuture<ActionGroupResourceInner> updateAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch, final ServiceCallback<ActionGroupResourceInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.updateAsync(String,String,ActionGroupPatchBody,final ServiceCallback<ActionGroupResourceInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.updateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  name: updateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  nameWithType: ActionGroupsInner.updateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  parameters:
  - description: <p>The name of the resource group. </p>
    name: resourceGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the action group. </p>
    name: actionGroupName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Parameters supplied to the operation. </p>
    name: actionGroupPatch
    type: <xref href="com.microsoft.azure.management.monitor.ActionGroupPatchBody?alt=com.microsoft.azure.management.monitor.ActionGroupPatchBody&text=ActionGroupPatchBody" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ActionGroupResourceInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner?alt=com.microsoft.azure.management.monitor.implementation.ActionGroupResourceInner&text=ActionGroupResourceInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Updates an existing action group's tags. To update other fields use the CreateOrUpdate method.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ActionGroupResourceInner>> updateWithServiceResponseAsync(String resourceGroupName, String actionGroupName, ActionGroupPatchBody actionGroupPatch)
  uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner.updateWithServiceResponseAsync(String,String,ActionGroupPatchBody)
nameWithType: ActionGroupsInner
syntax: public class ActionGroupsInner implements InnerSupportsGet<ActionGroupResourceInner>,InnerSupportsDelete<Void>,InnerSupportsListing<ActionGroupResourceInner>
type: class
uid: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner
fullName: com.microsoft.azure.management.monitor.implementation.ActionGroupsInner
name: ActionGroupsInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in ActionGroups. </p>
metadata: {}
