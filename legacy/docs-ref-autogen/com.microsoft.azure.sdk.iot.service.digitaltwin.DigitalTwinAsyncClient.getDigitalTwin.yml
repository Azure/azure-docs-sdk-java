### YamlMime:JavaMember
nameWithType: DigitalTwinAsyncClient.getDigitalTwin
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwin(String digitalTwinId, Class<T> clazz)
  name: getDigitalTwin(String digitalTwinId, Class<T> clazz)
  nameWithType: DigitalTwinAsyncClient.getDigitalTwin(String digitalTwinId, Class<T> clazz)
  parameters:
  - description: <p>The Id of the digital twin. </p>
    name: digitalTwinId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The class to deserialize the application/json into. </p>
    name: clazz
    type: <xref href="Class%3CT%3E?alt=Class%3CT%3E&text=Class%3CT%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The application/json of the digital twin. </p>
    type: <xref href="%3CT%3E+Observable%3CT%3E?alt=%3CT%3E+Observable%3CT%3E&text=%3CT%3E+Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Gets a digital twin. </p>
  syntax: public <T> Observable<T> getDigitalTwin(String digitalTwinId, Class<T> clazz)
  uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwin(String,Class<T>)
uid: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwin*
fullName: com.microsoft.azure.sdk.iot.service.digitaltwin.DigitalTwinAsyncClient.getDigitalTwin
name: getDigitalTwin(String digitalTwinId, Class<T> clazz)
package: com.microsoft.azure.sdk.iot.service.digitaltwin
metadata: {}
