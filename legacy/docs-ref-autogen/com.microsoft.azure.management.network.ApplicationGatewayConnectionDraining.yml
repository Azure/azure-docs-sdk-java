### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.drainTimeoutInSec()
  name: drainTimeoutInSec()
  nameWithType: ApplicationGatewayConnectionDraining.drainTimeoutInSec()
  returns:
    description: <p>the drainTimeoutInSec value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the drainTimeoutInSec value.</p>

    <p></p>
  syntax: public int drainTimeoutInSec()
  uid: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.drainTimeoutInSec()
- fullName: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.enabled()
  name: enabled()
  nameWithType: ApplicationGatewayConnectionDraining.enabled()
  returns:
    description: <p>the enabled value </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the enabled value.</p>

    <p></p>
  syntax: public boolean enabled()
  uid: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.enabled()
- fullName: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.withDrainTimeoutInSec(int drainTimeoutInSec)
  name: withDrainTimeoutInSec(int drainTimeoutInSec)
  nameWithType: ApplicationGatewayConnectionDraining.withDrainTimeoutInSec(int drainTimeoutInSec)
  parameters:
  - description: <p>the drainTimeoutInSec value to set </p>
    name: drainTimeoutInSec
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ApplicationGatewayConnectionDraining object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining?alt=com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining&text=ApplicationGatewayConnectionDraining" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the drainTimeoutInSec value.</p>

    <p></p>
  syntax: public ApplicationGatewayConnectionDraining withDrainTimeoutInSec(int drainTimeoutInSec)
  uid: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.withDrainTimeoutInSec(int)
- fullName: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.withEnabled(boolean enabled)
  name: withEnabled(boolean enabled)
  nameWithType: ApplicationGatewayConnectionDraining.withEnabled(boolean enabled)
  parameters:
  - description: <p>the enabled value to set </p>
    name: enabled
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the ApplicationGatewayConnectionDraining object itself. </p>
    type: <xref href="com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining?alt=com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining&text=ApplicationGatewayConnectionDraining" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the enabled value.</p>

    <p></p>
  syntax: public ApplicationGatewayConnectionDraining withEnabled(boolean enabled)
  uid: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining.withEnabled(boolean)
nameWithType: ApplicationGatewayConnectionDraining
syntax: public class ApplicationGatewayConnectionDraining
type: class
uid: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining
fullName: com.microsoft.azure.management.network.ApplicationGatewayConnectionDraining
name: ApplicationGatewayConnectionDraining
package: com.microsoft.azure.management.network
summary: <p>Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration. </p>
metadata: {}
