### YamlMime:JavaMember
nameWithType: IMessageReceiver.deadLetter
type: method
members:
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken)
  name: deadLetter(UUID lockToken)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID)
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
  name: deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Message properties to modify. </p>
    name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue with modified message properties.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken, Map<String, Object> propertiesToModify)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID,Map<String, Object>)
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>Message properties to modify. </p>
    name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.TransactionContext" data-throw-if-not-resolved="false" data-raw-source="TransactionContext"></xref> which this operation should enlist to. </p>
    name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue with modified message properties.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID,Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter reason. </p>
    name: deadLetterReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter error description. </p>
    name: deadLetterErrorDescription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue with deadletter reason and error description.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID,String,String)
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter reason. </p>
    name: deadLetterReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter error description. </p>
    name: deadLetterErrorDescription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Message properties to modify. </p>
    name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID,String,String,Map<String, Object>)
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter reason. </p>
    name: deadLetterReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter error description. </p>
    name: deadLetterErrorDescription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Message properties to modify. </p>
    name: propertiesToModify
    type: <xref href="Map%3CString%2C+Object%3E?alt=Map%3CString%2C+Object%3E&text=Map%3CString%2C+Object%3E" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.TransactionContext" data-throw-if-not-resolved="false" data-raw-source="TransactionContext"></xref> which this operation should enlist to. </p>
    name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue with deadletter reason and error description and modified properties.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, Map<String, Object> propertiesToModify, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID,String,String,Map<String, Object>,TransactionContext)
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  name: deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter reason. </p>
    name: deadLetterReason
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The deadletter error description. </p>
    name: deadLetterErrorDescription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.TransactionContext" data-throw-if-not-resolved="false" data-raw-source="TransactionContext"></xref> which this operation should enlist to. </p>
    name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue with deadletter reason and error description.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken, String deadLetterReason, String deadLetterErrorDescription, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID,String,String,TransactionContext)
- fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID lockToken, TransactionContext transaction)
  name: deadLetter(UUID lockToken, TransactionContext transaction)
  nameWithType: IMessageReceiver.deadLetter(UUID lockToken, TransactionContext transaction)
  parameters:
  - description: <p>Message lock token <xref uid="com.microsoft.azure.servicebus.Message.getLockToken()" data-throw-if-not-resolved="false" data-raw-source="Message#getLockToken()"></xref></p>
    name: lockToken
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.TransactionContext" data-throw-if-not-resolved="false" data-raw-source="TransactionContext"></xref> which this operation should enlist to. </p>
    name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>if the current thread was interrupted while waiting </p>
  - type: <xref href="ServiceBusException?alt=ServiceBusException&text=ServiceBusException" data-throw-if-not-resolved="False"/>
    description: <p>if deadletter failed </p>
  summary: >-
    <p>Moves a <xref uid="com.microsoft.azure.servicebus.Message" data-throw-if-not-resolved="false" data-raw-source="Message"></xref> to the deadletter sub-queue.</p>

    <p></p>
  syntax: public void deadLetter(UUID lockToken, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter(UUID,TransactionContext)
uid: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter*
fullName: com.microsoft.azure.servicebus.IMessageReceiver.deadLetter
name: deadLetter(UUID lockToken)
package: com.microsoft.azure.servicebus
metadata: {}
