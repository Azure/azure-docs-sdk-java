### YamlMime:JavaMember
nameWithType: ActorStateManager.addOrUpdateStateAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  name: addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  nameWithType: ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  parameters:
  - description: <p>Name of the actor state to add or get. </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Value of the actor state to add if it doesn't exist. </p>
    name: addValue
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  - description: <p>Factory function to generate value of actor state to update if it exists. </p>
    name: updateValueFactory
    type: <xref href="BiFunction%3CString%2C+T%2C+T%3E?alt=BiFunction<String, T, T>&text=BiFunction%3CString%2C+T%2C+T%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous add/update operation. The value of T parameter contains value of actor state that was added/updated. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=<T> CompletableFuture<T>&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds an actor state with given state name, if it does not already exist or updates specified state name and value, if it does not exist.</p>

    <p></p>
  syntax: public <T> CompletableFuture<T> addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>)
- fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
  name: addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
  nameWithType: ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
  parameters:
  - description: <p>Name of the actor state to add or get. </p>
    name: stateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Value of the actor state to add if it doesn't exist. </p>
    name: addValue
    type: <xref href="T?alt=T&text=T" data-throw-if-not-resolved="False"/>
  - description: <p>Factory function to generate value of actor state to update if it exists. </p>
    name: updateValueFactory
    type: <xref href="BiFunction%3CString%2C+T%2C+T%3E?alt=BiFunction<String, T, T>&text=BiFunction%3CString%2C+T%2C+T%3E" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="system.fabric.CancellationToken" data-throw-if-not-resolved="false">system.fabric.CancellationToken</xref> object to indicate the cancellation status of the operation. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A task that represents the asynchronous add/update operation. The value of T parameter contains value of actor state that was added/updated. </p>
    type: <xref href="%3CT%3E+CompletableFuture%3CT%3E?alt=<T> CompletableFuture<T>&text=%3CT%3E+CompletableFuture%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Adds an actor state with given state name, if it does not already exist or updates specified state name and value, if it does not exist.</p>

    <p></p>
  syntax: public <T> CompletableFuture<T> addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync(String,T,BiFunction<String, T, T>,CancellationToken)
uid: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync*
fullName: microsoft.servicefabric.actors.runtime.ActorStateManager.addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
name: addOrUpdateStateAsync(String stateName, T addValue, BiFunction<String, T, T> updateValueFactory)
package: microsoft.servicefabric.actors.runtime
metadata: {}
