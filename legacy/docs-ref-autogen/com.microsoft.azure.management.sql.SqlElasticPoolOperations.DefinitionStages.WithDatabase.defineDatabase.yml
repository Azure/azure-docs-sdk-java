### YamlMime:JavaMember
nameWithType: SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase
type: method
members:
- fullName: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase(String databaseName)
  name: defineDatabase(String databaseName)
  nameWithType: SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase(String databaseName)
  parameters:
  - description: <p>the name of the new SQL Database </p>
    name: databaseName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the first stage of the new SQL Database definition </p>
    type: SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool&lt;<xref href="com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithCreate?alt=com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithCreate&text=SqlElasticPoolOperations.DefinitionStages.WithCreate" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Begins the definition of a new SQL Database to be added to this server.</p>

    <p></p>
  syntax: public SqlDatabase.DefinitionStages.WithExistingDatabaseAfterElasticPool<WithCreate> defineDatabase(String databaseName)
  uid: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase(String)
uid: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase*
fullName: com.microsoft.azure.management.sql.SqlElasticPoolOperations.DefinitionStages.WithDatabase.defineDatabase(String databaseName)
name: defineDatabase(String databaseName)
package: com.microsoft.azure.management.sql
metadata: {}
