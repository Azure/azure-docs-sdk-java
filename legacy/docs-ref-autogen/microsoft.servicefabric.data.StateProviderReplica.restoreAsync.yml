### YamlMime:JavaMember
nameWithType: StateProviderReplica.restoreAsync
type: method
members:
- fullName: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
  name: restoreAsync(String backupFolderPath)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath)
  parameters:
  - description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    name: backupFolderPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Task that represents the asynchronous restore operation. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restore a backup taken.</p>

    <p>

      <b>Remarks:</b>A safe restore will be performed, meaning the restore will only be completed if the data to restore is ahead of state of the current replica. </p>
  syntax: public CompletableFuture<?> restoreAsync(String backupFolderPath)
  uid: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String)
- fullName: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  name: restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  nameWithType: StateProviderReplica.restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  parameters:
  - description: <p>The directory where the replica is to be restored from. This parameter cannot be null, empty or contain just whitespace. UNC paths may also be provided. </p>
    name: backupFolderPath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The restore policy. </p>
    name: restorePolicy
    type: <xref href="microsoft.servicefabric.data.RestorePolicy?alt=microsoft.servicefabric.data.RestorePolicy&text=RestorePolicy" data-throw-if-not-resolved="False"/>
  - description: <p>The timeout for this operation. </p>
    name: timeout
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  - description: <p>The token to monitor for cancellation requests. </p>
    name: cancellationToken
    type: <xref href="system.fabric.CancellationToken?alt=system.fabric.CancellationToken&text=CancellationToken" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Task that represents the asynchronous restore operation. </p>
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Restore a backup taken</p>

    <p></p>
  syntax: public CompletableFuture<?> restoreAsync(String backupFolderPath, RestorePolicy restorePolicy, Duration timeout, CancellationToken cancellationToken)
  uid: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String,RestorePolicy,Duration,CancellationToken)
uid: microsoft.servicefabric.data.StateProviderReplica.restoreAsync*
fullName: microsoft.servicefabric.data.StateProviderReplica.restoreAsync(String backupFolderPath)
name: restoreAsync(String backupFolderPath)
package: microsoft.servicefabric.data
metadata: {}
