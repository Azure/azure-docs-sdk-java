### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
methods:
- fullName: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceControlBranch()
  name: sourceControlBranch()
  nameWithType: RegistrySourceTrigger.sourceControlBranch()
  returns:
    description: <p>the branch of the repository that is being used as source control. I.e., master. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String sourceControlBranch()
  uid: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceControlBranch()
- fullName: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceControlRepositoryUrl()
  name: sourceControlRepositoryUrl()
  nameWithType: RegistrySourceTrigger.sourceControlRepositoryUrl()
  returns:
    description: <p>the URL of the repository used as source control. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String sourceControlRepositoryUrl()
  uid: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceControlRepositoryUrl()
- fullName: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceControlType()
  name: sourceControlType()
  nameWithType: RegistrySourceTrigger.sourceControlType()
  returns:
    description: <p>Returns the type of source control this trigger uses. I.e., Github, AzureDevOps etc. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.SourceControlType?alt=com.microsoft.azure.management.containerregistry.SourceControlType&text=SourceControlType" data-throw-if-not-resolved="False"/>
  syntax: public SourceControlType sourceControlType()
  uid: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceControlType()
- fullName: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceTriggerEvents()
  name: sourceTriggerEvents()
  nameWithType: RegistrySourceTrigger.sourceTriggerEvents()
  returns:
    description: <p>the list of actions that trigger an event. I.e., a commit, a pull request etc. </p>
    type: List&lt;<xref href="com.microsoft.azure.management.containerregistry.SourceTriggerEvent?alt=com.microsoft.azure.management.containerregistry.SourceTriggerEvent&text=SourceTriggerEvent" data-throw-if-not-resolved="False"/>&gt;
  syntax: public List<SourceTriggerEvent> sourceTriggerEvents()
  uid: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.sourceTriggerEvents()
- fullName: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.status()
  name: status()
  nameWithType: RegistrySourceTrigger.status()
  returns:
    description: <p>the source trigger status. I.e., enabled, disabled. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.TriggerStatus?alt=com.microsoft.azure.management.containerregistry.TriggerStatus&text=TriggerStatus" data-throw-if-not-resolved="False"/>
  syntax: public TriggerStatus status()
  uid: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger.status()
nameWithType: RegistrySourceTrigger
syntax: public interface RegistrySourceTrigger extends HasInner<SourceTrigger>
type: interface
uid: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger
fullName: com.microsoft.azure.management.containerregistry.RegistrySourceTrigger
name: RegistrySourceTrigger
package: com.microsoft.azure.management.containerregistry
summary: <p>An immutable client-side representation of a Container Registry source trigger. </p>
metadata: {}
