### YamlMime:JavaMember
nameWithType: ActorEventProxy.invokeAsync
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.ActorEventProxy.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  name: invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  nameWithType: ActorEventProxy.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  parameters:
  - name: interfaceId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: methodId
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - name: requestMsgBodyBytes
    type: <xref href="byte+%5B%5D?alt=byte []&text=byte+%5B%5D" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="CompletableFuture%3Cbyte%5B%5D%3E?alt=CompletableFuture<byte[]>&text=CompletableFuture%3Cbyte%5B%5D%3E" data-throw-if-not-resolved="False"/>
  syntax: protected CompletableFuture<byte[]> invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
  uid: microsoft.servicefabric.actors.runtime.ActorEventProxy.invokeAsync(int,int,byte [])
uid: microsoft.servicefabric.actors.runtime.ActorEventProxy.invokeAsync*
fullName: microsoft.servicefabric.actors.runtime.ActorEventProxy.invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
name: invokeAsync(int interfaceId, int methodId, byte[] requestMsgBodyBytes)
package: microsoft.servicefabric.actors.runtime
metadata: {}
