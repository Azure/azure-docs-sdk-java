### YamlMime:JavaMember
nameWithType: RXMapper<T>.map
type: method
members:
- fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.map(Observable<?> fromObservable, final T toValue)
  name: map(Observable<?> fromObservable, final T toValue)
  nameWithType: RXMapper<T>.map(Observable<?> fromObservable, final T toValue)
  parameters:
  - description: <p>the source observable </p>
    name: fromObservable
    type: <xref href="Observable%3C%3F%3E?alt=Observable<?>&text=Observable%3C%3F%3E" data-throw-if-not-resolved="False"/>
  - description: <p>the value to emit to the observer </p>
    name: toValue
    type: <xref href="final+T?alt=final T&text=final+T" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>an observable emitting the specified value </p>
    type: <xref href="static%3CT%3E+Observable%3CT%3E?alt=static<T> Observable<T>&text=static%3CT%3E+Observable%3CT%3E" data-throw-if-not-resolved="False"/>
  summary: <p>Shortcut for mapping the output of an arbitrary observable to one returning an instance of a specific type, using the IO scheduler. </p>
  syntax: public static static<T> Observable<T> map(Observable<?> fromObservable, final T toValue)
  uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.map(Observable<?>,final T)
uid: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper.map*
fullName: com.microsoft.azure.management.resources.fluentcore.utils.RXMapper<T>.map(Observable<?> fromObservable, final T toValue)
name: map(Observable<?> fromObservable, final T toValue)
package: com.microsoft.azure.management.resources.fluentcore.utils
metadata: {}
