### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinition
  id: UpdateDefinition
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinition.yml
  langs:
  - java
  name: LoadBalancerInboundNatRule.UpdateDefinition<ParentT>
  nameWithType: LoadBalancerInboundNatRule.UpdateDefinition<ParentT>
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinition<ParentT>
  type: Interface
  source:
    remote:
      path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/LoadBalancerInboundNatRule.java
      branch: v1.3.0
      repo: https://github.com/Azure/azure-sdk-for-java
    path: azure-mgmt-network/src/main/java/com/microsoft/azure/management/network/LoadBalancerInboundNatRule.java
    startLine: 282
  package: com.microsoft.azure.management.network
  summary: "<p>The entirety of an inbound NAT rule definition. </p>"
  syntax:
    content: public interface UpdateDefinition<ParentT> extends LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank<ParentT>,LoadBalancerInboundNatRule.UpdateDefinitionStages.WithProtocol<ParentT>,LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontend<ParentT>,LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontendPort<ParentT>,LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttach<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
  inheritedMembers:
  - com.microsoft.azure.management.resources.fluentcore.model.Attachable.InUpdate.attach()
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(PublicIPAddress)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(String)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Network,String)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(String,String)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Subnet)
  - com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend(String)
  - com.microsoft.azure.management.network.model.HasFrontendPort.UpdateDefinitionStages.WithFrontendPort.fromFrontendPort(int)
  - com.microsoft.azure.management.network.model.HasBackendPort.UpdateDefinitionStages.WithBackendPort.toBackendPort(int)
  - com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.withFloatingIP(boolean)
  - com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.withFloatingIPDisabled()
  - com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.withFloatingIPEnabled()
  - com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithIdleTimeout.withIdleTimeoutInMinutes(int)
  - com.microsoft.azure.management.network.model.HasProtocol.UpdateDefinitionStages.WithProtocol.withProtocol(ProtocolT)
references:
- uid: 18a275b1
  spec.java:
  - name: ParentT
    fullName: ParentT
- uid: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InUpdate.attach()
  parent: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InUpdate
  href: com.microsoft.azure.management.resources.fluentcore.model.Attachable.InUpdate.yml
  name: attach()
  nameWithType: Attachable.InUpdate<ParentT>.attach()
  fullName: ParentT com.microsoft.azure.management.resources.fluentcore.model.Attachable<ParentT>.InUpdate<ParentT>.attach()
  type: Method
  summary: "<p>Attaches the child definition to the parent resource update. </p>"
  syntax:
    content: public ParentT attach()
    return:
      type: 18a275b1
      description: <p>the next stage of the parent definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(PublicIPAddress)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  name: fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
  type: Method
  summary: "<p>Specifies an existing public IP address to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingPublicIPAddress(PublicIPAddress publicIPAddress)
    parameters:
    - id: publicIPAddress
      type: com.microsoft.azure.management.network.PublicIPAddress
      description: <p>an existing public IP address </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingPublicIPAddress(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  name: fromExistingPublicIPAddress(String resourceId)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingPublicIPAddress(String resourceId)
  type: Method
  summary: "<p>Specifies an existing public IP address to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this public IP address, that is the frontend that will be used. Else, an automatically named new public frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingPublicIPAddress(String resourceId)
    parameters:
    - id: resourceId
      type: "26831127"
      description: <p>the resource ID of an existing public IP address </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Network,String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  name: fromExistingSubnet(Network network, String subnetName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Network network, String subnetName)
  type: Method
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(Network network, String subnetName)
    parameters:
    - id: network
      type: com.microsoft.azure.management.network.Network
      description: <p>an existing network </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of an existing subnet within the specified network </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(String,String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  name: fromExistingSubnet(String networkResourceId, String subnetName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(String networkResourceId, String subnetName)
  type: Method
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(String networkResourceId, String subnetName)
    parameters:
    - id: networkResourceId
      type: "26831127"
      description: <p>the resource ID of an existing network </p>
    - id: subnetName
      type: "26831127"
      description: <p>the name of an existing subnet within the specified network </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromExistingSubnet(Subnet)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  name: fromExistingSubnet(Subnet subnet)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromExistingSubnet(Subnet subnet)
  type: Method
  summary: "<p>Specifies an existing private subnet to receive network traffic from. </p>\r\n<p>If this load balancer already has a frontend referencing this subnet, that is the frontend that will be used. Else, an automatically named new private frontend will be created implicitly on the load balancer. </p>"
  syntax:
    content: public ReturnT fromExistingSubnet(Subnet subnet)
    parameters:
    - id: subnet
      type: com.microsoft.azure.management.network.Subnet
      description: <p>an existing subnet </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.fromFrontend(String)
  parent: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend
  href: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend.yml
  name: fromFrontend(String frontendName)
  nameWithType: HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  fullName: com.microsoft.azure.management.network.model.HasFrontend.UpdateDefinitionStages.WithFrontend<ReturnT>.fromFrontend(String frontendName)
  type: Method
  summary: "<p>Specifies the frontend to associate. </p>"
  syntax:
    content: public ReturnT fromFrontend(String frontendName)
    parameters:
    - id: frontendName
      type: "26831127"
      description: <p>an existing frontend name </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateDefinitionStages.WithFrontendPort.fromFrontendPort(int)
  parent: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateDefinitionStages.WithFrontendPort
  href: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateDefinitionStages.WithFrontendPort.yml
  name: fromFrontendPort(int port)
  nameWithType: HasFrontendPort.UpdateDefinitionStages.WithFrontendPort<ReturnT>.fromFrontendPort(int port)
  fullName: com.microsoft.azure.management.network.model.HasFrontendPort.UpdateDefinitionStages.WithFrontendPort<ReturnT>.fromFrontendPort(int port)
  type: Method
  summary: "<p>Specifies the frontend port to receive network traffic on. </p>"
  syntax:
    content: public ReturnT fromFrontendPort(int port)
    parameters:
    - id: port
      type: f75371fa
      description: <p>a port number </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasBackendPort.UpdateDefinitionStages.WithBackendPort.toBackendPort(int)
  parent: com.microsoft.azure.management.network.model.HasBackendPort.UpdateDefinitionStages.WithBackendPort
  href: com.microsoft.azure.management.network.model.HasBackendPort.UpdateDefinitionStages.WithBackendPort.yml
  name: toBackendPort(int port)
  nameWithType: HasBackendPort.UpdateDefinitionStages.WithBackendPort<ReturnT>.toBackendPort(int port)
  fullName: com.microsoft.azure.management.network.model.HasBackendPort.UpdateDefinitionStages.WithBackendPort<ReturnT>.toBackendPort(int port)
  type: Method
  summary: "<p>Specifies a backend port to send network traffic to. </p>\r\n<p>If not specified, the same backend port number is assumed as that used by the frontend. </p>"
  syntax:
    content: public ReturnT toBackendPort(int port)
    parameters:
    - id: port
      type: f75371fa
      description: <p>a port number </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.withFloatingIP(boolean)
  parent: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP
  href: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.yml
  name: withFloatingIP(boolean enabled)
  nameWithType: HasFloatingIP.UpdateDefinitionStages.WithFloatingIP<ReturnT>.withFloatingIP(boolean enabled)
  fullName: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP<ReturnT>.withFloatingIP(boolean enabled)
  type: Method
  summary: "<p>Sets the floating IP enablement. </p>"
  syntax:
    content: public ReturnT withFloatingIP(boolean enabled)
    parameters:
    - id: enabled
      type: 4fc6e284
      description: <p>true if floating IP should be enabled </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.withFloatingIPDisabled()
  parent: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP
  href: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.yml
  name: withFloatingIPDisabled()
  nameWithType: HasFloatingIP.UpdateDefinitionStages.WithFloatingIP<ReturnT>.withFloatingIPDisabled()
  fullName: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP<ReturnT>.withFloatingIPDisabled()
  type: Method
  summary: "<p>Disables floating IP support. </p>"
  syntax:
    content: public ReturnT withFloatingIPDisabled()
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.withFloatingIPEnabled()
  parent: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP
  href: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP.yml
  name: withFloatingIPEnabled()
  nameWithType: HasFloatingIP.UpdateDefinitionStages.WithFloatingIP<ReturnT>.withFloatingIPEnabled()
  fullName: com.microsoft.azure.management.network.model.HasFloatingIP.UpdateDefinitionStages.WithFloatingIP<ReturnT>.withFloatingIPEnabled()
  type: Method
  summary: "<p>Enables floating IP support. </p>"
  syntax:
    content: public ReturnT withFloatingIPEnabled()
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithIdleTimeout.withIdleTimeoutInMinutes(int)
  parent: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithIdleTimeout
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithIdleTimeout.yml
  name: withIdleTimeoutInMinutes(int minutes)
  nameWithType: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithIdleTimeout<ParentT>.withIdleTimeoutInMinutes(int minutes)
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithIdleTimeout<ParentT>.withIdleTimeoutInMinutes(int minutes)
  type: Method
  summary: "<p>Specifies the idle connection timeout in minutes. </p>"
  syntax:
    content: public WithAttach<ParentT> withIdleTimeoutInMinutes(int minutes)
    parameters:
    - id: minutes
      type: f75371fa
      description: <p>a number of minutes </p>
    return:
      type: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttachda8a2936
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.model.HasProtocol.UpdateDefinitionStages.WithProtocol.withProtocol(ProtocolT)
  parent: com.microsoft.azure.management.network.model.HasProtocol.UpdateDefinitionStages.WithProtocol
  href: com.microsoft.azure.management.network.model.HasProtocol.UpdateDefinitionStages.WithProtocol.yml
  name: withProtocol(ProtocolT protocol)
  nameWithType: HasProtocol.UpdateDefinitionStages.WithProtocol<ReturnT,ProtocolT>.withProtocol(ProtocolT protocol)
  fullName: ReturnT com.microsoft.azure.management.network.model.HasProtocol<ProtocolT>.UpdateDefinitionStages.WithProtocol<ReturnT, ProtocolT>.withProtocol(ProtocolT protocol)
  type: Method
  summary: "<p>Specifies the transport protocol. </p>"
  syntax:
    content: public ReturnT withProtocol(ProtocolT protocol)
    parameters:
    - id: protocol
      type: b528dcf3
      description: <p>a transport protocol </p>
    return:
      type: c1a5ebc4
      description: <p>the next stage of the definition </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank.yml
  name: LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank<ParentT>
  nameWithType: LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank<ParentT>
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.Blank<ParentT>
  type: Interface
  summary: "<p>The first stage of the inbound NAT rule definition. </p>"
  syntax:
    content: public interface Blank<ParentT> extends LoadBalancerInboundNatRule.UpdateDefinitionStages.WithProtocol<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithProtocol
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithProtocol.yml
  name: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithProtocol<ParentT>
  nameWithType: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithProtocol<ParentT>
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithProtocol<ParentT>
  type: Interface
  summary: "<p>The stage of an inbound NAT rule definition allowing to specify the transport protocol. </p>"
  syntax:
    content: public interface WithProtocol<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontend
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontend.yml
  name: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontend<ParentT>
  nameWithType: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontend<ParentT>
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontend<ParentT>
  type: Interface
  summary: "<p>The stage of an inbound NAT rule definition allowing to specify a frontend for the rule to apply to. </p>"
  syntax:
    content: public interface WithFrontend<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontendPort
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontendPort.yml
  name: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontendPort<ParentT>
  nameWithType: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontendPort<ParentT>
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithFrontendPort<ParentT>
  type: Interface
  summary: "<p>The stage of an inbound NAT rule definition allowing to specify the frontend port. </p>"
  syntax:
    content: public interface WithFrontendPort<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
- uid: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttach
  parent: com.microsoft.azure.management.network
  href: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttach.yml
  name: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttach<ParentT>
  nameWithType: LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttach<ParentT>
  fullName: com.microsoft.azure.management.network.LoadBalancerInboundNatRule.UpdateDefinitionStages.WithAttach<ParentT>
  type: Interface
  summary: "<p>The final stage of the inbound NAT rule definition. </p>\r\n<p>At this stage, any remaining optional settings can be specified, or the inbound NAT rule definition can be attached to the parent load balancer definition. </p>"
  syntax:
    content: public interface WithAttach<ParentT>
    typeParameters:
    - id: ParentT
      type: 18a275b1
      description: <p>the stage of the parent definition to return to after attaching this definition </p>
