### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.bald()
  name: bald()
  nameWithType: Hair.bald()
  returns:
    description: <p>the bald value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the bald value.</p>

    <p></p>
  syntax: public double bald()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.bald()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.hairColor()
  name: hairColor()
  nameWithType: Hair.hairColor()
  returns:
    description: <p>the hairColor value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.HairColor?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.HairColor&text=HairColor" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the hairColor value.</p>

    <p></p>
  syntax: public List<HairColor> hairColor()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.hairColor()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.invisible()
  name: invisible()
  nameWithType: Hair.invisible()
  returns:
    description: <p>the invisible value </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the invisible value.</p>

    <p></p>
  syntax: public boolean invisible()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.invisible()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.withBald(double bald)
  name: withBald(double bald)
  nameWithType: Hair.withBald(double bald)
  parameters:
  - description: <p>the bald value to set </p>
    name: bald
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Hair object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair&text=Hair" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the bald value.</p>

    <p></p>
  syntax: public Hair withBald(double bald)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.withBald(double)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.withHairColor(List<HairColor> hairColor)
  name: withHairColor(List<HairColor> hairColor)
  nameWithType: Hair.withHairColor(List<HairColor> hairColor)
  parameters:
  - description: <p>the hairColor value to set </p>
    name: hairColor
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.HairColor?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.HairColor&text=HairColor" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the Hair object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair&text=Hair" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the hairColor value.</p>

    <p></p>
  syntax: public Hair withHairColor(List<HairColor> hairColor)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.withHairColor(List<HairColor>)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.withInvisible(boolean invisible)
  name: withInvisible(boolean invisible)
  nameWithType: Hair.withInvisible(boolean invisible)
  parameters:
  - description: <p>the invisible value to set </p>
    name: invisible
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Hair object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair&text=Hair" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the invisible value.</p>

    <p></p>
  syntax: public Hair withInvisible(boolean invisible)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair.withInvisible(boolean)
nameWithType: Hair
syntax: public class Hair
type: class
uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair
fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Hair
name: Hair
package: com.microsoft.azure.cognitiveservices.vision.faceapi.models
summary: <p>Properties describing hair attributes. </p>
metadata: {}
