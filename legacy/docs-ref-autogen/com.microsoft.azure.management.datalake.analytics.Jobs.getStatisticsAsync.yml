### YamlMime:JavaMember
nameWithType: Jobs.getStatisticsAsync
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.Jobs.getStatisticsAsync(String accountName, UUID jobIdentity)
  name: getStatisticsAsync(String accountName, UUID jobIdentity)
  nameWithType: Jobs.getStatisticsAsync(String accountName, UUID jobIdentity)
  parameters:
  - description: <p>The Azure Data Lake Analytics account to execute job operations on. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Job Information ID. </p>
    name: jobIdentity
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the JobStatistics object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.JobStatistics?alt=com.microsoft.azure.management.datalake.analytics.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets statistics of the specified job.</p>

    <p></p>
  syntax: public Observable<JobStatistics> getStatisticsAsync(String accountName, UUID jobIdentity)
  uid: com.microsoft.azure.management.datalake.analytics.Jobs.getStatisticsAsync(String,UUID)
- fullName: com.microsoft.azure.management.datalake.analytics.Jobs.getStatisticsAsync(String accountName, UUID jobIdentity, final ServiceCallback<JobStatistics> serviceCallback)
  name: getStatisticsAsync(String accountName, UUID jobIdentity, final ServiceCallback<JobStatistics> serviceCallback)
  nameWithType: Jobs.getStatisticsAsync(String accountName, UUID jobIdentity, final ServiceCallback<JobStatistics> serviceCallback)
  parameters:
  - description: <p>The Azure Data Lake Analytics account to execute job operations on. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Job Information ID. </p>
    name: jobIdentity
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.JobStatistics?alt=com.microsoft.azure.management.datalake.analytics.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.datalake.analytics.models.JobStatistics?alt=com.microsoft.azure.management.datalake.analytics.models.JobStatistics&text=JobStatistics" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets statistics of the specified job.</p>

    <p></p>
  syntax: public ServiceFuture<JobStatistics> getStatisticsAsync(String accountName, UUID jobIdentity, final ServiceCallback<JobStatistics> serviceCallback)
  uid: com.microsoft.azure.management.datalake.analytics.Jobs.getStatisticsAsync(String,UUID,final ServiceCallback<JobStatistics>)
uid: com.microsoft.azure.management.datalake.analytics.Jobs.getStatisticsAsync*
fullName: com.microsoft.azure.management.datalake.analytics.Jobs.getStatisticsAsync(String accountName, UUID jobIdentity)
name: getStatisticsAsync(String accountName, UUID jobIdentity)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
