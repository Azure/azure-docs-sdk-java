### YamlMime:JavaType
fields:
- field:
    type: final <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.compute.PowerState.DEALLOCATED
  name: DEALLOCATED
  nameWithType: PowerState.DEALLOCATED
  summary: <p>Static value PowerState/deallocated for PowerState. </p>
  syntax: public static final PowerState DEALLOCATED= fromString("PowerState/deallocated")
  uid: com.microsoft.azure.management.compute.PowerState.DEALLOCATED
- field:
    type: final <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.compute.PowerState.DEALLOCATING
  name: DEALLOCATING
  nameWithType: PowerState.DEALLOCATING
  summary: <p>Static value PowerState/deallocating for PowerState. </p>
  syntax: public static final PowerState DEALLOCATING= fromString("PowerState/deallocating")
  uid: com.microsoft.azure.management.compute.PowerState.DEALLOCATING
- field:
    type: final <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.compute.PowerState.RUNNING
  name: RUNNING
  nameWithType: PowerState.RUNNING
  summary: <p>Static value PowerState/running for PowerState. </p>
  syntax: public static final PowerState RUNNING= fromString("PowerState/running")
  uid: com.microsoft.azure.management.compute.PowerState.RUNNING
- field:
    type: final <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.compute.PowerState.STARTING
  name: STARTING
  nameWithType: PowerState.STARTING
  summary: <p>Static value PowerState/starting for PowerState. </p>
  syntax: public static final PowerState STARTING= fromString("PowerState/starting")
  uid: com.microsoft.azure.management.compute.PowerState.STARTING
- field:
    type: final <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.compute.PowerState.STOPPED
  name: STOPPED
  nameWithType: PowerState.STOPPED
  summary: <p>Static value PowerState/stopped for PowerState. </p>
  syntax: public static final PowerState STOPPED= fromString("PowerState/stopped")
  uid: com.microsoft.azure.management.compute.PowerState.STOPPED
- field:
    type: final <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.compute.PowerState.STOPPING
  name: STOPPING
  nameWithType: PowerState.STOPPING
  summary: <p>Static value PowerState/stopping for PowerState. </p>
  syntax: public static final PowerState STOPPING= fromString("PowerState/stopping")
  uid: com.microsoft.azure.management.compute.PowerState.STOPPING
- field:
    type: final <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.management.compute.PowerState.UNKNOWN
  name: UNKNOWN
  nameWithType: PowerState.UNKNOWN
  summary: <p>Static value PowerState/unknown for PowerState. </p>
  syntax: public static final PowerState UNKNOWN= fromString("PowerState/unknown")
  uid: com.microsoft.azure.management.compute.PowerState.UNKNOWN
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum?alt=com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum&text=ExpandableStringEnum%3CT%3E" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.equals(Object)
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.fromString(String,Class<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.hashCode()
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.toString()
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.values(Class<T>)
- com.microsoft.azure.management.resources.fluentcore.arm.ExpandableStringEnum.withNameValue(String,T,Class<T>)
methods:
- fullName: com.microsoft.azure.management.compute.PowerState.fromInstanceView(VirtualMachineInstanceView virtualMachineInstanceView)
  name: fromInstanceView(VirtualMachineInstanceView virtualMachineInstanceView)
  nameWithType: PowerState.fromInstanceView(VirtualMachineInstanceView virtualMachineInstanceView)
  parameters:
  - description: <p>the virtual machine instance view </p>
    name: virtualMachineInstanceView
    type: <xref href="com.microsoft.azure.management.compute.VirtualMachineInstanceView?alt=com.microsoft.azure.management.compute.VirtualMachineInstanceView&text=VirtualMachineInstanceView" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the PowerState </p>
    type: <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of PowerState from the virtual machine instance view status entry corresponding to the power state.</p>

    <p></p>
  syntax: public static PowerState fromInstanceView(VirtualMachineInstanceView virtualMachineInstanceView)
  uid: com.microsoft.azure.management.compute.PowerState.fromInstanceView(VirtualMachineInstanceView)
- fullName: com.microsoft.azure.management.compute.PowerState.fromString(String name)
  name: fromString(String name)
  nameWithType: PowerState.fromString(String name)
  parameters:
  - description: <p>the value of the power state </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a PowerState instance </p>
    type: <xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>
  summary: <p>Finds or creates a PowerState value. </p>
  syntax: public static PowerState fromString(String name)
  uid: com.microsoft.azure.management.compute.PowerState.fromString(String)
- fullName: com.microsoft.azure.management.compute.PowerState.values()
  name: values()
  nameWithType: PowerState.values()
  returns:
    description: <p>all known power states </p>
    type: Collection&lt;<xref href="com.microsoft.azure.management.compute.PowerState?alt=com.microsoft.azure.management.compute.PowerState&text=PowerState" data-throw-if-not-resolved="False"/>&gt;
  syntax: public static Collection<PowerState> values()
  uid: com.microsoft.azure.management.compute.PowerState.values()
nameWithType: PowerState
syntax: public class PowerState extends ExpandableStringEnum<PowerState>
type: class
uid: com.microsoft.azure.management.compute.PowerState
fullName: com.microsoft.azure.management.compute.PowerState
name: PowerState
package: com.microsoft.azure.management.compute
summary: <p>Possible power states of a virtual machine. </p>
metadata: {}
