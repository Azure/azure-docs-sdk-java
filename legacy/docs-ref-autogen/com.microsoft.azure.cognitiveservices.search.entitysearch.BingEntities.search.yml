### YamlMime:JavaMember
nameWithType: BingEntities.search
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.search.entitysearch.BingEntities.search()
  name: search()
  nameWithType: BingEntities.search()
  returns:
    description: <p>the first stage of the search call </p>
    type: <xref href="BingEntitiesSearchDefinitionStages.WithQuery?alt=BingEntitiesSearchDefinitionStages.WithQuery&text=BingEntitiesSearchDefinitionStages.WithQuery" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. Place results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. Place in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax: public BingEntitiesSearchDefinitionStages.WithQuery search()
  uid: com.microsoft.azure.cognitiveservices.search.entitysearch.BingEntities.search()
- fullName: com.microsoft.azure.cognitiveservices.search.entitysearch.BingEntities.search(String query, SearchOptionalParameter searchOptionalParameter)
  name: search(String query, SearchOptionalParameter searchOptionalParameter)
  nameWithType: BingEntities.search(String query, SearchOptionalParameter searchOptionalParameter)
  parameters:
  - description: <p>The user's search term. </p>
    name: query
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: searchOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.search.entitysearch.models.SearchOptionalParameter?alt=com.microsoft.azure.cognitiveservices.search.entitysearch.models.SearchOptionalParameter&text=SearchOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the SearchResponse object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.entitysearch.models.SearchResponse?alt=com.microsoft.azure.cognitiveservices.search.entitysearch.models.SearchResponse&text=SearchResponse" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The Entity Search API lets you send a search query to Bing and get back search results that include entities and places. Place results include restaurants, hotel, or other local businesses. For places, the query can specify the name of the local business or it can ask for a list (for example, restaurants near me). Entity results include persons, places, or things. Place in this context is tourist attractions, states, countries, etc.</p>

    <p></p>
  syntax: public SearchResponse search(String query, SearchOptionalParameter searchOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.search.entitysearch.BingEntities.search(String,SearchOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.search.entitysearch.BingEntities.search*
fullName: com.microsoft.azure.cognitiveservices.search.entitysearch.BingEntities.search()
name: search()
package: com.microsoft.azure.cognitiveservices.search.entitysearch
metadata: {}
