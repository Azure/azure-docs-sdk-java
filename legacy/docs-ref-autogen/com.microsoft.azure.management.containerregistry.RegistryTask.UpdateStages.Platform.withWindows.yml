### YamlMime:JavaMember
nameWithType: RegistryTask.UpdateStages.Platform.withWindows
type: method
members:
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows()
  name: withWindows()
  nameWithType: RegistryTask.UpdateStages.Platform.withWindows()
  returns:
    description: <p>the next stage of the container registry task update. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.Update?alt=com.microsoft.azure.management.containerregistry.RegistryTask.Update&text=RegistryTask.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Windows OS system for the platform.</p>

    <p></p>
  syntax: public Update withWindows()
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows()
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows(Architecture architecture)
  name: withWindows(Architecture architecture)
  nameWithType: RegistryTask.UpdateStages.Platform.withWindows(Architecture architecture)
  parameters:
  - description: <p>the CPU architecture </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task update. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.Update?alt=com.microsoft.azure.management.containerregistry.RegistryTask.Update&text=RegistryTask.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Windows OS system and architecture for the platform.</p>

    <p></p>
  syntax: public Update withWindows(Architecture architecture)
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows(Architecture)
- fullName: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows(Architecture architecture, Variant variant)
  name: withWindows(Architecture architecture, Variant variant)
  nameWithType: RegistryTask.UpdateStages.Platform.withWindows(Architecture architecture, Variant variant)
  parameters:
  - description: <p>the CPU architecture. </p>
    name: architecture
    type: <xref href="com.microsoft.azure.management.containerregistry.Architecture?alt=com.microsoft.azure.management.containerregistry.Architecture&text=Architecture" data-throw-if-not-resolved="False"/>
  - description: <p>the CPU variant. </p>
    name: variant
    type: <xref href="com.microsoft.azure.management.containerregistry.Variant?alt=com.microsoft.azure.management.containerregistry.Variant&text=Variant" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the container registry task update. </p>
    type: <xref href="com.microsoft.azure.management.containerregistry.RegistryTask.Update?alt=com.microsoft.azure.management.containerregistry.RegistryTask.Update&text=RegistryTask.Update" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The function that specifies a Windows OS system, architecture, and CPU variant.</p>

    <p></p>
  syntax: public Update withWindows(Architecture architecture, Variant variant)
  uid: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows(Architecture,Variant)
uid: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows*
fullName: com.microsoft.azure.management.containerregistry.RegistryTask.UpdateStages.Platform.withWindows()
name: withWindows()
package: com.microsoft.azure.management.containerregistry
metadata: {}
