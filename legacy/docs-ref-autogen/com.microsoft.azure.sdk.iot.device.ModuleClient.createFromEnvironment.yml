### YamlMime:JavaMember
nameWithType: ModuleClient.createFromEnvironment
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel)
  name: createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel)
  nameWithType: ModuleClient.createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel)
  parameters:
  - description: <p>the implementation of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnixDomainSocketChannel"></xref> interface that will be used if any unix domain socket communication is required. May be null if no unix domain socket communication is required. If this argument is null and unix domain socket communication is required, this method will through an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IllegalArgumentException"></xref>. To check if unix domain socket communication is required for your Edge runtime, check its "IOTEDGE_WORKLOADURI" environment variable. If it is not present, or its value is prefixed with "HTTP" or "HTTPS", then no unix domain socket communication is required, and this argument can be set to null. If its value is present and is prefixed with "unix", then unix domain socket communication will be required, and this argument must not be null. </p>
    name: unixDomainSocketChannel
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel?alt=com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel&text=UnixDomainSocketChannel" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubClientException?alt=IotHubClientException&text=IotHubClientException" data-throw-if-not-resolved="False"/>
    description: <p>if the module client cannot be created </p>
  returns:
    description: <p>the created module client instance </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.ModuleClient?alt=com.microsoft.azure.sdk.iot.device.ModuleClient&text=ModuleClient" data-throw-if-not-resolved="False"/>
  summary: <p>Create a module client instance from your environment variables </p>
  syntax: public static ModuleClient createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel)
  uid: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(UnixDomainSocketChannel)
- fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol)
  name: createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol)
  nameWithType: ModuleClient.createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol)
  parameters:
  - description: <p>the implementation of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnixDomainSocketChannel"></xref> interface that will be used if any unix domain socket communication is required. May be null if no unix domain socket communication is required. If this argument is null and unix domain socket communication is required, this method will through an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IllegalArgumentException"></xref>. To check if unix domain socket communication is required for your Edge runtime, check its "IOTEDGE_WORKLOADURI" environment variable. If it is not present, or its value is prefixed with "HTTP" or "HTTPS", then no unix domain socket communication is required, and this argument can be set to null. If its value is present and is prefixed with "unix", then unix domain socket communication will be required, and this argument must not be null. </p>
    name: unixDomainSocketChannel
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel?alt=com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel&text=UnixDomainSocketChannel" data-throw-if-not-resolved="False"/>
  - description: <p>the protocol the module client instance will use </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubClientException?alt=IotHubClientException&text=IotHubClientException" data-throw-if-not-resolved="False"/>
    description: <p>if the module client cannot be created </p>
  returns:
    description: <p>the created module client instance </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.ModuleClient?alt=com.microsoft.azure.sdk.iot.device.ModuleClient&text=ModuleClient" data-throw-if-not-resolved="False"/>
  summary: <p>Create a module client instance from your environment variables </p>
  syntax: public static ModuleClient createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol)
  uid: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(UnixDomainSocketChannel,IotHubClientProtocol)
- fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol, ClientOptions clientOptions)
  name: createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol, ClientOptions clientOptions)
  nameWithType: ModuleClient.createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol, ClientOptions clientOptions)
  parameters:
  - description: <p>the implementation of the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="UnixDomainSocketChannel"></xref> interface that will be used if any unix domain socket communication is required. May be null if no unix domain socket communication is required. If this argument is null and unix domain socket communication is required, this method will through an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IllegalArgumentException"></xref>. To check if unix domain socket communication is required for your Edge runtime, check its "IOTEDGE_WORKLOADURI" environment variable. If it is not present, or its value is prefixed with "HTTP" or "HTTPS", then no unix domain socket communication is required, and this argument can be set to null. If its value is present and is prefixed with "unix", then unix domain socket communication will be required, and this argument must not be null. </p>
    name: unixDomainSocketChannel
    type: <xref href="com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel?alt=com.microsoft.azure.sdk.iot.device.hsm.UnixDomainSocketChannel&text=UnixDomainSocketChannel" data-throw-if-not-resolved="False"/>
  - description: <p>the protocol the module client instance will use </p>
    name: protocol
    type: <xref href="com.microsoft.azure.sdk.iot.device.IotHubClientProtocol?alt=com.microsoft.azure.sdk.iot.device.IotHubClientProtocol&text=IotHubClientProtocol" data-throw-if-not-resolved="False"/>
  - description: <p>The options that allow configuration of the module client instance during initialization </p>
    name: clientOptions
    type: <xref href="com.microsoft.azure.sdk.iot.device.ClientOptions?alt=com.microsoft.azure.sdk.iot.device.ClientOptions&text=ClientOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubClientException?alt=IotHubClientException&text=IotHubClientException" data-throw-if-not-resolved="False"/>
    description: <p>if the module client cannot be created </p>
  returns:
    description: <p>the created module client instance </p>
    type: <xref href="com.microsoft.azure.sdk.iot.device.ModuleClient?alt=com.microsoft.azure.sdk.iot.device.ModuleClient&text=ModuleClient" data-throw-if-not-resolved="False"/>
  summary: <p>Create a module client instance from your environment variables </p>
  syntax: public static ModuleClient createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel, IotHubClientProtocol protocol, ClientOptions clientOptions)
  uid: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment(UnixDomainSocketChannel,IotHubClientProtocol,ClientOptions)
uid: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment*
fullName: com.microsoft.azure.sdk.iot.device.ModuleClient.createFromEnvironment
name: createFromEnvironment(UnixDomainSocketChannel unixDomainSocketChannel)
package: com.microsoft.azure.sdk.iot.device
metadata: {}
