### YamlMime:JavaMember
nameWithType: MessagingClient.open
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open()
  name: open()
  nameWithType: MessagingClient.open()
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level exceptions occur such as an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IotHubUnauthorizedException"></xref>. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If any network level exceptions occur such as the connection timing out. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If this thread is interrupted while waiting for the connection to the service to open. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the connection is not established before the default timeout. </p>
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Open this client so that it can begin sending cloud to device and/or cloud to module messages. Once opened, you should call <xref uid="com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.close()" data-throw-if-not-resolved="false" data-raw-source="close()"></xref> once no more messages will be sent in order to free up network resources. If this client is already open, then this function will do nothing.</p>

    <p></p>
  syntax: public synchronized void open()
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open()
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open(int timeoutMilliseconds)
  name: open(int timeoutMilliseconds)
  nameWithType: MessagingClient.open(int timeoutMilliseconds)
  parameters:
  - description: <p>the maximum number of milliseconds to wait for the underlying amqp connection to open. If this value is 0, it will have an infinite timeout. </p>
    name: timeoutMilliseconds
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IotHubException?alt=IotHubException&text=IotHubException" data-throw-if-not-resolved="False"/>
    description: <p>If any IoT Hub level exceptions occur such as an <xref uid="" data-throw-if-not-resolved="false" data-raw-source="IotHubUnauthorizedException"></xref>. </p>
  - type: <xref href="IOException?alt=IOException&text=IOException" data-throw-if-not-resolved="False"/>
    description: <p>If any network level exceptions occur such as the connection timing out. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>If this thread is interrupted while waiting for the connection to the service to open. </p>
  - type: <xref href="TimeoutException?alt=TimeoutException&text=TimeoutException" data-throw-if-not-resolved="False"/>
    description: <p>If the connection is not established before the provided timeout. </p>
  returns:
    type: <xref href="synchronized+void?alt=synchronized+void&text=synchronized+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Open this client so that it can begin sending cloud to device and/or cloud to module messages. Once opened, this client should call <xref uid="com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.close()" data-throw-if-not-resolved="false" data-raw-source="close()"></xref> once no more messages will be sent in order to free up network resources. If this client is already open, then this function will do nothing.</p>

    <p></p>
  syntax: public synchronized void open(int timeoutMilliseconds)
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open(int)
uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open*
fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.open
name: open()
package: com.microsoft.azure.sdk.iot.service.messaging
metadata: {}
