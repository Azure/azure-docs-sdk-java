### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.MetricsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  name: MetricsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  nameWithType: MetricsInner.MetricsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  parameters:
  - description: <p>the Retrofit instance built from a Retrofit Builder. </p>
    name: retrofit
    type: <xref href="Retrofit?alt=Retrofit&text=Retrofit" data-throw-if-not-resolved="False"/>
  - description: <p>the instance of the service client containing this operation class. </p>
    name: client
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl?alt=com.microsoft.azure.management.monitor.implementation.MonitorManagementClientImpl&text=MonitorManagementClientImpl" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes an instance of MetricsInner.</p>

    <p></p>
  syntax: public MetricsInner(Retrofit retrofit, MonitorManagementClientImpl client)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.MetricsInner(Retrofit,MonitorManagementClientImpl)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.list(String resourceUri)
  name: list(String resourceUri)
  nameWithType: MetricsInner.list(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ResponseInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public ResponseInner list(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.list(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.list(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  name: list(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  nameWithType: MetricsInner.list(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The names of the metrics (comma separated) to retrieve. </p>
    name: metricnames
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of aggregation types (comma separated) to retrieve. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. </p>
    name: top
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: '<p>The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. </p>'
    name: orderby
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A = a1 and B = b1 or b2&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A = a1, B = b1 and C = c1:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A = a1&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Reduces the set of data collected. The syntax allowed depends on the operation. See the operation's description for details. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  - description: <p>Metric namespace to query metric definitions for. </p>
    name: metricnamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the ResponseInner object if successful. </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public ResponseInner list(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.list(String,String,Period,String,String,Integer,String,String,ResultType,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String resourceUri)
  name: listAsync(String resourceUri)
  nameWithType: MetricsInner.listAsync(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ResponseInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public Observable<ResponseInner> listAsync(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String resourceUri, final ServiceCallback<ResponseInner> serviceCallback)
  name: listAsync(String resourceUri, final ServiceCallback<ResponseInner> serviceCallback)
  nameWithType: MetricsInner.listAsync(String resourceUri, final ServiceCallback<ResponseInner> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public ServiceFuture<ResponseInner> listAsync(String resourceUri, final ServiceCallback<ResponseInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String,final ServiceCallback<ResponseInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  name: listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  nameWithType: MetricsInner.listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The names of the metrics (comma separated) to retrieve. </p>
    name: metricnames
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of aggregation types (comma separated) to retrieve. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. </p>
    name: top
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: '<p>The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. </p>'
    name: orderby
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A = a1 and B = b1 or b2&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A = a1, B = b1 and C = c1:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A = a1&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Reduces the set of data collected. The syntax allowed depends on the operation. See the operation's description for details. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  - description: <p>Metric namespace to query metric definitions for. </p>
    name: metricnamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ResponseInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public Observable<ResponseInner> listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String,String,Period,String,String,Integer,String,String,ResultType,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, final ServiceCallback<ResponseInner> serviceCallback)
  name: listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, final ServiceCallback<ResponseInner> serviceCallback)
  nameWithType: MetricsInner.listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, final ServiceCallback<ResponseInner> serviceCallback)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The names of the metrics (comma separated) to retrieve. </p>
    name: metricnames
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of aggregation types (comma separated) to retrieve. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. </p>
    name: top
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: '<p>The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. </p>'
    name: orderby
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A = a1 and B = b1 or b2&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A = a1, B = b1 and C = c1:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A = a1&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Reduces the set of data collected. The syntax allowed depends on the operation. See the operation's description for details. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  - description: <p>Metric namespace to query metric definitions for. </p>
    name: metricnamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public ServiceFuture<ResponseInner> listAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace, final ServiceCallback<ResponseInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.listAsync(String,String,Period,String,String,Integer,String,String,ResultType,String,final ServiceCallback<ResponseInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.listWithServiceResponseAsync(String resourceUri)
  name: listWithServiceResponseAsync(String resourceUri)
  nameWithType: MetricsInner.listWithServiceResponseAsync(String resourceUri)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ResponseInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ResponseInner>> listWithServiceResponseAsync(String resourceUri)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.listWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner.listWithServiceResponseAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  name: listWithServiceResponseAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  nameWithType: MetricsInner.listWithServiceResponseAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  parameters:
  - description: <p>The identifier of the resource. </p>
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The names of the metrics (comma separated) to retrieve. </p>
    name: metricnames
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of aggregation types (comma separated) to retrieve. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The maximum number of records to retrieve. Valid only if $filter is specified. Defaults to 10. </p>
    name: top
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  - description: '<p>The aggregation to use for sorting results and the direction of the sort. Only one order can be specified. Examples: sum asc. </p>'
    name: orderby
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The **$filter** is used to reduce the set of metric data returned.&lt;br&gt;Example:&lt;br&gt;Metric contains metadata A, B and C.&lt;br&gt;- Return all time series of C where A = a1 and B = b1 or b2&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**&lt;br&gt;- Invalid variant:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B = ‘b2’**&lt;br&gt;This is invalid because the logical or operator cannot separate two different metadata names.&lt;br&gt;- Return all time series where A = a1, B = b1 and C = c1:&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**&lt;br&gt;- Return all time series where A = a1&lt;br&gt;**$filter=A eq ‘a1’ and B eq ‘*’ and C eq ‘*’**. </p>
    name: filter
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Reduces the set of data collected. The syntax allowed depends on the operation. See the operation's description for details. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  - description: <p>Metric namespace to query metric definitions for. </p>
    name: metricnamespace
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the ResponseInner object </p>
    type: Observable&lt;ServiceResponse&lt;<xref href="com.microsoft.azure.management.monitor.implementation.ResponseInner?alt=com.microsoft.azure.management.monitor.implementation.ResponseInner&text=ResponseInner" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>**Lists the metric values for a resource**.</p>

    <p></p>
  syntax: public Observable<ServiceResponse<ResponseInner>> listWithServiceResponseAsync(String resourceUri, String timespan, Period interval, String metricnames, String aggregation, Integer top, String orderby, String filter, ResultType resultType, String metricnamespace)
  uid: com.microsoft.azure.management.monitor.implementation.MetricsInner.listWithServiceResponseAsync(String,String,Period,String,String,Integer,String,String,ResultType,String)
nameWithType: MetricsInner
syntax: public class MetricsInner
type: class
uid: com.microsoft.azure.management.monitor.implementation.MetricsInner
fullName: com.microsoft.azure.management.monitor.implementation.MetricsInner
name: MetricsInner
package: com.microsoft.azure.management.monitor.implementation
summary: <p>An instance of this class provides access to all the operations defined in Metrics. </p>
metadata: {}
