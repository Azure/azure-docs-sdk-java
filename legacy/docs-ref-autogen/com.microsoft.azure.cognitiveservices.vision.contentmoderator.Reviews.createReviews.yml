### YamlMime:JavaMember
nameWithType: Reviews.createReviews
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.createReviews()
  name: createReviews()
  nameWithType: Reviews.createReviews()
  returns:
    description: <p>the first stage of the createReviews call </p>
    type: <xref href="ReviewsCreateReviewsDefinitionStages.WithTeamName?alt=ReviewsCreateReviewsDefinitionStages.WithTeamName&text=ReviewsCreateReviewsDefinitionStages.WithTeamName" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing, results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint. &lt;h3&gt;CallBack Schemas &lt;/h3&gt; &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt; &lt;p&gt; {&lt;br/&gt; "ReviewId": "&amp;lt;Review Id&amp;gt;",&lt;br/&gt; "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt; "ModifiedBy": "&amp;lt;Name of the Reviewer&amp;gt;",&lt;br/&gt; "CallBackType": "Review",&lt;br/&gt; "ContentId": "&amp;lt;The ContentId that was specified input&amp;gt;",&lt;br/&gt; "Metadata": {&lt;br/&gt; "adultscore": "0.xxx",&lt;br/&gt; "a": "False",&lt;br/&gt; "racyscore": "0.xxx",&lt;br/&gt; "r": "True"&lt;br/&gt; },&lt;br/&gt; "ReviewerResultTags": {&lt;br/&gt; "a": "False",&lt;br/&gt; "r": "True"&lt;br/&gt; }&lt;br/&gt; }&lt;br/&gt; &lt;/p&gt;.</p>

    <p></p>
  syntax: public ReviewsCreateReviewsDefinitionStages.WithTeamName createReviews()
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.createReviews()
- fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.createReviews(String teamName, String urlContentType, List<CreateReviewBodyItem> createReviewBody, CreateReviewsOptionalParameter createReviewsOptionalParameter)
  name: createReviews(String teamName, String urlContentType, List<CreateReviewBodyItem> createReviewBody, CreateReviewsOptionalParameter createReviewsOptionalParameter)
  nameWithType: Reviews.createReviews(String teamName, String urlContentType, List<CreateReviewBodyItem> createReviewBody, CreateReviewsOptionalParameter createReviewsOptionalParameter)
  parameters:
  - description: <p>Your team name. </p>
    name: teamName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The content type. </p>
    name: urlContentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Body for create reviews API. </p>
    name: createReviewBody
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.CreateReviewBodyItem&text=CreateReviewBodyItem" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: createReviewsOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.CreateReviewsOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.CreateReviewsOptionalParameter&text=CreateReviewsOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="APIErrorException?alt=APIErrorException&text=APIErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;String&gt; object if successful. </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing, results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint. &lt;h3&gt;CallBack Schemas &lt;/h3&gt; &lt;h4&gt;Review Completion CallBack Sample&lt;/h4&gt; &lt;p&gt; {&lt;br/&gt; "ReviewId": "&amp;lt;Review Id&amp;gt;",&lt;br/&gt; "ModifiedOn": "2016-10-11T22:36:32.9934851Z",&lt;br/&gt; "ModifiedBy": "&amp;lt;Name of the Reviewer&amp;gt;",&lt;br/&gt; "CallBackType": "Review",&lt;br/&gt; "ContentId": "&amp;lt;The ContentId that was specified input&amp;gt;",&lt;br/&gt; "Metadata": {&lt;br/&gt; "adultscore": "0.xxx",&lt;br/&gt; "a": "False",&lt;br/&gt; "racyscore": "0.xxx",&lt;br/&gt; "r": "True"&lt;br/&gt; },&lt;br/&gt; "ReviewerResultTags": {&lt;br/&gt; "a": "False",&lt;br/&gt; "r": "True"&lt;br/&gt; }&lt;br/&gt; }&lt;br/&gt; &lt;/p&gt;.</p>

    <p></p>
  syntax: public List<String> createReviews(String teamName, String urlContentType, List<CreateReviewBodyItem> createReviewBody, CreateReviewsOptionalParameter createReviewsOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.createReviews(String,String,List<CreateReviewBodyItem>,CreateReviewsOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.createReviews*
fullName: com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews.createReviews
name: createReviews()
package: com.microsoft.azure.cognitiveservices.vision.contentmoderator
metadata: {}
