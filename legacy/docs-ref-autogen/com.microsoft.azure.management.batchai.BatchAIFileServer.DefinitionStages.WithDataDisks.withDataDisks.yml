### YamlMime:JavaMember
nameWithType: BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks
type: method
members:
- fullName: com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType)
  name: withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType)
  nameWithType: BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType)
  parameters:
  - description: <p>initial disk size in GB for blank data disks </p>
    name: diskSizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>number of data disks to be attached to the VM. RAID level 0 will be applied in the case of multiple disks. </p>
    name: diskCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>type of storage account to be used on the disk </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.batchai.StorageAccountType?alt=com.microsoft.azure.management.batchai.StorageAccountType&text=StorageAccountType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithVMSize?alt=com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithVMSize&text=BatchAIFileServer.DefinitionStages.WithVMSize" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies settings for the data disks which would be created for the file server. </p>
  syntax: public WithVMSize withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType)
  uid: com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks(int,int,StorageAccountType)
- fullName: com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, CachingType cachingType)
  name: withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, CachingType cachingType)
  nameWithType: BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, CachingType cachingType)
  parameters:
  - description: <p>initial disk size in GB for blank data disks. </p>
    name: diskSizeInGB
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>number of data disks to be attached to the VM. RAID level 0 will be applied in the case of multiple disks. </p>
    name: diskCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  - description: <p>type of storage account to be used on the disk </p>
    name: storageAccountType
    type: <xref href="com.microsoft.azure.management.batchai.StorageAccountType?alt=com.microsoft.azure.management.batchai.StorageAccountType&text=StorageAccountType" data-throw-if-not-resolved="False"/>
  - description: <p>caching type </p>
    name: cachingType
    type: <xref href="com.microsoft.azure.management.batchai.CachingType?alt=com.microsoft.azure.management.batchai.CachingType&text=CachingType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the definition </p>
    type: <xref href="com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithVMSize?alt=com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithVMSize&text=BatchAIFileServer.DefinitionStages.WithVMSize" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies settings for the data disks which would be created for the file server. </p>
  syntax: public WithVMSize withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType, CachingType cachingType)
  uid: com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks(int,int,StorageAccountType,CachingType)
uid: com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks*
fullName: com.microsoft.azure.management.batchai.BatchAIFileServer.DefinitionStages.WithDataDisks.withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType)
name: withDataDisks(int diskSizeInGB, int diskCount, StorageAccountType storageAccountType)
package: com.microsoft.azure.management.batchai
metadata: {}
