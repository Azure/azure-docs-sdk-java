### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.base64EncodedCertificate()
  name: base64EncodedCertificate()
  nameWithType: CertificateImportParameters.base64EncodedCertificate()
  returns:
    description: <p>the base64EncodedCertificate value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the base64EncodedCertificate value.</p>

    <p></p>
  syntax: public String base64EncodedCertificate()
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.base64EncodedCertificate()
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.certificateAttributes()
  name: certificateAttributes()
  nameWithType: CertificateImportParameters.certificateAttributes()
  returns:
    description: <p>the certificateAttributes value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateAttributes?alt=com.microsoft.azure.keyvault.models.CertificateAttributes&text=CertificateAttributes" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the certificateAttributes value.</p>

    <p></p>
  syntax: public CertificateAttributes certificateAttributes()
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.certificateAttributes()
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.certificatePolicy()
  name: certificatePolicy()
  nameWithType: CertificateImportParameters.certificatePolicy()
  returns:
    description: <p>the certificatePolicy value </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the certificatePolicy value.</p>

    <p></p>
  syntax: public CertificatePolicy certificatePolicy()
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.certificatePolicy()
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.password()
  name: password()
  nameWithType: CertificateImportParameters.password()
  returns:
    description: <p>the password value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the password value.</p>

    <p></p>
  syntax: public String password()
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.password()
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.tags()
  name: tags()
  nameWithType: CertificateImportParameters.tags()
  returns:
    description: <p>the tags value </p>
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the tags value.</p>

    <p></p>
  syntax: public Map<String, String> tags()
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.tags()
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.withBase64EncodedCertificate(String base64EncodedCertificate)
  name: withBase64EncodedCertificate(String base64EncodedCertificate)
  nameWithType: CertificateImportParameters.withBase64EncodedCertificate(String base64EncodedCertificate)
  parameters:
  - description: <p>the base64EncodedCertificate value to set </p>
    name: base64EncodedCertificate
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateImportParameters object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateImportParameters?alt=com.microsoft.azure.keyvault.models.CertificateImportParameters&text=CertificateImportParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the base64EncodedCertificate value.</p>

    <p></p>
  syntax: public CertificateImportParameters withBase64EncodedCertificate(String base64EncodedCertificate)
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.withBase64EncodedCertificate(String)
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.withCertificateAttributes(CertificateAttributes certificateAttributes)
  name: withCertificateAttributes(CertificateAttributes certificateAttributes)
  nameWithType: CertificateImportParameters.withCertificateAttributes(CertificateAttributes certificateAttributes)
  parameters:
  - description: <p>the certificateAttributes value to set </p>
    name: certificateAttributes
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateAttributes?alt=com.microsoft.azure.keyvault.models.CertificateAttributes&text=CertificateAttributes" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateImportParameters object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateImportParameters?alt=com.microsoft.azure.keyvault.models.CertificateImportParameters&text=CertificateImportParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the certificateAttributes value.</p>

    <p></p>
  syntax: public CertificateImportParameters withCertificateAttributes(CertificateAttributes certificateAttributes)
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.withCertificateAttributes(CertificateAttributes)
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.withCertificatePolicy(CertificatePolicy certificatePolicy)
  name: withCertificatePolicy(CertificatePolicy certificatePolicy)
  nameWithType: CertificateImportParameters.withCertificatePolicy(CertificatePolicy certificatePolicy)
  parameters:
  - description: <p>the certificatePolicy value to set </p>
    name: certificatePolicy
    type: <xref href="com.microsoft.azure.keyvault.models.CertificatePolicy?alt=com.microsoft.azure.keyvault.models.CertificatePolicy&text=CertificatePolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateImportParameters object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateImportParameters?alt=com.microsoft.azure.keyvault.models.CertificateImportParameters&text=CertificateImportParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the certificatePolicy value.</p>

    <p></p>
  syntax: public CertificateImportParameters withCertificatePolicy(CertificatePolicy certificatePolicy)
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.withCertificatePolicy(CertificatePolicy)
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.withPassword(String password)
  name: withPassword(String password)
  nameWithType: CertificateImportParameters.withPassword(String password)
  parameters:
  - description: <p>the password value to set </p>
    name: password
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateImportParameters object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateImportParameters?alt=com.microsoft.azure.keyvault.models.CertificateImportParameters&text=CertificateImportParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the password value.</p>

    <p></p>
  syntax: public CertificateImportParameters withPassword(String password)
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.withPassword(String)
- fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters.withTags(Map<String, String> tags)
  name: withTags(Map<String, String> tags)
  nameWithType: CertificateImportParameters.withTags(Map<String, String> tags)
  parameters:
  - description: <p>the tags value to set </p>
    name: tags
    type: <xref href="Map%3CString%2C+String%3E?alt=Map%3CString%2C+String%3E&text=Map%3CString%2C+String%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CertificateImportParameters object itself. </p>
    type: <xref href="com.microsoft.azure.keyvault.models.CertificateImportParameters?alt=com.microsoft.azure.keyvault.models.CertificateImportParameters&text=CertificateImportParameters" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the tags value.</p>

    <p></p>
  syntax: public CertificateImportParameters withTags(Map<String, String> tags)
  uid: com.microsoft.azure.keyvault.models.CertificateImportParameters.withTags(Map<String, String>)
nameWithType: CertificateImportParameters
syntax: public class CertificateImportParameters
type: class
uid: com.microsoft.azure.keyvault.models.CertificateImportParameters
fullName: com.microsoft.azure.keyvault.models.CertificateImportParameters
name: CertificateImportParameters
package: com.microsoft.azure.keyvault.models
summary: <p>The certificate import parameters. </p>
metadata: {}
