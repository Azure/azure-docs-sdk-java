### YamlMime:JavaType
constructors:
- fullName: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.IntuneAppProtectionPolicyRequiredException(final String msg, String accountUpn, String accountUserId, String tenantId, String authorityUrl)
  name: IntuneAppProtectionPolicyRequiredException(final String msg, String accountUpn, String accountUserId, String tenantId, String authorityUrl)
  nameWithType: IntuneAppProtectionPolicyRequiredException.IntuneAppProtectionPolicyRequiredException(final String msg, String accountUpn, String accountUserId, String tenantId, String authorityUrl)
  parameters:
  - description: <p>Details related to the error such as query string, request info </p>
    name: msg
    type: <xref href="final+String?alt=final+String&text=final+String" data-throw-if-not-resolved="False"/>
  - description: <p>The UPN of the account, needed for Intune MAM enrollment. </p>
    name: accountUpn
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The unique ID of the account, needed for Intune MAM enrollment. </p>
    name: accountUserId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The tenant ID, needed of Intune MAM enrollment. </p>
    name: tenantId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The authority URL, used by Intune MAM enrollment to support sovereign clouds. If null, default public cloud will be used. </p>
    name: authorityUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public IntuneAppProtectionPolicyRequiredException(final String msg, String accountUpn, String accountUserId, String tenantId, String authorityUrl)
  uid: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.IntuneAppProtectionPolicyRequiredException(final String,String,String,String,String)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Exception" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.aad.adal.AuthenticationException?alt=com.microsoft.aad.adal.AuthenticationException&text=AuthenticationException" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.aad.adal.AuthenticationException.AuthenticationException()
- com.microsoft.aad.adal.AuthenticationException.AuthenticationException(ADALError)
- com.microsoft.aad.adal.AuthenticationException.AuthenticationException(ADALError,String)
- com.microsoft.aad.adal.AuthenticationException.AuthenticationException(ADALError,String,Throwable)
- com.microsoft.aad.adal.AuthenticationException.AuthenticationException(ADALError,String,HttpWebResponse)
- com.microsoft.aad.adal.AuthenticationException.AuthenticationException(ADALError,String,HttpWebResponse,Throwable)
- com.microsoft.aad.adal.AuthenticationException.getCode()
- com.microsoft.aad.adal.AuthenticationException.getHttpResponseBody()
- com.microsoft.aad.adal.AuthenticationException.getHttpResponseHeaders()
- com.microsoft.aad.adal.AuthenticationException.getLocalizedMessage(Context)
- com.microsoft.aad.adal.AuthenticationException.getMessage()
- com.microsoft.aad.adal.AuthenticationException.getServiceStatusCode()
methods:
- fullName: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getAccountUpn()
  name: getAccountUpn()
  nameWithType: IntuneAppProtectionPolicyRequiredException.getAccountUpn()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getAccountUpn()
  uid: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getAccountUpn()
- fullName: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getAccountUserId()
  name: getAccountUserId()
  nameWithType: IntuneAppProtectionPolicyRequiredException.getAccountUserId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getAccountUserId()
  uid: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getAccountUserId()
- fullName: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getAuthorityURL()
  name: getAuthorityURL()
  nameWithType: IntuneAppProtectionPolicyRequiredException.getAuthorityURL()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getAuthorityURL()
  uid: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getAuthorityURL()
- fullName: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getTenantId()
  name: getTenantId()
  nameWithType: IntuneAppProtectionPolicyRequiredException.getTenantId()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String getTenantId()
  uid: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException.getTenantId()
nameWithType: IntuneAppProtectionPolicyRequiredException
syntax: public class IntuneAppProtectionPolicyRequiredException extends AuthenticationException
type: class
uid: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException
fullName: com.microsoft.aad.adal.IntuneAppProtectionPolicyRequiredException
name: IntuneAppProtectionPolicyRequiredException
package: com.microsoft.aad.adal
metadata: {}
