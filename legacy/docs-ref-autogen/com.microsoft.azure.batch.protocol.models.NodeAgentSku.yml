### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.NodeAgentSku.id()
  name: id()
  nameWithType: NodeAgentSku.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the id value.</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.batch.protocol.models.NodeAgentSku.id()
- fullName: com.microsoft.azure.batch.protocol.models.NodeAgentSku.osType()
  name: osType()
  nameWithType: NodeAgentSku.osType()
  returns:
    description: <p>the osType value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.OSType?alt=com.microsoft.azure.batch.protocol.models.OSType&text=OSType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'linux', 'windows'.</p>

    <p></p>
  syntax: public OSType osType()
  uid: com.microsoft.azure.batch.protocol.models.NodeAgentSku.osType()
- fullName: com.microsoft.azure.batch.protocol.models.NodeAgentSku.verifiedImageReferences()
  name: verifiedImageReferences()
  nameWithType: NodeAgentSku.verifiedImageReferences()
  returns:
    description: <p>the verifiedImageReferences value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ImageReference?alt=com.microsoft.azure.batch.protocol.models.ImageReference&text=ImageReference" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get this collection is not exhaustive (the node agent may be compatible with other images).</p>

    <p></p>
  syntax: public List<ImageReference> verifiedImageReferences()
  uid: com.microsoft.azure.batch.protocol.models.NodeAgentSku.verifiedImageReferences()
- fullName: com.microsoft.azure.batch.protocol.models.NodeAgentSku.withId(String id)
  name: withId(String id)
  nameWithType: NodeAgentSku.withId(String id)
  parameters:
  - description: <p>the id value to set </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the NodeAgentSku object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.NodeAgentSku?alt=com.microsoft.azure.batch.protocol.models.NodeAgentSku&text=NodeAgentSku" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the id value.</p>

    <p></p>
  syntax: public NodeAgentSku withId(String id)
  uid: com.microsoft.azure.batch.protocol.models.NodeAgentSku.withId(String)
- fullName: com.microsoft.azure.batch.protocol.models.NodeAgentSku.withOsType(OSType osType)
  name: withOsType(OSType osType)
  nameWithType: NodeAgentSku.withOsType(OSType osType)
  parameters:
  - description: <p>the osType value to set </p>
    name: osType
    type: <xref href="com.microsoft.azure.batch.protocol.models.OSType?alt=com.microsoft.azure.batch.protocol.models.OSType&text=OSType" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the NodeAgentSku object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.NodeAgentSku?alt=com.microsoft.azure.batch.protocol.models.NodeAgentSku&text=NodeAgentSku" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set possible values include: 'linux', 'windows'.</p>

    <p></p>
  syntax: public NodeAgentSku withOsType(OSType osType)
  uid: com.microsoft.azure.batch.protocol.models.NodeAgentSku.withOsType(OSType)
- fullName: com.microsoft.azure.batch.protocol.models.NodeAgentSku.withVerifiedImageReferences(List<ImageReference> verifiedImageReferences)
  name: withVerifiedImageReferences(List<ImageReference> verifiedImageReferences)
  nameWithType: NodeAgentSku.withVerifiedImageReferences(List<ImageReference> verifiedImageReferences)
  parameters:
  - description: <p>the verifiedImageReferences value to set </p>
    name: verifiedImageReferences
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ImageReference?alt=com.microsoft.azure.batch.protocol.models.ImageReference&text=ImageReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the NodeAgentSku object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.NodeAgentSku?alt=com.microsoft.azure.batch.protocol.models.NodeAgentSku&text=NodeAgentSku" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this collection is not exhaustive (the node agent may be compatible with other images).</p>

    <p></p>
  syntax: public NodeAgentSku withVerifiedImageReferences(List<ImageReference> verifiedImageReferences)
  uid: com.microsoft.azure.batch.protocol.models.NodeAgentSku.withVerifiedImageReferences(List<ImageReference>)
nameWithType: NodeAgentSku
syntax: public class NodeAgentSku
type: class
uid: com.microsoft.azure.batch.protocol.models.NodeAgentSku
fullName: com.microsoft.azure.batch.protocol.models.NodeAgentSku
name: NodeAgentSku
package: com.microsoft.azure.batch.protocol.models
summary: <p>A node agent SKU supported by the Batch service. The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. </p>
metadata: {}
