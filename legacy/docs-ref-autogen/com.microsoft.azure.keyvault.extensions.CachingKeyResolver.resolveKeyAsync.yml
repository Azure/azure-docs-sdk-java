### YamlMime:JavaMember
nameWithType: CachingKeyResolver.resolveKeyAsync
type: method
members:
- fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync(String kid)
  name: resolveKeyAsync(String kid)
  nameWithType: CachingKeyResolver.resolveKeyAsync(String kid)
  overridden: com.microsoft.azure.keyvault.core.IKeyResolver.resolveKeyAsync(String)
  parameters:
  - description: <p>The key identifier to resolve. </p>
    name: kid
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A ListenableFuture containing the resolved IKey </p>
    type: ListenableFuture&lt;<xref href="com.microsoft.azure.keyvault.core.IKey?alt=com.microsoft.azure.keyvault.core.IKey&text=IKey" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Retrieves an IKey implementation for the specified key identifier. Implementations should check the format of the kid to ensure that it is recognized. Null, rather than an exception, should be returned for unrecognized key identifiers to enable chaining of key resolvers.</p>

    <p></p>
  syntax: public ListenableFuture<IKey> resolveKeyAsync(String kid)
  uid: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync(String)
uid: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync*
fullName: com.microsoft.azure.keyvault.extensions.CachingKeyResolver.resolveKeyAsync(String kid)
name: resolveKeyAsync(String kid)
package: com.microsoft.azure.keyvault.extensions
metadata: {}
