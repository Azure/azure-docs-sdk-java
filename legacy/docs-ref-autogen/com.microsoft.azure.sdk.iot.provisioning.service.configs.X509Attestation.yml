### YamlMime:JavaType
constructors:
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.X509Attestation(X509Attestation)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation&text=Attestation" data-throw-if-not-resolved="False"/>
methods:
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromCAReferences(String)
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromCAReferences(String,String)
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromClientCertificates(String)
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromClientCertificates(String,String)
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates(String)
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates(String,String)
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getCAReferences()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getCAReferencesFinal()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getClientCertificates()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getClientCertificatesFinal()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getRootCertificates()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getRootCertificatesFinal()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()
nameWithType: X509Attestation
syntax: public class X509Attestation extends Attestation
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation
name: X509Attestation
package: com.microsoft.azure.sdk.iot.provisioning.service.configs
summary: >-
  <p>Representation of a single Device Provisioning Service X509 Attestation.</p>

  <p>The provisioning service supports Device Identifier Composition Engine, or DICE, as the device attestation mechanism. To use DICE, user must provide the X509 certificate. This class provide the means to create a new attestation for a X509 certificate and return it as an abstract interface <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation" data-throw-if-not-resolved="false">Attestation</xref>.</p>

  <p>An X509 attestation can contains one of the 3 types of certificate:</p>

  <p>

    <variablelist>

      <varlistentry>

        <b>Client or Alias certificate:</b>

      </varlistentry>

      <li>

        <p>Called on this class as clientCertificates, this certificate can authenticate a single device. </p>

      </li>

      <varlistentry>

        <b>Signing or Root certificate:</b>

      </varlistentry>

      <li>

        <p>Called on this class as rootCertificates, this certificate can create multiple Client certificates to authenticate multiple devices. </p>

      </li>

      <varlistentry>

        <b>CA Reference:</b>

      </varlistentry>

      <li>

        <p>Called on this class as X509CAReferences, this is a CA reference for a rootCertificate that can create multiple Client certificates to authenticate multiple devices. </p>

      </li>

    </variablelist>

  </p>

  <p>The provisioning service allows user to create <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref>. For all operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.IndividualEnrollment" data-throw-if-not-resolved="false">IndividualEnrollment</xref> with <b>DICE</b>, user must provide a <b>clientCertificates</b>, and for operations over <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup" data-throw-if-not-resolved="false">EnrollmentGroup</xref>, user must provide a <b>rootCertificates</b> or a <b>X509CAReferences</b>.</p>

  <p>For each of this types of certificates, user can provide 2 Certificates, a primary and a secondary. Only the primary is mandatory, the secondary is optional.</p>

  <p>The provisioning service will process the provided certificates, but will never return it back. Instead of it, <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getPrimaryX509CertificateInfo()" data-throw-if-not-resolved="false">getPrimaryX509CertificateInfo()</xref> and <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.getSecondaryX509CertificateInfo()" data-throw-if-not-resolved="false">getSecondaryX509CertificateInfo()</xref> will return the certificate information for the certificates.</p>

  <p></p>
metadata: {}
