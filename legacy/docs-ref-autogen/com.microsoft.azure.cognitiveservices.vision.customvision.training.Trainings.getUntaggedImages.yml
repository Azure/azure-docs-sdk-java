### YamlMime:JavaMember
nameWithType: Trainings.getUntaggedImages
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()
  name: getUntaggedImages()
  nameWithType: Trainings.getUntaggedImages()
  returns:
    description: <p>the first stage of the getUntaggedImages call </p>
    type: <xref href="TrainingsGetUntaggedImagesDefinitionStages.WithProjectId?alt=TrainingsGetUntaggedImagesDefinitionStages.WithProjectId&text=TrainingsGetUntaggedImagesDefinitionStages.WithProjectId" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>

    <p></p>
  syntax: public TrainingsGetUntaggedImagesDefinitionStages.WithProjectId getUntaggedImages()
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()
- fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  name: getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  nameWithType: Trainings.getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  parameters:
  - description: <p>The project id. </p>
    name: projectId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>the object representing the optional parameters to be set before calling this API </p>
    name: getUntaggedImagesOptionalParameter
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.GetUntaggedImagesOptionalParameter&text=GetUntaggedImagesOptionalParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CustomVisionErrorException?alt=CustomVisionErrorException&text=CustomVisionErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the List&lt;Image&gt; object if successful. </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image?alt=com.microsoft.azure.cognitiveservices.vision.customvision.training.models.Image&text=Image" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get untagged images for a given project iteration. This API supports batching and range selection. By default it will only return first 50 images matching images. Use the {take} and {skip} parameters to control how many images to return in a given batch.</p>

    <p></p>
  syntax: public List<Image> getUntaggedImages(UUID projectId, GetUntaggedImagesOptionalParameter getUntaggedImagesOptionalParameter)
  uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages(UUID,GetUntaggedImagesOptionalParameter)
uid: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages*
fullName: com.microsoft.azure.cognitiveservices.vision.customvision.training.Trainings.getUntaggedImages()
name: getUntaggedImages()
package: com.microsoft.azure.cognitiveservices.vision.customvision.training
metadata: {}
