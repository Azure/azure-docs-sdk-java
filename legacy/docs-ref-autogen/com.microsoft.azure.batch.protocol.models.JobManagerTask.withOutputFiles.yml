### YamlMime:JavaMember
nameWithType: JobManagerTask.withOutputFiles
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles(List<OutputFile> outputFiles)
  name: withOutputFiles(List<OutputFile> outputFiles)
  nameWithType: JobManagerTask.withOutputFiles(List<OutputFile> outputFiles)
  parameters:
  - description: <p>the outputFiles value to set </p>
    name: outputFiles
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.OutputFile?alt=com.microsoft.azure.batch.protocol.models.OutputFile&text=OutputFile" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the JobManagerTask object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobManagerTask?alt=com.microsoft.azure.batch.protocol.models.JobManagerTask&text=JobManagerTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for multi-instance tasks, the files will only be uploaded from the compute node on which the primary task is executed.</p>

    <p></p>
  syntax: public JobManagerTask withOutputFiles(List<OutputFile> outputFiles)
  uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles(List<OutputFile>)
uid: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles*
fullName: com.microsoft.azure.batch.protocol.models.JobManagerTask.withOutputFiles(List<OutputFile> outputFiles)
name: withOutputFiles(List<OutputFile> outputFiles)
package: com.microsoft.azure.batch.protocol.models
metadata: {}
