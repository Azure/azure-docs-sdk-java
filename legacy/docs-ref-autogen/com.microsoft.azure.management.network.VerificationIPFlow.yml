### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.Executable.execute()
- com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync()
- com.microsoft.azure.management.resources.fluentcore.model.Executable.executeAsync(final ServiceCallback<T>)
- com.microsoft.azure.management.resources.fluentcore.model.Indexable.key()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
methods:
- fullName: com.microsoft.azure.management.network.VerificationIPFlow.access()
  name: access()
  nameWithType: VerificationIPFlow.access()
  returns:
    description: <p>the access value </p>
    type: <xref href="com.microsoft.azure.management.network.Access?alt=com.microsoft.azure.management.network.Access&text=Access" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the access value. Indicates whether the traffic is allowed or denied. Possible values include: 'Allow', 'Deny'.</p>

    <p></p>
  syntax: public Access access()
  uid: com.microsoft.azure.management.network.VerificationIPFlow.access()
- fullName: com.microsoft.azure.management.network.VerificationIPFlow.ruleName()
  name: ruleName()
  nameWithType: VerificationIPFlow.ruleName()
  returns:
    description: <p>the ruleName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ruleName value. If input is not matched against any security rule, it is not displayed.</p>

    <p></p>
  syntax: public String ruleName()
  uid: com.microsoft.azure.management.network.VerificationIPFlow.ruleName()
nameWithType: VerificationIPFlow
syntax: public interface VerificationIPFlow extends Executable<VerificationIPFlow>,HasParent<NetworkWatcher>
type: interface
uid: com.microsoft.azure.management.network.VerificationIPFlow
fullName: com.microsoft.azure.management.network.VerificationIPFlow
name: VerificationIPFlow
package: com.microsoft.azure.management.network
summary: <p>A client-side reperesentation allowing to verify IP packet flow from specific vm based on direction, protocol, local IP, remote IP, local port and remote port. </p>
metadata: {}
