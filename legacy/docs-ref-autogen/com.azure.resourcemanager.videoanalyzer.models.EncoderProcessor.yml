### YamlMime:JavaType
uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor"
fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor"
name: "EncoderProcessor"
nameWithType: "EncoderProcessor"
summary: "Encoder processor allows for encoding of the input content."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.NodeBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.NodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.NodeBase&text=NodeBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.NodeBase.name()?alt=com.azure.resourcemanager.videoanalyzer.models.NodeBase.name&text=name\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase&text=ProcessorNodeBase\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.inputs()?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.inputs&text=inputs\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.validate()?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.validate&text=validate\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.withInputs&text=withInputs\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.withName(java.lang.String)?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.withName&text=withName\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **EncoderProcessor**</br> extends <xref href=\"com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase?alt=com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase&text=ProcessorNodeBase\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.EncoderProcessor()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.EncoderProcessor()"
  name: "EncoderProcessor()"
  nameWithType: "EncoderProcessor.EncoderProcessor()"
  syntax: "public EncoderProcessor()"
methods:
- uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.preset()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.preset()"
  name: "preset()"
  nameWithType: "EncoderProcessor.preset()"
  summary: "Get the preset property: The encoder preset, which defines the recipe or instructions on how the input content should be processed."
  syntax: "public EncoderPresetBase preset()"
  desc: "Get the preset property: The encoder preset, which defines the recipe or instructions on how the input content should be processed."
  returns:
    description: "the preset value."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EncoderPresetBase?alt=com.azure.resourcemanager.videoanalyzer.models.EncoderPresetBase&text=EncoderPresetBase\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.validate()"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.validate()"
  name: "validate()"
  nameWithType: "EncoderProcessor.validate()"
  summary: "Validates the instance."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.validate()"
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withInputs(List<NodeInput> inputs)"
  name: "withInputs(List<NodeInput> inputs)"
  nameWithType: "EncoderProcessor.withInputs(List<NodeInput> inputs)"
  summary: "Set the inputs property: An array of upstream node references within the topology to be used as inputs for this node."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.withInputs(java.util.List<com.azure.resourcemanager.videoanalyzer.models.NodeInput>)"
  parameters:
  - name: "inputs"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<xref href=\"com.azure.resourcemanager.videoanalyzer.models.NodeInput?alt=com.azure.resourcemanager.videoanalyzer.models.NodeInput&text=NodeInput\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public EncoderProcessor withInputs(List<NodeInput> inputs)"
  desc: "Set the inputs property: An array of upstream node references within the topology to be used as inputs for this node."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor?alt=com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor&text=EncoderProcessor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withName(java.lang.String)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withName(String name)"
  name: "withName(String name)"
  nameWithType: "EncoderProcessor.withName(String name)"
  summary: "Set the name property: Node name."
  overridden: "com.azure.resourcemanager.videoanalyzer.models.ProcessorNodeBase.withName(java.lang.String)"
  parameters:
  - name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public EncoderProcessor withName(String name)"
  desc: "Set the name property: Node name. Must be unique within the topology."
  returns:
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor?alt=com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor&text=EncoderProcessor\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withPreset(com.azure.resourcemanager.videoanalyzer.models.EncoderPresetBase)"
  fullName: "com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor.withPreset(EncoderPresetBase preset)"
  name: "withPreset(EncoderPresetBase preset)"
  nameWithType: "EncoderProcessor.withPreset(EncoderPresetBase preset)"
  summary: "Set the preset property: The encoder preset, which defines the recipe or instructions on how the input content should be processed."
  parameters:
  - description: "the preset value to set."
    name: "preset"
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EncoderPresetBase?alt=com.azure.resourcemanager.videoanalyzer.models.EncoderPresetBase&text=EncoderPresetBase\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EncoderProcessor withPreset(EncoderPresetBase preset)"
  desc: "Set the preset property: The encoder preset, which defines the recipe or instructions on how the input content should be processed."
  returns:
    description: "the EncoderProcessor object itself."
    type: "<xref href=\"com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor?alt=com.azure.resourcemanager.videoanalyzer.models.EncoderProcessor&text=EncoderProcessor\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Encoder processor allows for encoding of the input content. For example, it can used to change the resolution from 4K to 1280x720."
metadata: {}
package: "com.azure.resourcemanager.videoanalyzer.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-videoanalyzer:1.0.0-beta.5
