### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.ResponseBase" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Identifiable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Response" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Answer" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer&text=SearchResultsAnswer" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cognitiveservices.search.websearch.models.Answer.followUpQueries()
- com.microsoft.azure.cognitiveservices.search.websearch.models.Identifiable.id()
- com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer.isFamilyFriendly()
- com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer.queryContext()
- com.microsoft.azure.cognitiveservices.search.websearch.models.SearchResultsAnswer.totalEstimatedMatches()
- com.microsoft.azure.cognitiveservices.search.websearch.models.Response.webSearchUrl()
methods:
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions.value()
  name: value()
  nameWithType: SpellSuggestions.value()
  returns:
    description: <p>the value value </p>
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Query?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.Query&text=Query" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the value value.</p>

    <p></p>
  syntax: public List<Query> value()
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions.value()
- fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions.withValue(List<Query> value)
  name: withValue(List<Query> value)
  nameWithType: SpellSuggestions.withValue(List<Query> value)
  parameters:
  - description: <p>the value value to set </p>
    name: value
    type: List&lt;<xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.Query?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.Query&text=Query" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the SpellSuggestions object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions?alt=com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions&text=SpellSuggestions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the value value.</p>

    <p></p>
  syntax: public SpellSuggestions withValue(List<Query> value)
  uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions.withValue(List<Query>)
nameWithType: SpellSuggestions
syntax: public class SpellSuggestions extends SearchResultsAnswer
type: class
uid: com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions
fullName: com.microsoft.azure.cognitiveservices.search.websearch.models.SpellSuggestions
name: SpellSuggestions
package: com.microsoft.azure.cognitiveservices.search.websearch.models
summary: <p>Defines a suggested query string that likely represents the user's intent. The search results include this response if Bing determines that the user may have intended to search for something different. For example, if the user searches for alon brown, Bing may determine that the user likely intended to search for Alton Brown instead (based on past searches by others of Alon Brown). </p>
metadata: {}
