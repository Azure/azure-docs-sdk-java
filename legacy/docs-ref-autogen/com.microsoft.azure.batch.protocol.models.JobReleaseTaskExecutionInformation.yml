### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.containerInfo()
  name: containerInfo()
  nameWithType: JobReleaseTaskExecutionInformation.containerInfo()
  returns:
    description: <p>the containerInfo value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the task runs in a container context.</p>

    <p></p>
  syntax: public TaskContainerExecutionInformation containerInfo()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.containerInfo()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.endTime()
  name: endTime()
  nameWithType: JobReleaseTaskExecutionInformation.endTime()
  returns:
    description: <p>the endTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the task is in the Completed state.</p>

    <p></p>
  syntax: public DateTime endTime()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.endTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.exitCode()
  name: exitCode()
  nameWithType: JobReleaseTaskExecutionInformation.exitCode()
  returns:
    description: <p>the exitCode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.</p>

    <p></p>
  syntax: public Integer exitCode()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.exitCode()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.failureInfo()
  name: failureInfo()
  nameWithType: JobReleaseTaskExecutionInformation.failureInfo()
  returns:
    description: <p>the failureInfo value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the task is in the completed state and encountered a failure.</p>

    <p></p>
  syntax: public TaskFailureInformation failureInfo()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.failureInfo()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.result()
  name: result()
  nameWithType: JobReleaseTaskExecutionInformation.result()
  returns:
    description: <p>the result value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'.</p>

    <p></p>
  syntax: public TaskExecutionResult result()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.result()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.startTime()
  name: startTime()
  nameWithType: JobReleaseTaskExecutionInformation.startTime()
  returns:
    description: <p>the startTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if the task has been restarted or retried, this is the most recent time at which the task started running.</p>

    <p></p>
  syntax: public DateTime startTime()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.startTime()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.state()
  name: state()
  nameWithType: JobReleaseTaskExecutionInformation.state()
  returns:
    description: <p>the state value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskState?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskState&text=JobReleaseTaskState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'running', 'completed'.</p>

    <p></p>
  syntax: public JobReleaseTaskState state()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.state()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectory()
  name: taskRootDirectory()
  nameWithType: JobReleaseTaskExecutionInformation.taskRootDirectory()
  returns:
    description: <p>the taskRootDirectory value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the taskRootDirectory value.</p>

    <p></p>
  syntax: public String taskRootDirectory()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectory()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectoryUrl()
  name: taskRootDirectoryUrl()
  nameWithType: JobReleaseTaskExecutionInformation.taskRootDirectoryUrl()
  returns:
    description: <p>the taskRootDirectoryUrl value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the taskRootDirectoryUrl value.</p>

    <p></p>
  syntax: public String taskRootDirectoryUrl()
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.taskRootDirectoryUrl()
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  name: withContainerInfo(TaskContainerExecutionInformation containerInfo)
  nameWithType: JobReleaseTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation containerInfo)
  parameters:
  - description: <p>the containerInfo value to set </p>
    name: containerInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.TaskContainerExecutionInformation&text=TaskContainerExecutionInformation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the task runs in a container context.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withContainerInfo(TaskContainerExecutionInformation containerInfo)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withContainerInfo(TaskContainerExecutionInformation)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withEndTime(DateTime endTime)
  name: withEndTime(DateTime endTime)
  nameWithType: JobReleaseTaskExecutionInformation.withEndTime(DateTime endTime)
  parameters:
  - description: <p>the endTime value to set </p>
    name: endTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the task is in the Completed state.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withEndTime(DateTime endTime)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withEndTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withExitCode(Integer exitCode)
  name: withExitCode(Integer exitCode)
  nameWithType: JobReleaseTaskExecutionInformation.withExitCode(Integer exitCode)
  parameters:
  - description: <p>the exitCode value to set </p>
    name: exitCode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this parameter is returned only if the task is in the completed state. The exit code for a process reflects the specific convention implemented by the application developer for that process. If you use the exit code value to make decisions in your code, be sure that you know the exit code convention used by the application process. Note that the exit code may also be generated by the compute node operating system, such as when a process is forcibly terminated.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withExitCode(Integer exitCode)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withExitCode(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)
  name: withFailureInfo(TaskFailureInformation failureInfo)
  nameWithType: JobReleaseTaskExecutionInformation.withFailureInfo(TaskFailureInformation failureInfo)
  parameters:
  - description: <p>the failureInfo value to set </p>
    name: failureInfo
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskFailureInformation?alt=com.microsoft.azure.batch.protocol.models.TaskFailureInformation&text=TaskFailureInformation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the task is in the completed state and encountered a failure.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withFailureInfo(TaskFailureInformation failureInfo)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withFailureInfo(TaskFailureInformation)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withResult(TaskExecutionResult result)
  name: withResult(TaskExecutionResult result)
  nameWithType: JobReleaseTaskExecutionInformation.withResult(TaskExecutionResult result)
  parameters:
  - description: <p>the result value to set </p>
    name: result
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskExecutionResult?alt=com.microsoft.azure.batch.protocol.models.TaskExecutionResult&text=TaskExecutionResult" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the value is 'failed', then the details of the failure can be found in the failureInfo property. Possible values include: 'success', 'failure'.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withResult(TaskExecutionResult result)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withResult(TaskExecutionResult)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withStartTime(DateTime startTime)
  name: withStartTime(DateTime startTime)
  nameWithType: JobReleaseTaskExecutionInformation.withStartTime(DateTime startTime)
  parameters:
  - description: <p>the startTime value to set </p>
    name: startTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if the task has been restarted or retried, this is the most recent time at which the task started running.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withStartTime(DateTime startTime)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withStartTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withState(JobReleaseTaskState state)
  name: withState(JobReleaseTaskState state)
  nameWithType: JobReleaseTaskExecutionInformation.withState(JobReleaseTaskState state)
  parameters:
  - description: <p>the state value to set </p>
    name: state
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskState?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskState&text=JobReleaseTaskState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set possible values include: 'running', 'completed'.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withState(JobReleaseTaskState state)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withState(JobReleaseTaskState)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectory(String taskRootDirectory)
  name: withTaskRootDirectory(String taskRootDirectory)
  nameWithType: JobReleaseTaskExecutionInformation.withTaskRootDirectory(String taskRootDirectory)
  parameters:
  - description: <p>the taskRootDirectory value to set </p>
    name: taskRootDirectory
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the taskRootDirectory value.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withTaskRootDirectory(String taskRootDirectory)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectory(String)
- fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  name: withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  nameWithType: JobReleaseTaskExecutionInformation.withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  parameters:
  - description: <p>the taskRootDirectoryUrl value to set </p>
    name: taskRootDirectoryUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the JobReleaseTaskExecutionInformation object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation?alt=com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation&text=JobReleaseTaskExecutionInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the taskRootDirectoryUrl value.</p>

    <p></p>
  syntax: public JobReleaseTaskExecutionInformation withTaskRootDirectoryUrl(String taskRootDirectoryUrl)
  uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation.withTaskRootDirectoryUrl(String)
nameWithType: JobReleaseTaskExecutionInformation
syntax: public class JobReleaseTaskExecutionInformation
type: class
uid: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation
fullName: com.microsoft.azure.batch.protocol.models.JobReleaseTaskExecutionInformation
name: JobReleaseTaskExecutionInformation
package: com.microsoft.azure.batch.protocol.models
summary: <p>Contains information about the execution of a Job Release task on a compute node. </p>
metadata: {}
