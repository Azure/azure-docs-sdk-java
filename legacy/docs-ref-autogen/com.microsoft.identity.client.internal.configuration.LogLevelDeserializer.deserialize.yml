### YamlMime:JavaMember
nameWithType: LogLevelDeserializer.deserialize
type: method
members:
- fullName: com.microsoft.identity.client.internal.configuration.LogLevelDeserializer.deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
  name: deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
  nameWithType: LogLevelDeserializer.deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
  parameters:
  - name: json
    type: <xref href="final+JsonElement?alt=final JsonElement&text=final+JsonElement" data-throw-if-not-resolved="False"/>
  - name: typeOfT
    type: <xref href="final+Type?alt=final Type&text=final+Type" data-throw-if-not-resolved="False"/>
  - name: context
    type: <xref href="final+JsonDeserializationContext?alt=final JsonDeserializationContext&text=final+JsonDeserializationContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="Logger.LogLevel?alt=Logger.LogLevel&text=Logger.LogLevel" data-throw-if-not-resolved="False"/>
  syntax: public Logger.LogLevel deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
  uid: com.microsoft.identity.client.internal.configuration.LogLevelDeserializer.deserialize(final JsonElement,final Type,final JsonDeserializationContext)
uid: com.microsoft.identity.client.internal.configuration.LogLevelDeserializer.deserialize*
fullName: com.microsoft.identity.client.internal.configuration.LogLevelDeserializer.deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
name: deserialize(final JsonElement json, final Type typeOfT, final JsonDeserializationContext context)
package: com.microsoft.identity.client.internal.configuration
metadata: {}
