### YamlMime:JavaMember
nameWithType: CloudBlob.deleteIfExists
type: method
members:
- fullName: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()
  name: deleteIfExists()
  nameWithType: CloudBlob.deleteIfExists()
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the blob was deleted; otherwise, <code>false</code>.</p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob if it exists. </p>

    <p>A blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY"></xref> or <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to specify how the snapshots should be handled when the blob is deleted.</p>

    <p></p>
  syntax: public final boolean deleteIfExists()
  uid: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists()
- fullName: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  name: deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  nameWithType: CloudBlob.deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption"></xref> object that indicates whether to delete only snapshots, or the blob and its snapshots. </p>
    name: deleteSnapshotsOption
    type: final <xref href="com.microsoft.azure.storage.blob.DeleteSnapshotsOption?alt=com.microsoft.azure.storage.blob.DeleteSnapshotsOption&text=DeleteSnapshotsOption" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.AccessCondition" data-throw-if-not-resolved="false" data-raw-source="AccessCondition"></xref> object that represents the access conditions for the blob. </p>
    name: accessCondition
    type: final <xref href="com.microsoft.azure.storage.AccessCondition?alt=com.microsoft.azure.storage.AccessCondition&text=AccessCondition" data-throw-if-not-resolved="False"/>
  - description: <p>A <xref uid="com.microsoft.azure.storage.blob.BlobRequestOptions" data-throw-if-not-resolved="false" data-raw-source="BlobRequestOptions"></xref> object that specifies any additional options for the request. Specifying <code>null</code> will use the default request options from the associated service client ( <xref uid="com.microsoft.azure.storage.blob.CloudBlobClient" data-throw-if-not-resolved="false" data-raw-source="CloudBlobClient"></xref>). </p>
    name: options
    type: <xref href="com.microsoft.azure.storage.blob.BlobRequestOptions?alt=com.microsoft.azure.storage.blob.BlobRequestOptions&text=BlobRequestOptions" data-throw-if-not-resolved="False"/>
  - description: <p>An <xref uid="com.microsoft.azure.storage.OperationContext" data-throw-if-not-resolved="false" data-raw-source="OperationContext"></xref> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</p>
    name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="StorageException?alt=StorageException&text=StorageException" data-throw-if-not-resolved="False"/>
    description: <p>If a storage service error occurred. </p>
  returns:
    description: >-
      <p>

        <code>true</code> if the blob existed and was deleted; otherwise, <code>false</code></p>
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Deletes the blob if it exists, using the specified snapshot and request options, and operation context. </p>

    <p>A blob that has snapshots cannot be deleted unless the snapshots are also deleted. If a blob has snapshots, use the <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.DELETE_SNAPSHOTS_ONLY" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#DELETE_SNAPSHOTS_ONLY"></xref> or <xref uid="com.microsoft.azure.storage.blob.DeleteSnapshotsOption.INCLUDE_SNAPSHOTS" data-throw-if-not-resolved="false" data-raw-source="DeleteSnapshotsOption#INCLUDE_SNAPSHOTS"></xref> value in the  parameter to specify how the snapshots should be handled when the blob is deleted.</p>

    <p></p>
  syntax: public final boolean deleteIfExists(final DeleteSnapshotsOption deleteSnapshotsOption, final AccessCondition accessCondition, BlobRequestOptions options, OperationContext opContext)
  uid: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists(final DeleteSnapshotsOption,final AccessCondition,BlobRequestOptions,OperationContext)
uid: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists*
fullName: com.microsoft.azure.storage.blob.CloudBlob.deleteIfExists
name: deleteIfExists()
package: com.microsoft.azure.storage.blob
metadata: {}
