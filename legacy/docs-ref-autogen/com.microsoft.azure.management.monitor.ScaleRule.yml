### YamlMime:JavaType
inheritedMembers:
- com.microsoft.azure.management.resources.fluentcore.model.HasInner.inner()
- com.microsoft.azure.management.resources.fluentcore.arm.models.HasParent.parent()
methods:
- fullName: com.microsoft.azure.management.monitor.ScaleRule.condition()
  name: condition()
  nameWithType: ScaleRule.condition()
  returns:
    description: <p>the operator value </p>
    type: <xref href="com.microsoft.azure.management.monitor.ComparisonOperationType?alt=com.microsoft.azure.management.monitor.ComparisonOperationType&text=ComparisonOperationType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the operator that is used to compare the metric data and the threshold. Possible values include: 'Equals', 'NotEquals', 'GreaterThan', 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual'.</p>

    <p></p>
  syntax: public ComparisonOperationType condition()
  uid: com.microsoft.azure.management.monitor.ScaleRule.condition()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.coolDown()
  name: coolDown()
  nameWithType: ScaleRule.coolDown()
  returns:
    description: <p>the cooldown value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the amount of time to wait since the last scaling action before this action occurs. It must be between 1 week and 1 minute in ISO 8601 format.</p>

    <p></p>
  syntax: public Period coolDown()
  uid: com.microsoft.azure.management.monitor.ScaleRule.coolDown()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.duration()
  name: duration()
  nameWithType: ScaleRule.duration()
  returns:
    description: <p>the timeWindow value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes.</p>

    <p></p>
  syntax: public Period duration()
  uid: com.microsoft.azure.management.monitor.ScaleRule.duration()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.frequency()
  name: frequency()
  nameWithType: ScaleRule.frequency()
  returns:
    description: <p>the timeGrain value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute.</p>

    <p></p>
  syntax: public Period frequency()
  uid: com.microsoft.azure.management.monitor.ScaleRule.frequency()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.frequencyStatistic()
  name: frequencyStatistic()
  nameWithType: ScaleRule.frequencyStatistic()
  returns:
    description: <p>the statistic value </p>
    type: <xref href="com.microsoft.azure.management.monitor.MetricStatisticType?alt=com.microsoft.azure.management.monitor.MetricStatisticType&text=MetricStatisticType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the metric statistic type. How the metrics from multiple instances are combined. Possible values include: 'Average', 'Min', 'Max', 'Sum'.</p>

    <p></p>
  syntax: public MetricStatisticType frequencyStatistic()
  uid: com.microsoft.azure.management.monitor.ScaleRule.frequencyStatistic()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.metricName()
  name: metricName()
  nameWithType: ScaleRule.metricName()
  returns:
    description: <p>the metricName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name of the metric that defines what the rule monitors.</p>

    <p></p>
  syntax: public String metricName()
  uid: com.microsoft.azure.management.monitor.ScaleRule.metricName()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.metricSource()
  name: metricSource()
  nameWithType: ScaleRule.metricSource()
  returns:
    description: <p>the metricResourceUri value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the resource identifier of the resource the rule monitors.</p>

    <p></p>
  syntax: public String metricSource()
  uid: com.microsoft.azure.management.monitor.ScaleRule.metricSource()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.scaleDirection()
  name: scaleDirection()
  nameWithType: ScaleRule.scaleDirection()
  returns:
    description: <p>the direction value </p>
    type: <xref href="com.microsoft.azure.management.monitor.ScaleDirection?alt=com.microsoft.azure.management.monitor.ScaleDirection&text=ScaleDirection" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the scale direction. Whether the scaling action increases or decreases the number of instances. Possible values include: 'None', 'Increase', 'Decrease'.</p>

    <p></p>
  syntax: public ScaleDirection scaleDirection()
  uid: com.microsoft.azure.management.monitor.ScaleRule.scaleDirection()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.scaleInstanceCount()
  name: scaleInstanceCount()
  nameWithType: ScaleRule.scaleInstanceCount()
  returns:
    description: <p>the value value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the number of instances that are involved in the scaling action.</p>

    <p></p>
  syntax: public int scaleInstanceCount()
  uid: com.microsoft.azure.management.monitor.ScaleRule.scaleInstanceCount()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.scaleType()
  name: scaleType()
  nameWithType: ScaleRule.scaleType()
  returns:
    description: <p>the type value </p>
    type: <xref href="com.microsoft.azure.management.monitor.ScaleType?alt=com.microsoft.azure.management.monitor.ScaleType&text=ScaleType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type of action that should occur when the scale rule fires. Possible values include: 'ChangeCount', 'PercentChangeCount', 'ExactCount'.</p>

    <p></p>
  syntax: public ScaleType scaleType()
  uid: com.microsoft.azure.management.monitor.ScaleRule.scaleType()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.threshold()
  name: threshold()
  nameWithType: ScaleRule.threshold()
  returns:
    description: <p>the threshold value </p>
    type: <xref href="double?alt=double&text=double" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the threshold of the metric that triggers the scale action.</p>

    <p></p>
  syntax: public double threshold()
  uid: com.microsoft.azure.management.monitor.ScaleRule.threshold()
- fullName: com.microsoft.azure.management.monitor.ScaleRule.timeAggregation()
  name: timeAggregation()
  nameWithType: ScaleRule.timeAggregation()
  returns:
    description: <p>the timeAggregation value </p>
    type: <xref href="com.microsoft.azure.management.monitor.TimeAggregationType?alt=com.microsoft.azure.management.monitor.TimeAggregationType&text=TimeAggregationType" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the time aggregation type. How the data that is collected should be combined over time. The default value is Average. Possible values include: 'Average', 'Minimum', 'Maximum', 'Total', 'Count'.</p>

    <p></p>
  syntax: public TimeAggregationType timeAggregation()
  uid: com.microsoft.azure.management.monitor.ScaleRule.timeAggregation()
nameWithType: ScaleRule
syntax: public interface ScaleRule extends HasInner<ScaleRuleInner>,HasParent<AutoscaleProfile>
type: interface
uid: com.microsoft.azure.management.monitor.ScaleRule
fullName: com.microsoft.azure.management.monitor.ScaleRule
name: ScaleRule
package: com.microsoft.azure.management.monitor
summary: <p>An immutable client-side representation of an Azure autoscale profile scale rule. </p>
metadata: {}
