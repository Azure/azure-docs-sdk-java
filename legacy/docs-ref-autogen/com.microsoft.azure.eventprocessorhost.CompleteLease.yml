### YamlMime:JavaType
constructors:
- com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease()
- com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease(CompleteLease)
- com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease(String)
fields:
- com.microsoft.azure.eventprocessorhost.CompleteLease.epoch
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Comparable&lt;BaseLease&gt;" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.eventprocessorhost.BaseLease?alt=com.microsoft.azure.eventprocessorhost.BaseLease&text=BaseLease" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease()
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease(String)
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease(String,String,boolean)
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease(BaseLease)
- com.microsoft.azure.eventprocessorhost.BaseLease.compareTo(BaseLease)
- com.microsoft.azure.eventprocessorhost.BaseLease.getIsOwned()
- com.microsoft.azure.eventprocessorhost.BaseLease.getOwner()
- com.microsoft.azure.eventprocessorhost.BaseLease.getPartitionId()
- com.microsoft.azure.eventprocessorhost.BaseLease.isOwnedBy(String)
- com.microsoft.azure.eventprocessorhost.BaseLease.setIsOwned(boolean)
- com.microsoft.azure.eventprocessorhost.BaseLease.setOwner(String)
methods:
- com.microsoft.azure.eventprocessorhost.CompleteLease.getEpoch()
- com.microsoft.azure.eventprocessorhost.CompleteLease.incrementEpoch()
- com.microsoft.azure.eventprocessorhost.CompleteLease.setEpoch(long)
nameWithType: CompleteLease
syntax: public class CompleteLease extends BaseLease
type: class
uid: com.microsoft.azure.eventprocessorhost.CompleteLease
fullName: com.microsoft.azure.eventprocessorhost.CompleteLease
name: CompleteLease
package: com.microsoft.azure.eventprocessorhost
summary: >-
  <p>CompleteLease class is public so that advanced users can implement an ILeaseManager. Unless you are implementing ILeaseManager you should not have to deal with objects of this class or derived classes directly. </p>

  <p>CompleteLease carries around complete information about a lease. By itself, it has the epoch. Any lease manager implementation can derive from this class to add data which the lease manager needs to function <ndash></ndash> see AzureBlobLease for an example. Having two distinct classes allows the code to clearly express which variety of lease any variable holds or a method requires, and avoids the problem of accidentally supplying a lightweight BaseLease to a method which needs the lease-manager-specific fields. </p>
metadata: {}
