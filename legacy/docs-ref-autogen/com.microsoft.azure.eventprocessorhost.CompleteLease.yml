### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease()
  name: CompleteLease()
  nameWithType: CompleteLease.CompleteLease()
  summary: <p>Do not use; added only for GSon deserializer </p>
  syntax: protected CompleteLease()
  uid: com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease()
- fullName: com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease(CompleteLease source)
  name: CompleteLease(CompleteLease source)
  nameWithType: CompleteLease.CompleteLease(CompleteLease source)
  parameters:
  - description: <p>Lease to clone. </p>
    name: source
    type: <xref href="com.microsoft.azure.eventprocessorhost.CompleteLease?alt=com.microsoft.azure.eventprocessorhost.CompleteLease&text=CompleteLease" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a Lease by duplicating the given Lease.</p>

    <p></p>
  syntax: public CompleteLease(CompleteLease source)
  uid: com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease(CompleteLease)
- fullName: com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease(String partitionId)
  name: CompleteLease(String partitionId)
  nameWithType: CompleteLease.CompleteLease(String partitionId)
  parameters:
  - description: <p>Partition id for this lease. </p>
    name: partitionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Create a CompleteLease for the given partition.</p>

    <p></p>
  syntax: public CompleteLease(String partitionId)
  uid: com.microsoft.azure.eventprocessorhost.CompleteLease.CompleteLease(String)
fields:
- field:
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.eventprocessorhost.CompleteLease.epoch
  name: epoch
  nameWithType: CompleteLease.epoch
  syntax: protected long epoch= -1
  uid: com.microsoft.azure.eventprocessorhost.CompleteLease.epoch
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="Comparable&lt;BaseLease&gt;" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.eventprocessorhost.BaseLease?alt=com.microsoft.azure.eventprocessorhost.BaseLease&text=BaseLease" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease()
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease(String)
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease(String,String,boolean)
- com.microsoft.azure.eventprocessorhost.BaseLease.BaseLease(BaseLease)
- com.microsoft.azure.eventprocessorhost.BaseLease.compareTo(BaseLease)
- com.microsoft.azure.eventprocessorhost.BaseLease.getIsOwned()
- com.microsoft.azure.eventprocessorhost.BaseLease.getOwner()
- com.microsoft.azure.eventprocessorhost.BaseLease.getPartitionId()
- com.microsoft.azure.eventprocessorhost.BaseLease.isOwnedBy(String)
- com.microsoft.azure.eventprocessorhost.BaseLease.setIsOwned(boolean)
- com.microsoft.azure.eventprocessorhost.BaseLease.setOwner(String)
methods:
- fullName: com.microsoft.azure.eventprocessorhost.CompleteLease.getEpoch()
  name: getEpoch()
  nameWithType: CompleteLease.getEpoch()
  returns:
    description: <p>the epoch of the current receiver </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Epoch is a concept used by Event Hub receivers. If a receiver is created on a partition with a higher epoch than the existing receiver, the previous receiver is forcibly disconnected. Attempting to create a receiver with a lower epoch than the existing receiver will fail. The Lease carries the epoch around so that when a host instance steals a lease, it can create a receiver with a higher epoch.</p>

    <p></p>
  syntax: public long getEpoch()
  uid: com.microsoft.azure.eventprocessorhost.CompleteLease.getEpoch()
- fullName: com.microsoft.azure.eventprocessorhost.CompleteLease.incrementEpoch()
  name: incrementEpoch()
  nameWithType: CompleteLease.incrementEpoch()
  returns:
    description: <p>The new value of the epoch. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>The most common operation on the epoch value is incrementing it after stealing a lease. This convenience function replaces the get-increment-set that would otherwise be required.</p>

    <p></p>
  syntax: public long incrementEpoch()
  uid: com.microsoft.azure.eventprocessorhost.CompleteLease.incrementEpoch()
- fullName: com.microsoft.azure.eventprocessorhost.CompleteLease.setEpoch(long epoch)
  name: setEpoch(long epoch)
  nameWithType: CompleteLease.setEpoch(long epoch)
  parameters:
  - description: <p>updated epoch value </p>
    name: epoch
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the epoch value. Used to update the lease after creating a new receiver with a higher epoch.</p>

    <p></p>
  syntax: public void setEpoch(long epoch)
  uid: com.microsoft.azure.eventprocessorhost.CompleteLease.setEpoch(long)
nameWithType: CompleteLease
syntax: public class CompleteLease extends BaseLease
type: class
uid: com.microsoft.azure.eventprocessorhost.CompleteLease
fullName: com.microsoft.azure.eventprocessorhost.CompleteLease
name: CompleteLease
package: com.microsoft.azure.eventprocessorhost
summary: >-
  <p>CompleteLease class is public so that advanced users can implement an ILeaseManager. Unless you are implementing ILeaseManager you should not have to deal with objects of this class or derived classes directly. </p>

  <p>CompleteLease carries around complete information about a lease. By itself, it has the epoch. Any lease manager implementation can derive from this class to add data which the lease manager needs to function <ndash></ndash> see AzureBlobLease for an example. Having two distinct classes allows the code to clearly express which variety of lease any variable holds or a method requires, and avoids the problem of accidentally supplying a lightweight BaseLease to a method which needs the lease-manager-specific fields. </p>
metadata: {}
