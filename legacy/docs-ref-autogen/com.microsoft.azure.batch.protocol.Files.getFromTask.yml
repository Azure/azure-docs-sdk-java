### YamlMime:JavaMember
nameWithType: Files.getFromTask
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, OutputStream outputStream)
  name: getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, OutputStream outputStream)
  nameWithType: Files.getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the job that contains the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task whose file you want to retrieve. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the task file that you want to get the content of. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: fileGetFromTaskOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions?alt=com.microsoft.azure.batch.protocol.models.FileGetFromTaskOptions&text=FileGetFromTaskOptions" data-throw-if-not-resolved="False"/>
  - description: <p>The OutputStream object which data will be written to if successful. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax: public void getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, OutputStream outputStream)
  uid: com.microsoft.azure.batch.protocol.Files.getFromTask(String,String,String,FileGetFromTaskOptions,OutputStream)
- fullName: com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String filePath, OutputStream outputStream)
  name: getFromTask(String jobId, String taskId, String filePath, OutputStream outputStream)
  nameWithType: Files.getFromTask(String jobId, String taskId, String filePath, OutputStream outputStream)
  parameters:
  - description: <p>The ID of the job that contains the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The ID of the task whose file you want to retrieve. </p>
    name: taskId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The path to the task file that you want to get the content of. </p>
    name: filePath
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The OutputStream object which data will be written to if successful. </p>
    name: outputStream
    type: <xref href="OutputStream?alt=OutputStream&text=OutputStream" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="BatchErrorException?alt=BatchErrorException&text=BatchErrorException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  summary: >-
    <p>Returns the content of the specified task file.</p>

    <p></p>
  syntax: public void getFromTask(String jobId, String taskId, String filePath, OutputStream outputStream)
  uid: com.microsoft.azure.batch.protocol.Files.getFromTask(String,String,String,OutputStream)
uid: com.microsoft.azure.batch.protocol.Files.getFromTask*
fullName: com.microsoft.azure.batch.protocol.Files.getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, OutputStream outputStream)
name: getFromTask(String jobId, String taskId, String filePath, FileGetFromTaskOptions fileGetFromTaskOptions, OutputStream outputStream)
package: com.microsoft.azure.batch.protocol
metadata: {}
