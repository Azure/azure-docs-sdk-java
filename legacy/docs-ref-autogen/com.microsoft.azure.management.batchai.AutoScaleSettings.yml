### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batchai.AutoScaleSettings.initialNodeCount()
  name: initialNodeCount()
  nameWithType: AutoScaleSettings.initialNodeCount()
  returns:
    description: <p>the initialNodeCount value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation. Default: 0.</p>

    <p></p>
  syntax: public Integer initialNodeCount()
  uid: com.microsoft.azure.management.batchai.AutoScaleSettings.initialNodeCount()
- fullName: com.microsoft.azure.management.batchai.AutoScaleSettings.maximumNodeCount()
  name: maximumNodeCount()
  nameWithType: AutoScaleSettings.maximumNodeCount()
  returns:
    description: <p>the maximumNodeCount value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the maximum number of compute nodes the cluster can have.</p>

    <p></p>
  syntax: public int maximumNodeCount()
  uid: com.microsoft.azure.management.batchai.AutoScaleSettings.maximumNodeCount()
- fullName: com.microsoft.azure.management.batchai.AutoScaleSettings.minimumNodeCount()
  name: minimumNodeCount()
  nameWithType: AutoScaleSettings.minimumNodeCount()
  returns:
    description: <p>the minimumNodeCount value </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the minimum number of compute nodes the Batch AI service will try to allocate for the cluster. Note, the actual number of nodes can be less than the specified value if the subscription has not enough quota to fulfill the request.</p>

    <p></p>
  syntax: public int minimumNodeCount()
  uid: com.microsoft.azure.management.batchai.AutoScaleSettings.minimumNodeCount()
- fullName: com.microsoft.azure.management.batchai.AutoScaleSettings.withInitialNodeCount(Integer initialNodeCount)
  name: withInitialNodeCount(Integer initialNodeCount)
  nameWithType: AutoScaleSettings.withInitialNodeCount(Integer initialNodeCount)
  parameters:
  - description: <p>the initialNodeCount value to set </p>
    name: initialNodeCount
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AutoScaleSettings object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.AutoScaleSettings?alt=com.microsoft.azure.management.batchai.AutoScaleSettings&text=AutoScaleSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the number of compute nodes to allocate on cluster creation. Note that this value is used only during cluster creation. Default: 0.</p>

    <p></p>
  syntax: public AutoScaleSettings withInitialNodeCount(Integer initialNodeCount)
  uid: com.microsoft.azure.management.batchai.AutoScaleSettings.withInitialNodeCount(Integer)
- fullName: com.microsoft.azure.management.batchai.AutoScaleSettings.withMaximumNodeCount(int maximumNodeCount)
  name: withMaximumNodeCount(int maximumNodeCount)
  nameWithType: AutoScaleSettings.withMaximumNodeCount(int maximumNodeCount)
  parameters:
  - description: <p>the maximumNodeCount value to set </p>
    name: maximumNodeCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AutoScaleSettings object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.AutoScaleSettings?alt=com.microsoft.azure.management.batchai.AutoScaleSettings&text=AutoScaleSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the maximum number of compute nodes the cluster can have.</p>

    <p></p>
  syntax: public AutoScaleSettings withMaximumNodeCount(int maximumNodeCount)
  uid: com.microsoft.azure.management.batchai.AutoScaleSettings.withMaximumNodeCount(int)
- fullName: com.microsoft.azure.management.batchai.AutoScaleSettings.withMinimumNodeCount(int minimumNodeCount)
  name: withMinimumNodeCount(int minimumNodeCount)
  nameWithType: AutoScaleSettings.withMinimumNodeCount(int minimumNodeCount)
  parameters:
  - description: <p>the minimumNodeCount value to set </p>
    name: minimumNodeCount
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the AutoScaleSettings object itself. </p>
    type: <xref href="com.microsoft.azure.management.batchai.AutoScaleSettings?alt=com.microsoft.azure.management.batchai.AutoScaleSettings&text=AutoScaleSettings" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the minimum number of compute nodes the Batch AI service will try to allocate for the cluster. Note, the actual number of nodes can be less than the specified value if the subscription has not enough quota to fulfill the request.</p>

    <p></p>
  syntax: public AutoScaleSettings withMinimumNodeCount(int minimumNodeCount)
  uid: com.microsoft.azure.management.batchai.AutoScaleSettings.withMinimumNodeCount(int)
nameWithType: AutoScaleSettings
syntax: public class AutoScaleSettings
type: class
uid: com.microsoft.azure.management.batchai.AutoScaleSettings
fullName: com.microsoft.azure.management.batchai.AutoScaleSettings
name: AutoScaleSettings
package: com.microsoft.azure.management.batchai
summary: <p>Auto-scale settings for the cluster. The system automatically scales the cluster up and down (within minimumNodeCount and maximumNodeCount) based on the number of queued and running jobs assigned to the cluster. </p>
metadata: {}
