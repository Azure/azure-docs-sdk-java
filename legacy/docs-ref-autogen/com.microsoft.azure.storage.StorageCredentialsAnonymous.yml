### YamlMime:JavaType
fields:
- field:
    type: final <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.ANONYMOUS
  name: ANONYMOUS
  nameWithType: StorageCredentialsAnonymous.ANONYMOUS
  summary: <p>Stores the singleton instance of this class. </p>
  syntax: public static final StorageCredentials ANONYMOUS= new StorageCredentialsAnonymous()
  uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.ANONYMOUS
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.storage.StorageCredentials.getAccountName()
- com.microsoft.azure.storage.StorageCredentials.isHttpsOnly()
- com.microsoft.azure.storage.StorageCredentials.setHttpsOnly(boolean)
- com.microsoft.azure.storage.StorageCredentials.transformUri(final URI)
- com.microsoft.azure.storage.StorageCredentials.transformUri(StorageUri)
- com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final Map<String, String>)
- com.microsoft.azure.storage.StorageCredentials.tryParseCredentials(final String)
methods:
- fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance()
  name: getInstance()
  nameWithType: StorageCredentialsAnonymous.getInstance()
  returns:
    description: <p>the singleton instance of this class </p>
    type: <xref href="com.microsoft.azure.storage.StorageCredentials?alt=com.microsoft.azure.storage.StorageCredentials&text=StorageCredentials" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the singleton instance of the  class.</p>

    <p></p>
  syntax: protected static StorageCredentials getInstance()
  uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.getInstance()
- fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.toString(final boolean exportSecrets)
  name: toString(final boolean exportSecrets)
  nameWithType: StorageCredentialsAnonymous.toString(final boolean exportSecrets)
  parameters:
  - description: >-
      <p>

        <code>true</code> to include sensitive data in the string; otherwise, <code>false</code></p>
    name: exportSecrets
    type: <xref href="final+boolean?alt=final+boolean&text=final+boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a string representation of the credentials, optionally including sensitive data. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns a  object that represents this instance.</p>

    <p></p>
  syntax: public String toString(final boolean exportSecrets)
  uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.toString(final boolean)
- fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(StorageUri resourceUri, OperationContext opContext)
  name: transformUri(StorageUri resourceUri, OperationContext opContext)
  nameWithType: StorageCredentialsAnonymous.transformUri(StorageUri resourceUri, OperationContext opContext)
  parameters:
  - name: resourceUri
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  syntax: public StorageUri transformUri(StorageUri resourceUri, OperationContext opContext)
  uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(StorageUri,OperationContext)
- fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(URI resourceUri, OperationContext opContext)
  name: transformUri(URI resourceUri, OperationContext opContext)
  nameWithType: StorageCredentialsAnonymous.transformUri(URI resourceUri, OperationContext opContext)
  parameters:
  - name: resourceUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - name: opContext
    type: <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  syntax: public URI transformUri(URI resourceUri, OperationContext opContext)
  uid: com.microsoft.azure.storage.StorageCredentialsAnonymous.transformUri(URI,OperationContext)
nameWithType: StorageCredentialsAnonymous
syntax: public class StorageCredentialsAnonymous extends StorageCredentials
type: class
uid: com.microsoft.azure.storage.StorageCredentialsAnonymous
fullName: com.microsoft.azure.storage.StorageCredentialsAnonymous
name: StorageCredentialsAnonymous
package: com.microsoft.azure.storage
summary: <p>Represents credentials for anonymous access. </p>
metadata: {}
