### YamlMime:JavaMember
nameWithType: ISingleAccountPublicClientApplication.acquireTokenSilentAsync
type: method
members:
- fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  nameWithType: ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  parameters:
  - description: <p>The non-null array of scopes to be requested for the access token. MSAL always sends the scopes 'openid profile offline_access'. Do not include any of these scopes in the scope parameter. </p>
    name: scopes
    type: <xref href="%40NonNull+final+String+%5B%5D?alt=@NonNull final String []&text=%40NonNull+final+String+%5B%5D" data-throw-if-not-resolved="False"/>
  - description: <p>Authority to issue the token. </p>
    name: authority
    type: <xref href="%40NonNull+final+String?alt=@NonNull final String&text=%40NonNull+final+String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>

        <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback" data-throw-if-not-resolved="false">SilentAuthenticationCallback</xref> that is used to send the result back. The success result will be sent back via <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onSuccess(final IAuthenticationResult)" data-throw-if-not-resolved="false">SilentAuthenticationCallback#onSuccess(IAuthenticationResult)</xref>. Failure case will be sent back via { <xref uid="com.microsoft.identity.client.SilentAuthenticationCallback.onError(final MsalException)" data-throw-if-not-resolved="false">}. </xref></p>
    name: callback
    type: '@NonNull final <xref href="com.microsoft.identity.client.SilentAuthenticationCallback?alt=com.microsoft.identity.client.SilentAuthenticationCallback&text=SilentAuthenticationCallback" data-throw-if-not-resolved="False"/>'
  summary: >-
    <p>Perform acquire token silent call. If there is a valid access token in the cache, the sdk will return the access token; If no valid access token exists, the sdk will try to find a refresh token and use the refresh token to get a new access token. If refresh token does not exist or it fails the refresh, exception will be sent back via callback.</p>

    <p></p>
  syntax: public void acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
  uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String [],@NonNull final String,@NonNull final SilentAuthenticationCallback)
uid: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync*
fullName: com.microsoft.identity.client.ISingleAccountPublicClientApplication.acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
name: acquireTokenSilentAsync(@NonNull final String[] scopes, @NonNull final String authority, @NonNull final SilentAuthenticationCallback callback)
package: com.microsoft.identity.client
metadata: {}
