### YamlMime:JavaMember
nameWithType: MonitorManager.Configurable.authenticate
type: method
members:
- fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.Configurable.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  name: authenticate(AzureTokenCredentials credentials, String subscriptionId)
  nameWithType: MonitorManager.Configurable.authenticate(AzureTokenCredentials credentials, String subscriptionId)
  parameters:
  - description: <p>the credentials to use </p>
    name: credentials
    type: <xref href="AzureTokenCredentials?alt=AzureTokenCredentials&text=AzureTokenCredentials" data-throw-if-not-resolved="False"/>
  - description: <p>the subscription UUID </p>
    name: subscriptionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the interface exposing monitor API entry points that work across subscriptions </p>
    type: <xref href="com.microsoft.azure.management.monitor.implementation.MonitorManager?alt=com.microsoft.azure.management.monitor.implementation.MonitorManager&text=MonitorManager" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Creates an instance of MonitorManager that exposes Monitor API entry points.</p>

    <p></p>
  syntax: public MonitorManager authenticate(AzureTokenCredentials credentials, String subscriptionId)
  uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.Configurable.authenticate(AzureTokenCredentials,String)
uid: com.microsoft.azure.management.monitor.implementation.MonitorManager.Configurable.authenticate*
fullName: com.microsoft.azure.management.monitor.implementation.MonitorManager.Configurable.authenticate(AzureTokenCredentials credentials, String subscriptionId)
name: authenticate(AzureTokenCredentials credentials, String subscriptionId)
package: com.microsoft.azure.management.monitor.implementation
metadata: {}
