### YamlMime:JavaMember
nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize
type: method
members:
- fullName: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
  name: getMaxPrimaryReplicationQueueMemorySize()
  nameWithType: ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
  returns:
    description: <p>. Returns the maximum size of the primary replication operation queue inside <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, which contains replication <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s The unit here is the virtual memory consumption of the queue .Returns long. </p>
    type: <xref href="long?alt=long&text=long" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Defines the maximum size of the primary replication operation queue inside <xref uid="system.fabric.FabricReplicator" data-throw-if-not-resolved="false">system.fabric.FabricReplicator</xref>, which contains replication <xref uid="system.fabric.Operation" data-throw-if-not-resolved="false">system.fabric.Operation</xref>s</p>

    <p>

      <b>Remarks:</b>This setting is specific to the Replicator when the role of the service is Primary. The default value is 0. This implies there is no memory limit </p>
  syntax: public long getMaxPrimaryReplicationQueueMemorySize()
  uid: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
uid: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize*
fullName: system.fabric.ReplicatorSettings.getMaxPrimaryReplicationQueueMemorySize()
name: getMaxPrimaryReplicationQueueMemorySize()
package: system.fabric
metadata: {}
