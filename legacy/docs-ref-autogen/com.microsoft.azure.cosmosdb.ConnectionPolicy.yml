### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.ConnectionPolicy()
  name: ConnectionPolicy()
  nameWithType: ConnectionPolicy.ConnectionPolicy()
  summary: <p>Constructor. </p>
  syntax: public ConnectionPolicy()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.ConnectionPolicy()
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getConnectionMode()
  name: getConnectionMode()
  nameWithType: ConnectionPolicy.getConnectionMode()
  returns:
    description: <p>the connection mode. </p>
    type: <xref href="com.microsoft.azure.cosmosdb.ConnectionMode?alt=com.microsoft.azure.cosmosdb.ConnectionMode&text=ConnectionMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the connection mode used in the client.</p>

    <p></p>
  syntax: public ConnectionMode getConnectionMode()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getConnectionMode()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.GetDefault()
  name: GetDefault()
  nameWithType: ConnectionPolicy.GetDefault()
  returns:
    description: <p>the default connection policy. </p>
    type: <xref href="com.microsoft.azure.cosmosdb.ConnectionPolicy?alt=com.microsoft.azure.cosmosdb.ConnectionPolicy&text=ConnectionPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the default connection policy.</p>

    <p></p>
  syntax: public static ConnectionPolicy GetDefault()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.GetDefault()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getEnableEndpointDiscovery()
  name: getEnableEndpointDiscovery()
  nameWithType: ConnectionPolicy.getEnableEndpointDiscovery()
  returns:
    description: <p>whether endpoint discovery is enabled. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the flag to enable endpoint discovery for geo-replicated database accounts.</p>

    <p></p>
  syntax: public boolean getEnableEndpointDiscovery()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getEnableEndpointDiscovery()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getIdleConnectionTimeoutInMillis()
  name: getIdleConnectionTimeoutInMillis()
  nameWithType: ConnectionPolicy.getIdleConnectionTimeoutInMillis()
  returns:
    description: <p>Idle connection timeout. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of the timeout for an idle connection, the default is 60 seconds.</p>

    <p></p>
  syntax: public int getIdleConnectionTimeoutInMillis()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getIdleConnectionTimeoutInMillis()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getMaxPoolSize()
  name: getMaxPoolSize()
  nameWithType: ConnectionPolicy.getMaxPoolSize()
  returns:
    description: <p>connection pool size. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of the connection pool size the client is using.</p>

    <p></p>
  syntax: public int getMaxPoolSize()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getMaxPoolSize()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getMediaReadMode()
  name: getMediaReadMode()
  nameWithType: ConnectionPolicy.getMediaReadMode()
  returns:
    description: <p>the media read mode. </p>
    type: <xref href="com.microsoft.azure.cosmosdb.MediaReadMode?alt=com.microsoft.azure.cosmosdb.MediaReadMode&text=MediaReadMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the attachment content (aka media) download mode.</p>

    <p></p>
  syntax: public MediaReadMode getMediaReadMode()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getMediaReadMode()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getMediaRequestTimeoutInMillis()
  name: getMediaRequestTimeoutInMillis()
  nameWithType: ConnectionPolicy.getMediaRequestTimeoutInMillis()
  returns:
    description: <p>the media request timeout in milliseconds. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets or sets time to wait for response from network peer for attachment content (aka media) operations.</p>

    <p></p>
  syntax: public int getMediaRequestTimeoutInMillis()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getMediaRequestTimeoutInMillis()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getPreferredLocations()
  name: getPreferredLocations()
  nameWithType: ConnectionPolicy.getPreferredLocations()
  returns:
    description: <p>the list of preferred location. </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the preferred locations for geo-replicated database accounts</p>

    <p></p>
  syntax: public List<String> getPreferredLocations()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getPreferredLocations()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getProxy()
  name: getProxy()
  nameWithType: ConnectionPolicy.getProxy()
  returns:
    description: <p>the value of proxyHost. </p>
    type: <xref href="InetSocketAddress?alt=InetSocketAddress&text=InetSocketAddress" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the InetSocketAddress of proxy server.</p>

    <p></p>
  syntax: public InetSocketAddress getProxy()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getProxy()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getRequestTimeoutInMillis()
  name: getRequestTimeoutInMillis()
  nameWithType: ConnectionPolicy.getRequestTimeoutInMillis()
  returns:
    description: <p>the request timeout in milliseconds. </p>
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the request timeout (time to wait for response from network peer) in milliseconds.</p>

    <p></p>
  syntax: public int getRequestTimeoutInMillis()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getRequestTimeoutInMillis()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getRetryOptions()
  name: getRetryOptions()
  nameWithType: ConnectionPolicy.getRetryOptions()
  returns:
    description: <p>the RetryOptions instance. </p>
    type: <xref href="com.microsoft.azure.cosmosdb.RetryOptions?alt=com.microsoft.azure.cosmosdb.RetryOptions&text=RetryOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the retry policy options associated with the DocumentClient instance.</p>

    <p></p>
  syntax: public RetryOptions getRetryOptions()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getRetryOptions()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.getUserAgentSuffix()
  name: getUserAgentSuffix()
  nameWithType: ConnectionPolicy.getUserAgentSuffix()
  returns:
    description: <p>the value of user-agent suffix. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the value of user-agent suffix.</p>

    <p></p>
  syntax: public String getUserAgentSuffix()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.getUserAgentSuffix()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.isEnableReadRequestsFallback()
  name: isEnableReadRequestsFallback()
  nameWithType: ConnectionPolicy.isEnableReadRequestsFallback()
  returns:
    description: <p>flag to allow for reads to go to multiple regions configured on an account of Azure Cosmos DB service. </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets whether to allow for reads to go to multiple regions configured on an account of Azure Cosmos DB service.</p>

    <p>Default value is null.</p>

    <p>If this property is not set, the default is true for all Consistency Levels other than Bounded Staleness, The default is false for Bounded Staleness. 1. <xref uid="" data-throw-if-not-resolved="false" data-raw-source="enableEndpointDiscovery"></xref> is true 2. the Azure Cosmos DB account has more than one region</p>

    <p></p>
  syntax: public Boolean isEnableReadRequestsFallback()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.isEnableReadRequestsFallback()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.isUsingMultipleWriteLocations()
  name: isUsingMultipleWriteLocations()
  nameWithType: ConnectionPolicy.isUsingMultipleWriteLocations()
  returns:
    description: <p>flag to enable writes on any locations (regions) for geo-replicated database accounts. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the flag to enable writes on any locations (regions) for geo-replicated database accounts in the Azure Cosmos DB service.</p>

    <p>When the value of this property is true, the SDK will direct write operations to available writable locations of geo-replicated database account. Writable locations are ordered by PreferredLocations property. Setting the property value to true has no effect until EnableMultipleWriteLocations in DatabaseAccount is also set to true.</p>

    <p>Default value is false indicating that writes are directed to first region in PreferredLocations property if it's a write region or the primary account region if no PreferredLocations are specified.</p>

    <p>The value should match your account configuration.</p>

    <p>During the client lifetime, writes can change regional endpoint in the case of any event described at <a href="https://docs.microsoft.com/azure/cosmos-db/troubleshoot-sdk-availability">https://docs.microsoft.com/azure/cosmos-db/troubleshoot-sdk-availability</a></p>

    <p></p>
  syntax: public boolean isUsingMultipleWriteLocations()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.isUsingMultipleWriteLocations()
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setConnectionMode(ConnectionMode connectionMode)
  name: setConnectionMode(ConnectionMode connectionMode)
  nameWithType: ConnectionPolicy.setConnectionMode(ConnectionMode connectionMode)
  parameters:
  - description: <p>the connection mode. </p>
    name: connectionMode
    type: <xref href="com.microsoft.azure.cosmosdb.ConnectionMode?alt=com.microsoft.azure.cosmosdb.ConnectionMode&text=ConnectionMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the connection mode used in the client.</p>

    <p></p>
  syntax: public void setConnectionMode(ConnectionMode connectionMode)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setConnectionMode(ConnectionMode)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  name: setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  nameWithType: ConnectionPolicy.setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  parameters:
  - description: <p>true if EndpointDiscovery is enabled. </p>
    name: enableEndpointDiscovery
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the flag to enable endpoint discovery for geo-replicated database accounts. </p>

    <p>When EnableEndpointDiscovery is true, the SDK will automatically discover the current write and read regions to ensure requests are sent to the correct region based on the capability of the region and the user's preference. </p>

    <p>The default value for this property is true indicating endpoint discovery is enabled.</p>

    <p></p>
  syntax: public void setEnableEndpointDiscovery(boolean enableEndpointDiscovery)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setEnableEndpointDiscovery(boolean)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setEnableReadRequestsFallback(Boolean enableReadRequestsFallback)
  name: setEnableReadRequestsFallback(Boolean enableReadRequestsFallback)
  nameWithType: ConnectionPolicy.setEnableReadRequestsFallback(Boolean enableReadRequestsFallback)
  parameters:
  - description: <p>flag to enable reads to go to multiple regions configured on an account of Azure Cosmos DB service. </p>
    name: enableReadRequestsFallback
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets whether to allow for reads to go to multiple regions configured on an account of Azure Cosmos DB service.</p>

    <p>Default value is null.</p>

    <p>If this property is not set, the default is true for all Consistency Levels other than Bounded Staleness, The default is false for Bounded Staleness. 1. <xref uid="" data-throw-if-not-resolved="false" data-raw-source="enableEndpointDiscovery"></xref> is true 2. the Azure Cosmos DB account has more than one region</p>

    <p></p>
  syntax: public void setEnableReadRequestsFallback(Boolean enableReadRequestsFallback)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setEnableReadRequestsFallback(Boolean)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setIdleConnectionTimeoutInMillis(int idleConnectionTimeoutInMillis)
  name: setIdleConnectionTimeoutInMillis(int idleConnectionTimeoutInMillis)
  nameWithType: ConnectionPolicy.setIdleConnectionTimeoutInMillis(int idleConnectionTimeoutInMillis)
  parameters:
  - description: <p>the timeout for an idle connection in seconds. </p>
    name: idleConnectionTimeoutInMillis
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>sets the value of the timeout for an idle connection. After that time, the connection will be automatically closed.</p>

    <p></p>
  syntax: public void setIdleConnectionTimeoutInMillis(int idleConnectionTimeoutInMillis)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setIdleConnectionTimeoutInMillis(int)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setMaxPoolSize(int maxPoolSize)
  name: setMaxPoolSize(int maxPoolSize)
  nameWithType: ConnectionPolicy.setMaxPoolSize(int maxPoolSize)
  parameters:
  - description: <p>The value of the connection pool size. </p>
    name: maxPoolSize
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the value of the connection pool size, the default is 1000.</p>

    <p></p>
  syntax: public void setMaxPoolSize(int maxPoolSize)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setMaxPoolSize(int)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setMediaReadMode(MediaReadMode mediaReadMode)
  name: setMediaReadMode(MediaReadMode mediaReadMode)
  nameWithType: ConnectionPolicy.setMediaReadMode(MediaReadMode mediaReadMode)
  parameters:
  - description: <p>the media read mode. </p>
    name: mediaReadMode
    type: <xref href="com.microsoft.azure.cosmosdb.MediaReadMode?alt=com.microsoft.azure.cosmosdb.MediaReadMode&text=MediaReadMode" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the attachment content (aka media) download mode.</p>

    <p></p>
  syntax: public void setMediaReadMode(MediaReadMode mediaReadMode)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setMediaReadMode(MediaReadMode)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setMediaRequestTimeoutInMillis(int mediaRequestTimeoutInMillis)
  name: setMediaRequestTimeoutInMillis(int mediaRequestTimeoutInMillis)
  nameWithType: ConnectionPolicy.setMediaRequestTimeoutInMillis(int mediaRequestTimeoutInMillis)
  parameters:
  - description: <p>the media request timeout in milliseconds. </p>
    name: mediaRequestTimeoutInMillis
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets or sets Time to wait for response from network peer for attachment content (aka media) operations.</p>

    <p></p>
  syntax: public void setMediaRequestTimeoutInMillis(int mediaRequestTimeoutInMillis)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setMediaRequestTimeoutInMillis(int)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setPreferredLocations(List<String> preferredLocations)
  name: setPreferredLocations(List<String> preferredLocations)
  nameWithType: ConnectionPolicy.setPreferredLocations(List<String> preferredLocations)
  parameters:
  - description: <p>the list of preferred locations. </p>
    name: preferredLocations
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the preferred locations for geo-replicated database accounts. For example, "East US" as the preferred location. </p>

    <p>When EnableEndpointDiscovery is true and PreferredRegions is non-empty, the SDK will prefer to use the locations in the collection in the order they are specified to perform operations. </p>

    <p>If EnableEndpointDiscovery is set to false, this property is ignored.</p>

    <p></p>
  syntax: public void setPreferredLocations(List<String> preferredLocations)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setPreferredLocations(List<String>)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setProxy(String proxyHost, int proxyPort)
  name: setProxy(String proxyHost, int proxyPort)
  nameWithType: ConnectionPolicy.setProxy(String proxyHost, int proxyPort)
  parameters:
  - description: <p>The proxy server host. </p>
    name: proxyHost
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The proxy server port. </p>
    name: proxyPort
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: <p>This will create the InetSocketAddress for proxy server, all the requests to cosmoDB will route from this address. </p>
  syntax: public void setProxy(String proxyHost, int proxyPort)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setProxy(String,int)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setRequestTimeoutInMillis(int requestTimeoutInMillis)
  name: setRequestTimeoutInMillis(int requestTimeoutInMillis)
  nameWithType: ConnectionPolicy.setRequestTimeoutInMillis(int requestTimeoutInMillis)
  parameters:
  - description: <p>the request timeout in milliseconds. </p>
    name: requestTimeoutInMillis
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the request timeout (time to wait for response from network peer) in milliseconds. The default is 60 seconds.</p>

    <p></p>
  syntax: public void setRequestTimeoutInMillis(int requestTimeoutInMillis)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setRequestTimeoutInMillis(int)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setRetryOptions(RetryOptions retryOptions)
  name: setRetryOptions(RetryOptions retryOptions)
  nameWithType: ConnectionPolicy.setRetryOptions(RetryOptions retryOptions)
  parameters:
  - description: <p>the RetryOptions instance. </p>
    name: retryOptions
    type: <xref href="com.microsoft.azure.cosmosdb.RetryOptions?alt=com.microsoft.azure.cosmosdb.RetryOptions&text=RetryOptions" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the retry policy options associated with the DocumentClient instance. </p>

    <p>Properties in the RetryOptions class allow application to customize the built-in retry policies. This property is optional. When it's not set, the SDK uses the default values for configuring the retry policies. See RetryOptions class for more details.</p>

    <p></p>
  syntax: public void setRetryOptions(RetryOptions retryOptions)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setRetryOptions(RetryOptions)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setUserAgentSuffix(String userAgentSuffix)
  name: setUserAgentSuffix(String userAgentSuffix)
  nameWithType: ConnectionPolicy.setUserAgentSuffix(String userAgentSuffix)
  parameters:
  - description: <p>The value to be appended to the user-agent header, this is used for monitoring purposes. </p>
    name: userAgentSuffix
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>sets the value of the user-agent suffix.</p>

    <p></p>
  syntax: public void setUserAgentSuffix(String userAgentSuffix)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setUserAgentSuffix(String)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.setUsingMultipleWriteLocations(boolean usingMultipleWriteLocations)
  name: setUsingMultipleWriteLocations(boolean usingMultipleWriteLocations)
  nameWithType: ConnectionPolicy.setUsingMultipleWriteLocations(boolean usingMultipleWriteLocations)
  parameters:
  - description: <p>flag to enable writes on any locations (regions) for geo-replicated database accounts. </p>
    name: usingMultipleWriteLocations
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the flag to enable writes on any locations (regions) for geo-replicated database accounts in the Azure Cosmos DB service.</p>

    <p>When the value of this property is true, the SDK will direct write operations to available writable locations of geo-replicated database account. Writable locations are ordered by PreferredLocations property. Setting the property value to true has no effect until EnableMultipleWriteLocations in DatabaseAccount is also set to true.</p>

    <p>Default value is false indicating that writes are directed to first region in PreferredLocations property if it's a write region or the primary account region if no PreferredLocations are specified.</p>

    <p>The value should match your account configuration.</p>

    <p>During the client lifetime, writes can change regional endpoint in the case of any event described at <a href="https://docs.microsoft.com/azure/cosmos-db/troubleshoot-sdk-availability">https://docs.microsoft.com/azure/cosmos-db/troubleshoot-sdk-availability</a></p>

    <p></p>
  syntax: public void setUsingMultipleWriteLocations(boolean usingMultipleWriteLocations)
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.setUsingMultipleWriteLocations(boolean)
- fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy.toString()
  name: toString()
  nameWithType: ConnectionPolicy.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.cosmosdb.ConnectionPolicy.toString()
nameWithType: ConnectionPolicy
syntax: public class ConnectionPolicy
type: class
uid: com.microsoft.azure.cosmosdb.ConnectionPolicy
fullName: com.microsoft.azure.cosmosdb.ConnectionPolicy
name: ConnectionPolicy
package: com.microsoft.azure.cosmosdb
summary: <p>Represents the Connection policy associated with a DocumentClient in the Azure Cosmos DB database service. </p>
metadata: {}
