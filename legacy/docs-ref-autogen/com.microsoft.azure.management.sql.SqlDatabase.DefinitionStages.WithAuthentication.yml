### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  name: withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  parameters:
  - description: <p>the Active Directory administrator login </p>
    name: administratorLogin
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Active Directory administrator password </p>
    name: administratorPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="SqlDatabase.DefinitionStages.WithAttachAllOptions%3CParentT%3E?alt=SqlDatabase.DefinitionStages.WithAttachAllOptions%3CParentT%3E&text=SqlDatabase.DefinitionStages.WithAttachAllOptions%3CParentT%3E" data-throw-if-not-resolved="False"/>
  syntax: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withActiveDirectoryLoginAndPassword(String administratorLogin, String administratorPassword)
  uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.withActiveDirectoryLoginAndPassword(String,String)
- fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  name: withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  nameWithType: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>.withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  parameters:
  - description: <p>the SQL administrator login </p>
    name: administratorLogin
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the SQL administrator password </p>
    name: administratorPassword
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>next definition stage </p>
    type: <xref href="SqlDatabase.DefinitionStages.WithAttachAllOptions%3CParentT%3E?alt=SqlDatabase.DefinitionStages.WithAttachAllOptions%3CParentT%3E&text=SqlDatabase.DefinitionStages.WithAttachAllOptions%3CParentT%3E" data-throw-if-not-resolved="False"/>
  syntax: public SqlDatabase.DefinitionStages.WithAttachAllOptions<ParentT> withSqlAdministratorLoginAndPassword(String administratorLogin, String administratorPassword)
  uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication.withSqlAdministratorLoginAndPassword(String,String)
nameWithType: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
syntax: public interface WithAuthentication<ParentT>
type: interface
typeParameters:
- description: <p>the stage of the parent definition to return to after attaching this definition </p>
  name: ParentT
uid: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication
fullName: com.microsoft.azure.management.sql.SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
name: SqlDatabase.DefinitionStages.WithAuthentication<ParentT>
package: com.microsoft.azure.management.sql
summary: >-
  <p>Sets the authentication type and SQL or Active Directory administrator login and password.</p>

  <p></p>
metadata: {}
