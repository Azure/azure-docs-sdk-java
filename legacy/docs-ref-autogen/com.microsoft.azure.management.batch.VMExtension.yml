### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.management.batch.VMExtension.autoUpgradeMinorVersion()
  name: autoUpgradeMinorVersion()
  nameWithType: VMExtension.autoUpgradeMinorVersion()
  returns:
    description: <p>the autoUpgradeMinorVersion value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.</p>

    <p></p>
  syntax: public Boolean autoUpgradeMinorVersion()
  uid: com.microsoft.azure.management.batch.VMExtension.autoUpgradeMinorVersion()
- fullName: com.microsoft.azure.management.batch.VMExtension.name()
  name: name()
  nameWithType: VMExtension.name()
  returns:
    description: <p>the name value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the name value.</p>

    <p></p>
  syntax: public String name()
  uid: com.microsoft.azure.management.batch.VMExtension.name()
- fullName: com.microsoft.azure.management.batch.VMExtension.protectedSettings()
  name: protectedSettings()
  nameWithType: VMExtension.protectedSettings()
  returns:
    description: <p>the protectedSettings value </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.</p>

    <p></p>
  syntax: public Object protectedSettings()
  uid: com.microsoft.azure.management.batch.VMExtension.protectedSettings()
- fullName: com.microsoft.azure.management.batch.VMExtension.provisionAfterExtensions()
  name: provisionAfterExtensions()
  nameWithType: VMExtension.provisionAfterExtensions()
  returns:
    description: <p>the provisionAfterExtensions value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get collection of extension names after which this extension needs to be provisioned.</p>

    <p></p>
  syntax: public List<String> provisionAfterExtensions()
  uid: com.microsoft.azure.management.batch.VMExtension.provisionAfterExtensions()
- fullName: com.microsoft.azure.management.batch.VMExtension.publisher()
  name: publisher()
  nameWithType: VMExtension.publisher()
  returns:
    description: <p>the publisher value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the publisher value.</p>

    <p></p>
  syntax: public String publisher()
  uid: com.microsoft.azure.management.batch.VMExtension.publisher()
- fullName: com.microsoft.azure.management.batch.VMExtension.settings()
  name: settings()
  nameWithType: VMExtension.settings()
  returns:
    description: <p>the settings value </p>
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the settings value.</p>

    <p></p>
  syntax: public Object settings()
  uid: com.microsoft.azure.management.batch.VMExtension.settings()
- fullName: com.microsoft.azure.management.batch.VMExtension.type()
  name: type()
  nameWithType: VMExtension.type()
  returns:
    description: <p>the type value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the type value.</p>

    <p></p>
  syntax: public String type()
  uid: com.microsoft.azure.management.batch.VMExtension.type()
- fullName: com.microsoft.azure.management.batch.VMExtension.typeHandlerVersion()
  name: typeHandlerVersion()
  nameWithType: VMExtension.typeHandlerVersion()
  returns:
    description: <p>the typeHandlerVersion value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the typeHandlerVersion value.</p>

    <p></p>
  syntax: public String typeHandlerVersion()
  uid: com.microsoft.azure.management.batch.VMExtension.typeHandlerVersion()
- fullName: com.microsoft.azure.management.batch.VMExtension.withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)
  name: withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)
  nameWithType: VMExtension.withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)
  parameters:
  - description: <p>the autoUpgradeMinorVersion value to set </p>
    name: autoUpgradeMinorVersion
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.</p>

    <p></p>
  syntax: public VMExtension withAutoUpgradeMinorVersion(Boolean autoUpgradeMinorVersion)
  uid: com.microsoft.azure.management.batch.VMExtension.withAutoUpgradeMinorVersion(Boolean)
- fullName: com.microsoft.azure.management.batch.VMExtension.withName(String name)
  name: withName(String name)
  nameWithType: VMExtension.withName(String name)
  parameters:
  - description: <p>the name value to set </p>
    name: name
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the name value.</p>

    <p></p>
  syntax: public VMExtension withName(String name)
  uid: com.microsoft.azure.management.batch.VMExtension.withName(String)
- fullName: com.microsoft.azure.management.batch.VMExtension.withProtectedSettings(Object protectedSettings)
  name: withProtectedSettings(Object protectedSettings)
  nameWithType: VMExtension.withProtectedSettings(Object protectedSettings)
  parameters:
  - description: <p>the protectedSettings value to set </p>
    name: protectedSettings
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.</p>

    <p></p>
  syntax: public VMExtension withProtectedSettings(Object protectedSettings)
  uid: com.microsoft.azure.management.batch.VMExtension.withProtectedSettings(Object)
- fullName: com.microsoft.azure.management.batch.VMExtension.withProvisionAfterExtensions(List<String> provisionAfterExtensions)
  name: withProvisionAfterExtensions(List<String> provisionAfterExtensions)
  nameWithType: VMExtension.withProvisionAfterExtensions(List<String> provisionAfterExtensions)
  parameters:
  - description: <p>the provisionAfterExtensions value to set </p>
    name: provisionAfterExtensions
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set collection of extension names after which this extension needs to be provisioned.</p>

    <p></p>
  syntax: public VMExtension withProvisionAfterExtensions(List<String> provisionAfterExtensions)
  uid: com.microsoft.azure.management.batch.VMExtension.withProvisionAfterExtensions(List<String>)
- fullName: com.microsoft.azure.management.batch.VMExtension.withPublisher(String publisher)
  name: withPublisher(String publisher)
  nameWithType: VMExtension.withPublisher(String publisher)
  parameters:
  - description: <p>the publisher value to set </p>
    name: publisher
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the publisher value.</p>

    <p></p>
  syntax: public VMExtension withPublisher(String publisher)
  uid: com.microsoft.azure.management.batch.VMExtension.withPublisher(String)
- fullName: com.microsoft.azure.management.batch.VMExtension.withSettings(Object settings)
  name: withSettings(Object settings)
  nameWithType: VMExtension.withSettings(Object settings)
  parameters:
  - description: <p>the settings value to set </p>
    name: settings
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the settings value.</p>

    <p></p>
  syntax: public VMExtension withSettings(Object settings)
  uid: com.microsoft.azure.management.batch.VMExtension.withSettings(Object)
- fullName: com.microsoft.azure.management.batch.VMExtension.withType(String type)
  name: withType(String type)
  nameWithType: VMExtension.withType(String type)
  parameters:
  - description: <p>the type value to set </p>
    name: type
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the type value.</p>

    <p></p>
  syntax: public VMExtension withType(String type)
  uid: com.microsoft.azure.management.batch.VMExtension.withType(String)
- fullName: com.microsoft.azure.management.batch.VMExtension.withTypeHandlerVersion(String typeHandlerVersion)
  name: withTypeHandlerVersion(String typeHandlerVersion)
  nameWithType: VMExtension.withTypeHandlerVersion(String typeHandlerVersion)
  parameters:
  - description: <p>the typeHandlerVersion value to set </p>
    name: typeHandlerVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the VMExtension object itself. </p>
    type: <xref href="com.microsoft.azure.management.batch.VMExtension?alt=com.microsoft.azure.management.batch.VMExtension&text=VMExtension" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the typeHandlerVersion value.</p>

    <p></p>
  syntax: public VMExtension withTypeHandlerVersion(String typeHandlerVersion)
  uid: com.microsoft.azure.management.batch.VMExtension.withTypeHandlerVersion(String)
nameWithType: VMExtension
syntax: public class VMExtension
type: class
uid: com.microsoft.azure.management.batch.VMExtension
fullName: com.microsoft.azure.management.batch.VMExtension
name: VMExtension
package: com.microsoft.azure.management.batch
summary: <p>The configuration for virtual machine extensions. </p>
metadata: {}
