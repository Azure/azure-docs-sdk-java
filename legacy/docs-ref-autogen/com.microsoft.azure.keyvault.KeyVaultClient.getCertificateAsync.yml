### YamlMime:JavaMember
nameWithType: KeyVaultClient.getCertificateAsync
type: method
members:
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync(String certificateIdentifier, final ServiceCallback<CertificateBundle> serviceCallback)
  name: getCertificateAsync(String certificateIdentifier, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClient.getCertificateAsync(String certificateIdentifier, final ServiceCallback<CertificateBundle> serviceCallback)
  parameters:
  - description: <p>The certificate identifier </p>
    name: certificateIdentifier
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a specified certificate.</p>

    <p></p>
  syntax: public ServiceFuture<CertificateBundle> getCertificateAsync(String certificateIdentifier, final ServiceCallback<CertificateBundle> serviceCallback)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync(String,final ServiceCallback<CertificateBundle>)
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClient.getCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a></p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the certificate in the given vault </p>
    name: certificateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a specified certificate.</p>

    <p></p>
  syntax: public ServiceFuture<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, final ServiceCallback<CertificateBundle> serviceCallback)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync(String,String,final ServiceCallback<CertificateBundle>)
- fullName: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  name: getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  nameWithType: KeyVaultClient.getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  parameters:
  - description: <p>The vault name, e.g. <a href="https://myvault.vault.azure.net">https://myvault.vault.azure.net</a></p>
    name: vaultBaseUrl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the certificate in the given vault </p>
    name: certificateName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The version of the certificate </p>
    name: certificateVersion
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.keyvault.models.CertificateBundle?alt=com.microsoft.azure.keyvault.models.CertificateBundle&text=CertificateBundle" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Gets information about a specified certificate.</p>

    <p></p>
  syntax: public ServiceFuture<CertificateBundle> getCertificateAsync(String vaultBaseUrl, String certificateName, String certificateVersion, final ServiceCallback<CertificateBundle> serviceCallback)
  uid: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync(String,String,String,final ServiceCallback<CertificateBundle>)
uid: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync*
fullName: com.microsoft.azure.keyvault.KeyVaultClient.getCertificateAsync(String certificateIdentifier, final ServiceCallback<CertificateBundle> serviceCallback)
name: getCertificateAsync(String certificateIdentifier, final ServiceCallback<CertificateBundle> serviceCallback)
package: com.microsoft.azure.keyvault
metadata: {}
