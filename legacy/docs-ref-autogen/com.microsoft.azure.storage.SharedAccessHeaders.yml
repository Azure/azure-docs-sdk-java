### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.SharedAccessHeaders()
  name: SharedAccessHeaders()
  nameWithType: SharedAccessHeaders.SharedAccessHeaders()
  summary: <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.SharedAccessHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessHeaders"></xref> class. </p>
  syntax: public SharedAccessHeaders()
  uid: com.microsoft.azure.storage.SharedAccessHeaders.SharedAccessHeaders()
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.SharedAccessHeaders(boolean preserveRawValue)
  name: SharedAccessHeaders(boolean preserveRawValue)
  nameWithType: SharedAccessHeaders.SharedAccessHeaders(boolean preserveRawValue)
  parameters:
  - description: <p>Whether the sdk should preserve the raw value of these headers. </p>
    name: preserveRawValue
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.SharedAccessHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessHeaders"></xref> class. The empty constructor should be preferred and this option should only be used by customers who are sure they do not want the safety usually afforded by this SDK when constructing a sas. </p>

    <p>The header values are typically decoded before building the sas token. This can cause problems if the desired value for one of the headers contains something that looks like encoding. Setting this flag to true will ensure that the value of these headers are preserved as set on this object when constructing the sas. </p>

    <p>Note that these values are preserved by encoding them here so that the decoding which happens at sas construction time returns them to the original values. So if get is called on this object when preserveRawValues was set to true, the value returned will be percent encoded.</p>

    <p></p>
  syntax: public SharedAccessHeaders(boolean preserveRawValue)
  uid: com.microsoft.azure.storage.SharedAccessHeaders.SharedAccessHeaders(boolean)
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.SharedAccessHeaders(SharedAccessHeaders other)
  name: SharedAccessHeaders(SharedAccessHeaders other)
  nameWithType: SharedAccessHeaders.SharedAccessHeaders(SharedAccessHeaders other)
  parameters:
  - description: <p>A <xref uid="com.microsoft.azure.storage.SharedAccessHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessHeaders"></xref> object which specifies the set of properties to clone. </p>
    name: other
    type: <xref href="com.microsoft.azure.storage.SharedAccessHeaders?alt=com.microsoft.azure.storage.SharedAccessHeaders&text=SharedAccessHeaders" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.SharedAccessHeaders" data-throw-if-not-resolved="false" data-raw-source="SharedAccessHeaders"></xref> class based on an existing instance.</p>

    <p></p>
  syntax: public SharedAccessHeaders(SharedAccessHeaders other)
  uid: com.microsoft.azure.storage.SharedAccessHeaders.SharedAccessHeaders(SharedAccessHeaders)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.getCacheControl()
  name: getCacheControl()
  nameWithType: SharedAccessHeaders.getCacheControl()
  returns:
    description: <p>A <code>String</code> which represents the cache control header. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the cache control header.</p>

    <p></p>
  syntax: public String getCacheControl()
  uid: com.microsoft.azure.storage.SharedAccessHeaders.getCacheControl()
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.getContentDisposition()
  name: getContentDisposition()
  nameWithType: SharedAccessHeaders.getContentDisposition()
  returns:
    description: <p>A <code>String</code> which represents the content disposition header. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content disposition header.</p>

    <p></p>
  syntax: public String getContentDisposition()
  uid: com.microsoft.azure.storage.SharedAccessHeaders.getContentDisposition()
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.getContentEncoding()
  name: getContentEncoding()
  nameWithType: SharedAccessHeaders.getContentEncoding()
  returns:
    description: <p>A <code>String</code> which represents the content encoding header. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content encoding header.</p>

    <p></p>
  syntax: public String getContentEncoding()
  uid: com.microsoft.azure.storage.SharedAccessHeaders.getContentEncoding()
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.getContentLanguage()
  name: getContentLanguage()
  nameWithType: SharedAccessHeaders.getContentLanguage()
  returns:
    description: <p>A <code>String</code> which represents the content language header. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content language header.</p>

    <p></p>
  syntax: public String getContentLanguage()
  uid: com.microsoft.azure.storage.SharedAccessHeaders.getContentLanguage()
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.getContentType()
  name: getContentType()
  nameWithType: SharedAccessHeaders.getContentType()
  returns:
    description: <p>A <code>String</code> which represents the content type header. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the content type header.</p>

    <p></p>
  syntax: public String getContentType()
  uid: com.microsoft.azure.storage.SharedAccessHeaders.getContentType()
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.setCacheControl(String cacheControl)
  name: setCacheControl(String cacheControl)
  nameWithType: SharedAccessHeaders.setCacheControl(String cacheControl)
  parameters:
  - description: <p>A <code>String</code> which specifies the cache control header. </p>
    name: cacheControl
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the cache control header.</p>

    <p></p>
  syntax: public void setCacheControl(String cacheControl)
  uid: com.microsoft.azure.storage.SharedAccessHeaders.setCacheControl(String)
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.setContentDisposition(String contentDisposition)
  name: setContentDisposition(String contentDisposition)
  nameWithType: SharedAccessHeaders.setContentDisposition(String contentDisposition)
  parameters:
  - description: <p>A <code>String</code> which specifies the content disposition header. </p>
    name: contentDisposition
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content disposition header.</p>

    <p></p>
  syntax: public void setContentDisposition(String contentDisposition)
  uid: com.microsoft.azure.storage.SharedAccessHeaders.setContentDisposition(String)
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.setContentEncoding(String contentEncoding)
  name: setContentEncoding(String contentEncoding)
  nameWithType: SharedAccessHeaders.setContentEncoding(String contentEncoding)
  parameters:
  - description: <p>A <code>String</code> which specifies the content encoding header. </p>
    name: contentEncoding
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content encoding header.</p>

    <p></p>
  syntax: public void setContentEncoding(String contentEncoding)
  uid: com.microsoft.azure.storage.SharedAccessHeaders.setContentEncoding(String)
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.setContentLanguage(String contentLanguage)
  name: setContentLanguage(String contentLanguage)
  nameWithType: SharedAccessHeaders.setContentLanguage(String contentLanguage)
  parameters:
  - description: <p>A <code>String</code> which specifies the content language header. </p>
    name: contentLanguage
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content language header.</p>

    <p></p>
  syntax: public void setContentLanguage(String contentLanguage)
  uid: com.microsoft.azure.storage.SharedAccessHeaders.setContentLanguage(String)
- fullName: com.microsoft.azure.storage.SharedAccessHeaders.setContentType(String contentType)
  name: setContentType(String contentType)
  nameWithType: SharedAccessHeaders.setContentType(String contentType)
  parameters:
  - description: <p>A <code>String</code> which specifies the content type header. </p>
    name: contentType
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the content type header.</p>

    <p></p>
  syntax: public void setContentType(String contentType)
  uid: com.microsoft.azure.storage.SharedAccessHeaders.setContentType(String)
nameWithType: SharedAccessHeaders
syntax: public class SharedAccessHeaders
type: class
uid: com.microsoft.azure.storage.SharedAccessHeaders
fullName: com.microsoft.azure.storage.SharedAccessHeaders
name: SharedAccessHeaders
package: com.microsoft.azure.storage
summary: <p>RESERVED FOR INTERNAL USE. Represents the optional headers that can be returned using SAS. </p>
metadata: {}
