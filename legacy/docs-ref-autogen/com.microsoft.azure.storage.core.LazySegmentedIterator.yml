### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.core.LazySegmentedIterator<CLIENT_TYPE, PARENT_TYPE, ENTITY_TYPE>.LazySegmentedIterator(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  name: LazySegmentedIterator(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  nameWithType: LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>.LazySegmentedIterator(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  parameters:
  - description: <p>a SegmentedStorageRequest to execute in order to retrieve the next segment of the result. </p>
    name: segmentGenerator
    type: final <xref href="com.microsoft.azure.storage.core.StorageRequest?alt=com.microsoft.azure.storage.core.StorageRequest&text=StorageRequest" data-throw-if-not-resolved="False"/>&lt;CLIENT_TYPE, PARENT_TYPE, <xref href="com.microsoft.azure.storage.ResultSegment?alt=com.microsoft.azure.storage.ResultSegment&text=ResultSegment" data-throw-if-not-resolved="False"/>&lt;ENTITY_TYPE&gt;&gt;
  - description: <p>the service client associated with the request </p>
    name: client
    type: <xref href="final+CLIENT_TYPE?alt=final+CLIENT_TYPE&text=final+CLIENT_TYPE" data-throw-if-not-resolved="False"/>
  - description: <p>the parent object </p>
    name: parent
    type: <xref href="final+PARENT_TYPE?alt=final+PARENT_TYPE&text=final+PARENT_TYPE" data-throw-if-not-resolved="False"/>
  - description: <p>the factory used to generate a new retry policy instance </p>
    name: policyFactory
    type: final <xref href="com.microsoft.azure.storage.RetryPolicyFactory?alt=com.microsoft.azure.storage.RetryPolicyFactory&text=RetryPolicyFactory" data-throw-if-not-resolved="False"/>
  - description: <p>an object used to track the execution of the operation </p>
    name: opContext
    type: final <xref href="com.microsoft.azure.storage.OperationContext?alt=com.microsoft.azure.storage.OperationContext&text=OperationContext" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes the LazySegmentedIterator.</p>

    <p></p>
  syntax: public LazySegmentedIterator(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>> segmentGenerator, final CLIENT_TYPE client, final PARENT_TYPE parent, final RetryPolicyFactory policyFactory, final OperationContext opContext)
  uid: com.microsoft.azure.storage.core.LazySegmentedIterator.LazySegmentedIterator(final StorageRequest<CLIENT_TYPE, PARENT_TYPE, ResultSegment<ENTITY_TYPE>>,final CLIENT_TYPE,final PARENT_TYPE,final RetryPolicyFactory,final OperationContext)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.util.Iterator&lt;ENTITY_TYPE&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.core.LazySegmentedIterator<CLIENT_TYPE, PARENT_TYPE, ENTITY_TYPE>.hasNext()
  name: hasNext()
  nameWithType: LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>.hasNext()
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: <p>Indicates if the iterator has another element. </p>
  syntax: public boolean hasNext()
  uid: com.microsoft.azure.storage.core.LazySegmentedIterator.hasNext()
- fullName: com.microsoft.azure.storage.core.LazySegmentedIterator<CLIENT_TYPE, PARENT_TYPE, ENTITY_TYPE>.next()
  name: next()
  nameWithType: LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>.next()
  returns:
    type: <xref href="ENTITY_TYPE?alt=ENTITY_TYPE&text=ENTITY_TYPE" data-throw-if-not-resolved="False"/>
  summary: <p>Returns the next element. </p>
  syntax: public ENTITY_TYPE next()
  uid: com.microsoft.azure.storage.core.LazySegmentedIterator.next()
- fullName: com.microsoft.azure.storage.core.LazySegmentedIterator<CLIENT_TYPE, PARENT_TYPE, ENTITY_TYPE>.remove()
  name: remove()
  nameWithType: LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>.remove()
  summary: <p>Removes an element, not supported </p>
  syntax: public void remove()
  uid: com.microsoft.azure.storage.core.LazySegmentedIterator.remove()
nameWithType: LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
syntax: public class LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
type: class
typeParameters:
- description: <p>The service client type </p>
  name: CLIENT_TYPE
- description: <p>The type of the parent object, i.e. CloudBlobClient for ListContainers etc. </p>
  name: PARENT_TYPE
- description: <p>The type of the objects the resulting iterable objects </p>
  name: ENTITY_TYPE
uid: com.microsoft.azure.storage.core.LazySegmentedIterator
fullName: com.microsoft.azure.storage.core.LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
name: LazySegmentedIterator<CLIENT_TYPE,PARENT_TYPE,ENTITY_TYPE>
package: com.microsoft.azure.storage.core
summary: >-
  <p>RESERVED FOR INTERNAL USE. Provides a lazy iterator which will retrieve the next segment of a result as the iterator is consumed</p>

  <p></p>
metadata: {}
