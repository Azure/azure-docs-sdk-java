### YamlMime:JavaType
uid: "com.azure.search.SearchServiceClient"
fullName: "com.azure.search.SearchServiceClient"
name: "SearchServiceClient"
nameWithType: "SearchServiceClient"
summary: "Synchronous Client to manage and query indexes, as well as manage other resources, on a Cognitive Search service"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **SearchServiceClient**"
methods:
- uid: "com.azure.search.SearchServiceClient.analyzeText(java.lang.String,com.azure.search.models.AnalyzeRequest)"
  fullName: "com.azure.search.SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
  name: "analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
  nameWithType: "SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
  summary: "Shows how an analyzer breaks text into tokens."
  parameters:
  - description: "the name of the index for which to test an analyzer"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the text and analyzer or analysis components to test"
    name: "analyzeRequest"
    type: "<xref href=\"com.azure.search.models.AnalyzeRequest?alt=com.azure.search.models.AnalyzeRequest&text=AnalyzeRequest\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<TokenInfo> analyzeText(String indexName, AnalyzeRequest analyzeRequest)"
  desc: "Shows how an analyzer breaks text into tokens."
  returns:
    description: "analyze result."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.TokenInfo?alt=com.azure.search.models.TokenInfo&text=TokenInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.analyzeText(java.lang.String,com.azure.search.models.AnalyzeRequest,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
  name: "analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
  summary: "Shows how an analyzer breaks text into tokens."
  parameters:
  - description: "the name of the index for which to test an analyzer"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the text and analyzer or analysis components to test"
    name: "analyzeRequest"
    type: "<xref href=\"com.azure.search.models.AnalyzeRequest?alt=com.azure.search.models.AnalyzeRequest&text=AnalyzeRequest\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<TokenInfo> analyzeText(String indexName, AnalyzeRequest analyzeRequest, RequestOptions requestOptions, Context context)"
  desc: "Shows how an analyzer breaks text into tokens."
  returns:
    description: "analyze result."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.TokenInfo?alt=com.azure.search.models.TokenInfo&text=TokenInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createDataSource(com.azure.search.models.DataSource)"
  fullName: "com.azure.search.SearchServiceClient.createDataSource(DataSource dataSource)"
  name: "createDataSource(DataSource dataSource)"
  nameWithType: "SearchServiceClient.createDataSource(DataSource dataSource)"
  summary: "Creates a new Azure Cognitive Search data source"
  parameters:
  - description: "The definition of the data source to create"
    name: "dataSource"
    type: "<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataSource createDataSource(DataSource dataSource)"
  desc: "Creates a new Azure Cognitive Search data source"
  returns:
    description: "the data source that was created."
    type: "<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createDataSourceWithResponse(com.azure.search.models.DataSource,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
  name: "createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search data source"
  parameters:
  - description: "the definition of the data source to create doesn't match specified values"
    name: "dataSource"
    type: "<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DataSource> createDataSourceWithResponse(DataSource dataSource, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search data source"
  returns:
    description: "a response containing data source that was created."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createIndex(com.azure.search.models.Index)"
  fullName: "com.azure.search.SearchServiceClient.createIndex(Index index)"
  name: "createIndex(Index index)"
  nameWithType: "SearchServiceClient.createIndex(Index index)"
  summary: "Creates a new Azure Cognitive Search index"
  parameters:
  - description: "definition of the index to create"
    name: "index"
    type: "<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Index createIndex(Index index)"
  desc: "Creates a new Azure Cognitive Search index"
  returns:
    description: "the created Index."
    type: "<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createIndexWithResponse(com.azure.search.models.Index,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
  name: "createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search index"
  parameters:
  - description: "definition of the index to create"
    name: "index"
    type: "<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Index> createIndexWithResponse(Index index, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search index"
  returns:
    description: "a response containing the created Index."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createIndexer(com.azure.search.models.Indexer)"
  fullName: "com.azure.search.SearchServiceClient.createIndexer(Indexer indexer)"
  name: "createIndexer(Indexer indexer)"
  nameWithType: "SearchServiceClient.createIndexer(Indexer indexer)"
  summary: "Creates a new Azure Cognitive Search indexer."
  parameters:
  - description: "definition of the indexer to create."
    name: "indexer"
    type: "<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Indexer createIndexer(Indexer indexer)"
  desc: "Creates a new Azure Cognitive Search indexer."
  returns:
    description: "the created Indexer."
    type: "<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createIndexerWithResponse(com.azure.search.models.Indexer,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
  name: "createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search indexer."
  parameters:
  - description: "definition of the indexer to create"
    name: "indexer"
    type: "<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Indexer> createIndexerWithResponse(Indexer indexer, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search indexer."
  returns:
    description: "a response containing the created Indexer."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateDataSource(com.azure.search.models.DataSource)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateDataSource(DataSource dataSource)"
  name: "createOrUpdateDataSource(DataSource dataSource)"
  nameWithType: "SearchServiceClient.createOrUpdateDataSource(DataSource dataSource)"
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists"
  parameters:
  - description: "The definition of the data source to create or update."
    name: "dataSource"
    type: "<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public DataSource createOrUpdateDataSource(DataSource dataSource)"
  desc: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists"
  returns:
    description: "the data source that was created or updated."
    type: "<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateDataSourceWithResponse(com.azure.search.models.DataSource,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists."
  parameters:
  - description: "the definition of the data source to create or update"
    name: "dataSource"
    type: "<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DataSource> createOrUpdateDataSourceWithResponse(DataSource dataSource, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search data source or updates a data source if it already exists."
  returns:
    description: "a response containing data source that was created or updated."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateIndex(com.azure.search.models.Index)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateIndex(Index index)"
  name: "createOrUpdateIndex(Index index)"
  nameWithType: "SearchServiceClient.createOrUpdateIndex(Index index)"
  summary: "Creates a new Azure Cognitive Search index or updates an index if it already exists."
  parameters:
  - description: "the definition of the index to create or update"
    name: "index"
    type: "<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Index createOrUpdateIndex(Index index)"
  desc: "Creates a new Azure Cognitive Search index or updates an index if it already exists."
  returns:
    description: "the index that was created or updated."
    type: "<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateIndexWithResponse(com.azure.search.models.Index,boolean,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search index or updates an index if it already exists."
  parameters:
  - description: "the definition of the index to create or update"
    name: "index"
    type: "<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />"
  - description: "allows new analyzers, tokenizers, token filters, or char filters to be added to an\n index by taking the index offline for at least a few seconds. This temporarily causes indexing and query requests\n to fail. Performance and write availability of the index can be impaired for several minutes after the index is\n updated, or longer for very large indexes."
    name: "allowIndexDowntime"
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Index> createOrUpdateIndexWithResponse(Index index, boolean allowIndexDowntime, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search index or updates an index if it already exists."
  returns:
    description: "a response containing the Index that was created or updated."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateIndexer(com.azure.search.models.Indexer)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateIndexer(Indexer indexer)"
  name: "createOrUpdateIndexer(Indexer indexer)"
  nameWithType: "SearchServiceClient.createOrUpdateIndexer(Indexer indexer)"
  summary: "Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists."
  parameters:
  - description: "The definition of the indexer to create or update."
    name: "indexer"
    type: "<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Indexer createOrUpdateIndexer(Indexer indexer)"
  desc: "Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists."
  returns:
    description: "a response containing the created Indexer."
    type: "<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateIndexerWithResponse(com.azure.search.models.Indexer,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists."
  parameters:
  - description: "The definition of the indexer to create or update."
    name: "indexer"
    type: "<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Indexer> createOrUpdateIndexerWithResponse(Indexer indexer, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search indexer or updates an indexer if it already exists."
  returns:
    description: "A response object containing the Indexer."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateSkillset(com.azure.search.models.Skillset)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateSkillset(Skillset skillset)"
  name: "createOrUpdateSkillset(Skillset skillset)"
  nameWithType: "SearchServiceClient.createOrUpdateSkillset(Skillset skillset)"
  summary: "Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists."
  parameters:
  - description: "the definition of the skillset to create or update"
    name: "skillset"
    type: "<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Skillset createOrUpdateSkillset(Skillset skillset)"
  desc: "Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists."
  returns:
    description: "the skillset that was created or updated."
    type: "<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateSkillsetWithResponse(com.azure.search.models.Skillset,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists."
  parameters:
  - description: "the definition of the skillset to create or update"
    name: "skillset"
    type: "<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Skillset> createOrUpdateSkillsetWithResponse(Skillset skillset, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search skillset or updates a skillset if it already exists."
  returns:
    description: "a response containing the skillset that was created or updated."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateSynonymMap(com.azure.search.models.SynonymMap)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateSynonymMap(SynonymMap synonymMap)"
  name: "createOrUpdateSynonymMap(SynonymMap synonymMap)"
  nameWithType: "SearchServiceClient.createOrUpdateSynonymMap(SynonymMap synonymMap)"
  summary: "Creates a new Azure Cognitive Search synonym map or updates a synonym map if it already exists."
  parameters:
  - description: "the definition of the synonym map to create or update"
    name: "synonymMap"
    type: "<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynonymMap createOrUpdateSynonymMap(SynonymMap synonymMap)"
  desc: "Creates a new Azure Cognitive Search synonym map or updates a synonym map if it already exists."
  returns:
    description: "the synonym map that was created or updated."
    type: "<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createOrUpdateSynonymMapWithResponse(com.azure.search.models.SynonymMap,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search synonym map or updates a synonym map if it already exists."
  parameters:
  - description: "the definition of the synonym map to create or update"
    name: "synonymMap"
    type: "<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SynonymMap> createOrUpdateSynonymMapWithResponse(SynonymMap synonymMap, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search synonym map or updates a synonym map if it already exists."
  returns:
    description: "a response containing the synonym map that was created or updated."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createSkillset(com.azure.search.models.Skillset)"
  fullName: "com.azure.search.SearchServiceClient.createSkillset(Skillset skillset)"
  name: "createSkillset(Skillset skillset)"
  nameWithType: "SearchServiceClient.createSkillset(Skillset skillset)"
  summary: "Creates a new skillset in an Azure Cognitive Search service."
  parameters:
  - description: "definition of the skillset containing one or more cognitive skills"
    name: "skillset"
    type: "<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Skillset createSkillset(Skillset skillset)"
  desc: "Creates a new skillset in an Azure Cognitive Search service."
  returns:
    description: "the created Skillset."
    type: "<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createSkillsetWithResponse(com.azure.search.models.Skillset,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
  name: "createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
  summary: "Creates a new skillset in an Azure Cognitive Search service."
  parameters:
  - description: "definition of the skillset containing one or more cognitive skills"
    name: "skillset"
    type: "<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Skillset> createSkillsetWithResponse(Skillset skillset, RequestOptions requestOptions, Context context)"
  desc: "Creates a new skillset in an Azure Cognitive Search service."
  returns:
    description: "a response containing the created Skillset."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.createSynonymMap(com.azure.search.models.SynonymMap)"
  fullName: "com.azure.search.SearchServiceClient.createSynonymMap(SynonymMap synonymMap)"
  name: "createSynonymMap(SynonymMap synonymMap)"
  nameWithType: "SearchServiceClient.createSynonymMap(SynonymMap synonymMap)"
  summary: "Creates a new Azure Cognitive Search synonym map."
  parameters:
  - description: "the definition of the synonym map to create"
    name: "synonymMap"
    type: "<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SynonymMap createSynonymMap(SynonymMap synonymMap)"
  desc: "Creates a new Azure Cognitive Search synonym map."
  returns:
    description: "the created <xref uid=\"com.azure.search.models.SynonymMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SynonymMap\"></xref>."
    type: "<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.createSynonymMapWithResponse(com.azure.search.models.SynonymMap,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
  name: "createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
  summary: "Creates a new Azure Cognitive Search synonym map."
  parameters:
  - description: "the definition of the synonym map to create"
    name: "synonymMap"
    type: "<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SynonymMap> createSynonymMapWithResponse(SynonymMap synonymMap, RequestOptions requestOptions, Context context)"
  desc: "Creates a new Azure Cognitive Search synonym map."
  returns:
    description: "a response containing the created SynonymMap."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.deleteDataSource(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.deleteDataSource(String dataSourceName)"
  name: "deleteDataSource(String dataSourceName)"
  nameWithType: "SearchServiceClient.deleteDataSource(String dataSourceName)"
  summary: "Delete a Data<wbr>Source"
  parameters:
  - description: "the name of the data source to be deleted"
    name: "dataSourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteDataSource(String dataSourceName)"
  desc: "Delete a DataSource"
- uid: "com.azure.search.SearchServiceClient.deleteDataSourceWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Delete a Data<wbr>Source with Response"
  parameters:
  - description: "the name of the data source to be deleted"
    name: "dataSourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteDataSourceWithResponse(String dataSourceName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Delete a DataSource with Response"
  returns:
    description: "an empty response"
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.search.SearchServiceClient.deleteIndex(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.deleteIndex(String indexName)"
  name: "deleteIndex(String indexName)"
  nameWithType: "SearchServiceClient.deleteIndex(String indexName)"
  summary: "Deletes an Azure Cognitive Search index and all the documents it contains."
  parameters:
  - description: "the name of the index to delete"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteIndex(String indexName)"
  desc: "Deletes an Azure Cognitive Search index and all the documents it contains."
- uid: "com.azure.search.SearchServiceClient.deleteIndexWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Deletes an Azure Cognitive Search index and all the documents it contains."
  parameters:
  - description: "the name of the index to delete"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the Http pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteIndexWithResponse(String indexName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Deletes an Azure Cognitive Search index and all the documents it contains."
  returns:
    description: "a response signalling completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.search.SearchServiceClient.deleteIndexer(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.deleteIndexer(String indexerName)"
  name: "deleteIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.deleteIndexer(String indexerName)"
  summary: "Deletes an Azure Cognitive Search indexer."
  parameters:
  - description: "the name of the indexer to delete"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteIndexer(String indexerName)"
  desc: "Deletes an Azure Cognitive Search indexer."
- uid: "com.azure.search.SearchServiceClient.deleteIndexerWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Deletes an Azure Cognitive Search indexer."
  parameters:
  - description: "the name of the indexer to delete"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "the context"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteIndexerWithResponse(String indexerName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Deletes an Azure Cognitive Search indexer."
  returns:
    description: "a response signalling completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.search.SearchServiceClient.deleteSkillset(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.deleteSkillset(String skillsetName)"
  name: "deleteSkillset(String skillsetName)"
  nameWithType: "SearchServiceClient.deleteSkillset(String skillsetName)"
  summary: "Deletes a cognitive skillset in an Azure Cognitive Search service."
  parameters:
  - description: "the name of the skillset to delete"
    name: "skillsetName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteSkillset(String skillsetName)"
  desc: "Deletes a cognitive skillset in an Azure Cognitive Search service."
- uid: "com.azure.search.SearchServiceClient.deleteSkillsetWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Deletes a cognitive skillset in an Azure Cognitive Search service."
  parameters:
  - description: "the name of the skillset to delete"
    name: "skillsetName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteSkillsetWithResponse(String skillsetName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Deletes a cognitive skillset in an Azure Cognitive Search service."
  returns:
    description: "a response signalling completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.search.SearchServiceClient.deleteSynonymMap(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.deleteSynonymMap(String synonymMapName)"
  name: "deleteSynonymMap(String synonymMapName)"
  nameWithType: "SearchServiceClient.deleteSynonymMap(String synonymMapName)"
  summary: "Deletes an Azure Cognitive Search synonym map."
  parameters:
  - description: "the name of the synonym map to delete"
    name: "synonymMapName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteSynonymMap(String synonymMapName)"
  desc: "Deletes an Azure Cognitive Search synonym map."
- uid: "com.azure.search.SearchServiceClient.deleteSynonymMapWithResponse(java.lang.String,com.azure.core.http.MatchConditions,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  name: "deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  summary: "Deletes an Azure Cognitive Search synonym map."
  parameters:
  - description: "the name of the synonym map to delete"
    name: "synonymMapName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the condition where the operation will be performed if the ETag on the server matches or\n doesn't match specified values"
    name: "accessCondition"
    type: "<xref href=\"com.azure.core.http.MatchConditions?alt=com.azure.core.http.MatchConditions&text=MatchConditions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the Http pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteSynonymMapWithResponse(String synonymMapName, MatchConditions accessCondition, RequestOptions requestOptions, Context context)"
  desc: "Deletes an Azure Cognitive Search synonym map."
  returns:
    description: "a response signalling completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.search.SearchServiceClient.getDataSource(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getDataSource(String dataSourceName)"
  name: "getDataSource(String dataSourceName)"
  nameWithType: "SearchServiceClient.getDataSource(String dataSourceName)"
  summary: "Retrieves a Data<wbr>Source from an Azure Cognitive Search service."
  parameters:
  - description: "the name of the data source to retrieve"
    name: "dataSourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public DataSource getDataSource(String dataSourceName)"
  desc: "Retrieves a DataSource from an Azure Cognitive Search service."
  returns:
    description: "the DataSource."
    type: "<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getDataSourceWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  name: "getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  summary: "Retrieves a Data<wbr>Source from an Azure Cognitive Search service."
  parameters:
  - description: "the name of the data source to retrieve"
    name: "dataSourceName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging."
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<DataSource> getDataSourceWithResponse(String dataSourceName, RequestOptions requestOptions, Context context)"
  desc: "Retrieves a DataSource from an Azure Cognitive Search service."
  returns:
    description: "a response containing the DataSource."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.getEndpoint()"
  fullName: "com.azure.search.SearchServiceClient.getEndpoint()"
  name: "getEndpoint()"
  nameWithType: "SearchServiceClient.getEndpoint()"
  summary: "Gets the endpoint for the Azure Cognitive Search service."
  syntax: "public String getEndpoint()"
  desc: "Gets the endpoint for the Azure Cognitive Search service."
  returns:
    description: "the endpoint value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.SearchServiceClient.getIndex(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getIndex(String indexName)"
  name: "getIndex(String indexName)"
  nameWithType: "SearchServiceClient.getIndex(String indexName)"
  summary: "Retrieves an index definition from the Azure Cognitive Search."
  parameters:
  - description: "the name of the index to retrieve"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Index getIndex(String indexName)"
  desc: "Retrieves an index definition from the Azure Cognitive Search."
  returns:
    description: "the Index."
    type: "<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getIndexClient(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getIndexClient(String indexName)"
  name: "getIndexClient(String indexName)"
  nameWithType: "SearchServiceClient.getIndexClient(String indexName)"
  summary: "Initializes a new <xref uid=\"com.azure.search.SearchIndexClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndexClient\"></xref> using the given Index name and the same configuration as the Search<wbr>Service<wbr>Client."
  parameters:
  - description: "the name of the Index for the client"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SearchIndexClient getIndexClient(String indexName)"
  desc: "Initializes a new <xref uid=\"com.azure.search.SearchIndexClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndexClient\"></xref> using the given Index name and the same configuration as the SearchServiceClient."
  returns:
    description: "a <xref uid=\"com.azure.search.SearchIndexClient\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SearchIndexClient\"></xref> created from the service client configuration"
    type: "<xref href=\"com.azure.search.SearchIndexClient?alt=com.azure.search.SearchIndexClient&text=SearchIndexClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getIndexStatistics(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getIndexStatistics(String indexName)"
  name: "getIndexStatistics(String indexName)"
  nameWithType: "SearchServiceClient.getIndexStatistics(String indexName)"
  summary: "Returns statistics for the given index, including a document count and storage usage."
  parameters:
  - description: "the name of the index for which to retrieve statistics"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public GetIndexStatisticsResult getIndexStatistics(String indexName)"
  desc: "Returns statistics for the given index, including a document count and storage usage."
  returns:
    description: "the index statistics result."
    type: "<xref href=\"com.azure.search.models.GetIndexStatisticsResult?alt=com.azure.search.models.GetIndexStatisticsResult&text=GetIndexStatisticsResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getIndexStatisticsWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  name: "getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  summary: "Returns statistics for the given index, including a document count and storage usage."
  parameters:
  - description: "the name of the index for which to retrieve statistics"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<GetIndexStatisticsResult> getIndexStatisticsWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  desc: "Returns statistics for the given index, including a document count and storage usage."
  returns:
    description: "a response containing the index statistics result."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.GetIndexStatisticsResult?alt=com.azure.search.models.GetIndexStatisticsResult&text=GetIndexStatisticsResult\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.getIndexWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  name: "getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  summary: "Retrieves an index definition from the Azure Cognitive Search."
  parameters:
  - description: "the name of the index to retrieve"
    name: "indexName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Index> getIndexWithResponse(String indexName, RequestOptions requestOptions, Context context)"
  desc: "Retrieves an index definition from the Azure Cognitive Search."
  returns:
    description: "a response containing the Index."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.getIndexer(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getIndexer(String indexerName)"
  name: "getIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.getIndexer(String indexerName)"
  summary: "Retrieves an indexer definition."
  parameters:
  - description: "the name of the indexer to retrieve"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Indexer getIndexer(String indexerName)"
  desc: "Retrieves an indexer definition."
  returns:
    description: "the indexer."
    type: "<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getIndexerStatus(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getIndexerStatus(String indexerName)"
  name: "getIndexerStatus(String indexerName)"
  nameWithType: "SearchServiceClient.getIndexerStatus(String indexerName)"
  summary: "Returns the current status and execution history of an indexer."
  parameters:
  - description: "the name of the indexer for which to retrieve status"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public IndexerExecutionInfo getIndexerStatus(String indexerName)"
  desc: "Returns the current status and execution history of an indexer."
  returns:
    description: "a response with the indexer execution info."
    type: "<xref href=\"com.azure.search.models.IndexerExecutionInfo?alt=com.azure.search.models.IndexerExecutionInfo&text=IndexerExecutionInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getIndexerStatusWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  name: "getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  summary: "Returns the current status and execution history of an indexer."
  parameters:
  - description: "the name of the indexer for which to retrieve status"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<IndexerExecutionInfo> getIndexerStatusWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  desc: "Returns the current status and execution history of an indexer."
  returns:
    description: "a response with the indexer execution info."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.IndexerExecutionInfo?alt=com.azure.search.models.IndexerExecutionInfo&text=IndexerExecutionInfo\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.getIndexerWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  name: "getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  summary: "Retrieves an indexer definition."
  parameters:
  - description: "the name of the indexer to retrieve"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Indexer> getIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  desc: "Retrieves an indexer definition."
  returns:
    description: "a response containing the indexer."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.getServiceStatistics()"
  fullName: "com.azure.search.SearchServiceClient.getServiceStatistics()"
  name: "getServiceStatistics()"
  nameWithType: "SearchServiceClient.getServiceStatistics()"
  summary: "Returns service level statistics for a search service, including service counters and limits."
  syntax: "public ServiceStatistics getServiceStatistics()"
  desc: "Returns service level statistics for a search service, including service counters and limits."
  returns:
    description: "the search service statistics result."
    type: "<xref href=\"com.azure.search.models.ServiceStatistics?alt=com.azure.search.models.ServiceStatistics&text=ServiceStatistics\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getServiceStatisticsWithResponse(com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
  name: "getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
  summary: "Returns service level statistics for a search service, including service counters and limits."
  parameters:
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<ServiceStatistics> getServiceStatisticsWithResponse(RequestOptions requestOptions, Context context)"
  desc: "Returns service level statistics for a search service, including service counters and limits."
  returns:
    description: "the search service statistics result."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.ServiceStatistics?alt=com.azure.search.models.ServiceStatistics&text=ServiceStatistics\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.getServiceVersion()"
  fullName: "com.azure.search.SearchServiceClient.getServiceVersion()"
  name: "getServiceVersion()"
  nameWithType: "SearchServiceClient.getServiceVersion()"
  summary: "Gets search service version."
  syntax: "public SearchServiceVersion getServiceVersion()"
  desc: "Gets search service version."
  returns:
    description: "the search service version value."
    type: "<xref href=\"com.azure.search.SearchServiceVersion?alt=com.azure.search.SearchServiceVersion&text=SearchServiceVersion\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getSkillset(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getSkillset(String skillsetName)"
  name: "getSkillset(String skillsetName)"
  nameWithType: "SearchServiceClient.getSkillset(String skillsetName)"
  summary: "Retrieves a skillset definition."
  parameters:
  - description: "the name of the skillset to retrieve"
    name: "skillsetName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public Skillset getSkillset(String skillsetName)"
  desc: "Retrieves a skillset definition."
  returns:
    description: "the Skillset."
    type: "<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getSkillsetWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
  name: "getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
  summary: "Retrieves a skillset definition."
  parameters:
  - description: "the name of the skillset to retrieve"
    name: "skillsetName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Skillset> getSkillsetWithResponse(String skillsetName, RequestOptions requestOptions, Context context)"
  desc: "Retrieves a skillset definition."
  returns:
    description: "a response containing the Skillset."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.getSynonymMap(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.getSynonymMap(String synonymMapName)"
  name: "getSynonymMap(String synonymMapName)"
  nameWithType: "SearchServiceClient.getSynonymMap(String synonymMapName)"
  summary: "Retrieves a synonym map definition."
  parameters:
  - description: "name of the synonym map to retrieve"
    name: "synonymMapName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SynonymMap getSynonymMap(String synonymMapName)"
  desc: "Retrieves a synonym map definition."
  returns:
    description: "the <xref uid=\"com.azure.search.models.SynonymMap\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SynonymMap\"></xref> definition"
    type: "<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.SearchServiceClient.getSynonymMapWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
  name: "getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
  summary: "Retrieves a synonym map definition."
  parameters:
  - description: "name of the synonym map to retrieve"
    name: "synonymMapName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "a context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<SynonymMap> getSynonymMapWithResponse(String synonymMapName, RequestOptions requestOptions, Context context)"
  desc: "Retrieves a synonym map definition."
  returns:
    description: "a response containing the SynonymMap."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listDataSources()"
  fullName: "com.azure.search.SearchServiceClient.listDataSources()"
  name: "listDataSources()"
  nameWithType: "SearchServiceClient.listDataSources()"
  summary: "List all Data<wbr>Sources from an Azure Cognitive Search service."
  syntax: "public PagedIterable<DataSource> listDataSources()"
  desc: "List all DataSources from an Azure Cognitive Search service."
  returns:
    description: "a list of DataSources"
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listDataSources(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.listDataSources(String select, RequestOptions requestOptions, Context context)"
  name: "listDataSources(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listDataSources(String select, RequestOptions requestOptions, Context context)"
  summary: "List all Data<wbr>Sources from an Azure Cognitive Search service."
  parameters:
  - description: "Selects which top-level properties of DataSource definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties."
    name: "select"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging."
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "Additional context that is passed through the HTTP pipeline during the service call."
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<DataSource> listDataSources(String select, RequestOptions requestOptions, Context context)"
  desc: "List all DataSources from an Azure Cognitive Search service."
  returns:
    description: "a response containing the list of DataSources."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.DataSource?alt=com.azure.search.models.DataSource&text=DataSource\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listIndexers()"
  fullName: "com.azure.search.SearchServiceClient.listIndexers()"
  name: "listIndexers()"
  nameWithType: "SearchServiceClient.listIndexers()"
  summary: "Lists all indexers available for an Azure Cognitive Search service."
  syntax: "public PagedIterable<Indexer> listIndexers()"
  desc: "Lists all indexers available for an Azure Cognitive Search service."
  returns:
    description: "all Indexers from the Search service."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listIndexers(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.listIndexers(String select, RequestOptions requestOptions, Context context)"
  name: "listIndexers(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listIndexers(String select, RequestOptions requestOptions, Context context)"
  summary: "Lists all indexers available for an Azure Cognitive Search service."
  parameters:
  - description: "Selects which top-level properties of the indexers to retrieve. Specified as a comma-separated list\n of JSON property names, or '*' for all properties. The default is all properties."
    name: "select"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Additional parameters for the operation."
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<Indexer> listIndexers(String select, RequestOptions requestOptions, Context context)"
  desc: "Lists all indexers available for an Azure Cognitive Search service."
  returns:
    description: "all Indexers from the Search service."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Indexer?alt=com.azure.search.models.Indexer&text=Indexer\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listIndexes()"
  fullName: "com.azure.search.SearchServiceClient.listIndexes()"
  name: "listIndexes()"
  nameWithType: "SearchServiceClient.listIndexes()"
  summary: "Lists all indexes available for an Azure Cognitive Search service."
  syntax: "public PagedIterable<Index> listIndexes()"
  desc: "Lists all indexes available for an Azure Cognitive Search service."
  returns:
    description: "the list of indexes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listIndexes(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.listIndexes(String select, RequestOptions requestOptions, Context context)"
  name: "listIndexes(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listIndexes(String select, RequestOptions requestOptions, Context context)"
  summary: "Lists all indexes available for an Azure Cognitive Search service."
  parameters:
  - description: "selects which top-level properties of the index definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties"
    name: "select"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<Index> listIndexes(String select, RequestOptions requestOptions, Context context)"
  desc: "Lists all indexes available for an Azure Cognitive Search service."
  returns:
    description: "the list of indexes."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Index?alt=com.azure.search.models.Index&text=Index\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listSkillsets()"
  fullName: "com.azure.search.SearchServiceClient.listSkillsets()"
  name: "listSkillsets()"
  nameWithType: "SearchServiceClient.listSkillsets()"
  summary: "Lists all skillsets available for an Azure Cognitive Search service."
  syntax: "public PagedIterable<Skillset> listSkillsets()"
  desc: "Lists all skillsets available for an Azure Cognitive Search service."
  returns:
    description: "the list of skillsets."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listSkillsets(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.listSkillsets(String select, RequestOptions requestOptions, Context context)"
  name: "listSkillsets(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listSkillsets(String select, RequestOptions requestOptions, Context context)"
  summary: "Lists all skillsets available for an Azure Cognitive Search service."
  parameters:
  - description: "selects which top-level properties of the skillset definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties"
    name: "select"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<Skillset> listSkillsets(String select, RequestOptions requestOptions, Context context)"
  desc: "Lists all skillsets available for an Azure Cognitive Search service."
  returns:
    description: "the list of skillsets."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.Skillset?alt=com.azure.search.models.Skillset&text=Skillset\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listSynonymMaps()"
  fullName: "com.azure.search.SearchServiceClient.listSynonymMaps()"
  name: "listSynonymMaps()"
  nameWithType: "SearchServiceClient.listSynonymMaps()"
  summary: "Lists all synonym maps available for an Azure Cognitive Search service."
  syntax: "public PagedIterable<SynonymMap> listSynonymMaps()"
  desc: "Lists all synonym maps available for an Azure Cognitive Search service."
  returns:
    description: "the list of synonym maps."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.listSynonymMaps(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
  name: "listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
  summary: "Lists all synonym maps available for an Azure Cognitive Search service."
  parameters:
  - description: "selects which top-level properties of the index definitions to retrieve. Specified as a\n comma-separated list of JSON property names, or '*' for all properties. The default is all properties"
    name: "select"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<SynonymMap> listSynonymMaps(String select, RequestOptions requestOptions, Context context)"
  desc: "Lists all synonym maps available for an Azure Cognitive Search service."
  returns:
    description: "the list of synonym maps."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.search.models.SynonymMap?alt=com.azure.search.models.SynonymMap&text=SynonymMap\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.search.SearchServiceClient.resetIndexer(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.resetIndexer(String indexerName)"
  name: "resetIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.resetIndexer(String indexerName)"
  summary: "Resets the change tracking state associated with an indexer."
  parameters:
  - description: "the name of the indexer to reset"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void resetIndexer(String indexerName)"
  desc: "Resets the change tracking state associated with an indexer."
- uid: "com.azure.search.SearchServiceClient.resetIndexerWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  name: "resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  summary: "Resets the change tracking state associated with an indexer."
  parameters:
  - description: "the name of the indexer to reset"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> resetIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  desc: "Resets the change tracking state associated with an indexer."
  returns:
    description: "a response signalling completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.search.SearchServiceClient.runIndexer(java.lang.String)"
  fullName: "com.azure.search.SearchServiceClient.runIndexer(String indexerName)"
  name: "runIndexer(String indexerName)"
  nameWithType: "SearchServiceClient.runIndexer(String indexerName)"
  summary: "Runs an indexer on-demand."
  parameters:
  - description: "the name of the indexer to run"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void runIndexer(String indexerName)"
  desc: "Runs an indexer on-demand."
- uid: "com.azure.search.SearchServiceClient.runIndexerWithResponse(java.lang.String,com.azure.search.models.RequestOptions,com.azure.core.util.Context)"
  fullName: "com.azure.search.SearchServiceClient.runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  name: "runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  nameWithType: "SearchServiceClient.runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  summary: "Runs an indexer on-demand."
  parameters:
  - description: "the name of the indexer to run"
    name: "indexerName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "additional parameters for the operation. Contains the tracking ID sent with the request to\n help with debugging"
    name: "requestOptions"
    type: "<xref href=\"com.azure.search.models.RequestOptions?alt=com.azure.search.models.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  - description: "additional context that is passed through the HTTP pipeline during the service call"
    name: "context"
    type: "<xref href=\"com.azure.core.util.Context?alt=com.azure.core.util.Context&text=Context\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> runIndexerWithResponse(String indexerName, RequestOptions requestOptions, Context context)"
  desc: "Runs an indexer on-demand."
  returns:
    description: "a response signalling completion."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
type: "class"
desc: "Synchronous Client to manage and query indexes, as well as manage other resources, on a Cognitive Search service"
metadata: {}
package: "com.azure.search"
artifact: com.azure:azure-search:11.0.0-beta.1
