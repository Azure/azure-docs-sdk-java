### YamlMime:JavaType
uid: "com.azure.search.models.PatternTokenizer"
fullName: "com.azure.search.models.PatternTokenizer"
name: "PatternTokenizer"
nameWithType: "PatternTokenizer"
summary: "Tokenizer that uses regex pattern matching to construct distinct tokens."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.azure.search.models.Tokenizer?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.azure.search.models.Tokenizer?alt=com.azure.search.models.Tokenizer&text=Tokenizer\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.azure.search.models.Tokenizer.getName()?alt=com.azure.search.models.Tokenizer.getName&text=getName\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.azure.search.models.Tokenizer.setName(java.lang.String)?alt=com.azure.search.models.Tokenizer.setName&text=setName\" data-throw-if-not-resolved=\"False\" />"
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **PatternTokenizer**</br> extends <xref href=\"com.azure.search.models.Tokenizer?alt=com.azure.search.models.Tokenizer&text=Tokenizer\" data-throw-if-not-resolved=\"False\" />"
constructors:
- uid: "com.azure.search.models.PatternTokenizer.PatternTokenizer()"
  fullName: "com.azure.search.models.PatternTokenizer.PatternTokenizer()"
  name: "PatternTokenizer()"
  nameWithType: "PatternTokenizer.PatternTokenizer()"
  syntax: "public PatternTokenizer()"
methods:
- uid: "com.azure.search.models.PatternTokenizer.getFlags()"
  fullName: "com.azure.search.models.PatternTokenizer.getFlags()"
  name: "getFlags()"
  nameWithType: "PatternTokenizer.getFlags()"
  summary: "Get the flags property: Regular expression flags."
  syntax: "public RegexFlags getFlags()"
  desc: "Get the flags property: Regular expression flags. Possible values include: 'CANON\\_EQ', 'CASE\\_INSENSITIVE', 'COMMENTS', 'DOTALL', 'LITERAL', 'MULTILINE', 'UNICODE\\_CASE', 'UNIX\\_LINES'."
  returns:
    description: "the flags value."
    type: "<xref href=\"com.azure.search.models.RegexFlags?alt=com.azure.search.models.RegexFlags&text=RegexFlags\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.PatternTokenizer.getGroup()"
  fullName: "com.azure.search.models.PatternTokenizer.getGroup()"
  name: "getGroup()"
  nameWithType: "PatternTokenizer.getGroup()"
  summary: "Get the group property: The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens."
  syntax: "public Integer getGroup()"
  desc: "Get the group property: The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1."
  returns:
    description: "the group value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
- uid: "com.azure.search.models.PatternTokenizer.getPattern()"
  fullName: "com.azure.search.models.PatternTokenizer.getPattern()"
  name: "getPattern()"
  nameWithType: "PatternTokenizer.getPattern()"
  summary: "Get the pattern property: A regular expression pattern to match token separators."
  syntax: "public String getPattern()"
  desc: "Get the pattern property: A regular expression pattern to match token separators. Default is an expression that matches one or more whitespace characters."
  returns:
    description: "the pattern value."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
- uid: "com.azure.search.models.PatternTokenizer.setFlags(com.azure.search.models.RegexFlags)"
  fullName: "com.azure.search.models.PatternTokenizer.setFlags(RegexFlags flags)"
  name: "setFlags(RegexFlags flags)"
  nameWithType: "PatternTokenizer.setFlags(RegexFlags flags)"
  summary: "Set the flags property: Regular expression flags."
  parameters:
  - description: "the flags value to set."
    name: "flags"
    type: "<xref href=\"com.azure.search.models.RegexFlags?alt=com.azure.search.models.RegexFlags&text=RegexFlags\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PatternTokenizer setFlags(RegexFlags flags)"
  desc: "Set the flags property: Regular expression flags. Possible values include: 'CANON\\_EQ', 'CASE\\_INSENSITIVE', 'COMMENTS', 'DOTALL', 'LITERAL', 'MULTILINE', 'UNICODE\\_CASE', 'UNIX\\_LINES'."
  returns:
    description: "the PatternTokenizer object itself."
    type: "<xref href=\"com.azure.search.models.PatternTokenizer?alt=com.azure.search.models.PatternTokenizer&text=PatternTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.PatternTokenizer.setGroup(java.lang.Integer)"
  fullName: "com.azure.search.models.PatternTokenizer.setGroup(Integer group)"
  name: "setGroup(Integer group)"
  nameWithType: "PatternTokenizer.setGroup(Integer group)"
  summary: "Set the group property: The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens."
  parameters:
  - description: "the group value to set."
    name: "group"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html\">Integer</a>"
  syntax: "public PatternTokenizer setGroup(Integer group)"
  desc: "Set the group property: The zero-based ordinal of the matching group in the regular expression pattern to extract into tokens. Use -1 if you want to use the entire pattern to split the input into tokens, irrespective of matching groups. Default is -1."
  returns:
    description: "the PatternTokenizer object itself."
    type: "<xref href=\"com.azure.search.models.PatternTokenizer?alt=com.azure.search.models.PatternTokenizer&text=PatternTokenizer\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.search.models.PatternTokenizer.setPattern(java.lang.String)"
  fullName: "com.azure.search.models.PatternTokenizer.setPattern(String pattern)"
  name: "setPattern(String pattern)"
  nameWithType: "PatternTokenizer.setPattern(String pattern)"
  summary: "Set the pattern property: A regular expression pattern to match token separators."
  parameters:
  - description: "the pattern value to set."
    name: "pattern"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PatternTokenizer setPattern(String pattern)"
  desc: "Set the pattern property: A regular expression pattern to match token separators. Default is an expression that matches one or more whitespace characters."
  returns:
    description: "the PatternTokenizer object itself."
    type: "<xref href=\"com.azure.search.models.PatternTokenizer?alt=com.azure.search.models.PatternTokenizer&text=PatternTokenizer\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Tokenizer that uses regex pattern matching to construct distinct tokens. This tokenizer is implemented using Apache Lucene."
metadata: {}
package: "com.azure.search.models"
artifact: com.azure:azure-search:11.0.0-beta.1
