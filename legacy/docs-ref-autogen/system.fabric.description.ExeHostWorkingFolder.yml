### YamlMime:JavaEnum
fields:
- fullName: system.fabric.description.ExeHostWorkingFolder.CodeBase
  name: CodeBase
  nameWithType: ExeHostWorkingFolder.CodeBase
  summary: <p>Indicates that the start folder is from where the executable / program that is specified in the ExeHost is loaded. This folder can differ from the Code Package folder if there are multiple levels in the Code Package folder and a specified program is from one of the nested folders. </p>
  uid: system.fabric.description.ExeHostWorkingFolder.CodeBase
- fullName: system.fabric.description.ExeHostWorkingFolder.CodePackage
  name: CodePackage
  nameWithType: ExeHostWorkingFolder.CodePackage
  summary: <p>Indicates that the start folder is the Code Package's folder. </p>
  uid: system.fabric.description.ExeHostWorkingFolder.CodePackage
- fullName: system.fabric.description.ExeHostWorkingFolder.Invalid
  name: Invalid
  nameWithType: ExeHostWorkingFolder.Invalid
  summary: <p>Do not use. </p>
  uid: system.fabric.description.ExeHostWorkingFolder.Invalid
- fullName: system.fabric.description.ExeHostWorkingFolder.Work
  name: Work
  nameWithType: ExeHostWorkingFolder.Work
  summary: <p>Indicates that the start folder is the application's work folder. </p>
  uid: system.fabric.description.ExeHostWorkingFolder.Work
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.lang.Enum&lt;ExeHostWorkingFolder&gt;" data-throw-if-not-resolved="False"/>
methods:
- fullName: system.fabric.description.ExeHostWorkingFolder.get(int fldrValue)
  name: get(int fldrValue)
  nameWithType: ExeHostWorkingFolder.get(int fldrValue)
  parameters:
  - name: fldrValue
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="system.fabric.description.ExeHostWorkingFolder?alt=system.fabric.description.ExeHostWorkingFolder&text=ExeHostWorkingFolder" data-throw-if-not-resolved="False"/>
  syntax: public static ExeHostWorkingFolder get(int fldrValue)
  uid: system.fabric.description.ExeHostWorkingFolder.get(int)
nameWithType: ExeHostWorkingFolder
syntax: public enum ExeHostWorkingFolder
uid: system.fabric.description.ExeHostWorkingFolder
name: ExeHostWorkingFolder
package: system.fabric.description
metadata: {}
