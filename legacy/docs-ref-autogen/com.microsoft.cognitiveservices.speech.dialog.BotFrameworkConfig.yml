### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="AutoCloseable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.cognitiveservices.speech.SpeechConfig" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig?alt=com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig&text=DialogServiceConfig" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.close()
- com.microsoft.cognitiveservices.speech.SpeechConfig.enableAudioLogging()
- com.microsoft.cognitiveservices.speech.SpeechConfig.enableDictation()
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromEndpoint(java.net.URI)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI,String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.fromHost(java.net.URI)
- com.microsoft.cognitiveservices.speech.SpeechConfig.getAuthorizationToken()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getEndpointId()
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getOutputFormat()
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.getProperty(PropertyId)
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechRecognitionLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisLanguage()
- com.microsoft.cognitiveservices.speech.SpeechConfig.getSpeechSynthesisVoiceName()
- com.microsoft.cognitiveservices.speech.SpeechConfig.requestWordLevelTimestamps()
- com.microsoft.cognitiveservices.speech.SpeechConfig.setAuthorizationToken(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setEndpointId(String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setOutputFormat(OutputFormat)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setProfanity(ProfanityOption)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(String,String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProperty(PropertyId,String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setProxy(String,int,String,String)
- com.microsoft.cognitiveservices.speech.dialog.DialogServiceConfig.setServiceProperty(String,String,ServicePropertyChannel)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechRecognitionLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisLanguage(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisOutputFormat(SpeechSynthesisOutputFormat)
- com.microsoft.cognitiveservices.speech.SpeechConfig.setSpeechSynthesisVoiceName(String)
- com.microsoft.cognitiveservices.speech.SpeechConfig.speechConfigClass
methods:
- fullName: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromAuthorizationToken(String authorizationToken, String region)
  name: fromAuthorizationToken(String authorizationToken, String region)
  nameWithType: BotFrameworkConfig.fromAuthorizationToken(String authorizationToken, String region)
  parameters:
  - description: <p>The authorization token. </p>
    name: authorizationToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>). </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig?alt=com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig&text=BotFrameworkConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of a bot framework config with specified authorization token and service region. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created. For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token. Otherwise, the recognizers will encounter errors during recognition. </p>'
  syntax: public static BotFrameworkConfig fromAuthorizationToken(String authorizationToken, String region)
  uid: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromAuthorizationToken(String,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromAuthorizationToken(String authorizationToken, String region, String botId)
  name: fromAuthorizationToken(String authorizationToken, String region, String botId)
  nameWithType: BotFrameworkConfig.fromAuthorizationToken(String authorizationToken, String region, String botId)
  parameters:
  - description: <p>The authorization token. </p>
    name: authorizationToken
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>). </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Identifier used to select a bot associated with this subscription. </p>
    name: botId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A speech config instance. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig?alt=com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig&text=BotFrameworkConfig" data-throw-if-not-resolved="False"/>
  summary: '<p>Creates an instance of a bot framework config with specified authorization token, service region, and bot ID. Note: The caller needs to ensure that the authorization token is valid. Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token. As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created. For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token. Otherwise, the recognizers will encounter errors during recognition. </p>'
  syntax: public static BotFrameworkConfig fromAuthorizationToken(String authorizationToken, String region, String botId)
  uid: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromAuthorizationToken(String,String,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromSubscription(String subscription, String region)
  name: fromSubscription(String subscription, String region)
  nameWithType: BotFrameworkConfig.fromSubscription(String subscription, String region)
  parameters:
  - description: <p>Service subscription key. </p>
    name: subscription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Service region key. </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The created config. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig?alt=com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig&text=BotFrameworkConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates an instance of the bot framework config with the specified subscription and region. </p>
  syntax: public static BotFrameworkConfig fromSubscription(String subscription, String region)
  uid: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromSubscription(String,String)
- fullName: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromSubscription(String subscription, String region, String botId)
  name: fromSubscription(String subscription, String region, String botId)
  nameWithType: BotFrameworkConfig.fromSubscription(String subscription, String region, String botId)
  parameters:
  - description: <p>Service subscription key. </p>
    name: subscription
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Service region key. </p>
    name: region
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Identifier used to select a bot associated with this subscription. </p>
    name: botId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>The created config. </p>
    type: <xref href="com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig?alt=com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig&text=BotFrameworkConfig" data-throw-if-not-resolved="False"/>
  summary: <p>Creates an instance of the bot framework config with the specified subscription, region, and bot ID. </p>
  syntax: public static BotFrameworkConfig fromSubscription(String subscription, String region, String botId)
  uid: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig.fromSubscription(String,String,String)
nameWithType: BotFrameworkConfig
syntax: public class BotFrameworkConfig extends DialogServiceConfig
type: class
uid: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig
fullName: com.microsoft.cognitiveservices.speech.dialog.BotFrameworkConfig
name: BotFrameworkConfig
package: com.microsoft.cognitiveservices.speech.dialog
summary: <p>Class that defines configurations for the dialog service connector object for using a Bot Framework backend. </p>
metadata: {}
