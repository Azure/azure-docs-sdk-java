### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.allocationState()
  name: allocationState()
  nameWithType: CloudPool.allocationState()
  returns:
    description: <p>the allocationState value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.AllocationState?alt=com.microsoft.azure.batch.protocol.models.AllocationState&text=AllocationState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'steady', 'resizing', 'stopping'.</p>

    <p></p>
  syntax: public AllocationState allocationState()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.allocationState()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime()
  name: allocationStateTransitionTime()
  nameWithType: CloudPool.allocationStateTransitionTime()
  returns:
    description: <p>the allocationStateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the allocationStateTransitionTime value.</p>

    <p></p>
  syntax: public DateTime allocationStateTransitionTime()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.allocationStateTransitionTime()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses()
  name: applicationLicenses()
  nameWithType: CloudPool.applicationLicenses()
  returns:
    description: <p>the applicationLicenses value </p>
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.</p>

    <p></p>
  syntax: public List<String> applicationLicenses()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.applicationLicenses()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences()
  name: applicationPackageReferences()
  nameWithType: CloudPool.applicationPackageReferences()
  returns:
    description: <p>the applicationPackageReferences value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the applicationPackageReferences value.</p>

    <p></p>
  syntax: public List<ApplicationPackageReference> applicationPackageReferences()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.applicationPackageReferences()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval()
  name: autoScaleEvaluationInterval()
  nameWithType: CloudPool.autoScaleEvaluationInterval()
  returns:
    description: <p>the autoScaleEvaluationInterval value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the pool automatically scales, i.e. enableAutoScale is true.</p>

    <p></p>
  syntax: public Period autoScaleEvaluationInterval()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleEvaluationInterval()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula()
  name: autoScaleFormula()
  nameWithType: CloudPool.autoScaleFormula()
  returns:
    description: <p>the autoScaleFormula value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the pool automatically scales, i.e. enableAutoScale is true.</p>

    <p></p>
  syntax: public String autoScaleFormula()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleFormula()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun()
  name: autoScaleRun()
  nameWithType: CloudPool.autoScaleRun()
  returns:
    description: <p>the autoScaleRun value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property is set only if the pool automatically scales, i.e. enableAutoScale is true.</p>

    <p></p>
  syntax: public AutoScaleRun autoScaleRun()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.autoScaleRun()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences()
  name: certificateReferences()
  nameWithType: CloudPool.certificateReferences()
  returns:
    description: <p>the certificateReferences value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.CertificateReference?alt=com.microsoft.azure.batch.protocol.models.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get for Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.</p>

    <p></p>
  syntax: public List<CertificateReference> certificateReferences()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.certificateReferences()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration()
  name: cloudServiceConfiguration()
  nameWithType: CloudPool.cloudServiceConfiguration()
  returns:
    description: <p>the cloudServiceConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration?alt=com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration&text=CloudServiceConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.</p>

    <p></p>
  syntax: public CloudServiceConfiguration cloudServiceConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.cloudServiceConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.creationTime()
  name: creationTime()
  nameWithType: CloudPool.creationTime()
  returns:
    description: <p>the creationTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the creationTime value.</p>

    <p></p>
  syntax: public DateTime creationTime()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.creationTime()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes()
  name: currentDedicatedNodes()
  nameWithType: CloudPool.currentDedicatedNodes()
  returns:
    description: <p>the currentDedicatedNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the currentDedicatedNodes value.</p>

    <p></p>
  syntax: public Integer currentDedicatedNodes()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.currentDedicatedNodes()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes()
  name: currentLowPriorityNodes()
  nameWithType: CloudPool.currentLowPriorityNodes()
  returns:
    description: <p>the currentLowPriorityNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get low-priority compute nodes which have been preempted are included in this count.</p>

    <p></p>
  syntax: public Integer currentLowPriorityNodes()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.currentLowPriorityNodes()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.displayName()
  name: displayName()
  nameWithType: CloudPool.displayName()
  returns:
    description: <p>the displayName value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public String displayName()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.displayName()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale()
  name: enableAutoScale()
  nameWithType: CloudPool.enableAutoScale()
  returns:
    description: <p>the enableAutoScale value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the pool automatically resizes according to the formula. The default value is false.</p>

    <p></p>
  syntax: public Boolean enableAutoScale()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.enableAutoScale()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication()
  name: enableInterNodeCommunication()
  nameWithType: CloudPool.enableInterNodeCommunication()
  returns:
    description: <p>the enableInterNodeCommunication value </p>
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this imposes restrictions on which nodes can be assigned to the pool. Specifying this value can reduce the chance of the requested number of nodes to be allocated in the pool.</p>

    <p></p>
  syntax: public Boolean enableInterNodeCommunication()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.enableInterNodeCommunication()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.eTag()
  name: eTag()
  nameWithType: CloudPool.eTag()
  returns:
    description: <p>the eTag value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is an opaque string. You can use it to detect whether the pool has changed between requests. In particular, you can be pass the ETag when updating a pool to specify that your changes should take effect only if nobody else has modified the pool in the meantime.</p>

    <p></p>
  syntax: public String eTag()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.eTag()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.id()
  name: id()
  nameWithType: CloudPool.id()
  returns:
    description: <p>the id value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an account that differ only by case).</p>

    <p></p>
  syntax: public String id()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.id()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.lastModified()
  name: lastModified()
  nameWithType: CloudPool.lastModified()
  returns:
    description: <p>the lastModified value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is the last time at which the pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a compute node changing state.</p>

    <p></p>
  syntax: public DateTime lastModified()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.lastModified()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode()
  name: maxTasksPerNode()
  nameWithType: CloudPool.maxTasksPerNode()
  returns:
    description: <p>the maxTasksPerNode value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the maxTasksPerNode value.</p>

    <p></p>
  syntax: public Integer maxTasksPerNode()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.maxTasksPerNode()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.metadata()
  name: metadata()
  nameWithType: CloudPool.metadata()
  returns:
    description: <p>the metadata value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the metadata value.</p>

    <p></p>
  syntax: public List<MetadataItem> metadata()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.metadata()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration()
  name: networkConfiguration()
  nameWithType: CloudPool.networkConfiguration()
  returns:
    description: <p>the networkConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.NetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the networkConfiguration value.</p>

    <p></p>
  syntax: public NetworkConfiguration networkConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.networkConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors()
  name: resizeErrors()
  nameWithType: CloudPool.resizeErrors()
  returns:
    description: <p>the resizeErrors value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ResizeError?alt=com.microsoft.azure.batch.protocol.models.ResizeError&text=ResizeError" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get this property is set only if one or more errors occurred during the last pool resize, and only when the pool allocationState is Steady.</p>

    <p></p>
  syntax: public List<ResizeError> resizeErrors()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.resizeErrors()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout()
  name: resizeTimeout()
  nameWithType: CloudPool.resizeTimeout()
  returns:
    description: <p>the resizeTimeout value </p>
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this is the timeout for the most recent resize operation. (The initial sizing when the pool is created counts as a resize.) The default value is 15 minutes.</p>

    <p></p>
  syntax: public Period resizeTimeout()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.resizeTimeout()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.startTask()
  name: startTask()
  nameWithType: CloudPool.startTask()
  returns:
    description: <p>the startTask value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.StartTask?alt=com.microsoft.azure.batch.protocol.models.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the startTask value.</p>

    <p></p>
  syntax: public StartTask startTask()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.startTask()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.state()
  name: state()
  nameWithType: CloudPool.state()
  returns:
    description: <p>the state value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolState?alt=com.microsoft.azure.batch.protocol.models.PoolState&text=PoolState" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get possible values include: 'active', 'deleting'.</p>

    <p></p>
  syntax: public PoolState state()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.state()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime()
  name: stateTransitionTime()
  nameWithType: CloudPool.stateTransitionTime()
  returns:
    description: <p>the stateTransitionTime value </p>
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the stateTransitionTime value.</p>

    <p></p>
  syntax: public DateTime stateTransitionTime()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.stateTransitionTime()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.stats()
  name: stats()
  nameWithType: CloudPool.stats()
  returns:
    description: <p>the stats value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the stats value.</p>

    <p></p>
  syntax: public PoolStatistics stats()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.stats()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes()
  name: targetDedicatedNodes()
  nameWithType: CloudPool.targetDedicatedNodes()
  returns:
    description: <p>the targetDedicatedNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the targetDedicatedNodes value.</p>

    <p></p>
  syntax: public Integer targetDedicatedNodes()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.targetDedicatedNodes()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes()
  name: targetLowPriorityNodes()
  nameWithType: CloudPool.targetLowPriorityNodes()
  returns:
    description: <p>the targetLowPriorityNodes value </p>
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the targetLowPriorityNodes value.</p>

    <p></p>
  syntax: public Integer targetLowPriorityNodes()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.targetLowPriorityNodes()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy()
  name: taskSchedulingPolicy()
  nameWithType: CloudPool.taskSchedulingPolicy()
  returns:
    description: <p>the taskSchedulingPolicy value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy?alt=com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the taskSchedulingPolicy value.</p>

    <p></p>
  syntax: public TaskSchedulingPolicy taskSchedulingPolicy()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.taskSchedulingPolicy()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.url()
  name: url()
  nameWithType: CloudPool.url()
  returns:
    description: <p>the url value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the url value.</p>

    <p></p>
  syntax: public String url()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.url()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts()
  name: userAccounts()
  nameWithType: CloudPool.userAccounts()
  returns:
    description: <p>the userAccounts value </p>
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.UserAccount?alt=com.microsoft.azure.batch.protocol.models.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Get the userAccounts value.</p>

    <p></p>
  syntax: public List<UserAccount> userAccounts()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.userAccounts()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration()
  name: virtualMachineConfiguration()
  nameWithType: CloudPool.virtualMachineConfiguration()
  returns:
    description: <p>the virtualMachineConfiguration value </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.</p>

    <p></p>
  syntax: public VirtualMachineConfiguration virtualMachineConfiguration()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.virtualMachineConfiguration()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.vmSize()
  name: vmSize()
  nameWithType: CloudPool.vmSize()
  returns:
    description: <p>the vmSize value </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get for information about available sizes of virtual machines in pools, see Choose a VM size for compute nodes in an Azure Batch pool (<a href="https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes">https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes</a>).</p>

    <p></p>
  syntax: public String vmSize()
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.vmSize()
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState(AllocationState allocationState)
  name: withAllocationState(AllocationState allocationState)
  nameWithType: CloudPool.withAllocationState(AllocationState allocationState)
  parameters:
  - description: <p>the allocationState value to set </p>
    name: allocationState
    type: <xref href="com.microsoft.azure.batch.protocol.models.AllocationState?alt=com.microsoft.azure.batch.protocol.models.AllocationState&text=AllocationState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set possible values include: 'steady', 'resizing', 'stopping'.</p>

    <p></p>
  syntax: public CloudPool withAllocationState(AllocationState allocationState)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationState(AllocationState)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
  name: withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
  nameWithType: CloudPool.withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
  parameters:
  - description: <p>the allocationStateTransitionTime value to set </p>
    name: allocationStateTransitionTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the allocationStateTransitionTime value.</p>

    <p></p>
  syntax: public CloudPool withAllocationStateTransitionTime(DateTime allocationStateTransitionTime)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAllocationStateTransitionTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses(List<String> applicationLicenses)
  name: withApplicationLicenses(List<String> applicationLicenses)
  nameWithType: CloudPool.withApplicationLicenses(List<String> applicationLicenses)
  parameters:
  - description: <p>the applicationLicenses value to set </p>
    name: applicationLicenses
    type: <xref href="List%3CString%3E?alt=List%3CString%3E&text=List%3CString%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.</p>

    <p></p>
  syntax: public CloudPool withApplicationLicenses(List<String> applicationLicenses)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationLicenses(List<String>)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  name: withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  nameWithType: CloudPool.withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  parameters:
  - description: <p>the applicationPackageReferences value to set </p>
    name: applicationPackageReferences
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ApplicationPackageReference?alt=com.microsoft.azure.batch.protocol.models.ApplicationPackageReference&text=ApplicationPackageReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the applicationPackageReferences value.</p>

    <p></p>
  syntax: public CloudPool withApplicationPackageReferences(List<ApplicationPackageReference> applicationPackageReferences)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withApplicationPackageReferences(List<ApplicationPackageReference>)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  name: withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  nameWithType: CloudPool.withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  parameters:
  - description: <p>the autoScaleEvaluationInterval value to set </p>
    name: autoScaleEvaluationInterval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the pool automatically scales, i.e. enableAutoScale is true.</p>

    <p></p>
  syntax: public CloudPool withAutoScaleEvaluationInterval(Period autoScaleEvaluationInterval)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleEvaluationInterval(Period)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula(String autoScaleFormula)
  name: withAutoScaleFormula(String autoScaleFormula)
  nameWithType: CloudPool.withAutoScaleFormula(String autoScaleFormula)
  parameters:
  - description: <p>the autoScaleFormula value to set </p>
    name: autoScaleFormula
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the pool automatically scales, i.e. enableAutoScale is true.</p>

    <p></p>
  syntax: public CloudPool withAutoScaleFormula(String autoScaleFormula)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleFormula(String)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun(AutoScaleRun autoScaleRun)
  name: withAutoScaleRun(AutoScaleRun autoScaleRun)
  nameWithType: CloudPool.withAutoScaleRun(AutoScaleRun autoScaleRun)
  parameters:
  - description: <p>the autoScaleRun value to set </p>
    name: autoScaleRun
    type: <xref href="com.microsoft.azure.batch.protocol.models.AutoScaleRun?alt=com.microsoft.azure.batch.protocol.models.AutoScaleRun&text=AutoScaleRun" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if the pool automatically scales, i.e. enableAutoScale is true.</p>

    <p></p>
  syntax: public CloudPool withAutoScaleRun(AutoScaleRun autoScaleRun)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withAutoScaleRun(AutoScaleRun)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences(List<CertificateReference> certificateReferences)
  name: withCertificateReferences(List<CertificateReference> certificateReferences)
  nameWithType: CloudPool.withCertificateReferences(List<CertificateReference> certificateReferences)
  parameters:
  - description: <p>the certificateReferences value to set </p>
    name: certificateReferences
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.CertificateReference?alt=com.microsoft.azure.batch.protocol.models.CertificateReference&text=CertificateReference" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.</p>

    <p></p>
  syntax: public CloudPool withCertificateReferences(List<CertificateReference> certificateReferences)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCertificateReferences(List<CertificateReference>)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  name: withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  nameWithType: CloudPool.withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  parameters:
  - description: <p>the cloudServiceConfiguration value to set </p>
    name: cloudServiceConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration?alt=com.microsoft.azure.batch.protocol.models.CloudServiceConfiguration&text=CloudServiceConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property and virtualMachineConfiguration are mutually exclusive and one of the properties must be specified. This property cannot be specified if the Batch account was created with its poolAllocationMode property set to 'UserSubscription'.</p>

    <p></p>
  syntax: public CloudPool withCloudServiceConfiguration(CloudServiceConfiguration cloudServiceConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCloudServiceConfiguration(CloudServiceConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime(DateTime creationTime)
  name: withCreationTime(DateTime creationTime)
  nameWithType: CloudPool.withCreationTime(DateTime creationTime)
  parameters:
  - description: <p>the creationTime value to set </p>
    name: creationTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the creationTime value.</p>

    <p></p>
  syntax: public CloudPool withCreationTime(DateTime creationTime)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCreationTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes(Integer currentDedicatedNodes)
  name: withCurrentDedicatedNodes(Integer currentDedicatedNodes)
  nameWithType: CloudPool.withCurrentDedicatedNodes(Integer currentDedicatedNodes)
  parameters:
  - description: <p>the currentDedicatedNodes value to set </p>
    name: currentDedicatedNodes
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the currentDedicatedNodes value.</p>

    <p></p>
  syntax: public CloudPool withCurrentDedicatedNodes(Integer currentDedicatedNodes)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentDedicatedNodes(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
  name: withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
  nameWithType: CloudPool.withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
  parameters:
  - description: <p>the currentLowPriorityNodes value to set </p>
    name: currentLowPriorityNodes
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set low-priority compute nodes which have been preempted are included in this count.</p>

    <p></p>
  syntax: public CloudPool withCurrentLowPriorityNodes(Integer currentLowPriorityNodes)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withCurrentLowPriorityNodes(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName(String displayName)
  name: withDisplayName(String displayName)
  nameWithType: CloudPool.withDisplayName(String displayName)
  parameters:
  - description: <p>the displayName value to set </p>
    name: displayName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.</p>

    <p></p>
  syntax: public CloudPool withDisplayName(String displayName)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withDisplayName(String)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale(Boolean enableAutoScale)
  name: withEnableAutoScale(Boolean enableAutoScale)
  nameWithType: CloudPool.withEnableAutoScale(Boolean enableAutoScale)
  parameters:
  - description: <p>the enableAutoScale value to set </p>
    name: enableAutoScale
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set if false, at least one of targetDedicateNodes and targetLowPriorityNodes must be specified. If true, the autoScaleFormula property is required and the pool automatically resizes according to the formula. The default value is false.</p>

    <p></p>
  syntax: public CloudPool withEnableAutoScale(Boolean enableAutoScale)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableAutoScale(Boolean)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  name: withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  nameWithType: CloudPool.withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  parameters:
  - description: <p>the enableInterNodeCommunication value to set </p>
    name: enableInterNodeCommunication
    type: <xref href="Boolean?alt=Boolean&text=Boolean" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this imposes restrictions on which nodes can be assigned to the pool. Specifying this value can reduce the chance of the requested number of nodes to be allocated in the pool.</p>

    <p></p>
  syntax: public CloudPool withEnableInterNodeCommunication(Boolean enableInterNodeCommunication)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withEnableInterNodeCommunication(Boolean)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withETag(String eTag)
  name: withETag(String eTag)
  nameWithType: CloudPool.withETag(String eTag)
  parameters:
  - description: <p>the eTag value to set </p>
    name: eTag
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this is an opaque string. You can use it to detect whether the pool has changed between requests. In particular, you can be pass the ETag when updating a pool to specify that your changes should take effect only if nobody else has modified the pool in the meantime.</p>

    <p></p>
  syntax: public CloudPool withETag(String eTag)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withETag(String)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withId(String id)
  name: withId(String id)
  nameWithType: CloudPool.withId(String id)
  parameters:
  - description: <p>the id value to set </p>
    name: id
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the ID can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters. The ID is case-preserving and case-insensitive (that is, you may not have two IDs within an account that differ only by case).</p>

    <p></p>
  syntax: public CloudPool withId(String id)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withId(String)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified(DateTime lastModified)
  name: withLastModified(DateTime lastModified)
  nameWithType: CloudPool.withLastModified(DateTime lastModified)
  parameters:
  - description: <p>the lastModified value to set </p>
    name: lastModified
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this is the last time at which the pool level data, such as the targetDedicatedNodes or enableAutoscale settings, changed. It does not factor in node-level changes such as a compute node changing state.</p>

    <p></p>
  syntax: public CloudPool withLastModified(DateTime lastModified)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withLastModified(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode(Integer maxTasksPerNode)
  name: withMaxTasksPerNode(Integer maxTasksPerNode)
  nameWithType: CloudPool.withMaxTasksPerNode(Integer maxTasksPerNode)
  parameters:
  - description: <p>the maxTasksPerNode value to set </p>
    name: maxTasksPerNode
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the maxTasksPerNode value.</p>

    <p></p>
  syntax: public CloudPool withMaxTasksPerNode(Integer maxTasksPerNode)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMaxTasksPerNode(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata(List<MetadataItem> metadata)
  name: withMetadata(List<MetadataItem> metadata)
  nameWithType: CloudPool.withMetadata(List<MetadataItem> metadata)
  parameters:
  - description: <p>the metadata value to set </p>
    name: metadata
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.MetadataItem?alt=com.microsoft.azure.batch.protocol.models.MetadataItem&text=MetadataItem" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the metadata value.</p>

    <p></p>
  syntax: public CloudPool withMetadata(List<MetadataItem> metadata)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withMetadata(List<MetadataItem>)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  name: withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  nameWithType: CloudPool.withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  parameters:
  - description: <p>the networkConfiguration value to set </p>
    name: networkConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.NetworkConfiguration?alt=com.microsoft.azure.batch.protocol.models.NetworkConfiguration&text=NetworkConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the networkConfiguration value.</p>

    <p></p>
  syntax: public CloudPool withNetworkConfiguration(NetworkConfiguration networkConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withNetworkConfiguration(NetworkConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors(List<ResizeError> resizeErrors)
  name: withResizeErrors(List<ResizeError> resizeErrors)
  nameWithType: CloudPool.withResizeErrors(List<ResizeError> resizeErrors)
  parameters:
  - description: <p>the resizeErrors value to set </p>
    name: resizeErrors
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.ResizeError?alt=com.microsoft.azure.batch.protocol.models.ResizeError&text=ResizeError" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property is set only if one or more errors occurred during the last pool resize, and only when the pool allocationState is Steady.</p>

    <p></p>
  syntax: public CloudPool withResizeErrors(List<ResizeError> resizeErrors)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeErrors(List<ResizeError>)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout(Period resizeTimeout)
  name: withResizeTimeout(Period resizeTimeout)
  nameWithType: CloudPool.withResizeTimeout(Period resizeTimeout)
  parameters:
  - description: <p>the resizeTimeout value to set </p>
    name: resizeTimeout
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this is the timeout for the most recent resize operation. (The initial sizing when the pool is created counts as a resize.) The default value is 15 minutes.</p>

    <p></p>
  syntax: public CloudPool withResizeTimeout(Period resizeTimeout)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withResizeTimeout(Period)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask(StartTask startTask)
  name: withStartTask(StartTask startTask)
  nameWithType: CloudPool.withStartTask(StartTask startTask)
  parameters:
  - description: <p>the startTask value to set </p>
    name: startTask
    type: <xref href="com.microsoft.azure.batch.protocol.models.StartTask?alt=com.microsoft.azure.batch.protocol.models.StartTask&text=StartTask" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the startTask value.</p>

    <p></p>
  syntax: public CloudPool withStartTask(StartTask startTask)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStartTask(StartTask)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withState(PoolState state)
  name: withState(PoolState state)
  nameWithType: CloudPool.withState(PoolState state)
  parameters:
  - description: <p>the state value to set </p>
    name: state
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolState?alt=com.microsoft.azure.batch.protocol.models.PoolState&text=PoolState" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set possible values include: 'active', 'deleting'.</p>

    <p></p>
  syntax: public CloudPool withState(PoolState state)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withState(PoolState)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime(DateTime stateTransitionTime)
  name: withStateTransitionTime(DateTime stateTransitionTime)
  nameWithType: CloudPool.withStateTransitionTime(DateTime stateTransitionTime)
  parameters:
  - description: <p>the stateTransitionTime value to set </p>
    name: stateTransitionTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the stateTransitionTime value.</p>

    <p></p>
  syntax: public CloudPool withStateTransitionTime(DateTime stateTransitionTime)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStateTransitionTime(DateTime)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withStats(PoolStatistics stats)
  name: withStats(PoolStatistics stats)
  nameWithType: CloudPool.withStats(PoolStatistics stats)
  parameters:
  - description: <p>the stats value to set </p>
    name: stats
    type: <xref href="com.microsoft.azure.batch.protocol.models.PoolStatistics?alt=com.microsoft.azure.batch.protocol.models.PoolStatistics&text=PoolStatistics" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the stats value.</p>

    <p></p>
  syntax: public CloudPool withStats(PoolStatistics stats)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withStats(PoolStatistics)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  name: withTargetDedicatedNodes(Integer targetDedicatedNodes)
  nameWithType: CloudPool.withTargetDedicatedNodes(Integer targetDedicatedNodes)
  parameters:
  - description: <p>the targetDedicatedNodes value to set </p>
    name: targetDedicatedNodes
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the targetDedicatedNodes value.</p>

    <p></p>
  syntax: public CloudPool withTargetDedicatedNodes(Integer targetDedicatedNodes)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetDedicatedNodes(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  name: withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  nameWithType: CloudPool.withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  parameters:
  - description: <p>the targetLowPriorityNodes value to set </p>
    name: targetLowPriorityNodes
    type: <xref href="Integer?alt=Integer&text=Integer" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the targetLowPriorityNodes value.</p>

    <p></p>
  syntax: public CloudPool withTargetLowPriorityNodes(Integer targetLowPriorityNodes)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTargetLowPriorityNodes(Integer)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  name: withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  nameWithType: CloudPool.withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  parameters:
  - description: <p>the taskSchedulingPolicy value to set </p>
    name: taskSchedulingPolicy
    type: <xref href="com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy?alt=com.microsoft.azure.batch.protocol.models.TaskSchedulingPolicy&text=TaskSchedulingPolicy" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the taskSchedulingPolicy value.</p>

    <p></p>
  syntax: public CloudPool withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withTaskSchedulingPolicy(TaskSchedulingPolicy)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withUrl(String url)
  name: withUrl(String url)
  nameWithType: CloudPool.withUrl(String url)
  parameters:
  - description: <p>the url value to set </p>
    name: url
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the url value.</p>

    <p></p>
  syntax: public CloudPool withUrl(String url)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withUrl(String)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts(List<UserAccount> userAccounts)
  name: withUserAccounts(List<UserAccount> userAccounts)
  nameWithType: CloudPool.withUserAccounts(List<UserAccount> userAccounts)
  parameters:
  - description: <p>the userAccounts value to set </p>
    name: userAccounts
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.UserAccount?alt=com.microsoft.azure.batch.protocol.models.UserAccount&text=UserAccount" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the userAccounts value.</p>

    <p></p>
  syntax: public CloudPool withUserAccounts(List<UserAccount> userAccounts)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withUserAccounts(List<UserAccount>)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  name: withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  nameWithType: CloudPool.withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  parameters:
  - description: <p>the virtualMachineConfiguration value to set </p>
    name: virtualMachineConfiguration
    type: <xref href="com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration?alt=com.microsoft.azure.batch.protocol.models.VirtualMachineConfiguration&text=VirtualMachineConfiguration" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set this property and cloudServiceConfiguration are mutually exclusive and one of the properties must be specified.</p>

    <p></p>
  syntax: public CloudPool withVirtualMachineConfiguration(VirtualMachineConfiguration virtualMachineConfiguration)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withVirtualMachineConfiguration(VirtualMachineConfiguration)
- fullName: com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize(String vmSize)
  name: withVmSize(String vmSize)
  nameWithType: CloudPool.withVmSize(String vmSize)
  parameters:
  - description: <p>the vmSize value to set </p>
    name: vmSize
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the CloudPool object itself. </p>
    type: <xref href="com.microsoft.azure.batch.protocol.models.CloudPool?alt=com.microsoft.azure.batch.protocol.models.CloudPool&text=CloudPool" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set for information about available sizes of virtual machines in pools, see Choose a VM size for compute nodes in an Azure Batch pool (<a href="https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes">https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes</a>).</p>

    <p></p>
  syntax: public CloudPool withVmSize(String vmSize)
  uid: com.microsoft.azure.batch.protocol.models.CloudPool.withVmSize(String)
nameWithType: CloudPool
syntax: public class CloudPool
type: class
uid: com.microsoft.azure.batch.protocol.models.CloudPool
fullName: com.microsoft.azure.batch.protocol.models.CloudPool
name: CloudPool
package: com.microsoft.azure.batch.protocol.models
summary: <p>A pool in the Azure Batch service. </p>
metadata: {}
