### YamlMime:JavaType
uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations"
fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations"
name: "ImageModerations"
nameWithType: "ImageModerations"
summary: "An instance of this class provides access to all the operations defined in Image<wbr>Moderations."
syntax: "public interface **ImageModerations**"
methods:
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateFileInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateFileInput()"
  name: "evaluateFileInput()"
  nameWithType: "ImageModerations.evaluateFileInput()"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsEvaluateFileInputDefinitionStages.WithImageStream evaluateFileInput()"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the first stage of the evaluateFileInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsEvaluateFileInputDefinitionStages.WithImageStream?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsEvaluateFileInputDefinitionStages.WithImageStream&text=WithImageStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateFileInput(byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateFileInput(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  name: "evaluateFileInput(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  nameWithType: "ImageModerations.evaluateFileInput(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "evaluateFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateFileInputOptionalParameter&text=EvaluateFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Evaluate evaluateFileInput(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the Evaluate object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateFileInputAsync(byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateFileInputAsync(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  name: "evaluateFileInputAsync(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  nameWithType: "ImageModerations.evaluateFileInputAsync(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "evaluateFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateFileInputOptionalParameter&text=EvaluateFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Evaluate> evaluateFileInputAsync(byte[] imageStream, EvaluateFileInputOptionalParameter evaluateFileInputOptionalParameter)"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the observable to the Evaluate object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateMethod()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateMethod()"
  name: "evaluateMethod()"
  nameWithType: "ImageModerations.evaluateMethod()"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsEvaluateMethodDefinitionStages.WithExecute evaluateMethod()"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the first stage of the evaluateMethod call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsEvaluateMethodDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsEvaluateMethodDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateMethod(com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateMethodOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateMethod(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  name: "evaluateMethod(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  nameWithType: "ImageModerations.evaluateMethod(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  parameters:
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "evaluateMethodOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateMethodOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateMethodOptionalParameter&text=EvaluateMethodOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Evaluate evaluateMethod(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the Evaluate object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateMethodAsync(com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateMethodOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateMethodAsync(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  name: "evaluateMethodAsync(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  nameWithType: "ImageModerations.evaluateMethodAsync(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  parameters:
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "evaluateMethodOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateMethodOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateMethodOptionalParameter&text=EvaluateMethodOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Evaluate> evaluateMethodAsync(EvaluateMethodOptionalParameter evaluateMethodOptionalParameter)"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the observable to the Evaluate object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateUrlInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateUrlInput()"
  name: "evaluateUrlInput()"
  nameWithType: "ImageModerations.evaluateUrlInput()"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsEvaluateUrlInputDefinitionStages.WithContentType evaluateUrlInput()"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the first stage of the evaluateUrlInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsEvaluateUrlInputDefinitionStages.WithContentType?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsEvaluateUrlInputDefinitionStages.WithContentType&text=WithContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateUrlInput(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateUrlInput(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  name: "evaluateUrlInput(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.evaluateUrlInput(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "evaluateUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateUrlInputOptionalParameter&text=EvaluateUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Evaluate evaluateUrlInput(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the Evaluate object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateUrlInputAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.evaluateUrlInputAsync(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  name: "evaluateUrlInputAsync(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.evaluateUrlInputAsync(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  summary: "Returns probabilities of the image containing racy or adult content."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "evaluateUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.EvaluateUrlInputOptionalParameter&text=EvaluateUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<Evaluate> evaluateUrlInputAsync(String contentType, BodyModelModel imageUrl, EvaluateUrlInputOptionalParameter evaluateUrlInputOptionalParameter)"
  desc: "Returns probabilities of the image containing racy or adult content."
  returns:
    description: "the observable to the Evaluate object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.Evaluate&text=Evaluate\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFaces()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFaces()"
  name: "findFaces()"
  nameWithType: "ImageModerations.findFaces()"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsFindFacesDefinitionStages.WithExecute findFaces()"
  desc: "Returns the list of faces found."
  returns:
    description: "the first stage of the findFaces call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsFindFacesDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsFindFacesDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFaces(com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFaces(FindFacesOptionalParameter findFacesOptionalParameter)"
  name: "findFaces(FindFacesOptionalParameter findFacesOptionalParameter)"
  nameWithType: "ImageModerations.findFaces(FindFacesOptionalParameter findFacesOptionalParameter)"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  parameters:
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "findFacesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesOptionalParameter&text=FindFacesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract FoundFaces findFaces(FindFacesOptionalParameter findFacesOptionalParameter)"
  desc: "Returns the list of faces found."
  returns:
    description: "the FoundFaces object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesAsync(com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesAsync(FindFacesOptionalParameter findFacesOptionalParameter)"
  name: "findFacesAsync(FindFacesOptionalParameter findFacesOptionalParameter)"
  nameWithType: "ImageModerations.findFacesAsync(FindFacesOptionalParameter findFacesOptionalParameter)"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  parameters:
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "findFacesOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesOptionalParameter&text=FindFacesOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<FoundFaces> findFacesAsync(FindFacesOptionalParameter findFacesOptionalParameter)"
  desc: "Returns the list of faces found."
  returns:
    description: "the observable to the FoundFaces object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput()"
  name: "findFacesFileInput()"
  nameWithType: "ImageModerations.findFacesFileInput()"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsFindFacesFileInputDefinitionStages.WithImageStream findFacesFileInput()"
  desc: "Returns the list of faces found."
  returns:
    description: "the first stage of the findFacesFileInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsFindFacesFileInputDefinitionStages.WithImageStream?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsFindFacesFileInputDefinitionStages.WithImageStream&text=WithImageStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput(byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  name: "findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  nameWithType: "ImageModerations.findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  parameters:
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "findFacesFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter&text=FindFacesFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract FoundFaces findFacesFileInput(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  desc: "Returns the list of faces found."
  returns:
    description: "the FoundFaces object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInputAsync(byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesFileInputAsync(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  name: "findFacesFileInputAsync(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  nameWithType: "ImageModerations.findFacesFileInputAsync(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  parameters:
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "findFacesFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesFileInputOptionalParameter&text=FindFacesFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<FoundFaces> findFacesFileInputAsync(byte[] imageStream, FindFacesFileInputOptionalParameter findFacesFileInputOptionalParameter)"
  desc: "Returns the list of faces found."
  returns:
    description: "the observable to the FoundFaces object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput()"
  name: "findFacesUrlInput()"
  nameWithType: "ImageModerations.findFacesUrlInput()"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsFindFacesUrlInputDefinitionStages.WithContentType findFacesUrlInput()"
  desc: "Returns the list of faces found."
  returns:
    description: "the first stage of the findFacesUrlInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsFindFacesUrlInputDefinitionStages.WithContentType?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsFindFacesUrlInputDefinitionStages.WithContentType&text=WithContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  name: "findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "findFacesUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter&text=FindFacesUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract FoundFaces findFacesUrlInput(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  desc: "Returns the list of faces found."
  returns:
    description: "the FoundFaces object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInputAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.findFacesUrlInputAsync(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  name: "findFacesUrlInputAsync(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.findFacesUrlInputAsync(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  summary: "Returns the list of faces found."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "findFacesUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FindFacesUrlInputOptionalParameter&text=FindFacesUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<FoundFaces> findFacesUrlInputAsync(String contentType, BodyModelModel imageUrl, FindFacesUrlInputOptionalParameter findFacesUrlInputOptionalParameter)"
  desc: "Returns the list of faces found."
  returns:
    description: "the observable to the FoundFaces object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.FoundFaces&text=FoundFaces\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchFileInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchFileInput()"
  name: "matchFileInput()"
  nameWithType: "ImageModerations.matchFileInput()"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsMatchFileInputDefinitionStages.WithImageStream matchFileInput()"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the first stage of the matchFileInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsMatchFileInputDefinitionStages.WithImageStream?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsMatchFileInputDefinitionStages.WithImageStream&text=WithImageStream\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchFileInput(byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchFileInput(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  name: "matchFileInput(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  nameWithType: "ImageModerations.matchFileInput(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "matchFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchFileInputOptionalParameter&text=MatchFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MatchResponse matchFileInput(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the MatchResponse object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchFileInputAsync(byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchFileInputAsync(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  name: "matchFileInputAsync(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  nameWithType: "ImageModerations.matchFileInputAsync(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "matchFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchFileInputOptionalParameter&text=MatchFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<MatchResponse> matchFileInputAsync(byte[] imageStream, MatchFileInputOptionalParameter matchFileInputOptionalParameter)"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the observable to the MatchResponse object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchMethod()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchMethod()"
  name: "matchMethod()"
  nameWithType: "ImageModerations.matchMethod()"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsMatchMethodDefinitionStages.WithExecute matchMethod()"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the first stage of the matchMethod call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsMatchMethodDefinitionStages.WithExecute?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsMatchMethodDefinitionStages.WithExecute&text=WithExecute\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchMethod(com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchMethodOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchMethod(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  name: "matchMethod(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  nameWithType: "ImageModerations.matchMethod(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  parameters:
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "matchMethodOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchMethodOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchMethodOptionalParameter&text=MatchMethodOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MatchResponse matchMethod(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the MatchResponse object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchMethodAsync(com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchMethodOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchMethodAsync(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  name: "matchMethodAsync(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  nameWithType: "ImageModerations.matchMethodAsync(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  parameters:
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "matchMethodOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchMethodOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchMethodOptionalParameter&text=MatchMethodOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<MatchResponse> matchMethodAsync(MatchMethodOptionalParameter matchMethodOptionalParameter)"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the observable to the MatchResponse object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInput()"
  name: "matchUrlInput()"
  nameWithType: "ImageModerations.matchUrlInput()"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsMatchUrlInputDefinitionStages.WithContentType matchUrlInput()"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the first stage of the matchUrlInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsMatchUrlInputDefinitionStages.WithContentType?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsMatchUrlInputDefinitionStages.WithContentType&text=WithContentType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInput(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInput(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  name: "matchUrlInput(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.matchUrlInput(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "matchUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter&text=MatchUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract MatchResponse matchUrlInput(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the MatchResponse object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInputAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  name: "matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  summary: "Fuzzily match an image against one of your custom Image Lists."
  modifiers:
  - "abstract"
  parameters:
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "matchUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchUrlInputOptionalParameter&text=MatchUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<MatchResponse> matchUrlInputAsync(String contentType, BodyModelModel imageUrl, MatchUrlInputOptionalParameter matchUrlInputOptionalParameter)"
  desc: "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. Returns ID and tags of matching image.<br/> <br/> Note: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response."
  returns:
    description: "the observable to the MatchResponse object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.MatchResponse&text=MatchResponse\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRFileInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRFileInput()"
  name: "oCRFileInput()"
  nameWithType: "ImageModerations.oCRFileInput()"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsOCRFileInputDefinitionStages.WithLanguage oCRFileInput()"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the first stage of the oCRFileInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsOCRFileInputDefinitionStages.WithLanguage?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsOCRFileInputDefinitionStages.WithLanguage&text=WithLanguage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRFileInput(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRFileInput(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  name: "oCRFileInput(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  nameWithType: "ImageModerations.oCRFileInput(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  parameters:
  - description: "Language of the terms."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "oCRFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRFileInputOptionalParameter&text=OCRFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract OCR oCRFileInput(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the OCR object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR&text=OCR\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRFileInputAsync(java.lang.String,byte[],com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRFileInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRFileInputAsync(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  name: "oCRFileInputAsync(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  nameWithType: "ImageModerations.oCRFileInputAsync(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  parameters:
  - description: "Language of the terms."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image file."
    name: "imageStream"
    type: "<xref href=\"byte?alt=byte&text=byte\" data-throw-if-not-resolved=\"False\" />[]"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "oCRFileInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRFileInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRFileInputOptionalParameter&text=OCRFileInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<OCR> oCRFileInputAsync(String language, byte[] imageStream, OCRFileInputOptionalParameter oCRFileInputOptionalParameter)"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the observable to the OCR object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR&text=OCR\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRMethod()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRMethod()"
  name: "oCRMethod()"
  nameWithType: "ImageModerations.oCRMethod()"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsOCRMethodDefinitionStages.WithLanguage oCRMethod()"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the first stage of the oCRMethod call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsOCRMethodDefinitionStages.WithLanguage?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsOCRMethodDefinitionStages.WithLanguage&text=WithLanguage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRMethod(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRMethodOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRMethod(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  name: "oCRMethod(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  nameWithType: "ImageModerations.oCRMethod(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  parameters:
  - description: "Language of the terms."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "oCRMethodOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRMethodOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRMethodOptionalParameter&text=OCRMethodOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract OCR oCRMethod(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the OCR object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR&text=OCR\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRMethodAsync(java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRMethodOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRMethodAsync(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  name: "oCRMethodAsync(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  nameWithType: "ImageModerations.oCRMethodAsync(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  parameters:
  - description: "Language of the terms."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "oCRMethodOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRMethodOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRMethodOptionalParameter&text=OCRMethodOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<OCR> oCRMethodAsync(String language, OCRMethodOptionalParameter oCRMethodOptionalParameter)"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the observable to the OCR object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR&text=OCR\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRUrlInput()"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRUrlInput()"
  name: "oCRUrlInput()"
  nameWithType: "ImageModerations.oCRUrlInput()"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  syntax: "public abstract ImageModerations.ImageModerationsOCRUrlInputDefinitionStages.WithLanguage oCRUrlInput()"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the first stage of the oCRUrlInput call"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsOCRUrlInputDefinitionStages.WithLanguage?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.ImageModerationsOCRUrlInputDefinitionStages.WithLanguage&text=WithLanguage\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRUrlInput(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRUrlInput(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  name: "oCRUrlInput(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.oCRUrlInput(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  parameters:
  - description: "Language of the terms."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "oCRUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRUrlInputOptionalParameter&text=OCRUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract OCR oCRUrlInput(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the OCR object if successful."
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR&text=OCR\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRUrlInputAsync(java.lang.String,java.lang.String,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel,com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRUrlInputOptionalParameter)"
  fullName: "com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations.oCRUrlInputAsync(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  name: "oCRUrlInputAsync(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  nameWithType: "ImageModerations.oCRUrlInputAsync(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  summary: "Returns any text found in the image for the language specified."
  modifiers:
  - "abstract"
  parameters:
  - description: "Language of the terms."
    name: "language"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The content type."
    name: "contentType"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The image url."
    name: "imageUrl"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.BodyModelModel&text=BodyModelModel\" data-throw-if-not-resolved=\"False\" />"
  - description: "the object representing the optional parameters to be set before calling this API"
    name: "oCRUrlInputOptionalParameter"
    type: "<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRUrlInputOptionalParameter?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCRUrlInputOptionalParameter&text=OCRUrlInputOptionalParameter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public abstract Observable<OCR> oCRUrlInputAsync(String language, String contentType, BodyModelModel imageUrl, OCRUrlInputOptionalParameter oCRUrlInputOptionalParameter)"
  desc: "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English."
  returns:
    description: "the observable to the OCR object"
    type: "<xref href=\"rx.Observable?alt=rx.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR?alt=com.microsoft.azure.cognitiveservices.vision.contentmoderator.models.OCR&text=OCR\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "interface"
desc: "An instance of this class provides access to all the operations defined in ImageModerations."
metadata: {}
package: "com.microsoft.azure.cognitiveservices.vision.contentmoderator"
artifact: com.microsoft.azure.cognitiveservices:azure-cognitiveservices-contentmoderator:1.0.3-beta
