### YamlMime:JavaType
methods:
- fullName: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
  name: withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
  nameWithType: NicIPConfiguration.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
  parameters:
  - description: <p>an existing load balancer </p>
    name: loadBalancer
    type: <xref href="com.microsoft.azure.management.network.LoadBalancer?alt=com.microsoft.azure.management.network.LoadBalancer&text=LoadBalancer" data-throw-if-not-resolved="False"/>
  - description: <p>the name of an existing backend on that load balancer </p>
    name: backendName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.network.NicIPConfiguration.Update?alt=com.microsoft.azure.management.network.NicIPConfiguration.Update&text=NicIPConfiguration.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the load balancer to associate this IP configuration with. </p>
  syntax: public Update withExistingLoadBalancerBackend(LoadBalancer loadBalancer, String backendName)
  uid: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withExistingLoadBalancerBackend(LoadBalancer,String)
- fullName: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
  name: withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
  nameWithType: NicIPConfiguration.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
  parameters:
  - description: <p>an existing load balancer </p>
    name: loadBalancer
    type: <xref href="com.microsoft.azure.management.network.LoadBalancer?alt=com.microsoft.azure.management.network.LoadBalancer&text=LoadBalancer" data-throw-if-not-resolved="False"/>
  - description: <p>the name of an existing inbound NAT rule on the selected load balancer </p>
    name: inboundNatRuleName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.network.NicIPConfiguration.Update?alt=com.microsoft.azure.management.network.NicIPConfiguration.Update&text=NicIPConfiguration.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Specifies the load balancer inbound NAT rule to associate this IP configuration with. </p>
  syntax: public Update withExistingLoadBalancerInboundNatRule(LoadBalancer loadBalancer, String inboundNatRuleName)
  uid: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withExistingLoadBalancerInboundNatRule(LoadBalancer,String)
- fullName: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends()
  name: withoutLoadBalancerBackends()
  nameWithType: NicIPConfiguration.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends()
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.network.NicIPConfiguration.Update?alt=com.microsoft.azure.management.network.NicIPConfiguration.Update&text=NicIPConfiguration.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Removes all the existing associations with load balancer backends. </p>
  syntax: public Update withoutLoadBalancerBackends()
  uid: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withoutLoadBalancerBackends()
- fullName: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules()
  name: withoutLoadBalancerInboundNatRules()
  nameWithType: NicIPConfiguration.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules()
  returns:
    description: <p>the next stage of the update </p>
    type: <xref href="com.microsoft.azure.management.network.NicIPConfiguration.Update?alt=com.microsoft.azure.management.network.NicIPConfiguration.Update&text=NicIPConfiguration.Update" data-throw-if-not-resolved="False"/>
  summary: <p>Removes all the existing associations with load balancer inbound NAT rules. </p>
  syntax: public Update withoutLoadBalancerInboundNatRules()
  uid: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer.withoutLoadBalancerInboundNatRules()
nameWithType: NicIPConfiguration.UpdateStages.WithLoadBalancer
syntax: public interface WithLoadBalancer
type: interface
uid: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer
fullName: com.microsoft.azure.management.network.NicIPConfiguration.UpdateStages.WithLoadBalancer
name: NicIPConfiguration.UpdateStages.WithLoadBalancer
package: com.microsoft.azure.management.network
summary: <p>The stage of the network interface's IP configuration allowing to specify the load balancer to associate this IP configuration with. </p>
metadata: {}
