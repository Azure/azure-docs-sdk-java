### YamlMime:JavaMember
nameWithType: MethodDispatcherBase.continueWith
type: method
members:
- fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?> future)
  name: continueWith(CompletableFuture<?> future)
  nameWithType: MethodDispatcherBase.continueWith(CompletableFuture<?> future)
  parameters:
  - description: <p>continuation future </p>
    name: future
    type: <xref href="CompletableFuture%3C%3F%3E?alt=CompletableFuture<?>&text=CompletableFuture%3C%3F%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <xref uid="" data-throw-if-not-resolved="false">java.util.concurrent.CompletableFuture</xref> that represents outstanding operation. </p>
    type: <xref href="CompletableFuture%3CObject%3E?alt=CompletableFuture<Object>&text=CompletableFuture%3CObject%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Internal - used by Service remoting</p>

    <p></p>
  syntax: protected CompletableFuture<Object> continueWith(CompletableFuture<?> future)
  uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?>)
uid: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith*
fullName: microsoft.servicefabric.services.remoting.builder.MethodDispatcherBase.continueWith(CompletableFuture<?> future)
name: continueWith(CompletableFuture<?> future)
package: microsoft.servicefabric.services.remoting.builder
metadata: {}
