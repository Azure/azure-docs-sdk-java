### YamlMime:JavaMember
nameWithType: TaskOperations.createTasks
type: method
members:
- fullName: com.microsoft.azure.batch.TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList)
  name: createTasks(String jobId, List<TaskAddParameter> taskList)
  nameWithType: TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList)
  parameters:
  - description: <p>The ID of the job to which to add the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A list of <xref uid="" data-throw-if-not-resolved="false">tasks</xref> to add. </p>
    name: taskList
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service or any network exception. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown if any thread has interrupted the current thread. </p>
  summary: >-
    <p>Adds multiple tasks to a job.</p>

    <p></p>
  syntax: public void createTasks(String jobId, List<TaskAddParameter> taskList)
  uid: com.microsoft.azure.batch.TaskOperations.createTasks(String,List<TaskAddParameter>)
- fullName: com.microsoft.azure.batch.TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  name: createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  nameWithType: TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  parameters:
  - description: <p>The ID of the job to which to add the task. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>A list of <xref uid="" data-throw-if-not-resolved="false">tasks</xref> to add. </p>
    name: taskList
    type: List&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskAddParameter?alt=com.microsoft.azure.batch.protocol.models.TaskAddParameter&text=TaskAddParameter" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>A collection of <xref uid="com.microsoft.azure.batch.BatchClientBehavior" data-throw-if-not-resolved="false">BatchClientBehavior</xref> instances that are applied to the Batch service request. </p>
    name: additionalBehaviors
    type: Iterable&lt;<xref href="com.microsoft.azure.batch.BatchClientBehavior?alt=com.microsoft.azure.batch.BatchClientBehavior&text=BatchClientBehavior" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown when an error response is received from the Batch service or any network exception. </p>
  - type: <xref href="InterruptedException?alt=InterruptedException&text=InterruptedException" data-throw-if-not-resolved="False"/>
    description: <p>Exception thrown if any thread has interrupted the current thread. </p>
  summary: >-
    <p>Adds multiple tasks to a job.</p>

    <p></p>
  syntax: public void createTasks(String jobId, List<TaskAddParameter> taskList, Iterable<BatchClientBehavior> additionalBehaviors)
  uid: com.microsoft.azure.batch.TaskOperations.createTasks(String,List<TaskAddParameter>,Iterable<BatchClientBehavior>)
uid: com.microsoft.azure.batch.TaskOperations.createTasks*
fullName: com.microsoft.azure.batch.TaskOperations.createTasks(String jobId, List<TaskAddParameter> taskList)
name: createTasks(String jobId, List<TaskAddParameter> taskList)
package: com.microsoft.azure.batch
metadata: {}
