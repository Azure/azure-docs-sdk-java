### YamlMime:JavaMember
nameWithType: Pipelines.get
type: method
members:
- fullName: com.microsoft.azure.management.datalake.analytics.Pipelines.get(String accountName, UUID pipelineIdentity)
  name: get(String accountName, UUID pipelineIdentity)
  nameWithType: Pipelines.get(String accountName, UUID pipelineIdentity)
  parameters:
  - description: <p>The Azure Data Lake Analytics account to execute job operations on. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Pipeline ID. </p>
    name: pipelineIdentity
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the JobPipelineInformation object if successful. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.JobPipelineInformation?alt=com.microsoft.azure.management.datalake.analytics.models.JobPipelineInformation&text=JobPipelineInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Pipeline information for the specified pipeline ID.</p>

    <p></p>
  syntax: public JobPipelineInformation get(String accountName, UUID pipelineIdentity)
  uid: com.microsoft.azure.management.datalake.analytics.Pipelines.get(String,UUID)
- fullName: com.microsoft.azure.management.datalake.analytics.Pipelines.get(String accountName, UUID pipelineIdentity, DateTime startDateTime, DateTime endDateTime)
  name: get(String accountName, UUID pipelineIdentity, DateTime startDateTime, DateTime endDateTime)
  nameWithType: Pipelines.get(String accountName, UUID pipelineIdentity, DateTime startDateTime, DateTime endDateTime)
  parameters:
  - description: <p>The Azure Data Lake Analytics account to execute job operations on. </p>
    name: accountName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Pipeline ID. </p>
    name: pipelineIdentity
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The start date for when to get the pipeline and aggregate its data. The startDateTime and endDateTime can be no more than 30 days apart. </p>
    name: startDateTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  - description: <p>The end date for when to get the pipeline and aggregate its data. The startDateTime and endDateTime can be no more than 30 days apart. </p>
    name: endDateTime
    type: <xref href="DateTime?alt=DateTime&text=DateTime" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="CloudException?alt=CloudException&text=CloudException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the JobPipelineInformation object if successful. </p>
    type: <xref href="com.microsoft.azure.management.datalake.analytics.models.JobPipelineInformation?alt=com.microsoft.azure.management.datalake.analytics.models.JobPipelineInformation&text=JobPipelineInformation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the Pipeline information for the specified pipeline ID.</p>

    <p></p>
  syntax: public JobPipelineInformation get(String accountName, UUID pipelineIdentity, DateTime startDateTime, DateTime endDateTime)
  uid: com.microsoft.azure.management.datalake.analytics.Pipelines.get(String,UUID,DateTime,DateTime)
uid: com.microsoft.azure.management.datalake.analytics.Pipelines.get*
fullName: com.microsoft.azure.management.datalake.analytics.Pipelines.get(String accountName, UUID pipelineIdentity)
name: get(String accountName, UUID pipelineIdentity)
package: com.microsoft.azure.management.datalake.analytics
metadata: {}
