### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.EnrollmentGroup(String json)
  name: EnrollmentGroup(String json)
  nameWithType: EnrollmentGroup.EnrollmentGroup(String json)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> with the JSON received from the provisioning service. </p>
    name: json
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If the provided JSON is null, empty, or invalid. </p>
  summary: >-
    <p>CONSTRUCTOR</p>

    <p>This constructor creates an instance of the enrollment group filling the class with the information provided in the JSON.</p>

    <p>The following JSON is a sample of the EnrollmentGroup response, received from the provisioning service. <pre><code>{

            "enrollmentGroupId":"validEnrollmentGroupId",

            "attestation":{

                "type":"x509",

                "signingCertificates":{

                    "primary":{

                        "certificate":"[valid certificate]",

                        "info": {

                            "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                            "sha1Thumbprint": "0000000000000000000000000000000000",

                            "sha256Thumbprint": "validEnrollmentGroupId",

                            "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                            "notBeforeUtc": "2017-11-14T12:34:18Z",

                            "notAfterUtc": "2017-11-20T12:34:18Z",

                            "serialNumber": "000000000000000000",

                            "version": 3

                        }

                    }

                }

            },

            "iotHubHostName":"ContosoIoTHub.azure-devices.net",

            "provisioningStatus":"enabled"

            "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

            "etag": "\"00000000-0000-0000-0000-00000000000\""

        }

        </code></pre></p>

    <p></p>
  syntax: public EnrollmentGroup(String json)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.EnrollmentGroup(String)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.EnrollmentGroup(String enrollmentGroupId, Attestation attestation)
  name: EnrollmentGroup(String enrollmentGroupId, Attestation attestation)
  nameWithType: EnrollmentGroup.EnrollmentGroup(String enrollmentGroupId, Attestation attestation)
  parameters:
  - description: >-
      <p>the<code>String 

          </code> with an unique id for this enrollment group. </p>
    name: enrollmentGroupId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: >-
      <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation" data-throw-if-not-resolved="false" data-raw-source="Attestation"></xref> mechanism that shall be<code>signedCertificate 

          </code> of <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref> or<code>symmetricKey 

          </code> of <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref></p>
    name: attestation
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation&text=Attestation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>If one of the provided parameters is not correct. </p>
  summary: >-
    <p>CONSTRUCTOR</p>

    <p>This constructor creates an instance of the enrollment group with the minimum set of information required by the provisioning service.</p>

    <p>When serialized, an EnrollmentGroup will look like the following example: <pre><code>{

            "enrollmentGroupId":"validEnrollmentGroupId",

            "attestation":{

                "type":"x509",

                "signingCertificates":{

                    "primary":{

                        "certificate":"[valid certificate]"

                    }

                }

            }

        }

        </code></pre></p>

    <p></p>
  syntax: public EnrollmentGroup(String enrollmentGroupId, Attestation attestation)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.EnrollmentGroup(String,Attestation)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="java.io.Serializable" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable&text=Serializable" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable.toJson()
- com.microsoft.azure.sdk.iot.provisioning.service.configs.Serializable.toString()
methods:
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.getAttestation()
  name: getAttestation()
  nameWithType: EnrollmentGroup.getAttestation()
  exceptions:
  - type: <xref href="ProvisioningServiceClientException?alt=ProvisioningServiceClientException&text=ProvisioningServiceClientException" data-throw-if-not-resolved="False"/>
    description: <p>If the type of the attestation mechanism is unknown. </p>
  returns:
    description: >-
      <p>The<code>Attestation 

          </code> with the attestation content. It cannot be<code>null 

          </code> . </p>
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation&text=Attestation" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Getter for the attestation mechanism.</p>

    <p></p>
  syntax: public Attestation getAttestation()
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.getAttestation()
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.setAttestation(Attestation attestation)
  name: setAttestation(Attestation attestation)
  nameWithType: EnrollmentGroup.setAttestation(Attestation attestation)
  parameters:
  - description: <p>the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation" data-throw-if-not-resolved="false" data-raw-source="Attestation"></xref> with the new attestation mechanism. It shall be <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref> or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref></p>
    name: attestation
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.Attestation&text=Attestation" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>If the provided attestation mechanism is<code>null 

          </code> or invalid. </p>
  summary: >-
    <p>Setter for the attestation.</p>

    <p>Attestation mechanism is mandatory parameter that provides the mechanism type and the necessary certificates.</p>

    <p>EnrollmentGroup only accept <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref> with the RootCertificates, or <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref> with Primary and Secondary Keys. You can create an <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref> by providing the <b>.pem</b> content to <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation.createFromRootCertificates(String,String)" data-throw-if-not-resolved="false" data-raw-source="X509Attestation#createFromRootCertificates(String, String)"></xref>. You can create a <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref> by providing the Primary and Secondary Keys in Base64 format.</p>

    <p></p>
  syntax: public void setAttestation(Attestation attestation)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.setAttestation(Attestation)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.setAttestation(AttestationMechanism attestationMechanism)
  name: setAttestation(AttestationMechanism attestationMechanism)
  nameWithType: EnrollmentGroup.setAttestation(AttestationMechanism attestationMechanism)
  parameters:
  - description: >-
      <p>the<code>AttestationMechanism 

          </code> with the new attestation mechanism. It can be `tpm`, `x509` or 'symmetricKey'. </p>
    name: attestationMechanism
    type: <xref href="com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism?alt=com.microsoft.azure.sdk.iot.provisioning.service.configs.AttestationMechanism&text=AttestationMechanism" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: >-
      <p>If the provided attestation mechanism is<code>null 

          </code> . </p>
  returns:
    type: <xref href="final+void?alt=final+void&text=final+void" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Setter for the attestation.</p>

    <p>Attestation mechanism is mandatory parameter that provides the mechanism type and the necessary keys/certificates</p>

    <p></p>

    <p></p>
  syntax: protected final void setAttestation(AttestationMechanism attestationMechanism)
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.setAttestation(AttestationMechanism)
- fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.toJsonElement()
  name: toJsonElement()
  nameWithType: EnrollmentGroup.toJsonElement()
  returns:
    description: >-
      <p>The<code>JsonElement 

          </code> with the content of this class. </p>
    type: <xref href="JsonElement?alt=JsonElement&text=JsonElement" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Serializer</p>

    <p>Creates a<code>JsonElement 

        </code> , which the content represents the information in this class and its subclasses in a JSON format.</p>

    <p>This is useful if the caller will integrate this JSON with jsons from other classes to generate a consolidated JSON. </p>

    <p></p>
  syntax: public JsonElement toJsonElement()
  uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup.toJsonElement()
nameWithType: EnrollmentGroup
syntax: public class EnrollmentGroup extends Serializable
type: class
uid: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
fullName: com.microsoft.azure.sdk.iot.provisioning.service.configs.EnrollmentGroup
name: EnrollmentGroup
package: com.microsoft.azure.sdk.iot.provisioning.service.configs
summary: >-
  <p>Representation of a single Device Provisioning Service enrollment group with a JSON serializer and deserializer.</p>

  <p>This object is used to send EnrollmentGroup information to the provisioning service, or receive EnrollmentGroup information from the provisioning service.</p>

  <p>To create or update an EnrollmentGroup on the provisioning service you should fill this object and call the public API <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.ProvisioningServiceClient.createOrUpdateEnrollmentGroup(EnrollmentGroup)" data-throw-if-not-resolved="false" data-raw-source="ProvisioningServiceClient#createOrUpdateEnrollmentGroup(EnrollmentGroup)"></xref>. The minimum information required by the provisioning service is the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="enrollmentGroupId"></xref> and the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="attestation"></xref>.</p>

  <p>To provision a device using EnrollmentGroup, it must contain a X509 chip with a signingCertificate for the <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.X509Attestation" data-throw-if-not-resolved="false" data-raw-source="X509Attestation"></xref> mechanism, or use <xref uid="com.microsoft.azure.sdk.iot.provisioning.service.configs.SymmetricKeyAttestation" data-throw-if-not-resolved="false" data-raw-source="SymmetricKeyAttestation"></xref> mechanism.</p>

  <p>The content of this class will be serialized in a JSON format and sent as a body of the rest API to the provisioning service.</p>

  <p>When serialized, an EnrollmentGroup will look like the following example: <pre><code>{

          "enrollmentGroupId":"validEnrollmentGroupId",

          "attestation":{

              "type":"x509",

              "signingCertificates":{

                  "primary":{

                      "certificate":"[valid certificate]"

                  }

              }

          },

          "iotHubHostName":"ContosoIoTHub.azure-devices.net",

          "provisioningStatus":"enabled"

      }

      </code></pre></p>

  <p>The content of this class can be filled by a JSON, received from the provisioning service, as result of a EnrollmentGroup operation like create, update, or query EnrollmentGroup.</p>

  <p>The following JSON is a sample of the EnrollmentGroup response, received from the provisioning service. <pre><code>{

          "enrollmentGroupId":"validEnrollmentGroupId",

          "attestation":{

              "type":"x509",

              "signingCertificates":{

                  "primary":{

                      "certificate":"[valid certificate]",

                      "info": {

                          "subjectName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                          "sha1Thumbprint": "0000000000000000000000000000000000",

                          "sha256Thumbprint": "validEnrollmentGroupId",

                          "issuerName": "CN=ROOT_00000000-0000-0000-0000-000000000000, OU=Azure IoT, O=MSFT, C=US",

                          "notBeforeUtc": "2017-11-14T12:34:18Z",

                          "notAfterUtc": "2017-11-20T12:34:18Z",

                          "serialNumber": "000000000000000000",

                          "version": 3

                      }

                  }

              }

          },

          "iotHubHostName":"ContosoIoTHub.azure-devices.net",

          "provisioningStatus":"enabled",

          "createdDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

          "lastUpdatedDateTimeUtc": "2017-09-28T16:29:42.3447817Z",

          "etag": "\"00000000-0000-0000-0000-00000000000\""

      }

      </code></pre></p>

  <p></p>
metadata: {}
