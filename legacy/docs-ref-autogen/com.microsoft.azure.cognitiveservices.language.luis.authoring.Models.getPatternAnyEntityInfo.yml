### YamlMime:JavaMember
nameWithType: Models.getPatternAnyEntityInfo
type: method
members:
- fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityInfo(UUID appId, String versionId, UUID entityId)
  name: getPatternAnyEntityInfo(UUID appId, String versionId, UUID entityId)
  nameWithType: Models.getPatternAnyEntityInfo(UUID appId, String versionId, UUID entityId)
  parameters:
  - description: <p>The application ID. </p>
    name: appId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  - description: <p>The version ID. </p>
    name: versionId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The entity extractor ID. </p>
    name: entityId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  - type: <xref href="ErrorResponseException?alt=ErrorResponseException&text=ErrorResponseException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if the request is rejected by server </p>
  - type: <xref href="RuntimeException?alt=RuntimeException&text=RuntimeException" data-throw-if-not-resolved="False"/>
    description: <p>all other wrapped checked exceptions if the request fails to be sent </p>
  returns:
    description: <p>the PatternAnyEntityExtractor object if successful. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PatternAnyEntityExtractor?alt=com.microsoft.azure.cognitiveservices.language.luis.authoring.models.PatternAnyEntityExtractor&text=PatternAnyEntityExtractor" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets information about the application version's Pattern.Any model.</p>

    <p></p>
  syntax: public PatternAnyEntityExtractor getPatternAnyEntityInfo(UUID appId, String versionId, UUID entityId)
  uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityInfo(UUID,String,UUID)
uid: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityInfo*
fullName: com.microsoft.azure.cognitiveservices.language.luis.authoring.Models.getPatternAnyEntityInfo(UUID appId, String versionId, UUID entityId)
name: getPatternAnyEntityInfo(UUID appId, String versionId, UUID entityId)
package: com.microsoft.azure.cognitiveservices.language.luis.authoring
metadata: {}
