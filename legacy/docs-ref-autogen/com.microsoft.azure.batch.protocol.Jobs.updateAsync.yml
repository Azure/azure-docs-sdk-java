### YamlMime:JavaMember
nameWithType: Jobs.updateAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  parameters:
  - description: <p>The ID of the job whose properties you want to update. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: jobUpdateParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
  uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter)
- fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the job whose properties you want to update. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: jobUpdateParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,final ServiceCallback<Void>)
- fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  parameters:
  - description: <p>The ID of the job whose properties you want to update. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: jobUpdateParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobUpdateOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.JobUpdateOptions&text=JobUpdateOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceResponseWithHeaders"></xref> object if successful. </p>
    type: <xref href="Observable%3CVoid%3E?alt=Observable%3CVoid%3E&text=Observable%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax: public Observable<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions)
  uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions)
- fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  nameWithType: Jobs.updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  parameters:
  - description: <p>The ID of the job whose properties you want to update. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The parameters for the request. </p>
    name: jobUpdateParameter
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobUpdateParameter?alt=com.microsoft.azure.batch.protocol.models.JobUpdateParameter&text=JobUpdateParameter" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobUpdateOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobUpdateOptions?alt=com.microsoft.azure.batch.protocol.models.JobUpdateOptions&text=JobUpdateOptions" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: <xref href="final+ServiceCallback%3CVoid%3E?alt=final+ServiceCallback%3CVoid%3E&text=final+ServiceCallback%3CVoid%3E" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false" data-raw-source="ServiceFuture"></xref> object </p>
    type: <xref href="ServiceFuture%3CVoid%3E?alt=ServiceFuture%3CVoid%3E&text=ServiceFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Updates the properties of the specified job. This fully replaces all the updatable properties of the job. For example, if the job has constraints associated with it and if constraints is not specified with this request, then the Batch service will remove the existing constraints.</p>

    <p></p>
  syntax: public ServiceFuture<Void> updateAsync(String jobId, JobUpdateParameter jobUpdateParameter, JobUpdateOptions jobUpdateOptions, final ServiceCallback<Void> serviceCallback)
  uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync(String,JobUpdateParameter,JobUpdateOptions,final ServiceCallback<Void>)
uid: com.microsoft.azure.batch.protocol.Jobs.updateAsync*
fullName: com.microsoft.azure.batch.protocol.Jobs.updateAsync
name: updateAsync(String jobId, JobUpdateParameter jobUpdateParameter)
package: com.microsoft.azure.batch.protocol
metadata: {}
