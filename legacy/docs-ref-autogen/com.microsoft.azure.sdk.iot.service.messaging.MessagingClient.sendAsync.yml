### YamlMime:JavaMember
nameWithType: MessagingClient.sendAsync
type: method
members:
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync(String deviceId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  name: sendAsync(String deviceId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  nameWithType: MessagingClient.sendAsync(String deviceId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  parameters:
  - description: <p>the Id of the device to send the cloud to device message to. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the message to send to the device. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.Message?alt=com.microsoft.azure.sdk.iot.service.messaging.Message&text=Message" data-throw-if-not-resolved="False"/>
  - description: <p>the callback that will be executed when the message has either successfully been sent, or has failed to send. May be null if you don't care if the sent message is acknowledged by the service. </p>
    name: onMessageSentCallback
    type: Consumer&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.SendResult?alt=com.microsoft.azure.sdk.iot.service.messaging.SendResult&text=SendResult" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>user defined context that will be provided in the onMessageSentCallback callback when it executes. May be null. </p>
    name: context
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if the client has not been opened yet, or is closed for any other reason such as connectivity loss. </p>
  summary: >-
    <p>Asynchronously send a cloud to device message to the device with the provided device Id. </p>

    <p>Unlike the synchronous version of this function, this function does not throw any exceptions. Instead, any exception encountered while sending the message will be provided in the <xref uid="com.microsoft.azure.sdk.iot.service.messaging.SendResult" data-throw-if-not-resolved="false" data-raw-source="SendResult"></xref> provided in the onMessageSentCallback. To see an example of how this looks, see the messaging client performance sample in this repo. </p>

    <p></p>
  syntax: public void sendAsync(String deviceId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync(String,Message,Consumer<SendResult>,Object)
- fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync(String deviceId, String moduleId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  name: sendAsync(String deviceId, String moduleId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  nameWithType: MessagingClient.sendAsync(String deviceId, String moduleId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  parameters:
  - description: <p>the Id of the device that contains the module that the message is being sent to. </p>
    name: deviceId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the Id of the module to send the cloud to device message to. </p>
    name: moduleId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the message to send to the device. </p>
    name: message
    type: <xref href="com.microsoft.azure.sdk.iot.service.messaging.Message?alt=com.microsoft.azure.sdk.iot.service.messaging.Message&text=Message" data-throw-if-not-resolved="False"/>
  - description: <p>the callback that will be executed when the message has either successfully been sent, or has failed to send. May be null if you don't care if the sent message is acknowledged by the service. </p>
    name: onMessageSentCallback
    type: Consumer&lt;<xref href="com.microsoft.azure.sdk.iot.service.messaging.SendResult?alt=com.microsoft.azure.sdk.iot.service.messaging.SendResult&text=SendResult" data-throw-if-not-resolved="False"/>&gt;
  - description: <p>user defined context that will be provided in the onMessageSentCallback callback when it executes. May be null. </p>
    name: context
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalStateException?alt=IllegalStateException&text=IllegalStateException" data-throw-if-not-resolved="False"/>
    description: <p>if the client has not been opened yet, or is closed for any other reason such as connectivity loss. </p>
  summary: >-
    <p>Asynchronously send a cloud to device message to the module with the provided module id on the device with the provided device Id. </p>

    <p>Unlike the synchronous version of this function, this function does not throw any exceptions. Instead, any exception encountered while sending the message will be provided in the <xref uid="com.microsoft.azure.sdk.iot.service.messaging.SendResult" data-throw-if-not-resolved="false" data-raw-source="SendResult"></xref> provided in the onMessageSentCallback. To see an example of how this looks, see the messaging client performance sample in this repo. </p>

    <p></p>
  syntax: public void sendAsync(String deviceId, String moduleId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
  uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync(String,String,Message,Consumer<SendResult>,Object)
uid: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync*
fullName: com.microsoft.azure.sdk.iot.service.messaging.MessagingClient.sendAsync
name: sendAsync(String deviceId, Message message, Consumer<SendResult> onMessageSentCallback, Object context)
package: com.microsoft.azure.sdk.iot.service.messaging
metadata: {}
