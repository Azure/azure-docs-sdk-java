### YamlMime:JavaMember
nameWithType: MetricBaselinesInner.getAsync
type: method
members:
- fullName: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String resourceUri, String metricName)
  name: getAsync(String resourceUri, String metricName)
  nameWithType: MetricBaselinesInner.getAsync(String resourceUri, String metricName)
  parameters:
  - description: '<p>The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1 </p>'
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the metric to retrieve the baseline for. </p>
    name: metricName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BaselineResponseInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.BaselineResponseInner?alt=com.microsoft.azure.management.monitor.implementation.BaselineResponseInner&text=BaselineResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Gets the baseline values for a specific metric**.</p>

    <p></p>
  syntax: public Observable<BaselineResponseInner> getAsync(String resourceUri, String metricName)
  uid: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String,String)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String resourceUri, String metricName, final ServiceCallback<BaselineResponseInner> serviceCallback)
  name: getAsync(String resourceUri, String metricName, final ServiceCallback<BaselineResponseInner> serviceCallback)
  nameWithType: MetricBaselinesInner.getAsync(String resourceUri, String metricName, final ServiceCallback<BaselineResponseInner> serviceCallback)
  parameters:
  - description: '<p>The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1 </p>'
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the metric to retrieve the baseline for. </p>
    name: metricName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.BaselineResponseInner?alt=com.microsoft.azure.management.monitor.implementation.BaselineResponseInner&text=BaselineResponseInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.BaselineResponseInner?alt=com.microsoft.azure.management.monitor.implementation.BaselineResponseInner&text=BaselineResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Gets the baseline values for a specific metric**.</p>

    <p></p>
  syntax: public ServiceFuture<BaselineResponseInner> getAsync(String resourceUri, String metricName, final ServiceCallback<BaselineResponseInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String,String,final ServiceCallback<BaselineResponseInner>)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType)
  name: getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType)
  nameWithType: MetricBaselinesInner.getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType)
  parameters:
  - description: '<p>The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1 </p>'
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the metric to retrieve the baseline for. </p>
    name: metricName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The aggregation type of the metric to retrieve the baseline for. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of sensitivities (comma separated) to retrieve. </p>
    name: sensitivities
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Allows retrieving only metadata of the baseline. On data request all information is retrieved. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the BaselineResponseInner object </p>
    type: Observable&lt;<xref href="com.microsoft.azure.management.monitor.implementation.BaselineResponseInner?alt=com.microsoft.azure.management.monitor.implementation.BaselineResponseInner&text=BaselineResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Gets the baseline values for a specific metric**.</p>

    <p></p>
  syntax: public Observable<BaselineResponseInner> getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType)
  uid: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String,String,String,Period,String,String,ResultType)
- fullName: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType, final ServiceCallback<BaselineResponseInner> serviceCallback)
  name: getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType, final ServiceCallback<BaselineResponseInner> serviceCallback)
  nameWithType: MetricBaselinesInner.getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType, final ServiceCallback<BaselineResponseInner> serviceCallback)
  parameters:
  - description: '<p>The identifier of the resource. It has the following structure: subscriptions/{subscriptionName}/resourceGroups/{resourceGroupName}/providers/{providerName}/{resourceName}. For example: subscriptions/b368ca2f-e298-46b7-b0ab-012281956afa/resourceGroups/vms/providers/Microsoft.Compute/virtualMachines/vm1 </p>'
    name: resourceUri
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The name of the metric to retrieve the baseline for. </p>
    name: metricName
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The timespan of the query. It is a string with the following format 'startDateTime_ISO/endDateTime_ISO'. </p>
    name: timespan
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The interval (i.e. timegrain) of the query. </p>
    name: interval
    type: <xref href="Period?alt=Period&text=Period" data-throw-if-not-resolved="False"/>
  - description: <p>The aggregation type of the metric to retrieve the baseline for. </p>
    name: aggregation
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>The list of sensitivities (comma separated) to retrieve. </p>
    name: sensitivities
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: "<p>Allows retrieving only metadata of the baseline. On data request all information is retrieved. Possible values include: 'Data', 'Metadata' </p>"
    name: resultType
    type: <xref href="com.microsoft.azure.management.monitor.ResultType?alt=com.microsoft.azure.management.monitor.ResultType&text=ResultType" data-throw-if-not-resolved="False"/>
  - description: <p>the async ServiceCallback to handle successful and failed responses. </p>
    name: serviceCallback
    type: final ServiceCallback&lt;<xref href="com.microsoft.azure.management.monitor.implementation.BaselineResponseInner?alt=com.microsoft.azure.management.monitor.implementation.BaselineResponseInner&text=BaselineResponseInner" data-throw-if-not-resolved="False"/>&gt;
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the <xref uid="" data-throw-if-not-resolved="false">ServiceFuture</xref> object </p>
    type: ServiceFuture&lt;<xref href="com.microsoft.azure.management.monitor.implementation.BaselineResponseInner?alt=com.microsoft.azure.management.monitor.implementation.BaselineResponseInner&text=BaselineResponseInner" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>**Gets the baseline values for a specific metric**.</p>

    <p></p>
  syntax: public ServiceFuture<BaselineResponseInner> getAsync(String resourceUri, String metricName, String timespan, Period interval, String aggregation, String sensitivities, ResultType resultType, final ServiceCallback<BaselineResponseInner> serviceCallback)
  uid: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String,String,String,Period,String,String,ResultType,final ServiceCallback<BaselineResponseInner>)
uid: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync*
fullName: com.microsoft.azure.management.monitor.implementation.MetricBaselinesInner.getAsync(String resourceUri, String metricName)
name: getAsync(String resourceUri, String metricName)
package: com.microsoft.azure.management.monitor.implementation
metadata: {}
