### YamlMime:JavaType
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
- <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.NameAndUserDataContract?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.NameAndUserDataContract&text=NameAndUserDataContract" data-throw-if-not-resolved="False"/>
inheritedMembers:
- com.microsoft.azure.cognitiveservices.vision.faceapi.models.NameAndUserDataContract.name()
- com.microsoft.azure.cognitiveservices.vision.faceapi.models.NameAndUserDataContract.userData()
- com.microsoft.azure.cognitiveservices.vision.faceapi.models.NameAndUserDataContract.withName(String)
- com.microsoft.azure.cognitiveservices.vision.faceapi.models.NameAndUserDataContract.withUserData(String)
methods:
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.persistedFaceIds()
  name: persistedFaceIds()
  nameWithType: Person.persistedFaceIds()
  returns:
    description: <p>the persistedFaceIds value </p>
    type: <xref href="List%3CUUID%3E?alt=List%3CUUID%3E&text=List%3CUUID%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the persistedFaceIds value.</p>

    <p></p>
  syntax: public List<UUID> persistedFaceIds()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.persistedFaceIds()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.personId()
  name: personId()
  nameWithType: Person.personId()
  returns:
    description: <p>the personId value </p>
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Get the personId value.</p>

    <p></p>
  syntax: public UUID personId()
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.personId()
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.withPersistedFaceIds(List<UUID> persistedFaceIds)
  name: withPersistedFaceIds(List<UUID> persistedFaceIds)
  nameWithType: Person.withPersistedFaceIds(List<UUID> persistedFaceIds)
  parameters:
  - description: <p>the persistedFaceIds value to set </p>
    name: persistedFaceIds
    type: <xref href="List%3CUUID%3E?alt=List%3CUUID%3E&text=List%3CUUID%3E" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Person object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person&text=Person" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the persistedFaceIds value.</p>

    <p></p>
  syntax: public Person withPersistedFaceIds(List<UUID> persistedFaceIds)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.withPersistedFaceIds(List<UUID>)
- fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.withPersonId(UUID personId)
  name: withPersonId(UUID personId)
  nameWithType: Person.withPersonId(UUID personId)
  parameters:
  - description: <p>the personId value to set </p>
    name: personId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>the Person object itself. </p>
    type: <xref href="com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person?alt=com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person&text=Person" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Set the personId value.</p>

    <p></p>
  syntax: public Person withPersonId(UUID personId)
  uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person.withPersonId(UUID)
nameWithType: Person
syntax: public class Person extends NameAndUserDataContract
type: class
uid: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person
fullName: com.microsoft.azure.cognitiveservices.vision.faceapi.models.Person
name: Person
package: com.microsoft.azure.cognitiveservices.vision.faceapi.models
summary: <p>Person object. </p>
metadata: {}
