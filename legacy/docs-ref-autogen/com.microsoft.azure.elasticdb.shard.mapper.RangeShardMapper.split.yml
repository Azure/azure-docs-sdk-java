### YamlMime:JavaMember
nameWithType: RangeShardMapper.split
type: method
members:
- fullName: com.microsoft.azure.elasticdb.shard.mapper.RangeShardMapper.split(RangeMapping existingMapping, Object splitAt, UUID lockOwnerId)
  name: split(RangeMapping existingMapping, Object splitAt, UUID lockOwnerId)
  nameWithType: RangeShardMapper.split(RangeMapping existingMapping, Object splitAt, UUID lockOwnerId)
  parameters:
  - description: <p>Given existing mapping. </p>
    name: existingMapping
    type: <xref href="com.microsoft.azure.elasticdb.shard.base.RangeMapping?alt=com.microsoft.azure.elasticdb.shard.base.RangeMapping&text=RangeMapping" data-throw-if-not-resolved="False"/>
  - description: <p>Split point. </p>
    name: splitAt
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  - description: <p>Lock owner id of this mapping </p>
    name: lockOwnerId
    type: <xref href="UUID?alt=UUID&text=UUID" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>Read-only collection of 2 new mappings thus created. </p>
    type: final List&lt;<xref href="com.microsoft.azure.elasticdb.shard.base.RangeMapping?alt=com.microsoft.azure.elasticdb.shard.base.RangeMapping&text=RangeMapping" data-throw-if-not-resolved="False"/>&gt;
  summary: >-
    <p>Splits the given mapping into 2 at the given key. The new mappings point to the same shard as the existing mapping.</p>

    <p></p>
  syntax: public final List<RangeMapping> split(RangeMapping existingMapping, Object splitAt, UUID lockOwnerId)
  uid: com.microsoft.azure.elasticdb.shard.mapper.RangeShardMapper.split(RangeMapping,Object,UUID)
uid: com.microsoft.azure.elasticdb.shard.mapper.RangeShardMapper.split*
fullName: com.microsoft.azure.elasticdb.shard.mapper.RangeShardMapper.split(RangeMapping existingMapping, Object splitAt, UUID lockOwnerId)
name: split(RangeMapping existingMapping, Object splitAt, UUID lockOwnerId)
package: com.microsoft.azure.elasticdb.shard.mapper
metadata: {}
