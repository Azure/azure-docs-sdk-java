### YamlMime:JavaMember
nameWithType: FabricClientSettings.setKeepAliveInterval
type: method
members:
- fullName: system.fabric.FabricClientSettings.setKeepAliveInterval(Duration keepAliveInterval)
  name: setKeepAliveInterval(Duration keepAliveInterval)
  nameWithType: FabricClientSettings.setKeepAliveInterval(Duration keepAliveInterval)
  parameters:
  - description: <p>The interval at which the <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will ping the connected endpoint. </p>
    name: keepAliveInterval
    type: <xref href="Duration?alt=Duration&text=Duration" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sets the interval at which the <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will ping the connected endpoint.</p>

    <p>

      <b>Remarks:</b>The default value of this property is 0 seconds. This property can't be updated after the <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> is opened. Setting this property will throw a <xref uid="" data-throw-if-not-resolved="false">java.lang.IllegalArgumentException</xref> exception. <xref uid="system.fabric.FabricClient" data-throw-if-not-resolved="false">system.fabric.FabricClient</xref> will continue pinging as long as it has pending operations. </p>
  syntax: public void setKeepAliveInterval(Duration keepAliveInterval)
  uid: system.fabric.FabricClientSettings.setKeepAliveInterval(Duration)
uid: system.fabric.FabricClientSettings.setKeepAliveInterval*
fullName: system.fabric.FabricClientSettings.setKeepAliveInterval(Duration keepAliveInterval)
name: setKeepAliveInterval(Duration keepAliveInterval)
package: system.fabric
metadata: {}
