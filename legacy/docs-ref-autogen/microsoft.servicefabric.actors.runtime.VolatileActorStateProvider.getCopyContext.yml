### YamlMime:JavaMember
nameWithType: VolatileActorStateProvider.getCopyContext
type: method
members:
- fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyContext()
  name: getCopyContext()
  nameWithType: VolatileActorStateProvider.getCopyContext()
  overridden: system.fabric.StateProvider.getCopyContext()
  returns:
    description: <p>Returns <xref uid="" data-throw-if-not-resolved="false">OperationDataStream</xref>. </p>
    type: <xref href="system.fabric.OperationDataStream?alt=system.fabric.OperationDataStream&text=OperationDataStream" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Obtains context on a Secondary replica after it is created and opened to send context to the Primary replica.</p>

    <p>

      <b>Remarks:</b>The Primary replica analyzes the context and sends back state via <xref uid="system.fabric.StateProvider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref>. <xref uid="system.fabric.StateProvider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> is called on newly created, idle Secondary replicas and provides a mechanism to asynchronously establish a bidirectional conversation with the Primary replica. The Secondary replica sends <xref uid="" data-throw-if-not-resolved="false">OperationData</xref> objects with which the Primary replica can determine the progress of collecting context on the Secondary replica. The Primary replica responds by sending the required state back. See <xref uid="system.fabric.StateProvider.getCopyState(SequenceNumber,OperationDataStream)" data-throw-if-not-resolved="false">StateProvider#getCopyState(SequenceNumber, OperationDataStream)</xref> at the Primary replica for the other half of the exchange. For in-memory services, the <xref uid="system.fabric.StateProvider.getCopyContext()" data-throw-if-not-resolved="false">StateProvider#getCopyContext()</xref> method is not called, as the state of the Secondary replicas is known (they are empty and will require all of the state). </p>
  syntax: public OperationDataStream getCopyContext()
  uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyContext()
uid: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyContext*
fullName: microsoft.servicefabric.actors.runtime.VolatileActorStateProvider.getCopyContext()
name: getCopyContext()
package: microsoft.servicefabric.actors.runtime
metadata: {}
