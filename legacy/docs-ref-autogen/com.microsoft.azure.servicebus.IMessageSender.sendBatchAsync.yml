### YamlMime:JavaMember
nameWithType: IMessageSender.sendBatchAsync
type: method
members:
- fullName: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
  name: sendBatchAsync(Collection<? extends IMessage> messages)
  nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
  parameters:
  - description: <p>collection of messages to be sent to the entity </p>
    name: messages
    type: Collection&lt;? extends <xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>&gt;
  returns:
    description: <p>a CompletableFuture representing the pending send </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the batch is sent to the entity.</p>

    <p></p>
  syntax: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages)
  uid: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage>)
- fullName: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)
  name: sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)
  nameWithType: IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)
  parameters:
  - description: <p>collection of messages to be sent to the entity </p>
    name: messages
    type: Collection&lt;? extends <xref href="com.microsoft.azure.servicebus.IMessage?alt=com.microsoft.azure.servicebus.IMessage&text=IMessage" data-throw-if-not-resolved="False"/>&gt;
  - description: >-
      <p>

        <xref uid="com.microsoft.azure.servicebus.TransactionContext" data-throw-if-not-resolved="false">TransactionContext</xref> which this operation should enlist to. </p>
    name: transaction
    type: <xref href="com.microsoft.azure.servicebus.TransactionContext?alt=com.microsoft.azure.servicebus.TransactionContext&text=TransactionContext" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>a CompletableFuture representing the pending send </p>
    type: <xref href="CompletableFuture%3CVoid%3E?alt=CompletableFuture<Void>&text=CompletableFuture%3CVoid%3E" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Sends a batch of messages to the Azure Service Bus entity this sender is connected to. This is an asynchronous method returning a CompletableFuture which completes when the batch is sent to the entity.</p>

    <p></p>
  syntax: public CompletableFuture<Void> sendBatchAsync(Collection<? extends IMessage> messages, TransactionContext transaction)
  uid: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage>,TransactionContext)
uid: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync*
fullName: com.microsoft.azure.servicebus.IMessageSender.sendBatchAsync(Collection<? extends IMessage> messages)
name: sendBatchAsync(Collection<? extends IMessage> messages)
package: com.microsoft.azure.servicebus
metadata: {}
