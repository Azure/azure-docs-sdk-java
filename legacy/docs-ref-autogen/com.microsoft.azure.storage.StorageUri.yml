### YamlMime:JavaType
constructors:
- fullName: com.microsoft.azure.storage.StorageUri.StorageUri(URI primaryUri)
  name: StorageUri(URI primaryUri)
  nameWithType: StorageUri.StorageUri(URI primaryUri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object for the primary URI. </p>
    name: primaryUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> class using the specified URI.</p>

    <p></p>
  syntax: public StorageUri(URI primaryUri)
  uid: com.microsoft.azure.storage.StorageUri.StorageUri(URI)
- fullName: com.microsoft.azure.storage.StorageUri.StorageUri(URI primaryUri, URI secondaryUri)
  name: StorageUri(URI primaryUri, URI secondaryUri)
  nameWithType: StorageUri.StorageUri(URI primaryUri, URI secondaryUri)
  parameters:
  - description: <p>A <code>java.net.URI</code> object for the primary URI. </p>
    name: primaryUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  - description: <p>A <code>java.net.URI</code> object for the secondary URI. </p>
    name: secondaryUri
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Initializes a new instance of the <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> class using the specified primary and secondary URIs.</p>

    <p></p>
  syntax: public StorageUri(URI primaryUri, URI secondaryUri)
  uid: com.microsoft.azure.storage.StorageUri.StorageUri(URI,URI)
inheritances:
- <xref href="java.lang.Object" data-throw-if-not-resolved="False"/>
methods:
- fullName: com.microsoft.azure.storage.StorageUri.equals(Object obj)
  name: equals(Object obj)
  nameWithType: StorageUri.equals(Object obj)
  parameters:
  - name: obj
    type: <xref href="Object?alt=Object&text=Object" data-throw-if-not-resolved="False"/>
  returns:
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  syntax: public boolean equals(Object obj)
  uid: com.microsoft.azure.storage.StorageUri.equals(Object)
- fullName: com.microsoft.azure.storage.StorageUri.equals(StorageUri other)
  name: equals(StorageUri other)
  nameWithType: StorageUri.equals(StorageUri other)
  parameters:
  - description: <p>A reference to a <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object to compare.</p>
    name: other
    type: <xref href="com.microsoft.azure.storage.StorageUri?alt=com.microsoft.azure.storage.StorageUri&text=StorageUri" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <code>true</code> if this object is the same as the other argument; otherwise <code>false</code>. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates whether a <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object is equal to the current <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object.</p>

    <p></p>
  syntax: public boolean equals(StorageUri other)
  uid: com.microsoft.azure.storage.StorageUri.equals(StorageUri)
- fullName: com.microsoft.azure.storage.StorageUri.getPrimaryUri()
  name: getPrimaryUri()
  nameWithType: StorageUri.getPrimaryUri()
  returns:
    description: <p>A <code>java.net.URI</code> object for the primary URI. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the endpoint for the primary location for the storage account.</p>

    <p></p>
  syntax: public URI getPrimaryUri()
  uid: com.microsoft.azure.storage.StorageUri.getPrimaryUri()
- fullName: com.microsoft.azure.storage.StorageUri.getQuery()
  name: getQuery()
  nameWithType: StorageUri.getQuery()
  returns:
    description: <p>A <code>String</code> which contains the decoded query component of the current <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref>, or <code>null</code> if the query is undefined. </p>
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Returns the decoded query component of this <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> object.</p>

    <p></p>
  syntax: public String getQuery()
  uid: com.microsoft.azure.storage.StorageUri.getQuery()
- fullName: com.microsoft.azure.storage.StorageUri.getSecondaryUri()
  name: getSecondaryUri()
  nameWithType: StorageUri.getSecondaryUri()
  returns:
    description: <p>A <code>java.net.URI</code> object for the secondary URI. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the endpoint for the secondary location for the storage account.</p>

    <p></p>
  syntax: public URI getSecondaryUri()
  uid: com.microsoft.azure.storage.StorageUri.getSecondaryUri()
- fullName: com.microsoft.azure.storage.StorageUri.getUri(StorageLocation location)
  name: getUri(StorageLocation location)
  nameWithType: StorageUri.getUri(StorageLocation location)
  parameters:
  - description: <p>The <code>StorageLocation</code> object for which to retrieve a URI.</p>
    name: location
    type: <xref href="com.microsoft.azure.storage.StorageLocation?alt=com.microsoft.azure.storage.StorageLocation&text=StorageLocation" data-throw-if-not-resolved="False"/>
  returns:
    description: <p>A <code>java.net.URI</code> object for the specified <code>StorageLocation</code>. </p>
    type: <xref href="URI?alt=URI&text=URI" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Gets the URI for a specified <xref uid="com.microsoft.azure.storage.StorageLocation" data-throw-if-not-resolved="false" data-raw-source="StorageLocation"></xref>.</p>

    <p></p>
  syntax: public URI getUri(StorageLocation location)
  uid: com.microsoft.azure.storage.StorageUri.getUri(StorageLocation)
- fullName: com.microsoft.azure.storage.StorageUri.hashCode()
  name: hashCode()
  nameWithType: StorageUri.hashCode()
  returns:
    type: <xref href="int?alt=int&text=int" data-throw-if-not-resolved="False"/>
  syntax: public int hashCode()
  uid: com.microsoft.azure.storage.StorageUri.hashCode()
- fullName: com.microsoft.azure.storage.StorageUri.isAbsolute()
  name: isAbsolute()
  nameWithType: StorageUri.isAbsolute()
  returns:
    description: >-
      <p>

        <code>true</code> if the current <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> is absolute; otherwise <code>false</code>. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Indicates whether this <xref uid="com.microsoft.azure.storage.StorageUri" data-throw-if-not-resolved="false" data-raw-source="StorageUri"></xref> is absolute.</p>

    <p></p>
  syntax: public boolean isAbsolute()
  uid: com.microsoft.azure.storage.StorageUri.isAbsolute()
- fullName: com.microsoft.azure.storage.StorageUri.toString()
  name: toString()
  nameWithType: StorageUri.toString()
  returns:
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  syntax: public String toString()
  uid: com.microsoft.azure.storage.StorageUri.toString()
- fullName: com.microsoft.azure.storage.StorageUri.validateLocationMode(LocationMode mode)
  name: validateLocationMode(LocationMode mode)
  nameWithType: StorageUri.validateLocationMode(LocationMode mode)
  parameters:
  - description: <p>The <code>LocationMode</code> to validate.</p>
    name: mode
    type: <xref href="com.microsoft.azure.storage.LocationMode?alt=com.microsoft.azure.storage.LocationMode&text=LocationMode" data-throw-if-not-resolved="False"/>
  returns:
    description: >-
      <p>

        <code>true</code> if a URI exists for the specified mode; otherwise <code>false</code>. </p>
    type: <xref href="boolean?alt=boolean&text=boolean" data-throw-if-not-resolved="False"/>
  summary: >-
    <p>Validate that a URI exists for the specified .</p>

    <p></p>
  syntax: public boolean validateLocationMode(LocationMode mode)
  uid: com.microsoft.azure.storage.StorageUri.validateLocationMode(LocationMode)
nameWithType: StorageUri
syntax: public class StorageUri
type: class
uid: com.microsoft.azure.storage.StorageUri
fullName: com.microsoft.azure.storage.StorageUri
name: StorageUri
package: com.microsoft.azure.storage
summary: <p>Holds a list of URIs that represents the storage resource. </p>
metadata: {}
