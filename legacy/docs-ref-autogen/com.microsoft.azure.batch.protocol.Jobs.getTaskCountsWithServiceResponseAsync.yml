### YamlMime:JavaMember
nameWithType: Jobs.getTaskCountsWithServiceResponseAsync
type: method
members:
- fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId)
  name: getTaskCountsWithServiceResponseAsync(String jobId)
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync(String jobId)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the TaskCounts object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders&text=JobGetTaskCountsHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<TaskCounts, JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId)
  uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String)
- fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  name: getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  nameWithType: Jobs.getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  parameters:
  - description: <p>The ID of the job. </p>
    name: jobId
    type: <xref href="String?alt=String&text=String" data-throw-if-not-resolved="False"/>
  - description: <p>Additional parameters for the operation </p>
    name: jobGetTaskCountsOptions
    type: <xref href="com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsOptions&text=JobGetTaskCountsOptions" data-throw-if-not-resolved="False"/>
  exceptions:
  - type: <xref href="IllegalArgumentException?alt=IllegalArgumentException&text=IllegalArgumentException" data-throw-if-not-resolved="False"/>
    description: <p>thrown if parameters fail the validation </p>
  returns:
    description: <p>the observable to the TaskCounts object </p>
    type: Observable&lt;ServiceResponseWithHeaders&lt;<xref href="com.microsoft.azure.batch.protocol.models.TaskCounts?alt=com.microsoft.azure.batch.protocol.models.TaskCounts&text=TaskCounts" data-throw-if-not-resolved="False"/>, <xref href="com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders?alt=com.microsoft.azure.batch.protocol.models.JobGetTaskCountsHeaders&text=JobGetTaskCountsHeaders" data-throw-if-not-resolved="False"/>&gt;&gt;
  summary: >-
    <p>Gets the task counts for the specified job. Task counts provide a count of the tasks by active, running or completed task state, and a count of tasks which succeeded or failed. Tasks in the preparing state are counted as running.</p>

    <p></p>
  syntax: public Observable<ServiceResponseWithHeaders<TaskCounts, JobGetTaskCountsHeaders>> getTaskCountsWithServiceResponseAsync(String jobId, JobGetTaskCountsOptions jobGetTaskCountsOptions)
  uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String,JobGetTaskCountsOptions)
uid: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync*
fullName: com.microsoft.azure.batch.protocol.Jobs.getTaskCountsWithServiceResponseAsync(String jobId)
name: getTaskCountsWithServiceResponseAsync(String jobId)
package: com.microsoft.azure.batch.protocol
metadata: {}
